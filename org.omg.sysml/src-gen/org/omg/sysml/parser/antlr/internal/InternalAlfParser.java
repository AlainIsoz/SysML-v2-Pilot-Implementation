package org.omg.sysml.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.sysml.services.AlfGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalAlfParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
<<<<<<< Upstream, based on origin/ST6RI-75
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOCUMENTATION_COMMENT", "RULE_BOOLEAN_VALUE", "RULE_STRING_VALUE", "RULE_NATURAL_VALUE", "RULE_EXP_VALUE", "RULE_ID", "RULE_UNRESTRICTED_NAME", "RULE_STATEMENT_ANNOTATION", "RULE_INLINE_STATEMENT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "'import'", "'::'", "'.'", "'*'", "';'", "'as'", "'package'", "'{'", "'}'", "'is'", "'Class'", "'class'", "'datatype'", "'assoc'", "'behavior'", "'function'", "'feature'", "'abstract'", "'part'", "'portion'", "'port'", "'connector'", "'succession'", "'specializes'", "','", "'end'", "'('", "')'", "'step'", "'expr'", "'redefines'", "'='", "':'", "'compose'", "'any'", "'ordered'", "'nonunique'", "'['", "'..'", "']'", "'subsets'", "'to'", "'=>'", "'?'", "'??'", "'||'", "'&&'", "'|'", "'^'", "'&'", "'=='", "'!='", "'instanceof'", "'hastype'", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'/'", "'**'", "'@'", "'!'", "'~'", "'->'", "'allInstances'", "'null'", "'./'", "'public'", "'private'", "'protected'", "'packaged'", "'in'", "'out'", "'inout'"
=======
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOCUMENTATION_COMMENT", "RULE_BOOLEAN_VALUE", "RULE_STRING_VALUE", "RULE_NATURAL_VALUE", "RULE_EXP_VALUE", "RULE_ID", "RULE_UNRESTRICTED_NAME", "RULE_STATEMENT_ANNOTATION", "RULE_INLINE_STATEMENT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "'import'", "'::'", "'.'", "'*'", "';'", "'as'", "'package'", "'{'", "'}'", "'is'", "'Class'", "'class'", "'datatype'", "'assoc'", "'behavior'", "'function'", "'feature'", "'abstract'", "'part'", "'portion'", "'port'", "'connector'", "'specializes'", "','", "'end'", "'interaction'", "'('", "')'", "'step'", "'expr'", "'redefines'", "'='", "':'", "'compose'", "'any'", "'ordered'", "'nonunique'", "'['", "'..'", "']'", "'subsets'", "'to'", "'=>'", "'?'", "'??'", "'||'", "'&&'", "'|'", "'^'", "'&'", "'=='", "'!='", "'instanceof'", "'hastype'", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'/'", "'**'", "'@'", "'!'", "'~'", "'->'", "'allInstances'", "'null'", "'./'", "'public'", "'private'", "'protected'", "'packaged'", "'in'", "'out'", "'inout'"
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=9;
    public static final int RULE_NATURAL_VALUE=7;
    public static final int RULE_INLINE_STATEMENT=12;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=13;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_UNRESTRICTED_NAME=10;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_STRING_VALUE=6;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int RULE_STATEMENT_ANNOTATION=11;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int RULE_DOCUMENTATION_COMMENT=4;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int RULE_BOOLEAN_VALUE=5;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_SL_COMMENT=14;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=15;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int RULE_EXP_VALUE=8;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalAlfParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAlfParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAlfParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAlf.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private AlfGrammarAccess grammarAccess;

        public InternalAlfParser(TokenStream input, AlfGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "UnitDefinition";
       	}

       	@Override
       	protected AlfGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleUnitDefinition"
    // InternalAlf.g:72:1: entryRuleUnitDefinition returns [EObject current=null] : iv_ruleUnitDefinition= ruleUnitDefinition EOF ;
    public final EObject entryRuleUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitDefinition = null;


        try {
            // InternalAlf.g:72:55: (iv_ruleUnitDefinition= ruleUnitDefinition EOF )
            // InternalAlf.g:73:2: iv_ruleUnitDefinition= ruleUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitDefinition=ruleUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitDefinition"


    // $ANTLR start "ruleUnitDefinition"
    // InternalAlf.g:79:1: ruleUnitDefinition returns [EObject current=null] : (this_PackageUnitDefinition_0= rulePackageUnitDefinition | this_ClassUnitDefinition_1= ruleClassUnitDefinition | this_ObjectClassUnitDefinition_2= ruleObjectClassUnitDefinition | this_ValueClassUnitDefinition_3= ruleValueClassUnitDefinition | this_AssociationUnitDefinition_4= ruleAssociationUnitDefinition | this_InteractionUnitDefinition_5= ruleInteractionUnitDefinition | this_BehaviorUnitDefinition_6= ruleBehaviorUnitDefinition | this_FunctionUnitDefinition_7= ruleFunctionUnitDefinition | this_FeatureUnitDefinition_8= ruleFeatureUnitDefinition ) ;
    public final EObject ruleUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_PackageUnitDefinition_0 = null;

        EObject this_ClassUnitDefinition_1 = null;

        EObject this_ObjectClassUnitDefinition_2 = null;

        EObject this_ValueClassUnitDefinition_3 = null;

        EObject this_AssociationUnitDefinition_4 = null;

        EObject this_InteractionUnitDefinition_5 = null;

        EObject this_BehaviorUnitDefinition_6 = null;

        EObject this_FunctionUnitDefinition_7 = null;

        EObject this_FeatureUnitDefinition_8 = null;



        	enterRule();

        try {
            // InternalAlf.g:85:2: ( (this_PackageUnitDefinition_0= rulePackageUnitDefinition | this_ClassUnitDefinition_1= ruleClassUnitDefinition | this_ObjectClassUnitDefinition_2= ruleObjectClassUnitDefinition | this_ValueClassUnitDefinition_3= ruleValueClassUnitDefinition | this_AssociationUnitDefinition_4= ruleAssociationUnitDefinition | this_InteractionUnitDefinition_5= ruleInteractionUnitDefinition | this_BehaviorUnitDefinition_6= ruleBehaviorUnitDefinition | this_FunctionUnitDefinition_7= ruleFunctionUnitDefinition | this_FeatureUnitDefinition_8= ruleFeatureUnitDefinition ) )
            // InternalAlf.g:86:2: (this_PackageUnitDefinition_0= rulePackageUnitDefinition | this_ClassUnitDefinition_1= ruleClassUnitDefinition | this_ObjectClassUnitDefinition_2= ruleObjectClassUnitDefinition | this_ValueClassUnitDefinition_3= ruleValueClassUnitDefinition | this_AssociationUnitDefinition_4= ruleAssociationUnitDefinition | this_InteractionUnitDefinition_5= ruleInteractionUnitDefinition | this_BehaviorUnitDefinition_6= ruleBehaviorUnitDefinition | this_FunctionUnitDefinition_7= ruleFunctionUnitDefinition | this_FeatureUnitDefinition_8= ruleFeatureUnitDefinition )
            {
            // InternalAlf.g:86:2: (this_PackageUnitDefinition_0= rulePackageUnitDefinition | this_ClassUnitDefinition_1= ruleClassUnitDefinition | this_ObjectClassUnitDefinition_2= ruleObjectClassUnitDefinition | this_ValueClassUnitDefinition_3= ruleValueClassUnitDefinition | this_AssociationUnitDefinition_4= ruleAssociationUnitDefinition | this_InteractionUnitDefinition_5= ruleInteractionUnitDefinition | this_BehaviorUnitDefinition_6= ruleBehaviorUnitDefinition | this_FunctionUnitDefinition_7= ruleFunctionUnitDefinition | this_FeatureUnitDefinition_8= ruleFeatureUnitDefinition )
            int alt1=9;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // InternalAlf.g:87:3: this_PackageUnitDefinition_0= rulePackageUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getPackageUnitDefinitionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PackageUnitDefinition_0=rulePackageUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PackageUnitDefinition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAlf.g:99:3: this_ClassUnitDefinition_1= ruleClassUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getClassUnitDefinitionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassUnitDefinition_1=ruleClassUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassUnitDefinition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAlf.g:111:3: this_ObjectClassUnitDefinition_2= ruleObjectClassUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getObjectClassUnitDefinitionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectClassUnitDefinition_2=ruleObjectClassUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ObjectClassUnitDefinition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAlf.g:123:3: this_ValueClassUnitDefinition_3= ruleValueClassUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getValueClassUnitDefinitionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValueClassUnitDefinition_3=ruleValueClassUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValueClassUnitDefinition_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAlf.g:135:3: this_AssociationUnitDefinition_4= ruleAssociationUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getAssociationUnitDefinitionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AssociationUnitDefinition_4=ruleAssociationUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AssociationUnitDefinition_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAlf.g:147:3: this_InteractionUnitDefinition_5= ruleInteractionUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getInteractionUnitDefinitionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InteractionUnitDefinition_5=ruleInteractionUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InteractionUnitDefinition_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAlf.g:159:3: this_BehaviorUnitDefinition_6= ruleBehaviorUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getBehaviorUnitDefinitionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BehaviorUnitDefinition_6=ruleBehaviorUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BehaviorUnitDefinition_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAlf.g:171:3: this_FunctionUnitDefinition_7= ruleFunctionUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getFunctionUnitDefinitionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionUnitDefinition_7=ruleFunctionUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionUnitDefinition_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalAlf.g:183:3: this_FeatureUnitDefinition_8= ruleFeatureUnitDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnitDefinitionAccess().getFeatureUnitDefinitionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureUnitDefinition_8=ruleFeatureUnitDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureUnitDefinition_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitDefinition"


    // $ANTLR start "entryRulePackageUnitDefinition"
    // InternalAlf.g:198:1: entryRulePackageUnitDefinition returns [EObject current=null] : iv_rulePackageUnitDefinition= rulePackageUnitDefinition EOF ;
    public final EObject entryRulePackageUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageUnitDefinition = null;


        try {
            // InternalAlf.g:198:62: (iv_rulePackageUnitDefinition= rulePackageUnitDefinition EOF )
            // InternalAlf.g:199:2: iv_rulePackageUnitDefinition= rulePackageUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageUnitDefinition=rulePackageUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageUnitDefinition"


    // $ANTLR start "rulePackageUnitDefinition"
    // InternalAlf.g:205:1: rulePackageUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_PackageDefinition_1= rulePackageDefinition[$current] ) ;
    public final EObject rulePackageUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_PackageDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:211:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_PackageDefinition_1= rulePackageDefinition[$current] ) )
            // InternalAlf.g:212:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_PackageDefinition_1= rulePackageDefinition[$current] )
            {
            // InternalAlf.g:212:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_PackageDefinition_1= rulePackageDefinition[$current] )
            // InternalAlf.g:213:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_PackageDefinition_1= rulePackageDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getPackageUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_3);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getPackageUnitDefinitionAccess().getPackageDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageDefinition_1=rulePackageDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageUnitDefinition"


    // $ANTLR start "entryRuleClassUnitDefinition"
    // InternalAlf.g:245:1: entryRuleClassUnitDefinition returns [EObject current=null] : iv_ruleClassUnitDefinition= ruleClassUnitDefinition EOF ;
    public final EObject entryRuleClassUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassUnitDefinition = null;


        try {
            // InternalAlf.g:245:60: (iv_ruleClassUnitDefinition= ruleClassUnitDefinition EOF )
            // InternalAlf.g:246:2: iv_ruleClassUnitDefinition= ruleClassUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassUnitDefinition=ruleClassUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassUnitDefinition"


    // $ANTLR start "ruleClassUnitDefinition"
    // InternalAlf.g:252:1: ruleClassUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ClassDefinition_1= ruleClassDefinition[$current] ) ;
    public final EObject ruleClassUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_ClassDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:258:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ClassDefinition_1= ruleClassDefinition[$current] ) )
            // InternalAlf.g:259:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ClassDefinition_1= ruleClassDefinition[$current] )
            {
            // InternalAlf.g:259:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ClassDefinition_1= ruleClassDefinition[$current] )
            // InternalAlf.g:260:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_ClassDefinition_1= ruleClassDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getClassUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_4);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getClassUnitDefinitionAccess().getClassDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ClassDefinition_1=ruleClassDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassUnitDefinition"


    // $ANTLR start "entryRuleObjectClassUnitDefinition"
    // InternalAlf.g:292:1: entryRuleObjectClassUnitDefinition returns [EObject current=null] : iv_ruleObjectClassUnitDefinition= ruleObjectClassUnitDefinition EOF ;
    public final EObject entryRuleObjectClassUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectClassUnitDefinition = null;


        try {
            // InternalAlf.g:292:66: (iv_ruleObjectClassUnitDefinition= ruleObjectClassUnitDefinition EOF )
            // InternalAlf.g:293:2: iv_ruleObjectClassUnitDefinition= ruleObjectClassUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectClassUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectClassUnitDefinition=ruleObjectClassUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectClassUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObjectClassUnitDefinition"


    // $ANTLR start "ruleObjectClassUnitDefinition"
    // InternalAlf.g:299:1: ruleObjectClassUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ObjectClassDefinition_1= ruleObjectClassDefinition[$current] ) ;
    public final EObject ruleObjectClassUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_ObjectClassDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:305:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ObjectClassDefinition_1= ruleObjectClassDefinition[$current] ) )
            // InternalAlf.g:306:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ObjectClassDefinition_1= ruleObjectClassDefinition[$current] )
            {
            // InternalAlf.g:306:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ObjectClassDefinition_1= ruleObjectClassDefinition[$current] )
            // InternalAlf.g:307:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_ObjectClassDefinition_1= ruleObjectClassDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getObjectClassUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getObjectClassUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_5);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getObjectClassUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getObjectClassUnitDefinitionAccess().getObjectClassDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ObjectClassDefinition_1=ruleObjectClassDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ObjectClassDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObjectClassUnitDefinition"


    // $ANTLR start "entryRuleValueClassUnitDefinition"
    // InternalAlf.g:339:1: entryRuleValueClassUnitDefinition returns [EObject current=null] : iv_ruleValueClassUnitDefinition= ruleValueClassUnitDefinition EOF ;
    public final EObject entryRuleValueClassUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueClassUnitDefinition = null;


        try {
            // InternalAlf.g:339:65: (iv_ruleValueClassUnitDefinition= ruleValueClassUnitDefinition EOF )
            // InternalAlf.g:340:2: iv_ruleValueClassUnitDefinition= ruleValueClassUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueClassUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueClassUnitDefinition=ruleValueClassUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueClassUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueClassUnitDefinition"


    // $ANTLR start "ruleValueClassUnitDefinition"
    // InternalAlf.g:346:1: ruleValueClassUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ValueClassDefinition_1= ruleValueClassDefinition[$current] ) ;
    public final EObject ruleValueClassUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_ValueClassDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:352:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ValueClassDefinition_1= ruleValueClassDefinition[$current] ) )
            // InternalAlf.g:353:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ValueClassDefinition_1= ruleValueClassDefinition[$current] )
            {
            // InternalAlf.g:353:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_ValueClassDefinition_1= ruleValueClassDefinition[$current] )
            // InternalAlf.g:354:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_ValueClassDefinition_1= ruleValueClassDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getValueClassUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getValueClassUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_6);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getValueClassUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getValueClassUnitDefinitionAccess().getValueClassDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ValueClassDefinition_1=ruleValueClassDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ValueClassDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueClassUnitDefinition"


    // $ANTLR start "entryRuleAssociationUnitDefinition"
    // InternalAlf.g:386:1: entryRuleAssociationUnitDefinition returns [EObject current=null] : iv_ruleAssociationUnitDefinition= ruleAssociationUnitDefinition EOF ;
    public final EObject entryRuleAssociationUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociationUnitDefinition = null;


        try {
            // InternalAlf.g:386:66: (iv_ruleAssociationUnitDefinition= ruleAssociationUnitDefinition EOF )
            // InternalAlf.g:387:2: iv_ruleAssociationUnitDefinition= ruleAssociationUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociationUnitDefinition=ruleAssociationUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociationUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociationUnitDefinition"


    // $ANTLR start "ruleAssociationUnitDefinition"
    // InternalAlf.g:393:1: ruleAssociationUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_AssociationDefinition_1= ruleAssociationDefinition[$current] ) ;
    public final EObject ruleAssociationUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_AssociationDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:399:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_AssociationDefinition_1= ruleAssociationDefinition[$current] ) )
            // InternalAlf.g:400:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_AssociationDefinition_1= ruleAssociationDefinition[$current] )
            {
            // InternalAlf.g:400:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_AssociationDefinition_1= ruleAssociationDefinition[$current] )
            // InternalAlf.g:401:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_AssociationDefinition_1= ruleAssociationDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_7);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationUnitDefinitionAccess().getAssociationDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AssociationDefinition_1=ruleAssociationDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AssociationDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationUnitDefinition"


    // $ANTLR start "entryRuleInteractionUnitDefinition"
    // InternalAlf.g:433:1: entryRuleInteractionUnitDefinition returns [EObject current=null] : iv_ruleInteractionUnitDefinition= ruleInteractionUnitDefinition EOF ;
    public final EObject entryRuleInteractionUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInteractionUnitDefinition = null;


        try {
            // InternalAlf.g:433:66: (iv_ruleInteractionUnitDefinition= ruleInteractionUnitDefinition EOF )
            // InternalAlf.g:434:2: iv_ruleInteractionUnitDefinition= ruleInteractionUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInteractionUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInteractionUnitDefinition=ruleInteractionUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteractionUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteractionUnitDefinition"


    // $ANTLR start "ruleInteractionUnitDefinition"
    // InternalAlf.g:440:1: ruleInteractionUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_InteractionDefinition_1= ruleInteractionDefinition[$current] ) ;
    public final EObject ruleInteractionUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_InteractionDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:446:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_InteractionDefinition_1= ruleInteractionDefinition[$current] ) )
            // InternalAlf.g:447:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_InteractionDefinition_1= ruleInteractionDefinition[$current] )
            {
            // InternalAlf.g:447:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_InteractionDefinition_1= ruleInteractionDefinition[$current] )
            // InternalAlf.g:448:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_InteractionDefinition_1= ruleInteractionDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_8);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionUnitDefinitionAccess().getInteractionDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_InteractionDefinition_1=ruleInteractionDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_InteractionDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteractionUnitDefinition"


    // $ANTLR start "entryRuleBehaviorUnitDefinition"
    // InternalAlf.g:480:1: entryRuleBehaviorUnitDefinition returns [EObject current=null] : iv_ruleBehaviorUnitDefinition= ruleBehaviorUnitDefinition EOF ;
    public final EObject entryRuleBehaviorUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorUnitDefinition = null;


        try {
            // InternalAlf.g:480:63: (iv_ruleBehaviorUnitDefinition= ruleBehaviorUnitDefinition EOF )
            // InternalAlf.g:481:2: iv_ruleBehaviorUnitDefinition= ruleBehaviorUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBehaviorUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorUnitDefinition=ruleBehaviorUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBehaviorUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorUnitDefinition"


    // $ANTLR start "ruleBehaviorUnitDefinition"
    // InternalAlf.g:487:1: ruleBehaviorUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_BehaviorDefinition_1= ruleBehaviorDefinition[$current] ) ;
    public final EObject ruleBehaviorUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_BehaviorDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:493:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_BehaviorDefinition_1= ruleBehaviorDefinition[$current] ) )
            // InternalAlf.g:494:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_BehaviorDefinition_1= ruleBehaviorDefinition[$current] )
            {
            // InternalAlf.g:494:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_BehaviorDefinition_1= ruleBehaviorDefinition[$current] )
            // InternalAlf.g:495:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_BehaviorDefinition_1= ruleBehaviorDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_9);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorUnitDefinitionAccess().getBehaviorDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_BehaviorDefinition_1=ruleBehaviorDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BehaviorDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorUnitDefinition"


    // $ANTLR start "entryRuleFunctionUnitDefinition"
    // InternalAlf.g:527:1: entryRuleFunctionUnitDefinition returns [EObject current=null] : iv_ruleFunctionUnitDefinition= ruleFunctionUnitDefinition EOF ;
    public final EObject entryRuleFunctionUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionUnitDefinition = null;


        try {
            // InternalAlf.g:527:63: (iv_ruleFunctionUnitDefinition= ruleFunctionUnitDefinition EOF )
            // InternalAlf.g:528:2: iv_ruleFunctionUnitDefinition= ruleFunctionUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionUnitDefinition=ruleFunctionUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionUnitDefinition"


    // $ANTLR start "ruleFunctionUnitDefinition"
    // InternalAlf.g:534:1: ruleFunctionUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FunctionDefinition_1= ruleFunctionDefinition[$current] ) ;
    public final EObject ruleFunctionUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_FunctionDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:540:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FunctionDefinition_1= ruleFunctionDefinition[$current] ) )
            // InternalAlf.g:541:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FunctionDefinition_1= ruleFunctionDefinition[$current] )
            {
            // InternalAlf.g:541:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FunctionDefinition_1= ruleFunctionDefinition[$current] )
            // InternalAlf.g:542:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_FunctionDefinition_1= ruleFunctionDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_10);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionUnitDefinitionAccess().getFunctionDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionDefinition_1=ruleFunctionDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionUnitDefinition"


    // $ANTLR start "entryRuleFeatureUnitDefinition"
    // InternalAlf.g:574:1: entryRuleFeatureUnitDefinition returns [EObject current=null] : iv_ruleFeatureUnitDefinition= ruleFeatureUnitDefinition EOF ;
    public final EObject entryRuleFeatureUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureUnitDefinition = null;


        try {
            // InternalAlf.g:574:62: (iv_ruleFeatureUnitDefinition= ruleFeatureUnitDefinition EOF )
            // InternalAlf.g:575:2: iv_ruleFeatureUnitDefinition= ruleFeatureUnitDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureUnitDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureUnitDefinition=ruleFeatureUnitDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureUnitDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureUnitDefinition"


    // $ANTLR start "ruleFeatureUnitDefinition"
    // InternalAlf.g:581:1: ruleFeatureUnitDefinition returns [EObject current=null] : (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FeatureBodyDefinition_1= ruleFeatureBodyDefinition[$current] ) ;
    public final EObject ruleFeatureUnitDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_UnitPrefix_0 = null;

        EObject this_FeatureBodyDefinition_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:587:2: ( (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FeatureBodyDefinition_1= ruleFeatureBodyDefinition[$current] ) )
            // InternalAlf.g:588:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FeatureBodyDefinition_1= ruleFeatureBodyDefinition[$current] )
            {
            // InternalAlf.g:588:2: (this_UnitPrefix_0= ruleUnitPrefix[$current] this_FeatureBodyDefinition_1= ruleFeatureBodyDefinition[$current] )
            // InternalAlf.g:589:3: this_UnitPrefix_0= ruleUnitPrefix[$current] this_FeatureBodyDefinition_1= ruleFeatureBodyDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_UnitPrefix_0=ruleUnitPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureUnitDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureUnitDefinitionAccess().getFeatureBodyDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_FeatureBodyDefinition_1=ruleFeatureBodyDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureBodyDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureUnitDefinition"


    // $ANTLR start "ruleUnitPrefix"
    // InternalAlf.g:622:1: ruleUnitPrefix[EObject in_current] returns [EObject current=in_current] : ( ( ( (lv_ownedRelationship_0_0= rulePackageImport ) ) | ( (lv_ownedRelationship_1_0= ruleElementImport ) ) )* ( (lv_ownedRelationship_2_0= ruleAnnotation ) )* ) ;
    public final EObject ruleUnitPrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:628:2: ( ( ( ( (lv_ownedRelationship_0_0= rulePackageImport ) ) | ( (lv_ownedRelationship_1_0= ruleElementImport ) ) )* ( (lv_ownedRelationship_2_0= ruleAnnotation ) )* ) )
            // InternalAlf.g:629:2: ( ( ( (lv_ownedRelationship_0_0= rulePackageImport ) ) | ( (lv_ownedRelationship_1_0= ruleElementImport ) ) )* ( (lv_ownedRelationship_2_0= ruleAnnotation ) )* )
            {
            // InternalAlf.g:629:2: ( ( ( (lv_ownedRelationship_0_0= rulePackageImport ) ) | ( (lv_ownedRelationship_1_0= ruleElementImport ) ) )* ( (lv_ownedRelationship_2_0= ruleAnnotation ) )* )
            // InternalAlf.g:630:3: ( ( (lv_ownedRelationship_0_0= rulePackageImport ) ) | ( (lv_ownedRelationship_1_0= ruleElementImport ) ) )* ( (lv_ownedRelationship_2_0= ruleAnnotation ) )*
            {
            // InternalAlf.g:630:3: ( ( (lv_ownedRelationship_0_0= rulePackageImport ) ) | ( (lv_ownedRelationship_1_0= ruleElementImport ) ) )*
            loop2:
            do {
                int alt2=3;
                alt2 = dfa2.predict(input);
                switch (alt2) {
            	case 1 :
            	    // InternalAlf.g:631:4: ( (lv_ownedRelationship_0_0= rulePackageImport ) )
            	    {
            	    // InternalAlf.g:631:4: ( (lv_ownedRelationship_0_0= rulePackageImport ) )
            	    // InternalAlf.g:632:5: (lv_ownedRelationship_0_0= rulePackageImport )
            	    {
            	    // InternalAlf.g:632:5: (lv_ownedRelationship_0_0= rulePackageImport )
            	    // InternalAlf.g:633:6: lv_ownedRelationship_0_0= rulePackageImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitPrefixAccess().getOwnedRelationshipPackageImportParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_ownedRelationship_0_0=rulePackageImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitPrefixRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_0_0,
            	      							"org.omg.sysml.Alf.PackageImport");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAlf.g:651:4: ( (lv_ownedRelationship_1_0= ruleElementImport ) )
            	    {
            	    // InternalAlf.g:651:4: ( (lv_ownedRelationship_1_0= ruleElementImport ) )
            	    // InternalAlf.g:652:5: (lv_ownedRelationship_1_0= ruleElementImport )
            	    {
            	    // InternalAlf.g:652:5: (lv_ownedRelationship_1_0= ruleElementImport )
            	    // InternalAlf.g:653:6: lv_ownedRelationship_1_0= ruleElementImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitPrefixAccess().getOwnedRelationshipElementImportParserRuleCall_0_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_ownedRelationship_1_0=ruleElementImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitPrefixRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_1_0,
            	      							"org.omg.sysml.Alf.ElementImport");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // InternalAlf.g:671:3: ( (lv_ownedRelationship_2_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_DOCUMENTATION_COMMENT) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalAlf.g:672:4: (lv_ownedRelationship_2_0= ruleAnnotation )
            	    {
            	    // InternalAlf.g:672:4: (lv_ownedRelationship_2_0= ruleAnnotation )
            	    // InternalAlf.g:673:5: lv_ownedRelationship_2_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getUnitPrefixAccess().getOwnedRelationshipAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_2_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getUnitPrefixRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_2_0,
            	      						"org.omg.sysml.Alf.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitPrefix"


    // $ANTLR start "entryRuleAnnotation"
    // InternalAlf.g:694:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalAlf.g:694:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalAlf.g:695:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalAlf.g:701:1: ruleAnnotation returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleComment ) ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:707:2: ( ( (lv_ownedRelatedElement_0_0= ruleComment ) ) )
            // InternalAlf.g:708:2: ( (lv_ownedRelatedElement_0_0= ruleComment ) )
            {
            // InternalAlf.g:708:2: ( (lv_ownedRelatedElement_0_0= ruleComment ) )
            // InternalAlf.g:709:3: (lv_ownedRelatedElement_0_0= ruleComment )
            {
            // InternalAlf.g:709:3: (lv_ownedRelatedElement_0_0= ruleComment )
            // InternalAlf.g:710:4: lv_ownedRelatedElement_0_0= ruleComment
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getOwnedRelatedElementCommentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getAnnotationRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.sysml.Alf.Comment");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleComment"
    // InternalAlf.g:730:1: entryRuleComment returns [EObject current=null] : iv_ruleComment= ruleComment EOF ;
    public final EObject entryRuleComment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComment = null;


        try {
            // InternalAlf.g:730:48: (iv_ruleComment= ruleComment EOF )
            // InternalAlf.g:731:2: iv_ruleComment= ruleComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComment=ruleComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // InternalAlf.g:737:1: ruleComment returns [EObject current=null] : ( (lv_body_0_0= RULE_DOCUMENTATION_COMMENT ) ) ;
    public final EObject ruleComment() throws RecognitionException {
        EObject current = null;

        Token lv_body_0_0=null;


        	enterRule();

        try {
            // InternalAlf.g:743:2: ( ( (lv_body_0_0= RULE_DOCUMENTATION_COMMENT ) ) )
            // InternalAlf.g:744:2: ( (lv_body_0_0= RULE_DOCUMENTATION_COMMENT ) )
            {
            // InternalAlf.g:744:2: ( (lv_body_0_0= RULE_DOCUMENTATION_COMMENT ) )
            // InternalAlf.g:745:3: (lv_body_0_0= RULE_DOCUMENTATION_COMMENT )
            {
            // InternalAlf.g:745:3: (lv_body_0_0= RULE_DOCUMENTATION_COMMENT )
            // InternalAlf.g:746:4: lv_body_0_0= RULE_DOCUMENTATION_COMMENT
            {
            lv_body_0_0=(Token)match(input,RULE_DOCUMENTATION_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_body_0_0, grammarAccess.getCommentAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentRule());
              				}
              				setWithLastConsumed(
              					current,
              					"body",
              					lv_body_0_0,
              					"org.omg.sysml.Alf.DOCUMENTATION_COMMENT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRulePackageImport"
    // InternalAlf.g:765:1: entryRulePackageImport returns [EObject current=null] : iv_rulePackageImport= rulePackageImport EOF ;
    public final EObject entryRulePackageImport() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageImport = null;


        try {
            // InternalAlf.g:765:54: (iv_rulePackageImport= rulePackageImport EOF )
            // InternalAlf.g:766:2: iv_rulePackageImport= rulePackageImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageImport=rulePackageImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageImport"


    // $ANTLR start "rulePackageImport"
    // InternalAlf.g:772:1: rulePackageImport returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? otherlv_2= 'import' ( ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' ) | ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' ) | ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' ) ) otherlv_13= ';' ) ;
    public final EObject rulePackageImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_ownedRelationship_0_0 = null;

        Enumerator lv_visibility_1_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:778:2: ( ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? otherlv_2= 'import' ( ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' ) | ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' ) | ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' ) ) otherlv_13= ';' ) )
            // InternalAlf.g:779:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? otherlv_2= 'import' ( ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' ) | ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' ) | ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' ) ) otherlv_13= ';' )
            {
            // InternalAlf.g:779:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? otherlv_2= 'import' ( ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' ) | ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' ) | ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' ) ) otherlv_13= ';' )
            // InternalAlf.g:780:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? otherlv_2= 'import' ( ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' ) | ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' ) | ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' ) ) otherlv_13= ';'
            {
            // InternalAlf.g:780:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==RULE_DOCUMENTATION_COMMENT) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalAlf.g:781:4: (lv_ownedRelationship_0_0= ruleAnnotation )
            	    {
            	    // InternalAlf.g:781:4: (lv_ownedRelationship_0_0= ruleAnnotation )
            	    // InternalAlf.g:782:5: lv_ownedRelationship_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackageImportAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_ownedRelationship_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackageImportRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.sysml.Alf.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            // InternalAlf.g:799:3: ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( ((LA5_0>=85 && LA5_0<=86)) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalAlf.g:800:4: (lv_visibility_1_0= rulePackageElementVisibilityIndicator )
                    {
                    // InternalAlf.g:800:4: (lv_visibility_1_0= rulePackageElementVisibilityIndicator )
                    // InternalAlf.g:801:5: lv_visibility_1_0= rulePackageElementVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPackageImportAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_15);
                    lv_visibility_1_0=rulePackageElementVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPackageImportRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_1_0,
                      						"org.omg.sysml.Alf.PackageElementVisibilityIndicator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,16,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPackageImportAccess().getImportKeyword_2());
              		
            }
            // InternalAlf.g:822:3: ( ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' ) | ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' ) | ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' ) )
            int alt7=3;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==17) ) {
                    int LA7_3 = input.LA(3);

                    if ( ((LA7_3>=RULE_ID && LA7_3<=RULE_UNRESTRICTED_NAME)) ) {
                        alt7=2;
                    }
                    else if ( (LA7_3==19) ) {
                        alt7=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 3, input);

                        throw nvae;
                    }
                }
                else if ( (LA7_1==18) ) {
                    int LA7_4 = input.LA(3);

                    if ( ((LA7_4>=RULE_ID && LA7_4<=RULE_UNRESTRICTED_NAME)) ) {
                        alt7=3;
                    }
                    else if ( (LA7_4==19) ) {
                        alt7=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 4, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA7_0==RULE_UNRESTRICTED_NAME) ) {
                int LA7_2 = input.LA(2);

                if ( (LA7_2==17) ) {
<<<<<<< Upstream, based on origin/ST6RI-75
                    int LA7_3 = input.LA(3);

                    if ( ((LA7_3>=RULE_ID && LA7_3<=RULE_UNRESTRICTED_NAME)) ) {
                        alt7=2;
                    }
                    else if ( (LA7_3==19) ) {
                        alt7=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 3, input);

                        throw nvae;
                    }
                }
                else if ( (LA7_2==18) ) {
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    int LA7_4 = input.LA(3);

                    if ( ((LA7_4>=RULE_ID && LA7_4<=RULE_UNRESTRICTED_NAME)) ) {
                        alt7=3;
                    }
                    else if ( (LA7_4==19) ) {
                        alt7=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA7_2==18) ) {
                    int LA7_3 = input.LA(3);

                    if ( (LA7_3==19) ) {
                        alt7=1;
                    }
                    else if ( ((LA7_3>=RULE_ID && LA7_3<=RULE_UNRESTRICTED_NAME)) ) {
                        alt7=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalAlf.g:823:4: ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' )
                    {
                    // InternalAlf.g:823:4: ( ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*' )
                    // InternalAlf.g:824:5: ( ( ruleName ) ) (otherlv_4= '::' | otherlv_5= '.' ) otherlv_6= '*'
                    {
                    // InternalAlf.g:824:5: ( ( ruleName ) )
                    // InternalAlf.g:825:6: ( ruleName )
                    {
                    // InternalAlf.g:825:6: ( ruleName )
                    // InternalAlf.g:826:7: ruleName
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPackageImportRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAlf.g:843:5: (otherlv_4= '::' | otherlv_5= '.' )
                    int alt6=2;
                    int LA6_0 = input.LA(1);

                    if ( (LA6_0==17) ) {
                        alt6=1;
                    }
                    else if ( (LA6_0==18) ) {
                        alt6=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 6, 0, input);

                        throw nvae;
                    }
                    switch (alt6) {
                        case 1 :
                            // InternalAlf.g:844:6: otherlv_4= '::'
                            {
                            otherlv_4=(Token)match(input,17,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getPackageImportAccess().getColonColonKeyword_3_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAlf.g:849:6: otherlv_5= '.'
                            {
                            otherlv_5=(Token)match(input,18,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getPackageImportAccess().getFullStopKeyword_3_0_1_1());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,19,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAlf.g:860:4: ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' )
                    {
                    // InternalAlf.g:860:4: ( ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*' )
                    // InternalAlf.g:861:5: ( ( ruleColonQualifiedName ) ) otherlv_8= '::' otherlv_9= '*'
                    {
                    // InternalAlf.g:861:5: ( ( ruleColonQualifiedName ) )
                    // InternalAlf.g:862:6: ( ruleColonQualifiedName )
                    {
                    // InternalAlf.g:862:6: ( ruleColonQualifiedName )
                    // InternalAlf.g:863:7: ruleColonQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPackageImportRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleColonQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,17,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getPackageImportAccess().getColonColonKeyword_3_1_1());
                      				
                    }
                    otherlv_9=(Token)match(input,19,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_1_2());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAlf.g:890:4: ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' )
                    {
                    // InternalAlf.g:890:4: ( ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*' )
                    // InternalAlf.g:891:5: ( ( ruleDotQualifiedName ) ) otherlv_11= '.' otherlv_12= '*'
                    {
                    // InternalAlf.g:891:5: ( ( ruleDotQualifiedName ) )
                    // InternalAlf.g:892:6: ( ruleDotQualifiedName )
                    {
                    // InternalAlf.g:892:6: ( ruleDotQualifiedName )
                    // InternalAlf.g:893:7: ruleDotQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPackageImportRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_2_0_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    ruleDotQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,18,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getPackageImportAccess().getFullStopKeyword_3_2_1());
                      				
                    }
                    otherlv_12=(Token)match(input,19,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_2_2());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_13=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getPackageImportAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageImport"


    // $ANTLR start "entryRuleElementImport"
    // InternalAlf.g:928:1: entryRuleElementImport returns [EObject current=null] : iv_ruleElementImport= ruleElementImport EOF ;
    public final EObject entryRuleElementImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementImport = null;


        try {
            // InternalAlf.g:928:54: (iv_ruleElementImport= ruleElementImport EOF )
            // InternalAlf.g:929:2: iv_ruleElementImport= ruleElementImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementImport=ruleElementImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementImport"


    // $ANTLR start "ruleElementImport"
    // InternalAlf.g:935:1: ruleElementImport returns [EObject current=null] : (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] otherlv_1= 'import' ( ( ruleQualifiedName ) ) (otherlv_3= 'as' ( (lv_memberName_4_0= ruleName ) ) )? otherlv_5= ';' ) ;
    public final EObject ruleElementImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_PackageMemberPrefix_0 = null;

        AntlrDatatypeRuleToken lv_memberName_4_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:941:2: ( (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] otherlv_1= 'import' ( ( ruleQualifiedName ) ) (otherlv_3= 'as' ( (lv_memberName_4_0= ruleName ) ) )? otherlv_5= ';' ) )
            // InternalAlf.g:942:2: (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] otherlv_1= 'import' ( ( ruleQualifiedName ) ) (otherlv_3= 'as' ( (lv_memberName_4_0= ruleName ) ) )? otherlv_5= ';' )
            {
            // InternalAlf.g:942:2: (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] otherlv_1= 'import' ( ( ruleQualifiedName ) ) (otherlv_3= 'as' ( (lv_memberName_4_0= ruleName ) ) )? otherlv_5= ';' )
            // InternalAlf.g:943:3: this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] otherlv_1= 'import' ( ( ruleQualifiedName ) ) (otherlv_3= 'as' ( (lv_memberName_4_0= ruleName ) ) )? otherlv_5= ';'
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getElementImportRule());
              			}
              			newCompositeNode(grammarAccess.getElementImportAccess().getPackageMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_15);
            this_PackageMemberPrefix_0=rulePackageMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageMemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getElementImportAccess().getImportKeyword_1());
              		
            }
            // InternalAlf.g:961:3: ( ( ruleQualifiedName ) )
            // InternalAlf.g:962:4: ( ruleQualifiedName )
            {
            // InternalAlf.g:962:4: ( ruleQualifiedName )
            // InternalAlf.g:963:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getElementImportRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementImportAccess().getMemberElementElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_22);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAlf.g:980:3: (otherlv_3= 'as' ( (lv_memberName_4_0= ruleName ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==21) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalAlf.g:981:4: otherlv_3= 'as' ( (lv_memberName_4_0= ruleName ) )
                    {
                    otherlv_3=(Token)match(input,21,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getElementImportAccess().getAsKeyword_3_0());
                      			
                    }
                    // InternalAlf.g:985:4: ( (lv_memberName_4_0= ruleName ) )
                    // InternalAlf.g:986:5: (lv_memberName_4_0= ruleName )
                    {
                    // InternalAlf.g:986:5: (lv_memberName_4_0= ruleName )
                    // InternalAlf.g:987:6: lv_memberName_4_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementImportAccess().getMemberNameNameParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_memberName_4_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementImportRule());
                      						}
                      						set(
                      							current,
                      							"memberName",
                      							lv_memberName_4_0,
                      							"org.omg.sysml.Alf.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getElementImportAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementImport"


    // $ANTLR start "entryRuleNonFeatureDefinition"
    // InternalAlf.g:1013:1: entryRuleNonFeatureDefinition returns [EObject current=null] : iv_ruleNonFeatureDefinition= ruleNonFeatureDefinition EOF ;
    public final EObject entryRuleNonFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureDefinition = null;


        try {
            // InternalAlf.g:1013:61: (iv_ruleNonFeatureDefinition= ruleNonFeatureDefinition EOF )
            // InternalAlf.g:1014:2: iv_ruleNonFeatureDefinition= ruleNonFeatureDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureDefinition=ruleNonFeatureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureDefinition"


    // $ANTLR start "ruleNonFeatureDefinition"
    // InternalAlf.g:1020:1: ruleNonFeatureDefinition returns [EObject current=null] : (this_PackageDefinitionOrStub_0= rulePackageDefinitionOrStub | this_ClassDefinitionOrStub_1= ruleClassDefinitionOrStub | this_ObjectClassDefinitionOrStub_2= ruleObjectClassDefinitionOrStub | this_ValueClassDefinitionOrStub_3= ruleValueClassDefinitionOrStub | this_AssociationDefinitionOrStub_4= ruleAssociationDefinitionOrStub | this_InteractionDefinitionOrStub_5= ruleInteractionDefinitionOrStub | this_BehaviorDefinitionOrStub_6= ruleBehaviorDefinitionOrStub | this_FunctionDefinitionOrStub_7= ruleFunctionDefinitionOrStub ) ;
    public final EObject ruleNonFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_PackageDefinitionOrStub_0 = null;

        EObject this_ClassDefinitionOrStub_1 = null;

        EObject this_ObjectClassDefinitionOrStub_2 = null;

        EObject this_ValueClassDefinitionOrStub_3 = null;

        EObject this_AssociationDefinitionOrStub_4 = null;

        EObject this_InteractionDefinitionOrStub_5 = null;

        EObject this_BehaviorDefinitionOrStub_6 = null;

        EObject this_FunctionDefinitionOrStub_7 = null;



        	enterRule();

        try {
            // InternalAlf.g:1026:2: ( (this_PackageDefinitionOrStub_0= rulePackageDefinitionOrStub | this_ClassDefinitionOrStub_1= ruleClassDefinitionOrStub | this_ObjectClassDefinitionOrStub_2= ruleObjectClassDefinitionOrStub | this_ValueClassDefinitionOrStub_3= ruleValueClassDefinitionOrStub | this_AssociationDefinitionOrStub_4= ruleAssociationDefinitionOrStub | this_InteractionDefinitionOrStub_5= ruleInteractionDefinitionOrStub | this_BehaviorDefinitionOrStub_6= ruleBehaviorDefinitionOrStub | this_FunctionDefinitionOrStub_7= ruleFunctionDefinitionOrStub ) )
            // InternalAlf.g:1027:2: (this_PackageDefinitionOrStub_0= rulePackageDefinitionOrStub | this_ClassDefinitionOrStub_1= ruleClassDefinitionOrStub | this_ObjectClassDefinitionOrStub_2= ruleObjectClassDefinitionOrStub | this_ValueClassDefinitionOrStub_3= ruleValueClassDefinitionOrStub | this_AssociationDefinitionOrStub_4= ruleAssociationDefinitionOrStub | this_InteractionDefinitionOrStub_5= ruleInteractionDefinitionOrStub | this_BehaviorDefinitionOrStub_6= ruleBehaviorDefinitionOrStub | this_FunctionDefinitionOrStub_7= ruleFunctionDefinitionOrStub )
            {
            // InternalAlf.g:1027:2: (this_PackageDefinitionOrStub_0= rulePackageDefinitionOrStub | this_ClassDefinitionOrStub_1= ruleClassDefinitionOrStub | this_ObjectClassDefinitionOrStub_2= ruleObjectClassDefinitionOrStub | this_ValueClassDefinitionOrStub_3= ruleValueClassDefinitionOrStub | this_AssociationDefinitionOrStub_4= ruleAssociationDefinitionOrStub | this_InteractionDefinitionOrStub_5= ruleInteractionDefinitionOrStub | this_BehaviorDefinitionOrStub_6= ruleBehaviorDefinitionOrStub | this_FunctionDefinitionOrStub_7= ruleFunctionDefinitionOrStub )
            int alt9=8;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalAlf.g:1028:3: this_PackageDefinitionOrStub_0= rulePackageDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getPackageDefinitionOrStubParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PackageDefinitionOrStub_0=rulePackageDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PackageDefinitionOrStub_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAlf.g:1040:3: this_ClassDefinitionOrStub_1= ruleClassDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getClassDefinitionOrStubParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassDefinitionOrStub_1=ruleClassDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDefinitionOrStub_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAlf.g:1052:3: this_ObjectClassDefinitionOrStub_2= ruleObjectClassDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getObjectClassDefinitionOrStubParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectClassDefinitionOrStub_2=ruleObjectClassDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ObjectClassDefinitionOrStub_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAlf.g:1064:3: this_ValueClassDefinitionOrStub_3= ruleValueClassDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getValueClassDefinitionOrStubParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValueClassDefinitionOrStub_3=ruleValueClassDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValueClassDefinitionOrStub_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAlf.g:1076:3: this_AssociationDefinitionOrStub_4= ruleAssociationDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getAssociationDefinitionOrStubParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AssociationDefinitionOrStub_4=ruleAssociationDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AssociationDefinitionOrStub_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAlf.g:1088:3: this_InteractionDefinitionOrStub_5= ruleInteractionDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getInteractionDefinitionOrStubParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InteractionDefinitionOrStub_5=ruleInteractionDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InteractionDefinitionOrStub_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAlf.g:1100:3: this_BehaviorDefinitionOrStub_6= ruleBehaviorDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getBehaviorDefinitionOrStubParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BehaviorDefinitionOrStub_6=ruleBehaviorDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BehaviorDefinitionOrStub_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAlf.g:1112:3: this_FunctionDefinitionOrStub_7= ruleFunctionDefinitionOrStub
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureDefinitionAccess().getFunctionDefinitionOrStubParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDefinitionOrStub_7=ruleFunctionDefinitionOrStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionDefinitionOrStub_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureDefinition"


    // $ANTLR start "entryRulePackageDefinitionOrStub"
    // InternalAlf.g:1127:1: entryRulePackageDefinitionOrStub returns [EObject current=null] : iv_rulePackageDefinitionOrStub= rulePackageDefinitionOrStub EOF ;
    public final EObject entryRulePackageDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageDefinitionOrStub = null;


        try {
            // InternalAlf.g:1127:64: (iv_rulePackageDefinitionOrStub= rulePackageDefinitionOrStub EOF )
            // InternalAlf.g:1128:2: iv_rulePackageDefinitionOrStub= rulePackageDefinitionOrStub EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageDefinitionOrStub=rulePackageDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageDefinitionOrStub"


    // $ANTLR start "rulePackageDefinitionOrStub"
    // InternalAlf.g:1134:1: rulePackageDefinitionOrStub returns [EObject current=null] : this_PackageDefinition_0= rulePackageDefinition[$current] ;
    public final EObject rulePackageDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_PackageDefinition_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:1140:2: (this_PackageDefinition_0= rulePackageDefinition[$current] )
            // InternalAlf.g:1141:2: this_PackageDefinition_0= rulePackageDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getPackageDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getPackageDefinitionOrStubAccess().getPackageDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_PackageDefinition_0=rulePackageDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_PackageDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDefinitionOrStub"


    // $ANTLR start "rulePackageDefinition"
    // InternalAlf.g:1159:1: rulePackageDefinition[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'package' ( (lv_name_1_0= ruleName ) ) otherlv_2= '{' ( ( (lv_ownedRelationship_3_0= rulePackageMember ) ) | ( (lv_ownedRelationship_4_0= rulePackageImport ) ) )* otherlv_5= '}' ) ;
    public final EObject rulePackageDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:1165:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleName ) ) otherlv_2= '{' ( ( (lv_ownedRelationship_3_0= rulePackageMember ) ) | ( (lv_ownedRelationship_4_0= rulePackageImport ) ) )* otherlv_5= '}' ) )
            // InternalAlf.g:1166:2: (otherlv_0= 'package' ( (lv_name_1_0= ruleName ) ) otherlv_2= '{' ( ( (lv_ownedRelationship_3_0= rulePackageMember ) ) | ( (lv_ownedRelationship_4_0= rulePackageImport ) ) )* otherlv_5= '}' )
            {
            // InternalAlf.g:1166:2: (otherlv_0= 'package' ( (lv_name_1_0= ruleName ) ) otherlv_2= '{' ( ( (lv_ownedRelationship_3_0= rulePackageMember ) ) | ( (lv_ownedRelationship_4_0= rulePackageImport ) ) )* otherlv_5= '}' )
            // InternalAlf.g:1167:3: otherlv_0= 'package' ( (lv_name_1_0= ruleName ) ) otherlv_2= '{' ( ( (lv_ownedRelationship_3_0= rulePackageMember ) ) | ( (lv_ownedRelationship_4_0= rulePackageImport ) ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0());
              		
            }
            // InternalAlf.g:1171:3: ( (lv_name_1_0= ruleName ) )
            // InternalAlf.g:1172:4: (lv_name_1_0= ruleName )
            {
            // InternalAlf.g:1172:4: (lv_name_1_0= ruleName )
            // InternalAlf.g:1173:5: lv_name_1_0= ruleName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPackageDefinitionAccess().getNameNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_name_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,23,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPackageDefinitionAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalAlf.g:1194:3: ( ( (lv_ownedRelationship_3_0= rulePackageMember ) ) | ( (lv_ownedRelationship_4_0= rulePackageImport ) ) )*
            loop10:
            do {
                int alt10=3;
                alt10 = dfa10.predict(input);
                switch (alt10) {
            	case 1 :
            	    // InternalAlf.g:1195:4: ( (lv_ownedRelationship_3_0= rulePackageMember ) )
            	    {
            	    // InternalAlf.g:1195:4: ( (lv_ownedRelationship_3_0= rulePackageMember ) )
            	    // InternalAlf.g:1196:5: (lv_ownedRelationship_3_0= rulePackageMember )
            	    {
            	    // InternalAlf.g:1196:5: (lv_ownedRelationship_3_0= rulePackageMember )
            	    // InternalAlf.g:1197:6: lv_ownedRelationship_3_0= rulePackageMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPackageDefinitionAccess().getOwnedRelationshipPackageMemberParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_ownedRelationship_3_0=rulePackageMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.sysml.Alf.PackageMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAlf.g:1215:4: ( (lv_ownedRelationship_4_0= rulePackageImport ) )
            	    {
            	    // InternalAlf.g:1215:4: ( (lv_ownedRelationship_4_0= rulePackageImport ) )
            	    // InternalAlf.g:1216:5: (lv_ownedRelationship_4_0= rulePackageImport )
            	    {
            	    // InternalAlf.g:1216:5: (lv_ownedRelationship_4_0= rulePackageImport )
            	    // InternalAlf.g:1217:6: lv_ownedRelationship_4_0= rulePackageImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPackageDefinitionAccess().getOwnedRelationshipPackageImportParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_ownedRelationship_4_0=rulePackageImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.sysml.Alf.PackageImport");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getPackageDefinitionAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDefinition"


    // $ANTLR start "entryRulePackageMember"
    // InternalAlf.g:1243:1: entryRulePackageMember returns [EObject current=null] : iv_rulePackageMember= rulePackageMember EOF ;
    public final EObject entryRulePackageMember() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageMember = null;


        try {
            // InternalAlf.g:1243:54: (iv_rulePackageMember= rulePackageMember EOF )
            // InternalAlf.g:1244:2: iv_rulePackageMember= rulePackageMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageMember=rulePackageMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageMember"


    // $ANTLR start "rulePackageMember"
    // InternalAlf.g:1250:1: rulePackageMember returns [EObject current=null] : (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] (this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] | this_FeaturePackageMemberElement_2= ruleFeaturePackageMemberElement[$current] ) ) ;
    public final EObject rulePackageMember() throws RecognitionException {
        EObject current = null;

        EObject this_PackageMemberPrefix_0 = null;

        EObject this_NonFeatureMemberElement_1 = null;

        EObject this_FeaturePackageMemberElement_2 = null;



        	enterRule();

        try {
            // InternalAlf.g:1256:2: ( (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] (this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] | this_FeaturePackageMemberElement_2= ruleFeaturePackageMemberElement[$current] ) ) )
            // InternalAlf.g:1257:2: (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] (this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] | this_FeaturePackageMemberElement_2= ruleFeaturePackageMemberElement[$current] ) )
            {
            // InternalAlf.g:1257:2: (this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] (this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] | this_FeaturePackageMemberElement_2= ruleFeaturePackageMemberElement[$current] ) )
            // InternalAlf.g:1258:3: this_PackageMemberPrefix_0= rulePackageMemberPrefix[$current] (this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] | this_FeaturePackageMemberElement_2= ruleFeaturePackageMemberElement[$current] )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageMemberRule());
              			}
              			newCompositeNode(grammarAccess.getPackageMemberAccess().getPackageMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_PackageMemberPrefix_0=rulePackageMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageMemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:1272:3: (this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] | this_FeaturePackageMemberElement_2= ruleFeaturePackageMemberElement[$current] )
            int alt11=2;
            switch ( input.LA(1) ) {
            case 16:
            case 22:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
                {
                alt11=1;
                }
                break;
            case 33:
                {
                int LA11_2 = input.LA(2);

                if ( ((LA11_2>=26 && LA11_2<=31)||LA11_2==41) ) {
                    alt11=1;
                }
                else if ( ((LA11_2>=RULE_ID && LA11_2<=RULE_UNRESTRICTED_NAME)||LA11_2==32||(LA11_2>=44 && LA11_2<=45)) ) {
                    alt11=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 32:
            case 44:
            case 45:
                {
                alt11=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalAlf.g:1273:4: this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getPackageMemberRule());
                      				}
                      				newCompositeNode(grammarAccess.getPackageMemberAccess().getNonFeatureMemberElementParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureMemberElement_1=ruleNonFeatureMemberElement(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_NonFeatureMemberElement_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAlf.g:1288:4: this_FeaturePackageMemberElement_2= ruleFeaturePackageMemberElement[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getPackageMemberRule());
                      				}
                      				newCompositeNode(grammarAccess.getPackageMemberAccess().getFeaturePackageMemberElementParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_FeaturePackageMemberElement_2=ruleFeaturePackageMemberElement(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeaturePackageMemberElement_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageMember"


    // $ANTLR start "rulePackageMemberPrefix"
    // InternalAlf.g:1308:1: rulePackageMemberPrefix[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? ) ;
    public final EObject rulePackageMemberPrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        Enumerator lv_visibility_1_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:1314:2: ( ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? ) )
            // InternalAlf.g:1315:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? )
            {
            // InternalAlf.g:1315:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )? )
            // InternalAlf.g:1316:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )?
            {
            // InternalAlf.g:1316:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==RULE_DOCUMENTATION_COMMENT) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalAlf.g:1317:4: (lv_ownedRelationship_0_0= ruleAnnotation )
            	    {
            	    // InternalAlf.g:1317:4: (lv_ownedRelationship_0_0= ruleAnnotation )
            	    // InternalAlf.g:1318:5: lv_ownedRelationship_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackageMemberPrefixAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_ownedRelationship_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackageMemberPrefixRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.sysml.Alf.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            // InternalAlf.g:1335:3: ( (lv_visibility_1_0= rulePackageElementVisibilityIndicator ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=85 && LA13_0<=86)) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalAlf.g:1336:4: (lv_visibility_1_0= rulePackageElementVisibilityIndicator )
                    {
                    // InternalAlf.g:1336:4: (lv_visibility_1_0= rulePackageElementVisibilityIndicator )
                    // InternalAlf.g:1337:5: lv_visibility_1_0= rulePackageElementVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPackageMemberPrefixAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_visibility_1_0=rulePackageElementVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPackageMemberPrefixRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_1_0,
                      						"org.omg.sysml.Alf.PackageElementVisibilityIndicator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageMemberPrefix"


    // $ANTLR start "ruleNonFeatureMemberElement"
    // InternalAlf.g:1359:1: ruleNonFeatureMemberElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) ) | (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) | (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' ) | (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' ) | (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' ) | (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' ) ) ;
    public final EObject ruleNonFeatureMemberElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        EObject lv_ownedRelatedElement_0_0 = null;

        AntlrDatatypeRuleToken lv_memberName_2_0 = null;

        AntlrDatatypeRuleToken lv_memberName_7_0 = null;

        AntlrDatatypeRuleToken lv_memberName_12_0 = null;

        AntlrDatatypeRuleToken lv_memberName_17_0 = null;

        AntlrDatatypeRuleToken lv_memberName_22_0 = null;

        AntlrDatatypeRuleToken lv_memberName_27_0 = null;

        AntlrDatatypeRuleToken lv_memberName_32_0 = null;

        AntlrDatatypeRuleToken lv_memberName_39_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:1365:2: ( ( ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) ) | (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) | (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' ) | (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' ) | (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' ) | (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' ) ) )
            // InternalAlf.g:1366:2: ( ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) ) | (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) | (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' ) | (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' ) | (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' ) | (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' ) )
            {
            // InternalAlf.g:1366:2: ( ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) ) | (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) | (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' ) | (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' ) | (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' ) | (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' ) )
            int alt22=9;
            alt22 = dfa22.predict(input);
            switch (alt22) {
                case 1 :
                    // InternalAlf.g:1367:3: ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) )
                    {
                    // InternalAlf.g:1367:3: ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) )
                    // InternalAlf.g:1368:4: (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition )
                    {
                    // InternalAlf.g:1368:4: (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition )
                    // InternalAlf.g:1369:5: lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getOwnedRelatedElementNonFeatureDefinitionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_0=ruleNonFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_0,
                      						"org.omg.sysml.Alf.NonFeatureDefinition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAlf.g:1387:3: (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' )
                    {
                    // InternalAlf.g:1387:3: (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' )
                    // InternalAlf.g:1388:4: otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';'
                    {
                    otherlv_1=(Token)match(input,22,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNonFeatureMemberElementAccess().getPackageKeyword_1_0());
                      			
                    }
                    // InternalAlf.g:1392:4: ( (lv_memberName_2_0= ruleName ) )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( ((LA14_0>=RULE_ID && LA14_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt14=1;
                    }
                    switch (alt14) {
                        case 1 :
                            // InternalAlf.g:1393:5: (lv_memberName_2_0= ruleName )
                            {
                            // InternalAlf.g:1393:5: (lv_memberName_2_0= ruleName )
                            // InternalAlf.g:1394:6: lv_memberName_2_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_2_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_2_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getNonFeatureMemberElementAccess().getIsKeyword_1_2());
                      			
                    }
                    // InternalAlf.g:1415:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1416:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1416:5: ( ruleQualifiedName )
                    // InternalAlf.g:1417:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementPackageCrossReference_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_1_4());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAlf.g:1440:3: (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' )
                    {
                    // InternalAlf.g:1440:3: (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' )
                    // InternalAlf.g:1441:4: otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';'
                    {
                    otherlv_6=(Token)match(input,26,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getNonFeatureMemberElementAccess().getClassKeyword_2_0());
                      			
                    }
                    // InternalAlf.g:1445:4: ( (lv_memberName_7_0= ruleName ) )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( ((LA15_0>=RULE_ID && LA15_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // InternalAlf.g:1446:5: (lv_memberName_7_0= ruleName )
                            {
                            // InternalAlf.g:1446:5: (lv_memberName_7_0= ruleName )
                            // InternalAlf.g:1447:6: lv_memberName_7_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_2_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_7_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_7_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getNonFeatureMemberElementAccess().getIsKeyword_2_2());
                      			
                    }
                    // InternalAlf.g:1468:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1469:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1469:5: ( ruleQualifiedName )
                    // InternalAlf.g:1470:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementClassCrossReference_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_2_4());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAlf.g:1493:3: (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' )
                    {
                    // InternalAlf.g:1493:3: (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' )
                    // InternalAlf.g:1494:4: otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';'
                    {
                    otherlv_11=(Token)match(input,27,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getNonFeatureMemberElementAccess().getClassKeyword_3_0());
                      			
                    }
                    // InternalAlf.g:1498:4: ( (lv_memberName_12_0= ruleName ) )?
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( ((LA16_0>=RULE_ID && LA16_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt16=1;
                    }
                    switch (alt16) {
                        case 1 :
                            // InternalAlf.g:1499:5: (lv_memberName_12_0= ruleName )
                            {
                            // InternalAlf.g:1499:5: (lv_memberName_12_0= ruleName )
                            // InternalAlf.g:1500:6: lv_memberName_12_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_3_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_12_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_12_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getNonFeatureMemberElementAccess().getIsKeyword_3_2());
                      			
                    }
                    // InternalAlf.g:1521:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1522:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1522:5: ( ruleQualifiedName )
                    // InternalAlf.g:1523:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementObjectClassCrossReference_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_3_4());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAlf.g:1546:3: (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' )
                    {
                    // InternalAlf.g:1546:3: (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' )
                    // InternalAlf.g:1547:4: otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';'
                    {
                    otherlv_16=(Token)match(input,28,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getNonFeatureMemberElementAccess().getDatatypeKeyword_4_0());
                      			
                    }
                    // InternalAlf.g:1551:4: ( (lv_memberName_17_0= ruleName ) )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( ((LA17_0>=RULE_ID && LA17_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            // InternalAlf.g:1552:5: (lv_memberName_17_0= ruleName )
                            {
                            // InternalAlf.g:1552:5: (lv_memberName_17_0= ruleName )
                            // InternalAlf.g:1553:6: lv_memberName_17_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_4_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_17_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_17_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getNonFeatureMemberElementAccess().getIsKeyword_4_2());
                      			
                    }
                    // InternalAlf.g:1574:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1575:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1575:5: ( ruleQualifiedName )
                    // InternalAlf.g:1576:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementValueClassCrossReference_4_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_4_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAlf.g:1599:3: (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' )
                    {
                    // InternalAlf.g:1599:3: (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' )
                    // InternalAlf.g:1600:4: otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';'
                    {
                    otherlv_21=(Token)match(input,29,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getNonFeatureMemberElementAccess().getAssocKeyword_5_0());
                      			
                    }
                    // InternalAlf.g:1604:4: ( (lv_memberName_22_0= ruleName ) )?
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( ((LA18_0>=RULE_ID && LA18_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalAlf.g:1605:5: (lv_memberName_22_0= ruleName )
                            {
                            // InternalAlf.g:1605:5: (lv_memberName_22_0= ruleName )
                            // InternalAlf.g:1606:6: lv_memberName_22_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_5_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_22_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_22_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_23=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getNonFeatureMemberElementAccess().getIsKeyword_5_2());
                      			
                    }
                    // InternalAlf.g:1627:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1628:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1628:5: ( ruleQualifiedName )
                    // InternalAlf.g:1629:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementAssociationCrossReference_5_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_5_4());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAlf.g:1652:3: (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' )
                    {
                    // InternalAlf.g:1652:3: (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' )
                    // InternalAlf.g:1653:4: otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';'
                    {
                    otherlv_26=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getNonFeatureMemberElementAccess().getBehaviorKeyword_6_0());
                      			
                    }
                    // InternalAlf.g:1657:4: ( (lv_memberName_27_0= ruleName ) )?
                    int alt19=2;
                    int LA19_0 = input.LA(1);

                    if ( ((LA19_0>=RULE_ID && LA19_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt19=1;
                    }
                    switch (alt19) {
                        case 1 :
                            // InternalAlf.g:1658:5: (lv_memberName_27_0= ruleName )
                            {
                            // InternalAlf.g:1658:5: (lv_memberName_27_0= ruleName )
                            // InternalAlf.g:1659:6: lv_memberName_27_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_6_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_27_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_27_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_28=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getNonFeatureMemberElementAccess().getIsKeyword_6_2());
                      			
                    }
                    // InternalAlf.g:1680:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1681:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1681:5: ( ruleQualifiedName )
                    // InternalAlf.g:1682:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementBehaviorCrossReference_6_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_30=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_6_4());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAlf.g:1705:3: (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' )
                    {
                    // InternalAlf.g:1705:3: (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' )
                    // InternalAlf.g:1706:4: otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';'
                    {
                    otherlv_31=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getNonFeatureMemberElementAccess().getFunctionKeyword_7_0());
                      			
                    }
                    // InternalAlf.g:1710:4: ( (lv_memberName_32_0= ruleName ) )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( ((LA20_0>=RULE_ID && LA20_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalAlf.g:1711:5: (lv_memberName_32_0= ruleName )
                            {
                            // InternalAlf.g:1711:5: (lv_memberName_32_0= ruleName )
                            // InternalAlf.g:1712:6: lv_memberName_32_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_7_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_32_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_32_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_33=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getNonFeatureMemberElementAccess().getIsKeyword_7_2());
                      			
                    }
                    // InternalAlf.g:1733:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1734:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1734:5: ( ruleQualifiedName )
                    // InternalAlf.g:1735:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementFunctionCrossReference_7_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_7_4());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAlf.g:1758:3: (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' )
                    {
                    // InternalAlf.g:1758:3: (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' )
                    // InternalAlf.g:1759:4: otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';'
                    {
                    otherlv_36=(Token)match(input,16,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getNonFeatureMemberElementAccess().getImportKeyword_8_0());
                      			
                    }
                    // InternalAlf.g:1763:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1764:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1764:5: ( ruleQualifiedName )
                    // InternalAlf.g:1765:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementElementCrossReference_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAlf.g:1782:4: (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==21) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalAlf.g:1783:5: otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) )
                            {
                            otherlv_38=(Token)match(input,21,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_38, grammarAccess.getNonFeatureMemberElementAccess().getAsKeyword_8_2_0());
                              				
                            }
                            // InternalAlf.g:1787:5: ( (lv_memberName_39_0= ruleName ) )
                            // InternalAlf.g:1788:6: (lv_memberName_39_0= ruleName )
                            {
                            // InternalAlf.g:1788:6: (lv_memberName_39_0= ruleName )
                            // InternalAlf.g:1789:7: lv_memberName_39_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_8_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_19);
                            lv_memberName_39_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
                              							}
                              							set(
                              								current,
                              								"memberName",
                              								lv_memberName_39_0,
                              								"org.omg.sysml.Alf.Name");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_40=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_8_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureMemberElement"


    // $ANTLR start "ruleFeaturePackageMemberElement"
    // InternalAlf.g:1817:1: ruleFeaturePackageMemberElement[EObject in_current] returns [EObject current=in_current] : ( ( (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) ) ) | (otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) ) ) | ( ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | this_BehaviorStepMemberDefinition_16= ruleBehaviorStepMemberDefinition[$current] ) ;
    public final EObject ruleFeaturePackageMemberElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_ownedRelatedElement_1_0 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_6_0 = null;

        EObject lv_ownedRelatedElement_9_0 = null;

        AntlrDatatypeRuleToken lv_memberName_11_0 = null;

        AntlrDatatypeRuleToken lv_memberName_12_0 = null;

        EObject this_BehaviorStepMemberDefinition_16 = null;



        	enterRule();

        try {
            // InternalAlf.g:1823:2: ( ( ( (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) ) ) | (otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) ) ) | ( ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | this_BehaviorStepMemberDefinition_16= ruleBehaviorStepMemberDefinition[$current] ) )
            // InternalAlf.g:1824:2: ( ( (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) ) ) | (otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) ) ) | ( ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | this_BehaviorStepMemberDefinition_16= ruleBehaviorStepMemberDefinition[$current] )
            {
            // InternalAlf.g:1824:2: ( ( (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) ) ) | (otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) ) ) | ( ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | this_BehaviorStepMemberDefinition_16= ruleBehaviorStepMemberDefinition[$current] )
            int alt27=6;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalAlf.g:1825:3: ( (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) ) )
                    {
                    // InternalAlf.g:1825:3: ( (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) ) )
                    // InternalAlf.g:1826:4: (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) )
                    {
                    // InternalAlf.g:1826:4: (otherlv_0= 'feature' )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==32) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalAlf.g:1827:5: otherlv_0= 'feature'
                            {
                            otherlv_0=(Token)match(input,32,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getFeaturePackageMemberElementAccess().getFeatureKeyword_0_0());
                              				
                            }

                            }
                            break;

                    }

                    // InternalAlf.g:1832:4: ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) )
                    // InternalAlf.g:1833:5: (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition )
                    {
                    // InternalAlf.g:1833:5: (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition )
                    // InternalAlf.g:1834:6: lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeaturePackageMemberElementRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_1_0,
                      							"org.omg.sysml.Alf.NamedFeatureDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAlf.g:1853:3: (otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) ) )
                    {
                    // InternalAlf.g:1853:3: (otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) ) )
                    // InternalAlf.g:1854:4: otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) )
                    {
                    otherlv_2=(Token)match(input,33,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFeaturePackageMemberElementAccess().getAbstractKeyword_1_0());
                      			
                    }
                    // InternalAlf.g:1858:4: (otherlv_3= 'feature' )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==32) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalAlf.g:1859:5: otherlv_3= 'feature'
                            {
                            otherlv_3=(Token)match(input,32,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getFeaturePackageMemberElementAccess().getFeatureKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalAlf.g:1864:4: ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) )
                    // InternalAlf.g:1865:5: (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition )
                    {
                    // InternalAlf.g:1865:5: (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition )
                    // InternalAlf.g:1866:6: lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_4_0=ruleAbstractNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeaturePackageMemberElementRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.sysml.Alf.AbstractNamedFeatureDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAlf.g:1885:3: (otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) ) )
                    {
                    // InternalAlf.g:1885:3: (otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) ) )
                    // InternalAlf.g:1886:4: otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) )
                    {
                    otherlv_5=(Token)match(input,32,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFeaturePackageMemberElementAccess().getFeatureKeyword_2_0());
                      			
                    }
                    // InternalAlf.g:1890:4: ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) )
                    // InternalAlf.g:1891:5: (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition )
                    {
                    // InternalAlf.g:1891:5: (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition )
                    // InternalAlf.g:1892:6: lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getOwnedRelatedElementUnnamedFeatureDefinitionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_6_0=ruleUnnamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeaturePackageMemberElementRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_6_0,
                      							"org.omg.sysml.Alf.UnnamedFeatureDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAlf.g:1911:3: (otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) ) )
                    {
                    // InternalAlf.g:1911:3: (otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) ) )
                    // InternalAlf.g:1912:4: otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) )
                    {
                    otherlv_7=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFeaturePackageMemberElementAccess().getAbstractKeyword_3_0());
                      			
                    }
                    otherlv_8=(Token)match(input,32,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getFeaturePackageMemberElementAccess().getFeatureKeyword_3_1());
                      			
                    }
                    // InternalAlf.g:1920:4: ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) )
                    // InternalAlf.g:1921:5: (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition )
                    {
                    // InternalAlf.g:1921:5: (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition )
                    // InternalAlf.g:1922:6: lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getOwnedRelatedElementAbstractUnnamedFeatureDefinitionParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_9_0=ruleAbstractUnnamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeaturePackageMemberElementRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_9_0,
                      							"org.omg.sysml.Alf.AbstractUnnamedFeatureDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAlf.g:1941:3: ( ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' )
                    {
                    // InternalAlf.g:1941:3: ( ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' )
                    // InternalAlf.g:1942:4: ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';'
                    {
                    // InternalAlf.g:1942:4: ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) )
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==32) ) {
                        alt26=1;
                    }
                    else if ( ((LA26_0>=RULE_ID && LA26_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt26=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalAlf.g:1943:5: (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? )
                            {
                            // InternalAlf.g:1943:5: (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? )
                            // InternalAlf.g:1944:6: otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )?
                            {
                            otherlv_10=(Token)match(input,32,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getFeaturePackageMemberElementAccess().getFeatureKeyword_4_0_0_0());
                              					
                            }
                            // InternalAlf.g:1948:6: ( (lv_memberName_11_0= ruleName ) )?
                            int alt25=2;
                            int LA25_0 = input.LA(1);

                            if ( ((LA25_0>=RULE_ID && LA25_0<=RULE_UNRESTRICTED_NAME)) ) {
                                alt25=1;
                            }
                            switch (alt25) {
                                case 1 :
                                    // InternalAlf.g:1949:7: (lv_memberName_11_0= ruleName )
                                    {
                                    // InternalAlf.g:1949:7: (lv_memberName_11_0= ruleName )
                                    // InternalAlf.g:1950:8: lv_memberName_11_0= ruleName
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getMemberNameNameParserRuleCall_4_0_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_28);
                                    lv_memberName_11_0=ruleName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getFeaturePackageMemberElementRule());
                                      								}
                                      								set(
                                      									current,
                                      									"memberName",
                                      									lv_memberName_11_0,
                                      									"org.omg.sysml.Alf.Name");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalAlf.g:1969:5: ( (lv_memberName_12_0= ruleName ) )
                            {
                            // InternalAlf.g:1969:5: ( (lv_memberName_12_0= ruleName ) )
                            // InternalAlf.g:1970:6: (lv_memberName_12_0= ruleName )
                            {
                            // InternalAlf.g:1970:6: (lv_memberName_12_0= ruleName )
                            // InternalAlf.g:1971:7: lv_memberName_12_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getMemberNameNameParserRuleCall_4_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_12_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFeaturePackageMemberElementRule());
                              							}
                              							set(
                              								current,
                              								"memberName",
                              								lv_memberName_12_0,
                              								"org.omg.sysml.Alf.Name");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFeaturePackageMemberElementAccess().getIsKeyword_4_1());
                      			
                    }
                    // InternalAlf.g:1993:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:1994:5: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:1994:5: ( ruleQualifiedName )
                    // InternalAlf.g:1995:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeaturePackageMemberElementRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getMemberElementFeatureCrossReference_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFeaturePackageMemberElementAccess().getSemicolonKeyword_4_3());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAlf.g:2018:3: this_BehaviorStepMemberDefinition_16= ruleBehaviorStepMemberDefinition[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeaturePackageMemberElementRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeaturePackageMemberElementAccess().getBehaviorStepMemberDefinitionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BehaviorStepMemberDefinition_16=ruleBehaviorStepMemberDefinition(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BehaviorStepMemberDefinition_16;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeaturePackageMemberElement"


    // $ANTLR start "ruleCategoryBody"
    // InternalAlf.g:2037:1: ruleCategoryBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) ;
    public final EObject ruleCategoryBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:2043:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) )
            // InternalAlf.g:2044:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            {
            // InternalAlf.g:2044:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==20) ) {
                alt29=1;
            }
            else if ( (LA29_0==23) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalAlf.g:2045:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getCategoryBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAlf.g:2050:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    {
                    // InternalAlf.g:2050:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    // InternalAlf.g:2051:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}'
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCategoryBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalAlf.g:2055:4: ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop28:
                    do {
                        int alt28=3;
                        alt28 = dfa28.predict(input);
                        switch (alt28) {
                    	case 1 :
                    	    // InternalAlf.g:2056:5: ( (lv_ownedRelationship_2_0= ruleCategoryMember ) )
                    	    {
                    	    // InternalAlf.g:2056:5: ( (lv_ownedRelationship_2_0= ruleCategoryMember ) )
                    	    // InternalAlf.g:2057:6: (lv_ownedRelationship_2_0= ruleCategoryMember )
                    	    {
                    	    // InternalAlf.g:2057:6: (lv_ownedRelationship_2_0= ruleCategoryMember )
                    	    // InternalAlf.g:2058:7: lv_ownedRelationship_2_0= ruleCategoryMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getCategoryBodyAccess().getOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_32);
                    	    lv_ownedRelationship_2_0=ruleCategoryMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getCategoryBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.sysml.Alf.CategoryMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalAlf.g:2076:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    {
                    	    // InternalAlf.g:2076:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:2077:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    {
                    	    // InternalAlf.g:2077:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:2078:7: lv_ownedRelationship_3_0= rulePackageImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getCategoryBodyAccess().getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_32);
                    	    lv_ownedRelationship_3_0=rulePackageImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getCategoryBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.sysml.Alf.PackageImport");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getCategoryBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCategoryBody"


    // $ANTLR start "ruleAbstractCategoryBody"
    // InternalAlf.g:2106:1: ruleAbstractCategoryBody[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= ';' ) ) | ( ( (lv_isAbstract_1_0= '{' ) ) ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) ;
    public final EObject ruleAbstractCategoryBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token lv_isAbstract_1_0=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:2112:2: ( ( ( (lv_isAbstract_0_0= ';' ) ) | ( ( (lv_isAbstract_1_0= '{' ) ) ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) )
            // InternalAlf.g:2113:2: ( ( (lv_isAbstract_0_0= ';' ) ) | ( ( (lv_isAbstract_1_0= '{' ) ) ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            {
            // InternalAlf.g:2113:2: ( ( (lv_isAbstract_0_0= ';' ) ) | ( ( (lv_isAbstract_1_0= '{' ) ) ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==20) ) {
                alt31=1;
            }
            else if ( (LA31_0==23) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalAlf.g:2114:3: ( (lv_isAbstract_0_0= ';' ) )
                    {
                    // InternalAlf.g:2114:3: ( (lv_isAbstract_0_0= ';' ) )
                    // InternalAlf.g:2115:4: (lv_isAbstract_0_0= ';' )
                    {
                    // InternalAlf.g:2115:4: (lv_isAbstract_0_0= ';' )
                    // InternalAlf.g:2116:5: lv_isAbstract_0_0= ';'
                    {
                    lv_isAbstract_0_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAbstractCategoryBodyAccess().getIsAbstractSemicolonKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAbstractCategoryBodyRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, ";");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAlf.g:2129:3: ( ( (lv_isAbstract_1_0= '{' ) ) ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    {
                    // InternalAlf.g:2129:3: ( ( (lv_isAbstract_1_0= '{' ) ) ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    // InternalAlf.g:2130:4: ( (lv_isAbstract_1_0= '{' ) ) ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}'
                    {
                    // InternalAlf.g:2130:4: ( (lv_isAbstract_1_0= '{' ) )
                    // InternalAlf.g:2131:5: (lv_isAbstract_1_0= '{' )
                    {
                    // InternalAlf.g:2131:5: (lv_isAbstract_1_0= '{' )
                    // InternalAlf.g:2132:6: lv_isAbstract_1_0= '{'
                    {
                    lv_isAbstract_1_0=(Token)match(input,23,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isAbstract_1_0, grammarAccess.getAbstractCategoryBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAbstractCategoryBodyRule());
                      						}
                      						setWithLastConsumed(current, "isAbstract", true, "{");
                      					
                    }

                    }


                    }

                    // InternalAlf.g:2144:4: ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop30:
                    do {
                        int alt30=3;
                        alt30 = dfa30.predict(input);
                        switch (alt30) {
                    	case 1 :
                    	    // InternalAlf.g:2145:5: ( (lv_ownedRelationship_2_0= ruleCategoryMember ) )
                    	    {
                    	    // InternalAlf.g:2145:5: ( (lv_ownedRelationship_2_0= ruleCategoryMember ) )
                    	    // InternalAlf.g:2146:6: (lv_ownedRelationship_2_0= ruleCategoryMember )
                    	    {
                    	    // InternalAlf.g:2146:6: (lv_ownedRelationship_2_0= ruleCategoryMember )
                    	    // InternalAlf.g:2147:7: lv_ownedRelationship_2_0= ruleCategoryMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAbstractCategoryBodyAccess().getOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_32);
                    	    lv_ownedRelationship_2_0=ruleCategoryMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAbstractCategoryBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.sysml.Alf.CategoryMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalAlf.g:2165:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    {
                    	    // InternalAlf.g:2165:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:2166:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    {
                    	    // InternalAlf.g:2166:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:2167:7: lv_ownedRelationship_3_0= rulePackageImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAbstractCategoryBodyAccess().getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_32);
                    	    lv_ownedRelationship_3_0=rulePackageImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAbstractCategoryBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.sysml.Alf.PackageImport");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAbstractCategoryBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractCategoryBody"


    // $ANTLR start "entryRuleCategoryMember"
    // InternalAlf.g:2194:1: entryRuleCategoryMember returns [EObject current=null] : iv_ruleCategoryMember= ruleCategoryMember EOF ;
    public final EObject entryRuleCategoryMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCategoryMember = null;


        try {
            // InternalAlf.g:2194:55: (iv_ruleCategoryMember= ruleCategoryMember EOF )
            // InternalAlf.g:2195:2: iv_ruleCategoryMember= ruleCategoryMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCategoryMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCategoryMember=ruleCategoryMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCategoryMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCategoryMember"


    // $ANTLR start "ruleCategoryMember"
    // InternalAlf.g:2201:1: ruleCategoryMember returns [EObject current=null] : (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_FeatureCategoryMember_2= ruleFeatureCategoryMember ) ;
    public final EObject ruleCategoryMember() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureCategoryMember_0 = null;

        EObject this_FeatureMember_1 = null;

        EObject this_FeatureCategoryMember_2 = null;



        	enterRule();

        try {
            // InternalAlf.g:2207:2: ( (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_FeatureCategoryMember_2= ruleFeatureCategoryMember ) )
            // InternalAlf.g:2208:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_FeatureCategoryMember_2= ruleFeatureCategoryMember )
            {
            // InternalAlf.g:2208:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_FeatureCategoryMember_2= ruleFeatureCategoryMember )
            int alt32=3;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalAlf.g:2209:3: this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCategoryMemberAccess().getNonFeatureCategoryMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureCategoryMember_0=ruleNonFeatureCategoryMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureCategoryMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAlf.g:2221:3: this_FeatureMember_1= ruleFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCategoryMemberAccess().getFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureMember_1=ruleFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAlf.g:2233:3: this_FeatureCategoryMember_2= ruleFeatureCategoryMember
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCategoryMemberAccess().getFeatureCategoryMemberParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCategoryMember_2=ruleFeatureCategoryMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureCategoryMember_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCategoryMember"


    // $ANTLR start "entryRuleNonFeatureCategoryMember"
    // InternalAlf.g:2248:1: entryRuleNonFeatureCategoryMember returns [EObject current=null] : iv_ruleNonFeatureCategoryMember= ruleNonFeatureCategoryMember EOF ;
    public final EObject entryRuleNonFeatureCategoryMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureCategoryMember = null;


        try {
            // InternalAlf.g:2248:65: (iv_ruleNonFeatureCategoryMember= ruleNonFeatureCategoryMember EOF )
            // InternalAlf.g:2249:2: iv_ruleNonFeatureCategoryMember= ruleNonFeatureCategoryMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureCategoryMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureCategoryMember=ruleNonFeatureCategoryMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureCategoryMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureCategoryMember"


    // $ANTLR start "ruleNonFeatureCategoryMember"
    // InternalAlf.g:2255:1: ruleNonFeatureCategoryMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] ) ;
    public final EObject ruleNonFeatureCategoryMember() throws RecognitionException {
        EObject current = null;

        EObject this_CategoryMemberPrefix_0 = null;

        EObject this_NonFeatureMemberElement_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:2261:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] ) )
            // InternalAlf.g:2262:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] )
            {
            // InternalAlf.g:2262:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current] )
            // InternalAlf.g:2263:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_NonFeatureMemberElement_1= ruleNonFeatureMemberElement[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNonFeatureCategoryMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNonFeatureCategoryMemberAccess().getCategoryMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_33);
            this_CategoryMemberPrefix_0=ruleCategoryMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryMemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNonFeatureCategoryMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNonFeatureCategoryMemberAccess().getNonFeatureMemberElementParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_NonFeatureMemberElement_1=ruleNonFeatureMemberElement(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NonFeatureMemberElement_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureCategoryMember"


    // $ANTLR start "entryRuleFeatureCategoryMember"
    // InternalAlf.g:2295:1: entryRuleFeatureCategoryMember returns [EObject current=null] : iv_ruleFeatureCategoryMember= ruleFeatureCategoryMember EOF ;
    public final EObject entryRuleFeatureCategoryMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureCategoryMember = null;


        try {
            // InternalAlf.g:2295:62: (iv_ruleFeatureCategoryMember= ruleFeatureCategoryMember EOF )
            // InternalAlf.g:2296:2: iv_ruleFeatureCategoryMember= ruleFeatureCategoryMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCategoryMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCategoryMember=ruleFeatureCategoryMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCategoryMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCategoryMember"


    // $ANTLR start "ruleFeatureCategoryMember"
    // InternalAlf.g:2302:1: ruleFeatureCategoryMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) ;
    public final EObject ruleFeatureCategoryMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject this_CategoryMemberPrefix_0 = null;

        Enumerator lv_direction_1_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;

        Enumerator lv_direction_4_0 = null;

        EObject lv_ownedRelatedElement_5_0 = null;

        Enumerator lv_direction_6_0 = null;

        AntlrDatatypeRuleToken lv_memberName_7_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:2308:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) )
            // InternalAlf.g:2309:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) )
            {
            // InternalAlf.g:2309:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) )
            // InternalAlf.g:2310:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureCategoryMemberRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getCategoryMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_34);
            this_CategoryMemberPrefix_0=ruleCategoryMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryMemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:2324:3: ( ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) )
            int alt36=3;
            switch ( input.LA(1) ) {
            case 89:
                {
                int LA36_1 = input.LA(2);

                if ( (LA36_1==RULE_ID) ) {
                    int LA36_4 = input.LA(3);

                    if ( (LA36_4==25) ) {
                        alt36=3;
                    }
                    else if ( (LA36_4==20||LA36_4==23||(LA36_4>=46 && LA36_4<=48)||(LA36_4>=51 && LA36_4<=53)||LA36_4==56) ) {
                        alt36=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA36_1==RULE_UNRESTRICTED_NAME) ) {
                    int LA36_5 = input.LA(3);

                    if ( (LA36_5==25) ) {
                        alt36=3;
                    }
                    else if ( (LA36_5==20||LA36_5==23||(LA36_5>=46 && LA36_5<=48)||(LA36_5>=51 && LA36_5<=53)||LA36_5==56) ) {
                        alt36=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 1, input);

                    throw nvae;
                }
                }
                break;
            case 90:
                {
                int LA36_2 = input.LA(2);

                if ( (LA36_2==RULE_ID) ) {
                    int LA36_4 = input.LA(3);

                    if ( (LA36_4==25) ) {
                        alt36=3;
                    }
                    else if ( (LA36_4==20||LA36_4==23||(LA36_4>=46 && LA36_4<=48)||(LA36_4>=51 && LA36_4<=53)||LA36_4==56) ) {
                        alt36=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA36_2==RULE_UNRESTRICTED_NAME) ) {
                    int LA36_5 = input.LA(3);

                    if ( (LA36_5==25) ) {
                        alt36=3;
                    }
                    else if ( (LA36_5==20||LA36_5==23||(LA36_5>=46 && LA36_5<=48)||(LA36_5>=51 && LA36_5<=53)||LA36_5==56) ) {
                        alt36=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 2, input);

                    throw nvae;
                }
                }
                break;
            case 91:
                {
                int LA36_3 = input.LA(2);

                if ( (LA36_3==RULE_ID) ) {
                    int LA36_4 = input.LA(3);

                    if ( (LA36_4==25) ) {
                        alt36=3;
                    }
                    else if ( (LA36_4==20||LA36_4==23||(LA36_4>=46 && LA36_4<=48)||(LA36_4>=51 && LA36_4<=53)||LA36_4==56) ) {
                        alt36=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA36_3==RULE_UNRESTRICTED_NAME) ) {
                    int LA36_5 = input.LA(3);

                    if ( (LA36_5==25) ) {
                        alt36=3;
                    }
                    else if ( (LA36_5==20||LA36_5==23||(LA36_5>=46 && LA36_5<=48)||(LA36_5>=51 && LA36_5<=53)||LA36_5==56) ) {
                        alt36=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA36_4 = input.LA(2);

                if ( (LA36_4==25) ) {
                    alt36=3;
                }
                else if ( (LA36_4==20||LA36_4==23||(LA36_4>=46 && LA36_4<=48)||(LA36_4>=51 && LA36_4<=53)||LA36_4==56) ) {
                    alt36=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UNRESTRICTED_NAME:
                {
                int LA36_5 = input.LA(2);

                if ( (LA36_5==25) ) {
                    alt36=3;
                }
                else if ( (LA36_5==20||LA36_5==23||(LA36_5>=46 && LA36_5<=48)||(LA36_5>=51 && LA36_5<=53)||LA36_5==56) ) {
                    alt36=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 5, input);

                    throw nvae;
                }
                }
                break;
            case 33:
                {
                alt36=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalAlf.g:2325:4: ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) )
                    {
                    // InternalAlf.g:2325:4: ( ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) ) )
                    // InternalAlf.g:2326:5: ( (lv_direction_1_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) )
                    {
                    // InternalAlf.g:2326:5: ( (lv_direction_1_0= ruleFeatureDirection ) )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( ((LA33_0>=89 && LA33_0<=91)) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalAlf.g:2327:6: (lv_direction_1_0= ruleFeatureDirection )
                            {
                            // InternalAlf.g:2327:6: (lv_direction_1_0= ruleFeatureDirection )
                            // InternalAlf.g:2328:7: lv_direction_1_0= ruleFeatureDirection
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_direction_1_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFeatureCategoryMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_1_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalAlf.g:2345:5: ( (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition ) )
                    // InternalAlf.g:2346:6: (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition )
                    {
                    // InternalAlf.g:2346:6: (lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition )
                    // InternalAlf.g:2347:7: lv_ownedRelatedElement_2_0= ruleNamedFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_2_0=ruleNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeatureCategoryMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_2_0,
                      								"org.omg.sysml.Alf.NamedFeatureDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAlf.g:2366:4: (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) )
                    {
                    // InternalAlf.g:2366:4: (otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) ) )
                    // InternalAlf.g:2367:5: otherlv_3= 'abstract' ( (lv_direction_4_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) )
                    {
                    otherlv_3=(Token)match(input,33,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getFeatureCategoryMemberAccess().getAbstractKeyword_1_1_0());
                      				
                    }
                    // InternalAlf.g:2371:5: ( (lv_direction_4_0= ruleFeatureDirection ) )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( ((LA34_0>=89 && LA34_0<=91)) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalAlf.g:2372:6: (lv_direction_4_0= ruleFeatureDirection )
                            {
                            // InternalAlf.g:2372:6: (lv_direction_4_0= ruleFeatureDirection )
                            // InternalAlf.g:2373:7: lv_direction_4_0= ruleFeatureDirection
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_direction_4_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFeatureCategoryMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_4_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalAlf.g:2390:5: ( (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition ) )
                    // InternalAlf.g:2391:6: (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition )
                    {
                    // InternalAlf.g:2391:6: (lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition )
                    // InternalAlf.g:2392:7: lv_ownedRelatedElement_5_0= ruleAbstractNamedFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_5_0=ruleAbstractNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeatureCategoryMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_5_0,
                      								"org.omg.sysml.Alf.AbstractNamedFeatureDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAlf.g:2411:4: ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' )
                    {
                    // InternalAlf.g:2411:4: ( ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' )
                    // InternalAlf.g:2412:5: ( (lv_direction_6_0= ruleFeatureDirection ) )? ( (lv_memberName_7_0= ruleName ) ) otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';'
                    {
                    // InternalAlf.g:2412:5: ( (lv_direction_6_0= ruleFeatureDirection ) )?
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( ((LA35_0>=89 && LA35_0<=91)) ) {
                        alt35=1;
                    }
                    switch (alt35) {
                        case 1 :
                            // InternalAlf.g:2413:6: (lv_direction_6_0= ruleFeatureDirection )
                            {
                            // InternalAlf.g:2413:6: (lv_direction_6_0= ruleFeatureDirection )
                            // InternalAlf.g:2414:7: lv_direction_6_0= ruleFeatureDirection
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_16);
                            lv_direction_6_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFeatureCategoryMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_6_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalAlf.g:2431:5: ( (lv_memberName_7_0= ruleName ) )
                    // InternalAlf.g:2432:6: (lv_memberName_7_0= ruleName )
                    {
                    // InternalAlf.g:2432:6: (lv_memberName_7_0= ruleName )
                    // InternalAlf.g:2433:7: lv_memberName_7_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getMemberNameNameParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FOLLOW_28);
                    lv_memberName_7_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeatureCategoryMemberRule());
                      							}
                      							set(
                      								current,
                      								"memberName",
                      								lv_memberName_7_0,
                      								"org.omg.sysml.Alf.Name");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFeatureCategoryMemberAccess().getIsKeyword_1_2_2());
                      				
                    }
                    // InternalAlf.g:2454:5: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:2455:6: ( ruleQualifiedName )
                    {
                    // InternalAlf.g:2455:6: ( ruleQualifiedName )
                    // InternalAlf.g:2456:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getFeatureCategoryMemberRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeatureCategoryMemberAccess().getMemberFeatureFeatureCrossReference_1_2_3_0());
                      						
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getFeatureCategoryMemberAccess().getSemicolonKeyword_1_2_4());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCategoryMember"


    // $ANTLR start "entryRuleFeatureMember"
    // InternalAlf.g:2483:1: entryRuleFeatureMember returns [EObject current=null] : iv_ruleFeatureMember= ruleFeatureMember EOF ;
    public final EObject entryRuleFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureMember = null;


        try {
            // InternalAlf.g:2483:54: (iv_ruleFeatureMember= ruleFeatureMember EOF )
            // InternalAlf.g:2484:2: iv_ruleFeatureMember= ruleFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureMember=ruleFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureMember"


    // $ANTLR start "ruleFeatureMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:2419:1: ruleFeatureMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) | (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) ) | (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) ) ) ) ;
=======
    // InternalAlf.g:2490:1: ruleFeatureMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isPart_2_0=null;
        Token lv_isPortion_3_0=null;
        Token lv_isPort_4_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_isPart_13_0=null;
        Token lv_isPortion_14_0=null;
        Token lv_isPort_15_0=null;
        Token otherlv_18=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        EObject this_CategoryMemberPrefix_0 = null;

        Enumerator lv_direction_5_0 = null;

        EObject lv_ownedRelatedElement_6_0 = null;

        AntlrDatatypeRuleToken lv_memberName_7_0 = null;

        Enumerator lv_direction_16_0 = null;

        EObject lv_ownedRelatedElement_17_0 = null;

        EObject lv_ownedRelatedElement_19_0 = null;

        AntlrDatatypeRuleToken lv_memberName_20_0 = null;

        EObject lv_ownedRelatedElement_26_0 = null;

        EObject lv_ownedRelatedElement_28_0 = null;

        AntlrDatatypeRuleToken lv_memberName_29_0 = null;

        EObject lv_ownedRelatedElement_35_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2425:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) | (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) ) | (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) ) ) ) )
            // InternalAlf.g:2426:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) | (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) ) | (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) ) ) )
=======
            // InternalAlf.g:2496:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) ) ) )
            // InternalAlf.g:2497:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2426:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) | (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) ) | (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) ) ) )
            // InternalAlf.g:2427:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) | (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) ) | (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) ) )
=======
            // InternalAlf.g:2497:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) ) )
            // InternalAlf.g:2498:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureMemberAccess().getCategoryMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_CategoryMemberPrefix_0=ruleCategoryMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryMemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2441:3: ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) | (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) ) | (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) ) )
            int alt47=6;
=======
            // InternalAlf.g:2512:3: ( ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) ) | (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) ) | (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) ) )
            int alt45=4;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            switch ( input.LA(1) ) {
            case 32:
            case 34:
            case 35:
            case 36:
                {
                alt47=1;
                }
                break;
            case 33:
                {
<<<<<<< Upstream, based on origin/ST6RI-75
                switch ( input.LA(2) ) {
                case 37:
                    {
                    alt47=4;
                    }
                    break;
                case 32:
                case 34:
                case 35:
                case 36:
                    {
                    alt47=2;
                    }
                    break;
                case 38:
                    {
                    alt47=6;
                    }
                    break;
                default:
=======
                int LA45_2 = input.LA(2);

                if ( (LA45_2==32||(LA45_2>=34 && LA45_2<=36)) ) {
                    alt45=2;
                }
                else if ( (LA45_2==37) ) {
                    alt45=4;
                }
                else {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 2, input);

                    throw nvae;
                }

                }
                break;
            case 37:
                {
                alt47=3;
                }
                break;
            case 38:
                {
                alt47=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // InternalAlf.g:2513:4: ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) )
                    {
                    // InternalAlf.g:2513:4: ( (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) ) )
                    // InternalAlf.g:2514:5: (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) ) ( (lv_direction_5_0= ruleFeatureDirection ) )? ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) )
                    {
                    // InternalAlf.g:2514:5: (otherlv_1= 'feature' | ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )
                    int alt37=4;
                    switch ( input.LA(1) ) {
                    case 32:
                        {
                        alt37=1;
                        }
                        break;
                    case 34:
                        {
                        alt37=2;
                        }
                        break;
                    case 35:
                        {
                        alt37=3;
                        }
                        break;
                    case 36:
                        {
                        alt37=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }

                    switch (alt37) {
                        case 1 :
                            // InternalAlf.g:2515:6: otherlv_1= 'feature'
                            {
                            otherlv_1=(Token)match(input,32,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getFeatureMemberAccess().getFeatureKeyword_1_0_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAlf.g:2520:6: ( (lv_isPart_2_0= 'part' ) )
                            {
                            // InternalAlf.g:2520:6: ( (lv_isPart_2_0= 'part' ) )
                            // InternalAlf.g:2521:7: (lv_isPart_2_0= 'part' )
                            {
                            // InternalAlf.g:2521:7: (lv_isPart_2_0= 'part' )
                            // InternalAlf.g:2522:8: lv_isPart_2_0= 'part'
                            {
                            lv_isPart_2_0=(Token)match(input,34,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPart_2_0, grammarAccess.getFeatureMemberAccess().getIsPartPartKeyword_1_0_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPart", true, "part");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalAlf.g:2535:6: ( (lv_isPortion_3_0= 'portion' ) )
                            {
                            // InternalAlf.g:2535:6: ( (lv_isPortion_3_0= 'portion' ) )
                            // InternalAlf.g:2536:7: (lv_isPortion_3_0= 'portion' )
                            {
                            // InternalAlf.g:2536:7: (lv_isPortion_3_0= 'portion' )
                            // InternalAlf.g:2537:8: lv_isPortion_3_0= 'portion'
                            {
                            lv_isPortion_3_0=(Token)match(input,35,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPortion_3_0, grammarAccess.getFeatureMemberAccess().getIsPortionPortionKeyword_1_0_0_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPortion", true, "portion");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalAlf.g:2550:6: ( (lv_isPort_4_0= 'port' ) )
                            {
                            // InternalAlf.g:2550:6: ( (lv_isPort_4_0= 'port' ) )
                            // InternalAlf.g:2551:7: (lv_isPort_4_0= 'port' )
                            {
                            // InternalAlf.g:2551:7: (lv_isPort_4_0= 'port' )
                            // InternalAlf.g:2552:8: lv_isPort_4_0= 'port'
                            {
                            lv_isPort_4_0=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPort_4_0, grammarAccess.getFeatureMemberAccess().getIsPortPortKeyword_1_0_0_3_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPort", true, "port");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalAlf.g:2565:5: ( (lv_direction_5_0= ruleFeatureDirection ) )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( ((LA38_0>=89 && LA38_0<=91)) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalAlf.g:2566:6: (lv_direction_5_0= ruleFeatureDirection )
                            {
                            // InternalAlf.g:2566:6: (lv_direction_5_0= ruleFeatureDirection )
                            // InternalAlf.g:2567:7: lv_direction_5_0= ruleFeatureDirection
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_38);
                            lv_direction_5_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_5_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalAlf.g:2584:5: ( ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) | ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) )
                    int alt40=2;
                    switch ( input.LA(1) ) {
                    case RULE_ID:
                        {
                        int LA40_1 = input.LA(2);

<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (LA40_1==20||LA40_1==23||(LA40_1>=46 && LA40_1<=48)||(LA40_1>=51 && LA40_1<=53)||LA40_1==56) ) {
=======
                        if ( (LA40_1==25) ) {
                            alt40=2;
                        }
                        else if ( (LA40_1==20||LA40_1==23||(LA40_1>=46 && LA40_1<=48)||(LA40_1>=51 && LA40_1<=53)||LA40_1==56) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            alt40=1;
                        }
                        else if ( (LA40_1==25) ) {
                            alt40=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 40, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_UNRESTRICTED_NAME:
                        {
                        int LA40_2 = input.LA(2);

<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (LA40_2==25) ) {
                            alt40=2;
                        }
                        else if ( (LA40_2==20||LA40_2==23||(LA40_2>=46 && LA40_2<=48)||(LA40_2>=51 && LA40_2<=53)||LA40_2==56) ) {
=======
                        if ( (LA40_2==20||LA40_2==23||(LA40_2>=46 && LA40_2<=48)||(LA40_2>=51 && LA40_2<=53)||LA40_2==56) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            alt40=1;
                        }
                        else if ( (LA40_2==25) ) {
                            alt40=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 40, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 46:
                        {
                        alt40=1;
                        }
                        break;
                    case 25:
                        {
                        alt40=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 0, input);

                        throw nvae;
                    }

                    switch (alt40) {
                        case 1 :
                            // InternalAlf.g:2585:6: ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) )
                            {
                            // InternalAlf.g:2585:6: ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) )
                            // InternalAlf.g:2586:7: (lv_ownedRelatedElement_6_0= ruleFeatureDefinition )
                            {
                            // InternalAlf.g:2586:7: (lv_ownedRelatedElement_6_0= ruleFeatureDefinition )
                            // InternalAlf.g:2587:8: lv_ownedRelatedElement_6_0= ruleFeatureDefinition
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelatedElement_6_0=ruleFeatureDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                              								}
                              								add(
                              									current,
                              									"ownedRelatedElement",
                              									lv_ownedRelatedElement_6_0,
                              									"org.omg.sysml.Alf.FeatureDefinition");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalAlf.g:2605:6: ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' )
                            {
                            // InternalAlf.g:2605:6: ( ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' )
                            // InternalAlf.g:2606:7: ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';'
                            {
                            // InternalAlf.g:2606:7: ( (lv_memberName_7_0= ruleName ) )?
                            int alt39=2;
                            int LA39_0 = input.LA(1);

                            if ( ((LA39_0>=RULE_ID && LA39_0<=RULE_UNRESTRICTED_NAME)) ) {
                                alt39=1;
                            }
                            switch (alt39) {
                                case 1 :
                                    // InternalAlf.g:2607:8: (lv_memberName_7_0= ruleName )
                                    {
                                    // InternalAlf.g:2607:8: (lv_memberName_7_0= ruleName )
                                    // InternalAlf.g:2608:9: lv_memberName_7_0= ruleName
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberNameNameParserRuleCall_1_0_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_28);
                                    lv_memberName_7_0=ruleName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                                      									}
                                      									set(
                                      										current,
                                      										"memberName",
                                      										lv_memberName_7_0,
                                      										"org.omg.sysml.Alf.Name");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getFeatureMemberAccess().getIsKeyword_1_0_2_1_1());
                              						
                            }
                            // InternalAlf.g:2629:7: ( ( ruleQualifiedName ) )
                            // InternalAlf.g:2630:8: ( ruleQualifiedName )
                            {
                            // InternalAlf.g:2630:8: ( ruleQualifiedName )
                            // InternalAlf.g:2631:9: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              									/* */
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getFeatureMemberRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberFeatureFeatureCrossReference_1_0_2_1_2_0());
                              								
                            }
                            pushFollow(FOLLOW_19);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_10, grammarAccess.getFeatureMemberAccess().getSemicolonKeyword_1_0_2_1_3());
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAlf.g:2656:4: (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) )
                    {
                    // InternalAlf.g:2656:4: (otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) ) )
                    // InternalAlf.g:2657:5: otherlv_11= 'abstract' (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) ) ( (lv_direction_16_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) )
                    {
                    otherlv_11=(Token)match(input,33,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getFeatureMemberAccess().getAbstractKeyword_1_1_0());
                      				
                    }
                    // InternalAlf.g:2661:5: (otherlv_12= 'feature' | ( (lv_isPart_13_0= 'part' ) ) | ( (lv_isPortion_14_0= 'portion' ) ) | ( (lv_isPort_15_0= 'port' ) ) )
                    int alt41=4;
                    switch ( input.LA(1) ) {
                    case 32:
                        {
                        alt41=1;
                        }
                        break;
                    case 34:
                        {
                        alt41=2;
                        }
                        break;
                    case 35:
                        {
                        alt41=3;
                        }
                        break;
                    case 36:
                        {
                        alt41=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 41, 0, input);

                        throw nvae;
                    }

                    switch (alt41) {
                        case 1 :
                            // InternalAlf.g:2662:6: otherlv_12= 'feature'
                            {
                            otherlv_12=(Token)match(input,32,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getFeatureMemberAccess().getFeatureKeyword_1_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAlf.g:2667:6: ( (lv_isPart_13_0= 'part' ) )
                            {
                            // InternalAlf.g:2667:6: ( (lv_isPart_13_0= 'part' ) )
                            // InternalAlf.g:2668:7: (lv_isPart_13_0= 'part' )
                            {
                            // InternalAlf.g:2668:7: (lv_isPart_13_0= 'part' )
                            // InternalAlf.g:2669:8: lv_isPart_13_0= 'part'
                            {
                            lv_isPart_13_0=(Token)match(input,34,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPart_13_0, grammarAccess.getFeatureMemberAccess().getIsPartPartKeyword_1_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPart", true, "part");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalAlf.g:2682:6: ( (lv_isPortion_14_0= 'portion' ) )
                            {
                            // InternalAlf.g:2682:6: ( (lv_isPortion_14_0= 'portion' ) )
                            // InternalAlf.g:2683:7: (lv_isPortion_14_0= 'portion' )
                            {
                            // InternalAlf.g:2683:7: (lv_isPortion_14_0= 'portion' )
                            // InternalAlf.g:2684:8: lv_isPortion_14_0= 'portion'
                            {
                            lv_isPortion_14_0=(Token)match(input,35,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPortion_14_0, grammarAccess.getFeatureMemberAccess().getIsPortionPortionKeyword_1_1_1_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPortion", true, "portion");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalAlf.g:2697:6: ( (lv_isPort_15_0= 'port' ) )
                            {
                            // InternalAlf.g:2697:6: ( (lv_isPort_15_0= 'port' ) )
                            // InternalAlf.g:2698:7: (lv_isPort_15_0= 'port' )
                            {
                            // InternalAlf.g:2698:7: (lv_isPort_15_0= 'port' )
                            // InternalAlf.g:2699:8: lv_isPort_15_0= 'port'
                            {
                            lv_isPort_15_0=(Token)match(input,36,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPort_15_0, grammarAccess.getFeatureMemberAccess().getIsPortPortKeyword_1_1_1_3_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPort", true, "port");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalAlf.g:2712:5: ( (lv_direction_16_0= ruleFeatureDirection ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( ((LA42_0>=89 && LA42_0<=91)) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalAlf.g:2713:6: (lv_direction_16_0= ruleFeatureDirection )
                            {
                            // InternalAlf.g:2713:6: (lv_direction_16_0= ruleFeatureDirection )
                            // InternalAlf.g:2714:7: lv_direction_16_0= ruleFeatureDirection
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_40);
                            lv_direction_16_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_16_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalAlf.g:2731:5: ( (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition ) )
                    // InternalAlf.g:2732:6: (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition )
                    {
                    // InternalAlf.g:2732:6: (lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition )
                    // InternalAlf.g:2733:7: lv_ownedRelatedElement_17_0= ruleAbstractFeatureDefinition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_3_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_17_0=ruleAbstractFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_17_0,
                      								"org.omg.sysml.Alf.AbstractFeatureDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAlf.g:2752:4: (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) )
                    {
                    // InternalAlf.g:2752:4: (otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) ) )
                    // InternalAlf.g:2753:5: otherlv_18= 'connector' ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) )
                    {
                    otherlv_18=(Token)match(input,37,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getFeatureMemberAccess().getConnectorKeyword_1_2_0());
                      				
                    }
                    // InternalAlf.g:2757:5: ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) )
                    int alt44=2;
                    alt44 = dfa44.predict(input);
                    switch (alt44) {
                        case 1 :
                            // InternalAlf.g:2758:6: ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) )
                            {
                            // InternalAlf.g:2758:6: ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) )
                            // InternalAlf.g:2759:7: (lv_ownedRelatedElement_19_0= ruleConnectorDefinition )
                            {
                            // InternalAlf.g:2759:7: (lv_ownedRelatedElement_19_0= ruleConnectorDefinition )
                            // InternalAlf.g:2760:8: lv_ownedRelatedElement_19_0= ruleConnectorDefinition
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedRelatedElementConnectorDefinitionParserRuleCall_1_2_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelatedElement_19_0=ruleConnectorDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                              								}
                              								add(
                              									current,
                              									"ownedRelatedElement",
                              									lv_ownedRelatedElement_19_0,
                              									"org.omg.sysml.Alf.ConnectorDefinition");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalAlf.g:2778:6: ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' )
                            {
                            // InternalAlf.g:2778:6: ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' )
                            // InternalAlf.g:2779:7: ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';'
                            {
                            // InternalAlf.g:2779:7: ( (lv_memberName_20_0= ruleName ) )?
                            int alt43=2;
                            int LA43_0 = input.LA(1);

                            if ( ((LA43_0>=RULE_ID && LA43_0<=RULE_UNRESTRICTED_NAME)) ) {
                                alt43=1;
                            }
                            switch (alt43) {
                                case 1 :
                                    // InternalAlf.g:2780:8: (lv_memberName_20_0= ruleName )
                                    {
                                    // InternalAlf.g:2780:8: (lv_memberName_20_0= ruleName )
                                    // InternalAlf.g:2781:9: lv_memberName_20_0= ruleName
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberNameNameParserRuleCall_1_2_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_28);
                                    lv_memberName_20_0=ruleName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                                      									}
                                      									set(
                                      										current,
                                      										"memberName",
                                      										lv_memberName_20_0,
                                      										"org.omg.sysml.Alf.Name");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_21=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_21, grammarAccess.getFeatureMemberAccess().getIsKeyword_1_2_1_1_1());
                              						
                            }
                            // InternalAlf.g:2802:7: ( ( ruleQualifiedName ) )
                            // InternalAlf.g:2803:8: ( ruleQualifiedName )
                            {
                            // InternalAlf.g:2803:8: ( ruleQualifiedName )
                            // InternalAlf.g:2804:9: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              									/* */
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getFeatureMemberRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberFeatureConnectorCrossReference_1_2_1_1_2_0());
                              								
                            }
                            pushFollow(FOLLOW_19);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_23=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_23, grammarAccess.getFeatureMemberAccess().getSemicolonKeyword_1_2_1_1_3());
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAlf.g:2829:4: (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) )
                    {
                    // InternalAlf.g:2829:4: (otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) ) )
                    // InternalAlf.g:2830:5: otherlv_24= 'abstract' otherlv_25= 'connector' ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) )
                    {
                    otherlv_24=(Token)match(input,33,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_24, grammarAccess.getFeatureMemberAccess().getAbstractKeyword_1_3_0());
                      				
                    }
                    otherlv_25=(Token)match(input,37,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_25, grammarAccess.getFeatureMemberAccess().getConnectorKeyword_1_3_1());
                      				
                    }
                    // InternalAlf.g:2838:5: ( (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition ) )
                    // InternalAlf.g:2839:6: (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition )
                    {
                    // InternalAlf.g:2839:6: (lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition )
                    // InternalAlf.g:2840:7: lv_ownedRelatedElement_26_0= ruleAbstractConnectorDefinition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedRelatedElementAbstractConnectorDefinitionParserRuleCall_1_3_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_26_0=ruleAbstractConnectorDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_26_0,
                      								"org.omg.sysml.Alf.AbstractConnectorDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAlf.g:2788:4: (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) )
                    {
                    // InternalAlf.g:2788:4: (otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) ) )
                    // InternalAlf.g:2789:5: otherlv_27= 'succession' ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) )
                    {
                    otherlv_27=(Token)match(input,38,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_27, grammarAccess.getFeatureMemberAccess().getSuccessionKeyword_1_4_0());
                      				
                    }
                    // InternalAlf.g:2793:5: ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) )
                    int alt46=2;
                    alt46 = dfa46.predict(input);
                    switch (alt46) {
                        case 1 :
                            // InternalAlf.g:2794:6: ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) )
                            {
                            // InternalAlf.g:2794:6: ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) )
                            // InternalAlf.g:2795:7: (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition )
                            {
                            // InternalAlf.g:2795:7: (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition )
                            // InternalAlf.g:2796:8: lv_ownedRelatedElement_28_0= ruleSuccessionDefinition
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedRelatedElementSuccessionDefinitionParserRuleCall_1_4_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelatedElement_28_0=ruleSuccessionDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                              								}
                              								add(
                              									current,
                              									"ownedRelatedElement",
                              									lv_ownedRelatedElement_28_0,
                              									"org.omg.sysml.Alf.SuccessionDefinition");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalAlf.g:2814:6: ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' )
                            {
                            // InternalAlf.g:2814:6: ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' )
                            // InternalAlf.g:2815:7: ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';'
                            {
                            // InternalAlf.g:2815:7: ( (lv_memberName_29_0= ruleName ) )?
                            int alt45=2;
                            int LA45_0 = input.LA(1);

                            if ( ((LA45_0>=RULE_ID && LA45_0<=RULE_UNRESTRICTED_NAME)) ) {
                                alt45=1;
                            }
                            switch (alt45) {
                                case 1 :
                                    // InternalAlf.g:2816:8: (lv_memberName_29_0= ruleName )
                                    {
                                    // InternalAlf.g:2816:8: (lv_memberName_29_0= ruleName )
                                    // InternalAlf.g:2817:9: lv_memberName_29_0= ruleName
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberNameNameParserRuleCall_1_4_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_27);
                                    lv_memberName_29_0=ruleName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                                      									}
                                      									set(
                                      										current,
                                      										"memberName",
                                      										lv_memberName_29_0,
                                      										"org.omg.sysml.Alf.Name");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_30=(Token)match(input,25,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_30, grammarAccess.getFeatureMemberAccess().getIsKeyword_1_4_1_1_1());
                              						
                            }
                            // InternalAlf.g:2838:7: ( ( ruleQualifiedName ) )
                            // InternalAlf.g:2839:8: ( ruleQualifiedName )
                            {
                            // InternalAlf.g:2839:8: ( ruleQualifiedName )
                            // InternalAlf.g:2840:9: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              									/* */
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getFeatureMemberRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberFeatureSuccessionCrossReference_1_4_1_1_2_0());
                              								
                            }
                            pushFollow(FOLLOW_18);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_32=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_32, grammarAccess.getFeatureMemberAccess().getSemicolonKeyword_1_4_1_1_3());
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAlf.g:2865:4: (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) )
                    {
                    // InternalAlf.g:2865:4: (otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) ) )
                    // InternalAlf.g:2866:5: otherlv_33= 'abstract' otherlv_34= 'succession' ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) )
                    {
                    otherlv_33=(Token)match(input,33,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_33, grammarAccess.getFeatureMemberAccess().getAbstractKeyword_1_5_0());
                      				
                    }
                    otherlv_34=(Token)match(input,38,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_34, grammarAccess.getFeatureMemberAccess().getSuccessionKeyword_1_5_1());
                      				
                    }
                    // InternalAlf.g:2874:5: ( (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition ) )
                    // InternalAlf.g:2875:6: (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition )
                    {
                    // InternalAlf.g:2875:6: (lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition )
                    // InternalAlf.g:2876:7: lv_ownedRelatedElement_35_0= ruleAbstractSuccessionDefinition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedRelatedElementAbstractSuccessionDefinitionParserRuleCall_1_5_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_35_0=ruleAbstractSuccessionDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_35_0,
                      								"org.omg.sysml.Alf.AbstractSuccessionDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureMember"


    // $ANTLR start "ruleCategoryMemberPrefix"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:2900:1: ruleCategoryMemberPrefix[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? ) ;
=======
    // InternalAlf.g:2864:1: ruleCategoryMemberPrefix[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleCategoryMemberPrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        Enumerator lv_visibility_1_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2906:2: ( ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? ) )
            // InternalAlf.g:2907:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? )
=======
            // InternalAlf.g:2870:2: ( ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? ) )
            // InternalAlf.g:2871:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2907:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? )
            // InternalAlf.g:2908:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )?
=======
            // InternalAlf.g:2871:2: ( ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )? )
            // InternalAlf.g:2872:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )* ( (lv_visibility_1_0= ruleVisibilityIndicator ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2908:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )*
            loop48:
=======
            // InternalAlf.g:2872:3: ( (lv_ownedRelationship_0_0= ruleAnnotation ) )*
            loop46:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==RULE_DOCUMENTATION_COMMENT) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:2909:4: (lv_ownedRelationship_0_0= ruleAnnotation )
=======
            	    // InternalAlf.g:2873:4: (lv_ownedRelationship_0_0= ruleAnnotation )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:2909:4: (lv_ownedRelationship_0_0= ruleAnnotation )
            	    // InternalAlf.g:2910:5: lv_ownedRelationship_0_0= ruleAnnotation
=======
            	    // InternalAlf.g:2873:4: (lv_ownedRelationship_0_0= ruleAnnotation )
            	    // InternalAlf.g:2874:5: lv_ownedRelationship_0_0= ruleAnnotation
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCategoryMemberPrefixAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_ownedRelationship_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCategoryMemberPrefixRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.sysml.Alf.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2927:3: ( (lv_visibility_1_0= ruleVisibilityIndicator ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);
=======
            // InternalAlf.g:2891:3: ( (lv_visibility_1_0= ruleVisibilityIndicator ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( ((LA49_0>=85 && LA49_0<=88)) ) {
                alt49=1;
=======
            if ( ((LA47_0>=85 && LA47_0<=88)) ) {
                alt47=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
            switch (alt49) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:2928:4: (lv_visibility_1_0= ruleVisibilityIndicator )
=======
                    // InternalAlf.g:2892:4: (lv_visibility_1_0= ruleVisibilityIndicator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:2928:4: (lv_visibility_1_0= ruleVisibilityIndicator )
                    // InternalAlf.g:2929:5: lv_visibility_1_0= ruleVisibilityIndicator
=======
                    // InternalAlf.g:2892:4: (lv_visibility_1_0= ruleVisibilityIndicator )
                    // InternalAlf.g:2893:5: lv_visibility_1_0= ruleVisibilityIndicator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getCategoryMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_visibility_1_0=ruleVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getCategoryMemberPrefixRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_1_0,
                      						"org.omg.sysml.Alf.VisibilityIndicator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCategoryMemberPrefix"


    // $ANTLR start "entryRuleClassDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:2950:1: entryRuleClassDefinitionOrStub returns [EObject current=null] : iv_ruleClassDefinitionOrStub= ruleClassDefinitionOrStub EOF ;
=======
    // InternalAlf.g:2914:1: entryRuleClassDefinitionOrStub returns [EObject current=null] : iv_ruleClassDefinitionOrStub= ruleClassDefinitionOrStub EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleClassDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDefinitionOrStub = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2950:62: (iv_ruleClassDefinitionOrStub= ruleClassDefinitionOrStub EOF )
            // InternalAlf.g:2951:2: iv_ruleClassDefinitionOrStub= ruleClassDefinitionOrStub EOF
=======
            // InternalAlf.g:2914:62: (iv_ruleClassDefinitionOrStub= ruleClassDefinitionOrStub EOF )
            // InternalAlf.g:2915:2: iv_ruleClassDefinitionOrStub= ruleClassDefinitionOrStub EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassDefinitionOrStub=ruleClassDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDefinitionOrStub"


    // $ANTLR start "ruleClassDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:2957:1: ruleClassDefinitionOrStub returns [EObject current=null] : this_ClassDefinition_0= ruleClassDefinition[$current] ;
=======
    // InternalAlf.g:2921:1: ruleClassDefinitionOrStub returns [EObject current=null] : this_ClassDefinition_0= ruleClassDefinition[$current] ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleClassDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_ClassDefinition_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2963:2: (this_ClassDefinition_0= ruleClassDefinition[$current] )
            // InternalAlf.g:2964:2: this_ClassDefinition_0= ruleClassDefinition[$current]
=======
            // InternalAlf.g:2927:2: (this_ClassDefinition_0= ruleClassDefinition[$current] )
            // InternalAlf.g:2928:2: this_ClassDefinition_0= ruleClassDefinition[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getClassDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getClassDefinitionOrStubAccess().getClassDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ClassDefinition_0=ruleClassDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ClassDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDefinitionOrStub"


    // $ANTLR start "ruleClassDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:2982:1: ruleClassDefinition[EObject in_current] returns [EObject current=in_current] : (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
=======
    // InternalAlf.g:2946:1: ruleClassDefinition[EObject in_current] returns [EObject current=in_current] : (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleClassDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_ClassDeclaration_0 = null;

        EObject this_CategoryBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2988:2: ( (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:2989:2: (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
=======
            // InternalAlf.g:2952:2: ( (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:2953:2: (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:2989:2: (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:2990:3: this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
=======
            // InternalAlf.g:2953:2: (this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:2954:3: this_ClassDeclaration_0= ruleClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getClassDefinitionAccess().getClassDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_ClassDeclaration_0=ruleClassDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getClassDefinitionAccess().getCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_CategoryBody_1=ruleCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDefinition"


    // $ANTLR start "ruleClassDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3023:1: ruleClassDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
=======
    // InternalAlf.g:2987:1: ruleClassDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleClassDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassDeclarationCompletion_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3029:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:3030:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
=======
            // InternalAlf.g:2993:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:2994:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3030:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:3031:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
=======
            // InternalAlf.g:2994:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:2995:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'Class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3031:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);
=======
            // InternalAlf.g:2995:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

            if ( (LA50_0==33) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3032:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:2996:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3032:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:3033:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:2996:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:2997:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,26,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassDeclarationAccess().getClassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassDeclarationCompletionParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ClassDeclarationCompletion_2=ruleClassDeclarationCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassDeclarationCompletion_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclaration"


    // $ANTLR start "ruleClassDeclarationCompletion"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3068:1: ruleClassDeclarationCompletion[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? ) ;
=======
    // InternalAlf.g:3032:1: ruleClassDeclarationCompletion[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleClassDeclarationCompletion(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject this_SpecializationList_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3074:2: ( ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? ) )
            // InternalAlf.g:3075:2: ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? )
=======
            // InternalAlf.g:3038:2: ( ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? ) )
            // InternalAlf.g:3039:2: ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3075:2: ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? )
            // InternalAlf.g:3076:3: ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )?
=======
            // InternalAlf.g:3039:2: ( ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )? )
            // InternalAlf.g:3040:3: ( (lv_name_0_0= ruleName ) ) (this_SpecializationList_1= ruleSpecializationList[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3076:3: ( (lv_name_0_0= ruleName ) )
            // InternalAlf.g:3077:4: (lv_name_0_0= ruleName )
=======
            // InternalAlf.g:3040:3: ( (lv_name_0_0= ruleName ) )
            // InternalAlf.g:3041:4: (lv_name_0_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3077:4: (lv_name_0_0= ruleName )
            // InternalAlf.g:3078:5: lv_name_0_0= ruleName
=======
            // InternalAlf.g:3041:4: (lv_name_0_0= ruleName )
            // InternalAlf.g:3042:5: lv_name_0_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassDeclarationCompletionAccess().getNameNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_name_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassDeclarationCompletionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3095:3: (this_SpecializationList_1= ruleSpecializationList[$current] )?
            int alt51=2;
            int LA51_0 = input.LA(1);
=======
            // InternalAlf.g:3059:3: (this_SpecializationList_1= ruleSpecializationList[$current] )?
            int alt49=2;
            int LA49_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

            if ( (LA51_0==39) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3096:4: this_SpecializationList_1= ruleSpecializationList[$current]
=======
                    // InternalAlf.g:3060:4: this_SpecializationList_1= ruleSpecializationList[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassDeclarationCompletionRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassDeclarationCompletionAccess().getSpecializationListParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_SpecializationList_1=ruleSpecializationList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SpecializationList_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclarationCompletion"


    // $ANTLR start "ruleSpecializationList"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3116:1: ruleSpecializationList[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* ) ;
=======
    // InternalAlf.g:3080:1: ruleSpecializationList[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleSpecializationList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3122:2: ( (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* ) )
            // InternalAlf.g:3123:2: (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* )
=======
            // InternalAlf.g:3086:2: ( (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* ) )
            // InternalAlf.g:3087:2: (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3123:2: (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* )
            // InternalAlf.g:3124:3: otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )*
=======
            // InternalAlf.g:3087:2: (otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )* )
            // InternalAlf.g:3088:3: otherlv_0= 'specializes' ( (lv_ownedRelationship_1_0= ruleSuperclassing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,39,FOLLOW_15); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,38,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSpecializationListAccess().getSpecializesKeyword_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3128:3: ( (lv_ownedRelationship_1_0= ruleSuperclassing ) )
            // InternalAlf.g:3129:4: (lv_ownedRelationship_1_0= ruleSuperclassing )
=======
            // InternalAlf.g:3092:3: ( (lv_ownedRelationship_1_0= ruleSuperclassing ) )
            // InternalAlf.g:3093:4: (lv_ownedRelationship_1_0= ruleSuperclassing )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3129:4: (lv_ownedRelationship_1_0= ruleSuperclassing )
            // InternalAlf.g:3130:5: lv_ownedRelationship_1_0= ruleSuperclassing
=======
            // InternalAlf.g:3093:4: (lv_ownedRelationship_1_0= ruleSuperclassing )
            // InternalAlf.g:3094:5: lv_ownedRelationship_1_0= ruleSuperclassing
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpecializationListAccess().getOwnedRelationshipSuperclassingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_ownedRelationship_1_0=ruleSuperclassing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpecializationListRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.sysml.Alf.Superclassing");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3147:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )*
            loop52:
=======
            // InternalAlf.g:3111:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) ) )*
            loop50:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==40) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:3148:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) )
=======
            	    // InternalAlf.g:3112:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleSuperclassing ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    otherlv_2=(Token)match(input,40,FOLLOW_15); if (state.failed) return current;
=======
            	    otherlv_2=(Token)match(input,39,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSpecializationListAccess().getCommaKeyword_2_0());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:3152:4: ( (lv_ownedRelationship_3_0= ruleSuperclassing ) )
            	    // InternalAlf.g:3153:5: (lv_ownedRelationship_3_0= ruleSuperclassing )
=======
            	    // InternalAlf.g:3116:4: ( (lv_ownedRelationship_3_0= ruleSuperclassing ) )
            	    // InternalAlf.g:3117:5: (lv_ownedRelationship_3_0= ruleSuperclassing )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:3153:5: (lv_ownedRelationship_3_0= ruleSuperclassing )
            	    // InternalAlf.g:3154:6: lv_ownedRelationship_3_0= ruleSuperclassing
=======
            	    // InternalAlf.g:3117:5: (lv_ownedRelationship_3_0= ruleSuperclassing )
            	    // InternalAlf.g:3118:6: lv_ownedRelationship_3_0= ruleSuperclassing
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSpecializationListAccess().getOwnedRelationshipSuperclassingParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_ownedRelationship_3_0=ruleSuperclassing();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSpecializationListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.sysml.Alf.Superclassing");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecializationList"


    // $ANTLR start "entryRuleSuperclassing"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3176:1: entryRuleSuperclassing returns [EObject current=null] : iv_ruleSuperclassing= ruleSuperclassing EOF ;
=======
    // InternalAlf.g:3140:1: entryRuleSuperclassing returns [EObject current=null] : iv_ruleSuperclassing= ruleSuperclassing EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleSuperclassing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuperclassing = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3176:54: (iv_ruleSuperclassing= ruleSuperclassing EOF )
            // InternalAlf.g:3177:2: iv_ruleSuperclassing= ruleSuperclassing EOF
=======
            // InternalAlf.g:3140:54: (iv_ruleSuperclassing= ruleSuperclassing EOF )
            // InternalAlf.g:3141:2: iv_ruleSuperclassing= ruleSuperclassing EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuperclassingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuperclassing=ruleSuperclassing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuperclassing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuperclassing"


    // $ANTLR start "ruleSuperclassing"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3183:1: ruleSuperclassing returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
=======
    // InternalAlf.g:3147:1: ruleSuperclassing returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleSuperclassing() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3189:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:3190:2: ( ( ruleQualifiedName ) )
=======
            // InternalAlf.g:3153:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:3154:2: ( ( ruleQualifiedName ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3190:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:3191:3: ( ruleQualifiedName )
=======
            // InternalAlf.g:3154:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:3155:3: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3191:3: ( ruleQualifiedName )
            // InternalAlf.g:3192:4: ruleQualifiedName
=======
            // InternalAlf.g:3155:3: ( ruleQualifiedName )
            // InternalAlf.g:3156:4: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSuperclassingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSuperclassingAccess().getSuperclassClassCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuperclassing"


    // $ANTLR start "entryRuleObjectClassDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3212:1: entryRuleObjectClassDefinitionOrStub returns [EObject current=null] : iv_ruleObjectClassDefinitionOrStub= ruleObjectClassDefinitionOrStub EOF ;
=======
    // InternalAlf.g:3176:1: entryRuleObjectClassDefinitionOrStub returns [EObject current=null] : iv_ruleObjectClassDefinitionOrStub= ruleObjectClassDefinitionOrStub EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleObjectClassDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectClassDefinitionOrStub = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3212:68: (iv_ruleObjectClassDefinitionOrStub= ruleObjectClassDefinitionOrStub EOF )
            // InternalAlf.g:3213:2: iv_ruleObjectClassDefinitionOrStub= ruleObjectClassDefinitionOrStub EOF
=======
            // InternalAlf.g:3176:68: (iv_ruleObjectClassDefinitionOrStub= ruleObjectClassDefinitionOrStub EOF )
            // InternalAlf.g:3177:2: iv_ruleObjectClassDefinitionOrStub= ruleObjectClassDefinitionOrStub EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectClassDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectClassDefinitionOrStub=ruleObjectClassDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectClassDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObjectClassDefinitionOrStub"


    // $ANTLR start "ruleObjectClassDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3219:1: ruleObjectClassDefinitionOrStub returns [EObject current=null] : this_ObjectClassDefinition_0= ruleObjectClassDefinition[$current] ;
=======
    // InternalAlf.g:3183:1: ruleObjectClassDefinitionOrStub returns [EObject current=null] : this_ObjectClassDefinition_0= ruleObjectClassDefinition[$current] ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleObjectClassDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_ObjectClassDefinition_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3225:2: (this_ObjectClassDefinition_0= ruleObjectClassDefinition[$current] )
            // InternalAlf.g:3226:2: this_ObjectClassDefinition_0= ruleObjectClassDefinition[$current]
=======
            // InternalAlf.g:3189:2: (this_ObjectClassDefinition_0= ruleObjectClassDefinition[$current] )
            // InternalAlf.g:3190:2: this_ObjectClassDefinition_0= ruleObjectClassDefinition[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getObjectClassDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getObjectClassDefinitionOrStubAccess().getObjectClassDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ObjectClassDefinition_0=ruleObjectClassDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ObjectClassDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObjectClassDefinitionOrStub"


    // $ANTLR start "ruleObjectClassDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3244:1: ruleObjectClassDefinition[EObject in_current] returns [EObject current=in_current] : (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
=======
    // InternalAlf.g:3208:1: ruleObjectClassDefinition[EObject in_current] returns [EObject current=in_current] : (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleObjectClassDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_ObjectClassDeclaration_0 = null;

        EObject this_CategoryBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3250:2: ( (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:3251:2: (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
=======
            // InternalAlf.g:3214:2: ( (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:3215:2: (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3251:2: (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:3252:3: this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
=======
            // InternalAlf.g:3215:2: (this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:3216:3: this_ObjectClassDeclaration_0= ruleObjectClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getObjectClassDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getObjectClassDefinitionAccess().getObjectClassDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_ObjectClassDeclaration_0=ruleObjectClassDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ObjectClassDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getObjectClassDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getObjectClassDefinitionAccess().getCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_CategoryBody_1=ruleCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObjectClassDefinition"


    // $ANTLR start "ruleObjectClassDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3285:1: ruleObjectClassDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
=======
    // InternalAlf.g:3249:1: ruleObjectClassDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleObjectClassDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassDeclarationCompletion_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3291:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:3292:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
=======
            // InternalAlf.g:3255:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:3256:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3292:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:3293:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
=======
            // InternalAlf.g:3256:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:3257:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3293:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);
=======
            // InternalAlf.g:3257:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

            if ( (LA53_0==33) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3294:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:3258:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3294:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:3295:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:3258:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:3259:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getObjectClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObjectClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getObjectClassDeclarationAccess().getClassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getObjectClassDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getObjectClassDeclarationAccess().getClassDeclarationCompletionParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ClassDeclarationCompletion_2=ruleClassDeclarationCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassDeclarationCompletion_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObjectClassDeclaration"


    // $ANTLR start "entryRuleValueClassDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3329:1: entryRuleValueClassDefinitionOrStub returns [EObject current=null] : iv_ruleValueClassDefinitionOrStub= ruleValueClassDefinitionOrStub EOF ;
=======
    // InternalAlf.g:3293:1: entryRuleValueClassDefinitionOrStub returns [EObject current=null] : iv_ruleValueClassDefinitionOrStub= ruleValueClassDefinitionOrStub EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleValueClassDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueClassDefinitionOrStub = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3329:67: (iv_ruleValueClassDefinitionOrStub= ruleValueClassDefinitionOrStub EOF )
            // InternalAlf.g:3330:2: iv_ruleValueClassDefinitionOrStub= ruleValueClassDefinitionOrStub EOF
=======
            // InternalAlf.g:3293:67: (iv_ruleValueClassDefinitionOrStub= ruleValueClassDefinitionOrStub EOF )
            // InternalAlf.g:3294:2: iv_ruleValueClassDefinitionOrStub= ruleValueClassDefinitionOrStub EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueClassDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueClassDefinitionOrStub=ruleValueClassDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueClassDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueClassDefinitionOrStub"


    // $ANTLR start "ruleValueClassDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3336:1: ruleValueClassDefinitionOrStub returns [EObject current=null] : this_ValueClassDefinition_0= ruleValueClassDefinition[$current] ;
=======
    // InternalAlf.g:3300:1: ruleValueClassDefinitionOrStub returns [EObject current=null] : this_ValueClassDefinition_0= ruleValueClassDefinition[$current] ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleValueClassDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_ValueClassDefinition_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3342:2: (this_ValueClassDefinition_0= ruleValueClassDefinition[$current] )
            // InternalAlf.g:3343:2: this_ValueClassDefinition_0= ruleValueClassDefinition[$current]
=======
            // InternalAlf.g:3306:2: (this_ValueClassDefinition_0= ruleValueClassDefinition[$current] )
            // InternalAlf.g:3307:2: this_ValueClassDefinition_0= ruleValueClassDefinition[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getValueClassDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getValueClassDefinitionOrStubAccess().getValueClassDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ValueClassDefinition_0=ruleValueClassDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ValueClassDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueClassDefinitionOrStub"


    // $ANTLR start "ruleValueClassDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3361:1: ruleValueClassDefinition[EObject in_current] returns [EObject current=in_current] : (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
=======
    // InternalAlf.g:3325:1: ruleValueClassDefinition[EObject in_current] returns [EObject current=in_current] : (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleValueClassDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_ValueClassDeclaration_0 = null;

        EObject this_CategoryBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3367:2: ( (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:3368:2: (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
=======
            // InternalAlf.g:3331:2: ( (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:3332:2: (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3368:2: (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:3369:3: this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
=======
            // InternalAlf.g:3332:2: (this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:3333:3: this_ValueClassDeclaration_0= ruleValueClassDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getValueClassDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getValueClassDefinitionAccess().getValueClassDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_ValueClassDeclaration_0=ruleValueClassDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ValueClassDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getValueClassDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getValueClassDefinitionAccess().getCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_CategoryBody_1=ruleCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueClassDefinition"


    // $ANTLR start "ruleValueClassDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3402:1: ruleValueClassDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
=======
    // InternalAlf.g:3366:1: ruleValueClassDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleValueClassDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassDeclarationCompletion_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3408:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:3409:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
=======
            // InternalAlf.g:3372:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:3373:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3409:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:3410:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
=======
            // InternalAlf.g:3373:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:3374:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3410:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);
=======
            // InternalAlf.g:3374:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

            if ( (LA54_0==33) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3411:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:3375:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3411:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:3412:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:3375:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:3376:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getValueClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,28,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getValueClassDeclarationAccess().getDatatypeKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getValueClassDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getValueClassDeclarationAccess().getClassDeclarationCompletionParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ClassDeclarationCompletion_2=ruleClassDeclarationCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassDeclarationCompletion_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueClassDeclaration"


    // $ANTLR start "entryRuleAssociationDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3446:1: entryRuleAssociationDefinitionOrStub returns [EObject current=null] : iv_ruleAssociationDefinitionOrStub= ruleAssociationDefinitionOrStub EOF ;
=======
    // InternalAlf.g:3410:1: entryRuleAssociationDefinitionOrStub returns [EObject current=null] : iv_ruleAssociationDefinitionOrStub= ruleAssociationDefinitionOrStub EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAssociationDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociationDefinitionOrStub = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3446:68: (iv_ruleAssociationDefinitionOrStub= ruleAssociationDefinitionOrStub EOF )
            // InternalAlf.g:3447:2: iv_ruleAssociationDefinitionOrStub= ruleAssociationDefinitionOrStub EOF
=======
            // InternalAlf.g:3410:68: (iv_ruleAssociationDefinitionOrStub= ruleAssociationDefinitionOrStub EOF )
            // InternalAlf.g:3411:2: iv_ruleAssociationDefinitionOrStub= ruleAssociationDefinitionOrStub EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociationDefinitionOrStub=ruleAssociationDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociationDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociationDefinitionOrStub"


    // $ANTLR start "ruleAssociationDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3453:1: ruleAssociationDefinitionOrStub returns [EObject current=null] : this_AssociationDefinition_0= ruleAssociationDefinition[$current] ;
=======
    // InternalAlf.g:3417:1: ruleAssociationDefinitionOrStub returns [EObject current=null] : this_AssociationDefinition_0= ruleAssociationDefinition[$current] ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAssociationDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_AssociationDefinition_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3459:2: (this_AssociationDefinition_0= ruleAssociationDefinition[$current] )
            // InternalAlf.g:3460:2: this_AssociationDefinition_0= ruleAssociationDefinition[$current]
=======
            // InternalAlf.g:3423:2: (this_AssociationDefinition_0= ruleAssociationDefinition[$current] )
            // InternalAlf.g:3424:2: this_AssociationDefinition_0= ruleAssociationDefinition[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getAssociationDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_AssociationDefinition_0=ruleAssociationDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_AssociationDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationDefinitionOrStub"


    // $ANTLR start "ruleAssociationDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3478:1: ruleAssociationDefinition[EObject in_current] returns [EObject current=in_current] : (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] ) ;
=======
    // InternalAlf.g:3442:1: ruleAssociationDefinition[EObject in_current] returns [EObject current=in_current] : (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAssociationDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_AssociationDeclaration_0 = null;

        EObject this_AssociationBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3484:2: ( (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] ) )
            // InternalAlf.g:3485:2: (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] )
=======
            // InternalAlf.g:3448:2: ( (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] ) )
            // InternalAlf.g:3449:2: (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3485:2: (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] )
            // InternalAlf.g:3486:3: this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current]
=======
            // InternalAlf.g:3449:2: (this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] )
            // InternalAlf.g:3450:3: this_AssociationDeclaration_0= ruleAssociationDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_AssociationDeclaration_0=ruleAssociationDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AssociationDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationDefinitionAccess().getAssociationBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AssociationBody_1=ruleAssociationBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AssociationBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationDefinition"


    // $ANTLR start "ruleAssociationDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3519:1: ruleAssociationDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
=======
    // InternalAlf.g:3483:1: ruleAssociationDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAssociationDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassDeclarationCompletion_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3525:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:3526:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
=======
            // InternalAlf.g:3489:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:3490:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3526:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:3527:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
=======
            // InternalAlf.g:3490:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:3491:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3527:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);
=======
            // InternalAlf.g:3491:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

            if ( (LA55_0==33) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3528:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:3492:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3528:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:3529:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:3492:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:3493:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAssociationDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,29,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationDeclarationAccess().getClassDeclarationCompletionParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ClassDeclarationCompletion_2=ruleClassDeclarationCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassDeclarationCompletion_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationDeclaration"


    // $ANTLR start "ruleAssociationBody"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3564:1: ruleAssociationBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) ;
=======
    // InternalAlf.g:3528:1: ruleAssociationBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAssociationBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3570:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) )
            // InternalAlf.g:3571:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
=======
            // InternalAlf.g:3534:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) )
            // InternalAlf.g:3535:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3571:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            int alt57=2;
            int LA57_0 = input.LA(1);
=======
            // InternalAlf.g:3535:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            int alt55=2;
            int LA55_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

            if ( (LA57_0==20) ) {
                alt57=1;
            }
            else if ( (LA57_0==23) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3572:3: otherlv_0= ';'
=======
                    // InternalAlf.g:3536:3: otherlv_0= ';'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getAssociationBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3577:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
=======
                    // InternalAlf.g:3541:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3577:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    // InternalAlf.g:3578:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}'
=======
                    // InternalAlf.g:3541:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    // InternalAlf.g:3542:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAssociationBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3582:4: ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop56:
=======
                    // InternalAlf.g:3546:4: ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop54:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    do {
                        int alt56=3;
                        alt56 = dfa56.predict(input);
                        switch (alt56) {
                    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:3583:5: ( (lv_ownedRelationship_2_0= ruleAssociationMember ) )
=======
                    	    // InternalAlf.g:3547:5: ( (lv_ownedRelationship_2_0= ruleAssociationMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:3583:5: ( (lv_ownedRelationship_2_0= ruleAssociationMember ) )
                    	    // InternalAlf.g:3584:6: (lv_ownedRelationship_2_0= ruleAssociationMember )
=======
                    	    // InternalAlf.g:3547:5: ( (lv_ownedRelationship_2_0= ruleAssociationMember ) )
                    	    // InternalAlf.g:3548:6: (lv_ownedRelationship_2_0= ruleAssociationMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:3584:6: (lv_ownedRelationship_2_0= ruleAssociationMember )
                    	    // InternalAlf.g:3585:7: lv_ownedRelationship_2_0= ruleAssociationMember
=======
                    	    // InternalAlf.g:3548:6: (lv_ownedRelationship_2_0= ruleAssociationMember )
                    	    // InternalAlf.g:3549:7: lv_ownedRelationship_2_0= ruleAssociationMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAssociationBodyAccess().getOwnedRelationshipAssociationMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_51);
                    	    lv_ownedRelationship_2_0=ruleAssociationMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAssociationBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.sysml.Alf.AssociationMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:3603:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
=======
                    	    // InternalAlf.g:3567:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:3603:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:3604:6: (lv_ownedRelationship_3_0= rulePackageImport )
=======
                    	    // InternalAlf.g:3567:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:3568:6: (lv_ownedRelationship_3_0= rulePackageImport )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:3604:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:3605:7: lv_ownedRelationship_3_0= rulePackageImport
=======
                    	    // InternalAlf.g:3568:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:3569:7: lv_ownedRelationship_3_0= rulePackageImport
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAssociationBodyAccess().getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_51);
                    	    lv_ownedRelationship_3_0=rulePackageImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAssociationBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.sysml.Alf.PackageImport");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssociationBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationBody"


    // $ANTLR start "entryRuleAssociationMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3632:1: entryRuleAssociationMember returns [EObject current=null] : iv_ruleAssociationMember= ruleAssociationMember EOF ;
=======
    // InternalAlf.g:3596:1: entryRuleAssociationMember returns [EObject current=null] : iv_ruleAssociationMember= ruleAssociationMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAssociationMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociationMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3632:58: (iv_ruleAssociationMember= ruleAssociationMember EOF )
            // InternalAlf.g:3633:2: iv_ruleAssociationMember= ruleAssociationMember EOF
=======
            // InternalAlf.g:3596:58: (iv_ruleAssociationMember= ruleAssociationMember EOF )
            // InternalAlf.g:3597:2: iv_ruleAssociationMember= ruleAssociationMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociationMember=ruleAssociationMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociationMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociationMember"


    // $ANTLR start "ruleAssociationMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3639:1: ruleAssociationMember returns [EObject current=null] : (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember ) ;
=======
    // InternalAlf.g:3603:1: ruleAssociationMember returns [EObject current=null] : (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAssociationMember() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureCategoryMember_0 = null;

        EObject this_FeatureMember_1 = null;

        EObject this_AssociationEndFeatureMember_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3645:2: ( (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember ) )
            // InternalAlf.g:3646:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember )
=======
            // InternalAlf.g:3609:2: ( (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember ) )
            // InternalAlf.g:3610:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3646:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember )
            int alt58=3;
            alt58 = dfa58.predict(input);
            switch (alt58) {
=======
            // InternalAlf.g:3610:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember )
            int alt56=3;
            alt56 = dfa56.predict(input);
            switch (alt56) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3647:3: this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember
=======
                    // InternalAlf.g:3611:3: this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAssociationMemberAccess().getNonFeatureCategoryMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureCategoryMember_0=ruleNonFeatureCategoryMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureCategoryMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3659:3: this_FeatureMember_1= ruleFeatureMember
=======
                    // InternalAlf.g:3623:3: this_FeatureMember_1= ruleFeatureMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAssociationMemberAccess().getFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureMember_1=ruleFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3671:3: this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember
=======
                    // InternalAlf.g:3635:3: this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAssociationMemberAccess().getAssociationEndFeatureMemberParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AssociationEndFeatureMember_2=ruleAssociationEndFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AssociationEndFeatureMember_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationMember"


    // $ANTLR start "entryRuleAssociationEndFeatureMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3686:1: entryRuleAssociationEndFeatureMember returns [EObject current=null] : iv_ruleAssociationEndFeatureMember= ruleAssociationEndFeatureMember EOF ;
=======
    // InternalAlf.g:3650:1: entryRuleAssociationEndFeatureMember returns [EObject current=null] : iv_ruleAssociationEndFeatureMember= ruleAssociationEndFeatureMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAssociationEndFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociationEndFeatureMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3686:68: (iv_ruleAssociationEndFeatureMember= ruleAssociationEndFeatureMember EOF )
            // InternalAlf.g:3687:2: iv_ruleAssociationEndFeatureMember= ruleAssociationEndFeatureMember EOF
=======
            // InternalAlf.g:3650:68: (iv_ruleAssociationEndFeatureMember= ruleAssociationEndFeatureMember EOF )
            // InternalAlf.g:3651:2: iv_ruleAssociationEndFeatureMember= ruleAssociationEndFeatureMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationEndFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociationEndFeatureMember=ruleAssociationEndFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociationEndFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociationEndFeatureMember"


    // $ANTLR start "ruleAssociationEndFeatureMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:3693:1: ruleAssociationEndFeatureMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) ) ;
=======
    // InternalAlf.g:3657:1: ruleAssociationEndFeatureMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAssociationEndFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isPart_2_0=null;
        Token lv_isPortion_3_0=null;
        Token lv_isPort_4_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_isPart_9_0=null;
        Token lv_isPortion_10_0=null;
        Token lv_isPort_11_0=null;
        Token otherlv_14=null;
        Token lv_isPart_15_0=null;
        Token lv_isPortion_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_23=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        EObject this_CategoryMemberPrefix_0 = null;

        Enumerator lv_direction_5_0 = null;

        EObject lv_ownedRelatedElement_6_0 = null;

        Enumerator lv_direction_12_0 = null;

        EObject lv_ownedRelatedElement_13_0 = null;

        AntlrDatatypeRuleToken lv_memberName_17_0 = null;

        Enumerator lv_direction_21_0 = null;

        EObject lv_ownedRelatedElement_22_0 = null;

        Enumerator lv_direction_24_0 = null;

        EObject lv_ownedRelatedElement_25_0 = null;

        AntlrDatatypeRuleToken lv_memberName_26_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3699:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) ) )
            // InternalAlf.g:3700:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) )
=======
            // InternalAlf.g:3663:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) ) )
            // InternalAlf.g:3664:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3700:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) )
            // InternalAlf.g:3701:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) )
=======
            // InternalAlf.g:3664:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) ) )
            // InternalAlf.g:3665:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getCategoryMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_52);
            this_CategoryMemberPrefix_0=ruleCategoryMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryMemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:3715:3: ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) )
            int alt67=6;
            alt67 = dfa67.predict(input);
            switch (alt67) {
=======
            // InternalAlf.g:3679:3: ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) )
            int alt65=6;
            alt65 = dfa65.predict(input);
            switch (alt65) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3716:4: (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) )
=======
                    // InternalAlf.g:3680:4: (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3716:4: (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) )
                    // InternalAlf.g:3717:5: otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) )
=======
                    // InternalAlf.g:3680:4: (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) )
                    // InternalAlf.g:3681:5: otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_1=(Token)match(input,41,FOLLOW_53); if (state.failed) return current;
=======
                    otherlv_1=(Token)match(input,40,FOLLOW_53); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getAssociationEndFeatureMemberAccess().getEndKeyword_1_0_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3721:5: ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )?
                    int alt59=4;
=======
                    // InternalAlf.g:3685:5: ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )?
                    int alt57=4;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    switch ( input.LA(1) ) {
                        case 34:
                            {
                            alt59=1;
                            }
                            break;
                        case 35:
                            {
                            alt59=2;
                            }
                            break;
                        case 36:
                            {
                            alt59=3;
                            }
                            break;
                    }

                    switch (alt59) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3722:6: ( (lv_isPart_2_0= 'part' ) )
=======
                            // InternalAlf.g:3686:6: ( (lv_isPart_2_0= 'part' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3722:6: ( (lv_isPart_2_0= 'part' ) )
                            // InternalAlf.g:3723:7: (lv_isPart_2_0= 'part' )
=======
                            // InternalAlf.g:3686:6: ( (lv_isPart_2_0= 'part' ) )
                            // InternalAlf.g:3687:7: (lv_isPart_2_0= 'part' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3723:7: (lv_isPart_2_0= 'part' )
                            // InternalAlf.g:3724:8: lv_isPart_2_0= 'part'
=======
                            // InternalAlf.g:3687:7: (lv_isPart_2_0= 'part' )
                            // InternalAlf.g:3688:8: lv_isPart_2_0= 'part'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPart_2_0=(Token)match(input,34,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPart_2_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPartPartKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPart", true, "part");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3737:6: ( (lv_isPortion_3_0= 'portion' ) )
=======
                            // InternalAlf.g:3701:6: ( (lv_isPortion_3_0= 'portion' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3737:6: ( (lv_isPortion_3_0= 'portion' ) )
                            // InternalAlf.g:3738:7: (lv_isPortion_3_0= 'portion' )
=======
                            // InternalAlf.g:3701:6: ( (lv_isPortion_3_0= 'portion' ) )
                            // InternalAlf.g:3702:7: (lv_isPortion_3_0= 'portion' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3738:7: (lv_isPortion_3_0= 'portion' )
                            // InternalAlf.g:3739:8: lv_isPortion_3_0= 'portion'
=======
                            // InternalAlf.g:3702:7: (lv_isPortion_3_0= 'portion' )
                            // InternalAlf.g:3703:8: lv_isPortion_3_0= 'portion'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPortion_3_0=(Token)match(input,35,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPortion_3_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPortionPortionKeyword_1_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPortion", true, "portion");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3752:6: ( (lv_isPort_4_0= 'port' ) )
=======
                            // InternalAlf.g:3716:6: ( (lv_isPort_4_0= 'port' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3752:6: ( (lv_isPort_4_0= 'port' ) )
                            // InternalAlf.g:3753:7: (lv_isPort_4_0= 'port' )
=======
                            // InternalAlf.g:3716:6: ( (lv_isPort_4_0= 'port' ) )
                            // InternalAlf.g:3717:7: (lv_isPort_4_0= 'port' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3753:7: (lv_isPort_4_0= 'port' )
                            // InternalAlf.g:3754:8: lv_isPort_4_0= 'port'
=======
                            // InternalAlf.g:3717:7: (lv_isPort_4_0= 'port' )
                            // InternalAlf.g:3718:8: lv_isPort_4_0= 'port'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPort_4_0=(Token)match(input,36,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPort_4_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPortPortKeyword_1_0_1_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPort", true, "port");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3767:5: ( (lv_direction_5_0= ruleFeatureDirection ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);
=======
                    // InternalAlf.g:3731:5: ( (lv_direction_5_0= ruleFeatureDirection ) )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA60_0>=89 && LA60_0<=91)) ) {
                        alt60=1;
=======
                    if ( ((LA58_0>=89 && LA58_0<=91)) ) {
                        alt58=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
                    switch (alt60) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3768:6: (lv_direction_5_0= ruleFeatureDirection )
=======
                            // InternalAlf.g:3732:6: (lv_direction_5_0= ruleFeatureDirection )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3768:6: (lv_direction_5_0= ruleFeatureDirection )
                            // InternalAlf.g:3769:7: lv_direction_5_0= ruleFeatureDirection
=======
                            // InternalAlf.g:3732:6: (lv_direction_5_0= ruleFeatureDirection )
                            // InternalAlf.g:3733:7: lv_direction_5_0= ruleFeatureDirection
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_54);
                            lv_direction_5_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_5_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3786:5: ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) )
                    // InternalAlf.g:3787:6: (lv_ownedRelatedElement_6_0= ruleFeatureDefinition )
=======
                    // InternalAlf.g:3750:5: ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) )
                    // InternalAlf.g:3751:6: (lv_ownedRelatedElement_6_0= ruleFeatureDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3787:6: (lv_ownedRelatedElement_6_0= ruleFeatureDefinition )
                    // InternalAlf.g:3788:7: lv_ownedRelatedElement_6_0= ruleFeatureDefinition
=======
                    // InternalAlf.g:3751:6: (lv_ownedRelatedElement_6_0= ruleFeatureDefinition )
                    // InternalAlf.g:3752:7: lv_ownedRelatedElement_6_0= ruleFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_6_0=ruleFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_6_0,
                      								"org.omg.sysml.Alf.FeatureDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3807:4: (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) )
=======
                    // InternalAlf.g:3771:4: (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3807:4: (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) )
                    // InternalAlf.g:3808:5: otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) )
=======
                    // InternalAlf.g:3771:4: (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) )
                    // InternalAlf.g:3772:5: otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    otherlv_7=(Token)match(input,33,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getAssociationEndFeatureMemberAccess().getAbstractKeyword_1_1_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_8=(Token)match(input,41,FOLLOW_53); if (state.failed) return current;
=======
                    otherlv_8=(Token)match(input,40,FOLLOW_53); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getAssociationEndFeatureMemberAccess().getEndKeyword_1_1_1());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3816:5: ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )?
                    int alt61=4;
=======
                    // InternalAlf.g:3780:5: ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )?
                    int alt59=4;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    switch ( input.LA(1) ) {
                        case 34:
                            {
                            alt61=1;
                            }
                            break;
                        case 35:
                            {
                            alt61=2;
                            }
                            break;
                        case 36:
                            {
                            alt61=3;
                            }
                            break;
                    }

                    switch (alt61) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3817:6: ( (lv_isPart_9_0= 'part' ) )
=======
                            // InternalAlf.g:3781:6: ( (lv_isPart_9_0= 'part' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3817:6: ( (lv_isPart_9_0= 'part' ) )
                            // InternalAlf.g:3818:7: (lv_isPart_9_0= 'part' )
=======
                            // InternalAlf.g:3781:6: ( (lv_isPart_9_0= 'part' ) )
                            // InternalAlf.g:3782:7: (lv_isPart_9_0= 'part' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3818:7: (lv_isPart_9_0= 'part' )
                            // InternalAlf.g:3819:8: lv_isPart_9_0= 'part'
=======
                            // InternalAlf.g:3782:7: (lv_isPart_9_0= 'part' )
                            // InternalAlf.g:3783:8: lv_isPart_9_0= 'part'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPart_9_0=(Token)match(input,34,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPart_9_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPartPartKeyword_1_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPart", true, "part");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3832:6: ( (lv_isPortion_10_0= 'portion' ) )
=======
                            // InternalAlf.g:3796:6: ( (lv_isPortion_10_0= 'portion' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3832:6: ( (lv_isPortion_10_0= 'portion' ) )
                            // InternalAlf.g:3833:7: (lv_isPortion_10_0= 'portion' )
=======
                            // InternalAlf.g:3796:6: ( (lv_isPortion_10_0= 'portion' ) )
                            // InternalAlf.g:3797:7: (lv_isPortion_10_0= 'portion' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3833:7: (lv_isPortion_10_0= 'portion' )
                            // InternalAlf.g:3834:8: lv_isPortion_10_0= 'portion'
=======
                            // InternalAlf.g:3797:7: (lv_isPortion_10_0= 'portion' )
                            // InternalAlf.g:3798:8: lv_isPortion_10_0= 'portion'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPortion_10_0=(Token)match(input,35,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPortion_10_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPortionPortionKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPortion", true, "portion");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3847:6: ( (lv_isPort_11_0= 'port' ) )
=======
                            // InternalAlf.g:3811:6: ( (lv_isPort_11_0= 'port' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3847:6: ( (lv_isPort_11_0= 'port' ) )
                            // InternalAlf.g:3848:7: (lv_isPort_11_0= 'port' )
=======
                            // InternalAlf.g:3811:6: ( (lv_isPort_11_0= 'port' ) )
                            // InternalAlf.g:3812:7: (lv_isPort_11_0= 'port' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3848:7: (lv_isPort_11_0= 'port' )
                            // InternalAlf.g:3849:8: lv_isPort_11_0= 'port'
=======
                            // InternalAlf.g:3812:7: (lv_isPort_11_0= 'port' )
                            // InternalAlf.g:3813:8: lv_isPort_11_0= 'port'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPort_11_0=(Token)match(input,36,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPort_11_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPortPortKeyword_1_1_2_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPort", true, "port");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3862:5: ( (lv_direction_12_0= ruleFeatureDirection ) )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);
=======
                    // InternalAlf.g:3826:5: ( (lv_direction_12_0= ruleFeatureDirection ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA62_0>=89 && LA62_0<=91)) ) {
                        alt62=1;
=======
                    if ( ((LA60_0>=89 && LA60_0<=91)) ) {
                        alt60=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
                    switch (alt62) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3863:6: (lv_direction_12_0= ruleFeatureDirection )
=======
                            // InternalAlf.g:3827:6: (lv_direction_12_0= ruleFeatureDirection )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3863:6: (lv_direction_12_0= ruleFeatureDirection )
                            // InternalAlf.g:3864:7: lv_direction_12_0= ruleFeatureDirection
=======
                            // InternalAlf.g:3827:6: (lv_direction_12_0= ruleFeatureDirection )
                            // InternalAlf.g:3828:7: lv_direction_12_0= ruleFeatureDirection
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_3_0());
                              						
                            }
                            pushFollow(FOLLOW_40);
                            lv_direction_12_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_12_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3881:5: ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) )
                    // InternalAlf.g:3882:6: (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition )
=======
                    // InternalAlf.g:3845:5: ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) )
                    // InternalAlf.g:3846:6: (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3882:6: (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition )
                    // InternalAlf.g:3883:7: lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition
=======
                    // InternalAlf.g:3846:6: (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition )
                    // InternalAlf.g:3847:7: lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_4_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_13_0=ruleAbstractFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_13_0,
                      								"org.omg.sysml.Alf.AbstractFeatureDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3902:4: (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' )
=======
                    // InternalAlf.g:3866:4: (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3902:4: (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' )
                    // InternalAlf.g:3903:5: otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';'
=======
                    // InternalAlf.g:3866:4: (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' )
                    // InternalAlf.g:3867:5: otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_14=(Token)match(input,41,FOLLOW_56); if (state.failed) return current;
=======
                    otherlv_14=(Token)match(input,40,FOLLOW_56); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getAssociationEndFeatureMemberAccess().getEndKeyword_1_2_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3907:5: ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) )
                    int alt63=2;
                    int LA63_0 = input.LA(1);
=======
                    // InternalAlf.g:3871:5: ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) )
                    int alt61=2;
                    int LA61_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                    if ( (LA63_0==34) ) {
                        alt63=1;
                    }
                    else if ( (LA63_0==35) ) {
                        alt63=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }
                    switch (alt63) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3908:6: ( (lv_isPart_15_0= 'part' ) )
=======
                            // InternalAlf.g:3872:6: ( (lv_isPart_15_0= 'part' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3908:6: ( (lv_isPart_15_0= 'part' ) )
                            // InternalAlf.g:3909:7: (lv_isPart_15_0= 'part' )
=======
                            // InternalAlf.g:3872:6: ( (lv_isPart_15_0= 'part' ) )
                            // InternalAlf.g:3873:7: (lv_isPart_15_0= 'part' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3909:7: (lv_isPart_15_0= 'part' )
                            // InternalAlf.g:3910:8: lv_isPart_15_0= 'part'
=======
                            // InternalAlf.g:3873:7: (lv_isPart_15_0= 'part' )
                            // InternalAlf.g:3874:8: lv_isPart_15_0= 'part'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPart_15_0=(Token)match(input,34,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPart_15_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPartPartKeyword_1_2_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPart", true, "part");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3923:6: ( (lv_isPortion_16_0= 'portion' ) )
=======
                            // InternalAlf.g:3887:6: ( (lv_isPortion_16_0= 'portion' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3923:6: ( (lv_isPortion_16_0= 'portion' ) )
                            // InternalAlf.g:3924:7: (lv_isPortion_16_0= 'portion' )
=======
                            // InternalAlf.g:3887:6: ( (lv_isPortion_16_0= 'portion' ) )
                            // InternalAlf.g:3888:7: (lv_isPortion_16_0= 'portion' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3924:7: (lv_isPortion_16_0= 'portion' )
                            // InternalAlf.g:3925:8: lv_isPortion_16_0= 'portion'
=======
                            // InternalAlf.g:3888:7: (lv_isPortion_16_0= 'portion' )
                            // InternalAlf.g:3889:8: lv_isPortion_16_0= 'portion'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            lv_isPortion_16_0=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isPortion_16_0, grammarAccess.getAssociationEndFeatureMemberAccess().getIsPortionPortionKeyword_1_2_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                              								}
                              								setWithLastConsumed(current, "isPortion", true, "portion");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3938:5: ( (lv_memberName_17_0= ruleName ) )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);
=======
                    // InternalAlf.g:3902:5: ( (lv_memberName_17_0= ruleName ) )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                    if ( ((LA64_0>=RULE_ID && LA64_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3939:6: (lv_memberName_17_0= ruleName )
=======
                            // InternalAlf.g:3903:6: (lv_memberName_17_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3939:6: (lv_memberName_17_0= ruleName )
                            // InternalAlf.g:3940:7: lv_memberName_17_0= ruleName
=======
                            // InternalAlf.g:3903:6: (lv_memberName_17_0= ruleName )
                            // InternalAlf.g:3904:7: lv_memberName_17_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getMemberNameNameParserRuleCall_1_2_2_0());
                              						
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_17_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                              							}
                              							set(
                              								current,
                              								"memberName",
                              								lv_memberName_17_0,
                              								"org.omg.sysml.Alf.Name");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getAssociationEndFeatureMemberAccess().getIsKeyword_1_2_3());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3961:5: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:3962:6: ( ruleQualifiedName )
=======
                    // InternalAlf.g:3925:5: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:3926:6: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3962:6: ( ruleQualifiedName )
                    // InternalAlf.g:3963:7: ruleQualifiedName
=======
                    // InternalAlf.g:3926:6: ( ruleQualifiedName )
                    // InternalAlf.g:3927:7: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getMemberFeatureFeatureCrossReference_1_2_4_0());
                      						
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_20, grammarAccess.getAssociationEndFeatureMemberAccess().getSemicolonKeyword_1_2_5());
                      				
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3986:4: ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) )
=======
                    // InternalAlf.g:3950:4: ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3986:4: ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) )
                    // InternalAlf.g:3987:5: ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) )
=======
                    // InternalAlf.g:3950:4: ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) )
                    // InternalAlf.g:3951:5: ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:3987:5: ( (lv_direction_21_0= ruleFeatureDirection ) )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);
=======
                    // InternalAlf.g:3951:5: ( (lv_direction_21_0= ruleFeatureDirection ) )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA65_0>=89 && LA65_0<=91)) ) {
                        alt65=1;
=======
                    if ( ((LA63_0>=89 && LA63_0<=91)) ) {
                        alt63=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
                    switch (alt65) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3988:6: (lv_direction_21_0= ruleFeatureDirection )
=======
                            // InternalAlf.g:3952:6: (lv_direction_21_0= ruleFeatureDirection )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:3988:6: (lv_direction_21_0= ruleFeatureDirection )
                            // InternalAlf.g:3989:7: lv_direction_21_0= ruleFeatureDirection
=======
                            // InternalAlf.g:3952:6: (lv_direction_21_0= ruleFeatureDirection )
                            // InternalAlf.g:3953:7: lv_direction_21_0= ruleFeatureDirection
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_direction_21_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_21_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4006:5: ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) )
                    // InternalAlf.g:4007:6: (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition )
=======
                    // InternalAlf.g:3970:5: ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) )
                    // InternalAlf.g:3971:6: (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4007:6: (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition )
                    // InternalAlf.g:4008:7: lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition
=======
                    // InternalAlf.g:3971:6: (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition )
                    // InternalAlf.g:3972:7: lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_3_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_22_0=ruleNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_22_0,
                      								"org.omg.sysml.Alf.NamedFeatureDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4027:4: (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) )
=======
                    // InternalAlf.g:3991:4: (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4027:4: (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) )
                    // InternalAlf.g:4028:5: otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) )
=======
                    // InternalAlf.g:3991:4: (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) )
                    // InternalAlf.g:3992:5: otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    otherlv_23=(Token)match(input,33,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_23, grammarAccess.getAssociationEndFeatureMemberAccess().getAbstractKeyword_1_4_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4032:5: ( (lv_direction_24_0= ruleFeatureDirection ) )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);
=======
                    // InternalAlf.g:3996:5: ( (lv_direction_24_0= ruleFeatureDirection ) )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA66_0>=89 && LA66_0<=91)) ) {
                        alt66=1;
=======
                    if ( ((LA64_0>=89 && LA64_0<=91)) ) {
                        alt64=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
                    switch (alt66) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:4033:6: (lv_direction_24_0= ruleFeatureDirection )
=======
                            // InternalAlf.g:3997:6: (lv_direction_24_0= ruleFeatureDirection )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:4033:6: (lv_direction_24_0= ruleFeatureDirection )
                            // InternalAlf.g:4034:7: lv_direction_24_0= ruleFeatureDirection
=======
                            // InternalAlf.g:3997:6: (lv_direction_24_0= ruleFeatureDirection )
                            // InternalAlf.g:3998:7: lv_direction_24_0= ruleFeatureDirection
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_4_1_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_direction_24_0=ruleFeatureDirection();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                              							}
                              							set(
                              								current,
                              								"direction",
                              								lv_direction_24_0,
                              								"org.omg.sysml.Alf.FeatureDirection");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4051:5: ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) )
                    // InternalAlf.g:4052:6: (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition )
=======
                    // InternalAlf.g:4015:5: ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) )
                    // InternalAlf.g:4016:6: (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4052:6: (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition )
                    // InternalAlf.g:4053:7: lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition
=======
                    // InternalAlf.g:4016:6: (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition )
                    // InternalAlf.g:4017:7: lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_4_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_25_0=ruleAbstractNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelatedElement",
                      								lv_ownedRelatedElement_25_0,
                      								"org.omg.sysml.Alf.AbstractNamedFeatureDefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4072:4: ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' )
=======
                    // InternalAlf.g:4036:4: ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4072:4: ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' )
                    // InternalAlf.g:4073:5: ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';'
=======
                    // InternalAlf.g:4036:4: ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' )
                    // InternalAlf.g:4037:5: ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4073:5: ( (lv_memberName_26_0= ruleName ) )
                    // InternalAlf.g:4074:6: (lv_memberName_26_0= ruleName )
=======
                    // InternalAlf.g:4037:5: ( (lv_memberName_26_0= ruleName ) )
                    // InternalAlf.g:4038:6: (lv_memberName_26_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4074:6: (lv_memberName_26_0= ruleName )
                    // InternalAlf.g:4075:7: lv_memberName_26_0= ruleName
=======
                    // InternalAlf.g:4038:6: (lv_memberName_26_0= ruleName )
                    // InternalAlf.g:4039:7: lv_memberName_26_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getMemberNameNameParserRuleCall_1_5_0_0());
                      						
                    }
                    pushFollow(FOLLOW_28);
                    lv_memberName_26_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAssociationEndFeatureMemberRule());
                      							}
                      							set(
                      								current,
                      								"memberName",
                      								lv_memberName_26_0,
                      								"org.omg.sysml.Alf.Name");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_27=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_27, grammarAccess.getAssociationEndFeatureMemberAccess().getIsKeyword_1_5_1());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4096:5: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:4097:6: ( ruleQualifiedName )
=======
                    // InternalAlf.g:4060:5: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:4061:6: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4097:6: ( ruleQualifiedName )
                    // InternalAlf.g:4098:7: ruleQualifiedName
=======
                    // InternalAlf.g:4061:6: ( ruleQualifiedName )
                    // InternalAlf.g:4062:7: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAssociationEndFeatureMemberRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAssociationEndFeatureMemberAccess().getMemberFeatureFeatureCrossReference_1_5_2_0());
                      						
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_29, grammarAccess.getAssociationEndFeatureMemberAccess().getSemicolonKeyword_1_5_3());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationEndFeatureMember"


    // $ANTLR start "entryRuleInteractionDefinitionOrStub"
    // InternalAlf.g:4089:1: entryRuleInteractionDefinitionOrStub returns [EObject current=null] : iv_ruleInteractionDefinitionOrStub= ruleInteractionDefinitionOrStub EOF ;
    public final EObject entryRuleInteractionDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInteractionDefinitionOrStub = null;


        try {
            // InternalAlf.g:4089:68: (iv_ruleInteractionDefinitionOrStub= ruleInteractionDefinitionOrStub EOF )
            // InternalAlf.g:4090:2: iv_ruleInteractionDefinitionOrStub= ruleInteractionDefinitionOrStub EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInteractionDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInteractionDefinitionOrStub=ruleInteractionDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteractionDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteractionDefinitionOrStub"


    // $ANTLR start "ruleInteractionDefinitionOrStub"
    // InternalAlf.g:4096:1: ruleInteractionDefinitionOrStub returns [EObject current=null] : this_InteractionDefinition_0= ruleInteractionDefinition[$current] ;
    public final EObject ruleInteractionDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_InteractionDefinition_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:4102:2: (this_InteractionDefinition_0= ruleInteractionDefinition[$current] )
            // InternalAlf.g:4103:2: this_InteractionDefinition_0= ruleInteractionDefinition[$current]
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getInteractionDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getInteractionDefinitionOrStubAccess().getInteractionDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_InteractionDefinition_0=ruleInteractionDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_InteractionDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteractionDefinitionOrStub"


    // $ANTLR start "ruleInteractionDefinition"
    // InternalAlf.g:4121:1: ruleInteractionDefinition[EObject in_current] returns [EObject current=in_current] : (this_InteractionDeclaration_0= ruleInteractionDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] ) ;
    public final EObject ruleInteractionDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_InteractionDeclaration_0 = null;

        EObject this_AssociationBody_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:4127:2: ( (this_InteractionDeclaration_0= ruleInteractionDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] ) )
            // InternalAlf.g:4128:2: (this_InteractionDeclaration_0= ruleInteractionDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] )
            {
            // InternalAlf.g:4128:2: (this_InteractionDeclaration_0= ruleInteractionDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current] )
            // InternalAlf.g:4129:3: this_InteractionDeclaration_0= ruleInteractionDeclaration[$current] this_AssociationBody_1= ruleAssociationBody[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionDefinitionAccess().getInteractionDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_InteractionDeclaration_0=ruleInteractionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_InteractionDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionDefinitionAccess().getAssociationBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AssociationBody_1=ruleAssociationBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AssociationBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteractionDefinition"


    // $ANTLR start "ruleInteractionDeclaration"
    // InternalAlf.g:4162:1: ruleInteractionDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) ;
    public final EObject ruleInteractionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassDeclarationCompletion_2 = null;



        	enterRule();

        try {
            // InternalAlf.g:4168:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] ) )
            // InternalAlf.g:4169:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            {
            // InternalAlf.g:4169:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current] )
            // InternalAlf.g:4170:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassDeclarationCompletion_2= ruleClassDeclarationCompletion[$current]
            {
            // InternalAlf.g:4170:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==33) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalAlf.g:4171:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalAlf.g:4171:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:4172:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getInteractionDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getInteractionDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,41,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInteractionDeclarationAccess().getInteractionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionDeclarationAccess().getClassDeclarationCompletionParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ClassDeclarationCompletion_2=ruleClassDeclarationCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassDeclarationCompletion_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteractionDeclaration"


    // $ANTLR start "entryRuleBehaviorDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4125:1: entryRuleBehaviorDefinitionOrStub returns [EObject current=null] : iv_ruleBehaviorDefinitionOrStub= ruleBehaviorDefinitionOrStub EOF ;
=======
    // InternalAlf.g:4206:1: entryRuleBehaviorDefinitionOrStub returns [EObject current=null] : iv_ruleBehaviorDefinitionOrStub= ruleBehaviorDefinitionOrStub EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBehaviorDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorDefinitionOrStub = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4125:65: (iv_ruleBehaviorDefinitionOrStub= ruleBehaviorDefinitionOrStub EOF )
            // InternalAlf.g:4126:2: iv_ruleBehaviorDefinitionOrStub= ruleBehaviorDefinitionOrStub EOF
=======
            // InternalAlf.g:4206:65: (iv_ruleBehaviorDefinitionOrStub= ruleBehaviorDefinitionOrStub EOF )
            // InternalAlf.g:4207:2: iv_ruleBehaviorDefinitionOrStub= ruleBehaviorDefinitionOrStub EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBehaviorDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorDefinitionOrStub=ruleBehaviorDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBehaviorDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorDefinitionOrStub"


    // $ANTLR start "ruleBehaviorDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4132:1: ruleBehaviorDefinitionOrStub returns [EObject current=null] : this_BehaviorDefinition_0= ruleBehaviorDefinition[$current] ;
=======
    // InternalAlf.g:4213:1: ruleBehaviorDefinitionOrStub returns [EObject current=null] : this_BehaviorDefinition_0= ruleBehaviorDefinition[$current] ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBehaviorDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_BehaviorDefinition_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4138:2: (this_BehaviorDefinition_0= ruleBehaviorDefinition[$current] )
            // InternalAlf.g:4139:2: this_BehaviorDefinition_0= ruleBehaviorDefinition[$current]
=======
            // InternalAlf.g:4219:2: (this_BehaviorDefinition_0= ruleBehaviorDefinition[$current] )
            // InternalAlf.g:4220:2: this_BehaviorDefinition_0= ruleBehaviorDefinition[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getBehaviorDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getBehaviorDefinitionOrStubAccess().getBehaviorDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_BehaviorDefinition_0=ruleBehaviorDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_BehaviorDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorDefinitionOrStub"


    // $ANTLR start "ruleBehaviorDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4157:1: ruleBehaviorDefinition[EObject in_current] returns [EObject current=in_current] : (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] ) ;
=======
    // InternalAlf.g:4238:1: ruleBehaviorDefinition[EObject in_current] returns [EObject current=in_current] : (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBehaviorDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_BehaviorDeclaration_0 = null;

        EObject this_BehaviorBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4163:2: ( (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] ) )
            // InternalAlf.g:4164:2: (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] )
=======
            // InternalAlf.g:4244:2: ( (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] ) )
            // InternalAlf.g:4245:2: (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4164:2: (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] )
            // InternalAlf.g:4165:3: this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current]
=======
            // InternalAlf.g:4245:2: (this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current] )
            // InternalAlf.g:4246:3: this_BehaviorDeclaration_0= ruleBehaviorDeclaration[$current] this_BehaviorBody_1= ruleBehaviorBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorDefinitionAccess().getBehaviorDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_BehaviorDeclaration_0=ruleBehaviorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BehaviorDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorDefinitionAccess().getBehaviorBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_BehaviorBody_1=ruleBehaviorBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BehaviorBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorDefinition"


    // $ANTLR start "ruleBehaviorDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4198:1: ruleBehaviorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? ) ;
=======
    // InternalAlf.g:4279:1: ruleBehaviorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBehaviorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ParameterList_3 = null;

        EObject this_SpecializationList_4 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4204:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? ) )
            // InternalAlf.g:4205:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? )
=======
            // InternalAlf.g:4285:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? ) )
            // InternalAlf.g:4286:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4205:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? )
            // InternalAlf.g:4206:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )?
=======
            // InternalAlf.g:4286:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )? )
            // InternalAlf.g:4287:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] (this_SpecializationList_4= ruleSpecializationList[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4206:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);
=======
            // InternalAlf.g:4287:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA68_0==33) ) {
                alt68=1;
=======
            if ( (LA67_0==33) ) {
                alt67=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt68) {
=======
            switch (alt67) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4207:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:4288:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4207:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:4208:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:4288:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:4289:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_57); if (state.failed) return current;
=======
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_58); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBehaviorDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,30,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBehaviorDeclarationAccess().getBehaviorKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4224:3: ( (lv_name_2_0= ruleName ) )
            // InternalAlf.g:4225:4: (lv_name_2_0= ruleName )
=======
            // InternalAlf.g:4305:3: ( (lv_name_2_0= ruleName ) )
            // InternalAlf.g:4306:4: (lv_name_2_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4225:4: (lv_name_2_0= ruleName )
            // InternalAlf.g:4226:5: lv_name_2_0= ruleName
=======
            // InternalAlf.g:4306:4: (lv_name_2_0= ruleName )
            // InternalAlf.g:4307:5: lv_name_2_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBehaviorDeclarationAccess().getNameNameParserRuleCall_2_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_58);
=======
            pushFollow(FOLLOW_59);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_name_2_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBehaviorDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorDeclarationAccess().getParameterListParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_46);
            this_ParameterList_3=ruleParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ParameterList_3;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4257:3: (this_SpecializationList_4= ruleSpecializationList[$current] )?
            int alt69=2;
            int LA69_0 = input.LA(1);
=======
            // InternalAlf.g:4338:3: (this_SpecializationList_4= ruleSpecializationList[$current] )?
            int alt68=2;
            int LA68_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA69_0==39) ) {
                alt69=1;
=======
            if ( (LA68_0==38) ) {
                alt68=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt69) {
=======
            switch (alt68) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4258:4: this_SpecializationList_4= ruleSpecializationList[$current]
=======
                    // InternalAlf.g:4339:4: this_SpecializationList_4= ruleSpecializationList[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getBehaviorDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getBehaviorDeclarationAccess().getSpecializationListParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_SpecializationList_4=ruleSpecializationList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SpecializationList_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorDeclaration"


    // $ANTLR start "ruleParameterList"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4278:1: ruleParameterList[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' ) ;
=======
    // InternalAlf.g:4359:1: ruleParameterList[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleParameterList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4284:2: ( (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' ) )
            // InternalAlf.g:4285:2: (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' )
=======
            // InternalAlf.g:4365:2: ( (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' ) )
            // InternalAlf.g:4366:2: (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4285:2: (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' )
            // InternalAlf.g:4286:3: otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')'
=======
            // InternalAlf.g:4366:2: (otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')' )
            // InternalAlf.g:4367:3: otherlv_0= '(' ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )? otherlv_4= ')'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,42,FOLLOW_59); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,42,FOLLOW_60); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4290:3: ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )?
            int alt71=2;
            int LA71_0 = input.LA(1);
=======
            // InternalAlf.g:4371:3: ( ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )* )?
            int alt70=2;
            int LA70_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( ((LA71_0>=RULE_ID && LA71_0<=RULE_UNRESTRICTED_NAME)||(LA71_0>=89 && LA71_0<=91)) ) {
                alt71=1;
=======
            if ( ((LA70_0>=RULE_ID && LA70_0<=RULE_UNRESTRICTED_NAME)||(LA70_0>=89 && LA70_0<=91)) ) {
                alt70=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt71) {
=======
            switch (alt70) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4291:4: ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )*
=======
                    // InternalAlf.g:4372:4: ( (lv_ownedRelationship_1_0= ruleParameterMember ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4291:4: ( (lv_ownedRelationship_1_0= ruleParameterMember ) )
                    // InternalAlf.g:4292:5: (lv_ownedRelationship_1_0= ruleParameterMember )
=======
                    // InternalAlf.g:4372:4: ( (lv_ownedRelationship_1_0= ruleParameterMember ) )
                    // InternalAlf.g:4373:5: (lv_ownedRelationship_1_0= ruleParameterMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4292:5: (lv_ownedRelationship_1_0= ruleParameterMember )
                    // InternalAlf.g:4293:6: lv_ownedRelationship_1_0= ruleParameterMember
=======
                    // InternalAlf.g:4373:5: (lv_ownedRelationship_1_0= ruleParameterMember )
                    // InternalAlf.g:4374:6: lv_ownedRelationship_1_0= ruleParameterMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getOwnedRelationshipParameterMemberParserRuleCall_1_0_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_60);
=======
                    pushFollow(FOLLOW_61);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_1_0=ruleParameterMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.sysml.Alf.ParameterMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4310:4: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )*
                    loop70:
=======
                    // InternalAlf.g:4391:4: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) ) )*
                    loop69:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    do {
<<<<<<< Upstream, based on origin/ST6RI-75
                        int alt70=2;
                        int LA70_0 = input.LA(1);
=======
                        int alt69=2;
                        int LA69_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (LA70_0==40) ) {
                            alt70=1;
=======
                        if ( (LA69_0==39) ) {
                            alt69=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        }


<<<<<<< Upstream, based on origin/ST6RI-75
                        switch (alt70) {
=======
                        switch (alt69) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4311:5: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) )
=======
                    	    // InternalAlf.g:4392:5: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleParameterMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    otherlv_2=(Token)match(input,40,FOLLOW_61); if (state.failed) return current;
=======
                    	    otherlv_2=(Token)match(input,39,FOLLOW_62); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
                    	      				
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4315:5: ( (lv_ownedRelationship_3_0= ruleParameterMember ) )
                    	    // InternalAlf.g:4316:6: (lv_ownedRelationship_3_0= ruleParameterMember )
=======
                    	    // InternalAlf.g:4396:5: ( (lv_ownedRelationship_3_0= ruleParameterMember ) )
                    	    // InternalAlf.g:4397:6: (lv_ownedRelationship_3_0= ruleParameterMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4316:6: (lv_ownedRelationship_3_0= ruleParameterMember )
                    	    // InternalAlf.g:4317:7: lv_ownedRelationship_3_0= ruleParameterMember
=======
                    	    // InternalAlf.g:4397:6: (lv_ownedRelationship_3_0= ruleParameterMember )
                    	    // InternalAlf.g:4398:7: lv_ownedRelationship_3_0= ruleParameterMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_60);
=======
                    	    pushFollow(FOLLOW_61);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    lv_ownedRelationship_3_0=ruleParameterMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.sysml.Alf.ParameterMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    break loop70;
=======
                    	    break loop69;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "ruleBehaviorBody"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4345:1: ruleBehaviorBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) ;
=======
    // InternalAlf.g:4426:1: ruleBehaviorBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBehaviorBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4351:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) )
            // InternalAlf.g:4352:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
=======
            // InternalAlf.g:4432:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) ) )
            // InternalAlf.g:4433:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4352:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            int alt73=2;
            int LA73_0 = input.LA(1);
=======
            // InternalAlf.g:4433:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' ) )
            int alt72=2;
            int LA72_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA73_0==20) ) {
                alt73=1;
=======
            if ( (LA72_0==20) ) {
                alt72=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            else if ( (LA73_0==23) ) {
                alt73=2;
=======
            else if ( (LA72_0==23) ) {
                alt72=2;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< Upstream, based on origin/ST6RI-75
                    new NoViableAltException("", 73, 0, input);
=======
                    new NoViableAltException("", 72, 0, input);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                throw nvae;
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt73) {
=======
            switch (alt72) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4353:3: otherlv_0= ';'
=======
                    // InternalAlf.g:4434:3: otherlv_0= ';'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getBehaviorBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4358:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
=======
                    // InternalAlf.g:4439:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4358:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    // InternalAlf.g:4359:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}'
=======
                    // InternalAlf.g:4439:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}' )
                    // InternalAlf.g:4440:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* otherlv_4= '}'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_1=(Token)match(input,23,FOLLOW_62); if (state.failed) return current;
=======
                    otherlv_1=(Token)match(input,23,FOLLOW_63); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getBehaviorBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4363:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop72:
=======
                    // InternalAlf.g:4444:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop71:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    do {
<<<<<<< Upstream, based on origin/ST6RI-75
                        int alt72=3;
                        alt72 = dfa72.predict(input);
                        switch (alt72) {
=======
                        int alt71=3;
                        alt71 = dfa71.predict(input);
                        switch (alt71) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4364:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
=======
                    	    // InternalAlf.g:4445:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4364:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
                    	    // InternalAlf.g:4365:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
=======
                    	    // InternalAlf.g:4445:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
                    	    // InternalAlf.g:4446:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4365:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
                    	    // InternalAlf.g:4366:7: lv_ownedRelationship_2_0= ruleBehaviorMember
=======
                    	    // InternalAlf.g:4446:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
                    	    // InternalAlf.g:4447:7: lv_ownedRelationship_2_0= ruleBehaviorMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_62);
=======
                    	    pushFollow(FOLLOW_63);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    lv_ownedRelationship_2_0=ruleBehaviorMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBehaviorBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.sysml.Alf.BehaviorMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4384:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
=======
                    	    // InternalAlf.g:4465:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4384:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:4385:6: (lv_ownedRelationship_3_0= rulePackageImport )
=======
                    	    // InternalAlf.g:4465:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:4466:6: (lv_ownedRelationship_3_0= rulePackageImport )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4385:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:4386:7: lv_ownedRelationship_3_0= rulePackageImport
=======
                    	    // InternalAlf.g:4466:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:4467:7: lv_ownedRelationship_3_0= rulePackageImport
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0());
                    	      						
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_62);
=======
                    	    pushFollow(FOLLOW_63);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    lv_ownedRelationship_3_0=rulePackageImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBehaviorBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.sysml.Alf.PackageImport");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    break loop72;
=======
                    	    break loop71;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorBody"


    // $ANTLR start "entryRuleParameterMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4413:1: entryRuleParameterMember returns [EObject current=null] : iv_ruleParameterMember= ruleParameterMember EOF ;
=======
    // InternalAlf.g:4494:1: entryRuleParameterMember returns [EObject current=null] : iv_ruleParameterMember= ruleParameterMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleParameterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4413:56: (iv_ruleParameterMember= ruleParameterMember EOF )
            // InternalAlf.g:4414:2: iv_ruleParameterMember= ruleParameterMember EOF
=======
            // InternalAlf.g:4494:56: (iv_ruleParameterMember= ruleParameterMember EOF )
            // InternalAlf.g:4495:2: iv_ruleParameterMember= ruleParameterMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterMember=ruleParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterMember"


    // $ANTLR start "ruleParameterMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4420:1: ruleParameterMember returns [EObject current=null] : ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) ) ;
=======
    // InternalAlf.g:4501:1: ruleParameterMember returns [EObject current=null] : ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleParameterMember() throws RecognitionException {
        EObject current = null;

        Enumerator lv_direction_0_0 = null;

        AntlrDatatypeRuleToken lv_memberName_1_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4426:2: ( ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) ) )
            // InternalAlf.g:4427:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) )
=======
            // InternalAlf.g:4507:2: ( ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) ) )
            // InternalAlf.g:4508:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4427:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) )
            // InternalAlf.g:4428:3: ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) )
=======
            // InternalAlf.g:4508:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) ) )
            // InternalAlf.g:4509:3: ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_memberName_1_0= ruleName ) ) ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4428:3: ( (lv_direction_0_0= ruleFeatureDirection ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);
=======
            // InternalAlf.g:4509:3: ( (lv_direction_0_0= ruleFeatureDirection ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( ((LA74_0>=89 && LA74_0<=91)) ) {
                alt74=1;
=======
            if ( ((LA73_0>=89 && LA73_0<=91)) ) {
                alt73=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt74) {
=======
            switch (alt73) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4429:4: (lv_direction_0_0= ruleFeatureDirection )
=======
                    // InternalAlf.g:4510:4: (lv_direction_0_0= ruleFeatureDirection )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4429:4: (lv_direction_0_0= ruleFeatureDirection )
                    // InternalAlf.g:4430:5: lv_direction_0_0= ruleFeatureDirection
=======
                    // InternalAlf.g:4510:4: (lv_direction_0_0= ruleFeatureDirection )
                    // InternalAlf.g:4511:5: lv_direction_0_0= ruleFeatureDirection
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_16);
                    lv_direction_0_0=ruleFeatureDirection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterMemberRule());
                      					}
                      					set(
                      						current,
                      						"direction",
                      						lv_direction_0_0,
                      						"org.omg.sysml.Alf.FeatureDirection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4447:3: ( (lv_memberName_1_0= ruleName ) )
            // InternalAlf.g:4448:4: (lv_memberName_1_0= ruleName )
=======
            // InternalAlf.g:4528:3: ( (lv_memberName_1_0= ruleName ) )
            // InternalAlf.g:4529:4: (lv_memberName_1_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4448:4: (lv_memberName_1_0= ruleName )
            // InternalAlf.g:4449:5: lv_memberName_1_0= ruleName
=======
            // InternalAlf.g:4529:4: (lv_memberName_1_0= ruleName )
            // InternalAlf.g:4530:5: lv_memberName_1_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterMemberAccess().getMemberNameNameParserRuleCall_1_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_63);
=======
            pushFollow(FOLLOW_64);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_memberName_1_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterMemberRule());
              					}
              					set(
              						current,
              						"memberName",
              						lv_memberName_1_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4466:3: ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) )
            // InternalAlf.g:4467:4: (lv_ownedRelatedElement_2_0= ruleParameterDefinition )
=======
            // InternalAlf.g:4547:3: ( (lv_ownedRelatedElement_2_0= ruleParameterDefinition ) )
            // InternalAlf.g:4548:4: (lv_ownedRelatedElement_2_0= ruleParameterDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4467:4: (lv_ownedRelatedElement_2_0= ruleParameterDefinition )
            // InternalAlf.g:4468:5: lv_ownedRelatedElement_2_0= ruleParameterDefinition
=======
            // InternalAlf.g:4548:4: (lv_ownedRelatedElement_2_0= ruleParameterDefinition )
            // InternalAlf.g:4549:5: lv_ownedRelatedElement_2_0= ruleParameterDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterMemberAccess().getOwnedRelatedElementParameterDefinitionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleParameterDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.sysml.Alf.ParameterDefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterMember"


    // $ANTLR start "entryRuleBehaviorMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4489:1: entryRuleBehaviorMember returns [EObject current=null] : iv_ruleBehaviorMember= ruleBehaviorMember EOF ;
=======
    // InternalAlf.g:4570:1: entryRuleBehaviorMember returns [EObject current=null] : iv_ruleBehaviorMember= ruleBehaviorMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBehaviorMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4489:55: (iv_ruleBehaviorMember= ruleBehaviorMember EOF )
            // InternalAlf.g:4490:2: iv_ruleBehaviorMember= ruleBehaviorMember EOF
=======
            // InternalAlf.g:4570:55: (iv_ruleBehaviorMember= ruleBehaviorMember EOF )
            // InternalAlf.g:4571:2: iv_ruleBehaviorMember= ruleBehaviorMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBehaviorMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorMember=ruleBehaviorMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBehaviorMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorMember"


    // $ANTLR start "ruleBehaviorMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4496:1: ruleBehaviorMember returns [EObject current=null] : (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember ) ;
=======
    // InternalAlf.g:4577:1: ruleBehaviorMember returns [EObject current=null] : (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBehaviorMember() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureCategoryMember_0 = null;

        EObject this_FeatureMember_1 = null;

        EObject this_BehaviorStepMember_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4502:2: ( (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember ) )
            // InternalAlf.g:4503:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember )
=======
            // InternalAlf.g:4583:2: ( (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember ) )
            // InternalAlf.g:4584:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4503:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember )
            int alt75=3;
            alt75 = dfa75.predict(input);
            switch (alt75) {
=======
            // InternalAlf.g:4584:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember )
            int alt74=3;
            alt74 = dfa74.predict(input);
            switch (alt74) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4504:3: this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember
=======
                    // InternalAlf.g:4585:3: this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBehaviorMemberAccess().getNonFeatureCategoryMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureCategoryMember_0=ruleNonFeatureCategoryMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureCategoryMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4516:3: this_FeatureMember_1= ruleFeatureMember
=======
                    // InternalAlf.g:4597:3: this_FeatureMember_1= ruleFeatureMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBehaviorMemberAccess().getFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureMember_1=ruleFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4528:3: this_BehaviorStepMember_2= ruleBehaviorStepMember
=======
                    // InternalAlf.g:4609:3: this_BehaviorStepMember_2= ruleBehaviorStepMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBehaviorMemberAccess().getBehaviorStepMemberParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BehaviorStepMember_2=ruleBehaviorStepMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BehaviorStepMember_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorMember"


    // $ANTLR start "entryRuleBehaviorStepMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4543:1: entryRuleBehaviorStepMember returns [EObject current=null] : iv_ruleBehaviorStepMember= ruleBehaviorStepMember EOF ;
=======
    // InternalAlf.g:4624:1: entryRuleBehaviorStepMember returns [EObject current=null] : iv_ruleBehaviorStepMember= ruleBehaviorStepMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBehaviorStepMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorStepMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4543:59: (iv_ruleBehaviorStepMember= ruleBehaviorStepMember EOF )
            // InternalAlf.g:4544:2: iv_ruleBehaviorStepMember= ruleBehaviorStepMember EOF
=======
            // InternalAlf.g:4624:59: (iv_ruleBehaviorStepMember= ruleBehaviorStepMember EOF )
            // InternalAlf.g:4625:2: iv_ruleBehaviorStepMember= ruleBehaviorStepMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBehaviorStepMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorStepMember=ruleBehaviorStepMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBehaviorStepMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorStepMember"


    // $ANTLR start "ruleBehaviorStepMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4550:1: ruleBehaviorStepMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] ) ;
=======
    // InternalAlf.g:4631:1: ruleBehaviorStepMember returns [EObject current=null] : (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBehaviorStepMember() throws RecognitionException {
        EObject current = null;

        EObject this_CategoryMemberPrefix_0 = null;

        EObject this_BehaviorStepMemberDefinition_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4556:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] ) )
            // InternalAlf.g:4557:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] )
=======
            // InternalAlf.g:4637:2: ( (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] ) )
            // InternalAlf.g:4638:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4557:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] )
            // InternalAlf.g:4558:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current]
=======
            // InternalAlf.g:4638:2: (this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current] )
            // InternalAlf.g:4639:3: this_CategoryMemberPrefix_0= ruleCategoryMemberPrefix[$current] this_BehaviorStepMemberDefinition_1= ruleBehaviorStepMemberDefinition[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorStepMemberRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorStepMemberAccess().getCategoryMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_CategoryMemberPrefix_0=ruleCategoryMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryMemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorStepMemberRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorStepMemberAccess().getBehaviorStepMemberDefinitionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_BehaviorStepMemberDefinition_1=ruleBehaviorStepMemberDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BehaviorStepMemberDefinition_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorStepMember"


    // $ANTLR start "ruleBehaviorStepMemberDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4591:1: ruleBehaviorStepMemberDefinition[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) ) ;
=======
    // InternalAlf.g:4672:1: ruleBehaviorStepMemberDefinition[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBehaviorStepMemberDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_ownedRelatedElement_0_0 = null;

        AntlrDatatypeRuleToken lv_memberName_2_0 = null;

        EObject lv_ownedRelatedElement_6_0 = null;

        AntlrDatatypeRuleToken lv_memberName_8_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4597:2: ( ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) ) )
            // InternalAlf.g:4598:2: ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) )
=======
            // InternalAlf.g:4678:2: ( ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) ) )
            // InternalAlf.g:4679:2: ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4598:2: ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) )
            int alt78=4;
            alt78 = dfa78.predict(input);
            switch (alt78) {
=======
            // InternalAlf.g:4679:2: ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) )
            int alt77=4;
            alt77 = dfa77.predict(input);
            switch (alt77) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4599:3: ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) )
=======
                    // InternalAlf.g:4680:3: ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4599:3: ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) )
                    // InternalAlf.g:4600:4: (lv_ownedRelatedElement_0_0= ruleStepDefinition )
=======
                    // InternalAlf.g:4680:3: ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) )
                    // InternalAlf.g:4681:4: (lv_ownedRelatedElement_0_0= ruleStepDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4600:4: (lv_ownedRelatedElement_0_0= ruleStepDefinition )
                    // InternalAlf.g:4601:5: lv_ownedRelatedElement_0_0= ruleStepDefinition
=======
                    // InternalAlf.g:4681:4: (lv_ownedRelatedElement_0_0= ruleStepDefinition )
                    // InternalAlf.g:4682:5: lv_ownedRelatedElement_0_0= ruleStepDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBehaviorStepMemberDefinitionAccess().getOwnedRelatedElementStepDefinitionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_0=ruleStepDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBehaviorStepMemberDefinitionRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_0,
                      						"org.omg.sysml.Alf.StepDefinition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4619:3: (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' )
=======
                    // InternalAlf.g:4700:3: (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4619:3: (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' )
                    // InternalAlf.g:4620:4: otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';'
=======
                    // InternalAlf.g:4700:3: (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' )
                    // InternalAlf.g:4701:4: otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_1=(Token)match(input,44,FOLLOW_26); if (state.failed) return current;
=======
                    otherlv_1=(Token)match(input,44,FOLLOW_27); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getBehaviorStepMemberDefinitionAccess().getStepKeyword_1_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4624:4: ( (lv_memberName_2_0= ruleName ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);
=======
                    // InternalAlf.g:4705:4: ( (lv_memberName_2_0= ruleName ) )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA76_0>=RULE_ID && LA76_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt76=1;
=======
                    if ( ((LA75_0>=RULE_ID && LA75_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt75=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    switch (alt76) {
=======
                    switch (alt75) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:4625:5: (lv_memberName_2_0= ruleName )
=======
                            // InternalAlf.g:4706:5: (lv_memberName_2_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:4625:5: (lv_memberName_2_0= ruleName )
                            // InternalAlf.g:4626:6: lv_memberName_2_0= ruleName
=======
                            // InternalAlf.g:4706:5: (lv_memberName_2_0= ruleName )
                            // InternalAlf.g:4707:6: lv_memberName_2_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getBehaviorStepMemberDefinitionAccess().getMemberNameNameParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_2_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getBehaviorStepMemberDefinitionRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_2_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getBehaviorStepMemberDefinitionAccess().getIsKeyword_1_2());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4647:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:4648:5: ( ruleQualifiedName )
=======
                    // InternalAlf.g:4728:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:4729:5: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4648:5: ( ruleQualifiedName )
                    // InternalAlf.g:4649:6: ruleQualifiedName
=======
                    // InternalAlf.g:4729:5: ( ruleQualifiedName )
                    // InternalAlf.g:4730:6: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBehaviorStepMemberDefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBehaviorStepMemberDefinitionAccess().getMemberElementStepCrossReference_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getBehaviorStepMemberDefinitionAccess().getSemicolonKeyword_1_4());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4672:3: ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) )
=======
                    // InternalAlf.g:4753:3: ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4672:3: ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) )
                    // InternalAlf.g:4673:4: (lv_ownedRelatedElement_6_0= ruleExpressionDefinition )
=======
                    // InternalAlf.g:4753:3: ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) )
                    // InternalAlf.g:4754:4: (lv_ownedRelatedElement_6_0= ruleExpressionDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4673:4: (lv_ownedRelatedElement_6_0= ruleExpressionDefinition )
                    // InternalAlf.g:4674:5: lv_ownedRelatedElement_6_0= ruleExpressionDefinition
=======
                    // InternalAlf.g:4754:4: (lv_ownedRelatedElement_6_0= ruleExpressionDefinition )
                    // InternalAlf.g:4755:5: lv_ownedRelatedElement_6_0= ruleExpressionDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBehaviorStepMemberDefinitionAccess().getOwnedRelatedElementExpressionDefinitionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_6_0=ruleExpressionDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBehaviorStepMemberDefinitionRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_6_0,
                      						"org.omg.sysml.Alf.ExpressionDefinition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4692:3: (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' )
=======
                    // InternalAlf.g:4773:3: (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4692:3: (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' )
                    // InternalAlf.g:4693:4: otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';'
=======
                    // InternalAlf.g:4773:3: (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' )
                    // InternalAlf.g:4774:4: otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_7=(Token)match(input,45,FOLLOW_26); if (state.failed) return current;
=======
                    otherlv_7=(Token)match(input,45,FOLLOW_27); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getBehaviorStepMemberDefinitionAccess().getExprKeyword_3_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4697:4: ( (lv_memberName_8_0= ruleName ) )?
                    int alt77=2;
                    int LA77_0 = input.LA(1);
=======
                    // InternalAlf.g:4778:4: ( (lv_memberName_8_0= ruleName ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA77_0>=RULE_ID && LA77_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt77=1;
=======
                    if ( ((LA76_0>=RULE_ID && LA76_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt76=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    switch (alt77) {
=======
                    switch (alt76) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:4698:5: (lv_memberName_8_0= ruleName )
=======
                            // InternalAlf.g:4779:5: (lv_memberName_8_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:4698:5: (lv_memberName_8_0= ruleName )
                            // InternalAlf.g:4699:6: lv_memberName_8_0= ruleName
=======
                            // InternalAlf.g:4779:5: (lv_memberName_8_0= ruleName )
                            // InternalAlf.g:4780:6: lv_memberName_8_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getBehaviorStepMemberDefinitionAccess().getMemberNameNameParserRuleCall_3_1_0());
                              					
                            }
                            pushFollow(FOLLOW_28);
                            lv_memberName_8_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getBehaviorStepMemberDefinitionRule());
                              						}
                              						set(
                              							current,
                              							"memberName",
                              							lv_memberName_8_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getBehaviorStepMemberDefinitionAccess().getIsKeyword_3_2());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4720:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:4721:5: ( ruleQualifiedName )
=======
                    // InternalAlf.g:4801:4: ( ( ruleQualifiedName ) )
                    // InternalAlf.g:4802:5: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4721:5: ( ruleQualifiedName )
                    // InternalAlf.g:4722:6: ruleQualifiedName
=======
                    // InternalAlf.g:4802:5: ( ruleQualifiedName )
                    // InternalAlf.g:4803:6: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBehaviorStepMemberDefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBehaviorStepMemberDefinitionAccess().getMemberElementExpressionCrossReference_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getBehaviorStepMemberDefinitionAccess().getSemicolonKeyword_3_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorStepMemberDefinition"


    // $ANTLR start "entryRuleFunctionDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4748:1: entryRuleFunctionDefinitionOrStub returns [EObject current=null] : iv_ruleFunctionDefinitionOrStub= ruleFunctionDefinitionOrStub EOF ;
=======
    // InternalAlf.g:4829:1: entryRuleFunctionDefinitionOrStub returns [EObject current=null] : iv_ruleFunctionDefinitionOrStub= ruleFunctionDefinitionOrStub EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleFunctionDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDefinitionOrStub = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4748:65: (iv_ruleFunctionDefinitionOrStub= ruleFunctionDefinitionOrStub EOF )
            // InternalAlf.g:4749:2: iv_ruleFunctionDefinitionOrStub= ruleFunctionDefinitionOrStub EOF
=======
            // InternalAlf.g:4829:65: (iv_ruleFunctionDefinitionOrStub= ruleFunctionDefinitionOrStub EOF )
            // InternalAlf.g:4830:2: iv_ruleFunctionDefinitionOrStub= ruleFunctionDefinitionOrStub EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDefinitionOrStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDefinitionOrStub=ruleFunctionDefinitionOrStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDefinitionOrStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDefinitionOrStub"


    // $ANTLR start "ruleFunctionDefinitionOrStub"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4755:1: ruleFunctionDefinitionOrStub returns [EObject current=null] : this_FunctionDefinition_0= ruleFunctionDefinition[$current] ;
=======
    // InternalAlf.g:4836:1: ruleFunctionDefinitionOrStub returns [EObject current=null] : this_FunctionDefinition_0= ruleFunctionDefinition[$current] ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFunctionDefinitionOrStub() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionDefinition_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4761:2: (this_FunctionDefinition_0= ruleFunctionDefinition[$current] )
            // InternalAlf.g:4762:2: this_FunctionDefinition_0= ruleFunctionDefinition[$current]
=======
            // InternalAlf.g:4842:2: (this_FunctionDefinition_0= ruleFunctionDefinition[$current] )
            // InternalAlf.g:4843:2: this_FunctionDefinition_0= ruleFunctionDefinition[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDefinitionOrStubRule());
              		}
              		newCompositeNode(grammarAccess.getFunctionDefinitionOrStubAccess().getFunctionDefinitionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_FunctionDefinition_0=ruleFunctionDefinition(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_FunctionDefinition_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinitionOrStub"


    // $ANTLR start "ruleFunctionDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4780:1: ruleFunctionDefinition[EObject in_current] returns [EObject current=in_current] : (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] ) ;
=======
    // InternalAlf.g:4861:1: ruleFunctionDefinition[EObject in_current] returns [EObject current=in_current] : (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFunctionDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FunctionDeclaration_0 = null;

        EObject this_FunctionBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4786:2: ( (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] ) )
            // InternalAlf.g:4787:2: (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] )
=======
            // InternalAlf.g:4867:2: ( (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] ) )
            // InternalAlf.g:4868:2: (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4787:2: (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] )
            // InternalAlf.g:4788:3: this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current]
=======
            // InternalAlf.g:4868:2: (this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current] )
            // InternalAlf.g:4869:3: this_FunctionDeclaration_0= ruleFunctionDeclaration[$current] this_FunctionBody_1= ruleFunctionBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getFunctionDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_FunctionDeclaration_0=ruleFunctionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getFunctionBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_1=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "ruleFunctionDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4821:1: ruleFunctionDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? ) ;
=======
    // InternalAlf.g:4902:1: ruleFunctionDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFunctionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ParameterList_3 = null;

        EObject this_ReturnParameterPart_4 = null;

        EObject this_SpecializationList_5 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4827:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? ) )
            // InternalAlf.g:4828:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? )
=======
            // InternalAlf.g:4908:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? ) )
            // InternalAlf.g:4909:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4828:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? )
            // InternalAlf.g:4829:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )?
=======
            // InternalAlf.g:4909:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )? )
            // InternalAlf.g:4910:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' ( (lv_name_2_0= ruleName ) ) this_ParameterList_3= ruleParameterList[$current] this_ReturnParameterPart_4= ruleReturnParameterPart[$current] (this_SpecializationList_5= ruleSpecializationList[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4829:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);
=======
            // InternalAlf.g:4910:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA79_0==33) ) {
                alt79=1;
=======
            if ( (LA78_0==33) ) {
                alt78=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt79) {
=======
            switch (alt78) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4830:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:4911:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4830:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:4831:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:4911:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:4912:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_64); if (state.failed) return current;
=======
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_65); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFunctionDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFunctionDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,31,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4847:3: ( (lv_name_2_0= ruleName ) )
            // InternalAlf.g:4848:4: (lv_name_2_0= ruleName )
=======
            // InternalAlf.g:4928:3: ( (lv_name_2_0= ruleName ) )
            // InternalAlf.g:4929:4: (lv_name_2_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4848:4: (lv_name_2_0= ruleName )
            // InternalAlf.g:4849:5: lv_name_2_0= ruleName
=======
            // InternalAlf.g:4929:4: (lv_name_2_0= ruleName )
            // InternalAlf.g:4930:5: lv_name_2_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getNameNameParserRuleCall_2_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_58);
=======
            pushFollow(FOLLOW_59);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_name_2_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getParameterListParserRuleCall_3());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_65);
=======
            pushFollow(FOLLOW_66);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_ParameterList_3=ruleParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ParameterList_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getReturnParameterPartParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_46);
            this_ReturnParameterPart_4=ruleReturnParameterPart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ReturnParameterPart_4;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4894:3: (this_SpecializationList_5= ruleSpecializationList[$current] )?
            int alt80=2;
            int LA80_0 = input.LA(1);
=======
            // InternalAlf.g:4975:3: (this_SpecializationList_5= ruleSpecializationList[$current] )?
            int alt79=2;
            int LA79_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA80_0==39) ) {
                alt80=1;
=======
            if ( (LA79_0==38) ) {
                alt79=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt80) {
=======
            switch (alt79) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4895:4: this_SpecializationList_5= ruleSpecializationList[$current]
=======
                    // InternalAlf.g:4976:4: this_SpecializationList_5= ruleSpecializationList[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFunctionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSpecializationListParserRuleCall_5());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_SpecializationList_5=ruleSpecializationList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SpecializationList_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDeclaration"


    // $ANTLR start "ruleReturnParameterPart"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4915:1: ruleReturnParameterPart[EObject in_current] returns [EObject current=in_current] : ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) ) ;
=======
    // InternalAlf.g:4996:1: ruleReturnParameterPart[EObject in_current] returns [EObject current=in_current] : ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleReturnParameterPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4921:2: ( ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) ) )
            // InternalAlf.g:4922:2: ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) )
=======
            // InternalAlf.g:5002:2: ( ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) ) )
            // InternalAlf.g:5003:2: ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4922:2: ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) )
            // InternalAlf.g:4923:3: (lv_ownedRelationship_0_0= ruleReturnParameterMember )
=======
            // InternalAlf.g:5003:2: ( (lv_ownedRelationship_0_0= ruleReturnParameterMember ) )
            // InternalAlf.g:5004:3: (lv_ownedRelationship_0_0= ruleReturnParameterMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4923:3: (lv_ownedRelationship_0_0= ruleReturnParameterMember )
            // InternalAlf.g:4924:4: lv_ownedRelationship_0_0= ruleReturnParameterMember
=======
            // InternalAlf.g:5004:3: (lv_ownedRelationship_0_0= ruleReturnParameterMember )
            // InternalAlf.g:5005:4: lv_ownedRelationship_0_0= ruleReturnParameterMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReturnParameterPartAccess().getOwnedRelationshipReturnParameterMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleReturnParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReturnParameterPartRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.sysml.Alf.ReturnParameterMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnParameterPart"


    // $ANTLR start "ruleFunctionBody"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:4945:1: ruleFunctionBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) ) ;
=======
    // InternalAlf.g:5026:1: ruleFunctionBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4951:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) ) )
            // InternalAlf.g:4952:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) )
=======
            // InternalAlf.g:5032:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) ) )
            // InternalAlf.g:5033:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:4952:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) )
            int alt83=2;
            int LA83_0 = input.LA(1);
=======
            // InternalAlf.g:5033:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' ) )
            int alt82=2;
            int LA82_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA83_0==20) ) {
                alt83=1;
=======
            if ( (LA82_0==20) ) {
                alt82=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            else if ( (LA83_0==23) ) {
                alt83=2;
=======
            else if ( (LA82_0==23) ) {
                alt82=2;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< Upstream, based on origin/ST6RI-75
                    new NoViableAltException("", 83, 0, input);
=======
                    new NoViableAltException("", 82, 0, input);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                throw nvae;
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt83) {
=======
            switch (alt82) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4953:3: otherlv_0= ';'
=======
                    // InternalAlf.g:5034:3: otherlv_0= ';'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4958:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' )
=======
                    // InternalAlf.g:5039:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4958:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' )
                    // InternalAlf.g:4959:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}'
=======
                    // InternalAlf.g:5039:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}' )
                    // InternalAlf.g:5040:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )* ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )? otherlv_5= '}'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_1=(Token)match(input,23,FOLLOW_66); if (state.failed) return current;
=======
                    otherlv_1=(Token)match(input,23,FOLLOW_67); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:4963:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop81:
=======
                    // InternalAlf.g:5044:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*
                    loop80:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    do {
<<<<<<< Upstream, based on origin/ST6RI-75
                        int alt81=3;
                        alt81 = dfa81.predict(input);
                        switch (alt81) {
=======
                        int alt80=3;
                        alt80 = dfa80.predict(input);
                        switch (alt80) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4964:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
=======
                    	    // InternalAlf.g:5045:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4964:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
                    	    // InternalAlf.g:4965:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
=======
                    	    // InternalAlf.g:5045:5: ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) )
                    	    // InternalAlf.g:5046:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4965:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
                    	    // InternalAlf.g:4966:7: lv_ownedRelationship_2_0= ruleBehaviorMember
=======
                    	    // InternalAlf.g:5046:6: (lv_ownedRelationship_2_0= ruleBehaviorMember )
                    	    // InternalAlf.g:5047:7: lv_ownedRelationship_2_0= ruleBehaviorMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_66);
=======
                    	    pushFollow(FOLLOW_67);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    lv_ownedRelationship_2_0=ruleBehaviorMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.sysml.Alf.BehaviorMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4984:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
=======
                    	    // InternalAlf.g:5065:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4984:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:4985:6: (lv_ownedRelationship_3_0= rulePackageImport )
=======
                    	    // InternalAlf.g:5065:5: ( (lv_ownedRelationship_3_0= rulePackageImport ) )
                    	    // InternalAlf.g:5066:6: (lv_ownedRelationship_3_0= rulePackageImport )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:4985:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:4986:7: lv_ownedRelationship_3_0= rulePackageImport
=======
                    	    // InternalAlf.g:5066:6: (lv_ownedRelationship_3_0= rulePackageImport )
                    	    // InternalAlf.g:5067:7: lv_ownedRelationship_3_0= rulePackageImport
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0());
                    	      						
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_66);
=======
                    	    pushFollow(FOLLOW_67);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    lv_ownedRelationship_3_0=rulePackageImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.sysml.Alf.PackageImport");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    break loop81;
=======
                    	    break loop80;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        }
                    } while (true);

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5004:4: ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);
=======
                    // InternalAlf.g:5085:4: ( (lv_ownedRelationship_4_0= ruleExpressionMember ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA82_0>=RULE_BOOLEAN_VALUE && LA82_0<=RULE_UNRESTRICTED_NAME)||(LA82_0>=18 && LA82_0<=19)||LA82_0==23||LA82_0==42||(LA82_0>=74 && LA82_0<=75)||(LA82_0>=79 && LA82_0<=80)||(LA82_0>=83 && LA82_0<=84)) ) {
                        alt82=1;
=======
                    if ( ((LA81_0>=RULE_BOOLEAN_VALUE && LA81_0<=RULE_UNRESTRICTED_NAME)||(LA81_0>=18 && LA81_0<=19)||LA81_0==23||LA81_0==42||(LA81_0>=74 && LA81_0<=75)||(LA81_0>=79 && LA81_0<=80)||(LA81_0>=83 && LA81_0<=84)) ) {
                        alt81=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    switch (alt82) {
=======
                    switch (alt81) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5005:5: (lv_ownedRelationship_4_0= ruleExpressionMember )
=======
                            // InternalAlf.g:5086:5: (lv_ownedRelationship_4_0= ruleExpressionMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5005:5: (lv_ownedRelationship_4_0= ruleExpressionMember )
                            // InternalAlf.g:5006:6: lv_ownedRelationship_4_0= ruleExpressionMember
=======
                            // InternalAlf.g:5086:5: (lv_ownedRelationship_4_0= ruleExpressionMember )
                            // InternalAlf.g:5087:6: lv_ownedRelationship_4_0= ruleExpressionMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipExpressionMemberParserRuleCall_1_2_0());
                              					
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            pushFollow(FOLLOW_67);
=======
                            pushFollow(FOLLOW_68);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            lv_ownedRelationship_4_0=ruleExpressionMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                              						}
                              						add(
                              							current,
                              							"ownedRelationship",
                              							lv_ownedRelationship_4_0,
                              							"org.omg.sysml.Alf.ExpressionMember");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleReturnParameterMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5032:1: entryRuleReturnParameterMember returns [EObject current=null] : iv_ruleReturnParameterMember= ruleReturnParameterMember EOF ;
=======
    // InternalAlf.g:5113:1: entryRuleReturnParameterMember returns [EObject current=null] : iv_ruleReturnParameterMember= ruleReturnParameterMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleReturnParameterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnParameterMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5032:62: (iv_ruleReturnParameterMember= ruleReturnParameterMember EOF )
            // InternalAlf.g:5033:2: iv_ruleReturnParameterMember= ruleReturnParameterMember EOF
=======
            // InternalAlf.g:5113:62: (iv_ruleReturnParameterMember= ruleReturnParameterMember EOF )
            // InternalAlf.g:5114:2: iv_ruleReturnParameterMember= ruleReturnParameterMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnParameterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnParameterMember=ruleReturnParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnParameterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnParameterMember"


    // $ANTLR start "ruleReturnParameterMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5039:1: ruleReturnParameterMember returns [EObject current=null] : ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) ;
=======
    // InternalAlf.g:5120:1: ruleReturnParameterMember returns [EObject current=null] : ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleReturnParameterMember() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_memberName_0_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5045:2: ( ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) )
            // InternalAlf.g:5046:2: ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
=======
            // InternalAlf.g:5126:2: ( ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) )
            // InternalAlf.g:5127:2: ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5046:2: ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
            // InternalAlf.g:5047:3: ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
=======
            // InternalAlf.g:5127:2: ( ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
            // InternalAlf.g:5128:3: ( (lv_memberName_0_0= ruleName ) )? ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5047:3: ( (lv_memberName_0_0= ruleName ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);
=======
            // InternalAlf.g:5128:3: ( (lv_memberName_0_0= ruleName ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( ((LA84_0>=RULE_ID && LA84_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt84=1;
=======
            if ( ((LA83_0>=RULE_ID && LA83_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt83=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt84) {
=======
            switch (alt83) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5048:4: (lv_memberName_0_0= ruleName )
=======
                    // InternalAlf.g:5129:4: (lv_memberName_0_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5048:4: (lv_memberName_0_0= ruleName )
                    // InternalAlf.g:5049:5: lv_memberName_0_0= ruleName
=======
                    // InternalAlf.g:5129:4: (lv_memberName_0_0= ruleName )
                    // InternalAlf.g:5130:5: lv_memberName_0_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnParameterMemberAccess().getMemberNameNameParserRuleCall_0_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_63);
=======
                    pushFollow(FOLLOW_64);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_memberName_0_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnParameterMemberRule());
                      					}
                      					set(
                      						current,
                      						"memberName",
                      						lv_memberName_0_0,
                      						"org.omg.sysml.Alf.Name");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5066:3: ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
            // InternalAlf.g:5067:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
=======
            // InternalAlf.g:5147:3: ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
            // InternalAlf.g:5148:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5067:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
            // InternalAlf.g:5068:5: lv_ownedRelatedElement_1_0= ruleParameterDefinition
=======
            // InternalAlf.g:5148:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
            // InternalAlf.g:5149:5: lv_ownedRelatedElement_1_0= ruleParameterDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnParameterMemberAccess().getOwnedRelatedElementParameterDefinitionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleParameterDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnParameterMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.sysml.Alf.ParameterDefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnParameterMember"


    // $ANTLR start "entryRuleExpressionMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5089:1: entryRuleExpressionMember returns [EObject current=null] : iv_ruleExpressionMember= ruleExpressionMember EOF ;
=======
    // InternalAlf.g:5170:1: entryRuleExpressionMember returns [EObject current=null] : iv_ruleExpressionMember= ruleExpressionMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5089:57: (iv_ruleExpressionMember= ruleExpressionMember EOF )
            // InternalAlf.g:5090:2: iv_ruleExpressionMember= ruleExpressionMember EOF
=======
            // InternalAlf.g:5170:57: (iv_ruleExpressionMember= ruleExpressionMember EOF )
            // InternalAlf.g:5171:2: iv_ruleExpressionMember= ruleExpressionMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionMember=ruleExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionMember"


    // $ANTLR start "ruleExpressionMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5096:1: ruleExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) ;
=======
    // InternalAlf.g:5177:1: ruleExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5102:2: ( ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) )
            // InternalAlf.g:5103:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
=======
            // InternalAlf.g:5183:2: ( ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) )
            // InternalAlf.g:5184:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5103:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
            // InternalAlf.g:5104:3: (lv_ownedRelatedElement_0_0= ruleExpression )
=======
            // InternalAlf.g:5184:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
            // InternalAlf.g:5185:3: (lv_ownedRelatedElement_0_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5104:3: (lv_ownedRelatedElement_0_0= ruleExpression )
            // InternalAlf.g:5105:4: lv_ownedRelatedElement_0_0= ruleExpression
=======
            // InternalAlf.g:5185:3: (lv_ownedRelatedElement_0_0= ruleExpression )
            // InternalAlf.g:5186:4: lv_ownedRelatedElement_0_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionMemberAccess().getOwnedRelatedElementExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.sysml.Alf.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionMember"


    // $ANTLR start "entryRuleFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5125:1: entryRuleFeatureDefinition returns [EObject current=null] : iv_ruleFeatureDefinition= ruleFeatureDefinition EOF ;
=======
    // InternalAlf.g:5206:1: entryRuleFeatureDefinition returns [EObject current=null] : iv_ruleFeatureDefinition= ruleFeatureDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5125:58: (iv_ruleFeatureDefinition= ruleFeatureDefinition EOF )
            // InternalAlf.g:5126:2: iv_ruleFeatureDefinition= ruleFeatureDefinition EOF
=======
            // InternalAlf.g:5206:58: (iv_ruleFeatureDefinition= ruleFeatureDefinition EOF )
            // InternalAlf.g:5207:2: iv_ruleFeatureDefinition= ruleFeatureDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureDefinition=ruleFeatureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureDefinition"


    // $ANTLR start "ruleFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5132:1: ruleFeatureDefinition returns [EObject current=null] : (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition ) ;
=======
    // InternalAlf.g:5213:1: ruleFeatureDefinition returns [EObject current=null] : (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_NamedFeatureDefinition_0 = null;

        EObject this_UnnamedFeatureDefinition_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5138:2: ( (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition ) )
            // InternalAlf.g:5139:2: (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition )
=======
            // InternalAlf.g:5219:2: ( (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition ) )
            // InternalAlf.g:5220:2: (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5139:2: (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition )
            int alt85=2;
            int LA85_0 = input.LA(1);
=======
            // InternalAlf.g:5220:2: (this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition | this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition )
            int alt84=2;
            int LA84_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( ((LA85_0>=RULE_ID && LA85_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt85=1;
=======
            if ( ((LA84_0>=RULE_ID && LA84_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt84=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            else if ( (LA85_0==46) ) {
                alt85=2;
=======
            else if ( (LA84_0==46) ) {
                alt84=2;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< Upstream, based on origin/ST6RI-75
                    new NoViableAltException("", 85, 0, input);
=======
                    new NoViableAltException("", 84, 0, input);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                throw nvae;
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt85) {
=======
            switch (alt84) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5140:3: this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition
=======
                    // InternalAlf.g:5221:3: this_NamedFeatureDefinition_0= ruleNamedFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureDefinitionAccess().getNamedFeatureDefinitionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NamedFeatureDefinition_0=ruleNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NamedFeatureDefinition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5152:3: this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition
=======
                    // InternalAlf.g:5233:3: this_UnnamedFeatureDefinition_1= ruleUnnamedFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureDefinitionAccess().getUnnamedFeatureDefinitionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnnamedFeatureDefinition_1=ruleUnnamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnnamedFeatureDefinition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDefinition"


    // $ANTLR start "entryRuleAbstractFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5167:1: entryRuleAbstractFeatureDefinition returns [EObject current=null] : iv_ruleAbstractFeatureDefinition= ruleAbstractFeatureDefinition EOF ;
=======
    // InternalAlf.g:5248:1: entryRuleAbstractFeatureDefinition returns [EObject current=null] : iv_ruleAbstractFeatureDefinition= ruleAbstractFeatureDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAbstractFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractFeatureDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5167:66: (iv_ruleAbstractFeatureDefinition= ruleAbstractFeatureDefinition EOF )
            // InternalAlf.g:5168:2: iv_ruleAbstractFeatureDefinition= ruleAbstractFeatureDefinition EOF
=======
            // InternalAlf.g:5248:66: (iv_ruleAbstractFeatureDefinition= ruleAbstractFeatureDefinition EOF )
            // InternalAlf.g:5249:2: iv_ruleAbstractFeatureDefinition= ruleAbstractFeatureDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractFeatureDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractFeatureDefinition=ruleAbstractFeatureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractFeatureDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractFeatureDefinition"


    // $ANTLR start "ruleAbstractFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5174:1: ruleAbstractFeatureDefinition returns [EObject current=null] : (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition ) ;
=======
    // InternalAlf.g:5255:1: ruleAbstractFeatureDefinition returns [EObject current=null] : (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAbstractFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_AbstractNamedFeatureDefinition_0 = null;

        EObject this_AbstractUnnamedFeatureDefinition_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5180:2: ( (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition ) )
            // InternalAlf.g:5181:2: (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition )
=======
            // InternalAlf.g:5261:2: ( (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition ) )
            // InternalAlf.g:5262:2: (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5181:2: (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition )
            int alt86=2;
            int LA86_0 = input.LA(1);
=======
            // InternalAlf.g:5262:2: (this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition | this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition )
            int alt85=2;
            int LA85_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( ((LA86_0>=RULE_ID && LA86_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt86=1;
=======
            if ( ((LA85_0>=RULE_ID && LA85_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt85=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            else if ( (LA86_0==46) ) {
                alt86=2;
=======
            else if ( (LA85_0==46) ) {
                alt85=2;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
<<<<<<< Upstream, based on origin/ST6RI-75
                    new NoViableAltException("", 86, 0, input);
=======
                    new NoViableAltException("", 85, 0, input);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                throw nvae;
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt86) {
=======
            switch (alt85) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5182:3: this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition
=======
                    // InternalAlf.g:5263:3: this_AbstractNamedFeatureDefinition_0= ruleAbstractNamedFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractFeatureDefinitionAccess().getAbstractNamedFeatureDefinitionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AbstractNamedFeatureDefinition_0=ruleAbstractNamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AbstractNamedFeatureDefinition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5194:3: this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition
=======
                    // InternalAlf.g:5275:3: this_AbstractUnnamedFeatureDefinition_1= ruleAbstractUnnamedFeatureDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractFeatureDefinitionAccess().getAbstractUnnamedFeatureDefinitionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AbstractUnnamedFeatureDefinition_1=ruleAbstractUnnamedFeatureDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AbstractUnnamedFeatureDefinition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractFeatureDefinition"


    // $ANTLR start "entryRuleNamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5209:1: entryRuleNamedFeatureDefinition returns [EObject current=null] : iv_ruleNamedFeatureDefinition= ruleNamedFeatureDefinition EOF ;
=======
    // InternalAlf.g:5290:1: entryRuleNamedFeatureDefinition returns [EObject current=null] : iv_ruleNamedFeatureDefinition= ruleNamedFeatureDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleNamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedFeatureDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5209:63: (iv_ruleNamedFeatureDefinition= ruleNamedFeatureDefinition EOF )
            // InternalAlf.g:5210:2: iv_ruleNamedFeatureDefinition= ruleNamedFeatureDefinition EOF
=======
            // InternalAlf.g:5290:63: (iv_ruleNamedFeatureDefinition= ruleNamedFeatureDefinition EOF )
            // InternalAlf.g:5291:2: iv_ruleNamedFeatureDefinition= ruleNamedFeatureDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedFeatureDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedFeatureDefinition=ruleNamedFeatureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedFeatureDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedFeatureDefinition"


    // $ANTLR start "ruleNamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5216:1: ruleNamedFeatureDefinition returns [EObject current=null] : (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] ) ;
=======
    // InternalAlf.g:5297:1: ruleNamedFeatureDefinition returns [EObject current=null] : (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleNamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_FeatureCompletion_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5222:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] ) )
            // InternalAlf.g:5223:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] )
=======
            // InternalAlf.g:5303:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] ) )
            // InternalAlf.g:5304:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5223:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] )
            // InternalAlf.g:5224:3: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current]
=======
            // InternalAlf.g:5304:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current] )
            // InternalAlf.g:5305:3: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_FeatureCompletion_1= ruleFeatureCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getNamedFeatureDefinitionAccess().getFeatureDeclarationParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_68);
=======
            pushFollow(FOLLOW_69);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getNamedFeatureDefinitionAccess().getFeatureCompletionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_FeatureCompletion_1=ruleFeatureCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureCompletion_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedFeatureDefinition"


    // $ANTLR start "entryRuleAbstractNamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5256:1: entryRuleAbstractNamedFeatureDefinition returns [EObject current=null] : iv_ruleAbstractNamedFeatureDefinition= ruleAbstractNamedFeatureDefinition EOF ;
=======
    // InternalAlf.g:5337:1: entryRuleAbstractNamedFeatureDefinition returns [EObject current=null] : iv_ruleAbstractNamedFeatureDefinition= ruleAbstractNamedFeatureDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAbstractNamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractNamedFeatureDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5256:71: (iv_ruleAbstractNamedFeatureDefinition= ruleAbstractNamedFeatureDefinition EOF )
            // InternalAlf.g:5257:2: iv_ruleAbstractNamedFeatureDefinition= ruleAbstractNamedFeatureDefinition EOF
=======
            // InternalAlf.g:5337:71: (iv_ruleAbstractNamedFeatureDefinition= ruleAbstractNamedFeatureDefinition EOF )
            // InternalAlf.g:5338:2: iv_ruleAbstractNamedFeatureDefinition= ruleAbstractNamedFeatureDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractNamedFeatureDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractNamedFeatureDefinition=ruleAbstractNamedFeatureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractNamedFeatureDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractNamedFeatureDefinition"


    // $ANTLR start "ruleAbstractNamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5263:1: ruleAbstractNamedFeatureDefinition returns [EObject current=null] : (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] ) ;
=======
    // InternalAlf.g:5344:1: ruleAbstractNamedFeatureDefinition returns [EObject current=null] : (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAbstractNamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_AbstractFeatureCompletion_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5269:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] ) )
            // InternalAlf.g:5270:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] )
=======
            // InternalAlf.g:5350:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] ) )
            // InternalAlf.g:5351:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5270:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] )
            // InternalAlf.g:5271:3: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current]
=======
            // InternalAlf.g:5351:2: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current] )
            // InternalAlf.g:5352:3: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] this_AbstractFeatureCompletion_1= ruleAbstractFeatureCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractNamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractNamedFeatureDefinitionAccess().getFeatureDeclarationParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_68);
=======
            pushFollow(FOLLOW_69);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractNamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractNamedFeatureDefinitionAccess().getAbstractFeatureCompletionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AbstractFeatureCompletion_1=ruleAbstractFeatureCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AbstractFeatureCompletion_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractNamedFeatureDefinition"


    // $ANTLR start "entryRuleUnnamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5303:1: entryRuleUnnamedFeatureDefinition returns [EObject current=null] : iv_ruleUnnamedFeatureDefinition= ruleUnnamedFeatureDefinition EOF ;
=======
    // InternalAlf.g:5384:1: entryRuleUnnamedFeatureDefinition returns [EObject current=null] : iv_ruleUnnamedFeatureDefinition= ruleUnnamedFeatureDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleUnnamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnnamedFeatureDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5303:65: (iv_ruleUnnamedFeatureDefinition= ruleUnnamedFeatureDefinition EOF )
            // InternalAlf.g:5304:2: iv_ruleUnnamedFeatureDefinition= ruleUnnamedFeatureDefinition EOF
=======
            // InternalAlf.g:5384:65: (iv_ruleUnnamedFeatureDefinition= ruleUnnamedFeatureDefinition EOF )
            // InternalAlf.g:5385:2: iv_ruleUnnamedFeatureDefinition= ruleUnnamedFeatureDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnnamedFeatureDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnnamedFeatureDefinition=ruleUnnamedFeatureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnnamedFeatureDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnnamedFeatureDefinition"


    // $ANTLR start "ruleUnnamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5310:1: ruleUnnamedFeatureDefinition returns [EObject current=null] : (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) ;
=======
    // InternalAlf.g:5391:1: ruleUnnamedFeatureDefinition returns [EObject current=null] : (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleUnnamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject this_TypePart_2 = null;

        EObject this_FeatureCompletion_3 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5316:2: ( (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) )
            // InternalAlf.g:5317:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
=======
            // InternalAlf.g:5397:2: ( (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) )
            // InternalAlf.g:5398:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5317:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
            // InternalAlf.g:5318:3: otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current]
=======
            // InternalAlf.g:5398:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
            // InternalAlf.g:5399:3: otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUnnamedFeatureDefinitionAccess().getRedefinesKeyword_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5322:3: ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
            // InternalAlf.g:5323:4: (lv_ownedRelationship_1_0= ruleRedefinition )
=======
            // InternalAlf.g:5403:3: ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
            // InternalAlf.g:5404:4: (lv_ownedRelationship_1_0= ruleRedefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5323:4: (lv_ownedRelationship_1_0= ruleRedefinition )
            // InternalAlf.g:5324:5: lv_ownedRelationship_1_0= ruleRedefinition
=======
            // InternalAlf.g:5404:4: (lv_ownedRelationship_1_0= ruleRedefinition )
            // InternalAlf.g:5405:5: lv_ownedRelationship_1_0= ruleRedefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUnnamedFeatureDefinitionAccess().getOwnedRelationshipRedefinitionParserRuleCall_1_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_69);
=======
            pushFollow(FOLLOW_70);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_ownedRelationship_1_0=ruleRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUnnamedFeatureDefinitionRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.sysml.Alf.Redefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getUnnamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getUnnamedFeatureDefinitionAccess().getTypePartParserRuleCall_2());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_68);
=======
            pushFollow(FOLLOW_69);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_TypePart_2=ruleTypePart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePart_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getUnnamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getUnnamedFeatureDefinitionAccess().getFeatureCompletionParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FeatureCompletion_3=ruleFeatureCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureCompletion_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnnamedFeatureDefinition"


    // $ANTLR start "entryRuleAbstractUnnamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5373:1: entryRuleAbstractUnnamedFeatureDefinition returns [EObject current=null] : iv_ruleAbstractUnnamedFeatureDefinition= ruleAbstractUnnamedFeatureDefinition EOF ;
=======
    // InternalAlf.g:5454:1: entryRuleAbstractUnnamedFeatureDefinition returns [EObject current=null] : iv_ruleAbstractUnnamedFeatureDefinition= ruleAbstractUnnamedFeatureDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAbstractUnnamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractUnnamedFeatureDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5373:73: (iv_ruleAbstractUnnamedFeatureDefinition= ruleAbstractUnnamedFeatureDefinition EOF )
            // InternalAlf.g:5374:2: iv_ruleAbstractUnnamedFeatureDefinition= ruleAbstractUnnamedFeatureDefinition EOF
=======
            // InternalAlf.g:5454:73: (iv_ruleAbstractUnnamedFeatureDefinition= ruleAbstractUnnamedFeatureDefinition EOF )
            // InternalAlf.g:5455:2: iv_ruleAbstractUnnamedFeatureDefinition= ruleAbstractUnnamedFeatureDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractUnnamedFeatureDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractUnnamedFeatureDefinition=ruleAbstractUnnamedFeatureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractUnnamedFeatureDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractUnnamedFeatureDefinition"


    // $ANTLR start "ruleAbstractUnnamedFeatureDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5380:1: ruleAbstractUnnamedFeatureDefinition returns [EObject current=null] : (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] ) ;
=======
    // InternalAlf.g:5461:1: ruleAbstractUnnamedFeatureDefinition returns [EObject current=null] : (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAbstractUnnamedFeatureDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject this_TypePart_2 = null;

        EObject this_AbstractFeatureCompletion_3 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5386:2: ( (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] ) )
            // InternalAlf.g:5387:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] )
=======
            // InternalAlf.g:5467:2: ( (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] ) )
            // InternalAlf.g:5468:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5387:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] )
            // InternalAlf.g:5388:3: otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current]
=======
            // InternalAlf.g:5468:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current] )
            // InternalAlf.g:5469:3: otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) this_TypePart_2= ruleTypePart[$current] this_AbstractFeatureCompletion_3= ruleAbstractFeatureCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAbstractUnnamedFeatureDefinitionAccess().getRedefinesKeyword_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5392:3: ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
            // InternalAlf.g:5393:4: (lv_ownedRelationship_1_0= ruleRedefinition )
=======
            // InternalAlf.g:5473:3: ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
            // InternalAlf.g:5474:4: (lv_ownedRelationship_1_0= ruleRedefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5393:4: (lv_ownedRelationship_1_0= ruleRedefinition )
            // InternalAlf.g:5394:5: lv_ownedRelationship_1_0= ruleRedefinition
=======
            // InternalAlf.g:5474:4: (lv_ownedRelationship_1_0= ruleRedefinition )
            // InternalAlf.g:5475:5: lv_ownedRelationship_1_0= ruleRedefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAbstractUnnamedFeatureDefinitionAccess().getOwnedRelationshipRedefinitionParserRuleCall_1_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_69);
=======
            pushFollow(FOLLOW_70);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_ownedRelationship_1_0=ruleRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAbstractUnnamedFeatureDefinitionRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.sysml.Alf.Redefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractUnnamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractUnnamedFeatureDefinitionAccess().getTypePartParserRuleCall_2());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_68);
=======
            pushFollow(FOLLOW_69);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_TypePart_2=ruleTypePart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePart_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractUnnamedFeatureDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractUnnamedFeatureDefinitionAccess().getAbstractFeatureCompletionParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_AbstractFeatureCompletion_3=ruleAbstractFeatureCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AbstractFeatureCompletion_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractUnnamedFeatureDefinition"


    // $ANTLR start "ruleFeatureBodyDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5444:1: ruleFeatureBodyDefinition[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) ;
=======
    // InternalAlf.g:5525:1: ruleFeatureBodyDefinition[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureBodyDefinition(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_FeatureDeclaration_2 = null;

        EObject this_FeatureCompletion_3 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5450:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) )
            // InternalAlf.g:5451:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
=======
            // InternalAlf.g:5531:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] ) )
            // InternalAlf.g:5532:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5451:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
            // InternalAlf.g:5452:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current]
=======
            // InternalAlf.g:5532:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current] )
            // InternalAlf.g:5533:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'feature' this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] this_FeatureCompletion_3= ruleFeatureCompletion[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5452:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);
=======
            // InternalAlf.g:5533:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA87_0==33) ) {
                alt87=1;
=======
            if ( (LA86_0==33) ) {
                alt86=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt87) {
=======
            switch (alt86) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5453:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:5534:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5453:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:5454:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:5534:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:5535:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFeatureBodyDefinitionAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureBodyDefinitionRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,32,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFeatureBodyDefinitionAccess().getFeatureKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureBodyDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureBodyDefinitionAccess().getFeatureDeclarationParserRuleCall_2());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_68);
=======
            pushFollow(FOLLOW_69);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_FeatureDeclaration_2=ruleFeatureDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureBodyDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureBodyDefinitionAccess().getFeatureCompletionParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FeatureCompletion_3=ruleFeatureCompletion(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureCompletion_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureBodyDefinition"


    // $ANTLR start "ruleFeatureDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5503:1: ruleFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] ) ;
=======
    // InternalAlf.g:5584:1: ruleFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject this_TypePart_1 = null;

        EObject this_SubsettingPart_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5509:2: ( ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] ) )
            // InternalAlf.g:5510:2: ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] )
=======
            // InternalAlf.g:5590:2: ( ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] ) )
            // InternalAlf.g:5591:2: ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5510:2: ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] )
            // InternalAlf.g:5511:3: ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current]
=======
            // InternalAlf.g:5591:2: ( ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current] )
            // InternalAlf.g:5592:3: ( (lv_name_0_0= ruleName ) ) this_TypePart_1= ruleTypePart[$current] this_SubsettingPart_2= ruleSubsettingPart[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5511:3: ( (lv_name_0_0= ruleName ) )
            // InternalAlf.g:5512:4: (lv_name_0_0= ruleName )
=======
            // InternalAlf.g:5592:3: ( (lv_name_0_0= ruleName ) )
            // InternalAlf.g:5593:4: (lv_name_0_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5512:4: (lv_name_0_0= ruleName )
            // InternalAlf.g:5513:5: lv_name_0_0= ruleName
=======
            // InternalAlf.g:5593:4: (lv_name_0_0= ruleName )
            // InternalAlf.g:5594:5: lv_name_0_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getNameNameParserRuleCall_0_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_70);
=======
            pushFollow(FOLLOW_71);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_name_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_71);
=======
            pushFollow(FOLLOW_72);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_TypePart_1=ruleTypePart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePart_1;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureDeclarationRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_SubsettingPart_2=ruleSubsettingPart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SubsettingPart_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDeclaration"


    // $ANTLR start "ruleFeatureCompletion"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5563:1: ruleFeatureCompletion[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] ) ;
=======
    // InternalAlf.g:5644:1: ruleFeatureCompletion[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureCompletion(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject this_CategoryBody_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5569:2: ( ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] ) )
            // InternalAlf.g:5570:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] )
=======
            // InternalAlf.g:5650:2: ( ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] ) )
            // InternalAlf.g:5651:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5570:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] )
            // InternalAlf.g:5571:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current]
=======
            // InternalAlf.g:5651:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current] )
            // InternalAlf.g:5652:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_CategoryBody_2= ruleCategoryBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5571:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);
=======
            // InternalAlf.g:5652:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA88_0==47) ) {
                alt88=1;
=======
            if ( (LA87_0==47) ) {
                alt87=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt88) {
=======
            switch (alt87) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5572:4: otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
=======
                    // InternalAlf.g:5653:4: otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_0=(Token)match(input,47,FOLLOW_72); if (state.failed) return current;
=======
                    otherlv_0=(Token)match(input,47,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureCompletionAccess().getEqualsSignKeyword_0_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5576:4: ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
                    // InternalAlf.g:5577:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
=======
                    // InternalAlf.g:5657:4: ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
                    // InternalAlf.g:5658:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5577:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
                    // InternalAlf.g:5578:6: lv_ownedRelationship_1_0= ruleFeatureValue
=======
                    // InternalAlf.g:5658:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
                    // InternalAlf.g:5659:6: lv_ownedRelationship_1_0= ruleFeatureValue
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureCompletionAccess().getOwnedRelationshipFeatureValueParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_ownedRelationship_1_0=ruleFeatureValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureCompletionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.sysml.Alf.FeatureValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureCompletionRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureCompletionAccess().getCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_CategoryBody_2=ruleCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryBody_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCompletion"


    // $ANTLR start "ruleAbstractFeatureCompletion"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5615:1: ruleAbstractFeatureCompletion[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] ) ;
=======
    // InternalAlf.g:5696:1: ruleAbstractFeatureCompletion[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAbstractFeatureCompletion(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject this_AbstractCategoryBody_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5621:2: ( ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] ) )
            // InternalAlf.g:5622:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] )
=======
            // InternalAlf.g:5702:2: ( ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] ) )
            // InternalAlf.g:5703:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5622:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] )
            // InternalAlf.g:5623:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current]
=======
            // InternalAlf.g:5703:2: ( (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current] )
            // InternalAlf.g:5704:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )? this_AbstractCategoryBody_2= ruleAbstractCategoryBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5623:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);
=======
            // InternalAlf.g:5704:3: (otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA89_0==47) ) {
                alt89=1;
=======
            if ( (LA88_0==47) ) {
                alt88=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt89) {
=======
            switch (alt88) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5624:4: otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
=======
                    // InternalAlf.g:5705:4: otherlv_0= '=' ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_0=(Token)match(input,47,FOLLOW_72); if (state.failed) return current;
=======
                    otherlv_0=(Token)match(input,47,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAbstractFeatureCompletionAccess().getEqualsSignKeyword_0_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5628:4: ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
                    // InternalAlf.g:5629:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
=======
                    // InternalAlf.g:5709:4: ( (lv_ownedRelationship_1_0= ruleFeatureValue ) )
                    // InternalAlf.g:5710:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5629:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
                    // InternalAlf.g:5630:6: lv_ownedRelationship_1_0= ruleFeatureValue
=======
                    // InternalAlf.g:5710:5: (lv_ownedRelationship_1_0= ruleFeatureValue )
                    // InternalAlf.g:5711:6: lv_ownedRelationship_1_0= ruleFeatureValue
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAbstractFeatureCompletionAccess().getOwnedRelationshipFeatureValueParserRuleCall_0_1_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_68);
=======
                    pushFollow(FOLLOW_69);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_1_0=ruleFeatureValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAbstractFeatureCompletionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.sysml.Alf.FeatureValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractFeatureCompletionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractFeatureCompletionAccess().getAbstractCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AbstractCategoryBody_2=ruleAbstractCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AbstractCategoryBody_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractFeatureCompletion"


    // $ANTLR start "entryRuleFeatureValue"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5666:1: entryRuleFeatureValue returns [EObject current=null] : iv_ruleFeatureValue= ruleFeatureValue EOF ;
=======
    // InternalAlf.g:5747:1: entryRuleFeatureValue returns [EObject current=null] : iv_ruleFeatureValue= ruleFeatureValue EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleFeatureValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureValue = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5666:53: (iv_ruleFeatureValue= ruleFeatureValue EOF )
            // InternalAlf.g:5667:2: iv_ruleFeatureValue= ruleFeatureValue EOF
=======
            // InternalAlf.g:5747:53: (iv_ruleFeatureValue= ruleFeatureValue EOF )
            // InternalAlf.g:5748:2: iv_ruleFeatureValue= ruleFeatureValue EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureValue=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValue"


    // $ANTLR start "ruleFeatureValue"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5673:1: ruleFeatureValue returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) ;
=======
    // InternalAlf.g:5754:1: ruleFeatureValue returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureValue() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5679:2: ( ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) )
            // InternalAlf.g:5680:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
=======
            // InternalAlf.g:5760:2: ( ( (lv_ownedRelatedElement_0_0= ruleExpression ) ) )
            // InternalAlf.g:5761:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5680:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
            // InternalAlf.g:5681:3: (lv_ownedRelatedElement_0_0= ruleExpression )
=======
            // InternalAlf.g:5761:2: ( (lv_ownedRelatedElement_0_0= ruleExpression ) )
            // InternalAlf.g:5762:3: (lv_ownedRelatedElement_0_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5681:3: (lv_ownedRelatedElement_0_0= ruleExpression )
            // InternalAlf.g:5682:4: lv_ownedRelatedElement_0_0= ruleExpression
=======
            // InternalAlf.g:5762:3: (lv_ownedRelatedElement_0_0= ruleExpression )
            // InternalAlf.g:5763:4: lv_ownedRelatedElement_0_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFeatureValueRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.sysml.Alf.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValue"


    // $ANTLR start "ruleTypePart"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5703:1: ruleTypePart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) ) ;
=======
    // InternalAlf.g:5784:1: ruleTypePart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleTypePart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_isComposite_1_0=null;
        Token otherlv_3=null;
        Token lv_isOrdered_6_0=null;
        Token lv_isNonunique_7_0=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getTypePartAccess().getUnorderedGroup_2()
        	);

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5712:2: ( ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) ) )
            // InternalAlf.g:5713:2: ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) )
=======
            // InternalAlf.g:5793:2: ( ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) ) )
            // InternalAlf.g:5794:2: ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5713:2: ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) )
            // InternalAlf.g:5714:3: (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) )
=======
            // InternalAlf.g:5794:2: ( (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) ) )
            // InternalAlf.g:5795:3: (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )? ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5714:3: (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);
=======
            // InternalAlf.g:5795:3: (otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA92_0==48) ) {
                alt92=1;
=======
            if ( (LA91_0==48) ) {
                alt91=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt92) {
=======
            switch (alt91) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5715:4: otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' )
=======
                    // InternalAlf.g:5796:4: otherlv_0= ':' ( (lv_isComposite_1_0= 'compose' ) )? ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_0=(Token)match(input,48,FOLLOW_73); if (state.failed) return current;
=======
                    otherlv_0=(Token)match(input,48,FOLLOW_74); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypePartAccess().getColonKeyword_0_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5719:4: ( (lv_isComposite_1_0= 'compose' ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);
=======
                    // InternalAlf.g:5800:4: ( (lv_isComposite_1_0= 'compose' ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( (LA90_0==49) ) {
                        alt90=1;
=======
                    if ( (LA89_0==49) ) {
                        alt89=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    switch (alt90) {
=======
                    switch (alt89) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5720:5: (lv_isComposite_1_0= 'compose' )
=======
                            // InternalAlf.g:5801:5: (lv_isComposite_1_0= 'compose' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5720:5: (lv_isComposite_1_0= 'compose' )
                            // InternalAlf.g:5721:6: lv_isComposite_1_0= 'compose'
=======
                            // InternalAlf.g:5801:5: (lv_isComposite_1_0= 'compose' )
                            // InternalAlf.g:5802:6: lv_isComposite_1_0= 'compose'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            lv_isComposite_1_0=(Token)match(input,49,FOLLOW_74); if (state.failed) return current;
=======
                            lv_isComposite_1_0=(Token)match(input,49,FOLLOW_75); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_isComposite_1_0, grammarAccess.getTypePartAccess().getIsCompositeComposeKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTypePartRule());
                              						}
                              						setWithLastConsumed(current, "isComposite", true, "compose");
                              					
                            }

                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5733:4: ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' )
                    int alt91=2;
                    int LA91_0 = input.LA(1);
=======
                    // InternalAlf.g:5814:4: ( ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) ) | otherlv_3= 'any' )
                    int alt90=2;
                    int LA90_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                    if ( ((LA91_0>=RULE_ID && LA91_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt91=1;
=======
                    if ( ((LA90_0>=RULE_ID && LA90_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt90=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    else if ( (LA91_0==50) ) {
                        alt91=2;
=======
                    else if ( (LA90_0==50) ) {
                        alt90=2;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
<<<<<<< Upstream, based on origin/ST6RI-75
                            new NoViableAltException("", 91, 0, input);
=======
                            new NoViableAltException("", 90, 0, input);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                        throw nvae;
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    switch (alt91) {
=======
                    switch (alt90) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5734:5: ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) )
=======
                            // InternalAlf.g:5815:5: ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5734:5: ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) )
                            // InternalAlf.g:5735:6: (lv_ownedRelationship_2_0= ruleFeatureTyping )
=======
                            // InternalAlf.g:5815:5: ( (lv_ownedRelationship_2_0= ruleFeatureTyping ) )
                            // InternalAlf.g:5816:6: (lv_ownedRelationship_2_0= ruleFeatureTyping )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5735:6: (lv_ownedRelationship_2_0= ruleFeatureTyping )
                            // InternalAlf.g:5736:7: lv_ownedRelationship_2_0= ruleFeatureTyping
=======
                            // InternalAlf.g:5816:6: (lv_ownedRelationship_2_0= ruleFeatureTyping )
                            // InternalAlf.g:5817:7: lv_ownedRelationship_2_0= ruleFeatureTyping
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTypePartAccess().getOwnedRelationshipFeatureTypingParserRuleCall_0_2_0_0());
                              						
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            pushFollow(FOLLOW_75);
=======
                            pushFollow(FOLLOW_76);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            lv_ownedRelationship_2_0=ruleFeatureTyping();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTypePartRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_2_0,
                              								"org.omg.sysml.Alf.FeatureTyping");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:5754:5: otherlv_3= 'any'
=======
                            // InternalAlf.g:5835:5: otherlv_3= 'any'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            otherlv_3=(Token)match(input,50,FOLLOW_75); if (state.failed) return current;
=======
                            otherlv_3=(Token)match(input,50,FOLLOW_76); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getTypePartAccess().getAnyKeyword_0_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5760:3: ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);
=======
            // InternalAlf.g:5841:3: ( (lv_ownedRelationship_4_0= ruleMultiplicity ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA93_0==53) ) {
                alt93=1;
=======
            if ( (LA92_0==53) ) {
                alt92=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt93) {
=======
            switch (alt92) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5761:4: (lv_ownedRelationship_4_0= ruleMultiplicity )
=======
                    // InternalAlf.g:5842:4: (lv_ownedRelationship_4_0= ruleMultiplicity )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5761:4: (lv_ownedRelationship_4_0= ruleMultiplicity )
                    // InternalAlf.g:5762:5: lv_ownedRelationship_4_0= ruleMultiplicity
=======
                    // InternalAlf.g:5842:4: (lv_ownedRelationship_4_0= ruleMultiplicity )
                    // InternalAlf.g:5843:5: lv_ownedRelationship_4_0= ruleMultiplicity
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypePartAccess().getOwnedRelationshipMultiplicityParserRuleCall_1_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_76);
=======
                    pushFollow(FOLLOW_77);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_4_0=ruleMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypePartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_4_0,
                      						"org.omg.sysml.Alf.Multiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5779:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) )
            // InternalAlf.g:5780:4: ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) )
=======
            // InternalAlf.g:5860:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) ) )
            // InternalAlf.g:5861:4: ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5780:4: ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) )
            // InternalAlf.g:5781:5: ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* )
=======
            // InternalAlf.g:5861:4: ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* ) )
            // InternalAlf.g:5862:5: ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            getUnorderedGroupHelper().enter(grammarAccess.getTypePartAccess().getUnorderedGroup_2());
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5784:5: ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* )
            // InternalAlf.g:5785:6: ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )*
=======
            // InternalAlf.g:5865:5: ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )* )
            // InternalAlf.g:5866:6: ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5785:6: ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )*
            loop94:
=======
            // InternalAlf.g:5866:6: ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )*
            loop93:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            do {
<<<<<<< Upstream, based on origin/ST6RI-75
                int alt94=3;
                int LA94_0 = input.LA(1);
=======
                int alt93=3;
                int LA93_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( LA94_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0) ) {
                    alt94=1;
=======
                if ( LA93_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0) ) {
                    alt93=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                }
<<<<<<< Upstream, based on origin/ST6RI-75
                else if ( LA94_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1) ) {
                    alt94=2;
=======
                else if ( LA93_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1) ) {
                    alt93=2;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                }


<<<<<<< Upstream, based on origin/ST6RI-75
                switch (alt94) {
=======
                switch (alt93) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5786:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
=======
            	    // InternalAlf.g:5867:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5786:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
            	    // InternalAlf.g:5787:5: {...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
=======
            	    // InternalAlf.g:5867:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
            	    // InternalAlf.g:5868:5: {...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTypePart", "getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0)");
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5787:105: ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
            	    // InternalAlf.g:5788:6: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
=======
            	    // InternalAlf.g:5868:105: ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
            	    // InternalAlf.g:5869:6: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0);
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5791:9: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
            	    // InternalAlf.g:5791:10: {...}? => ( (lv_isOrdered_6_0= 'ordered' ) )
=======
            	    // InternalAlf.g:5872:9: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
            	    // InternalAlf.g:5872:10: {...}? => ( (lv_isOrdered_6_0= 'ordered' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTypePart", "true");
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5791:19: ( (lv_isOrdered_6_0= 'ordered' ) )
            	    // InternalAlf.g:5791:20: (lv_isOrdered_6_0= 'ordered' )
=======
            	    // InternalAlf.g:5872:19: ( (lv_isOrdered_6_0= 'ordered' ) )
            	    // InternalAlf.g:5872:20: (lv_isOrdered_6_0= 'ordered' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5791:20: (lv_isOrdered_6_0= 'ordered' )
            	    // InternalAlf.g:5792:10: lv_isOrdered_6_0= 'ordered'
=======
            	    // InternalAlf.g:5872:20: (lv_isOrdered_6_0= 'ordered' )
            	    // InternalAlf.g:5873:10: lv_isOrdered_6_0= 'ordered'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    lv_isOrdered_6_0=(Token)match(input,51,FOLLOW_76); if (state.failed) return current;
=======
            	    lv_isOrdered_6_0=(Token)match(input,51,FOLLOW_77); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_isOrdered_6_0, grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_2_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getTypePartRule());
            	      										}
            	      										setWithLastConsumed(current, "isOrdered", true, "ordered");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTypePartAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5809:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
=======
            	    // InternalAlf.g:5890:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5809:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
            	    // InternalAlf.g:5810:5: {...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
=======
            	    // InternalAlf.g:5890:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
            	    // InternalAlf.g:5891:5: {...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTypePart", "getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1)");
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5810:105: ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
            	    // InternalAlf.g:5811:6: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
=======
            	    // InternalAlf.g:5891:105: ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
            	    // InternalAlf.g:5892:6: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1);
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5814:9: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
            	    // InternalAlf.g:5814:10: {...}? => ( (lv_isNonunique_7_0= 'nonunique' ) )
=======
            	    // InternalAlf.g:5895:9: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
            	    // InternalAlf.g:5895:10: {...}? => ( (lv_isNonunique_7_0= 'nonunique' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleTypePart", "true");
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5814:19: ( (lv_isNonunique_7_0= 'nonunique' ) )
            	    // InternalAlf.g:5814:20: (lv_isNonunique_7_0= 'nonunique' )
=======
            	    // InternalAlf.g:5895:19: ( (lv_isNonunique_7_0= 'nonunique' ) )
            	    // InternalAlf.g:5895:20: (lv_isNonunique_7_0= 'nonunique' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5814:20: (lv_isNonunique_7_0= 'nonunique' )
            	    // InternalAlf.g:5815:10: lv_isNonunique_7_0= 'nonunique'
=======
            	    // InternalAlf.g:5895:20: (lv_isNonunique_7_0= 'nonunique' )
            	    // InternalAlf.g:5896:10: lv_isNonunique_7_0= 'nonunique'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    lv_isNonunique_7_0=(Token)match(input,52,FOLLOW_76); if (state.failed) return current;
=======
            	    lv_isNonunique_7_0=(Token)match(input,52,FOLLOW_77); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_isNonunique_7_0, grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_2_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getTypePartRule());
            	      										}
            	      										setWithLastConsumed(current, "isNonunique", true, "nonunique");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTypePartAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    break loop94;
=======
            	    break loop93;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getTypePartAccess().getUnorderedGroup_2());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleTypePart"


    // $ANTLR start "entryRuleFeatureTyping"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5846:1: entryRuleFeatureTyping returns [EObject current=null] : iv_ruleFeatureTyping= ruleFeatureTyping EOF ;
=======
    // InternalAlf.g:5927:1: entryRuleFeatureTyping returns [EObject current=null] : iv_ruleFeatureTyping= ruleFeatureTyping EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureTyping = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5846:54: (iv_ruleFeatureTyping= ruleFeatureTyping EOF )
            // InternalAlf.g:5847:2: iv_ruleFeatureTyping= ruleFeatureTyping EOF
=======
            // InternalAlf.g:5927:54: (iv_ruleFeatureTyping= ruleFeatureTyping EOF )
            // InternalAlf.g:5928:2: iv_ruleFeatureTyping= ruleFeatureTyping EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureTyping=ruleFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureTyping"


    // $ANTLR start "ruleFeatureTyping"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5853:1: ruleFeatureTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
=======
    // InternalAlf.g:5934:1: ruleFeatureTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5859:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:5860:2: ( ( ruleQualifiedName ) )
=======
            // InternalAlf.g:5940:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:5941:2: ( ( ruleQualifiedName ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5860:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:5861:3: ( ruleQualifiedName )
=======
            // InternalAlf.g:5941:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:5942:3: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5861:3: ( ruleQualifiedName )
            // InternalAlf.g:5862:4: ruleQualifiedName
=======
            // InternalAlf.g:5942:3: ( ruleQualifiedName )
            // InternalAlf.g:5943:4: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureTypingAccess().getTypeCategoryCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureTyping"


    // $ANTLR start "entryRuleMultiplicity"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5882:1: entryRuleMultiplicity returns [EObject current=null] : iv_ruleMultiplicity= ruleMultiplicity EOF ;
=======
    // InternalAlf.g:5963:1: entryRuleMultiplicity returns [EObject current=null] : iv_ruleMultiplicity= ruleMultiplicity EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicity = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5882:53: (iv_ruleMultiplicity= ruleMultiplicity EOF )
            // InternalAlf.g:5883:2: iv_ruleMultiplicity= ruleMultiplicity EOF
=======
            // InternalAlf.g:5963:53: (iv_ruleMultiplicity= ruleMultiplicity EOF )
            // InternalAlf.g:5964:2: iv_ruleMultiplicity= ruleMultiplicity EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicity=ruleMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicity"


    // $ANTLR start "ruleMultiplicity"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5889:1: ruleMultiplicity returns [EObject current=null] : (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' ) ;
=======
    // InternalAlf.g:5970:1: ruleMultiplicity returns [EObject current=null] : (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleMultiplicity() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedRelatedElement_1_0 = null;

        EObject lv_ownedRelatedElement_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5895:2: ( (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' ) )
            // InternalAlf.g:5896:2: (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' )
=======
            // InternalAlf.g:5976:2: ( (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' ) )
            // InternalAlf.g:5977:2: (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5896:2: (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' )
            // InternalAlf.g:5897:3: otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']'
=======
            // InternalAlf.g:5977:2: (otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']' )
            // InternalAlf.g:5978:3: otherlv_0= '[' ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )? ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) ) otherlv_4= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,53,FOLLOW_77); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,53,FOLLOW_78); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5901:3: ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )?
            int alt95=2;
            int LA95_0 = input.LA(1);
=======
            // InternalAlf.g:5982:3: ( ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..' )?
            int alt94=2;
            int LA94_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            if ( (LA95_0==RULE_NATURAL_VALUE) ) {
                int LA95_1 = input.LA(2);
=======
            if ( (LA94_0==RULE_NATURAL_VALUE) ) {
                int LA94_1 = input.LA(2);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (LA95_1==54) ) {
                    alt95=1;
=======
                if ( (LA94_1==54) ) {
                    alt94=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                }
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            switch (alt95) {
=======
            switch (alt94) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5902:4: ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..'
=======
                    // InternalAlf.g:5983:4: ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) ) otherlv_2= '..'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5902:4: ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) )
                    // InternalAlf.g:5903:5: (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression )
=======
                    // InternalAlf.g:5983:4: ( (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression ) )
                    // InternalAlf.g:5984:5: (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:5903:5: (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression )
                    // InternalAlf.g:5904:6: lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression
=======
                    // InternalAlf.g:5984:5: (lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression )
                    // InternalAlf.g:5985:6: lv_ownedRelatedElement_1_0= ruleNaturalLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicityAccess().getOwnedRelatedElementNaturalLiteralExpressionParserRuleCall_1_0_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_78);
=======
                    pushFollow(FOLLOW_79);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelatedElement_1_0=ruleNaturalLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicityRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_1_0,
                      							"org.omg.sysml.Alf.NaturalLiteralExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_2=(Token)match(input,54,FOLLOW_77); if (state.failed) return current;
=======
                    otherlv_2=(Token)match(input,54,FOLLOW_78); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5926:3: ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) )
            // InternalAlf.g:5927:4: (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression )
=======
            // InternalAlf.g:6007:3: ( (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression ) )
            // InternalAlf.g:6008:4: (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5927:4: (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression )
            // InternalAlf.g:5928:5: lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression
=======
            // InternalAlf.g:6008:4: (lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression )
            // InternalAlf.g:6009:5: lv_ownedRelatedElement_3_0= ruleUnlimitedNaturalLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicityAccess().getOwnedRelatedElementUnlimitedNaturalLiteralExpressionParserRuleCall_2_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_79);
=======
            pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_ownedRelatedElement_3_0=ruleUnlimitedNaturalLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicityRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_3_0,
              						"org.omg.sysml.Alf.UnlimitedNaturalLiteralExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicity"


    // $ANTLR start "ruleSubsettingPart"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:5954:1: ruleSubsettingPart[EObject in_current] returns [EObject current=in_current] : ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )* ;
=======
    // InternalAlf.g:6035:1: ruleSubsettingPart[EObject in_current] returns [EObject current=in_current] : ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )* ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleSubsettingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject this_Subsets_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject this_Redefines_3 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5960:2: ( ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )* )
            // InternalAlf.g:5961:2: ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )*
=======
            // InternalAlf.g:6041:2: ( ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )* )
            // InternalAlf.g:6042:2: ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:5961:2: ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )*
            loop98:
=======
            // InternalAlf.g:6042:2: ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* ) | (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* ) )*
            loop97:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            do {
<<<<<<< Upstream, based on origin/ST6RI-75
                int alt98=3;
                int LA98_0 = input.LA(1);
=======
                int alt97=3;
                int LA97_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (LA98_0==56) ) {
                    alt98=1;
=======
                if ( (LA97_0==56) ) {
                    alt97=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                }
<<<<<<< Upstream, based on origin/ST6RI-75
                else if ( (LA98_0==46) ) {
                    alt98=2;
=======
                else if ( (LA97_0==46) ) {
                    alt97=2;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                }


<<<<<<< Upstream, based on origin/ST6RI-75
                switch (alt98) {
=======
                switch (alt97) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5962:3: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* )
=======
            	    // InternalAlf.g:6043:3: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5962:3: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* )
            	    // InternalAlf.g:5963:4: this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )*
=======
            	    // InternalAlf.g:6043:3: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )* )
            	    // InternalAlf.g:6044:4: this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getSubsettingPartRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getSubsettingPartAccess().getSubsetsParserRuleCall_0_0());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_80);
=======
            	    pushFollow(FOLLOW_81);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    this_Subsets_0=ruleSubsets(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_Subsets_0;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:5977:4: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )*
            	    loop96:
=======
            	    // InternalAlf.g:6058:4: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) ) )*
            	    loop95:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    do {
<<<<<<< Upstream, based on origin/ST6RI-75
            	        int alt96=2;
            	        int LA96_0 = input.LA(1);
=======
            	        int alt95=2;
            	        int LA95_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            	        if ( (LA96_0==40) ) {
            	            alt96=1;
=======
            	        if ( (LA95_0==39) ) {
            	            alt95=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	        }


<<<<<<< Upstream, based on origin/ST6RI-75
            	        switch (alt96) {
=======
            	        switch (alt95) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:5978:5: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) )
=======
            	    	    // InternalAlf.g:6059:5: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleSubset ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    otherlv_1=(Token)match(input,40,FOLLOW_81); if (state.failed) return current;
=======
            	    	    otherlv_1=(Token)match(input,39,FOLLOW_82); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    if ( state.backtracking==0 ) {

            	    	      					newLeafNode(otherlv_1, grammarAccess.getSubsettingPartAccess().getCommaKeyword_0_1_0());
            	    	      				
            	    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:5982:5: ( (lv_ownedRelationship_2_0= ruleSubset ) )
            	    	    // InternalAlf.g:5983:6: (lv_ownedRelationship_2_0= ruleSubset )
=======
            	    	    // InternalAlf.g:6063:5: ( (lv_ownedRelationship_2_0= ruleSubset ) )
            	    	    // InternalAlf.g:6064:6: (lv_ownedRelationship_2_0= ruleSubset )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:5983:6: (lv_ownedRelationship_2_0= ruleSubset )
            	    	    // InternalAlf.g:5984:7: lv_ownedRelationship_2_0= ruleSubset
=======
            	    	    // InternalAlf.g:6064:6: (lv_ownedRelationship_2_0= ruleSubset )
            	    	    // InternalAlf.g:6065:7: lv_ownedRelationship_2_0= ruleSubset
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      							newCompositeNode(grammarAccess.getSubsettingPartAccess().getOwnedRelationshipSubsetParserRuleCall_0_1_1_0());
            	    	      						
            	    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    pushFollow(FOLLOW_80);
=======
            	    	    pushFollow(FOLLOW_81);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    lv_ownedRelationship_2_0=ruleSubset();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      							if (current==null) {
            	    	      								current = createModelElementForParent(grammarAccess.getSubsettingPartRule());
            	    	      							}
            	    	      							add(
            	    	      								current,
            	    	      								"ownedRelationship",
            	    	      								lv_ownedRelationship_2_0,
            	    	      								"org.omg.sysml.Alf.Subset");
            	    	      							afterParserOrEnumRuleCall();
            	    	      						
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    break loop96;
=======
            	    	    break loop95;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:6004:3: (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* )
=======
            	    // InternalAlf.g:6085:3: (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:6004:3: (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* )
            	    // InternalAlf.g:6005:4: this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )*
=======
            	    // InternalAlf.g:6085:3: (this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )* )
            	    // InternalAlf.g:6086:4: this_Redefines_3= ruleRedefines[$current] (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getSubsettingPartRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getSubsettingPartAccess().getRedefinesParserRuleCall_1_0());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_80);
=======
            	    pushFollow(FOLLOW_81);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    this_Redefines_3=ruleRedefines(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_Redefines_3;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:6019:4: (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )*
            	    loop97:
=======
            	    // InternalAlf.g:6100:4: (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) ) )*
            	    loop96:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    do {
<<<<<<< Upstream, based on origin/ST6RI-75
            	        int alt97=2;
            	        int LA97_0 = input.LA(1);
=======
            	        int alt96=2;
            	        int LA96_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
            	        if ( (LA97_0==40) ) {
            	            alt97=1;
=======
            	        if ( (LA96_0==39) ) {
            	            alt96=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	        }


<<<<<<< Upstream, based on origin/ST6RI-75
            	        switch (alt97) {
=======
            	        switch (alt96) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:6020:5: otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) )
=======
            	    	    // InternalAlf.g:6101:5: otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleRedefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    otherlv_4=(Token)match(input,40,FOLLOW_15); if (state.failed) return current;
=======
            	    	    otherlv_4=(Token)match(input,39,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    if ( state.backtracking==0 ) {

            	    	      					newLeafNode(otherlv_4, grammarAccess.getSubsettingPartAccess().getCommaKeyword_1_1_0());
            	    	      				
            	    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:6024:5: ( (lv_ownedRelationship_5_0= ruleRedefinition ) )
            	    	    // InternalAlf.g:6025:6: (lv_ownedRelationship_5_0= ruleRedefinition )
=======
            	    	    // InternalAlf.g:6105:5: ( (lv_ownedRelationship_5_0= ruleRedefinition ) )
            	    	    // InternalAlf.g:6106:6: (lv_ownedRelationship_5_0= ruleRedefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:6025:6: (lv_ownedRelationship_5_0= ruleRedefinition )
            	    	    // InternalAlf.g:6026:7: lv_ownedRelationship_5_0= ruleRedefinition
=======
            	    	    // InternalAlf.g:6106:6: (lv_ownedRelationship_5_0= ruleRedefinition )
            	    	    // InternalAlf.g:6107:7: lv_ownedRelationship_5_0= ruleRedefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      							newCompositeNode(grammarAccess.getSubsettingPartAccess().getOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0());
            	    	      						
            	    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    pushFollow(FOLLOW_80);
=======
            	    	    pushFollow(FOLLOW_81);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    lv_ownedRelationship_5_0=ruleRedefinition();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      							if (current==null) {
            	    	      								current = createModelElementForParent(grammarAccess.getSubsettingPartRule());
            	    	      							}
            	    	      							add(
            	    	      								current,
            	    	      								"ownedRelationship",
            	    	      								lv_ownedRelationship_5_0,
            	    	      								"org.omg.sysml.Alf.Redefinition");
            	    	      							afterParserOrEnumRuleCall();
            	    	      						
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    break loop97;
=======
            	    	    break loop96;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    break loop98;
=======
            	    break loop97;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsettingPart"


    // $ANTLR start "ruleSubsets"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6050:1: ruleSubsets[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) ) ;
=======
    // InternalAlf.g:6131:1: ruleSubsets[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleSubsets(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6056:2: ( (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) ) )
            // InternalAlf.g:6057:2: (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) )
=======
            // InternalAlf.g:6137:2: ( (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) ) )
            // InternalAlf.g:6138:2: (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6057:2: (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) )
            // InternalAlf.g:6058:3: otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) )
=======
            // InternalAlf.g:6138:2: (otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) ) )
            // InternalAlf.g:6139:3: otherlv_0= 'subsets' ( (lv_ownedRelationship_1_0= ruleSubset ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,56,FOLLOW_81); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,56,FOLLOW_82); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6062:3: ( (lv_ownedRelationship_1_0= ruleSubset ) )
            // InternalAlf.g:6063:4: (lv_ownedRelationship_1_0= ruleSubset )
=======
            // InternalAlf.g:6143:3: ( (lv_ownedRelationship_1_0= ruleSubset ) )
            // InternalAlf.g:6144:4: (lv_ownedRelationship_1_0= ruleSubset )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6063:4: (lv_ownedRelationship_1_0= ruleSubset )
            // InternalAlf.g:6064:5: lv_ownedRelationship_1_0= ruleSubset
=======
            // InternalAlf.g:6144:4: (lv_ownedRelationship_1_0= ruleSubset )
            // InternalAlf.g:6145:5: lv_ownedRelationship_1_0= ruleSubset
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubsetsAccess().getOwnedRelationshipSubsetParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleSubset();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSubsetsRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.sysml.Alf.Subset");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsets"


    // $ANTLR start "entryRuleSubset"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6085:1: entryRuleSubset returns [EObject current=null] : iv_ruleSubset= ruleSubset EOF ;
=======
    // InternalAlf.g:6166:1: entryRuleSubset returns [EObject current=null] : iv_ruleSubset= ruleSubset EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleSubset() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubset = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6085:47: (iv_ruleSubset= ruleSubset EOF )
            // InternalAlf.g:6086:2: iv_ruleSubset= ruleSubset EOF
=======
            // InternalAlf.g:6166:47: (iv_ruleSubset= ruleSubset EOF )
            // InternalAlf.g:6167:2: iv_ruleSubset= ruleSubset EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubsetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubset=ruleSubset();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubset; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubset"


    // $ANTLR start "ruleSubset"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6092:1: ruleSubset returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
=======
    // InternalAlf.g:6173:1: ruleSubset returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleSubset() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6098:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:6099:2: ( ( ruleQualifiedName ) )
=======
            // InternalAlf.g:6179:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:6180:2: ( ( ruleQualifiedName ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6099:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:6100:3: ( ruleQualifiedName )
=======
            // InternalAlf.g:6180:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:6181:3: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6100:3: ( ruleQualifiedName )
            // InternalAlf.g:6101:4: ruleQualifiedName
=======
            // InternalAlf.g:6181:3: ( ruleQualifiedName )
            // InternalAlf.g:6182:4: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getSubsetRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSubsetAccess().getSubsettedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubset"


    // $ANTLR start "ruleRedefines"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6122:1: ruleRedefines[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) ) ;
=======
    // InternalAlf.g:6203:1: ruleRedefines[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleRedefines(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6128:2: ( (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) ) )
            // InternalAlf.g:6129:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) )
=======
            // InternalAlf.g:6209:2: ( (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) ) )
            // InternalAlf.g:6210:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6129:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) )
            // InternalAlf.g:6130:3: otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
=======
            // InternalAlf.g:6210:2: (otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) ) )
            // InternalAlf.g:6211:3: otherlv_0= 'redefines' ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRedefinesAccess().getRedefinesKeyword_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6134:3: ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
            // InternalAlf.g:6135:4: (lv_ownedRelationship_1_0= ruleRedefinition )
=======
            // InternalAlf.g:6215:3: ( (lv_ownedRelationship_1_0= ruleRedefinition ) )
            // InternalAlf.g:6216:4: (lv_ownedRelationship_1_0= ruleRedefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6135:4: (lv_ownedRelationship_1_0= ruleRedefinition )
            // InternalAlf.g:6136:5: lv_ownedRelationship_1_0= ruleRedefinition
=======
            // InternalAlf.g:6216:4: (lv_ownedRelationship_1_0= ruleRedefinition )
            // InternalAlf.g:6217:5: lv_ownedRelationship_1_0= ruleRedefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRedefinesAccess().getOwnedRelationshipRedefinitionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRedefinesRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.sysml.Alf.Redefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefines"


    // $ANTLR start "entryRuleRedefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6157:1: entryRuleRedefinition returns [EObject current=null] : iv_ruleRedefinition= ruleRedefinition EOF ;
=======
    // InternalAlf.g:6238:1: entryRuleRedefinition returns [EObject current=null] : iv_ruleRedefinition= ruleRedefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRedefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6157:53: (iv_ruleRedefinition= ruleRedefinition EOF )
            // InternalAlf.g:6158:2: iv_ruleRedefinition= ruleRedefinition EOF
=======
            // InternalAlf.g:6238:53: (iv_ruleRedefinition= ruleRedefinition EOF )
            // InternalAlf.g:6239:2: iv_ruleRedefinition= ruleRedefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRedefinition=ruleRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRedefinition"


    // $ANTLR start "ruleRedefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6164:1: ruleRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
=======
    // InternalAlf.g:6245:1: ruleRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleRedefinition() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6170:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:6171:2: ( ( ruleQualifiedName ) )
=======
            // InternalAlf.g:6251:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:6252:2: ( ( ruleQualifiedName ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6171:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:6172:3: ( ruleQualifiedName )
=======
            // InternalAlf.g:6252:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:6253:3: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6172:3: ( ruleQualifiedName )
            // InternalAlf.g:6173:4: ruleQualifiedName
=======
            // InternalAlf.g:6253:3: ( ruleQualifiedName )
            // InternalAlf.g:6254:4: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRedefinitionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinition"


    // $ANTLR start "entryRuleConnectorDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6193:1: entryRuleConnectorDefinition returns [EObject current=null] : iv_ruleConnectorDefinition= ruleConnectorDefinition EOF ;
=======
    // InternalAlf.g:6274:1: entryRuleConnectorDefinition returns [EObject current=null] : iv_ruleConnectorDefinition= ruleConnectorDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleConnectorDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6193:60: (iv_ruleConnectorDefinition= ruleConnectorDefinition EOF )
            // InternalAlf.g:6194:2: iv_ruleConnectorDefinition= ruleConnectorDefinition EOF
=======
            // InternalAlf.g:6274:60: (iv_ruleConnectorDefinition= ruleConnectorDefinition EOF )
            // InternalAlf.g:6275:2: iv_ruleConnectorDefinition= ruleConnectorDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorDefinition=ruleConnectorDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorDefinition"


    // $ANTLR start "ruleConnectorDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6200:1: ruleConnectorDefinition returns [EObject current=null] : (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
=======
    // InternalAlf.g:6281:1: ruleConnectorDefinition returns [EObject current=null] : (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConnectorDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_ConnectorDeclaration_0 = null;

        EObject this_CategoryBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6206:2: ( (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:6207:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
=======
            // InternalAlf.g:6287:2: ( (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:6288:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6207:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:6208:3: this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
=======
            // InternalAlf.g:6288:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:6289:3: this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorDefinitionAccess().getConnectorDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_ConnectorDeclaration_0=ruleConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConnectorDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorDefinitionAccess().getCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_CategoryBody_1=ruleCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorDefinition"


    // $ANTLR start "entryRuleAbstractConnectorDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6240:1: entryRuleAbstractConnectorDefinition returns [EObject current=null] : iv_ruleAbstractConnectorDefinition= ruleAbstractConnectorDefinition EOF ;
=======
    // InternalAlf.g:6321:1: entryRuleAbstractConnectorDefinition returns [EObject current=null] : iv_ruleAbstractConnectorDefinition= ruleAbstractConnectorDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAbstractConnectorDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractConnectorDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6240:68: (iv_ruleAbstractConnectorDefinition= ruleAbstractConnectorDefinition EOF )
            // InternalAlf.g:6241:2: iv_ruleAbstractConnectorDefinition= ruleAbstractConnectorDefinition EOF
=======
            // InternalAlf.g:6321:68: (iv_ruleAbstractConnectorDefinition= ruleAbstractConnectorDefinition EOF )
            // InternalAlf.g:6322:2: iv_ruleAbstractConnectorDefinition= ruleAbstractConnectorDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractConnectorDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractConnectorDefinition=ruleAbstractConnectorDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractConnectorDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractConnectorDefinition"


    // $ANTLR start "ruleAbstractConnectorDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6247:1: ruleAbstractConnectorDefinition returns [EObject current=null] : (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] ) ;
=======
    // InternalAlf.g:6328:1: ruleAbstractConnectorDefinition returns [EObject current=null] : (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAbstractConnectorDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_ConnectorDeclaration_0 = null;

        EObject this_AbstractCategoryBody_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6253:2: ( (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] ) )
            // InternalAlf.g:6254:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] )
=======
            // InternalAlf.g:6334:2: ( (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] ) )
            // InternalAlf.g:6335:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6254:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] )
            // InternalAlf.g:6255:3: this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current]
=======
            // InternalAlf.g:6335:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] )
            // InternalAlf.g:6336:3: this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractConnectorDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractConnectorDefinitionAccess().getConnectorDeclarationParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_68);
=======
            pushFollow(FOLLOW_69);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_ConnectorDeclaration_0=ruleConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConnectorDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractConnectorDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractConnectorDefinitionAccess().getAbstractCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AbstractCategoryBody_1=ruleAbstractCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AbstractCategoryBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractConnectorDefinition"


    // $ANTLR start "ruleConnectorDeclaration"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6288:1: ruleConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')' ) ) ;
=======
    // InternalAlf.g:6369:1: ruleConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject this_ConnectorTypePart_1 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_5_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject this_ConnectorTypePart_7 = null;

        EObject lv_ownedRelationship_9_0 = null;

        EObject lv_ownedRelationship_11_0 = null;

        EObject lv_ownedRelationship_13_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6294:2: ( ( ( ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')' ) ) )
            // InternalAlf.g:6295:2: ( ( ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')' ) )
=======
            // InternalAlf.g:6375:2: ( ( ( ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')' ) ) )
            // InternalAlf.g:6376:2: ( ( ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6295:2: ( ( ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')' ) )
            int alt105=2;
            alt105 = dfa105.predict(input);
            switch (alt105) {
=======
            // InternalAlf.g:6376:2: ( ( ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')' ) )
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6296:3: ( ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
=======
                    // InternalAlf.g:6377:3: ( ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6296:3: ( ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
                    // InternalAlf.g:6297:4: ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
=======
                    // InternalAlf.g:6377:3: ( ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) ) )
                    // InternalAlf.g:6378:4: ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6297:4: ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )?
                    int alt101=2;
                    switch ( input.LA(1) ) {
                        case RULE_ID:
                            {
                            int LA101_1 = input.LA(2);

                            if ( (LA101_1==25||LA101_1==48) ) {
                                alt101=1;
                            }
                            }
                            break;
                        case RULE_UNRESTRICTED_NAME:
                            {
                            int LA101_2 = input.LA(2);

                            if ( (LA101_2==25||LA101_2==48) ) {
                                alt101=1;
                            }
                            }
                            break;
                        case 25:
                        case 48:
                            {
                            alt101=1;
                            }
                            break;
                    }

                    switch (alt101) {
=======
                    // InternalAlf.g:6378:4: ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )?
                    int alt99=2;
                    alt99 = dfa99.predict(input);
                    switch (alt99) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:6298:5: ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is'
=======
                            // InternalAlf.g:6379:5: ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:6298:5: ( (lv_name_0_0= ruleName ) )?
                            int alt99=2;
                            int LA99_0 = input.LA(1);
=======
                            // InternalAlf.g:6379:5: ( (lv_name_0_0= ruleName ) )?
                            int alt98=2;
                            int LA98_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                            if ( ((LA99_0>=RULE_ID && LA99_0<=RULE_UNRESTRICTED_NAME)) ) {
                                alt99=1;
=======
                            if ( ((LA98_0>=RULE_ID && LA98_0<=RULE_UNRESTRICTED_NAME)) ) {
                                alt98=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            switch (alt99) {
=======
                            switch (alt98) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                                    // InternalAlf.g:6299:6: (lv_name_0_0= ruleName )
=======
                                    // InternalAlf.g:6380:6: (lv_name_0_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                                    // InternalAlf.g:6299:6: (lv_name_0_0= ruleName )
                                    // InternalAlf.g:6300:7: lv_name_0_0= ruleName
=======
                                    // InternalAlf.g:6380:6: (lv_name_0_0= ruleName )
                                    // InternalAlf.g:6381:7: lv_name_0_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getNameNameParserRuleCall_0_0_0_0());
                                      						
                                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                                    pushFollow(FOLLOW_82);
=======
                                    pushFollow(FOLLOW_83);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                                    lv_name_0_0=ruleName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                                      							}
                                      							set(
                                      								current,
                                      								"name",
                                      								lv_name_0_0,
                                      								"org.omg.sysml.Alf.Name");
                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }


                                    }
                                    break;

                            }

<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:6317:5: (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )?
                            int alt100=2;
                            int LA100_0 = input.LA(1);

                            if ( (LA100_0==48) ) {
                                alt100=1;
                            }
                            switch (alt100) {
                                case 1 :
                                    // InternalAlf.g:6318:6: otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) )
                                    {
                                    otherlv_1=(Token)match(input,48,FOLLOW_15); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_1, grammarAccess.getConnectorDeclarationAccess().getColonKeyword_0_0_1_0());
                                      					
                                    }
                                    // InternalAlf.g:6322:6: ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) )
                                    // InternalAlf.g:6323:7: (lv_ownedRelationship_2_0= ruleConnectorTyping )
                                    {
                                    // InternalAlf.g:6323:7: (lv_ownedRelationship_2_0= ruleConnectorTyping )
                                    // InternalAlf.g:6324:8: lv_ownedRelationship_2_0= ruleConnectorTyping
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorTypingParserRuleCall_0_0_1_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_27);
                                    lv_ownedRelationship_2_0=ruleConnectorTyping();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                                      								}
                                      								add(
                                      									current,
                                      									"ownedRelationship",
                                      									lv_ownedRelationship_2_0,
                                      									"org.omg.sysml.Alf.ConnectorTyping");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_3=(Token)match(input,25,FOLLOW_81); if (state.failed) return current;
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            if ( state.backtracking==0 ) {

                              					/* */
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                              					}
                              					newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getConnectorTypePartParserRuleCall_0_0_1());
                              				
                            }
                            pushFollow(FOLLOW_28);
                            this_ConnectorTypePart_1=ruleConnectorTypePart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_ConnectorTypePart_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }
                            otherlv_2=(Token)match(input,25,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getConnectorDeclarationAccess().getIsKeyword_0_0_2());
                              				
                            }

                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6347:4: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6348:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
=======
                    // InternalAlf.g:6417:4: ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6418:5: (lv_ownedRelationship_3_0= ruleConnectorEndMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6348:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                    // InternalAlf.g:6349:6: lv_ownedRelationship_4_0= ruleConnectorEndMember
=======
                    // InternalAlf.g:6418:5: (lv_ownedRelationship_3_0= ruleConnectorEndMember )
                    // InternalAlf.g:6419:6: lv_ownedRelationship_3_0= ruleConnectorEndMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_83);
                    lv_ownedRelationship_4_0=ruleConnectorEndMember();
=======
                    pushFollow(FOLLOW_84);
                    lv_ownedRelationship_3_0=ruleConnectorEndMember();
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.sysml.Alf.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_5=(Token)match(input,57,FOLLOW_81); if (state.failed) return current;
=======
                    otherlv_4=(Token)match(input,57,FOLLOW_82); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConnectorDeclarationAccess().getToKeyword_0_2());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6370:4: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6371:5: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
=======
                    // InternalAlf.g:6440:4: ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6441:5: (lv_ownedRelationship_5_0= ruleConnectorEndMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6371:5: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
                    // InternalAlf.g:6372:6: lv_ownedRelationship_6_0= ruleConnectorEndMember
=======
                    // InternalAlf.g:6441:5: (lv_ownedRelationship_5_0= ruleConnectorEndMember )
                    // InternalAlf.g:6442:6: lv_ownedRelationship_5_0= ruleConnectorEndMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_5_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_5_0,
                      							"org.omg.sysml.Alf.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6391:3: ( ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')' )
=======
                    // InternalAlf.g:6461:3: ( ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6391:3: ( ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')' )
                    // InternalAlf.g:6392:4: ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')'
=======
                    // InternalAlf.g:6461:3: ( ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')' )
                    // InternalAlf.g:6462:4: ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6392:4: ( (lv_name_7_0= ruleName ) )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);
=======
                    // InternalAlf.g:6462:4: ( (lv_name_6_0= ruleName ) )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                    if ( ((LA102_0>=RULE_ID && LA102_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:6393:5: (lv_name_7_0= ruleName )
=======
                            // InternalAlf.g:6463:5: (lv_name_6_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:6393:5: (lv_name_7_0= ruleName )
                            // InternalAlf.g:6394:6: lv_name_7_0= ruleName
=======
                            // InternalAlf.g:6463:5: (lv_name_6_0= ruleName )
                            // InternalAlf.g:6464:6: lv_name_6_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getNameNameParserRuleCall_1_0_0());
                              					
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            pushFollow(FOLLOW_84);
                            lv_name_7_0=ruleName();
=======
                            pushFollow(FOLLOW_85);
                            lv_name_6_0=ruleName();
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_6_0,
                              							"org.omg.sysml.Alf.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6411:4: (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==48) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // InternalAlf.g:6412:5: otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) )
                            {
                            otherlv_8=(Token)match(input,48,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getConnectorDeclarationAccess().getColonKeyword_1_1_0());
                              				
                            }
                            // InternalAlf.g:6416:5: ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) )
                            // InternalAlf.g:6417:6: (lv_ownedRelationship_9_0= ruleConnectorTyping )
                            {
                            // InternalAlf.g:6417:6: (lv_ownedRelationship_9_0= ruleConnectorTyping )
                            // InternalAlf.g:6418:7: lv_ownedRelationship_9_0= ruleConnectorTyping
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorTypingParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_58);
                            lv_ownedRelationship_9_0=ruleConnectorTyping();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_9_0,
                              								"org.omg.sysml.Alf.ConnectorTyping");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_10=(Token)match(input,42,FOLLOW_81); if (state.failed) return current;
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6440:4: ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6441:5: (lv_ownedRelationship_11_0= ruleConnectorEndMember )
=======
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getConnectorTypePartParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_59);
                    this_ConnectorTypePart_7=ruleConnectorTypePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConnectorTypePart_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_8=(Token)match(input,42,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getConnectorDeclarationAccess().getLeftParenthesisKeyword_1_2());
                      			
                    }
                    // InternalAlf.g:6499:4: ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6500:5: (lv_ownedRelationship_9_0= ruleConnectorEndMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6441:5: (lv_ownedRelationship_11_0= ruleConnectorEndMember )
                    // InternalAlf.g:6442:6: lv_ownedRelationship_11_0= ruleConnectorEndMember
=======
                    // InternalAlf.g:6500:5: (lv_ownedRelationship_9_0= ruleConnectorEndMember )
                    // InternalAlf.g:6501:6: lv_ownedRelationship_9_0= ruleConnectorEndMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_3_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_85);
=======
                    pushFollow(FOLLOW_86);
                    lv_ownedRelationship_9_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_9_0,
                      							"org.omg.sysml.Alf.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,39,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_4());
                      			
                    }
                    // InternalAlf.g:6522:4: ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6523:5: (lv_ownedRelationship_11_0= ruleConnectorEndMember )
                    {
                    // InternalAlf.g:6523:5: (lv_ownedRelationship_11_0= ruleConnectorEndMember )
                    // InternalAlf.g:6524:6: lv_ownedRelationship_11_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_11_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_11_0,
                      							"org.omg.sysml.Alf.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_12=(Token)match(input,40,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_4());
                      			
                    }
                    // InternalAlf.g:6463:4: ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) )
                    // InternalAlf.g:6464:5: (lv_ownedRelationship_13_0= ruleConnectorEndMember )
                    {
                    // InternalAlf.g:6464:5: (lv_ownedRelationship_13_0= ruleConnectorEndMember )
                    // InternalAlf.g:6465:6: lv_ownedRelationship_13_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_ownedRelationship_13_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_13_0,
                      							"org.omg.sysml.Alf.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAlf.g:6482:4: (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )*
                    loop104:
=======
                    // InternalAlf.g:6541:4: (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )*
                    loop101:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    do {
<<<<<<< Upstream, based on origin/ST6RI-75
                        int alt104=2;
                        int LA104_0 = input.LA(1);
=======
                        int alt101=2;
                        int LA101_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (LA104_0==40) ) {
                            alt104=1;
=======
                        if ( (LA101_0==39) ) {
                            alt101=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        }


<<<<<<< Upstream, based on origin/ST6RI-75
                        switch (alt104) {
=======
                        switch (alt101) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:6483:5: otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) )
=======
                    	    // InternalAlf.g:6542:5: otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    otherlv_14=(Token)match(input,40,FOLLOW_81); if (state.failed) return current;
=======
                    	    otherlv_12=(Token)match(input,39,FOLLOW_82); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_12, grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_6_0());
                    	      				
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:6487:5: ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) )
                    	    // InternalAlf.g:6488:6: (lv_ownedRelationship_15_0= ruleConnectorEndMember )
=======
                    	    // InternalAlf.g:6546:5: ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) )
                    	    // InternalAlf.g:6547:6: (lv_ownedRelationship_13_0= ruleConnectorEndMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:6488:6: (lv_ownedRelationship_15_0= ruleConnectorEndMember )
                    	    // InternalAlf.g:6489:7: lv_ownedRelationship_15_0= ruleConnectorEndMember
=======
                    	    // InternalAlf.g:6547:6: (lv_ownedRelationship_13_0= ruleConnectorEndMember )
                    	    // InternalAlf.g:6548:7: lv_ownedRelationship_13_0= ruleConnectorEndMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_6_1_0());
                    	      						
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_60);
                    	    lv_ownedRelationship_15_0=ruleConnectorEndMember();
=======
                    	    pushFollow(FOLLOW_61);
                    	    lv_ownedRelationship_13_0=ruleConnectorEndMember();
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_13_0,
                    	      								"org.omg.sysml.Alf.ConnectorEndMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    break loop104;
=======
                    	    break loop101;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                        }
                    } while (true);

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_16=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
=======
                    otherlv_14=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getConnectorDeclarationAccess().getRightParenthesisKeyword_1_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorDeclaration"


    // $ANTLR start "ruleConnectorTypePart"
    // InternalAlf.g:6576:1: ruleConnectorTypePart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':' ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) ) )? ( (lv_ownedRelationship_2_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleConnectorTypePart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_isOrdered_4_0=null;
        Token lv_isNonunique_5_0=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalAlf.g:6585:2: ( ( (otherlv_0= ':' ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) ) )? ( (lv_ownedRelationship_2_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) ) ) ) )
            // InternalAlf.g:6586:2: ( (otherlv_0= ':' ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) ) )? ( (lv_ownedRelationship_2_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) ) ) )
            {
            // InternalAlf.g:6586:2: ( (otherlv_0= ':' ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) ) )? ( (lv_ownedRelationship_2_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) ) ) )
            // InternalAlf.g:6587:3: (otherlv_0= ':' ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) ) )? ( (lv_ownedRelationship_2_0= ruleMultiplicity ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) ) )
            {
            // InternalAlf.g:6587:3: (otherlv_0= ':' ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==48) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalAlf.g:6588:4: otherlv_0= ':' ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) )
                    {
                    otherlv_0=(Token)match(input,48,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getConnectorTypePartAccess().getColonKeyword_0_0());
                      			
                    }
                    // InternalAlf.g:6592:4: ( (lv_ownedRelationship_1_0= ruleConnectorTyping ) )
                    // InternalAlf.g:6593:5: (lv_ownedRelationship_1_0= ruleConnectorTyping )
                    {
                    // InternalAlf.g:6593:5: (lv_ownedRelationship_1_0= ruleConnectorTyping )
                    // InternalAlf.g:6594:6: lv_ownedRelationship_1_0= ruleConnectorTyping
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorTypePartAccess().getOwnedRelationshipConnectorTypingParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_ownedRelationship_1_0=ruleConnectorTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorTypePartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.sysml.Alf.ConnectorTyping");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalAlf.g:6612:3: ( (lv_ownedRelationship_2_0= ruleMultiplicity ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==53) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalAlf.g:6613:4: (lv_ownedRelationship_2_0= ruleMultiplicity )
                    {
                    // InternalAlf.g:6613:4: (lv_ownedRelationship_2_0= ruleMultiplicity )
                    // InternalAlf.g:6614:5: lv_ownedRelationship_2_0= ruleMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConnectorTypePartAccess().getOwnedRelationshipMultiplicityParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_77);
                    lv_ownedRelationship_2_0=ruleMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConnectorTypePartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.sysml.Alf.Multiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAlf.g:6631:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) ) )
            // InternalAlf.g:6632:4: ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) )
            {
            // InternalAlf.g:6632:4: ( ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* ) )
            // InternalAlf.g:6633:5: ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2());
            // InternalAlf.g:6636:5: ( ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )* )
            // InternalAlf.g:6637:6: ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )*
            {
            // InternalAlf.g:6637:6: ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )*
            loop105:
            do {
                int alt105=3;
                int LA105_0 = input.LA(1);

                if ( LA105_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 0) ) {
                    alt105=1;
                }
                else if ( LA105_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 1) ) {
                    alt105=2;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalAlf.g:6638:4: ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) )
            	    {
            	    // InternalAlf.g:6638:4: ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) )
            	    // InternalAlf.g:6639:5: {...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConnectorTypePart", "getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAlf.g:6639:114: ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) )
            	    // InternalAlf.g:6640:6: ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 0);
            	    // InternalAlf.g:6643:9: ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) )
            	    // InternalAlf.g:6643:10: {...}? => ( (lv_isOrdered_4_0= 'ordered' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConnectorTypePart", "true");
            	    }
            	    // InternalAlf.g:6643:19: ( (lv_isOrdered_4_0= 'ordered' ) )
            	    // InternalAlf.g:6643:20: (lv_isOrdered_4_0= 'ordered' )
            	    {
            	    // InternalAlf.g:6643:20: (lv_isOrdered_4_0= 'ordered' )
            	    // InternalAlf.g:6644:10: lv_isOrdered_4_0= 'ordered'
            	    {
            	    lv_isOrdered_4_0=(Token)match(input,51,FOLLOW_77); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_isOrdered_4_0, grammarAccess.getConnectorTypePartAccess().getIsOrderedOrderedKeyword_2_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConnectorTypePartRule());
            	      										}
            	      										setWithLastConsumed(current, "isOrdered", true, "ordered");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAlf.g:6661:4: ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) )
            	    {
            	    // InternalAlf.g:6661:4: ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) )
            	    // InternalAlf.g:6662:5: {...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConnectorTypePart", "getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAlf.g:6662:114: ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) )
            	    // InternalAlf.g:6663:6: ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 1);
            	    // InternalAlf.g:6666:9: ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) )
            	    // InternalAlf.g:6666:10: {...}? => ( (lv_isNonunique_5_0= 'nonunique' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConnectorTypePart", "true");
            	    }
            	    // InternalAlf.g:6666:19: ( (lv_isNonunique_5_0= 'nonunique' ) )
            	    // InternalAlf.g:6666:20: (lv_isNonunique_5_0= 'nonunique' )
            	    {
            	    // InternalAlf.g:6666:20: (lv_isNonunique_5_0= 'nonunique' )
            	    // InternalAlf.g:6667:10: lv_isNonunique_5_0= 'nonunique'
            	    {
            	    lv_isNonunique_5_0=(Token)match(input,52,FOLLOW_77); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_isNonunique_5_0, grammarAccess.getConnectorTypePartAccess().getIsNonuniqueNonuniqueKeyword_2_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConnectorTypePartRule());
            	      										}
            	      										setWithLastConsumed(current, "isNonunique", true, "nonunique");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConnectorTypePart"


    // $ANTLR start "entryRuleConnectorTyping"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6516:1: entryRuleConnectorTyping returns [EObject current=null] : iv_ruleConnectorTyping= ruleConnectorTyping EOF ;
=======
    // InternalAlf.g:6698:1: entryRuleConnectorTyping returns [EObject current=null] : iv_ruleConnectorTyping= ruleConnectorTyping EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleConnectorTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorTyping = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6516:56: (iv_ruleConnectorTyping= ruleConnectorTyping EOF )
            // InternalAlf.g:6517:2: iv_ruleConnectorTyping= ruleConnectorTyping EOF
=======
            // InternalAlf.g:6698:56: (iv_ruleConnectorTyping= ruleConnectorTyping EOF )
            // InternalAlf.g:6699:2: iv_ruleConnectorTyping= ruleConnectorTyping EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorTyping=ruleConnectorTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorTyping"


    // $ANTLR start "ruleConnectorTyping"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6523:1: ruleConnectorTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
=======
    // InternalAlf.g:6705:1: ruleConnectorTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConnectorTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6529:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:6530:2: ( ( ruleQualifiedName ) )
=======
            // InternalAlf.g:6711:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:6712:2: ( ( ruleQualifiedName ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6530:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:6531:3: ( ruleQualifiedName )
=======
            // InternalAlf.g:6712:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:6713:3: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6531:3: ( ruleQualifiedName )
            // InternalAlf.g:6532:4: ruleQualifiedName
=======
            // InternalAlf.g:6713:3: ( ruleQualifiedName )
            // InternalAlf.g:6714:4: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getConnectorTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConnectorTypingAccess().getTypeAssociationCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorTyping"


    // $ANTLR start "entryRuleConnectorEnd"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6552:1: entryRuleConnectorEnd returns [EObject current=null] : iv_ruleConnectorEnd= ruleConnectorEnd EOF ;
=======
    // InternalAlf.g:6734:1: entryRuleConnectorEnd returns [EObject current=null] : iv_ruleConnectorEnd= ruleConnectorEnd EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleConnectorEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEnd = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6552:53: (iv_ruleConnectorEnd= ruleConnectorEnd EOF )
            // InternalAlf.g:6553:2: iv_ruleConnectorEnd= ruleConnectorEnd EOF
=======
            // InternalAlf.g:6734:53: (iv_ruleConnectorEnd= ruleConnectorEnd EOF )
            // InternalAlf.g:6735:2: iv_ruleConnectorEnd= ruleConnectorEnd EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEnd=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEnd"


    // $ANTLR start "ruleConnectorEnd"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6559:1: ruleConnectorEnd returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? ) ;
=======
    // InternalAlf.g:6741:1: ruleConnectorEnd returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConnectorEnd() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6565:2: ( ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? ) )
            // InternalAlf.g:6566:2: ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? )
=======
            // InternalAlf.g:6747:2: ( ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? ) )
            // InternalAlf.g:6748:2: ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6566:2: ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? )
            // InternalAlf.g:6567:3: ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )?
=======
            // InternalAlf.g:6748:2: ( ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )? )
            // InternalAlf.g:6749:3: ( (lv_ownedRelationship_0_0= ruleSubset ) ) ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6567:3: ( (lv_ownedRelationship_0_0= ruleSubset ) )
            // InternalAlf.g:6568:4: (lv_ownedRelationship_0_0= ruleSubset )
=======
            // InternalAlf.g:6749:3: ( (lv_ownedRelationship_0_0= ruleSubset ) )
            // InternalAlf.g:6750:4: (lv_ownedRelationship_0_0= ruleSubset )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6568:4: (lv_ownedRelationship_0_0= ruleSubset )
            // InternalAlf.g:6569:5: lv_ownedRelationship_0_0= ruleSubset
=======
            // InternalAlf.g:6750:4: (lv_ownedRelationship_0_0= ruleSubset )
            // InternalAlf.g:6751:5: lv_ownedRelationship_0_0= ruleSubset
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipSubsetParserRuleCall_0_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_86);
=======
            pushFollow(FOLLOW_87);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_ownedRelationship_0_0=ruleSubset();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.sysml.Alf.Subset");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6586:3: ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )?
=======
            // InternalAlf.g:6768:3: ( (lv_ownedRelationship_1_0= ruleMultiplicity ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==53) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6587:4: (lv_ownedRelationship_1_0= ruleMultiplicity )
=======
                    // InternalAlf.g:6769:4: (lv_ownedRelationship_1_0= ruleMultiplicity )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6587:4: (lv_ownedRelationship_1_0= ruleMultiplicity )
                    // InternalAlf.g:6588:5: lv_ownedRelationship_1_0= ruleMultiplicity
=======
                    // InternalAlf.g:6769:4: (lv_ownedRelationship_1_0= ruleMultiplicity )
                    // InternalAlf.g:6770:5: lv_ownedRelationship_1_0= ruleMultiplicity
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipMultiplicityParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.sysml.Alf.Multiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEnd"


    // $ANTLR start "entryRuleConnectorEndMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6609:1: entryRuleConnectorEndMember returns [EObject current=null] : iv_ruleConnectorEndMember= ruleConnectorEndMember EOF ;
=======
    // InternalAlf.g:6791:1: entryRuleConnectorEndMember returns [EObject current=null] : iv_ruleConnectorEndMember= ruleConnectorEndMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEndMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6609:59: (iv_ruleConnectorEndMember= ruleConnectorEndMember EOF )
            // InternalAlf.g:6610:2: iv_ruleConnectorEndMember= ruleConnectorEndMember EOF
=======
            // InternalAlf.g:6791:59: (iv_ruleConnectorEndMember= ruleConnectorEndMember EOF )
            // InternalAlf.g:6792:2: iv_ruleConnectorEndMember= ruleConnectorEndMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEndMember=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEndMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEndMember"


    // $ANTLR start "ruleConnectorEndMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6616:1: ruleConnectorEndMember returns [EObject current=null] : ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) ) ;
=======
    // InternalAlf.g:6798:1: ruleConnectorEndMember returns [EObject current=null] : ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_memberName_0_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6622:2: ( ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) ) )
            // InternalAlf.g:6623:2: ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) )
=======
            // InternalAlf.g:6804:2: ( ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) ) )
            // InternalAlf.g:6805:2: ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6623:2: ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) )
            // InternalAlf.g:6624:3: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) )
=======
            // InternalAlf.g:6805:2: ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) ) )
            // InternalAlf.g:6806:3: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )? ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6624:3: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )?
=======
            // InternalAlf.g:6806:3: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==RULE_ID) ) {
                int LA107_1 = input.LA(2);

                if ( (LA107_1==58) ) {
                    alt107=1;
                }
            }
            else if ( (LA107_0==RULE_UNRESTRICTED_NAME) ) {
                int LA107_2 = input.LA(2);

                if ( (LA107_2==58) ) {
                    alt107=1;
                }
            }
            switch (alt107) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6625:4: ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>'
=======
                    // InternalAlf.g:6807:4: ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6625:4: ( (lv_memberName_0_0= ruleName ) )
                    // InternalAlf.g:6626:5: (lv_memberName_0_0= ruleName )
=======
                    // InternalAlf.g:6807:4: ( (lv_memberName_0_0= ruleName ) )
                    // InternalAlf.g:6808:5: (lv_memberName_0_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6626:5: (lv_memberName_0_0= ruleName )
                    // InternalAlf.g:6627:6: lv_memberName_0_0= ruleName
=======
                    // InternalAlf.g:6808:5: (lv_memberName_0_0= ruleName )
                    // InternalAlf.g:6809:6: lv_memberName_0_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getMemberNameNameParserRuleCall_0_0_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_87);
=======
                    pushFollow(FOLLOW_88);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_memberName_0_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
                      						}
                      						set(
                      							current,
                      							"memberName",
                      							lv_memberName_0_0,
                      							"org.omg.sysml.Alf.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_1=(Token)match(input,58,FOLLOW_81); if (state.failed) return current;
=======
                    otherlv_1=(Token)match(input,58,FOLLOW_82); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getConnectorEndMemberAccess().getEqualsSignGreaterThanSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6649:3: ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) )
            // InternalAlf.g:6650:4: (lv_ownedRelatedElement_2_0= ruleConnectorEnd )
=======
            // InternalAlf.g:6831:3: ( (lv_ownedRelatedElement_2_0= ruleConnectorEnd ) )
            // InternalAlf.g:6832:4: (lv_ownedRelatedElement_2_0= ruleConnectorEnd )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6650:4: (lv_ownedRelatedElement_2_0= ruleConnectorEnd )
            // InternalAlf.g:6651:5: lv_ownedRelatedElement_2_0= ruleConnectorEnd
=======
            // InternalAlf.g:6832:4: (lv_ownedRelatedElement_2_0= ruleConnectorEnd )
            // InternalAlf.g:6833:5: lv_ownedRelatedElement_2_0= ruleConnectorEnd
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementConnectorEndParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.sysml.Alf.ConnectorEnd");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEndMember"


    // $ANTLR start "entryRuleSuccessionDefinition"
    // InternalAlf.g:6672:1: entryRuleSuccessionDefinition returns [EObject current=null] : iv_ruleSuccessionDefinition= ruleSuccessionDefinition EOF ;
    public final EObject entryRuleSuccessionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuccessionDefinition = null;


        try {
            // InternalAlf.g:6672:61: (iv_ruleSuccessionDefinition= ruleSuccessionDefinition EOF )
            // InternalAlf.g:6673:2: iv_ruleSuccessionDefinition= ruleSuccessionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuccessionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuccessionDefinition=ruleSuccessionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuccessionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuccessionDefinition"


    // $ANTLR start "ruleSuccessionDefinition"
    // InternalAlf.g:6679:1: ruleSuccessionDefinition returns [EObject current=null] : (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) ;
    public final EObject ruleSuccessionDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_ConnectorDeclaration_0 = null;

        EObject this_CategoryBody_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:6685:2: ( (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] ) )
            // InternalAlf.g:6686:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            {
            // InternalAlf.g:6686:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current] )
            // InternalAlf.g:6687:3: this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_CategoryBody_1= ruleCategoryBody[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionDefinitionAccess().getConnectorDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_ConnectorDeclaration_0=ruleConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConnectorDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionDefinitionAccess().getCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_CategoryBody_1=ruleCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CategoryBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccessionDefinition"


    // $ANTLR start "entryRuleAbstractSuccessionDefinition"
    // InternalAlf.g:6719:1: entryRuleAbstractSuccessionDefinition returns [EObject current=null] : iv_ruleAbstractSuccessionDefinition= ruleAbstractSuccessionDefinition EOF ;
    public final EObject entryRuleAbstractSuccessionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractSuccessionDefinition = null;


        try {
            // InternalAlf.g:6719:69: (iv_ruleAbstractSuccessionDefinition= ruleAbstractSuccessionDefinition EOF )
            // InternalAlf.g:6720:2: iv_ruleAbstractSuccessionDefinition= ruleAbstractSuccessionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractSuccessionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractSuccessionDefinition=ruleAbstractSuccessionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractSuccessionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractSuccessionDefinition"


    // $ANTLR start "ruleAbstractSuccessionDefinition"
    // InternalAlf.g:6726:1: ruleAbstractSuccessionDefinition returns [EObject current=null] : (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] ) ;
    public final EObject ruleAbstractSuccessionDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_ConnectorDeclaration_0 = null;

        EObject this_AbstractCategoryBody_1 = null;



        	enterRule();

        try {
            // InternalAlf.g:6732:2: ( (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] ) )
            // InternalAlf.g:6733:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] )
            {
            // InternalAlf.g:6733:2: (this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current] )
            // InternalAlf.g:6734:3: this_ConnectorDeclaration_0= ruleConnectorDeclaration[$current] this_AbstractCategoryBody_1= ruleAbstractCategoryBody[$current]
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractSuccessionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractSuccessionDefinitionAccess().getConnectorDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_68);
            this_ConnectorDeclaration_0=ruleConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConnectorDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAbstractSuccessionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getAbstractSuccessionDefinitionAccess().getAbstractCategoryBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AbstractCategoryBody_1=ruleAbstractCategoryBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AbstractCategoryBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractSuccessionDefinition"


    // $ANTLR start "entryRuleParameterDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6766:1: entryRuleParameterDefinition returns [EObject current=null] : iv_ruleParameterDefinition= ruleParameterDefinition EOF ;
=======
    // InternalAlf.g:6854:1: entryRuleParameterDefinition returns [EObject current=null] : iv_ruleParameterDefinition= ruleParameterDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleParameterDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6766:60: (iv_ruleParameterDefinition= ruleParameterDefinition EOF )
            // InternalAlf.g:6767:2: iv_ruleParameterDefinition= ruleParameterDefinition EOF
=======
            // InternalAlf.g:6854:60: (iv_ruleParameterDefinition= ruleParameterDefinition EOF )
            // InternalAlf.g:6855:2: iv_ruleParameterDefinition= ruleParameterDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterDefinition=ruleParameterDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterDefinition"


    // $ANTLR start "ruleParameterDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6773:1: ruleParameterDefinition returns [EObject current=null] : this_TypePart_0= ruleTypePart[$current] ;
=======
    // InternalAlf.g:6861:1: ruleParameterDefinition returns [EObject current=null] : this_TypePart_0= ruleTypePart[$current] ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleParameterDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_TypePart_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6779:2: (this_TypePart_0= ruleTypePart[$current] )
            // InternalAlf.g:6780:2: this_TypePart_0= ruleTypePart[$current]
=======
            // InternalAlf.g:6867:2: (this_TypePart_0= ruleTypePart[$current] )
            // InternalAlf.g:6868:2: this_TypePart_0= ruleTypePart[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterDefinitionRule());
              		}
              		newCompositeNode(grammarAccess.getParameterDefinitionAccess().getTypePartParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_TypePart_0=ruleTypePart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_TypePart_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterDefinition"


    // $ANTLR start "entryRuleStepDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6797:1: entryRuleStepDefinition returns [EObject current=null] : iv_ruleStepDefinition= ruleStepDefinition EOF ;
=======
    // InternalAlf.g:6885:1: entryRuleStepDefinition returns [EObject current=null] : iv_ruleStepDefinition= ruleStepDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleStepDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStepDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6797:55: (iv_ruleStepDefinition= ruleStepDefinition EOF )
            // InternalAlf.g:6798:2: iv_ruleStepDefinition= ruleStepDefinition EOF
=======
            // InternalAlf.g:6885:55: (iv_ruleStepDefinition= ruleStepDefinition EOF )
            // InternalAlf.g:6886:2: iv_ruleStepDefinition= ruleStepDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStepDefinition=ruleStepDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStepDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStepDefinition"


    // $ANTLR start "ruleStepDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6804:1: ruleStepDefinition returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] ) ;
=======
    // InternalAlf.g:6892:1: ruleStepDefinition returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleStepDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_TypePart_3 = null;

        EObject this_ParameterList_4 = null;

        EObject this_SubsettingPart_5 = null;

        EObject lv_ownedRelationship_7_0 = null;

        EObject this_TypePart_8 = null;

        EObject this_ParameterList_9 = null;

        EObject this_BehaviorBody_10 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6810:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] ) )
            // InternalAlf.g:6811:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] )
=======
            // InternalAlf.g:6898:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] ) )
            // InternalAlf.g:6899:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6811:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] )
            // InternalAlf.g:6812:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current]
=======
            // InternalAlf.g:6899:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current] )
            // InternalAlf.g:6900:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'step' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) ) this_BehaviorBody_10= ruleBehaviorBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6812:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
=======
            // InternalAlf.g:6900:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==33) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6813:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:6901:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6813:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:6814:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:6901:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:6902:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_88); if (state.failed) return current;
=======
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_89); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getStepDefinitionAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStepDefinitionRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_1=(Token)match(input,44,FOLLOW_89); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,44,FOLLOW_90); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStepDefinitionAccess().getStepKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6830:3: ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) )
=======
            // InternalAlf.g:6918:3: ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] ) | (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( ((LA111_0>=RULE_ID && LA111_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt111=1;
            }
            else if ( (LA111_0==46) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6831:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] )
=======
                    // InternalAlf.g:6919:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6831:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] )
                    // InternalAlf.g:6832:5: ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current]
=======
                    // InternalAlf.g:6919:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current] )
                    // InternalAlf.g:6920:5: ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] )? this_SubsettingPart_5= ruleSubsettingPart[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6832:5: ( (lv_name_2_0= ruleName ) )
                    // InternalAlf.g:6833:6: (lv_name_2_0= ruleName )
=======
                    // InternalAlf.g:6920:5: ( (lv_name_2_0= ruleName ) )
                    // InternalAlf.g:6921:6: (lv_name_2_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6833:6: (lv_name_2_0= ruleName )
                    // InternalAlf.g:6834:7: lv_name_2_0= ruleName
=======
                    // InternalAlf.g:6921:6: (lv_name_2_0= ruleName )
                    // InternalAlf.g:6922:7: lv_name_2_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getStepDefinitionAccess().getNameNameParserRuleCall_2_0_0_0());
                      						
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_90);
=======
                    pushFollow(FOLLOW_91);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_name_2_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getStepDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"name",
                      								lv_name_2_0,
                      								"org.omg.sysml.Alf.Name");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStepDefinitionRule());
                      					}
                      					newCompositeNode(grammarAccess.getStepDefinitionAccess().getTypePartParserRuleCall_2_0_1());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_91);
=======
                    pushFollow(FOLLOW_92);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    this_TypePart_3=ruleTypePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_TypePart_3;
                      					afterParserOrEnumRuleCall();
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6865:5: (this_ParameterList_4= ruleParameterList[$current] )?
=======
                    // InternalAlf.g:6953:5: (this_ParameterList_4= ruleParameterList[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==42) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:6866:6: this_ParameterList_4= ruleParameterList[$current]
=======
                            // InternalAlf.g:6954:6: this_ParameterList_4= ruleParameterList[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getStepDefinitionRule());
                              						}
                              						newCompositeNode(grammarAccess.getStepDefinitionAccess().getParameterListParserRuleCall_2_0_2());
                              					
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            pushFollow(FOLLOW_92);
=======
                            pushFollow(FOLLOW_93);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            this_ParameterList_4=ruleParameterList(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_ParameterList_4;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStepDefinitionRule());
                      					}
                      					newCompositeNode(grammarAccess.getStepDefinitionAccess().getSubsettingPartParserRuleCall_2_0_3());
                      				
                    }
                    pushFollow(FOLLOW_44);
                    this_SubsettingPart_5=ruleSubsettingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_SubsettingPart_5;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6897:4: (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? )
=======
                    // InternalAlf.g:6985:4: (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6897:4: (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? )
                    // InternalAlf.g:6898:5: otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )?
=======
                    // InternalAlf.g:6985:4: (otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )? )
                    // InternalAlf.g:6986:5: otherlv_6= 'redefines' ( (lv_ownedRelationship_7_0= ruleRedefinition ) ) this_TypePart_8= ruleTypePart[$current] (this_ParameterList_9= ruleParameterList[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_6=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
=======
                    otherlv_6=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getStepDefinitionAccess().getRedefinesKeyword_2_1_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6902:5: ( (lv_ownedRelationship_7_0= ruleRedefinition ) )
                    // InternalAlf.g:6903:6: (lv_ownedRelationship_7_0= ruleRedefinition )
=======
                    // InternalAlf.g:6990:5: ( (lv_ownedRelationship_7_0= ruleRedefinition ) )
                    // InternalAlf.g:6991:6: (lv_ownedRelationship_7_0= ruleRedefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6903:6: (lv_ownedRelationship_7_0= ruleRedefinition )
                    // InternalAlf.g:6904:7: lv_ownedRelationship_7_0= ruleRedefinition
=======
                    // InternalAlf.g:6991:6: (lv_ownedRelationship_7_0= ruleRedefinition )
                    // InternalAlf.g:6992:7: lv_ownedRelationship_7_0= ruleRedefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getStepDefinitionAccess().getOwnedRelationshipRedefinitionParserRuleCall_2_1_1_0());
                      						
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_93);
=======
                    pushFollow(FOLLOW_94);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_7_0=ruleRedefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getStepDefinitionRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_7_0,
                      								"org.omg.sysml.Alf.Redefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStepDefinitionRule());
                      					}
                      					newCompositeNode(grammarAccess.getStepDefinitionAccess().getTypePartParserRuleCall_2_1_2());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_94);
=======
                    pushFollow(FOLLOW_95);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    this_TypePart_8=ruleTypePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_TypePart_8;
                      					afterParserOrEnumRuleCall();
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6935:5: (this_ParameterList_9= ruleParameterList[$current] )?
=======
                    // InternalAlf.g:7023:5: (this_ParameterList_9= ruleParameterList[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==42) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:6936:6: this_ParameterList_9= ruleParameterList[$current]
=======
                            // InternalAlf.g:7024:6: this_ParameterList_9= ruleParameterList[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getStepDefinitionRule());
                              						}
                              						newCompositeNode(grammarAccess.getStepDefinitionAccess().getParameterListParserRuleCall_2_1_3());
                              					
                            }
                            pushFollow(FOLLOW_44);
                            this_ParameterList_9=ruleParameterList(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_ParameterList_9;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getStepDefinitionAccess().getBehaviorBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_BehaviorBody_10=ruleBehaviorBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BehaviorBody_10;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStepDefinition"


    // $ANTLR start "entryRuleExpressionDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6971:1: entryRuleExpressionDefinition returns [EObject current=null] : iv_ruleExpressionDefinition= ruleExpressionDefinition EOF ;
=======
    // InternalAlf.g:7059:1: entryRuleExpressionDefinition returns [EObject current=null] : iv_ruleExpressionDefinition= ruleExpressionDefinition EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleExpressionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionDefinition = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6971:61: (iv_ruleExpressionDefinition= ruleExpressionDefinition EOF )
            // InternalAlf.g:6972:2: iv_ruleExpressionDefinition= ruleExpressionDefinition EOF
=======
            // InternalAlf.g:7059:61: (iv_ruleExpressionDefinition= ruleExpressionDefinition EOF )
            // InternalAlf.g:7060:2: iv_ruleExpressionDefinition= ruleExpressionDefinition EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionDefinition=ruleExpressionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionDefinition"


    // $ANTLR start "ruleExpressionDefinition"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:6978:1: ruleExpressionDefinition returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] ) ;
=======
    // InternalAlf.g:7066:1: ruleExpressionDefinition returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleExpressionDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_TypePart_3 = null;

        EObject this_ParameterList_4 = null;

        EObject this_ReturnParameterPart_5 = null;

        EObject this_SubsettingPart_6 = null;

        EObject lv_ownedRelationship_8_0 = null;

        EObject this_TypePart_9 = null;

        EObject this_ParameterList_10 = null;

        EObject this_ReturnParameterPart_11 = null;

        EObject this_FunctionBody_12 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6984:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] ) )
            // InternalAlf.g:6985:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] )
=======
            // InternalAlf.g:7072:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] ) )
            // InternalAlf.g:7073:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6985:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] )
            // InternalAlf.g:6986:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current]
=======
            // InternalAlf.g:7073:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current] )
            // InternalAlf.g:7074:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'expr' ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )? this_FunctionBody_12= ruleFunctionBody[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:6986:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
=======
            // InternalAlf.g:7074:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==33) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6987:4: (lv_isAbstract_0_0= 'abstract' )
=======
                    // InternalAlf.g:7075:4: (lv_isAbstract_0_0= 'abstract' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:6987:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:6988:5: lv_isAbstract_0_0= 'abstract'
=======
                    // InternalAlf.g:7075:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalAlf.g:7076:5: lv_isAbstract_0_0= 'abstract'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_95); if (state.failed) return current;
=======
                    lv_isAbstract_0_0=(Token)match(input,33,FOLLOW_96); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getExpressionDefinitionAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_1=(Token)match(input,45,FOLLOW_96); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,45,FOLLOW_97); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExpressionDefinitionAccess().getExprKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7004:3: ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )?
=======
            // InternalAlf.g:7092:3: ( ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] ) | (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt115=3;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=RULE_ID && LA115_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt115=1;
            }
            else if ( (LA115_0==46) ) {
                alt115=2;
            }
            switch (alt115) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7005:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] )
=======
                    // InternalAlf.g:7093:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7005:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] )
                    // InternalAlf.g:7006:5: ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current]
=======
                    // InternalAlf.g:7093:4: ( ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current] )
                    // InternalAlf.g:7094:5: ( (lv_name_2_0= ruleName ) ) this_TypePart_3= ruleTypePart[$current] (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )? this_SubsettingPart_6= ruleSubsettingPart[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7006:5: ( (lv_name_2_0= ruleName ) )
                    // InternalAlf.g:7007:6: (lv_name_2_0= ruleName )
=======
                    // InternalAlf.g:7094:5: ( (lv_name_2_0= ruleName ) )
                    // InternalAlf.g:7095:6: (lv_name_2_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7007:6: (lv_name_2_0= ruleName )
                    // InternalAlf.g:7008:7: lv_name_2_0= ruleName
=======
                    // InternalAlf.g:7095:6: (lv_name_2_0= ruleName )
                    // InternalAlf.g:7096:7: lv_name_2_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getNameNameParserRuleCall_2_0_0_0());
                      						
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_90);
=======
                    pushFollow(FOLLOW_91);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_name_2_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExpressionDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"name",
                      								lv_name_2_0,
                      								"org.omg.sysml.Alf.Name");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                      					}
                      					newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getTypePartParserRuleCall_2_0_1());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_91);
=======
                    pushFollow(FOLLOW_92);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    this_TypePart_3=ruleTypePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_TypePart_3;
                      					afterParserOrEnumRuleCall();
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7039:5: (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )?
=======
                    // InternalAlf.g:7127:5: (this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==42) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:7040:6: this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current]
=======
                            // InternalAlf.g:7128:6: this_ParameterList_4= ruleParameterList[$current] this_ReturnParameterPart_5= ruleReturnParameterPart[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                              						}
                              						newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getParameterListParserRuleCall_2_0_2_0());
                              					
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            pushFollow(FOLLOW_65);
=======
                            pushFollow(FOLLOW_66);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            this_ParameterList_4=ruleParameterList(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_ParameterList_4;
                              						afterParserOrEnumRuleCall();
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                              						}
                              						newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getReturnParameterPartParserRuleCall_2_0_2_1());
                              					
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            pushFollow(FOLLOW_92);
=======
                            pushFollow(FOLLOW_93);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            this_ReturnParameterPart_5=ruleReturnParameterPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_ReturnParameterPart_5;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                      					}
                      					newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getSubsettingPartParserRuleCall_2_0_3());
                      				
                    }
                    pushFollow(FOLLOW_44);
                    this_SubsettingPart_6=ruleSubsettingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_SubsettingPart_6;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7085:4: (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? )
=======
                    // InternalAlf.g:7173:4: (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7085:4: (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? )
                    // InternalAlf.g:7086:5: otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )?
=======
                    // InternalAlf.g:7173:4: (otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )? )
                    // InternalAlf.g:7174:5: otherlv_7= 'redefines' ( (lv_ownedRelationship_8_0= ruleRedefinition ) ) this_TypePart_9= ruleTypePart[$current] (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_7=(Token)match(input,46,FOLLOW_15); if (state.failed) return current;
=======
                    otherlv_7=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getExpressionDefinitionAccess().getRedefinesKeyword_2_1_0());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7090:5: ( (lv_ownedRelationship_8_0= ruleRedefinition ) )
                    // InternalAlf.g:7091:6: (lv_ownedRelationship_8_0= ruleRedefinition )
=======
                    // InternalAlf.g:7178:5: ( (lv_ownedRelationship_8_0= ruleRedefinition ) )
                    // InternalAlf.g:7179:6: (lv_ownedRelationship_8_0= ruleRedefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7091:6: (lv_ownedRelationship_8_0= ruleRedefinition )
                    // InternalAlf.g:7092:7: lv_ownedRelationship_8_0= ruleRedefinition
=======
                    // InternalAlf.g:7179:6: (lv_ownedRelationship_8_0= ruleRedefinition )
                    // InternalAlf.g:7180:7: lv_ownedRelationship_8_0= ruleRedefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getOwnedRelationshipRedefinitionParserRuleCall_2_1_1_0());
                      						
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_93);
=======
                    pushFollow(FOLLOW_94);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_8_0=ruleRedefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExpressionDefinitionRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_8_0,
                      								"org.omg.sysml.Alf.Redefinition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                      					}
                      					newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getTypePartParserRuleCall_2_1_2());
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_94);
=======
                    pushFollow(FOLLOW_95);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    this_TypePart_9=ruleTypePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_TypePart_9;
                      					afterParserOrEnumRuleCall();
                      				
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7123:5: (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )?
=======
                    // InternalAlf.g:7211:5: (this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==42) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:7124:6: this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current]
=======
                            // InternalAlf.g:7212:6: this_ParameterList_10= ruleParameterList[$current] this_ReturnParameterPart_11= ruleReturnParameterPart[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                              						}
                              						newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getParameterListParserRuleCall_2_1_3_0());
                              					
                            }
<<<<<<< Upstream, based on origin/ST6RI-75
                            pushFollow(FOLLOW_65);
=======
                            pushFollow(FOLLOW_66);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            this_ParameterList_10=ruleParameterList(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_ParameterList_10;
                              						afterParserOrEnumRuleCall();
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getExpressionDefinitionRule());
                              						}
                              						newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getReturnParameterPartParserRuleCall_2_1_3_1());
                              					
                            }
                            pushFollow(FOLLOW_44);
                            this_ReturnParameterPart_11=ruleReturnParameterPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_ReturnParameterPart_11;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionDefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionDefinitionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_12=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_12;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionDefinition"


    // $ANTLR start "entryRuleExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7173:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
=======
    // InternalAlf.g:7261:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7173:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalAlf.g:7174:2: iv_ruleExpression= ruleExpression EOF
=======
            // InternalAlf.g:7261:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalAlf.g:7262:2: iv_ruleExpression= ruleExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7180:1: ruleExpression returns [EObject current=null] : this_ConditionalExpression_0= ruleConditionalExpression ;
=======
    // InternalAlf.g:7268:1: ruleExpression returns [EObject current=null] : this_ConditionalExpression_0= ruleConditionalExpression ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalExpression_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7186:2: (this_ConditionalExpression_0= ruleConditionalExpression )
            // InternalAlf.g:7187:2: this_ConditionalExpression_0= ruleConditionalExpression
=======
            // InternalAlf.g:7274:2: (this_ConditionalExpression_0= ruleConditionalExpression )
            // InternalAlf.g:7275:2: this_ConditionalExpression_0= ruleConditionalExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ConditionalExpression_0=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ConditionalExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleConditionalExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7201:1: entryRuleConditionalExpression returns [EObject current=null] : iv_ruleConditionalExpression= ruleConditionalExpression EOF ;
=======
    // InternalAlf.g:7289:1: entryRuleConditionalExpression returns [EObject current=null] : iv_ruleConditionalExpression= ruleConditionalExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleConditionalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7201:62: (iv_ruleConditionalExpression= ruleConditionalExpression EOF )
            // InternalAlf.g:7202:2: iv_ruleConditionalExpression= ruleConditionalExpression EOF
=======
            // InternalAlf.g:7289:62: (iv_ruleConditionalExpression= ruleConditionalExpression EOF )
            // InternalAlf.g:7290:2: iv_ruleConditionalExpression= ruleConditionalExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalExpression=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalExpression"


    // $ANTLR start "ruleConditionalExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7208:1: ruleConditionalExpression returns [EObject current=null] : (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? ) ;
=======
    // InternalAlf.g:7296:1: ruleConditionalExpression returns [EObject current=null] : (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_NullCoalescingExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        EObject lv_operand_5_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7214:2: ( (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? ) )
            // InternalAlf.g:7215:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? )
=======
            // InternalAlf.g:7302:2: ( (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? ) )
            // InternalAlf.g:7303:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7215:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? )
            // InternalAlf.g:7216:3: this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )?
=======
            // InternalAlf.g:7303:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )? )
            // InternalAlf.g:7304:3: this_NullCoalescingExpression_0= ruleNullCoalescingExpression ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_97);
=======
            pushFollow(FOLLOW_98);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_NullCoalescingExpression_0=ruleNullCoalescingExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NullCoalescingExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7227:3: ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )?
=======
            // InternalAlf.g:7315:3: ( () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==59) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7228:4: () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) )
=======
                    // InternalAlf.g:7316:4: () ( (lv_operator_2_0= ruleConditionalTestOperator ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ':' ( (lv_operand_5_0= ruleConditionalExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7228:4: ()
                    // InternalAlf.g:7229:5: 
=======
                    // InternalAlf.g:7316:4: ()
                    // InternalAlf.g:7317:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getConditionalExpressionAccess().getOperatorExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7238:4: ( (lv_operator_2_0= ruleConditionalTestOperator ) )
                    // InternalAlf.g:7239:5: (lv_operator_2_0= ruleConditionalTestOperator )
=======
                    // InternalAlf.g:7326:4: ( (lv_operator_2_0= ruleConditionalTestOperator ) )
                    // InternalAlf.g:7327:5: (lv_operator_2_0= ruleConditionalTestOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7239:5: (lv_operator_2_0= ruleConditionalTestOperator )
                    // InternalAlf.g:7240:6: lv_operator_2_0= ruleConditionalTestOperator
=======
                    // InternalAlf.g:7327:5: (lv_operator_2_0= ruleConditionalTestOperator )
                    // InternalAlf.g:7328:6: lv_operator_2_0= ruleConditionalTestOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalTestOperatorParserRuleCall_1_1_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_72);
=======
                    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_operator_2_0=ruleConditionalTestOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.omg.sysml.Alf.ConditionalTestOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7257:4: ( (lv_operand_3_0= ruleExpression ) )
                    // InternalAlf.g:7258:5: (lv_operand_3_0= ruleExpression )
=======
                    // InternalAlf.g:7345:4: ( (lv_operand_3_0= ruleExpression ) )
                    // InternalAlf.g:7346:5: (lv_operand_3_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7258:5: (lv_operand_3_0= ruleExpression )
                    // InternalAlf.g:7259:6: lv_operand_3_0= ruleExpression
=======
                    // InternalAlf.g:7346:5: (lv_operand_3_0= ruleExpression )
                    // InternalAlf.g:7347:6: lv_operand_3_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandExpressionParserRuleCall_1_2_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_98);
=======
                    pushFollow(FOLLOW_99);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_operand_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.sysml.Alf.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_4=(Token)match(input,48,FOLLOW_72); if (state.failed) return current;
=======
                    otherlv_4=(Token)match(input,48,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7280:4: ( (lv_operand_5_0= ruleConditionalExpression ) )
                    // InternalAlf.g:7281:5: (lv_operand_5_0= ruleConditionalExpression )
=======
                    // InternalAlf.g:7368:4: ( (lv_operand_5_0= ruleConditionalExpression ) )
                    // InternalAlf.g:7369:5: (lv_operand_5_0= ruleConditionalExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:7281:5: (lv_operand_5_0= ruleConditionalExpression )
                    // InternalAlf.g:7282:6: lv_operand_5_0= ruleConditionalExpression
=======
                    // InternalAlf.g:7369:5: (lv_operand_5_0= ruleConditionalExpression )
                    // InternalAlf.g:7370:6: lv_operand_5_0= ruleConditionalExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandConditionalExpressionParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_5_0=ruleConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_5_0,
                      							"org.omg.sysml.Alf.ConditionalExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalExpression"


    // $ANTLR start "entryRuleConditionalTestOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7304:1: entryRuleConditionalTestOperator returns [String current=null] : iv_ruleConditionalTestOperator= ruleConditionalTestOperator EOF ;
=======
    // InternalAlf.g:7392:1: entryRuleConditionalTestOperator returns [String current=null] : iv_ruleConditionalTestOperator= ruleConditionalTestOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleConditionalTestOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalTestOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7304:63: (iv_ruleConditionalTestOperator= ruleConditionalTestOperator EOF )
            // InternalAlf.g:7305:2: iv_ruleConditionalTestOperator= ruleConditionalTestOperator EOF
=======
            // InternalAlf.g:7392:63: (iv_ruleConditionalTestOperator= ruleConditionalTestOperator EOF )
            // InternalAlf.g:7393:2: iv_ruleConditionalTestOperator= ruleConditionalTestOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalTestOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalTestOperator=ruleConditionalTestOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalTestOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalTestOperator"


    // $ANTLR start "ruleConditionalTestOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7311:1: ruleConditionalTestOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '?' ;
=======
    // InternalAlf.g:7399:1: ruleConditionalTestOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '?' ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleConditionalTestOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7317:2: (kw= '?' )
            // InternalAlf.g:7318:2: kw= '?'
=======
            // InternalAlf.g:7405:2: (kw= '?' )
            // InternalAlf.g:7406:2: kw= '?'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalTestOperatorAccess().getQuestionMarkKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalTestOperator"


    // $ANTLR start "entryRuleNullCoalescingExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7326:1: entryRuleNullCoalescingExpression returns [EObject current=null] : iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF ;
=======
    // InternalAlf.g:7414:1: entryRuleNullCoalescingExpression returns [EObject current=null] : iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullCoalescingExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7326:65: (iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF )
            // InternalAlf.g:7327:2: iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF
=======
            // InternalAlf.g:7414:65: (iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF )
            // InternalAlf.g:7415:2: iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingExpression=ruleNullCoalescingExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingExpression"


    // $ANTLR start "ruleNullCoalescingExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7333:1: ruleNullCoalescingExpression returns [EObject current=null] : (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* ) ;
=======
    // InternalAlf.g:7421:1: ruleNullCoalescingExpression returns [EObject current=null] : (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalOrExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7339:2: ( (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* ) )
            // InternalAlf.g:7340:2: (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* )
=======
            // InternalAlf.g:7427:2: ( (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* ) )
            // InternalAlf.g:7428:2: (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7340:2: (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* )
            // InternalAlf.g:7341:3: this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )*
=======
            // InternalAlf.g:7428:2: (this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )* )
            // InternalAlf.g:7429:3: this_ConditionalOrExpression_0= ruleConditionalOrExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getConditionalOrExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_99);
=======
            pushFollow(FOLLOW_100);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_ConditionalOrExpression_0=ruleConditionalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConditionalOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7352:3: ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )*
=======
            // InternalAlf.g:7440:3: ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==60) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7353:4: () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) )
=======
            	    // InternalAlf.g:7441:4: () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleConditionalOrExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7353:4: ()
            	    // InternalAlf.g:7354:5: 
=======
            	    // InternalAlf.g:7441:4: ()
            	    // InternalAlf.g:7442:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7363:4: ( (lv_operator_2_0= ruleNullCoalescingOperator ) )
            	    // InternalAlf.g:7364:5: (lv_operator_2_0= ruleNullCoalescingOperator )
=======
            	    // InternalAlf.g:7451:4: ( (lv_operator_2_0= ruleNullCoalescingOperator ) )
            	    // InternalAlf.g:7452:5: (lv_operator_2_0= ruleNullCoalescingOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7364:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    // InternalAlf.g:7365:6: lv_operator_2_0= ruleNullCoalescingOperator
=======
            	    // InternalAlf.g:7452:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    // InternalAlf.g:7453:6: lv_operator_2_0= ruleNullCoalescingOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_72);
=======
            	    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operator_2_0=ruleNullCoalescingOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.NullCoalescingOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7382:4: ( (lv_operand_3_0= ruleConditionalOrExpression ) )
            	    // InternalAlf.g:7383:5: (lv_operand_3_0= ruleConditionalOrExpression )
=======
            	    // InternalAlf.g:7470:4: ( (lv_operand_3_0= ruleConditionalOrExpression ) )
            	    // InternalAlf.g:7471:5: (lv_operand_3_0= ruleConditionalOrExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7383:5: (lv_operand_3_0= ruleConditionalOrExpression )
            	    // InternalAlf.g:7384:6: lv_operand_3_0= ruleConditionalOrExpression
=======
            	    // InternalAlf.g:7471:5: (lv_operand_3_0= ruleConditionalOrExpression )
            	    // InternalAlf.g:7472:6: lv_operand_3_0= ruleConditionalOrExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperandConditionalOrExpressionParserRuleCall_1_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_99);
=======
            	    pushFollow(FOLLOW_100);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleConditionalOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.ConditionalOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingExpression"


    // $ANTLR start "entryRuleNullCoalescingOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7406:1: entryRuleNullCoalescingOperator returns [String current=null] : iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF ;
=======
    // InternalAlf.g:7494:1: entryRuleNullCoalescingOperator returns [String current=null] : iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleNullCoalescingOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNullCoalescingOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7406:62: (iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF )
            // InternalAlf.g:7407:2: iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF
=======
            // InternalAlf.g:7494:62: (iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF )
            // InternalAlf.g:7495:2: iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingOperator=ruleNullCoalescingOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingOperator"


    // $ANTLR start "ruleNullCoalescingOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7413:1: ruleNullCoalescingOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '??' ;
=======
    // InternalAlf.g:7501:1: ruleNullCoalescingOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '??' ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleNullCoalescingOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7419:2: (kw= '??' )
            // InternalAlf.g:7420:2: kw= '??'
=======
            // InternalAlf.g:7507:2: (kw= '??' )
            // InternalAlf.g:7508:2: kw= '??'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingOperator"


    // $ANTLR start "entryRuleConditionalOrExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7428:1: entryRuleConditionalOrExpression returns [EObject current=null] : iv_ruleConditionalOrExpression= ruleConditionalOrExpression EOF ;
=======
    // InternalAlf.g:7516:1: entryRuleConditionalOrExpression returns [EObject current=null] : iv_ruleConditionalOrExpression= ruleConditionalOrExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleConditionalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalOrExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7428:64: (iv_ruleConditionalOrExpression= ruleConditionalOrExpression EOF )
            // InternalAlf.g:7429:2: iv_ruleConditionalOrExpression= ruleConditionalOrExpression EOF
=======
            // InternalAlf.g:7516:64: (iv_ruleConditionalOrExpression= ruleConditionalOrExpression EOF )
            // InternalAlf.g:7517:2: iv_ruleConditionalOrExpression= ruleConditionalOrExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOrExpression=ruleConditionalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOrExpression"


    // $ANTLR start "ruleConditionalOrExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7435:1: ruleConditionalOrExpression returns [EObject current=null] : (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* ) ;
=======
    // InternalAlf.g:7523:1: ruleConditionalOrExpression returns [EObject current=null] : (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConditionalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalAndExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7441:2: ( (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* ) )
            // InternalAlf.g:7442:2: (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* )
=======
            // InternalAlf.g:7529:2: ( (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* ) )
            // InternalAlf.g:7530:2: (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7442:2: (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* )
            // InternalAlf.g:7443:3: this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )*
=======
            // InternalAlf.g:7530:2: (this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )* )
            // InternalAlf.g:7531:3: this_ConditionalAndExpression_0= ruleConditionalAndExpression ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_100);
=======
            pushFollow(FOLLOW_101);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_ConditionalAndExpression_0=ruleConditionalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConditionalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7454:3: ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )*
=======
            // InternalAlf.g:7542:3: ( () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==61) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7455:4: () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) )
=======
            	    // InternalAlf.g:7543:4: () ( (lv_operator_2_0= ruleConditionalOrOperator ) ) ( (lv_operand_3_0= ruleConditionalAndExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7455:4: ()
            	    // InternalAlf.g:7456:5: 
=======
            	    // InternalAlf.g:7543:4: ()
            	    // InternalAlf.g:7544:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getConditionalOrExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7465:4: ( (lv_operator_2_0= ruleConditionalOrOperator ) )
            	    // InternalAlf.g:7466:5: (lv_operator_2_0= ruleConditionalOrOperator )
=======
            	    // InternalAlf.g:7553:4: ( (lv_operator_2_0= ruleConditionalOrOperator ) )
            	    // InternalAlf.g:7554:5: (lv_operator_2_0= ruleConditionalOrOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7466:5: (lv_operator_2_0= ruleConditionalOrOperator )
            	    // InternalAlf.g:7467:6: lv_operator_2_0= ruleConditionalOrOperator
=======
            	    // InternalAlf.g:7554:5: (lv_operator_2_0= ruleConditionalOrOperator )
            	    // InternalAlf.g:7555:6: lv_operator_2_0= ruleConditionalOrOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_72);
=======
            	    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operator_2_0=ruleConditionalOrOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.ConditionalOrOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7484:4: ( (lv_operand_3_0= ruleConditionalAndExpression ) )
            	    // InternalAlf.g:7485:5: (lv_operand_3_0= ruleConditionalAndExpression )
=======
            	    // InternalAlf.g:7572:4: ( (lv_operand_3_0= ruleConditionalAndExpression ) )
            	    // InternalAlf.g:7573:5: (lv_operand_3_0= ruleConditionalAndExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7485:5: (lv_operand_3_0= ruleConditionalAndExpression )
            	    // InternalAlf.g:7486:6: lv_operand_3_0= ruleConditionalAndExpression
=======
            	    // InternalAlf.g:7573:5: (lv_operand_3_0= ruleConditionalAndExpression )
            	    // InternalAlf.g:7574:6: lv_operand_3_0= ruleConditionalAndExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperandConditionalAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_100);
=======
            	    pushFollow(FOLLOW_101);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleConditionalAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.ConditionalAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOrExpression"


    // $ANTLR start "entryRuleConditionalOrOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7508:1: entryRuleConditionalOrOperator returns [String current=null] : iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF ;
=======
    // InternalAlf.g:7596:1: entryRuleConditionalOrOperator returns [String current=null] : iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleConditionalOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalOrOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7508:61: (iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF )
            // InternalAlf.g:7509:2: iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF
=======
            // InternalAlf.g:7596:61: (iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF )
            // InternalAlf.g:7597:2: iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOrOperator=ruleConditionalOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOrOperator"


    // $ANTLR start "ruleConditionalOrOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7515:1: ruleConditionalOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
=======
    // InternalAlf.g:7603:1: ruleConditionalOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleConditionalOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7521:2: (kw= '||' )
            // InternalAlf.g:7522:2: kw= '||'
=======
            // InternalAlf.g:7609:2: (kw= '||' )
            // InternalAlf.g:7610:2: kw= '||'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalOrOperatorAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOrOperator"


    // $ANTLR start "entryRuleConditionalAndExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7530:1: entryRuleConditionalAndExpression returns [EObject current=null] : iv_ruleConditionalAndExpression= ruleConditionalAndExpression EOF ;
=======
    // InternalAlf.g:7618:1: entryRuleConditionalAndExpression returns [EObject current=null] : iv_ruleConditionalAndExpression= ruleConditionalAndExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleConditionalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalAndExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7530:65: (iv_ruleConditionalAndExpression= ruleConditionalAndExpression EOF )
            // InternalAlf.g:7531:2: iv_ruleConditionalAndExpression= ruleConditionalAndExpression EOF
=======
            // InternalAlf.g:7618:65: (iv_ruleConditionalAndExpression= ruleConditionalAndExpression EOF )
            // InternalAlf.g:7619:2: iv_ruleConditionalAndExpression= ruleConditionalAndExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalAndExpression=ruleConditionalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalAndExpression"


    // $ANTLR start "ruleConditionalAndExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7537:1: ruleConditionalAndExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* ) ;
=======
    // InternalAlf.g:7625:1: ruleConditionalAndExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleConditionalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7543:2: ( (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* ) )
            // InternalAlf.g:7544:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* )
=======
            // InternalAlf.g:7631:2: ( (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* ) )
            // InternalAlf.g:7632:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7544:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* )
            // InternalAlf.g:7545:3: this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )*
=======
            // InternalAlf.g:7632:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )* )
            // InternalAlf.g:7633:3: this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOrExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_101);
=======
            pushFollow(FOLLOW_102);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_OrExpression_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7556:3: ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )*
=======
            // InternalAlf.g:7644:3: ( () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==62) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7557:4: () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) )
=======
            	    // InternalAlf.g:7645:4: () ( (lv_operator_2_0= ruleConditionalAndOperator ) ) ( (lv_operand_3_0= ruleOrExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7557:4: ()
            	    // InternalAlf.g:7558:5: 
=======
            	    // InternalAlf.g:7645:4: ()
            	    // InternalAlf.g:7646:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getConditionalAndExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7567:4: ( (lv_operator_2_0= ruleConditionalAndOperator ) )
            	    // InternalAlf.g:7568:5: (lv_operator_2_0= ruleConditionalAndOperator )
=======
            	    // InternalAlf.g:7655:4: ( (lv_operator_2_0= ruleConditionalAndOperator ) )
            	    // InternalAlf.g:7656:5: (lv_operator_2_0= ruleConditionalAndOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7568:5: (lv_operator_2_0= ruleConditionalAndOperator )
            	    // InternalAlf.g:7569:6: lv_operator_2_0= ruleConditionalAndOperator
=======
            	    // InternalAlf.g:7656:5: (lv_operator_2_0= ruleConditionalAndOperator )
            	    // InternalAlf.g:7657:6: lv_operator_2_0= ruleConditionalAndOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_72);
=======
            	    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operator_2_0=ruleConditionalAndOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.ConditionalAndOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7586:4: ( (lv_operand_3_0= ruleOrExpression ) )
            	    // InternalAlf.g:7587:5: (lv_operand_3_0= ruleOrExpression )
=======
            	    // InternalAlf.g:7674:4: ( (lv_operand_3_0= ruleOrExpression ) )
            	    // InternalAlf.g:7675:5: (lv_operand_3_0= ruleOrExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7587:5: (lv_operand_3_0= ruleOrExpression )
            	    // InternalAlf.g:7588:6: lv_operand_3_0= ruleOrExpression
=======
            	    // InternalAlf.g:7675:5: (lv_operand_3_0= ruleOrExpression )
            	    // InternalAlf.g:7676:6: lv_operand_3_0= ruleOrExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperandOrExpressionParserRuleCall_1_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_101);
=======
            	    pushFollow(FOLLOW_102);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.OrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalAndExpression"


    // $ANTLR start "entryRuleConditionalAndOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7610:1: entryRuleConditionalAndOperator returns [String current=null] : iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF ;
=======
    // InternalAlf.g:7698:1: entryRuleConditionalAndOperator returns [String current=null] : iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleConditionalAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalAndOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7610:62: (iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF )
            // InternalAlf.g:7611:2: iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF
=======
            // InternalAlf.g:7698:62: (iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF )
            // InternalAlf.g:7699:2: iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalAndOperator=ruleConditionalAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalAndOperator"


    // $ANTLR start "ruleConditionalAndOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7617:1: ruleConditionalAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
=======
    // InternalAlf.g:7705:1: ruleConditionalAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleConditionalAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7623:2: (kw= '&&' )
            // InternalAlf.g:7624:2: kw= '&&'
=======
            // InternalAlf.g:7711:2: (kw= '&&' )
            // InternalAlf.g:7712:2: kw= '&&'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalAndOperatorAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalAndOperator"


    // $ANTLR start "entryRuleOrExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7632:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
=======
    // InternalAlf.g:7720:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7632:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalAlf.g:7633:2: iv_ruleOrExpression= ruleOrExpression EOF
=======
            // InternalAlf.g:7720:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalAlf.g:7721:2: iv_ruleOrExpression= ruleOrExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7639:1: ruleOrExpression returns [EObject current=null] : (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* ) ;
=======
    // InternalAlf.g:7727:1: ruleOrExpression returns [EObject current=null] : (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XorExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7645:2: ( (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* ) )
            // InternalAlf.g:7646:2: (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* )
=======
            // InternalAlf.g:7733:2: ( (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* ) )
            // InternalAlf.g:7734:2: (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7646:2: (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* )
            // InternalAlf.g:7647:3: this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )*
=======
            // InternalAlf.g:7734:2: (this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )* )
            // InternalAlf.g:7735:3: this_XorExpression_0= ruleXorExpression ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_102);
=======
            pushFollow(FOLLOW_103);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_XorExpression_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7658:3: ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )*
=======
            // InternalAlf.g:7746:3: ( () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==63) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7659:4: () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) )
=======
            	    // InternalAlf.g:7747:4: () ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7659:4: ()
            	    // InternalAlf.g:7660:5: 
=======
            	    // InternalAlf.g:7747:4: ()
            	    // InternalAlf.g:7748:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getOrExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7669:4: ( (lv_operator_2_0= ruleOrOperator ) )
            	    // InternalAlf.g:7670:5: (lv_operator_2_0= ruleOrOperator )
=======
            	    // InternalAlf.g:7757:4: ( (lv_operator_2_0= ruleOrOperator ) )
            	    // InternalAlf.g:7758:5: (lv_operator_2_0= ruleOrOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7670:5: (lv_operator_2_0= ruleOrOperator )
            	    // InternalAlf.g:7671:6: lv_operator_2_0= ruleOrOperator
=======
            	    // InternalAlf.g:7758:5: (lv_operator_2_0= ruleOrOperator )
            	    // InternalAlf.g:7759:6: lv_operator_2_0= ruleOrOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_72);
=======
            	    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operator_2_0=ruleOrOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.OrOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7688:4: ( (lv_operand_3_0= ruleXorExpression ) )
            	    // InternalAlf.g:7689:5: (lv_operand_3_0= ruleXorExpression )
=======
            	    // InternalAlf.g:7776:4: ( (lv_operand_3_0= ruleXorExpression ) )
            	    // InternalAlf.g:7777:5: (lv_operand_3_0= ruleXorExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7689:5: (lv_operand_3_0= ruleXorExpression )
            	    // InternalAlf.g:7690:6: lv_operand_3_0= ruleXorExpression
=======
            	    // InternalAlf.g:7777:5: (lv_operand_3_0= ruleXorExpression )
            	    // InternalAlf.g:7778:6: lv_operand_3_0= ruleXorExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOperandXorExpressionParserRuleCall_1_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_102);
=======
            	    pushFollow(FOLLOW_103);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleXorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.XorExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleOrOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7712:1: entryRuleOrOperator returns [String current=null] : iv_ruleOrOperator= ruleOrOperator EOF ;
=======
    // InternalAlf.g:7800:1: entryRuleOrOperator returns [String current=null] : iv_ruleOrOperator= ruleOrOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7712:50: (iv_ruleOrOperator= ruleOrOperator EOF )
            // InternalAlf.g:7713:2: iv_ruleOrOperator= ruleOrOperator EOF
=======
            // InternalAlf.g:7800:50: (iv_ruleOrOperator= ruleOrOperator EOF )
            // InternalAlf.g:7801:2: iv_ruleOrOperator= ruleOrOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrOperator=ruleOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrOperator"


    // $ANTLR start "ruleOrOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7719:1: ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
=======
    // InternalAlf.g:7807:1: ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7725:2: (kw= '|' )
            // InternalAlf.g:7726:2: kw= '|'
=======
            // InternalAlf.g:7813:2: (kw= '|' )
            // InternalAlf.g:7814:2: kw= '|'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOrOperatorAccess().getVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "entryRuleXorExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7734:1: entryRuleXorExpression returns [EObject current=null] : iv_ruleXorExpression= ruleXorExpression EOF ;
=======
    // InternalAlf.g:7822:1: entryRuleXorExpression returns [EObject current=null] : iv_ruleXorExpression= ruleXorExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7734:54: (iv_ruleXorExpression= ruleXorExpression EOF )
            // InternalAlf.g:7735:2: iv_ruleXorExpression= ruleXorExpression EOF
=======
            // InternalAlf.g:7822:54: (iv_ruleXorExpression= ruleXorExpression EOF )
            // InternalAlf.g:7823:2: iv_ruleXorExpression= ruleXorExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpression=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpression"


    // $ANTLR start "ruleXorExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7741:1: ruleXorExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) ;
=======
    // InternalAlf.g:7829:1: ruleXorExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7747:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) )
            // InternalAlf.g:7748:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
=======
            // InternalAlf.g:7835:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) )
            // InternalAlf.g:7836:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7748:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            // InternalAlf.g:7749:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
=======
            // InternalAlf.g:7836:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            // InternalAlf.g:7837:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_103);
=======
            pushFollow(FOLLOW_104);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:7760:3: ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
=======
            // InternalAlf.g:7848:3: ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==64) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7761:4: () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) )
=======
            	    // InternalAlf.g:7849:4: () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7761:4: ()
            	    // InternalAlf.g:7762:5: 
=======
            	    // InternalAlf.g:7849:4: ()
            	    // InternalAlf.g:7850:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getXorExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7771:4: ( (lv_operator_2_0= ruleXorOperator ) )
            	    // InternalAlf.g:7772:5: (lv_operator_2_0= ruleXorOperator )
=======
            	    // InternalAlf.g:7859:4: ( (lv_operator_2_0= ruleXorOperator ) )
            	    // InternalAlf.g:7860:5: (lv_operator_2_0= ruleXorOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7772:5: (lv_operator_2_0= ruleXorOperator )
            	    // InternalAlf.g:7773:6: lv_operator_2_0= ruleXorOperator
=======
            	    // InternalAlf.g:7860:5: (lv_operator_2_0= ruleXorOperator )
            	    // InternalAlf.g:7861:6: lv_operator_2_0= ruleXorOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_72);
=======
            	    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operator_2_0=ruleXorOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.XorOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7790:4: ( (lv_operand_3_0= ruleAndExpression ) )
            	    // InternalAlf.g:7791:5: (lv_operand_3_0= ruleAndExpression )
=======
            	    // InternalAlf.g:7878:4: ( (lv_operand_3_0= ruleAndExpression ) )
            	    // InternalAlf.g:7879:5: (lv_operand_3_0= ruleAndExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:7791:5: (lv_operand_3_0= ruleAndExpression )
            	    // InternalAlf.g:7792:6: lv_operand_3_0= ruleAndExpression
=======
            	    // InternalAlf.g:7879:5: (lv_operand_3_0= ruleAndExpression )
            	    // InternalAlf.g:7880:6: lv_operand_3_0= ruleAndExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperandAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_103);
=======
            	    pushFollow(FOLLOW_104);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpression"


    // $ANTLR start "entryRuleXorOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:7814:1: entryRuleXorOperator returns [String current=null] : iv_ruleXorOperator= ruleXorOperator EOF ;
    public final String entryRuleXorOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXorOperator = null;


        try {
            // InternalAlf.g:7814:51: (iv_ruleXorOperator= ruleXorOperator EOF )
            // InternalAlf.g:7815:2: iv_ruleXorOperator= ruleXorOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorOperator=ruleXorOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalAlf.g:7821:1: ruleXorOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '^' ;
    public final AntlrDatatypeRuleToken ruleXorOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAlf.g:7827:2: (kw= '^' )
            // InternalAlf.g:7828:2: kw= '^'
            {
            kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "entryRuleAndExpression"
    // InternalAlf.g:7836:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalAlf.g:7836:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalAlf.g:7837:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalAlf.g:7843:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:7849:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalAlf.g:7850:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalAlf.g:7850:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* )
            // InternalAlf.g:7851:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_104);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:7862:3: ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==65) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalAlf.g:7863:4: () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalAlf.g:7863:4: ()
            	    // InternalAlf.g:7864:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAndExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalAlf.g:7873:4: ( (lv_operator_2_0= ruleAndOperator ) )
            	    // InternalAlf.g:7874:5: (lv_operator_2_0= ruleAndOperator )
            	    {
            	    // InternalAlf.g:7874:5: (lv_operator_2_0= ruleAndOperator )
            	    // InternalAlf.g:7875:6: lv_operator_2_0= ruleAndOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_operator_2_0=ruleAndOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.AndOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalAlf.g:7892:4: ( (lv_operand_3_0= ruleEqualityExpression ) )
            	    // InternalAlf.g:7893:5: (lv_operand_3_0= ruleEqualityExpression )
            	    {
            	    // InternalAlf.g:7893:5: (lv_operand_3_0= ruleEqualityExpression )
            	    // InternalAlf.g:7894:6: lv_operand_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_operand_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleAndOperator"
    // InternalAlf.g:7916:1: entryRuleAndOperator returns [String current=null] : iv_ruleAndOperator= ruleAndOperator EOF ;
    public final String entryRuleAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAndOperator = null;


        try {
            // InternalAlf.g:7916:51: (iv_ruleAndOperator= ruleAndOperator EOF )
            // InternalAlf.g:7917:2: iv_ruleAndOperator= ruleAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndOperator=ruleAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalAlf.g:7923:1: ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAlf.g:7929:2: (kw= '&' )
            // InternalAlf.g:7930:2: kw= '&'
            {
            kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalAlf.g:7938:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalAlf.g:7938:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalAlf.g:7939:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalAlf.g:7945:1: ruleEqualityExpression returns [EObject current=null] : (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ClassificationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:7951:2: ( (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) )
            // InternalAlf.g:7952:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            {
            // InternalAlf.g:7952:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            // InternalAlf.g:7953:3: this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_ClassificationExpression_0=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassificationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:7964:3: ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( ((LA123_0>=66 && LA123_0<=67)) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalAlf.g:7965:4: () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    {
            	    // InternalAlf.g:7965:4: ()
            	    // InternalAlf.g:7966:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalAlf.g:7975:4: ( (lv_operator_2_0= ruleEqualityOperator ) )
            	    // InternalAlf.g:7976:5: (lv_operator_2_0= ruleEqualityOperator )
            	    {
            	    // InternalAlf.g:7976:5: (lv_operator_2_0= ruleEqualityOperator )
            	    // InternalAlf.g:7977:6: lv_operator_2_0= ruleEqualityOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_operator_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.EqualityOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalAlf.g:7994:4: ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    // InternalAlf.g:7995:5: (lv_operand_3_0= ruleClassificationExpression )
            	    {
            	    // InternalAlf.g:7995:5: (lv_operand_3_0= ruleClassificationExpression )
            	    // InternalAlf.g:7996:6: lv_operand_3_0= ruleClassificationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperandClassificationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
=======
    // InternalAlf.g:7902:1: entryRuleXorOperator returns [String current=null] : iv_ruleXorOperator= ruleXorOperator EOF ;
    public final String entryRuleXorOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXorOperator = null;


        try {
            // InternalAlf.g:7902:51: (iv_ruleXorOperator= ruleXorOperator EOF )
            // InternalAlf.g:7903:2: iv_ruleXorOperator= ruleXorOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorOperator=ruleXorOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalAlf.g:7909:1: ruleXorOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '^' ;
    public final AntlrDatatypeRuleToken ruleXorOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAlf.g:7915:2: (kw= '^' )
            // InternalAlf.g:7916:2: kw= '^'
            {
            kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "entryRuleAndExpression"
    // InternalAlf.g:7924:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalAlf.g:7924:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalAlf.g:7925:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalAlf.g:7931:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:7937:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalAlf.g:7938:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalAlf.g:7938:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )* )
            // InternalAlf.g:7939:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:7950:3: ( () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==65) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalAlf.g:7951:4: () ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalAlf.g:7951:4: ()
            	    // InternalAlf.g:7952:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAndExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalAlf.g:7961:4: ( (lv_operator_2_0= ruleAndOperator ) )
            	    // InternalAlf.g:7962:5: (lv_operator_2_0= ruleAndOperator )
            	    {
            	    // InternalAlf.g:7962:5: (lv_operator_2_0= ruleAndOperator )
            	    // InternalAlf.g:7963:6: lv_operator_2_0= ruleAndOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_operator_2_0=ruleAndOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.AndOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalAlf.g:7980:4: ( (lv_operand_3_0= ruleEqualityExpression ) )
            	    // InternalAlf.g:7981:5: (lv_operand_3_0= ruleEqualityExpression )
            	    {
            	    // InternalAlf.g:7981:5: (lv_operand_3_0= ruleEqualityExpression )
            	    // InternalAlf.g:7982:6: lv_operand_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_operand_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleAndOperator"
    // InternalAlf.g:8004:1: entryRuleAndOperator returns [String current=null] : iv_ruleAndOperator= ruleAndOperator EOF ;
    public final String entryRuleAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAndOperator = null;


        try {
            // InternalAlf.g:8004:51: (iv_ruleAndOperator= ruleAndOperator EOF )
            // InternalAlf.g:8005:2: iv_ruleAndOperator= ruleAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndOperator=ruleAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalAlf.g:8011:1: ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAlf.g:8017:2: (kw= '&' )
            // InternalAlf.g:8018:2: kw= '&'
            {
            kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalAlf.g:8026:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalAlf.g:8026:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalAlf.g:8027:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalAlf.g:8033:1: ruleEqualityExpression returns [EObject current=null] : (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ClassificationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:8039:2: ( (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) )
            // InternalAlf.g:8040:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            {
            // InternalAlf.g:8040:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            // InternalAlf.g:8041:3: this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_106);
            this_ClassificationExpression_0=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassificationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:8052:3: ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( ((LA123_0>=66 && LA123_0<=67)) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalAlf.g:8053:4: () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    {
            	    // InternalAlf.g:8053:4: ()
            	    // InternalAlf.g:8054:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalAlf.g:8063:4: ( (lv_operator_2_0= ruleEqualityOperator ) )
            	    // InternalAlf.g:8064:5: (lv_operator_2_0= ruleEqualityOperator )
            	    {
            	    // InternalAlf.g:8064:5: (lv_operator_2_0= ruleEqualityOperator )
            	    // InternalAlf.g:8065:6: lv_operator_2_0= ruleEqualityOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_operator_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.EqualityOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalAlf.g:8082:4: ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    // InternalAlf.g:8083:5: (lv_operand_3_0= ruleClassificationExpression )
            	    {
            	    // InternalAlf.g:8083:5: (lv_operand_3_0= ruleClassificationExpression )
            	    // InternalAlf.g:8084:6: lv_operand_3_0= ruleClassificationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperandClassificationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_106);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleClassificationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.ClassificationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "entryRuleEqualityOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8018:1: entryRuleEqualityOperator returns [String current=null] : iv_ruleEqualityOperator= ruleEqualityOperator EOF ;
=======
    // InternalAlf.g:8106:1: entryRuleEqualityOperator returns [String current=null] : iv_ruleEqualityOperator= ruleEqualityOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleEqualityOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEqualityOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8018:56: (iv_ruleEqualityOperator= ruleEqualityOperator EOF )
            // InternalAlf.g:8019:2: iv_ruleEqualityOperator= ruleEqualityOperator EOF
=======
            // InternalAlf.g:8106:56: (iv_ruleEqualityOperator= ruleEqualityOperator EOF )
            // InternalAlf.g:8107:2: iv_ruleEqualityOperator= ruleEqualityOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityOperator=ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityOperator"


    // $ANTLR start "ruleEqualityOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8025:1: ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
=======
    // InternalAlf.g:8113:1: ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleEqualityOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8031:2: ( (kw= '==' | kw= '!=' ) )
            // InternalAlf.g:8032:2: (kw= '==' | kw= '!=' )
=======
            // InternalAlf.g:8119:2: ( (kw= '==' | kw= '!=' ) )
            // InternalAlf.g:8120:2: (kw= '==' | kw= '!=' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8032:2: (kw= '==' | kw= '!=' )
=======
            // InternalAlf.g:8120:2: (kw= '==' | kw= '!=' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==66) ) {
                alt124=1;
            }
            else if ( (LA124_0==67) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8033:3: kw= '=='
=======
                    // InternalAlf.g:8121:3: kw= '=='
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8039:3: kw= '!='
=======
                    // InternalAlf.g:8127:3: kw= '!='
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "entryRuleClassificationExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8048:1: entryRuleClassificationExpression returns [EObject current=null] : iv_ruleClassificationExpression= ruleClassificationExpression EOF ;
=======
    // InternalAlf.g:8136:1: entryRuleClassificationExpression returns [EObject current=null] : iv_ruleClassificationExpression= ruleClassificationExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassificationExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8048:65: (iv_ruleClassificationExpression= ruleClassificationExpression EOF )
            // InternalAlf.g:8049:2: iv_ruleClassificationExpression= ruleClassificationExpression EOF
=======
            // InternalAlf.g:8136:65: (iv_ruleClassificationExpression= ruleClassificationExpression EOF )
            // InternalAlf.g:8137:2: iv_ruleClassificationExpression= ruleClassificationExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationExpression=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationExpression"


    // $ANTLR start "ruleClassificationExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8055:1: ruleClassificationExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) ;
=======
    // InternalAlf.g:8143:1: ruleClassificationExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8061:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) )
            // InternalAlf.g:8062:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
=======
            // InternalAlf.g:8149:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) )
            // InternalAlf.g:8150:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8062:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
            // InternalAlf.g:8063:3: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
=======
            // InternalAlf.g:8150:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
            // InternalAlf.g:8151:3: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_106);
=======
            pushFollow(FOLLOW_107);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8074:3: ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
=======
            // InternalAlf.g:8162:3: ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( ((LA125_0>=68 && LA125_0<=69)) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8075:4: () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
=======
                    // InternalAlf.g:8163:4: () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8075:4: ()
                    // InternalAlf.g:8076:5: 
=======
                    // InternalAlf.g:8163:4: ()
                    // InternalAlf.g:8164:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8085:4: ( (lv_operator_2_0= ruleClassificationOperator ) )
                    // InternalAlf.g:8086:5: (lv_operator_2_0= ruleClassificationOperator )
=======
                    // InternalAlf.g:8173:4: ( (lv_operator_2_0= ruleClassificationOperator ) )
                    // InternalAlf.g:8174:5: (lv_operator_2_0= ruleClassificationOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8086:5: (lv_operator_2_0= ruleClassificationOperator )
                    // InternalAlf.g:8087:6: lv_operator_2_0= ruleClassificationOperator
=======
                    // InternalAlf.g:8174:5: (lv_operator_2_0= ruleClassificationOperator )
                    // InternalAlf.g:8175:6: lv_operator_2_0= ruleClassificationOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_operator_2_0=ruleClassificationOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.omg.sysml.Alf.ClassificationOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8104:4: ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                    // InternalAlf.g:8105:5: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
=======
                    // InternalAlf.g:8192:4: ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                    // InternalAlf.g:8193:5: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8105:5: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                    // InternalAlf.g:8106:6: lv_ownedRelationship_3_0= ruleTypeReferenceMember
=======
                    // InternalAlf.g:8193:5: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                    // InternalAlf.g:8194:6: lv_ownedRelationship_3_0= ruleTypeReferenceMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_3_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.sysml.Alf.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationExpression"


    // $ANTLR start "entryRuleClassificationOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8128:1: entryRuleClassificationOperator returns [String current=null] : iv_ruleClassificationOperator= ruleClassificationOperator EOF ;
=======
    // InternalAlf.g:8216:1: entryRuleClassificationOperator returns [String current=null] : iv_ruleClassificationOperator= ruleClassificationOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleClassificationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleClassificationOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8128:62: (iv_ruleClassificationOperator= ruleClassificationOperator EOF )
            // InternalAlf.g:8129:2: iv_ruleClassificationOperator= ruleClassificationOperator EOF
=======
            // InternalAlf.g:8216:62: (iv_ruleClassificationOperator= ruleClassificationOperator EOF )
            // InternalAlf.g:8217:2: iv_ruleClassificationOperator= ruleClassificationOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationOperator=ruleClassificationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationOperator"


    // $ANTLR start "ruleClassificationOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8135:1: ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'instanceof' | kw= 'hastype' ) ;
=======
    // InternalAlf.g:8223:1: ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'instanceof' | kw= 'hastype' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleClassificationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8141:2: ( (kw= 'instanceof' | kw= 'hastype' ) )
            // InternalAlf.g:8142:2: (kw= 'instanceof' | kw= 'hastype' )
=======
            // InternalAlf.g:8229:2: ( (kw= 'instanceof' | kw= 'hastype' ) )
            // InternalAlf.g:8230:2: (kw= 'instanceof' | kw= 'hastype' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8142:2: (kw= 'instanceof' | kw= 'hastype' )
=======
            // InternalAlf.g:8230:2: (kw= 'instanceof' | kw= 'hastype' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==68) ) {
                alt126=1;
            }
            else if ( (LA126_0==69) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8143:3: kw= 'instanceof'
=======
                    // InternalAlf.g:8231:3: kw= 'instanceof'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8149:3: kw= 'hastype'
=======
                    // InternalAlf.g:8237:3: kw= 'hastype'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationOperator"


    // $ANTLR start "entryRuleRelationalExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8158:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
=======
    // InternalAlf.g:8246:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8158:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalAlf.g:8159:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
=======
            // InternalAlf.g:8246:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalAlf.g:8247:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8165:1: ruleRelationalExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* ) ;
=======
    // InternalAlf.g:8253:1: ruleRelationalExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8171:2: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* ) )
            // InternalAlf.g:8172:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* )
=======
            // InternalAlf.g:8259:2: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* ) )
            // InternalAlf.g:8260:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8172:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* )
            // InternalAlf.g:8173:3: this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )*
=======
            // InternalAlf.g:8260:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )* )
            // InternalAlf.g:8261:3: this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_107);
=======
            pushFollow(FOLLOW_108);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8184:3: ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )*
=======
            // InternalAlf.g:8272:3: ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( ((LA127_0>=70 && LA127_0<=73)) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8185:4: () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) )
=======
            	    // InternalAlf.g:8273:4: () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8185:4: ()
            	    // InternalAlf.g:8186:5: 
=======
            	    // InternalAlf.g:8273:4: ()
            	    // InternalAlf.g:8274:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8195:4: ( (lv_operator_2_0= ruleRelationalOperator ) )
            	    // InternalAlf.g:8196:5: (lv_operator_2_0= ruleRelationalOperator )
=======
            	    // InternalAlf.g:8283:4: ( (lv_operator_2_0= ruleRelationalOperator ) )
            	    // InternalAlf.g:8284:5: (lv_operator_2_0= ruleRelationalOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8196:5: (lv_operator_2_0= ruleRelationalOperator )
            	    // InternalAlf.g:8197:6: lv_operator_2_0= ruleRelationalOperator
=======
            	    // InternalAlf.g:8284:5: (lv_operator_2_0= ruleRelationalOperator )
            	    // InternalAlf.g:8285:6: lv_operator_2_0= ruleRelationalOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_72);
=======
            	    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operator_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.RelationalOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8214:4: ( (lv_operand_3_0= ruleAdditiveExpression ) )
            	    // InternalAlf.g:8215:5: (lv_operand_3_0= ruleAdditiveExpression )
=======
            	    // InternalAlf.g:8302:4: ( (lv_operand_3_0= ruleAdditiveExpression ) )
            	    // InternalAlf.g:8303:5: (lv_operand_3_0= ruleAdditiveExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8215:5: (lv_operand_3_0= ruleAdditiveExpression )
            	    // InternalAlf.g:8216:6: lv_operand_3_0= ruleAdditiveExpression
=======
            	    // InternalAlf.g:8303:5: (lv_operand_3_0= ruleAdditiveExpression )
            	    // InternalAlf.g:8304:6: lv_operand_3_0= ruleAdditiveExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperandAdditiveExpressionParserRuleCall_1_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_107);
=======
            	    pushFollow(FOLLOW_108);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.AdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleRelationalOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8238:1: entryRuleRelationalOperator returns [String current=null] : iv_ruleRelationalOperator= ruleRelationalOperator EOF ;
=======
    // InternalAlf.g:8326:1: entryRuleRelationalOperator returns [String current=null] : iv_ruleRelationalOperator= ruleRelationalOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8238:58: (iv_ruleRelationalOperator= ruleRelationalOperator EOF )
            // InternalAlf.g:8239:2: iv_ruleRelationalOperator= ruleRelationalOperator EOF
=======
            // InternalAlf.g:8326:58: (iv_ruleRelationalOperator= ruleRelationalOperator EOF )
            // InternalAlf.g:8327:2: iv_ruleRelationalOperator= ruleRelationalOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalOperator=ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8245:1: ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) ;
=======
    // InternalAlf.g:8333:1: ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8251:2: ( (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) )
            // InternalAlf.g:8252:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
=======
            // InternalAlf.g:8339:2: ( (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) )
            // InternalAlf.g:8340:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8252:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
=======
            // InternalAlf.g:8340:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt128=4;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt128=1;
                }
                break;
            case 71:
                {
                alt128=2;
                }
                break;
            case 72:
                {
                alt128=3;
                }
                break;
            case 73:
                {
                alt128=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8253:3: kw= '<'
=======
                    // InternalAlf.g:8341:3: kw= '<'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8259:3: kw= '>'
=======
                    // InternalAlf.g:8347:3: kw= '>'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8265:3: kw= '<='
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAlf.g:8271:3: kw= '>='
=======
                    // InternalAlf.g:8353:3: kw= '<='
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAlf.g:8359:3: kw= '>='
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleAdditiveExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8280:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
=======
    // InternalAlf.g:8368:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8280:59: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // InternalAlf.g:8281:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
=======
            // InternalAlf.g:8368:59: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // InternalAlf.g:8369:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8287:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) ;
=======
    // InternalAlf.g:8375:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8293:2: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // InternalAlf.g:8294:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
=======
            // InternalAlf.g:8381:2: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // InternalAlf.g:8382:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8294:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            // InternalAlf.g:8295:3: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
=======
            // InternalAlf.g:8382:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            // InternalAlf.g:8383:3: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_108);
=======
            pushFollow(FOLLOW_109);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8306:3: ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
=======
            // InternalAlf.g:8394:3: ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( ((LA129_0>=74 && LA129_0<=75)) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8307:4: () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
=======
            	    // InternalAlf.g:8395:4: () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8307:4: ()
            	    // InternalAlf.g:8308:5: 
=======
            	    // InternalAlf.g:8395:4: ()
            	    // InternalAlf.g:8396:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8317:4: ( (lv_operator_2_0= ruleAdditiveOperator ) )
            	    // InternalAlf.g:8318:5: (lv_operator_2_0= ruleAdditiveOperator )
=======
            	    // InternalAlf.g:8405:4: ( (lv_operator_2_0= ruleAdditiveOperator ) )
            	    // InternalAlf.g:8406:5: (lv_operator_2_0= ruleAdditiveOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8318:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    // InternalAlf.g:8319:6: lv_operator_2_0= ruleAdditiveOperator
=======
            	    // InternalAlf.g:8406:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    // InternalAlf.g:8407:6: lv_operator_2_0= ruleAdditiveOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_72);
=======
            	    pushFollow(FOLLOW_73);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operator_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.AdditiveOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8336:4: ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    // InternalAlf.g:8337:5: (lv_operand_3_0= ruleMultiplicativeExpression )
=======
            	    // InternalAlf.g:8424:4: ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    // InternalAlf.g:8425:5: (lv_operand_3_0= ruleMultiplicativeExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8337:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    // InternalAlf.g:8338:6: lv_operand_3_0= ruleMultiplicativeExpression
=======
            	    // InternalAlf.g:8425:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    // InternalAlf.g:8426:6: lv_operand_3_0= ruleMultiplicativeExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperandMultiplicativeExpressionParserRuleCall_1_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_108);
=======
            	    pushFollow(FOLLOW_109);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.MultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleAdditiveOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8360:1: entryRuleAdditiveOperator returns [String current=null] : iv_ruleAdditiveOperator= ruleAdditiveOperator EOF ;
    public final String entryRuleAdditiveOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAdditiveOperator = null;


        try {
            // InternalAlf.g:8360:56: (iv_ruleAdditiveOperator= ruleAdditiveOperator EOF )
            // InternalAlf.g:8361:2: iv_ruleAdditiveOperator= ruleAdditiveOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveOperator=ruleAdditiveOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveOperator"


    // $ANTLR start "ruleAdditiveOperator"
    // InternalAlf.g:8367:1: ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleAdditiveOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAlf.g:8373:2: ( (kw= '+' | kw= '-' ) )
            // InternalAlf.g:8374:2: (kw= '+' | kw= '-' )
            {
            // InternalAlf.g:8374:2: (kw= '+' | kw= '-' )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==74) ) {
                alt130=1;
            }
            else if ( (LA130_0==75) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalAlf.g:8375:3: kw= '+'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAlf.g:8381:3: kw= '-'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveOperator"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalAlf.g:8390:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // InternalAlf.g:8390:65: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // InternalAlf.g:8391:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalAlf.g:8397:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnitsExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:8403:2: ( (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* ) )
            // InternalAlf.g:8404:2: (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* )
            {
            // InternalAlf.g:8404:2: (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* )
            // InternalAlf.g:8405:3: this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnitsExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_UnitsExpression_0=ruleUnitsExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitsExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:8416:3: ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==19||(LA131_0>=76 && LA131_0<=77)) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalAlf.g:8417:4: () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) )
            	    {
            	    // InternalAlf.g:8417:4: ()
            	    // InternalAlf.g:8418:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalAlf.g:8427:4: ( (lv_operator_2_0= ruleMultiplicativeOperator ) )
            	    // InternalAlf.g:8428:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    {
            	    // InternalAlf.g:8428:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    // InternalAlf.g:8429:6: lv_operator_2_0= ruleMultiplicativeOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_operator_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.MultiplicativeOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalAlf.g:8446:4: ( (lv_operand_3_0= ruleUnitsExpression ) )
            	    // InternalAlf.g:8447:5: (lv_operand_3_0= ruleUnitsExpression )
            	    {
            	    // InternalAlf.g:8447:5: (lv_operand_3_0= ruleUnitsExpression )
            	    // InternalAlf.g:8448:6: lv_operand_3_0= ruleUnitsExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperandUnitsExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_109);
=======
    // InternalAlf.g:8448:1: entryRuleAdditiveOperator returns [String current=null] : iv_ruleAdditiveOperator= ruleAdditiveOperator EOF ;
    public final String entryRuleAdditiveOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAdditiveOperator = null;


        try {
            // InternalAlf.g:8448:56: (iv_ruleAdditiveOperator= ruleAdditiveOperator EOF )
            // InternalAlf.g:8449:2: iv_ruleAdditiveOperator= ruleAdditiveOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveOperator=ruleAdditiveOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveOperator"


    // $ANTLR start "ruleAdditiveOperator"
    // InternalAlf.g:8455:1: ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleAdditiveOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAlf.g:8461:2: ( (kw= '+' | kw= '-' ) )
            // InternalAlf.g:8462:2: (kw= '+' | kw= '-' )
            {
            // InternalAlf.g:8462:2: (kw= '+' | kw= '-' )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==74) ) {
                alt130=1;
            }
            else if ( (LA130_0==75) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalAlf.g:8463:3: kw= '+'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAlf.g:8469:3: kw= '-'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveOperator"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalAlf.g:8478:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // InternalAlf.g:8478:65: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // InternalAlf.g:8479:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalAlf.g:8485:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnitsExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalAlf.g:8491:2: ( (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* ) )
            // InternalAlf.g:8492:2: (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* )
            {
            // InternalAlf.g:8492:2: (this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )* )
            // InternalAlf.g:8493:3: this_UnitsExpression_0= ruleUnitsExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnitsExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_110);
            this_UnitsExpression_0=ruleUnitsExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnitsExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAlf.g:8504:3: ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==19||(LA131_0>=76 && LA131_0<=77)) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalAlf.g:8505:4: () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleUnitsExpression ) )
            	    {
            	    // InternalAlf.g:8505:4: ()
            	    // InternalAlf.g:8506:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalAlf.g:8515:4: ( (lv_operator_2_0= ruleMultiplicativeOperator ) )
            	    // InternalAlf.g:8516:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    {
            	    // InternalAlf.g:8516:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    // InternalAlf.g:8517:6: lv_operator_2_0= ruleMultiplicativeOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_operator_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.sysml.Alf.MultiplicativeOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalAlf.g:8534:4: ( (lv_operand_3_0= ruleUnitsExpression ) )
            	    // InternalAlf.g:8535:5: (lv_operand_3_0= ruleUnitsExpression )
            	    {
            	    // InternalAlf.g:8535:5: (lv_operand_3_0= ruleUnitsExpression )
            	    // InternalAlf.g:8536:6: lv_operand_3_0= ruleUnitsExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperandUnitsExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_110);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_3_0=ruleUnitsExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.sysml.Alf.UnitsExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleMultiplicativeOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8470:1: entryRuleMultiplicativeOperator returns [String current=null] : iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF ;
=======
    // InternalAlf.g:8558:1: entryRuleMultiplicativeOperator returns [String current=null] : iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleMultiplicativeOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiplicativeOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8470:62: (iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF )
            // InternalAlf.g:8471:2: iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF
=======
            // InternalAlf.g:8558:62: (iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF )
            // InternalAlf.g:8559:2: iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeOperator=ruleMultiplicativeOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeOperator"


    // $ANTLR start "ruleMultiplicativeOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8477:1: ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '**' ) ;
=======
    // InternalAlf.g:8565:1: ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '**' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleMultiplicativeOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8483:2: ( (kw= '*' | kw= '/' | kw= '**' ) )
            // InternalAlf.g:8484:2: (kw= '*' | kw= '/' | kw= '**' )
=======
            // InternalAlf.g:8571:2: ( (kw= '*' | kw= '/' | kw= '**' ) )
            // InternalAlf.g:8572:2: (kw= '*' | kw= '/' | kw= '**' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8484:2: (kw= '*' | kw= '/' | kw= '**' )
=======
            // InternalAlf.g:8572:2: (kw= '*' | kw= '/' | kw= '**' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt132=3;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt132=1;
                }
                break;
            case 76:
                {
                alt132=2;
                }
                break;
            case 77:
                {
                alt132=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }

            switch (alt132) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8485:3: kw= '*'
=======
                    // InternalAlf.g:8573:3: kw= '*'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8491:3: kw= '/'
=======
                    // InternalAlf.g:8579:3: kw= '/'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8497:3: kw= '**'
=======
                    // InternalAlf.g:8585:3: kw= '**'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskAsteriskKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeOperator"


    // $ANTLR start "entryRuleUnitsExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8506:1: entryRuleUnitsExpression returns [EObject current=null] : iv_ruleUnitsExpression= ruleUnitsExpression EOF ;
=======
    // InternalAlf.g:8594:1: entryRuleUnitsExpression returns [EObject current=null] : iv_ruleUnitsExpression= ruleUnitsExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleUnitsExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitsExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8506:56: (iv_ruleUnitsExpression= ruleUnitsExpression EOF )
            // InternalAlf.g:8507:2: iv_ruleUnitsExpression= ruleUnitsExpression EOF
=======
            // InternalAlf.g:8594:56: (iv_ruleUnitsExpression= ruleUnitsExpression EOF )
            // InternalAlf.g:8595:2: iv_ruleUnitsExpression= ruleUnitsExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitsExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitsExpression=ruleUnitsExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitsExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitsExpression"


    // $ANTLR start "ruleUnitsExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8513:1: ruleUnitsExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? ) ;
=======
    // InternalAlf.g:8601:1: ruleUnitsExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleUnitsExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_UnaryExpression_0 = null;

        EObject lv_operand_4_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8519:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? ) )
            // InternalAlf.g:8520:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? )
=======
            // InternalAlf.g:8607:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? ) )
            // InternalAlf.g:8608:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8520:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? )
            // InternalAlf.g:8521:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )?
=======
            // InternalAlf.g:8608:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )? )
            // InternalAlf.g:8609:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitsExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_110);
=======
            pushFollow(FOLLOW_111);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8532:3: ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )?
=======
            // InternalAlf.g:8620:3: ( () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==78) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8533:4: () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']'
=======
                    // InternalAlf.g:8621:4: () ( (lv_operator_2_0= '@' ) ) otherlv_3= '[' ( (lv_operand_4_0= ruleExpression ) ) otherlv_5= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8533:4: ()
                    // InternalAlf.g:8534:5: 
=======
                    // InternalAlf.g:8621:4: ()
                    // InternalAlf.g:8622:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getUnitsExpressionAccess().getOperatorExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8543:4: ( (lv_operator_2_0= '@' ) )
                    // InternalAlf.g:8544:5: (lv_operator_2_0= '@' )
=======
                    // InternalAlf.g:8631:4: ( (lv_operator_2_0= '@' ) )
                    // InternalAlf.g:8632:5: (lv_operator_2_0= '@' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8544:5: (lv_operator_2_0= '@' )
                    // InternalAlf.g:8545:6: lv_operator_2_0= '@'
=======
                    // InternalAlf.g:8632:5: (lv_operator_2_0= '@' )
                    // InternalAlf.g:8633:6: lv_operator_2_0= '@'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    lv_operator_2_0=(Token)match(input,78,FOLLOW_111); if (state.failed) return current;
=======
                    lv_operator_2_0=(Token)match(input,78,FOLLOW_112); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_2_0, grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitsExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_2_0, "@");
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_3=(Token)match(input,53,FOLLOW_72); if (state.failed) return current;
=======
                    otherlv_3=(Token)match(input,53,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUnitsExpressionAccess().getLeftSquareBracketKeyword_1_2());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8561:4: ( (lv_operand_4_0= ruleExpression ) )
                    // InternalAlf.g:8562:5: (lv_operand_4_0= ruleExpression )
=======
                    // InternalAlf.g:8649:4: ( (lv_operand_4_0= ruleExpression ) )
                    // InternalAlf.g:8650:5: (lv_operand_4_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8562:5: (lv_operand_4_0= ruleExpression )
                    // InternalAlf.g:8563:6: lv_operand_4_0= ruleExpression
=======
                    // InternalAlf.g:8650:5: (lv_operand_4_0= ruleExpression )
                    // InternalAlf.g:8651:6: lv_operand_4_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitsExpressionAccess().getOperandExpressionParserRuleCall_1_3_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_79);
=======
                    pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_operand_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitsExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_4_0,
                      							"org.omg.sysml.Alf.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getUnitsExpressionAccess().getRightSquareBracketKeyword_1_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitsExpression"


    // $ANTLR start "entryRuleUnaryExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8589:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
=======
    // InternalAlf.g:8677:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8589:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalAlf.g:8590:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
=======
            // InternalAlf.g:8677:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalAlf.g:8678:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8596:1: ruleUnaryExpression returns [EObject current=null] : (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) ) ;
=======
    // InternalAlf.g:8684:1: ruleUnaryExpression returns [EObject current=null] : (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SequenceAccessExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8602:2: ( (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) ) )
            // InternalAlf.g:8603:2: (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) )
=======
            // InternalAlf.g:8690:2: ( (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) ) )
            // InternalAlf.g:8691:2: (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8603:2: (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) )
=======
            // InternalAlf.g:8691:2: (this_SequenceAccessExpression_0= ruleSequenceAccessExpression | ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( ((LA134_0>=RULE_BOOLEAN_VALUE && LA134_0<=RULE_UNRESTRICTED_NAME)||(LA134_0>=18 && LA134_0<=19)||LA134_0==23||LA134_0==42||(LA134_0>=83 && LA134_0<=84)) ) {
                alt134=1;
            }
            else if ( ((LA134_0>=74 && LA134_0<=75)||(LA134_0>=79 && LA134_0<=80)) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8604:3: this_SequenceAccessExpression_0= ruleSequenceAccessExpression
=======
                    // InternalAlf.g:8692:3: this_SequenceAccessExpression_0= ruleSequenceAccessExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getSequenceAccessExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceAccessExpression_0=ruleSequenceAccessExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceAccessExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8616:3: ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) )
=======
                    // InternalAlf.g:8704:3: ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8616:3: ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) )
                    // InternalAlf.g:8617:4: () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) )
=======
                    // InternalAlf.g:8704:3: ( () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) ) )
                    // InternalAlf.g:8705:4: () ( (lv_operator_2_0= ruleUnaryOperator ) ) ( (lv_operand_3_0= ruleSequenceAccessExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8617:4: ()
                    // InternalAlf.g:8618:5: 
=======
                    // InternalAlf.g:8705:4: ()
                    // InternalAlf.g:8706:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8627:4: ( (lv_operator_2_0= ruleUnaryOperator ) )
                    // InternalAlf.g:8628:5: (lv_operator_2_0= ruleUnaryOperator )
=======
                    // InternalAlf.g:8715:4: ( (lv_operator_2_0= ruleUnaryOperator ) )
                    // InternalAlf.g:8716:5: (lv_operator_2_0= ruleUnaryOperator )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8628:5: (lv_operator_2_0= ruleUnaryOperator )
                    // InternalAlf.g:8629:6: lv_operator_2_0= ruleUnaryOperator
=======
                    // InternalAlf.g:8716:5: (lv_operator_2_0= ruleUnaryOperator )
                    // InternalAlf.g:8717:6: lv_operator_2_0= ruleUnaryOperator
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_1_1_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_112);
=======
                    pushFollow(FOLLOW_113);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_operator_2_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.omg.sysml.Alf.UnaryOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8646:4: ( (lv_operand_3_0= ruleSequenceAccessExpression ) )
                    // InternalAlf.g:8647:5: (lv_operand_3_0= ruleSequenceAccessExpression )
=======
                    // InternalAlf.g:8734:4: ( (lv_operand_3_0= ruleSequenceAccessExpression ) )
                    // InternalAlf.g:8735:5: (lv_operand_3_0= ruleSequenceAccessExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8647:5: (lv_operand_3_0= ruleSequenceAccessExpression )
                    // InternalAlf.g:8648:6: lv_operand_3_0= ruleSequenceAccessExpression
=======
                    // InternalAlf.g:8735:5: (lv_operand_3_0= ruleSequenceAccessExpression )
                    // InternalAlf.g:8736:6: lv_operand_3_0= ruleSequenceAccessExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperandSequenceAccessExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_3_0=ruleSequenceAccessExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.sysml.Alf.SequenceAccessExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRuleUnaryOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8670:1: entryRuleUnaryOperator returns [String current=null] : iv_ruleUnaryOperator= ruleUnaryOperator EOF ;
=======
    // InternalAlf.g:8758:1: entryRuleUnaryOperator returns [String current=null] : iv_ruleUnaryOperator= ruleUnaryOperator EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleUnaryOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperator = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8670:53: (iv_ruleUnaryOperator= ruleUnaryOperator EOF )
            // InternalAlf.g:8671:2: iv_ruleUnaryOperator= ruleUnaryOperator EOF
=======
            // InternalAlf.g:8758:53: (iv_ruleUnaryOperator= ruleUnaryOperator EOF )
            // InternalAlf.g:8759:2: iv_ruleUnaryOperator= ruleUnaryOperator EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryOperator=ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperator"


    // $ANTLR start "ruleUnaryOperator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8677:1: ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '!' | kw= '~' ) ;
=======
    // InternalAlf.g:8765:1: ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '!' | kw= '~' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleUnaryOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8683:2: ( (kw= '+' | kw= '-' | kw= '!' | kw= '~' ) )
            // InternalAlf.g:8684:2: (kw= '+' | kw= '-' | kw= '!' | kw= '~' )
=======
            // InternalAlf.g:8771:2: ( (kw= '+' | kw= '-' | kw= '!' | kw= '~' ) )
            // InternalAlf.g:8772:2: (kw= '+' | kw= '-' | kw= '!' | kw= '~' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8684:2: (kw= '+' | kw= '-' | kw= '!' | kw= '~' )
=======
            // InternalAlf.g:8772:2: (kw= '+' | kw= '-' | kw= '!' | kw= '~' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt135=4;
            switch ( input.LA(1) ) {
            case 74:
                {
                alt135=1;
                }
                break;
            case 75:
                {
                alt135=2;
                }
                break;
            case 79:
                {
                alt135=3;
                }
                break;
            case 80:
                {
                alt135=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }

            switch (alt135) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8685:3: kw= '+'
=======
                    // InternalAlf.g:8773:3: kw= '+'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8691:3: kw= '-'
=======
                    // InternalAlf.g:8779:3: kw= '-'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8697:3: kw= '!'
=======
                    // InternalAlf.g:8785:3: kw= '!'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8703:3: kw= '~'
=======
                    // InternalAlf.g:8791:3: kw= '~'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getTildeKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "entryRuleSequenceAccessExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8712:1: entryRuleSequenceAccessExpression returns [EObject current=null] : iv_ruleSequenceAccessExpression= ruleSequenceAccessExpression EOF ;
=======
    // InternalAlf.g:8800:1: entryRuleSequenceAccessExpression returns [EObject current=null] : iv_ruleSequenceAccessExpression= ruleSequenceAccessExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleSequenceAccessExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceAccessExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8712:65: (iv_ruleSequenceAccessExpression= ruleSequenceAccessExpression EOF )
            // InternalAlf.g:8713:2: iv_ruleSequenceAccessExpression= ruleSequenceAccessExpression EOF
=======
            // InternalAlf.g:8800:65: (iv_ruleSequenceAccessExpression= ruleSequenceAccessExpression EOF )
            // InternalAlf.g:8801:2: iv_ruleSequenceAccessExpression= ruleSequenceAccessExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceAccessExpression=ruleSequenceAccessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceAccessExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceAccessExpression"


    // $ANTLR start "ruleSequenceAccessExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8719:1: ruleSequenceAccessExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? ) ;
=======
    // InternalAlf.g:8807:1: ruleSequenceAccessExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleSequenceAccessExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        Token otherlv_4=null;
        EObject this_PrimaryExpression_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8725:2: ( (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? ) )
            // InternalAlf.g:8726:2: (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? )
=======
            // InternalAlf.g:8813:2: ( (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? ) )
            // InternalAlf.g:8814:2: (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8726:2: (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? )
            // InternalAlf.g:8727:3: this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )?
=======
            // InternalAlf.g:8814:2: (this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )? )
            // InternalAlf.g:8815:3: this_PrimaryExpression_0= rulePrimaryExpression ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceAccessExpressionAccess().getPrimaryExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_86);
=======
            pushFollow(FOLLOW_87);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_PrimaryExpression_0=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8738:3: ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )?
=======
            // InternalAlf.g:8826:3: ( () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==53) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8739:4: () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']'
=======
                    // InternalAlf.g:8827:4: () ( (lv_operator_2_0= '[' ) ) ( (lv_operand_3_0= ruleExpression ) ) otherlv_4= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8739:4: ()
                    // InternalAlf.g:8740:5: 
=======
                    // InternalAlf.g:8827:4: ()
                    // InternalAlf.g:8828:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getSequenceAccessExpressionAccess().getOperatorExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8749:4: ( (lv_operator_2_0= '[' ) )
                    // InternalAlf.g:8750:5: (lv_operator_2_0= '[' )
=======
                    // InternalAlf.g:8837:4: ( (lv_operator_2_0= '[' ) )
                    // InternalAlf.g:8838:5: (lv_operator_2_0= '[' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8750:5: (lv_operator_2_0= '[' )
                    // InternalAlf.g:8751:6: lv_operator_2_0= '['
=======
                    // InternalAlf.g:8838:5: (lv_operator_2_0= '[' )
                    // InternalAlf.g:8839:6: lv_operator_2_0= '['
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    lv_operator_2_0=(Token)match(input,53,FOLLOW_72); if (state.failed) return current;
=======
                    lv_operator_2_0=(Token)match(input,53,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_2_0, grammarAccess.getSequenceAccessExpressionAccess().getOperatorLeftSquareBracketKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSequenceAccessExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_2_0, "[");
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8763:4: ( (lv_operand_3_0= ruleExpression ) )
                    // InternalAlf.g:8764:5: (lv_operand_3_0= ruleExpression )
=======
                    // InternalAlf.g:8851:4: ( (lv_operand_3_0= ruleExpression ) )
                    // InternalAlf.g:8852:5: (lv_operand_3_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8764:5: (lv_operand_3_0= ruleExpression )
                    // InternalAlf.g:8765:6: lv_operand_3_0= ruleExpression
=======
                    // InternalAlf.g:8852:5: (lv_operand_3_0= ruleExpression )
                    // InternalAlf.g:8853:6: lv_operand_3_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSequenceAccessExpressionAccess().getOperandExpressionParserRuleCall_1_2_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_79);
=======
                    pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_operand_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSequenceAccessExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.sysml.Alf.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSequenceAccessExpressionAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceAccessExpression"


    // $ANTLR start "entryRulePrimaryExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8791:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
=======
    // InternalAlf.g:8879:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8791:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalAlf.g:8792:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
=======
            // InternalAlf.g:8879:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalAlf.g:8880:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8798:1: rulePrimaryExpression returns [EObject current=null] : (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* ) ;
=======
    // InternalAlf.g:8886:1: rulePrimaryExpression returns [EObject current=null] : (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_BaseExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8804:2: ( (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* ) )
            // InternalAlf.g:8805:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* )
=======
            // InternalAlf.g:8892:2: ( (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* ) )
            // InternalAlf.g:8893:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8805:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* )
            // InternalAlf.g:8806:3: this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )*
=======
            // InternalAlf.g:8893:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )* )
            // InternalAlf.g:8894:3: this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_113);
=======
            pushFollow(FOLLOW_114);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_BaseExpression_0=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BaseExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8817:3: ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )*
=======
            // InternalAlf.g:8905:3: ( () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+ )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==81) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8818:4: () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+
=======
            	    // InternalAlf.g:8906:4: () otherlv_2= '->' ( (lv_operator_3_0= ruleName ) ) ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8818:4: ()
            	    // InternalAlf.g:8819:5: 
=======
            	    // InternalAlf.g:8906:4: ()
            	    // InternalAlf.g:8907:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    otherlv_2=(Token)match(input,81,FOLLOW_15); if (state.failed) return current;
=======
            	    otherlv_2=(Token)match(input,81,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8832:4: ( (lv_operator_3_0= ruleName ) )
            	    // InternalAlf.g:8833:5: (lv_operator_3_0= ruleName )
=======
            	    // InternalAlf.g:8920:4: ( (lv_operator_3_0= ruleName ) )
            	    // InternalAlf.g:8921:5: (lv_operator_3_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8833:5: (lv_operator_3_0= ruleName )
            	    // InternalAlf.g:8834:6: lv_operator_3_0= ruleName
=======
            	    // InternalAlf.g:8921:5: (lv_operator_3_0= ruleName )
            	    // InternalAlf.g:8922:6: lv_operator_3_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperatorNameParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_operator_3_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_3_0,
            	      							"org.omg.sysml.Alf.Name");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:8851:4: ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+
=======
            	    // InternalAlf.g:8939:4: ( (lv_ownedRelationship_4_0= ruleBodyMember ) )+
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    int cnt137=0;
            	    loop137:
            	    do {
            	        int alt137=2;
            	        int LA137_0 = input.LA(1);

            	        if ( ((LA137_0>=RULE_ID && LA137_0<=RULE_UNRESTRICTED_NAME)) ) {
            	            alt137=1;
            	        }


            	        switch (alt137) {
            	    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:8852:5: (lv_ownedRelationship_4_0= ruleBodyMember )
=======
            	    	    // InternalAlf.g:8940:5: (lv_ownedRelationship_4_0= ruleBodyMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    // InternalAlf.g:8852:5: (lv_ownedRelationship_4_0= ruleBodyMember )
            	    	    // InternalAlf.g:8853:6: lv_ownedRelationship_4_0= ruleBodyMember
=======
            	    	    // InternalAlf.g:8940:5: (lv_ownedRelationship_4_0= ruleBodyMember )
            	    	    // InternalAlf.g:8941:6: lv_ownedRelationship_4_0= ruleBodyMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipBodyMemberParserRuleCall_1_3_0());
            	    	      					
            	    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    	    pushFollow(FOLLOW_114);
=======
            	    	    pushFollow(FOLLOW_115);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    	    lv_ownedRelationship_4_0=ruleBodyMember();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						if (current==null) {
            	    	      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	    	      						}
            	    	      						add(
            	    	      							current,
            	    	      							"ownedRelationship",
            	    	      							lv_ownedRelationship_4_0,
            	    	      							"org.omg.sysml.Alf.BodyMember");
            	    	      						afterParserOrEnumRuleCall();
            	    	      					
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt137 >= 1 ) break loop137;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(137, input);
            	                throw eee;
            	        }
            	        cnt137++;
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleBodyExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8875:1: entryRuleBodyExpression returns [EObject current=null] : iv_ruleBodyExpression= ruleBodyExpression EOF ;
=======
    // InternalAlf.g:8963:1: entryRuleBodyExpression returns [EObject current=null] : iv_ruleBodyExpression= ruleBodyExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBodyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8875:55: (iv_ruleBodyExpression= ruleBodyExpression EOF )
            // InternalAlf.g:8876:2: iv_ruleBodyExpression= ruleBodyExpression EOF
=======
            // InternalAlf.g:8963:55: (iv_ruleBodyExpression= ruleBodyExpression EOF )
            // InternalAlf.g:8964:2: iv_ruleBodyExpression= ruleBodyExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyExpression=ruleBodyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyExpression"


    // $ANTLR start "ruleBodyExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8882:1: ruleBodyExpression returns [EObject current=null] : ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) ) ;
=======
    // InternalAlf.g:8970:1: ruleBodyExpression returns [EObject current=null] : ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBodyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8888:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) ) )
            // InternalAlf.g:8889:2: ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) )
=======
            // InternalAlf.g:8976:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) ) )
            // InternalAlf.g:8977:2: ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8889:2: ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) )
=======
            // InternalAlf.g:8977:2: ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) | ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==RULE_ID) ) {
                int LA140_1 = input.LA(2);

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (synpred200_InternalAlf()) ) {
=======
                if ( (synpred201_InternalAlf()) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA140_0==RULE_UNRESTRICTED_NAME) ) {
                int LA140_2 = input.LA(2);

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (synpred200_InternalAlf()) ) {
=======
                if ( (synpred201_InternalAlf()) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8890:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
=======
                    // InternalAlf.g:8978:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8890:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
                    // InternalAlf.g:8891:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')'
=======
                    // InternalAlf.g:8978:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
                    // InternalAlf.g:8979:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8891:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) )
                    // InternalAlf.g:8892:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
=======
                    // InternalAlf.g:8979:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) )
                    // InternalAlf.g:8980:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8892:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
                    // InternalAlf.g:8893:6: lv_ownedRelationship_0_0= ruleBodyParameterMember
=======
                    // InternalAlf.g:8980:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
                    // InternalAlf.g:8981:6: lv_ownedRelationship_0_0= ruleBodyParameterMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_115);
=======
                    pushFollow(FOLLOW_116);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_0_0=ruleBodyParameterMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_0_0,
                      							"org.omg.sysml.Alf.BodyParameterMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8910:4: ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )*
=======
                    // InternalAlf.g:8998:4: ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    loop139:
                    do {
                        int alt139=2;
                        int LA139_0 = input.LA(1);

                        if ( ((LA139_0>=RULE_ID && LA139_0<=RULE_UNRESTRICTED_NAME)) ) {
                            alt139=1;
                        }


                        switch (alt139) {
                    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:8911:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
=======
                    	    // InternalAlf.g:8999:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:8911:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
                    	    // InternalAlf.g:8912:6: lv_ownedRelationship_1_0= ruleBodyParameterMember
=======
                    	    // InternalAlf.g:8999:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
                    	    // InternalAlf.g:9000:6: lv_ownedRelationship_1_0= ruleBodyParameterMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0());
                    	      					
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_115);
=======
                    	    pushFollow(FOLLOW_116);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    lv_ownedRelationship_1_0=ruleBodyParameterMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"ownedRelationship",
                    	      							lv_ownedRelationship_1_0,
                    	      							"org.omg.sysml.Alf.BodyParameterMember");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop139;
                        }
                    } while (true);

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_2=(Token)match(input,42,FOLLOW_72); if (state.failed) return current;
=======
                    otherlv_2=(Token)match(input,42,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getBodyExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8933:4: ( (lv_ownedRelationship_3_0= ruleExpressionMember ) )
                    // InternalAlf.g:8934:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
=======
                    // InternalAlf.g:9021:4: ( (lv_ownedRelationship_3_0= ruleExpressionMember ) )
                    // InternalAlf.g:9022:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8934:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
                    // InternalAlf.g:8935:6: lv_ownedRelationship_3_0= ruleExpressionMember
=======
                    // InternalAlf.g:9022:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
                    // InternalAlf.g:9023:6: lv_ownedRelationship_3_0= ruleExpressionMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipExpressionMemberParserRuleCall_0_3_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_116);
=======
                    pushFollow(FOLLOW_117);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_3_0=ruleExpressionMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.sysml.Alf.ExpressionMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getBodyExpressionAccess().getRightParenthesisKeyword_0_4());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8958:3: ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) )
=======
                    // InternalAlf.g:9046:3: ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8958:3: ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) )
                    // InternalAlf.g:8959:4: (lv_ownedRelationship_5_0= ruleExpressionTyping )
=======
                    // InternalAlf.g:9046:3: ( (lv_ownedRelationship_5_0= ruleExpressionTyping ) )
                    // InternalAlf.g:9047:4: (lv_ownedRelationship_5_0= ruleExpressionTyping )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:8959:4: (lv_ownedRelationship_5_0= ruleExpressionTyping )
                    // InternalAlf.g:8960:5: lv_ownedRelationship_5_0= ruleExpressionTyping
=======
                    // InternalAlf.g:9047:4: (lv_ownedRelationship_5_0= ruleExpressionTyping )
                    // InternalAlf.g:9048:5: lv_ownedRelationship_5_0= ruleExpressionTyping
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipExpressionTypingParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_5_0=ruleExpressionTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_5_0,
                      						"org.omg.sysml.Alf.ExpressionTyping");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyExpression"


    // $ANTLR start "entryRuleExpressionTyping"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8981:1: entryRuleExpressionTyping returns [EObject current=null] : iv_ruleExpressionTyping= ruleExpressionTyping EOF ;
=======
    // InternalAlf.g:9069:1: entryRuleExpressionTyping returns [EObject current=null] : iv_ruleExpressionTyping= ruleExpressionTyping EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleExpressionTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionTyping = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8981:57: (iv_ruleExpressionTyping= ruleExpressionTyping EOF )
            // InternalAlf.g:8982:2: iv_ruleExpressionTyping= ruleExpressionTyping EOF
=======
            // InternalAlf.g:9069:57: (iv_ruleExpressionTyping= ruleExpressionTyping EOF )
            // InternalAlf.g:9070:2: iv_ruleExpressionTyping= ruleExpressionTyping EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionTyping=ruleExpressionTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionTyping"


    // $ANTLR start "ruleExpressionTyping"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:8988:1: ruleExpressionTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
=======
    // InternalAlf.g:9076:1: ruleExpressionTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleExpressionTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8994:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:8995:2: ( ( ruleQualifiedName ) )
=======
            // InternalAlf.g:9082:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:9083:2: ( ( ruleQualifiedName ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8995:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:8996:3: ( ruleQualifiedName )
=======
            // InternalAlf.g:9083:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:9084:3: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:8996:3: ( ruleQualifiedName )
            // InternalAlf.g:8997:4: ruleQualifiedName
=======
            // InternalAlf.g:9084:3: ( ruleQualifiedName )
            // InternalAlf.g:9085:4: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getExpressionTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionTypingAccess().getTypeFunctionCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionTyping"


    // $ANTLR start "entryRuleBaseExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9017:1: entryRuleBaseExpression returns [EObject current=null] : iv_ruleBaseExpression= ruleBaseExpression EOF ;
=======
    // InternalAlf.g:9105:1: entryRuleBaseExpression returns [EObject current=null] : iv_ruleBaseExpression= ruleBaseExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBaseExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9017:55: (iv_ruleBaseExpression= ruleBaseExpression EOF )
            // InternalAlf.g:9018:2: iv_ruleBaseExpression= ruleBaseExpression EOF
=======
            // InternalAlf.g:9105:55: (iv_ruleBaseExpression= ruleBaseExpression EOF )
            // InternalAlf.g:9106:2: iv_ruleBaseExpression= ruleBaseExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseExpression=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseExpression"


    // $ANTLR start "ruleBaseExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9024:1: ruleBaseExpression returns [EObject current=null] : (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) ) ;
=======
    // InternalAlf.g:9112:1: ruleBaseExpression returns [EObject current=null] : (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBaseExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject this_NullExpression_0 = null;

        EObject this_LiteralExpression_1 = null;

        EObject this_FeatureReferenceExpression_2 = null;

        EObject this_QueryPathExpression_3 = null;

        EObject this_InvocationExpression_4 = null;

        EObject this_ClassExtentExpression_5 = null;

        EObject this_SequenceConstructionExpression_6 = null;

        EObject this_Expression_8 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9030:2: ( (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) ) )
            // InternalAlf.g:9031:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) )
=======
            // InternalAlf.g:9118:2: ( (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) ) )
            // InternalAlf.g:9119:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9031:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) )
=======
            // InternalAlf.g:9119:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt141=8;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9032:3: this_NullExpression_0= ruleNullExpression
=======
                    // InternalAlf.g:9120:3: this_NullExpression_0= ruleNullExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NullExpression_0=ruleNullExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9044:3: this_LiteralExpression_1= ruleLiteralExpression
=======
                    // InternalAlf.g:9132:3: this_LiteralExpression_1= ruleLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralExpression_1=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9056:3: this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression
=======
                    // InternalAlf.g:9144:3: this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureReferenceExpression_2=ruleFeatureReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureReferenceExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9068:3: this_QueryPathExpression_3= ruleQueryPathExpression
=======
                    // InternalAlf.g:9156:3: this_QueryPathExpression_3= ruleQueryPathExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getQueryPathExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QueryPathExpression_3=ruleQueryPathExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QueryPathExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9080:3: this_InvocationExpression_4= ruleInvocationExpression
=======
                    // InternalAlf.g:9168:3: this_InvocationExpression_4= ruleInvocationExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InvocationExpression_4=ruleInvocationExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvocationExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9092:3: this_ClassExtentExpression_5= ruleClassExtentExpression
=======
                    // InternalAlf.g:9180:3: this_ClassExtentExpression_5= ruleClassExtentExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getClassExtentExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassExtentExpression_5=ruleClassExtentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassExtentExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9104:3: this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression
=======
                    // InternalAlf.g:9192:3: this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getSequenceConstructionExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceConstructionExpression_6=ruleSequenceConstructionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceConstructionExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9116:3: (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' )
=======
                    // InternalAlf.g:9204:3: (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9116:3: (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' )
                    // InternalAlf.g:9117:4: otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')'
=======
                    // InternalAlf.g:9204:3: (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' )
                    // InternalAlf.g:9205:4: otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_7=(Token)match(input,42,FOLLOW_72); if (state.failed) return current;
=======
                    otherlv_7=(Token)match(input,42,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_7_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBaseExpressionAccess().getExpressionParserRuleCall_7_1());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_116);
=======
                    pushFollow(FOLLOW_117);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    this_Expression_8=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Expression_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_9=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_7_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseExpression"


    // $ANTLR start "entryRuleFeatureReferenceExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9141:1: entryRuleFeatureReferenceExpression returns [EObject current=null] : iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF ;
=======
    // InternalAlf.g:9229:1: entryRuleFeatureReferenceExpression returns [EObject current=null] : iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReferenceExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9141:67: (iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF )
            // InternalAlf.g:9142:2: iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF
=======
            // InternalAlf.g:9229:67: (iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF )
            // InternalAlf.g:9230:2: iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReferenceExpression=ruleFeatureReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReferenceExpression"


    // $ANTLR start "ruleFeatureReferenceExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9148:1: ruleFeatureReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) ;
=======
    // InternalAlf.g:9236:1: ruleFeatureReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9154:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) )
            // InternalAlf.g:9155:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
=======
            // InternalAlf.g:9242:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) )
            // InternalAlf.g:9243:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9155:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
            // InternalAlf.g:9156:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
=======
            // InternalAlf.g:9243:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
            // InternalAlf.g:9244:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9156:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
            // InternalAlf.g:9157:4: lv_ownedRelationship_0_0= ruleFeatureReference
=======
            // InternalAlf.g:9244:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
            // InternalAlf.g:9245:4: lv_ownedRelationship_0_0= ruleFeatureReference
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipFeatureReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFeatureReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFeatureReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.sysml.Alf.FeatureReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReferenceExpression"


    // $ANTLR start "entryRuleInvocationExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9177:1: entryRuleInvocationExpression returns [EObject current=null] : iv_ruleInvocationExpression= ruleInvocationExpression EOF ;
=======
    // InternalAlf.g:9265:1: entryRuleInvocationExpression returns [EObject current=null] : iv_ruleInvocationExpression= ruleInvocationExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleInvocationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvocationExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9177:61: (iv_ruleInvocationExpression= ruleInvocationExpression EOF )
            // InternalAlf.g:9178:2: iv_ruleInvocationExpression= ruleInvocationExpression EOF
=======
            // InternalAlf.g:9265:61: (iv_ruleInvocationExpression= ruleInvocationExpression EOF )
            // InternalAlf.g:9266:2: iv_ruleInvocationExpression= ruleInvocationExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvocationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvocationExpression=ruleInvocationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvocationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvocationExpression"


    // $ANTLR start "ruleInvocationExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9184:1: ruleInvocationExpression returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' ) ;
=======
    // InternalAlf.g:9272:1: ruleInvocationExpression returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleInvocationExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject this_Tuple_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9190:2: ( ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' ) )
            // InternalAlf.g:9191:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' )
=======
            // InternalAlf.g:9278:2: ( ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' ) )
            // InternalAlf.g:9279:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9191:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' )
            // InternalAlf.g:9192:3: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')'
=======
            // InternalAlf.g:9279:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')' )
            // InternalAlf.g:9280:3: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) otherlv_1= '(' (this_Tuple_2= ruleTuple[$current] )? otherlv_3= ')'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9192:3: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) )
            // InternalAlf.g:9193:4: (lv_ownedRelationship_0_0= ruleFeatureTyping )
=======
            // InternalAlf.g:9280:3: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) )
            // InternalAlf.g:9281:4: (lv_ownedRelationship_0_0= ruleFeatureTyping )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9193:4: (lv_ownedRelationship_0_0= ruleFeatureTyping )
            // InternalAlf.g:9194:5: lv_ownedRelationship_0_0= ruleFeatureTyping
=======
            // InternalAlf.g:9281:4: (lv_ownedRelationship_0_0= ruleFeatureTyping )
            // InternalAlf.g:9282:5: lv_ownedRelationship_0_0= ruleFeatureTyping
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipFeatureTypingParserRuleCall_0_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_58);
=======
            pushFollow(FOLLOW_59);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_ownedRelationship_0_0=ruleFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvocationExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.sysml.Alf.FeatureTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_1=(Token)match(input,42,FOLLOW_117); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,42,FOLLOW_118); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvocationExpressionAccess().getLeftParenthesisKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9215:3: (this_Tuple_2= ruleTuple[$current] )?
=======
            // InternalAlf.g:9303:3: (this_Tuple_2= ruleTuple[$current] )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( ((LA142_0>=RULE_BOOLEAN_VALUE && LA142_0<=RULE_UNRESTRICTED_NAME)||(LA142_0>=18 && LA142_0<=19)||LA142_0==23||LA142_0==42||(LA142_0>=74 && LA142_0<=75)||(LA142_0>=79 && LA142_0<=80)||(LA142_0>=83 && LA142_0<=84)) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9216:4: this_Tuple_2= ruleTuple[$current]
=======
                    // InternalAlf.g:9304:4: this_Tuple_2= ruleTuple[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getInvocationExpressionRule());
                      				}
                      				newCompositeNode(grammarAccess.getInvocationExpressionAccess().getTupleParserRuleCall_2());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_116);
=======
                    pushFollow(FOLLOW_117);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    this_Tuple_2=ruleTuple(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Tuple_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getInvocationExpressionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvocationExpression"


    // $ANTLR start "ruleTuple"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9240:1: ruleTuple[EObject in_current] returns [EObject current=in_current] : (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] ) ;
=======
    // InternalAlf.g:9328:1: ruleTuple[EObject in_current] returns [EObject current=in_current] : (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleTuple(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_PositionalTuple_0 = null;

        EObject this_NamedTuple_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9246:2: ( (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] ) )
            // InternalAlf.g:9247:2: (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] )
=======
            // InternalAlf.g:9334:2: ( (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] ) )
            // InternalAlf.g:9335:2: (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9247:2: (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] )
=======
            // InternalAlf.g:9335:2: (this_PositionalTuple_0= rulePositionalTuple[$current] | this_NamedTuple_1= ruleNamedTuple[$current] )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt143=2;
            switch ( input.LA(1) ) {
            case RULE_BOOLEAN_VALUE:
            case RULE_STRING_VALUE:
            case RULE_NATURAL_VALUE:
            case RULE_EXP_VALUE:
            case 18:
            case 19:
            case 23:
            case 42:
            case 74:
            case 75:
            case 79:
            case 80:
            case 83:
            case 84:
                {
                alt143=1;
                }
                break;
            case RULE_ID:
                {
                int LA143_2 = input.LA(2);

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (LA143_2==EOF||(LA143_2>=17 && LA143_2<=19)||LA143_2==40||(LA143_2>=42 && LA143_2<=43)||LA143_2==53||(LA143_2>=59 && LA143_2<=78)||LA143_2==81) ) {
=======
                if ( (LA143_2==EOF||(LA143_2>=17 && LA143_2<=19)||LA143_2==39||(LA143_2>=42 && LA143_2<=43)||LA143_2==53||(LA143_2>=59 && LA143_2<=78)||LA143_2==81) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    alt143=1;
                }
                else if ( (LA143_2==58) ) {
                    alt143=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 143, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UNRESTRICTED_NAME:
                {
                int LA143_3 = input.LA(2);

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (LA143_3==EOF||(LA143_3>=17 && LA143_3<=19)||LA143_3==40||(LA143_3>=42 && LA143_3<=43)||LA143_3==53||(LA143_3>=59 && LA143_3<=78)||LA143_3==81) ) {
=======
                if ( (LA143_3==EOF||(LA143_3>=17 && LA143_3<=19)||LA143_3==39||(LA143_3>=42 && LA143_3<=43)||LA143_3==53||(LA143_3>=59 && LA143_3<=78)||LA143_3==81) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    alt143=1;
                }
                else if ( (LA143_3==58) ) {
                    alt143=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 143, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }

            switch (alt143) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9248:3: this_PositionalTuple_0= rulePositionalTuple[$current]
=======
                    // InternalAlf.g:9336:3: this_PositionalTuple_0= rulePositionalTuple[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTupleRule());
                      			}
                      			newCompositeNode(grammarAccess.getTupleAccess().getPositionalTupleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PositionalTuple_0=rulePositionalTuple(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PositionalTuple_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9263:3: this_NamedTuple_1= ruleNamedTuple[$current]
=======
                    // InternalAlf.g:9351:3: this_NamedTuple_1= ruleNamedTuple[$current]
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTupleRule());
                      			}
                      			newCompositeNode(grammarAccess.getTupleAccess().getNamedTupleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NamedTuple_1=ruleNamedTuple(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NamedTuple_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTuple"


    // $ANTLR start "rulePositionalTuple"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9282:1: rulePositionalTuple[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* ) ;
=======
    // InternalAlf.g:9370:1: rulePositionalTuple[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject rulePositionalTuple(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9288:2: ( ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* ) )
            // InternalAlf.g:9289:2: ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* )
=======
            // InternalAlf.g:9376:2: ( ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* ) )
            // InternalAlf.g:9377:2: ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9289:2: ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* )
            // InternalAlf.g:9290:3: ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )*
=======
            // InternalAlf.g:9377:2: ( ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )* )
            // InternalAlf.g:9378:3: ( (lv_ownedRelationship_0_0= ruleExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9290:3: ( (lv_ownedRelationship_0_0= ruleExpressionMember ) )
            // InternalAlf.g:9291:4: (lv_ownedRelationship_0_0= ruleExpressionMember )
=======
            // InternalAlf.g:9378:3: ( (lv_ownedRelationship_0_0= ruleExpressionMember ) )
            // InternalAlf.g:9379:4: (lv_ownedRelationship_0_0= ruleExpressionMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9291:4: (lv_ownedRelationship_0_0= ruleExpressionMember )
            // InternalAlf.g:9292:5: lv_ownedRelationship_0_0= ruleExpressionMember
=======
            // InternalAlf.g:9379:4: (lv_ownedRelationship_0_0= ruleExpressionMember )
            // InternalAlf.g:9380:5: lv_ownedRelationship_0_0= ruleExpressionMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPositionalTupleAccess().getOwnedRelationshipExpressionMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_ownedRelationship_0_0=ruleExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPositionalTupleRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.sysml.Alf.ExpressionMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9309:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )*
=======
            // InternalAlf.g:9397:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (LA144_0==40) ) {
=======
                if ( (LA144_0==39) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:9310:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) )
=======
            	    // InternalAlf.g:9398:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleExpressionMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    otherlv_1=(Token)match(input,40,FOLLOW_72); if (state.failed) return current;
=======
            	    otherlv_1=(Token)match(input,39,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getPositionalTupleAccess().getCommaKeyword_1_0());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:9314:4: ( (lv_ownedRelationship_2_0= ruleExpressionMember ) )
            	    // InternalAlf.g:9315:5: (lv_ownedRelationship_2_0= ruleExpressionMember )
=======
            	    // InternalAlf.g:9402:4: ( (lv_ownedRelationship_2_0= ruleExpressionMember ) )
            	    // InternalAlf.g:9403:5: (lv_ownedRelationship_2_0= ruleExpressionMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:9315:5: (lv_ownedRelationship_2_0= ruleExpressionMember )
            	    // InternalAlf.g:9316:6: lv_ownedRelationship_2_0= ruleExpressionMember
=======
            	    // InternalAlf.g:9403:5: (lv_ownedRelationship_2_0= ruleExpressionMember )
            	    // InternalAlf.g:9404:6: lv_ownedRelationship_2_0= ruleExpressionMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPositionalTupleAccess().getOwnedRelationshipExpressionMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_ownedRelationship_2_0=ruleExpressionMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPositionalTupleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.sysml.Alf.ExpressionMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePositionalTuple"


    // $ANTLR start "ruleNamedTuple"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9339:1: ruleNamedTuple[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* ) ;
=======
    // InternalAlf.g:9427:1: ruleNamedTuple[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleNamedTuple(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9345:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* ) )
            // InternalAlf.g:9346:2: ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* )
=======
            // InternalAlf.g:9433:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* ) )
            // InternalAlf.g:9434:2: ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9346:2: ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* )
            // InternalAlf.g:9347:3: ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )*
=======
            // InternalAlf.g:9434:2: ( ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )* )
            // InternalAlf.g:9435:3: ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9347:3: ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) )
            // InternalAlf.g:9348:4: (lv_ownedRelationship_0_0= ruleNamedExpressionMember )
=======
            // InternalAlf.g:9435:3: ( (lv_ownedRelationship_0_0= ruleNamedExpressionMember ) )
            // InternalAlf.g:9436:4: (lv_ownedRelationship_0_0= ruleNamedExpressionMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9348:4: (lv_ownedRelationship_0_0= ruleNamedExpressionMember )
            // InternalAlf.g:9349:5: lv_ownedRelationship_0_0= ruleNamedExpressionMember
=======
            // InternalAlf.g:9436:4: (lv_ownedRelationship_0_0= ruleNamedExpressionMember )
            // InternalAlf.g:9437:5: lv_ownedRelationship_0_0= ruleNamedExpressionMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedTupleAccess().getOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_ownedRelationship_0_0=ruleNamedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedTupleRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.sysml.Alf.NamedExpressionMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9366:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )*
=======
            // InternalAlf.g:9454:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (LA145_0==40) ) {
=======
                if ( (LA145_0==39) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:9367:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) )
=======
            	    // InternalAlf.g:9455:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    otherlv_1=(Token)match(input,40,FOLLOW_72); if (state.failed) return current;
=======
            	    otherlv_1=(Token)match(input,39,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getNamedTupleAccess().getCommaKeyword_1_0());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:9371:4: ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) )
            	    // InternalAlf.g:9372:5: (lv_ownedRelationship_2_0= ruleNamedExpressionMember )
=======
            	    // InternalAlf.g:9459:4: ( (lv_ownedRelationship_2_0= ruleNamedExpressionMember ) )
            	    // InternalAlf.g:9460:5: (lv_ownedRelationship_2_0= ruleNamedExpressionMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:9372:5: (lv_ownedRelationship_2_0= ruleNamedExpressionMember )
            	    // InternalAlf.g:9373:6: lv_ownedRelationship_2_0= ruleNamedExpressionMember
=======
            	    // InternalAlf.g:9460:5: (lv_ownedRelationship_2_0= ruleNamedExpressionMember )
            	    // InternalAlf.g:9461:6: lv_ownedRelationship_2_0= ruleNamedExpressionMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedTupleAccess().getOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_ownedRelationship_2_0=ruleNamedExpressionMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedTupleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.sysml.Alf.NamedExpressionMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedTuple"


    // $ANTLR start "entryRuleClassExtentExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9395:1: entryRuleClassExtentExpression returns [EObject current=null] : iv_ruleClassExtentExpression= ruleClassExtentExpression EOF ;
=======
    // InternalAlf.g:9483:1: entryRuleClassExtentExpression returns [EObject current=null] : iv_ruleClassExtentExpression= ruleClassExtentExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleClassExtentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassExtentExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9395:62: (iv_ruleClassExtentExpression= ruleClassExtentExpression EOF )
            // InternalAlf.g:9396:2: iv_ruleClassExtentExpression= ruleClassExtentExpression EOF
=======
            // InternalAlf.g:9483:62: (iv_ruleClassExtentExpression= ruleClassExtentExpression EOF )
            // InternalAlf.g:9484:2: iv_ruleClassExtentExpression= ruleClassExtentExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassExtentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassExtentExpression=ruleClassExtentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassExtentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassExtentExpression"


    // $ANTLR start "ruleClassExtentExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9402:1: ruleClassExtentExpression returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' ) ;
=======
    // InternalAlf.g:9490:1: ruleClassExtentExpression returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleClassExtentExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_operator_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9408:2: ( ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' ) )
            // InternalAlf.g:9409:2: ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' )
=======
            // InternalAlf.g:9496:2: ( ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' ) )
            // InternalAlf.g:9497:2: ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9409:2: ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' )
            // InternalAlf.g:9410:3: ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')'
=======
            // InternalAlf.g:9497:2: ( ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')' )
            // InternalAlf.g:9498:3: ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) ) otherlv_1= '.' ( (lv_operator_2_0= 'allInstances' ) ) otherlv_3= '(' otherlv_4= ')'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9410:3: ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) )
            // InternalAlf.g:9411:4: (lv_ownedRelationship_0_0= ruleTypeReferenceMember )
=======
            // InternalAlf.g:9498:3: ( (lv_ownedRelationship_0_0= ruleTypeReferenceMember ) )
            // InternalAlf.g:9499:4: (lv_ownedRelationship_0_0= ruleTypeReferenceMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9411:4: (lv_ownedRelationship_0_0= ruleTypeReferenceMember )
            // InternalAlf.g:9412:5: lv_ownedRelationship_0_0= ruleTypeReferenceMember
=======
            // InternalAlf.g:9499:4: (lv_ownedRelationship_0_0= ruleTypeReferenceMember )
            // InternalAlf.g:9500:5: lv_ownedRelationship_0_0= ruleTypeReferenceMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassExtentExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_ownedRelationship_0_0=ruleTypeReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassExtentExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.sysml.Alf.TypeReferenceMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_1=(Token)match(input,18,FOLLOW_118); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,18,FOLLOW_119); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassExtentExpressionAccess().getFullStopKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9433:3: ( (lv_operator_2_0= 'allInstances' ) )
            // InternalAlf.g:9434:4: (lv_operator_2_0= 'allInstances' )
=======
            // InternalAlf.g:9521:3: ( (lv_operator_2_0= 'allInstances' ) )
            // InternalAlf.g:9522:4: (lv_operator_2_0= 'allInstances' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9434:4: (lv_operator_2_0= 'allInstances' )
            // InternalAlf.g:9435:5: lv_operator_2_0= 'allInstances'
=======
            // InternalAlf.g:9522:4: (lv_operator_2_0= 'allInstances' )
            // InternalAlf.g:9523:5: lv_operator_2_0= 'allInstances'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            lv_operator_2_0=(Token)match(input,82,FOLLOW_58); if (state.failed) return current;
=======
            lv_operator_2_0=(Token)match(input,82,FOLLOW_59); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_operator_2_0, grammarAccess.getClassExtentExpressionAccess().getOperatorAllInstancesKeyword_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getClassExtentExpressionRule());
              					}
              					setWithLastConsumed(current, "operator", lv_operator_2_0, "allInstances");
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_3=(Token)match(input,42,FOLLOW_116); if (state.failed) return current;
=======
            otherlv_3=(Token)match(input,42,FOLLOW_117); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getClassExtentExpressionAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getClassExtentExpressionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassExtentExpression"


    // $ANTLR start "entryRuleTypeReference"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9459:1: entryRuleTypeReference returns [EObject current=null] : iv_ruleTypeReference= ruleTypeReference EOF ;
=======
    // InternalAlf.g:9547:1: entryRuleTypeReference returns [EObject current=null] : iv_ruleTypeReference= ruleTypeReference EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReference = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9459:54: (iv_ruleTypeReference= ruleTypeReference EOF )
            // InternalAlf.g:9460:2: iv_ruleTypeReference= ruleTypeReference EOF
=======
            // InternalAlf.g:9547:54: (iv_ruleTypeReference= ruleTypeReference EOF )
            // InternalAlf.g:9548:2: iv_ruleTypeReference= ruleTypeReference EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReference=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReference"


    // $ANTLR start "ruleTypeReference"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9466:1: ruleTypeReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) ;
=======
    // InternalAlf.g:9554:1: ruleTypeReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9472:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) )
            // InternalAlf.g:9473:2: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) )
=======
            // InternalAlf.g:9560:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) ) )
            // InternalAlf.g:9561:2: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9473:2: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) )
            // InternalAlf.g:9474:3: (lv_ownedRelationship_0_0= ruleFeatureTyping )
=======
            // InternalAlf.g:9561:2: ( (lv_ownedRelationship_0_0= ruleFeatureTyping ) )
            // InternalAlf.g:9562:3: (lv_ownedRelationship_0_0= ruleFeatureTyping )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9474:3: (lv_ownedRelationship_0_0= ruleFeatureTyping )
            // InternalAlf.g:9475:4: lv_ownedRelationship_0_0= ruleFeatureTyping
=======
            // InternalAlf.g:9562:3: (lv_ownedRelationship_0_0= ruleFeatureTyping )
            // InternalAlf.g:9563:4: lv_ownedRelationship_0_0= ruleFeatureTyping
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipFeatureTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.sysml.Alf.FeatureTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReference"


    // $ANTLR start "entryRuleSequenceConstructionExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9495:1: entryRuleSequenceConstructionExpression returns [EObject current=null] : iv_ruleSequenceConstructionExpression= ruleSequenceConstructionExpression EOF ;
=======
    // InternalAlf.g:9583:1: entryRuleSequenceConstructionExpression returns [EObject current=null] : iv_ruleSequenceConstructionExpression= ruleSequenceConstructionExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleSequenceConstructionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceConstructionExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9495:71: (iv_ruleSequenceConstructionExpression= ruleSequenceConstructionExpression EOF )
            // InternalAlf.g:9496:2: iv_ruleSequenceConstructionExpression= ruleSequenceConstructionExpression EOF
=======
            // InternalAlf.g:9583:71: (iv_ruleSequenceConstructionExpression= ruleSequenceConstructionExpression EOF )
            // InternalAlf.g:9584:2: iv_ruleSequenceConstructionExpression= ruleSequenceConstructionExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceConstructionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceConstructionExpression=ruleSequenceConstructionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceConstructionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceConstructionExpression"


    // $ANTLR start "ruleSequenceConstructionExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9502:1: ruleSequenceConstructionExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' ) ;
=======
    // InternalAlf.g:9590:1: ruleSequenceConstructionExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleSequenceConstructionExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_element_2_0 = null;

        EObject lv_element_4_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9508:2: ( ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalAlf.g:9509:2: ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' )
=======
            // InternalAlf.g:9596:2: ( ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalAlf.g:9597:2: ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9509:2: ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' )
            // InternalAlf.g:9510:3: () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}'
=======
            // InternalAlf.g:9597:2: ( () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}' )
            // InternalAlf.g:9598:3: () otherlv_1= '{' ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )? otherlv_5= '}'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9510:3: ()
            // InternalAlf.g:9511:4: 
=======
            // InternalAlf.g:9598:3: ()
            // InternalAlf.g:9599:4: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSequenceConstructionExpressionAccess().getSequenceConstructionExpressionAction_0(),
              					current);
              			
            }

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_1=(Token)match(input,23,FOLLOW_119); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,23,FOLLOW_120); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9524:3: ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )?
=======
            // InternalAlf.g:9612:3: ( ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )* )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( ((LA147_0>=RULE_BOOLEAN_VALUE && LA147_0<=RULE_UNRESTRICTED_NAME)||(LA147_0>=18 && LA147_0<=19)||LA147_0==23||LA147_0==42||(LA147_0>=74 && LA147_0<=75)||(LA147_0>=79 && LA147_0<=80)||(LA147_0>=83 && LA147_0<=84)) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9525:4: ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )*
=======
                    // InternalAlf.g:9613:4: ( (lv_element_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9525:4: ( (lv_element_2_0= ruleExpression ) )
                    // InternalAlf.g:9526:5: (lv_element_2_0= ruleExpression )
=======
                    // InternalAlf.g:9613:4: ( (lv_element_2_0= ruleExpression ) )
                    // InternalAlf.g:9614:5: (lv_element_2_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9526:5: (lv_element_2_0= ruleExpression )
                    // InternalAlf.g:9527:6: lv_element_2_0= ruleExpression
=======
                    // InternalAlf.g:9614:5: (lv_element_2_0= ruleExpression )
                    // InternalAlf.g:9615:6: lv_element_2_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getElementExpressionParserRuleCall_2_0_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_120);
=======
                    pushFollow(FOLLOW_121);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_element_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
                      						}
                      						add(
                      							current,
                      							"element",
                      							lv_element_2_0,
                      							"org.omg.sysml.Alf.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9544:4: (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )*
=======
                    // InternalAlf.g:9632:4: (otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) ) )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (LA146_0==40) ) {
=======
                        if ( (LA146_0==39) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:9545:5: otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) )
=======
                    	    // InternalAlf.g:9633:5: otherlv_3= ',' ( (lv_element_4_0= ruleExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    otherlv_3=(Token)match(input,40,FOLLOW_72); if (state.failed) return current;
=======
                    	    otherlv_3=(Token)match(input,39,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getSequenceConstructionExpressionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:9549:5: ( (lv_element_4_0= ruleExpression ) )
                    	    // InternalAlf.g:9550:6: (lv_element_4_0= ruleExpression )
=======
                    	    // InternalAlf.g:9637:5: ( (lv_element_4_0= ruleExpression ) )
                    	    // InternalAlf.g:9638:6: (lv_element_4_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    // InternalAlf.g:9550:6: (lv_element_4_0= ruleExpression )
                    	    // InternalAlf.g:9551:7: lv_element_4_0= ruleExpression
=======
                    	    // InternalAlf.g:9638:6: (lv_element_4_0= ruleExpression )
                    	    // InternalAlf.g:9639:7: lv_element_4_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getElementExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    	    pushFollow(FOLLOW_120);
=======
                    	    pushFollow(FOLLOW_121);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    	    lv_element_4_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"element",
                    	      								lv_element_4_0,
                    	      								"org.omg.sysml.Alf.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceConstructionExpression"


    // $ANTLR start "entryRuleNullExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9578:1: entryRuleNullExpression returns [EObject current=null] : iv_ruleNullExpression= ruleNullExpression EOF ;
=======
    // InternalAlf.g:9666:1: entryRuleNullExpression returns [EObject current=null] : iv_ruleNullExpression= ruleNullExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleNullExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9578:55: (iv_ruleNullExpression= ruleNullExpression EOF )
            // InternalAlf.g:9579:2: iv_ruleNullExpression= ruleNullExpression EOF
=======
            // InternalAlf.g:9666:55: (iv_ruleNullExpression= ruleNullExpression EOF )
            // InternalAlf.g:9667:2: iv_ruleNullExpression= ruleNullExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullExpression=ruleNullExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullExpression"


    // $ANTLR start "ruleNullExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9585:1: ruleNullExpression returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
=======
    // InternalAlf.g:9673:1: ruleNullExpression returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleNullExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9591:2: ( ( () otherlv_1= 'null' ) )
            // InternalAlf.g:9592:2: ( () otherlv_1= 'null' )
=======
            // InternalAlf.g:9679:2: ( ( () otherlv_1= 'null' ) )
            // InternalAlf.g:9680:2: ( () otherlv_1= 'null' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9592:2: ( () otherlv_1= 'null' )
            // InternalAlf.g:9593:3: () otherlv_1= 'null'
=======
            // InternalAlf.g:9680:2: ( () otherlv_1= 'null' )
            // InternalAlf.g:9681:3: () otherlv_1= 'null'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9593:3: ()
            // InternalAlf.g:9594:4: 
=======
            // InternalAlf.g:9681:3: ()
            // InternalAlf.g:9682:4: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullExpressionAccess().getNullExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullExpression"


    // $ANTLR start "entryRuleLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9611:1: entryRuleLiteralExpression returns [EObject current=null] : iv_ruleLiteralExpression= ruleLiteralExpression EOF ;
=======
    // InternalAlf.g:9699:1: entryRuleLiteralExpression returns [EObject current=null] : iv_ruleLiteralExpression= ruleLiteralExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9611:58: (iv_ruleLiteralExpression= ruleLiteralExpression EOF )
            // InternalAlf.g:9612:2: iv_ruleLiteralExpression= ruleLiteralExpression EOF
=======
            // InternalAlf.g:9699:58: (iv_ruleLiteralExpression= ruleLiteralExpression EOF )
            // InternalAlf.g:9700:2: iv_ruleLiteralExpression= ruleLiteralExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralExpression=ruleLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralExpression"


    // $ANTLR start "ruleLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9618:1: ruleLiteralExpression returns [EObject current=null] : (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression ) ;
=======
    // InternalAlf.g:9706:1: ruleLiteralExpression returns [EObject current=null] : (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BooleanLiteralExpression_0 = null;

        EObject this_StringLiteralExpression_1 = null;

        EObject this_RealLiteralExpression_2 = null;

        EObject this_UnlimitedNaturalLiteralExpression_3 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9624:2: ( (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression ) )
            // InternalAlf.g:9625:2: (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression )
=======
            // InternalAlf.g:9712:2: ( (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression ) )
            // InternalAlf.g:9713:2: (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9625:2: (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression )
=======
            // InternalAlf.g:9713:2: (this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression | this_StringLiteralExpression_1= ruleStringLiteralExpression | this_RealLiteralExpression_2= ruleRealLiteralExpression | this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt148=4;
            switch ( input.LA(1) ) {
            case RULE_BOOLEAN_VALUE:
                {
                alt148=1;
                }
                break;
            case RULE_STRING_VALUE:
                {
                alt148=2;
                }
                break;
            case RULE_NATURAL_VALUE:
                {
                int LA148_3 = input.LA(2);

<<<<<<< Upstream, based on origin/ST6RI-75
                if ( (LA148_3==EOF||(LA148_3>=19 && LA148_3<=20)||(LA148_3>=23 && LA148_3<=24)||LA148_3==40||LA148_3==43||LA148_3==48||LA148_3==53||LA148_3==55||(LA148_3>=59 && LA148_3<=78)||LA148_3==81) ) {
=======
                if ( (LA148_3==EOF||(LA148_3>=19 && LA148_3<=20)||(LA148_3>=23 && LA148_3<=24)||LA148_3==39||LA148_3==43||LA148_3==48||LA148_3==53||LA148_3==55||(LA148_3>=59 && LA148_3<=78)||LA148_3==81) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    alt148=4;
                }
                else if ( (LA148_3==18) ) {
                    alt148=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 148, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_EXP_VALUE:
            case 18:
                {
                alt148=3;
                }
                break;
            case 19:
                {
                alt148=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9626:3: this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression
=======
                    // InternalAlf.g:9714:3: this_BooleanLiteralExpression_0= ruleBooleanLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanLiteralExpression_0=ruleBooleanLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanLiteralExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9638:3: this_StringLiteralExpression_1= ruleStringLiteralExpression
=======
                    // InternalAlf.g:9726:3: this_StringLiteralExpression_1= ruleStringLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringLiteralExpression_1=ruleStringLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringLiteralExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9650:3: this_RealLiteralExpression_2= ruleRealLiteralExpression
=======
                    // InternalAlf.g:9738:3: this_RealLiteralExpression_2= ruleRealLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getRealLiteralExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RealLiteralExpression_2=ruleRealLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RealLiteralExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9662:3: this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression
=======
                    // InternalAlf.g:9750:3: this_UnlimitedNaturalLiteralExpression_3= ruleUnlimitedNaturalLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getUnlimitedNaturalLiteralExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnlimitedNaturalLiteralExpression_3=ruleUnlimitedNaturalLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnlimitedNaturalLiteralExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralExpression"


    // $ANTLR start "entryRuleBooleanLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9677:1: entryRuleBooleanLiteralExpression returns [EObject current=null] : iv_ruleBooleanLiteralExpression= ruleBooleanLiteralExpression EOF ;
=======
    // InternalAlf.g:9765:1: entryRuleBooleanLiteralExpression returns [EObject current=null] : iv_ruleBooleanLiteralExpression= ruleBooleanLiteralExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBooleanLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteralExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9677:65: (iv_ruleBooleanLiteralExpression= ruleBooleanLiteralExpression EOF )
            // InternalAlf.g:9678:2: iv_ruleBooleanLiteralExpression= ruleBooleanLiteralExpression EOF
=======
            // InternalAlf.g:9765:65: (iv_ruleBooleanLiteralExpression= ruleBooleanLiteralExpression EOF )
            // InternalAlf.g:9766:2: iv_ruleBooleanLiteralExpression= ruleBooleanLiteralExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanLiteralExpression=ruleBooleanLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanLiteralExpression"


    // $ANTLR start "ruleBooleanLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9684:1: ruleBooleanLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) ) ;
=======
    // InternalAlf.g:9772:1: ruleBooleanLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBooleanLiteralExpression() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9690:2: ( ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) ) )
            // InternalAlf.g:9691:2: ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) )
=======
            // InternalAlf.g:9778:2: ( ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) ) )
            // InternalAlf.g:9779:2: ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9691:2: ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) )
            // InternalAlf.g:9692:3: (lv_value_0_0= RULE_BOOLEAN_VALUE )
=======
            // InternalAlf.g:9779:2: ( (lv_value_0_0= RULE_BOOLEAN_VALUE ) )
            // InternalAlf.g:9780:3: (lv_value_0_0= RULE_BOOLEAN_VALUE )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9692:3: (lv_value_0_0= RULE_BOOLEAN_VALUE )
            // InternalAlf.g:9693:4: lv_value_0_0= RULE_BOOLEAN_VALUE
=======
            // InternalAlf.g:9780:3: (lv_value_0_0= RULE_BOOLEAN_VALUE )
            // InternalAlf.g:9781:4: lv_value_0_0= RULE_BOOLEAN_VALUE
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBooleanLiteralExpressionAccess().getValueBOOLEAN_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBooleanLiteralExpressionRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.sysml.Alf.BOOLEAN_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanLiteralExpression"


    // $ANTLR start "entryRuleStringLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9712:1: entryRuleStringLiteralExpression returns [EObject current=null] : iv_ruleStringLiteralExpression= ruleStringLiteralExpression EOF ;
=======
    // InternalAlf.g:9800:1: entryRuleStringLiteralExpression returns [EObject current=null] : iv_ruleStringLiteralExpression= ruleStringLiteralExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleStringLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9712:64: (iv_ruleStringLiteralExpression= ruleStringLiteralExpression EOF )
            // InternalAlf.g:9713:2: iv_ruleStringLiteralExpression= ruleStringLiteralExpression EOF
=======
            // InternalAlf.g:9800:64: (iv_ruleStringLiteralExpression= ruleStringLiteralExpression EOF )
            // InternalAlf.g:9801:2: iv_ruleStringLiteralExpression= ruleStringLiteralExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringLiteralExpression=ruleStringLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteralExpression"


    // $ANTLR start "ruleStringLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9719:1: ruleStringLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING_VALUE ) ) ;
=======
    // InternalAlf.g:9807:1: ruleStringLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING_VALUE ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleStringLiteralExpression() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9725:2: ( ( (lv_value_0_0= RULE_STRING_VALUE ) ) )
            // InternalAlf.g:9726:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
=======
            // InternalAlf.g:9813:2: ( ( (lv_value_0_0= RULE_STRING_VALUE ) ) )
            // InternalAlf.g:9814:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9726:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            // InternalAlf.g:9727:3: (lv_value_0_0= RULE_STRING_VALUE )
=======
            // InternalAlf.g:9814:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            // InternalAlf.g:9815:3: (lv_value_0_0= RULE_STRING_VALUE )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9727:3: (lv_value_0_0= RULE_STRING_VALUE )
            // InternalAlf.g:9728:4: lv_value_0_0= RULE_STRING_VALUE
=======
            // InternalAlf.g:9815:3: (lv_value_0_0= RULE_STRING_VALUE )
            // InternalAlf.g:9816:4: lv_value_0_0= RULE_STRING_VALUE
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            lv_value_0_0=(Token)match(input,RULE_STRING_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralExpressionAccess().getValueSTRING_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringLiteralExpressionRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.sysml.Alf.STRING_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteralExpression"


    // $ANTLR start "entryRuleRealLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9747:1: entryRuleRealLiteralExpression returns [EObject current=null] : iv_ruleRealLiteralExpression= ruleRealLiteralExpression EOF ;
=======
    // InternalAlf.g:9835:1: entryRuleRealLiteralExpression returns [EObject current=null] : iv_ruleRealLiteralExpression= ruleRealLiteralExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleRealLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealLiteralExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9747:62: (iv_ruleRealLiteralExpression= ruleRealLiteralExpression EOF )
            // InternalAlf.g:9748:2: iv_ruleRealLiteralExpression= ruleRealLiteralExpression EOF
=======
            // InternalAlf.g:9835:62: (iv_ruleRealLiteralExpression= ruleRealLiteralExpression EOF )
            // InternalAlf.g:9836:2: iv_ruleRealLiteralExpression= ruleRealLiteralExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealLiteralExpression=ruleRealLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealLiteralExpression"


    // $ANTLR start "ruleRealLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9754:1: ruleRealLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= ruleRealValue ) ) ;
=======
    // InternalAlf.g:9842:1: ruleRealLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= ruleRealValue ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleRealLiteralExpression() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9760:2: ( ( (lv_value_0_0= ruleRealValue ) ) )
            // InternalAlf.g:9761:2: ( (lv_value_0_0= ruleRealValue ) )
=======
            // InternalAlf.g:9848:2: ( ( (lv_value_0_0= ruleRealValue ) ) )
            // InternalAlf.g:9849:2: ( (lv_value_0_0= ruleRealValue ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9761:2: ( (lv_value_0_0= ruleRealValue ) )
            // InternalAlf.g:9762:3: (lv_value_0_0= ruleRealValue )
=======
            // InternalAlf.g:9849:2: ( (lv_value_0_0= ruleRealValue ) )
            // InternalAlf.g:9850:3: (lv_value_0_0= ruleRealValue )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9762:3: (lv_value_0_0= ruleRealValue )
            // InternalAlf.g:9763:4: lv_value_0_0= ruleRealValue
=======
            // InternalAlf.g:9850:3: (lv_value_0_0= ruleRealValue )
            // InternalAlf.g:9851:4: lv_value_0_0= ruleRealValue
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRealLiteralExpressionAccess().getValueRealValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getRealLiteralExpressionRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.sysml.Alf.RealValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealLiteralExpression"


    // $ANTLR start "entryRuleRealValue"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9783:1: entryRuleRealValue returns [String current=null] : iv_ruleRealValue= ruleRealValue EOF ;
=======
    // InternalAlf.g:9871:1: entryRuleRealValue returns [String current=null] : iv_ruleRealValue= ruleRealValue EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleRealValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealValue = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9783:49: (iv_ruleRealValue= ruleRealValue EOF )
            // InternalAlf.g:9784:2: iv_ruleRealValue= ruleRealValue EOF
=======
            // InternalAlf.g:9871:49: (iv_ruleRealValue= ruleRealValue EOF )
            // InternalAlf.g:9872:2: iv_ruleRealValue= ruleRealValue EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealValue=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealValue"


    // $ANTLR start "ruleRealValue"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9790:1: ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) ;
=======
    // InternalAlf.g:9878:1: ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleRealValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NATURAL_VALUE_0=null;
        Token kw=null;
        Token this_NATURAL_VALUE_2=null;
        Token this_EXP_VALUE_3=null;
        Token this_EXP_VALUE_4=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9796:2: ( ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) )
            // InternalAlf.g:9797:2: ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
=======
            // InternalAlf.g:9884:2: ( ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) )
            // InternalAlf.g:9885:2: ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9797:2: ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
=======
            // InternalAlf.g:9885:2: ( ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==RULE_NATURAL_VALUE||LA151_0==18) ) {
                alt151=1;
            }
            else if ( (LA151_0==RULE_EXP_VALUE) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9798:3: ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
=======
                    // InternalAlf.g:9886:3: ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9798:3: ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    // InternalAlf.g:9799:4: (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
=======
                    // InternalAlf.g:9886:3: ( (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    // InternalAlf.g:9887:4: (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )? kw= '.' (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9799:4: (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )?
=======
                    // InternalAlf.g:9887:4: (this_NATURAL_VALUE_0= RULE_NATURAL_VALUE )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==RULE_NATURAL_VALUE) ) {
                        alt149=1;
                    }
                    switch (alt149) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:9800:5: this_NATURAL_VALUE_0= RULE_NATURAL_VALUE
=======
                            // InternalAlf.g:9888:5: this_NATURAL_VALUE_0= RULE_NATURAL_VALUE
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            this_NATURAL_VALUE_0=(Token)match(input,RULE_NATURAL_VALUE,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_NATURAL_VALUE_0);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_NATURAL_VALUE_0, grammarAccess.getRealValueAccess().getNATURAL_VALUETerminalRuleCall_0_0());
                              				
                            }

                            }
                            break;

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    kw=(Token)match(input,18,FOLLOW_121); if (state.failed) return current;
=======
                    kw=(Token)match(input,18,FOLLOW_122); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealValueAccess().getFullStopKeyword_0_1());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9813:4: (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
=======
                    // InternalAlf.g:9901:4: (this_NATURAL_VALUE_2= RULE_NATURAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==RULE_NATURAL_VALUE) ) {
                        alt150=1;
                    }
                    else if ( (LA150_0==RULE_EXP_VALUE) ) {
                        alt150=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 150, 0, input);

                        throw nvae;
                    }
                    switch (alt150) {
                        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:9814:5: this_NATURAL_VALUE_2= RULE_NATURAL_VALUE
=======
                            // InternalAlf.g:9902:5: this_NATURAL_VALUE_2= RULE_NATURAL_VALUE
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            this_NATURAL_VALUE_2=(Token)match(input,RULE_NATURAL_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_NATURAL_VALUE_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_NATURAL_VALUE_2, grammarAccess.getRealValueAccess().getNATURAL_VALUETerminalRuleCall_0_2_0());
                              				
                            }

                            }
                            break;
                        case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                            // InternalAlf.g:9822:5: this_EXP_VALUE_3= RULE_EXP_VALUE
=======
                            // InternalAlf.g:9910:5: this_EXP_VALUE_3= RULE_EXP_VALUE
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            {
                            this_EXP_VALUE_3=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXP_VALUE_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXP_VALUE_3, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9832:3: this_EXP_VALUE_4= RULE_EXP_VALUE
=======
                    // InternalAlf.g:9920:3: this_EXP_VALUE_4= RULE_EXP_VALUE
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    this_EXP_VALUE_4=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXP_VALUE_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_EXP_VALUE_4, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealValue"


    // $ANTLR start "entryRuleNaturalLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9843:1: entryRuleNaturalLiteralExpression returns [EObject current=null] : iv_ruleNaturalLiteralExpression= ruleNaturalLiteralExpression EOF ;
=======
    // InternalAlf.g:9931:1: entryRuleNaturalLiteralExpression returns [EObject current=null] : iv_ruleNaturalLiteralExpression= ruleNaturalLiteralExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleNaturalLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNaturalLiteralExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9843:65: (iv_ruleNaturalLiteralExpression= ruleNaturalLiteralExpression EOF )
            // InternalAlf.g:9844:2: iv_ruleNaturalLiteralExpression= ruleNaturalLiteralExpression EOF
=======
            // InternalAlf.g:9931:65: (iv_ruleNaturalLiteralExpression= ruleNaturalLiteralExpression EOF )
            // InternalAlf.g:9932:2: iv_ruleNaturalLiteralExpression= ruleNaturalLiteralExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNaturalLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNaturalLiteralExpression=ruleNaturalLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNaturalLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNaturalLiteralExpression"


    // $ANTLR start "ruleNaturalLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9850:1: ruleNaturalLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= RULE_NATURAL_VALUE ) ) ;
=======
    // InternalAlf.g:9938:1: ruleNaturalLiteralExpression returns [EObject current=null] : ( (lv_value_0_0= RULE_NATURAL_VALUE ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleNaturalLiteralExpression() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9856:2: ( ( (lv_value_0_0= RULE_NATURAL_VALUE ) ) )
            // InternalAlf.g:9857:2: ( (lv_value_0_0= RULE_NATURAL_VALUE ) )
=======
            // InternalAlf.g:9944:2: ( ( (lv_value_0_0= RULE_NATURAL_VALUE ) ) )
            // InternalAlf.g:9945:2: ( (lv_value_0_0= RULE_NATURAL_VALUE ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9857:2: ( (lv_value_0_0= RULE_NATURAL_VALUE ) )
            // InternalAlf.g:9858:3: (lv_value_0_0= RULE_NATURAL_VALUE )
=======
            // InternalAlf.g:9945:2: ( (lv_value_0_0= RULE_NATURAL_VALUE ) )
            // InternalAlf.g:9946:3: (lv_value_0_0= RULE_NATURAL_VALUE )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9858:3: (lv_value_0_0= RULE_NATURAL_VALUE )
            // InternalAlf.g:9859:4: lv_value_0_0= RULE_NATURAL_VALUE
=======
            // InternalAlf.g:9946:3: (lv_value_0_0= RULE_NATURAL_VALUE )
            // InternalAlf.g:9947:4: lv_value_0_0= RULE_NATURAL_VALUE
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            lv_value_0_0=(Token)match(input,RULE_NATURAL_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getNaturalLiteralExpressionAccess().getValueNATURAL_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNaturalLiteralExpressionRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.sysml.Alf.NATURAL_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaturalLiteralExpression"


    // $ANTLR start "entryRuleUnlimitedNaturalLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9878:1: entryRuleUnlimitedNaturalLiteralExpression returns [EObject current=null] : iv_ruleUnlimitedNaturalLiteralExpression= ruleUnlimitedNaturalLiteralExpression EOF ;
=======
    // InternalAlf.g:9966:1: entryRuleUnlimitedNaturalLiteralExpression returns [EObject current=null] : iv_ruleUnlimitedNaturalLiteralExpression= ruleUnlimitedNaturalLiteralExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleUnlimitedNaturalLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnlimitedNaturalLiteralExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9878:74: (iv_ruleUnlimitedNaturalLiteralExpression= ruleUnlimitedNaturalLiteralExpression EOF )
            // InternalAlf.g:9879:2: iv_ruleUnlimitedNaturalLiteralExpression= ruleUnlimitedNaturalLiteralExpression EOF
=======
            // InternalAlf.g:9966:74: (iv_ruleUnlimitedNaturalLiteralExpression= ruleUnlimitedNaturalLiteralExpression EOF )
            // InternalAlf.g:9967:2: iv_ruleUnlimitedNaturalLiteralExpression= ruleUnlimitedNaturalLiteralExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnlimitedNaturalLiteralExpression=ruleUnlimitedNaturalLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnlimitedNaturalLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnlimitedNaturalLiteralExpression"


    // $ANTLR start "ruleUnlimitedNaturalLiteralExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9885:1: ruleUnlimitedNaturalLiteralExpression returns [EObject current=null] : (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) ) ;
=======
    // InternalAlf.g:9973:1: ruleUnlimitedNaturalLiteralExpression returns [EObject current=null] : (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleUnlimitedNaturalLiteralExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_NaturalLiteralExpression_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9891:2: ( (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) ) )
            // InternalAlf.g:9892:2: (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) )
=======
            // InternalAlf.g:9979:2: ( (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) ) )
            // InternalAlf.g:9980:2: (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9892:2: (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) )
=======
            // InternalAlf.g:9980:2: (this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression | ( () otherlv_2= '*' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==RULE_NATURAL_VALUE) ) {
                alt152=1;
            }
            else if ( (LA152_0==19) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9893:3: this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression
=======
                    // InternalAlf.g:9981:3: this_NaturalLiteralExpression_0= ruleNaturalLiteralExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaturalLiteralExpression_0=ruleNaturalLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaturalLiteralExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9905:3: ( () otherlv_2= '*' )
=======
                    // InternalAlf.g:9993:3: ( () otherlv_2= '*' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9905:3: ( () otherlv_2= '*' )
                    // InternalAlf.g:9906:4: () otherlv_2= '*'
=======
                    // InternalAlf.g:9993:3: ( () otherlv_2= '*' )
                    // InternalAlf.g:9994:4: () otherlv_2= '*'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:9906:4: ()
                    // InternalAlf.g:9907:5: 
=======
                    // InternalAlf.g:9994:4: ()
                    // InternalAlf.g:9995:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getLiteralUnboundedAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAsteriskKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnlimitedNaturalLiteralExpression"


    // $ANTLR start "entryRuleFeatureReference"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9925:1: entryRuleFeatureReference returns [EObject current=null] : iv_ruleFeatureReference= ruleFeatureReference EOF ;
=======
    // InternalAlf.g:10013:1: entryRuleFeatureReference returns [EObject current=null] : iv_ruleFeatureReference= ruleFeatureReference EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleFeatureReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReference = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9925:57: (iv_ruleFeatureReference= ruleFeatureReference EOF )
            // InternalAlf.g:9926:2: iv_ruleFeatureReference= ruleFeatureReference EOF
=======
            // InternalAlf.g:10013:57: (iv_ruleFeatureReference= ruleFeatureReference EOF )
            // InternalAlf.g:10014:2: iv_ruleFeatureReference= ruleFeatureReference EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReference=ruleFeatureReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReference"


    // $ANTLR start "ruleFeatureReference"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9932:1: ruleFeatureReference returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
=======
    // InternalAlf.g:10020:1: ruleFeatureReference returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleFeatureReference() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9938:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:9939:2: ( ( ruleQualifiedName ) )
=======
            // InternalAlf.g:10026:2: ( ( ( ruleQualifiedName ) ) )
            // InternalAlf.g:10027:2: ( ( ruleQualifiedName ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9939:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:9940:3: ( ruleQualifiedName )
=======
            // InternalAlf.g:10027:2: ( ( ruleQualifiedName ) )
            // InternalAlf.g:10028:3: ( ruleQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9940:3: ( ruleQualifiedName )
            // InternalAlf.g:9941:4: ruleQualifiedName
=======
            // InternalAlf.g:10028:3: ( ruleQualifiedName )
            // InternalAlf.g:10029:4: ruleQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureReferenceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceAccess().getMemberFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReference"


    // $ANTLR start "entryRuleTypeReferenceMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9961:1: entryRuleTypeReferenceMember returns [EObject current=null] : iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF ;
=======
    // InternalAlf.g:10049:1: entryRuleTypeReferenceMember returns [EObject current=null] : iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReferenceMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9961:60: (iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF )
            // InternalAlf.g:9962:2: iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF
=======
            // InternalAlf.g:10049:60: (iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF )
            // InternalAlf.g:10050:2: iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceMember=ruleTypeReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReferenceMember"


    // $ANTLR start "ruleTypeReferenceMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9968:1: ruleTypeReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) ;
=======
    // InternalAlf.g:10056:1: ruleTypeReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9974:2: ( ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) )
            // InternalAlf.g:9975:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
=======
            // InternalAlf.g:10062:2: ( ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) )
            // InternalAlf.g:10063:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9975:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            // InternalAlf.g:9976:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
=======
            // InternalAlf.g:10063:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            // InternalAlf.g:10064:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9976:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            // InternalAlf.g:9977:4: lv_ownedRelatedElement_0_0= ruleTypeReference
=======
            // InternalAlf.g:10064:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            // InternalAlf.g:10065:4: lv_ownedRelatedElement_0_0= ruleTypeReference
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementTypeReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.sysml.Alf.TypeReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReferenceMember"


    // $ANTLR start "entryRuleNamedExpressionMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:9997:1: entryRuleNamedExpressionMember returns [EObject current=null] : iv_ruleNamedExpressionMember= ruleNamedExpressionMember EOF ;
=======
    // InternalAlf.g:10085:1: entryRuleNamedExpressionMember returns [EObject current=null] : iv_ruleNamedExpressionMember= ruleNamedExpressionMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleNamedExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedExpressionMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:9997:62: (iv_ruleNamedExpressionMember= ruleNamedExpressionMember EOF )
            // InternalAlf.g:9998:2: iv_ruleNamedExpressionMember= ruleNamedExpressionMember EOF
=======
            // InternalAlf.g:10085:62: (iv_ruleNamedExpressionMember= ruleNamedExpressionMember EOF )
            // InternalAlf.g:10086:2: iv_ruleNamedExpressionMember= ruleNamedExpressionMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedExpressionMember=ruleNamedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedExpressionMember"


    // $ANTLR start "ruleNamedExpressionMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10004:1: ruleNamedExpressionMember returns [EObject current=null] : ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) ) ;
=======
    // InternalAlf.g:10092:1: ruleNamedExpressionMember returns [EObject current=null] : ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleNamedExpressionMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_memberName_0_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10010:2: ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) ) )
            // InternalAlf.g:10011:2: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) )
=======
            // InternalAlf.g:10098:2: ( ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) ) )
            // InternalAlf.g:10099:2: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10011:2: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) )
            // InternalAlf.g:10012:3: ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) )
=======
            // InternalAlf.g:10099:2: ( ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) ) )
            // InternalAlf.g:10100:3: ( (lv_memberName_0_0= ruleName ) ) otherlv_1= '=>' ( (lv_ownedRelatedElement_2_0= ruleExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10012:3: ( (lv_memberName_0_0= ruleName ) )
            // InternalAlf.g:10013:4: (lv_memberName_0_0= ruleName )
=======
            // InternalAlf.g:10100:3: ( (lv_memberName_0_0= ruleName ) )
            // InternalAlf.g:10101:4: (lv_memberName_0_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10013:4: (lv_memberName_0_0= ruleName )
            // InternalAlf.g:10014:5: lv_memberName_0_0= ruleName
=======
            // InternalAlf.g:10101:4: (lv_memberName_0_0= ruleName )
            // InternalAlf.g:10102:5: lv_memberName_0_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_87);
=======
            pushFollow(FOLLOW_88);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_memberName_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedExpressionMemberRule());
              					}
              					set(
              						current,
              						"memberName",
              						lv_memberName_0_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_1=(Token)match(input,58,FOLLOW_72); if (state.failed) return current;
=======
            otherlv_1=(Token)match(input,58,FOLLOW_73); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10035:3: ( (lv_ownedRelatedElement_2_0= ruleExpression ) )
            // InternalAlf.g:10036:4: (lv_ownedRelatedElement_2_0= ruleExpression )
=======
            // InternalAlf.g:10123:3: ( (lv_ownedRelatedElement_2_0= ruleExpression ) )
            // InternalAlf.g:10124:4: (lv_ownedRelatedElement_2_0= ruleExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10036:4: (lv_ownedRelatedElement_2_0= ruleExpression )
            // InternalAlf.g:10037:5: lv_ownedRelatedElement_2_0= ruleExpression
=======
            // InternalAlf.g:10124:4: (lv_ownedRelatedElement_2_0= ruleExpression )
            // InternalAlf.g:10125:5: lv_ownedRelatedElement_2_0= ruleExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedExpressionMemberAccess().getOwnedRelatedElementExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedExpressionMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.sysml.Alf.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedExpressionMember"


    // $ANTLR start "entryRuleBodyMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10058:1: entryRuleBodyMember returns [EObject current=null] : iv_ruleBodyMember= ruleBodyMember EOF ;
=======
    // InternalAlf.g:10146:1: entryRuleBodyMember returns [EObject current=null] : iv_ruleBodyMember= ruleBodyMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBodyMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10058:51: (iv_ruleBodyMember= ruleBodyMember EOF )
            // InternalAlf.g:10059:2: iv_ruleBodyMember= ruleBodyMember EOF
=======
            // InternalAlf.g:10146:51: (iv_ruleBodyMember= ruleBodyMember EOF )
            // InternalAlf.g:10147:2: iv_ruleBodyMember= ruleBodyMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyMember=ruleBodyMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyMember"


    // $ANTLR start "ruleBodyMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10065:1: ruleBodyMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) ) ;
=======
    // InternalAlf.g:10153:1: ruleBodyMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBodyMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10071:2: ( ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) ) )
            // InternalAlf.g:10072:2: ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) )
=======
            // InternalAlf.g:10159:2: ( ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) ) )
            // InternalAlf.g:10160:2: ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10072:2: ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) )
            // InternalAlf.g:10073:3: (lv_ownedRelatedElement_0_0= ruleBodyExpression )
=======
            // InternalAlf.g:10160:2: ( (lv_ownedRelatedElement_0_0= ruleBodyExpression ) )
            // InternalAlf.g:10161:3: (lv_ownedRelatedElement_0_0= ruleBodyExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10073:3: (lv_ownedRelatedElement_0_0= ruleBodyExpression )
            // InternalAlf.g:10074:4: lv_ownedRelatedElement_0_0= ruleBodyExpression
=======
            // InternalAlf.g:10161:3: (lv_ownedRelatedElement_0_0= ruleBodyExpression )
            // InternalAlf.g:10162:4: lv_ownedRelatedElement_0_0= ruleBodyExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyMemberAccess().getOwnedRelatedElementBodyExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleBodyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.sysml.Alf.BodyExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyMember"


    // $ANTLR start "entryRuleBodyParameterMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10094:1: entryRuleBodyParameterMember returns [EObject current=null] : iv_ruleBodyParameterMember= ruleBodyParameterMember EOF ;
=======
    // InternalAlf.g:10182:1: entryRuleBodyParameterMember returns [EObject current=null] : iv_ruleBodyParameterMember= ruleBodyParameterMember EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleBodyParameterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyParameterMember = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10094:60: (iv_ruleBodyParameterMember= ruleBodyParameterMember EOF )
            // InternalAlf.g:10095:2: iv_ruleBodyParameterMember= ruleBodyParameterMember EOF
=======
            // InternalAlf.g:10182:60: (iv_ruleBodyParameterMember= ruleBodyParameterMember EOF )
            // InternalAlf.g:10183:2: iv_ruleBodyParameterMember= ruleBodyParameterMember EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyParameterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyParameterMember=ruleBodyParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyParameterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyParameterMember"


    // $ANTLR start "ruleBodyParameterMember"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10101:1: ruleBodyParameterMember returns [EObject current=null] : ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) ;
=======
    // InternalAlf.g:10189:1: ruleBodyParameterMember returns [EObject current=null] : ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleBodyParameterMember() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_memberName_0_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10107:2: ( ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) )
            // InternalAlf.g:10108:2: ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
=======
            // InternalAlf.g:10195:2: ( ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) ) )
            // InternalAlf.g:10196:2: ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10108:2: ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
            // InternalAlf.g:10109:3: ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
=======
            // InternalAlf.g:10196:2: ( ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) ) )
            // InternalAlf.g:10197:3: ( (lv_memberName_0_0= ruleName ) ) ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10109:3: ( (lv_memberName_0_0= ruleName ) )
            // InternalAlf.g:10110:4: (lv_memberName_0_0= ruleName )
=======
            // InternalAlf.g:10197:3: ( (lv_memberName_0_0= ruleName ) )
            // InternalAlf.g:10198:4: (lv_memberName_0_0= ruleName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10110:4: (lv_memberName_0_0= ruleName )
            // InternalAlf.g:10111:5: lv_memberName_0_0= ruleName
=======
            // InternalAlf.g:10198:4: (lv_memberName_0_0= ruleName )
            // InternalAlf.g:10199:5: lv_memberName_0_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBodyParameterMemberAccess().getMemberNameNameParserRuleCall_0_0());
              				
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_63);
=======
            pushFollow(FOLLOW_64);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            lv_memberName_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBodyParameterMemberRule());
              					}
              					set(
              						current,
              						"memberName",
              						lv_memberName_0_0,
              						"org.omg.sysml.Alf.Name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10128:3: ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
            // InternalAlf.g:10129:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
=======
            // InternalAlf.g:10216:3: ( (lv_ownedRelatedElement_1_0= ruleParameterDefinition ) )
            // InternalAlf.g:10217:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10129:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
            // InternalAlf.g:10130:5: lv_ownedRelatedElement_1_0= ruleParameterDefinition
=======
            // InternalAlf.g:10217:4: (lv_ownedRelatedElement_1_0= ruleParameterDefinition )
            // InternalAlf.g:10218:5: lv_ownedRelatedElement_1_0= ruleParameterDefinition
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBodyParameterMemberAccess().getOwnedRelatedElementParameterDefinitionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleParameterDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBodyParameterMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.sysml.Alf.ParameterDefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyParameterMember"


    // $ANTLR start "entryRuleQueryPathExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10151:1: entryRuleQueryPathExpression returns [EObject current=null] : iv_ruleQueryPathExpression= ruleQueryPathExpression EOF ;
=======
    // InternalAlf.g:10239:1: entryRuleQueryPathExpression returns [EObject current=null] : iv_ruleQueryPathExpression= ruleQueryPathExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleQueryPathExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryPathExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10151:60: (iv_ruleQueryPathExpression= ruleQueryPathExpression EOF )
            // InternalAlf.g:10152:2: iv_ruleQueryPathExpression= ruleQueryPathExpression EOF
=======
            // InternalAlf.g:10239:60: (iv_ruleQueryPathExpression= ruleQueryPathExpression EOF )
            // InternalAlf.g:10240:2: iv_ruleQueryPathExpression= ruleQueryPathExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryPathExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQueryPathExpression=ruleQueryPathExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryPathExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryPathExpression"


    // $ANTLR start "ruleQueryPathExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10158:1: ruleQueryPathExpression returns [EObject current=null] : (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* ) ;
=======
    // InternalAlf.g:10246:1: ruleQueryPathExpression returns [EObject current=null] : (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleQueryPathExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject this_QueryHeadExpression_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_operand_7_0 = null;

        EObject lv_ownedRelationship_10_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10164:2: ( (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* ) )
            // InternalAlf.g:10165:2: (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* )
=======
            // InternalAlf.g:10252:2: ( (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* ) )
            // InternalAlf.g:10253:2: (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10165:2: (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* )
            // InternalAlf.g:10166:3: this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )*
=======
            // InternalAlf.g:10253:2: (this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )* )
            // InternalAlf.g:10254:3: this_QueryHeadExpression_0= ruleQueryHeadExpression (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )? (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getQueryHeadExpressionParserRuleCall_0());
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            pushFollow(FOLLOW_122);
=======
            pushFollow(FOLLOW_123);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this_QueryHeadExpression_0=ruleQueryHeadExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_QueryHeadExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10177:3: (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )?
=======
            // InternalAlf.g:10265:3: (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt153=2;
            alt153 = dfa153.predict(input);
            switch (alt153) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10178:4: otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']'
=======
                    // InternalAlf.g:10266:4: otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_1=(Token)match(input,53,FOLLOW_15); if (state.failed) return current;
=======
                    otherlv_1=(Token)match(input,53,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getQueryPathExpressionAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10182:4: ()
                    // InternalAlf.g:10183:5: 
=======
                    // InternalAlf.g:10270:4: ()
                    // InternalAlf.g:10271:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getQueryPathExpressionAccess().getQueryQualifierExpressionOperandAction_1_1(),
                      						current);
                      				
                    }

                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10192:4: ( (lv_ownedRelationship_3_0= ruleBodyMember ) )
                    // InternalAlf.g:10193:5: (lv_ownedRelationship_3_0= ruleBodyMember )
=======
                    // InternalAlf.g:10280:4: ( (lv_ownedRelationship_3_0= ruleBodyMember ) )
                    // InternalAlf.g:10281:5: (lv_ownedRelationship_3_0= ruleBodyMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10193:5: (lv_ownedRelationship_3_0= ruleBodyMember )
                    // InternalAlf.g:10194:6: lv_ownedRelationship_3_0= ruleBodyMember
=======
                    // InternalAlf.g:10281:5: (lv_ownedRelationship_3_0= ruleBodyMember )
                    // InternalAlf.g:10282:6: lv_ownedRelationship_3_0= ruleBodyMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOwnedRelationshipBodyMemberParserRuleCall_1_2_0());
                      					
                    }
<<<<<<< Upstream, based on origin/ST6RI-75
                    pushFollow(FOLLOW_79);
=======
                    pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    lv_ownedRelationship_3_0=ruleBodyMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryPathExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.sysml.Alf.BodyMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

<<<<<<< Upstream, based on origin/ST6RI-75
                    otherlv_4=(Token)match(input,55,FOLLOW_123); if (state.failed) return current;
=======
                    otherlv_4=(Token)match(input,55,FOLLOW_124); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getQueryPathExpressionAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10216:3: (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )*
=======
            // InternalAlf.g:10304:3: (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )*
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==76) ) {
                    int LA155_2 = input.LA(2);

                    if ( (LA155_2==RULE_ID) ) {
                        int LA155_3 = input.LA(3);

<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (synpred223_InternalAlf()) ) {
=======
                        if ( (synpred224_InternalAlf()) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            alt155=1;
                        }


                    }
                    else if ( (LA155_2==RULE_UNRESTRICTED_NAME) ) {
                        int LA155_4 = input.LA(3);

<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (synpred223_InternalAlf()) ) {
=======
                        if ( (synpred224_InternalAlf()) ) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                            alt155=1;
                        }


                    }


                }


                switch (alt155) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:10217:4: otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
=======
            	    // InternalAlf.g:10305:4: otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    otherlv_5=(Token)match(input,76,FOLLOW_15); if (state.failed) return current;
=======
            	    otherlv_5=(Token)match(input,76,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getQueryPathExpressionAccess().getSolidusKeyword_2_0());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:10221:4: ()
            	    // InternalAlf.g:10222:5: 
=======
            	    // InternalAlf.g:10309:4: ()
            	    // InternalAlf.g:10310:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      					/* */
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getQueryPathExpressionAccess().getQueryPathStepExpressionOperandAction_2_1(),
            	      						current);
            	      				
            	    }

            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:10231:4: ( (lv_operand_7_0= ruleQueryNameExpression ) )
            	    // InternalAlf.g:10232:5: (lv_operand_7_0= ruleQueryNameExpression )
=======
            	    // InternalAlf.g:10319:4: ( (lv_operand_7_0= ruleQueryNameExpression ) )
            	    // InternalAlf.g:10320:5: (lv_operand_7_0= ruleQueryNameExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:10232:5: (lv_operand_7_0= ruleQueryNameExpression )
            	    // InternalAlf.g:10233:6: lv_operand_7_0= ruleQueryNameExpression
=======
            	    // InternalAlf.g:10320:5: (lv_operand_7_0= ruleQueryNameExpression )
            	    // InternalAlf.g:10321:6: lv_operand_7_0= ruleQueryNameExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOperandQueryNameExpressionParserRuleCall_2_2_0());
            	      					
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_122);
=======
            	    pushFollow(FOLLOW_123);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    lv_operand_7_0=ruleQueryNameExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getQueryPathExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_7_0,
            	      							"org.omg.sysml.Alf.QueryNameExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:10250:4: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
=======
            	    // InternalAlf.g:10338:4: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    int alt154=2;
            	    alt154 = dfa154.predict(input);
            	    switch (alt154) {
            	        case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	            // InternalAlf.g:10251:5: otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']'
=======
            	            // InternalAlf.g:10339:5: otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	            {
<<<<<<< Upstream, based on origin/ST6RI-75
            	            otherlv_8=(Token)match(input,53,FOLLOW_15); if (state.failed) return current;
=======
            	            otherlv_8=(Token)match(input,53,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_8, grammarAccess.getQueryPathExpressionAccess().getLeftSquareBracketKeyword_2_3_0());
            	              				
            	            }
<<<<<<< Upstream, based on origin/ST6RI-75
            	            // InternalAlf.g:10255:5: ()
            	            // InternalAlf.g:10256:6: 
=======
            	            // InternalAlf.g:10343:5: ()
            	            // InternalAlf.g:10344:6: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	            {
            	            if ( state.backtracking==0 ) {

            	              						/* */
            	              					
            	            }
            	            if ( state.backtracking==0 ) {

            	              						current = forceCreateModelElementAndAdd(
            	              							grammarAccess.getQueryPathExpressionAccess().getQueryQualifierExpressionOperandAction_2_3_1(),
            	              							current);
            	              					
            	            }

            	            }

<<<<<<< Upstream, based on origin/ST6RI-75
            	            // InternalAlf.g:10265:5: ( (lv_ownedRelationship_10_0= ruleBodyMember ) )
            	            // InternalAlf.g:10266:6: (lv_ownedRelationship_10_0= ruleBodyMember )
=======
            	            // InternalAlf.g:10353:5: ( (lv_ownedRelationship_10_0= ruleBodyMember ) )
            	            // InternalAlf.g:10354:6: (lv_ownedRelationship_10_0= ruleBodyMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	            {
<<<<<<< Upstream, based on origin/ST6RI-75
            	            // InternalAlf.g:10266:6: (lv_ownedRelationship_10_0= ruleBodyMember )
            	            // InternalAlf.g:10267:7: lv_ownedRelationship_10_0= ruleBodyMember
=======
            	            // InternalAlf.g:10354:6: (lv_ownedRelationship_10_0= ruleBodyMember )
            	            // InternalAlf.g:10355:7: lv_ownedRelationship_10_0= ruleBodyMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0());
            	              						
            	            }
<<<<<<< Upstream, based on origin/ST6RI-75
            	            pushFollow(FOLLOW_79);
=======
            	            pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	            lv_ownedRelationship_10_0=ruleBodyMember();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getQueryPathExpressionRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ownedRelationship",
            	              								lv_ownedRelationship_10_0,
            	              								"org.omg.sysml.Alf.BodyMember");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }

<<<<<<< Upstream, based on origin/ST6RI-75
            	            otherlv_11=(Token)match(input,55,FOLLOW_123); if (state.failed) return current;
=======
            	            otherlv_11=(Token)match(input,55,FOLLOW_124); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_11, grammarAccess.getQueryPathExpressionAccess().getRightSquareBracketKeyword_2_3_3());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQueryPathExpression"


    // $ANTLR start "entryRuleQueryNameExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10294:1: entryRuleQueryNameExpression returns [EObject current=null] : iv_ruleQueryNameExpression= ruleQueryNameExpression EOF ;
=======
    // InternalAlf.g:10382:1: entryRuleQueryNameExpression returns [EObject current=null] : iv_ruleQueryNameExpression= ruleQueryNameExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleQueryNameExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryNameExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10294:60: (iv_ruleQueryNameExpression= ruleQueryNameExpression EOF )
            // InternalAlf.g:10295:2: iv_ruleQueryNameExpression= ruleQueryNameExpression EOF
=======
            // InternalAlf.g:10382:60: (iv_ruleQueryNameExpression= ruleQueryNameExpression EOF )
            // InternalAlf.g:10383:2: iv_ruleQueryNameExpression= ruleQueryNameExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryNameExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQueryNameExpression=ruleQueryNameExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryNameExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryNameExpression"


    // $ANTLR start "ruleQueryNameExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10301:1: ruleQueryNameExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) ;
=======
    // InternalAlf.g:10389:1: ruleQueryNameExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleQueryNameExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10307:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) )
            // InternalAlf.g:10308:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
=======
            // InternalAlf.g:10395:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureReference ) ) )
            // InternalAlf.g:10396:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10308:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
            // InternalAlf.g:10309:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
=======
            // InternalAlf.g:10396:2: ( (lv_ownedRelationship_0_0= ruleFeatureReference ) )
            // InternalAlf.g:10397:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10309:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
            // InternalAlf.g:10310:4: lv_ownedRelationship_0_0= ruleFeatureReference
=======
            // InternalAlf.g:10397:3: (lv_ownedRelationship_0_0= ruleFeatureReference )
            // InternalAlf.g:10398:4: lv_ownedRelationship_0_0= ruleFeatureReference
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getQueryNameExpressionAccess().getOwnedRelationshipFeatureReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFeatureReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getQueryNameExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.sysml.Alf.FeatureReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQueryNameExpression"


    // $ANTLR start "entryRuleQueryHeadExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10330:1: entryRuleQueryHeadExpression returns [EObject current=null] : iv_ruleQueryHeadExpression= ruleQueryHeadExpression EOF ;
=======
    // InternalAlf.g:10418:1: entryRuleQueryHeadExpression returns [EObject current=null] : iv_ruleQueryHeadExpression= ruleQueryHeadExpression EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject entryRuleQueryHeadExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryHeadExpression = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10330:60: (iv_ruleQueryHeadExpression= ruleQueryHeadExpression EOF )
            // InternalAlf.g:10331:2: iv_ruleQueryHeadExpression= ruleQueryHeadExpression EOF
=======
            // InternalAlf.g:10418:60: (iv_ruleQueryHeadExpression= ruleQueryHeadExpression EOF )
            // InternalAlf.g:10419:2: iv_ruleQueryHeadExpression= ruleQueryHeadExpression EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryHeadExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQueryHeadExpression=ruleQueryHeadExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryHeadExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryHeadExpression"


    // $ANTLR start "ruleQueryHeadExpression"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10337:1: ruleQueryHeadExpression returns [EObject current=null] : (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression ) ;
=======
    // InternalAlf.g:10425:1: ruleQueryHeadExpression returns [EObject current=null] : (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final EObject ruleQueryHeadExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_FeatureReferenceExpression_1 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10343:2: ( (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression ) )
            // InternalAlf.g:10344:2: (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression )
=======
            // InternalAlf.g:10431:2: ( (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression ) )
            // InternalAlf.g:10432:2: (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10344:2: (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression )
            // InternalAlf.g:10345:3: otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression
=======
            // InternalAlf.g:10432:2: (otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression )
            // InternalAlf.g:10433:3: otherlv_0= './' this_FeatureReferenceExpression_1= ruleFeatureReferenceExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            otherlv_0=(Token)match(input,84,FOLLOW_15); if (state.failed) return current;
=======
            otherlv_0=(Token)match(input,84,FOLLOW_16); if (state.failed) return current;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQueryHeadExpressionAccess().getFullStopSolidusKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQueryHeadExpressionAccess().getFeatureReferenceExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_FeatureReferenceExpression_1=ruleFeatureReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureReferenceExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQueryHeadExpression"


    // $ANTLR start "entryRuleName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10364:1: entryRuleName returns [String current=null] : iv_ruleName= ruleName EOF ;
=======
    // InternalAlf.g:10452:1: entryRuleName returns [String current=null] : iv_ruleName= ruleName EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleName = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10364:44: (iv_ruleName= ruleName EOF )
            // InternalAlf.g:10365:2: iv_ruleName= ruleName EOF
=======
            // InternalAlf.g:10452:44: (iv_ruleName= ruleName EOF )
            // InternalAlf.g:10453:2: iv_ruleName= ruleName EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10371:1: ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) ;
=======
    // InternalAlf.g:10459:1: ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_UNRESTRICTED_NAME_1=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10377:2: ( (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) )
            // InternalAlf.g:10378:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
=======
            // InternalAlf.g:10465:2: ( (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) )
            // InternalAlf.g:10466:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10378:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
=======
            // InternalAlf.g:10466:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==RULE_ID) ) {
                alt156=1;
            }
            else if ( (LA156_0==RULE_UNRESTRICTED_NAME) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10379:3: this_ID_0= RULE_ID
=======
                    // InternalAlf.g:10467:3: this_ID_0= RULE_ID
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10387:3: this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME
=======
                    // InternalAlf.g:10475:3: this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    this_UNRESTRICTED_NAME_1=(Token)match(input,RULE_UNRESTRICTED_NAME,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UNRESTRICTED_NAME_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_UNRESTRICTED_NAME_1, grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleQualifiedName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10398:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
=======
    // InternalAlf.g:10486:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10398:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalAlf.g:10399:2: iv_ruleQualifiedName= ruleQualifiedName EOF
=======
            // InternalAlf.g:10486:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalAlf.g:10487:2: iv_ruleQualifiedName= ruleQualifiedName EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10405:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName ) ;
=======
    // InternalAlf.g:10493:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Name_0 = null;

        AntlrDatatypeRuleToken this_ColonQualifiedName_1 = null;

        AntlrDatatypeRuleToken this_DotQualifiedName_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10411:2: ( (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName ) )
            // InternalAlf.g:10412:2: (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName )
=======
            // InternalAlf.g:10499:2: ( (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName ) )
            // InternalAlf.g:10500:2: (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10412:2: (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName )
=======
            // InternalAlf.g:10500:2: (this_Name_0= ruleName | this_ColonQualifiedName_1= ruleColonQualifiedName | this_DotQualifiedName_2= ruleDotQualifiedName )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt157=3;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_ID) ) {
                switch ( input.LA(2) ) {
                case 17:
                    {
                    alt157=2;
                    }
                    break;
                case 18:
                    {
                    int LA157_4 = input.LA(3);

                    if ( (LA157_4==82) ) {
                        alt157=1;
                    }
                    else if ( ((LA157_4>=RULE_ID && LA157_4<=RULE_UNRESTRICTED_NAME)) ) {
                        alt157=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 157, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 19:
                case 20:
                case 21:
                case 23:
                case 24:
                case 25:
                case 39:
<<<<<<< Upstream, based on origin/ST6RI-75
                case 40:
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 42:
                case 43:
                case 46:
                case 47:
                case 48:
                case 51:
                case 52:
                case 53:
                case 55:
                case 56:
                case 57:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 81:
                    {
                    alt157=1;
<<<<<<< Upstream, based on origin/ST6RI-75
                    }
                    break;
                case 18:
                    {
                    int LA157_4 = input.LA(3);

                    if ( ((LA157_4>=RULE_ID && LA157_4<=RULE_UNRESTRICTED_NAME)) ) {
                        alt157=3;
                    }
                    else if ( (LA157_4==82) ) {
                        alt157=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 157, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 17:
                    {
                    alt157=2;
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 157, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA157_0==RULE_UNRESTRICTED_NAME) ) {
                switch ( input.LA(2) ) {
<<<<<<< Upstream, based on origin/ST6RI-75
=======
                case 17:
                    {
                    alt157=2;
                    }
                    break;
                case 18:
                    {
                    int LA157_4 = input.LA(3);

                    if ( (LA157_4==82) ) {
                        alt157=1;
                    }
                    else if ( ((LA157_4>=RULE_ID && LA157_4<=RULE_UNRESTRICTED_NAME)) ) {
                        alt157=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 157, 4, input);

                        throw nvae;
                    }
                    }
                    break;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case EOF:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 19:
                case 20:
                case 21:
                case 23:
                case 24:
                case 25:
                case 39:
<<<<<<< Upstream, based on origin/ST6RI-75
                case 40:
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                case 42:
                case 43:
                case 46:
                case 47:
                case 48:
                case 51:
                case 52:
                case 53:
                case 55:
                case 56:
                case 57:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 81:
                    {
                    alt157=1;
<<<<<<< Upstream, based on origin/ST6RI-75
                    }
                    break;
                case 18:
                    {
                    int LA157_4 = input.LA(3);

                    if ( ((LA157_4>=RULE_ID && LA157_4<=RULE_UNRESTRICTED_NAME)) ) {
                        alt157=3;
                    }
                    else if ( (LA157_4==82) ) {
                        alt157=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 157, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 17:
                    {
                    alt157=2;
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 157, 2, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10413:3: this_Name_0= ruleName
=======
                    // InternalAlf.g:10501:3: this_Name_0= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Name_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10424:3: this_ColonQualifiedName_1= ruleColonQualifiedName
=======
                    // InternalAlf.g:10512:3: this_ColonQualifiedName_1= ruleColonQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQualifiedNameAccess().getColonQualifiedNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonQualifiedName_1=ruleColonQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ColonQualifiedName_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10435:3: this_DotQualifiedName_2= ruleDotQualifiedName
=======
                    // InternalAlf.g:10523:3: this_DotQualifiedName_2= ruleDotQualifiedName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQualifiedNameAccess().getDotQualifiedNameParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DotQualifiedName_2=ruleDotQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DotQualifiedName_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleColonQualifiedName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10449:1: entryRuleColonQualifiedName returns [String current=null] : iv_ruleColonQualifiedName= ruleColonQualifiedName EOF ;
=======
    // InternalAlf.g:10537:1: entryRuleColonQualifiedName returns [String current=null] : iv_ruleColonQualifiedName= ruleColonQualifiedName EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleColonQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleColonQualifiedName = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10449:58: (iv_ruleColonQualifiedName= ruleColonQualifiedName EOF )
            // InternalAlf.g:10450:2: iv_ruleColonQualifiedName= ruleColonQualifiedName EOF
=======
            // InternalAlf.g:10537:58: (iv_ruleColonQualifiedName= ruleColonQualifiedName EOF )
            // InternalAlf.g:10538:2: iv_ruleColonQualifiedName= ruleColonQualifiedName EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getColonQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleColonQualifiedName=ruleColonQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleColonQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColonQualifiedName"


    // $ANTLR start "ruleColonQualifiedName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10456:1: ruleColonQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ ) ;
=======
    // InternalAlf.g:10544:1: ruleColonQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleColonQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Name_0 = null;

        AntlrDatatypeRuleToken this_Name_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10462:2: ( (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ ) )
            // InternalAlf.g:10463:2: (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ )
=======
            // InternalAlf.g:10550:2: ( (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ ) )
            // InternalAlf.g:10551:2: (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10463:2: (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ )
            // InternalAlf.g:10464:3: this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+
=======
            // InternalAlf.g:10551:2: (this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+ )
            // InternalAlf.g:10552:3: this_Name_0= ruleName (kw= '::' this_Name_2= ruleName )+
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_20);
            this_Name_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Name_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10474:3: (kw= '::' this_Name_2= ruleName )+
=======
            // InternalAlf.g:10562:3: (kw= '::' this_Name_2= ruleName )+
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int cnt158=0;
            loop158:
            do {
                int alt158=2;
                int LA158_0 = input.LA(1);

                if ( (LA158_0==17) ) {
                    int LA158_1 = input.LA(2);

                    if ( ((LA158_1>=RULE_ID && LA158_1<=RULE_UNRESTRICTED_NAME)) ) {
                        alt158=1;
                    }


                }


                switch (alt158) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:10475:4: kw= '::' this_Name_2= ruleName
=======
            	    // InternalAlf.g:10563:4: kw= '::' this_Name_2= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    kw=(Token)match(input,17,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getColonQualifiedNameAccess().getColonColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_1_1());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_124);
=======
            	    pushFollow(FOLLOW_125);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    this_Name_2=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_Name_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt158 >= 1 ) break loop158;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(158, input);
                        throw eee;
                }
                cnt158++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColonQualifiedName"


    // $ANTLR start "entryRuleDotQualifiedName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10495:1: entryRuleDotQualifiedName returns [String current=null] : iv_ruleDotQualifiedName= ruleDotQualifiedName EOF ;
=======
    // InternalAlf.g:10583:1: entryRuleDotQualifiedName returns [String current=null] : iv_ruleDotQualifiedName= ruleDotQualifiedName EOF ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final String entryRuleDotQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDotQualifiedName = null;


        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10495:56: (iv_ruleDotQualifiedName= ruleDotQualifiedName EOF )
            // InternalAlf.g:10496:2: iv_ruleDotQualifiedName= ruleDotQualifiedName EOF
=======
            // InternalAlf.g:10583:56: (iv_ruleDotQualifiedName= ruleDotQualifiedName EOF )
            // InternalAlf.g:10584:2: iv_ruleDotQualifiedName= ruleDotQualifiedName EOF
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDotQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDotQualifiedName=ruleDotQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDotQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDotQualifiedName"


    // $ANTLR start "ruleDotQualifiedName"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10502:1: ruleDotQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ ) ;
=======
    // InternalAlf.g:10590:1: ruleDotQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final AntlrDatatypeRuleToken ruleDotQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Name_0 = null;

        AntlrDatatypeRuleToken this_Name_2 = null;



        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10508:2: ( (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ ) )
            // InternalAlf.g:10509:2: (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ )
=======
            // InternalAlf.g:10596:2: ( (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ ) )
            // InternalAlf.g:10597:2: (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10509:2: (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ )
            // InternalAlf.g:10510:3: this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+
=======
            // InternalAlf.g:10597:2: (this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+ )
            // InternalAlf.g:10598:3: this_Name_0= ruleName (kw= '.' this_Name_2= ruleName )+
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_21);
            this_Name_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Name_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10520:3: (kw= '.' this_Name_2= ruleName )+
=======
            // InternalAlf.g:10608:3: (kw= '.' this_Name_2= ruleName )+
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int cnt159=0;
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==18) ) {
                    int LA159_1 = input.LA(2);

                    if ( ((LA159_1>=RULE_ID && LA159_1<=RULE_UNRESTRICTED_NAME)) ) {
                        alt159=1;
                    }


                }


                switch (alt159) {
            	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
            	    // InternalAlf.g:10521:4: kw= '.' this_Name_2= ruleName
=======
            	    // InternalAlf.g:10609:4: kw= '.' this_Name_2= ruleName
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    {
            	    kw=(Token)match(input,18,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getDotQualifiedNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_1_1());
            	      			
            	    }
<<<<<<< Upstream, based on origin/ST6RI-75
            	    pushFollow(FOLLOW_125);
=======
            	    pushFollow(FOLLOW_126);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            	    this_Name_2=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_Name_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt159 >= 1 ) break loop159;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(159, input);
                        throw eee;
                }
                cnt159++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDotQualifiedName"


    // $ANTLR start "rulePackageElementVisibilityIndicator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10541:1: rulePackageElementVisibilityIndicator returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) ) ;
=======
    // InternalAlf.g:10629:1: rulePackageElementVisibilityIndicator returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final Enumerator rulePackageElementVisibilityIndicator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10547:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) ) )
            // InternalAlf.g:10548:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) )
=======
            // InternalAlf.g:10635:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) ) )
            // InternalAlf.g:10636:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10548:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) )
=======
            // InternalAlf.g:10636:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==85) ) {
                alt160=1;
            }
            else if ( (LA160_0==86) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }
            switch (alt160) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10549:3: (enumLiteral_0= 'public' )
=======
                    // InternalAlf.g:10637:3: (enumLiteral_0= 'public' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10549:3: (enumLiteral_0= 'public' )
                    // InternalAlf.g:10550:4: enumLiteral_0= 'public'
=======
                    // InternalAlf.g:10637:3: (enumLiteral_0= 'public' )
                    // InternalAlf.g:10638:4: enumLiteral_0= 'public'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_0=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPackageElementVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPackageElementVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10557:3: (enumLiteral_1= 'private' )
=======
                    // InternalAlf.g:10645:3: (enumLiteral_1= 'private' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10557:3: (enumLiteral_1= 'private' )
                    // InternalAlf.g:10558:4: enumLiteral_1= 'private'
=======
                    // InternalAlf.g:10645:3: (enumLiteral_1= 'private' )
                    // InternalAlf.g:10646:4: enumLiteral_1= 'private'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_1=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPackageElementVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPackageElementVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageElementVisibilityIndicator"


    // $ANTLR start "ruleVisibilityIndicator"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10568:1: ruleVisibilityIndicator returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) ) ;
=======
    // InternalAlf.g:10656:1: ruleVisibilityIndicator returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final Enumerator ruleVisibilityIndicator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10574:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) ) )
            // InternalAlf.g:10575:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) )
=======
            // InternalAlf.g:10662:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) ) )
            // InternalAlf.g:10663:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10575:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) )
=======
            // InternalAlf.g:10663:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'packaged' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt161=4;
            switch ( input.LA(1) ) {
            case 85:
                {
                alt161=1;
                }
                break;
            case 86:
                {
                alt161=2;
                }
                break;
            case 87:
                {
                alt161=3;
                }
                break;
            case 88:
                {
                alt161=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;
            }

            switch (alt161) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10576:3: (enumLiteral_0= 'public' )
=======
                    // InternalAlf.g:10664:3: (enumLiteral_0= 'public' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10576:3: (enumLiteral_0= 'public' )
                    // InternalAlf.g:10577:4: enumLiteral_0= 'public'
=======
                    // InternalAlf.g:10664:3: (enumLiteral_0= 'public' )
                    // InternalAlf.g:10665:4: enumLiteral_0= 'public'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_0=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10584:3: (enumLiteral_1= 'private' )
=======
                    // InternalAlf.g:10672:3: (enumLiteral_1= 'private' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10584:3: (enumLiteral_1= 'private' )
                    // InternalAlf.g:10585:4: enumLiteral_1= 'private'
=======
                    // InternalAlf.g:10672:3: (enumLiteral_1= 'private' )
                    // InternalAlf.g:10673:4: enumLiteral_1= 'private'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_1=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10592:3: (enumLiteral_2= 'protected' )
=======
                    // InternalAlf.g:10680:3: (enumLiteral_2= 'protected' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10592:3: (enumLiteral_2= 'protected' )
                    // InternalAlf.g:10593:4: enumLiteral_2= 'protected'
=======
                    // InternalAlf.g:10680:3: (enumLiteral_2= 'protected' )
                    // InternalAlf.g:10681:4: enumLiteral_2= 'protected'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_2=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10600:3: (enumLiteral_3= 'packaged' )
=======
                    // InternalAlf.g:10688:3: (enumLiteral_3= 'packaged' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10600:3: (enumLiteral_3= 'packaged' )
                    // InternalAlf.g:10601:4: enumLiteral_3= 'packaged'
=======
                    // InternalAlf.g:10688:3: (enumLiteral_3= 'packaged' )
                    // InternalAlf.g:10689:4: enumLiteral_3= 'packaged'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_3=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilityIndicator"


    // $ANTLR start "ruleFeatureDirection"
<<<<<<< Upstream, based on origin/ST6RI-75
    // InternalAlf.g:10611:1: ruleFeatureDirection returns [Enumerator current=null] : ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) ;
=======
    // InternalAlf.g:10699:1: ruleFeatureDirection returns [Enumerator current=null] : ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) ;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    public final Enumerator ruleFeatureDirection() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10617:2: ( ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) )
            // InternalAlf.g:10618:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
=======
            // InternalAlf.g:10705:2: ( ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) )
            // InternalAlf.g:10706:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            {
<<<<<<< Upstream, based on origin/ST6RI-75
            // InternalAlf.g:10618:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
=======
            // InternalAlf.g:10706:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            int alt162=3;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt162=1;
                }
                break;
            case 90:
                {
                alt162=2;
                }
                break;
            case 91:
                {
                alt162=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }

            switch (alt162) {
                case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10619:3: (enumLiteral_0= 'in' )
=======
                    // InternalAlf.g:10707:3: (enumLiteral_0= 'in' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10619:3: (enumLiteral_0= 'in' )
                    // InternalAlf.g:10620:4: enumLiteral_0= 'in'
=======
                    // InternalAlf.g:10707:3: (enumLiteral_0= 'in' )
                    // InternalAlf.g:10708:4: enumLiteral_0= 'in'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_0=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10627:3: (enumLiteral_1= 'out' )
=======
                    // InternalAlf.g:10715:3: (enumLiteral_1= 'out' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10627:3: (enumLiteral_1= 'out' )
                    // InternalAlf.g:10628:4: enumLiteral_1= 'out'
=======
                    // InternalAlf.g:10715:3: (enumLiteral_1= 'out' )
                    // InternalAlf.g:10716:4: enumLiteral_1= 'out'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_1=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10635:3: (enumLiteral_2= 'inout' )
=======
                    // InternalAlf.g:10723:3: (enumLiteral_2= 'inout' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
<<<<<<< Upstream, based on origin/ST6RI-75
                    // InternalAlf.g:10635:3: (enumLiteral_2= 'inout' )
                    // InternalAlf.g:10636:4: enumLiteral_2= 'inout'
=======
                    // InternalAlf.g:10723:3: (enumLiteral_2= 'inout' )
                    // InternalAlf.g:10724:4: enumLiteral_2= 'inout'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                    {
                    enumLiteral_2=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDirection"

<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR start synpred146_InternalAlf
    public final void synpred146_InternalAlf_fragment() throws RecognitionException {   
=======
    // $ANTLR start synpred145_InternalAlf
    public final void synpred145_InternalAlf_fragment() throws RecognitionException {   
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        Token lv_isOrdered_6_0=null;

<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5786:4: ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) )
        // InternalAlf.g:5786:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
=======
        // InternalAlf.g:5867:4: ( ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) ) )
        // InternalAlf.g:5867:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5786:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
        // InternalAlf.g:5787:5: {...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
=======
        // InternalAlf.g:5867:4: ({...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) ) )
        // InternalAlf.g:5868:5: {...}? => ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
<<<<<<< Upstream, based on origin/ST6RI-75
            throw new FailedPredicateException(input, "synpred146_InternalAlf", "getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0)");
=======
            throw new FailedPredicateException(input, "synpred145_InternalAlf", "getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0)");
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5787:105: ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
        // InternalAlf.g:5788:6: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
=======
        // InternalAlf.g:5868:105: ( ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) ) )
        // InternalAlf.g:5869:6: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        getUnorderedGroupHelper().select(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 0);
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5791:9: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
        // InternalAlf.g:5791:10: {...}? => ( (lv_isOrdered_6_0= 'ordered' ) )
=======
        // InternalAlf.g:5872:9: ({...}? => ( (lv_isOrdered_6_0= 'ordered' ) ) )
        // InternalAlf.g:5872:10: {...}? => ( (lv_isOrdered_6_0= 'ordered' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
<<<<<<< Upstream, based on origin/ST6RI-75
            throw new FailedPredicateException(input, "synpred146_InternalAlf", "true");
=======
            throw new FailedPredicateException(input, "synpred145_InternalAlf", "true");
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5791:19: ( (lv_isOrdered_6_0= 'ordered' ) )
        // InternalAlf.g:5791:20: (lv_isOrdered_6_0= 'ordered' )
=======
        // InternalAlf.g:5872:19: ( (lv_isOrdered_6_0= 'ordered' ) )
        // InternalAlf.g:5872:20: (lv_isOrdered_6_0= 'ordered' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5791:20: (lv_isOrdered_6_0= 'ordered' )
        // InternalAlf.g:5792:10: lv_isOrdered_6_0= 'ordered'
=======
        // InternalAlf.g:5872:20: (lv_isOrdered_6_0= 'ordered' )
        // InternalAlf.g:5873:10: lv_isOrdered_6_0= 'ordered'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        lv_isOrdered_6_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR end synpred146_InternalAlf
=======
    // $ANTLR end synpred145_InternalAlf
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR start synpred147_InternalAlf
    public final void synpred147_InternalAlf_fragment() throws RecognitionException {   
=======
    // $ANTLR start synpred146_InternalAlf
    public final void synpred146_InternalAlf_fragment() throws RecognitionException {   
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        Token lv_isNonunique_7_0=null;

<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5809:4: ( ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )
        // InternalAlf.g:5809:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
=======
        // InternalAlf.g:5890:4: ( ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) ) )
        // InternalAlf.g:5890:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5809:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
        // InternalAlf.g:5810:5: {...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
=======
        // InternalAlf.g:5890:4: ({...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) ) )
        // InternalAlf.g:5891:5: {...}? => ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
<<<<<<< Upstream, based on origin/ST6RI-75
            throw new FailedPredicateException(input, "synpred147_InternalAlf", "getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1)");
=======
            throw new FailedPredicateException(input, "synpred146_InternalAlf", "getUnorderedGroupHelper().canSelect(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1)");
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5810:105: ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
        // InternalAlf.g:5811:6: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
=======
        // InternalAlf.g:5891:105: ( ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) ) )
        // InternalAlf.g:5892:6: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        getUnorderedGroupHelper().select(grammarAccess.getTypePartAccess().getUnorderedGroup_2(), 1);
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5814:9: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
        // InternalAlf.g:5814:10: {...}? => ( (lv_isNonunique_7_0= 'nonunique' ) )
=======
        // InternalAlf.g:5895:9: ({...}? => ( (lv_isNonunique_7_0= 'nonunique' ) ) )
        // InternalAlf.g:5895:10: {...}? => ( (lv_isNonunique_7_0= 'nonunique' ) )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
<<<<<<< Upstream, based on origin/ST6RI-75
            throw new FailedPredicateException(input, "synpred147_InternalAlf", "true");
=======
            throw new FailedPredicateException(input, "synpred146_InternalAlf", "true");
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5814:19: ( (lv_isNonunique_7_0= 'nonunique' ) )
        // InternalAlf.g:5814:20: (lv_isNonunique_7_0= 'nonunique' )
=======
        // InternalAlf.g:5895:19: ( (lv_isNonunique_7_0= 'nonunique' ) )
        // InternalAlf.g:5895:20: (lv_isNonunique_7_0= 'nonunique' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:5814:20: (lv_isNonunique_7_0= 'nonunique' )
        // InternalAlf.g:5815:10: lv_isNonunique_7_0= 'nonunique'
=======
        // InternalAlf.g:5895:20: (lv_isNonunique_7_0= 'nonunique' )
        // InternalAlf.g:5896:10: lv_isNonunique_7_0= 'nonunique'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        lv_isNonunique_7_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR end synpred147_InternalAlf
=======
    // $ANTLR end synpred146_InternalAlf
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR start synpred200_InternalAlf
    public final void synpred200_InternalAlf_fragment() throws RecognitionException {   
=======
    // $ANTLR start synpred159_InternalAlf
    public final void synpred159_InternalAlf_fragment() throws RecognitionException {   
        Token lv_isOrdered_4_0=null;

        // InternalAlf.g:6638:4: ( ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) ) )
        // InternalAlf.g:6638:4: ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) )
        {
        // InternalAlf.g:6638:4: ({...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) ) )
        // InternalAlf.g:6639:5: {...}? => ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred159_InternalAlf", "getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 0)");
        }
        // InternalAlf.g:6639:114: ( ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) ) )
        // InternalAlf.g:6640:6: ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 0);
        // InternalAlf.g:6643:9: ({...}? => ( (lv_isOrdered_4_0= 'ordered' ) ) )
        // InternalAlf.g:6643:10: {...}? => ( (lv_isOrdered_4_0= 'ordered' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred159_InternalAlf", "true");
        }
        // InternalAlf.g:6643:19: ( (lv_isOrdered_4_0= 'ordered' ) )
        // InternalAlf.g:6643:20: (lv_isOrdered_4_0= 'ordered' )
        {
        // InternalAlf.g:6643:20: (lv_isOrdered_4_0= 'ordered' )
        // InternalAlf.g:6644:10: lv_isOrdered_4_0= 'ordered'
        {
        lv_isOrdered_4_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred159_InternalAlf

    // $ANTLR start synpred160_InternalAlf
    public final void synpred160_InternalAlf_fragment() throws RecognitionException {   
        Token lv_isNonunique_5_0=null;

        // InternalAlf.g:6661:4: ( ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) ) )
        // InternalAlf.g:6661:4: ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) )
        {
        // InternalAlf.g:6661:4: ({...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) ) )
        // InternalAlf.g:6662:5: {...}? => ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred160_InternalAlf", "getUnorderedGroupHelper().canSelect(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 1)");
        }
        // InternalAlf.g:6662:114: ( ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) ) )
        // InternalAlf.g:6663:6: ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConnectorTypePartAccess().getUnorderedGroup_2(), 1);
        // InternalAlf.g:6666:9: ({...}? => ( (lv_isNonunique_5_0= 'nonunique' ) ) )
        // InternalAlf.g:6666:10: {...}? => ( (lv_isNonunique_5_0= 'nonunique' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred160_InternalAlf", "true");
        }
        // InternalAlf.g:6666:19: ( (lv_isNonunique_5_0= 'nonunique' ) )
        // InternalAlf.g:6666:20: (lv_isNonunique_5_0= 'nonunique' )
        {
        // InternalAlf.g:6666:20: (lv_isNonunique_5_0= 'nonunique' )
        // InternalAlf.g:6667:10: lv_isNonunique_5_0= 'nonunique'
        {
        lv_isNonunique_5_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred160_InternalAlf

    // $ANTLR start synpred201_InternalAlf
    public final void synpred201_InternalAlf_fragment() throws RecognitionException {   
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;


<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:8890:3: ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) )
        // InternalAlf.g:8890:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
=======
        // InternalAlf.g:8978:3: ( ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' ) )
        // InternalAlf.g:8978:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:8890:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
        // InternalAlf.g:8891:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')'
=======
        // InternalAlf.g:8978:3: ( ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')' )
        // InternalAlf.g:8979:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) ) ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )* otherlv_2= '(' ( (lv_ownedRelationship_3_0= ruleExpressionMember ) ) otherlv_4= ')'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:8891:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) )
        // InternalAlf.g:8892:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
=======
        // InternalAlf.g:8979:4: ( (lv_ownedRelationship_0_0= ruleBodyParameterMember ) )
        // InternalAlf.g:8980:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:8892:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
        // InternalAlf.g:8893:6: lv_ownedRelationship_0_0= ruleBodyParameterMember
=======
        // InternalAlf.g:8980:5: (lv_ownedRelationship_0_0= ruleBodyParameterMember )
        // InternalAlf.g:8981:6: lv_ownedRelationship_0_0= ruleBodyParameterMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0());
          					
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        pushFollow(FOLLOW_115);
=======
        pushFollow(FOLLOW_116);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        lv_ownedRelationship_0_0=ruleBodyParameterMember();

        state._fsp--;
        if (state.failed) return ;

        }


        }

<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:8910:4: ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )*
        loop211:
=======
        // InternalAlf.g:8998:4: ( (lv_ownedRelationship_1_0= ruleBodyParameterMember ) )*
        loop207:
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        do {
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( ((LA211_0>=RULE_ID && LA211_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt211=1;
            }


            switch (alt211) {
        	case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
        	    // InternalAlf.g:8911:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
=======
        	    // InternalAlf.g:8999:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        	    {
<<<<<<< Upstream, based on origin/ST6RI-75
        	    // InternalAlf.g:8911:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
        	    // InternalAlf.g:8912:6: lv_ownedRelationship_1_0= ruleBodyParameterMember
=======
        	    // InternalAlf.g:8999:5: (lv_ownedRelationship_1_0= ruleBodyParameterMember )
        	    // InternalAlf.g:9000:6: lv_ownedRelationship_1_0= ruleBodyParameterMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        	    {
        	    if ( state.backtracking==0 ) {

        	      						newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0());
        	      					
        	    }
<<<<<<< Upstream, based on origin/ST6RI-75
        	    pushFollow(FOLLOW_115);
=======
        	    pushFollow(FOLLOW_116);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        	    lv_ownedRelationship_1_0=ruleBodyParameterMember();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop211;
            }
        } while (true);

<<<<<<< Upstream, based on origin/ST6RI-75
        otherlv_2=(Token)match(input,42,FOLLOW_72); if (state.failed) return ;
        // InternalAlf.g:8933:4: ( (lv_ownedRelationship_3_0= ruleExpressionMember ) )
        // InternalAlf.g:8934:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
=======
        otherlv_2=(Token)match(input,42,FOLLOW_73); if (state.failed) return ;
        // InternalAlf.g:9021:4: ( (lv_ownedRelationship_3_0= ruleExpressionMember ) )
        // InternalAlf.g:9022:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:8934:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
        // InternalAlf.g:8935:6: lv_ownedRelationship_3_0= ruleExpressionMember
=======
        // InternalAlf.g:9022:5: (lv_ownedRelationship_3_0= ruleExpressionMember )
        // InternalAlf.g:9023:6: lv_ownedRelationship_3_0= ruleExpressionMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipExpressionMemberParserRuleCall_0_3_0());
          					
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        pushFollow(FOLLOW_116);
=======
        pushFollow(FOLLOW_117);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        lv_ownedRelationship_3_0=ruleExpressionMember();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,43,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR end synpred200_InternalAlf
=======
    // $ANTLR end synpred201_InternalAlf
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR start synpred221_InternalAlf
    public final void synpred221_InternalAlf_fragment() throws RecognitionException {   
=======
    // $ANTLR start synpred222_InternalAlf
    public final void synpred222_InternalAlf_fragment() throws RecognitionException {   
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_3_0 = null;


<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10178:4: (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )
        // InternalAlf.g:10178:4: otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']'
=======
        // InternalAlf.g:10266:4: (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )
        // InternalAlf.g:10266:4: otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        otherlv_1=(Token)match(input,53,FOLLOW_15); if (state.failed) return ;
        // InternalAlf.g:10182:4: ()
        // InternalAlf.g:10183:5: 
=======
        otherlv_1=(Token)match(input,53,FOLLOW_16); if (state.failed) return ;
        // InternalAlf.g:10270:4: ()
        // InternalAlf.g:10271:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10192:4: ( (lv_ownedRelationship_3_0= ruleBodyMember ) )
        // InternalAlf.g:10193:5: (lv_ownedRelationship_3_0= ruleBodyMember )
=======
        // InternalAlf.g:10280:4: ( (lv_ownedRelationship_3_0= ruleBodyMember ) )
        // InternalAlf.g:10281:5: (lv_ownedRelationship_3_0= ruleBodyMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10193:5: (lv_ownedRelationship_3_0= ruleBodyMember )
        // InternalAlf.g:10194:6: lv_ownedRelationship_3_0= ruleBodyMember
=======
        // InternalAlf.g:10281:5: (lv_ownedRelationship_3_0= ruleBodyMember )
        // InternalAlf.g:10282:6: lv_ownedRelationship_3_0= ruleBodyMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOwnedRelationshipBodyMemberParserRuleCall_1_2_0());
          					
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        pushFollow(FOLLOW_79);
=======
        pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        lv_ownedRelationship_3_0=ruleBodyMember();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR end synpred221_InternalAlf
=======
    // $ANTLR end synpred222_InternalAlf
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR start synpred222_InternalAlf
    public final void synpred222_InternalAlf_fragment() throws RecognitionException {   
=======
    // $ANTLR start synpred223_InternalAlf
    public final void synpred223_InternalAlf_fragment() throws RecognitionException {   
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_ownedRelationship_10_0 = null;


<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10251:5: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )
        // InternalAlf.g:10251:5: otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']'
=======
        // InternalAlf.g:10339:5: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )
        // InternalAlf.g:10339:5: otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        otherlv_8=(Token)match(input,53,FOLLOW_15); if (state.failed) return ;
        // InternalAlf.g:10255:5: ()
        // InternalAlf.g:10256:6: 
=======
        otherlv_8=(Token)match(input,53,FOLLOW_16); if (state.failed) return ;
        // InternalAlf.g:10343:5: ()
        // InternalAlf.g:10344:6: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10265:5: ( (lv_ownedRelationship_10_0= ruleBodyMember ) )
        // InternalAlf.g:10266:6: (lv_ownedRelationship_10_0= ruleBodyMember )
=======
        // InternalAlf.g:10353:5: ( (lv_ownedRelationship_10_0= ruleBodyMember ) )
        // InternalAlf.g:10354:6: (lv_ownedRelationship_10_0= ruleBodyMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10266:6: (lv_ownedRelationship_10_0= ruleBodyMember )
        // InternalAlf.g:10267:7: lv_ownedRelationship_10_0= ruleBodyMember
=======
        // InternalAlf.g:10354:6: (lv_ownedRelationship_10_0= ruleBodyMember )
        // InternalAlf.g:10355:7: lv_ownedRelationship_10_0= ruleBodyMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0());
          						
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        pushFollow(FOLLOW_79);
=======
        pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        lv_ownedRelationship_10_0=ruleBodyMember();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_11=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR end synpred222_InternalAlf
=======
    // $ANTLR end synpred223_InternalAlf
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR start synpred223_InternalAlf
    public final void synpred223_InternalAlf_fragment() throws RecognitionException {   
=======
    // $ANTLR start synpred224_InternalAlf
    public final void synpred224_InternalAlf_fragment() throws RecognitionException {   
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_operand_7_0 = null;

        EObject lv_ownedRelationship_10_0 = null;


<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10217:4: (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )
        // InternalAlf.g:10217:4: otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
=======
        // InternalAlf.g:10305:4: (otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )? )
        // InternalAlf.g:10305:4: otherlv_5= '/' () ( (lv_operand_7_0= ruleQueryNameExpression ) ) (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        otherlv_5=(Token)match(input,76,FOLLOW_15); if (state.failed) return ;
        // InternalAlf.g:10221:4: ()
        // InternalAlf.g:10222:5: 
=======
        otherlv_5=(Token)match(input,76,FOLLOW_16); if (state.failed) return ;
        // InternalAlf.g:10309:4: ()
        // InternalAlf.g:10310:5: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10231:4: ( (lv_operand_7_0= ruleQueryNameExpression ) )
        // InternalAlf.g:10232:5: (lv_operand_7_0= ruleQueryNameExpression )
=======
        // InternalAlf.g:10319:4: ( (lv_operand_7_0= ruleQueryNameExpression ) )
        // InternalAlf.g:10320:5: (lv_operand_7_0= ruleQueryNameExpression )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10232:5: (lv_operand_7_0= ruleQueryNameExpression )
        // InternalAlf.g:10233:6: lv_operand_7_0= ruleQueryNameExpression
=======
        // InternalAlf.g:10320:5: (lv_operand_7_0= ruleQueryNameExpression )
        // InternalAlf.g:10321:6: lv_operand_7_0= ruleQueryNameExpression
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOperandQueryNameExpressionParserRuleCall_2_2_0());
          					
        }
<<<<<<< Upstream, based on origin/ST6RI-75
        pushFollow(FOLLOW_86);
=======
        pushFollow(FOLLOW_87);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        lv_operand_7_0=ruleQueryNameExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

<<<<<<< Upstream, based on origin/ST6RI-75
        // InternalAlf.g:10250:4: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
        int alt215=2;
        int LA215_0 = input.LA(1);
=======
        // InternalAlf.g:10338:4: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?
        int alt211=2;
        int LA211_0 = input.LA(1);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
        if ( (LA215_0==53) ) {
            alt215=1;
=======
        if ( (LA211_0==53) ) {
            alt211=1;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        switch (alt215) {
            case 1 :
<<<<<<< Upstream, based on origin/ST6RI-75
                // InternalAlf.g:10251:5: otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']'
=======
                // InternalAlf.g:10339:5: otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']'
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                {
<<<<<<< Upstream, based on origin/ST6RI-75
                otherlv_8=(Token)match(input,53,FOLLOW_15); if (state.failed) return ;
                // InternalAlf.g:10255:5: ()
                // InternalAlf.g:10256:6: 
=======
                otherlv_8=(Token)match(input,53,FOLLOW_16); if (state.failed) return ;
                // InternalAlf.g:10343:5: ()
                // InternalAlf.g:10344:6: 
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                {
                if ( state.backtracking==0 ) {

                  						/* */
                  					
                }

                }

<<<<<<< Upstream, based on origin/ST6RI-75
                // InternalAlf.g:10265:5: ( (lv_ownedRelationship_10_0= ruleBodyMember ) )
                // InternalAlf.g:10266:6: (lv_ownedRelationship_10_0= ruleBodyMember )
=======
                // InternalAlf.g:10353:5: ( (lv_ownedRelationship_10_0= ruleBodyMember ) )
                // InternalAlf.g:10354:6: (lv_ownedRelationship_10_0= ruleBodyMember )
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                {
<<<<<<< Upstream, based on origin/ST6RI-75
                // InternalAlf.g:10266:6: (lv_ownedRelationship_10_0= ruleBodyMember )
                // InternalAlf.g:10267:7: lv_ownedRelationship_10_0= ruleBodyMember
=======
                // InternalAlf.g:10354:6: (lv_ownedRelationship_10_0= ruleBodyMember )
                // InternalAlf.g:10355:7: lv_ownedRelationship_10_0= ruleBodyMember
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0());
                  						
                }
<<<<<<< Upstream, based on origin/ST6RI-75
                pushFollow(FOLLOW_79);
=======
                pushFollow(FOLLOW_80);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
                lv_ownedRelationship_10_0=ruleBodyMember();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_11=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    // $ANTLR end synpred223_InternalAlf
=======
    // $ANTLR end synpred224_InternalAlf
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

    // Delegated rules

    public final boolean synpred146_InternalAlf() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalAlf_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    public final boolean synpred147_InternalAlf() {
=======
    public final boolean synpred160_InternalAlf() {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        state.backtracking++;
        int start = input.mark();
        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            synpred147_InternalAlf_fragment(); // can never throw exception
=======
            synpred160_InternalAlf_fragment(); // can never throw exception
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    public final boolean synpred200_InternalAlf() {
=======
    public final boolean synpred159_InternalAlf() {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        state.backtracking++;
        int start = input.mark();
        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            synpred200_InternalAlf_fragment(); // can never throw exception
=======
            synpred159_InternalAlf_fragment(); // can never throw exception
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    public final boolean synpred222_InternalAlf() {
=======
    public final boolean synpred201_InternalAlf() {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        state.backtracking++;
        int start = input.mark();
        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            synpred222_InternalAlf_fragment(); // can never throw exception
=======
            synpred201_InternalAlf_fragment(); // can never throw exception
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    public final boolean synpred223_InternalAlf() {
=======
    public final boolean synpred222_InternalAlf() {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        state.backtracking++;
        int start = input.mark();
        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            synpred223_InternalAlf_fragment(); // can never throw exception
=======
            synpred222_InternalAlf_fragment(); // can never throw exception
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    public final boolean synpred221_InternalAlf() {
=======
    public final boolean synpred223_InternalAlf() {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        state.backtracking++;
        int start = input.mark();
        try {
<<<<<<< Upstream, based on origin/ST6RI-75
            synpred221_InternalAlf_fragment(); // can never throw exception
=======
            synpred223_InternalAlf_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalAlf() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalAlf_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalAlf() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalAlf_fragment(); // can never throw exception
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA2 dfa2 = new DFA2(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA56 dfa56 = new DFA56(this);
<<<<<<< Upstream, based on origin/ST6RI-75
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA154 dfa154 = new DFA154(this);
    static final String dfa_1s = "\40\uffff";
    static final String dfa_2s = "\2\4\2\20\1\11\1\uffff\1\32\7\uffff\2\21\3\11\1\4\2\22\1\24\2\21\2\24\1\11\1\4\1\11\2\24";
    static final String dfa_3s = "\2\126\2\20\1\12\1\uffff\1\40\7\uffff\2\25\2\23\1\12\1\126\2\25\1\24\2\25\2\24\1\23\1\126\1\23\2\24";
    static final String dfa_4s = "\5\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\22\uffff";
    static final String dfa_5s = "\40\uffff}>";
=======
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA154 dfa154 = new DFA154(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\2\4\2\20\1\11\1\uffff\1\32\10\uffff\2\21\2\11\1\4\1\11\2\21\3\24\2\22\1\11\1\4\1\11\2\24";
    static final String dfa_3s = "\2\126\2\20\1\12\1\uffff\1\51\10\uffff\2\25\1\23\1\12\1\126\1\23\2\25\3\24\2\25\1\23\1\126\1\23\2\24";
    static final String dfa_4s = "\5\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\22\uffff";
    static final String dfa_5s = "\41\uffff}>";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    static final String[] dfa_6s = {
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\6\63\uffff\1\2\1\3",
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\6\63\uffff\1\2\1\3",
=======
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\14\1\15\1\16\1\6\7\uffff\1\13\53\uffff\1\2\1\3",
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\14\1\15\1\16\1\6\7\uffff\1\13\53\uffff\1\2\1\3",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "\1\4",
            "\1\4",
            "\1\17\1\20",
            "",
            "\1\7\1\10\1\11\1\12\1\14\1\15\1\16\10\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\21\1\20\1\uffff\1\23\1\22",
            "\1\21\1\20\1\uffff\1\23\1\22",
            "\1\24\1\25\10\uffff\1\26",
            "\1\27\1\30\10\uffff\1\26",
            "\1\31\1\32",
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\6\63\uffff\1\2\1\3",
            "\1\33\1\uffff\1\23\1\22",
            "\1\33\1\uffff\1\23\1\22",
            "\1\34",
            "\1\35\2\uffff\1\23\1\22",
            "\1\35\2\uffff\1\23\1\22",
=======
            "",
            "\1\21\1\24\1\uffff\1\23\1\22",
            "\1\21\1\24\1\uffff\1\23\1\22",
            "\1\25\1\26\10\uffff\1\27",
            "\1\30\1\31",
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\14\1\15\1\16\1\6\7\uffff\1\13\53\uffff\1\2\1\3",
            "\1\32\1\33\10\uffff\1\27",
            "\1\34\2\uffff\1\23\1\22",
            "\1\34\2\uffff\1\23\1\22",
            "\1\35",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "\1\23",
            "\1\23",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\24\1\25\10\uffff\1\36",
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\6\63\uffff\1\2\1\3",
            "\1\27\1\30\10\uffff\1\37",
            "\1\34",
            "\1\34"
=======
            "\1\36\1\uffff\1\23\1\22",
            "\1\36\1\uffff\1\23\1\22",
            "\1\25\1\26\10\uffff\1\37",
            "\1\1\13\uffff\1\4\5\uffff\1\5\3\uffff\1\7\1\10\1\11\1\12\1\14\1\15\1\16\1\6\7\uffff\1\13\53\uffff\1\2\1\3",
            "\1\32\1\33\10\uffff\1\40",
            "\1\35",
            "\1\35"
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "86:2: (this_PackageUnitDefinition_0= rulePackageUnitDefinition | this_ClassUnitDefinition_1= ruleClassUnitDefinition | this_ObjectClassUnitDefinition_2= ruleObjectClassUnitDefinition | this_ValueClassUnitDefinition_3= ruleValueClassUnitDefinition | this_AssociationUnitDefinition_4= ruleAssociationUnitDefinition | this_InteractionUnitDefinition_5= ruleInteractionUnitDefinition | this_BehaviorUnitDefinition_6= ruleBehaviorUnitDefinition | this_FunctionUnitDefinition_7= ruleFunctionUnitDefinition | this_FeatureUnitDefinition_8= ruleFeatureUnitDefinition )";
        }
    }
    static final String dfa_7s = "\22\uffff";
    static final String dfa_8s = "\2\4\1\uffff\2\20\1\11\2\21\2\11\1\uffff\2\21\1\uffff\2\22\2\11";
    static final String dfa_9s = "\2\126\1\uffff\2\20\1\12\2\25\2\23\1\uffff\2\25\1\uffff\2\25\2\23";
    static final String dfa_10s = "\2\uffff\1\3\7\uffff\1\2\2\uffff\1\1\4\uffff";
    static final String dfa_11s = "\22\uffff}>";
    static final String[] dfa_12s = {
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\1\13\uffff\1\5\5\uffff\1\2\3\uffff\10\2\63\uffff\1\3\1\4",
            "\1\1\13\uffff\1\5\5\uffff\1\2\3\uffff\10\2\63\uffff\1\3\1\4",
=======
            "\1\1\13\uffff\1\5\5\uffff\1\2\3\uffff\10\2\7\uffff\1\2\53\uffff\1\3\1\4",
            "\1\1\13\uffff\1\5\5\uffff\1\2\3\uffff\10\2\7\uffff\1\2\53\uffff\1\3\1\4",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "\1\5",
            "\1\5",
            "\1\6\1\7",
            "\1\10\1\11\1\uffff\2\12",
            "\1\10\1\11\1\uffff\2\12",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15",
            "",
            "\1\20\2\uffff\2\12",
            "\1\20\2\uffff\2\12",
            "",
            "\1\21\1\uffff\2\12",
            "\1\21\1\uffff\2\12",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 630:3: ( ( (lv_ownedRelationship_0_0= rulePackageImport ) ) | ( (lv_ownedRelationship_1_0= ruleElementImport ) ) )*";
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_13s = "\1\4\1\uffff\1\4\2\11\1\uffff\1\11\2\21\2\11\2\21\1\uffff\2\22\2\11";
    static final String dfa_14s = "\1\126\1\uffff\1\126\2\55\1\uffff\1\12\2\25\2\23\2\25\1\uffff\2\25\2\23";
    static final String dfa_15s = "\1\uffff\1\3\3\uffff\1\1\7\uffff\1\2\4\uffff";
    static final String[] dfa_16s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\10\5\12\uffff\2\5\47\uffff\1\3\1\4",
=======
    static final String dfa_13s = "\12\uffff";
    static final String dfa_14s = "\1\26\1\uffff\1\32\7\uffff";
    static final String dfa_15s = "\1\51\1\uffff\1\51\7\uffff";
    static final String dfa_16s = "\1\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String dfa_17s = "\12\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\3\uffff\1\3\1\4\1\5\1\6\1\10\1\11\1\uffff\1\2\7\uffff\1\7",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\10\5\12\uffff\2\5\47\uffff\1\3\1\4",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\10\5\12\uffff\2\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\10\5\12\uffff\2\5",
=======
            "\1\3\1\4\1\5\1\6\1\10\1\11\11\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1027:2: (this_PackageDefinitionOrStub_0= rulePackageDefinitionOrStub | this_ClassDefinitionOrStub_1= ruleClassDefinitionOrStub | this_ObjectClassDefinitionOrStub_2= ruleObjectClassDefinitionOrStub | this_ValueClassDefinitionOrStub_3= ruleValueClassDefinitionOrStub | this_AssociationDefinitionOrStub_4= ruleAssociationDefinitionOrStub | this_InteractionDefinitionOrStub_5= ruleInteractionDefinitionOrStub | this_BehaviorDefinitionOrStub_6= ruleBehaviorDefinitionOrStub | this_FunctionDefinitionOrStub_7= ruleFunctionDefinitionOrStub )";
        }
    }
    static final String dfa_19s = "\1\4\1\uffff\1\4\2\11\1\uffff\1\11\2\21\2\11\1\uffff\2\21\2\22\2\11";
    static final String dfa_20s = "\1\126\1\uffff\1\126\2\55\1\uffff\1\12\2\25\2\23\1\uffff\4\25\2\23";
    static final String dfa_21s = "\1\uffff\1\3\3\uffff\1\1\5\uffff\1\2\6\uffff";
    static final String[] dfa_22s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\10\5\7\uffff\1\5\2\uffff\2\5\47\uffff\1\3\1\4",
            "",
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\10\5\7\uffff\1\5\2\uffff\2\5\47\uffff\1\3\1\4",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\10\5\7\uffff\1\5\2\uffff\2\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\10\5\7\uffff\1\5\2\uffff\2\5",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "\1\7\1\10",
            "\1\11\1\12\1\uffff\2\5",
            "\1\11\1\12\1\uffff\2\5",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15",
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
=======
            "\1\14\1\15\10\uffff\1\13",
            "\1\16\1\17\10\uffff\1\13",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15"
=======
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\14\1\15\10\uffff\1\13",
            "\1\16\1\17\10\uffff\1\13"
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    };
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[][] dfa_22 = unpackEncodedStringArray(dfa_22s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_21;
            this.special = dfa_11;
            this.transition = dfa_22;
        }
        public String getDescription() {
            return "()* loopback of 1194:3: ( ( (lv_ownedRelationship_3_0= rulePackageMember ) ) | ( (lv_ownedRelationship_4_0= rulePackageImport ) ) )*";
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_17s = "\37\uffff";
    static final String dfa_18s = "\1\20\1\11\1\uffff\6\11\1\uffff\2\27\1\uffff\2\24\1\uffff\2\24\1\uffff\2\24\1\uffff\2\24\1\uffff\2\31\1\uffff\2\31\1\uffff";
    static final String dfa_19s = "\1\41\1\31\1\uffff\6\31\1\uffff\2\31\1\uffff\2\47\1\uffff\2\47\1\uffff\2\47\1\uffff\2\47\1\uffff\2\52\1\uffff\2\52\1\uffff";
    static final String dfa_20s = "\2\uffff\1\1\6\uffff\1\11\2\uffff\1\2\2\uffff\1\3\2\uffff\1\4\2\uffff\1\5\2\uffff\1\6\2\uffff\1\7\2\uffff\1\10";
    static final String dfa_21s = "\37\uffff}>";
    static final String[] dfa_22s = {
            "\1\11\5\uffff\1\1\3\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\2",
=======
    static final String dfa_23s = "\37\uffff";
    static final String dfa_24s = "\1\20\1\11\1\uffff\6\11\1\uffff\2\27\1\uffff\2\24\1\uffff\2\24\1\uffff\2\24\1\uffff\2\24\1\uffff\2\31\1\uffff\2\31\1\uffff";
    static final String dfa_25s = "\1\51\1\31\1\uffff\6\31\1\uffff\2\31\1\uffff\2\46\1\uffff\2\46\1\uffff\2\46\1\uffff\2\46\1\uffff\2\52\1\uffff\2\52\1\uffff";
    static final String dfa_26s = "\2\uffff\1\1\6\uffff\1\11\2\uffff\1\2\2\uffff\1\3\2\uffff\1\4\2\uffff\1\5\2\uffff\1\6\2\uffff\1\7\2\uffff\1\10";
    static final String dfa_27s = "\37\uffff}>";
    static final String[] dfa_28s = {
            "\1\11\5\uffff\1\1\3\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\2\7\uffff\1\2",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "\1\12\1\13\16\uffff\1\14",
            "",
            "\1\15\1\16\16\uffff\1\17",
            "\1\20\1\21\16\uffff\1\22",
            "\1\23\1\24\16\uffff\1\25",
            "\1\26\1\27\16\uffff\1\30",
            "\1\31\1\32\16\uffff\1\33",
            "\1\34\1\35\16\uffff\1\36",
            "",
            "\1\2\1\uffff\1\14",
            "\1\2\1\uffff\1\14",
            "",
            "\1\2\2\uffff\1\2\1\uffff\1\17\15\uffff\1\2",
            "\1\2\2\uffff\1\2\1\uffff\1\17\15\uffff\1\2",
            "",
            "\1\2\2\uffff\1\2\1\uffff\1\22\15\uffff\1\2",
            "\1\2\2\uffff\1\2\1\uffff\1\22\15\uffff\1\2",
            "",
            "\1\2\2\uffff\1\2\1\uffff\1\25\15\uffff\1\2",
            "\1\2\2\uffff\1\2\1\uffff\1\25\15\uffff\1\2",
            "",
            "\1\2\2\uffff\1\2\1\uffff\1\30\15\uffff\1\2",
            "\1\2\2\uffff\1\2\1\uffff\1\30\15\uffff\1\2",
            "",
            "\1\33\20\uffff\1\2",
            "\1\33\20\uffff\1\2",
            "",
            "\1\36\20\uffff\1\2",
            "\1\36\20\uffff\1\2",
<<<<<<< Upstream, based on origin/ST6RI-75
            ""
    };

    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[][] dfa_22 = unpackEncodedStringArray(dfa_22s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_17;
            this.eof = dfa_17;
            this.min = dfa_18;
            this.max = dfa_19;
            this.accept = dfa_20;
            this.special = dfa_21;
            this.transition = dfa_22;
        }
        public String getDescription() {
            return "1295:2: ( ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) ) | (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) | (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' ) | (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' ) | (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' ) | (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' ) )";
        }
    }
    static final String dfa_23s = "\16\uffff";
    static final String dfa_24s = "\2\11\2\24\1\11\1\uffff\2\24\3\uffff\1\11\2\uffff";
    static final String dfa_25s = "\1\55\1\56\2\70\1\55\1\uffff\2\70\3\uffff\1\56\2\uffff";
    static final String dfa_26s = "\5\uffff\1\6\2\uffff\1\5\1\3\1\1\1\uffff\1\2\1\4";
    static final String dfa_27s = "\16\uffff}>";
    static final String[] dfa_28s = {
            "\1\2\1\3\25\uffff\1\1\1\4\12\uffff\2\5",
            "\1\6\1\7\16\uffff\1\10\24\uffff\1\11",
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "\2\14\25\uffff\1\13\13\uffff\2\5",
            "",
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "",
            "",
            "",
            "\2\14\43\uffff\1\15",
            "",
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            ""
    };

    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[][] dfa_28 = unpackEncodedStringArray(dfa_28s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_23;
            this.eof = dfa_23;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_26;
            this.special = dfa_27;
            this.transition = dfa_28;
        }
        public String getDescription() {
            return "1366:2: ( ( (lv_ownedRelatedElement_0_0= ruleNonFeatureDefinition ) ) | (otherlv_1= 'package' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | (otherlv_6= 'Class' ( (lv_memberName_7_0= ruleName ) )? otherlv_8= 'is' ( ( ruleQualifiedName ) ) otherlv_10= ';' ) | (otherlv_11= 'class' ( (lv_memberName_12_0= ruleName ) )? otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | (otherlv_16= 'datatype' ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | (otherlv_21= 'assoc' ( (lv_memberName_22_0= ruleName ) )? otherlv_23= 'is' ( ( ruleQualifiedName ) ) otherlv_25= ';' ) | (otherlv_26= 'behavior' ( (lv_memberName_27_0= ruleName ) )? otherlv_28= 'is' ( ( ruleQualifiedName ) ) otherlv_30= ';' ) | (otherlv_31= 'function' ( (lv_memberName_32_0= ruleName ) )? otherlv_33= 'is' ( ( ruleQualifiedName ) ) otherlv_35= ';' ) | (otherlv_36= 'import' ( ( ruleQualifiedName ) ) (otherlv_38= 'as' ( (lv_memberName_39_0= ruleName ) ) )? otherlv_40= ';' ) )";
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_29s = "\1\133\1\uffff\3\133\1\uffff\1\12\2\25\2\23\2\25\1\uffff\2\25\2\23";
    static final String[] dfa_30s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\15\5\56\uffff\1\3\1\4\5\5",
=======
    static final String dfa_29s = "\16\uffff";
    static final String dfa_30s = "\2\11\2\24\1\11\1\uffff\2\24\3\uffff\1\11\2\uffff";
    static final String dfa_31s = "\1\55\1\56\2\70\1\55\1\uffff\2\70\3\uffff\1\56\2\uffff";
    static final String dfa_32s = "\5\uffff\1\6\2\uffff\1\5\1\3\1\1\1\uffff\1\2\1\4";
    static final String dfa_33s = "\16\uffff}>";
    static final String[] dfa_34s = {
            "\1\2\1\3\25\uffff\1\1\1\4\12\uffff\2\5",
            "\1\6\1\7\16\uffff\1\10\24\uffff\1\11",
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "\2\14\25\uffff\1\13\13\uffff\2\5",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\56\uffff\1\3\1\4\5\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\62\uffff\3\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\62\uffff\3\5",
=======
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "\1\12\2\uffff\1\12\1\uffff\1\10\24\uffff\3\12\2\uffff\3\12\2\uffff\1\12",
            "",
            "",
            "",
            "\2\14\43\uffff\1\15",
            "",
            ""
    };

    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_29;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "1824:2: ( ( (otherlv_0= 'feature' )? ( (lv_ownedRelatedElement_1_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_2= 'abstract' (otherlv_3= 'feature' )? ( (lv_ownedRelatedElement_4_0= ruleAbstractNamedFeatureDefinition ) ) ) | (otherlv_5= 'feature' ( (lv_ownedRelatedElement_6_0= ruleUnnamedFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'feature' ( (lv_ownedRelatedElement_9_0= ruleAbstractUnnamedFeatureDefinition ) ) ) | ( ( (otherlv_10= 'feature' ( (lv_memberName_11_0= ruleName ) )? ) | ( (lv_memberName_12_0= ruleName ) ) ) otherlv_13= 'is' ( ( ruleQualifiedName ) ) otherlv_15= ';' ) | this_BehaviorStepMemberDefinition_16= ruleBehaviorStepMemberDefinition[$current] )";
        }
    }
    static final String dfa_35s = "\1\4\1\uffff\1\4\2\11\1\uffff\1\11\2\21\2\11\2\21\1\uffff\2\22\2\11";
    static final String dfa_36s = "\1\133\1\uffff\3\133\1\uffff\1\12\2\25\2\23\2\25\1\uffff\2\25\2\23";
    static final String dfa_37s = "\1\uffff\1\3\3\uffff\1\1\7\uffff\1\2\4\uffff";
    static final String[] dfa_38s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\14\5\3\uffff\1\5\53\uffff\1\3\1\4\5\5",
            "",
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\53\uffff\1\3\1\4\5\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\57\uffff\3\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\57\uffff\3\5",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "\1\7\1\10",
            "\1\11\1\12\1\uffff\2\5",
            "\1\11\1\12\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15",
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
            "",
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15"
    };
<<<<<<< Upstream, based on origin/ST6RI-75
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);
=======
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_7;
            this.eof = dfa_7;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.min = dfa_13;
            this.max = dfa_29;
            this.accept = dfa_15;
=======
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.special = dfa_11;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.transition = dfa_30;
=======
            this.transition = dfa_38;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
            return "()* loopback of 2055:4: ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_31s = "\1\4\1\uffff\1\4\2\11\1\uffff\1\11\2\21\2\11\1\uffff\2\21\2\22\2\11";
    static final String dfa_32s = "\1\133\1\uffff\3\133\1\uffff\1\12\2\25\2\23\1\uffff\4\25\2\23";
    static final String dfa_33s = "\1\uffff\1\3\3\uffff\1\1\5\uffff\1\2\6\uffff";
    static final String[] dfa_34s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\15\5\56\uffff\1\3\1\4\5\5",
=======
    static final String dfa_39s = "\1\4\1\uffff\1\4\2\11\1\uffff\1\11\2\21\2\11\1\uffff\2\22\2\21\2\11";
    static final String dfa_40s = "\1\133\1\uffff\3\133\1\uffff\1\12\2\25\2\23\1\uffff\4\25\2\23";
    static final String[] dfa_41s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\14\5\3\uffff\1\5\53\uffff\1\3\1\4\5\5",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\56\uffff\1\3\1\4\5\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\62\uffff\3\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\62\uffff\3\5",
=======
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\53\uffff\1\3\1\4\5\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\57\uffff\3\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\57\uffff\3\5",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "\1\7\1\10",
            "\1\11\1\12\1\uffff\2\5",
            "\1\11\1\12\1\uffff\2\5",
            "\1\14\1\15\10\uffff\1\13",
            "\1\16\1\17\10\uffff\1\13",
            "",
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\14\1\15\10\uffff\1\13",
            "\1\16\1\17\10\uffff\1\13"
    };
<<<<<<< Upstream, based on origin/ST6RI-75
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);
=======
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[][] dfa_41 = unpackEncodedStringArray(dfa_41s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_7;
            this.eof = dfa_7;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
=======
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_21;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.special = dfa_11;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "()* loopback of 2073:4: ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
        }
    }
    static final String dfa_35s = "\12\uffff";
    static final String dfa_36s = "\2\4\4\11\1\uffff\1\11\2\uffff";
    static final String dfa_37s = "\6\133\1\uffff\1\133\2\uffff";
    static final String dfa_38s = "\6\uffff\1\1\1\uffff\1\2\1\3";
    static final String dfa_39s = "\12\uffff}>";
    static final String[] dfa_40s = {
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\56\uffff\1\2\1\3\1\4\1\5\3\11",
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\56\uffff\1\2\1\3\1\4\1\5\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\62\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\62\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\62\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\62\uffff\3\11",
            "",
            "\2\11\17\uffff\6\6\1\10\1\uffff\5\10\62\uffff\3\11",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
=======
            this.transition = dfa_41;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
            return "()* loopback of 2144:4: ( ( (lv_ownedRelationship_2_0= ruleCategoryMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_41s = "\1\11\2\21\1\uffff\1\11\2\21\2\11\1\uffff\2\21\2\22";
    static final String dfa_42s = "\1\60\2\72\1\uffff\1\12\2\72\2\12\1\uffff\4\71";
    static final String dfa_43s = "\3\uffff\1\1\5\uffff\1\2\4\uffff";
    static final String[] dfa_44s = {
            "\1\1\1\2\16\uffff\1\4\20\uffff\1\3\5\uffff\1\3",
            "\2\3\6\uffff\1\4\20\uffff\1\3\5\uffff\1\3\4\uffff\1\3\3\uffff\2\3",
            "\2\3\6\uffff\1\4\20\uffff\1\3\5\uffff\1\3\4\uffff\1\3\3\uffff\2\3",
=======
    static final String dfa_42s = "\2\4\4\11\1\uffff\1\11\2\uffff";
    static final String dfa_43s = "\6\133\1\uffff\1\133\2\uffff";
    static final String dfa_44s = "\6\uffff\1\1\1\uffff\1\2\1\3";
    static final String[] dfa_45s = {
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\53\uffff\1\2\1\3\1\4\1\5\3\11",
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\53\uffff\1\2\1\3\1\4\1\5\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\57\uffff\3\11",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\5\1\6",
            "\1\7\1\10\1\uffff\1\11\40\uffff\1\3\3\uffff\2\3",
            "\1\7\1\10\1\uffff\1\11\40\uffff\1\3\3\uffff\2\3",
            "\1\12\1\13",
            "\1\14\1\15",
            "",
            "\1\7\2\uffff\1\11\40\uffff\1\3\3\uffff\1\3",
            "\1\7\2\uffff\1\11\40\uffff\1\3\3\uffff\1\3",
            "\1\10\1\uffff\1\11\40\uffff\1\3\3\uffff\1\3",
            "\1\10\1\uffff\1\11\40\uffff\1\3\3\uffff\1\3"
=======
            "\2\11\17\uffff\6\6\1\10\1\uffff\4\10\3\uffff\1\6\57\uffff\3\11",
            "",
            ""
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    };
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_17;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "2208:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_FeatureCategoryMember_2= ruleFeatureCategoryMember )";
        }
    }
    static final String dfa_46s = "\1\11\2\21\1\uffff\1\11\2\21\1\uffff\2\11\2\21\2\22";
    static final String dfa_47s = "\1\65\2\72\1\uffff\1\12\2\72\1\uffff\2\12\4\71";
    static final String dfa_48s = "\3\uffff\1\1\3\uffff\1\2\6\uffff";
    static final String[] dfa_49s = {
            "\1\1\1\2\16\uffff\1\4\20\uffff\1\3\5\uffff\1\3\2\uffff\3\3",
            "\2\3\6\uffff\1\4\20\uffff\1\3\5\uffff\1\3\2\uffff\3\3\3\uffff\2\3",
            "\2\3\6\uffff\1\4\20\uffff\1\3\5\uffff\1\3\2\uffff\3\3\3\uffff\2\3",
            "",
            "\1\5\1\6",
            "\1\10\1\11\1\uffff\1\7\40\uffff\1\3\3\uffff\2\3",
            "\1\10\1\11\1\uffff\1\7\40\uffff\1\3\3\uffff\2\3",
            "",
            "\1\12\1\13",
            "\1\14\1\15",
            "\1\10\2\uffff\1\7\40\uffff\1\3\3\uffff\1\3",
            "\1\10\2\uffff\1\7\40\uffff\1\3\3\uffff\1\3",
            "\1\11\1\uffff\1\7\40\uffff\1\3\3\uffff\1\3",
            "\1\11\1\uffff\1\7\40\uffff\1\3\3\uffff\1\3"
    };
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.eot = dfa_23;
            this.eof = dfa_23;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_27;
            this.transition = dfa_44;
=======
            this.eot = dfa_29;
            this.eof = dfa_29;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_33;
            this.transition = dfa_49;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
            return "2757:5: ( ( (lv_ownedRelatedElement_19_0= ruleConnectorDefinition ) ) | ( ( (lv_memberName_20_0= ruleName ) )? otherlv_21= 'is' ( ( ruleQualifiedName ) ) otherlv_23= ';' ) )";
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
=======
    static final String dfa_50s = "\1\4\1\uffff\1\4\2\11\1\uffff\1\11\2\21\2\11\2\22\1\uffff\2\21\2\11";
    static final String[] dfa_51s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\14\5\2\uffff\2\5\53\uffff\1\3\1\4\5\5",
            "",
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\2\uffff\2\5\53\uffff\1\3\1\4\5\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\2\uffff\2\5\57\uffff\3\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\14\5\2\uffff\2\5\57\uffff\3\5",
            "",
            "\1\7\1\10",
            "\1\12\1\11\1\uffff\2\5",
            "\1\12\1\11\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15",
            "\1\20\1\uffff\2\5",
            "\1\20\1\uffff\2\5",
            "",
            "\1\21\2\uffff\2\5",
            "\1\21\2\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15"
    };
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.decisionNumber = 46;
            this.eot = dfa_23;
            this.eof = dfa_23;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_27;
            this.transition = dfa_44;
=======
            this.decisionNumber = 54;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_50;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_11;
            this.transition = dfa_51;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "2793:5: ( ( (lv_ownedRelatedElement_28_0= ruleSuccessionDefinition ) ) | ( ( (lv_memberName_29_0= ruleName ) )? otherlv_30= 'is' ( ( ruleQualifiedName ) ) otherlv_32= ';' ) )";
=======
            return "()* loopback of 3546:4: ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String[] dfa_45s = {
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\15\5\2\uffff\1\5\53\uffff\1\3\1\4\5\5",
=======
    static final String[] dfa_52s = {
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\2\uffff\1\11\1\6\53\uffff\1\2\1\3\1\4\1\5\3\11",
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\2\uffff\1\11\1\6\53\uffff\1\2\1\3\1\4\1\5\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\2\uffff\1\11\1\6\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\2\uffff\1\11\1\6\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\2\uffff\1\11\1\6\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\2\uffff\1\11\1\6\57\uffff\3\11",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\2\4\uffff\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\2\uffff\1\5\53\uffff\1\3\1\4\5\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\2\uffff\1\5\57\uffff\3\5",
            "\2\5\5\uffff\1\6\5\uffff\1\5\3\uffff\15\5\2\uffff\1\5\57\uffff\3\5",
=======
            "\2\11\17\uffff\6\6\1\10\1\uffff\4\10\2\uffff\1\11\1\6\57\uffff\3\11",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "\1\7\1\10",
            "\1\11\1\12\1\uffff\2\5",
            "\1\11\1\12\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15",
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
            "",
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15"
    };
<<<<<<< Upstream, based on origin/ST6RI-75
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);
=======
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_13;
            this.max = dfa_29;
            this.accept = dfa_15;
            this.special = dfa_11;
            this.transition = dfa_45;
=======
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_17;
            this.transition = dfa_52;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "()* loopback of 3582:4: ( ( (lv_ownedRelationship_2_0= ruleAssociationMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
=======
            return "3610:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember )";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String[] dfa_46s = {
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\2\uffff\1\11\53\uffff\1\2\1\3\1\4\1\5\3\11",
            "\1\1\4\uffff\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\2\uffff\1\11\53\uffff\1\2\1\3\1\4\1\5\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\2\uffff\1\11\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\2\uffff\1\11\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\2\uffff\1\11\57\uffff\3\11",
            "\2\11\5\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\2\uffff\1\11\57\uffff\3\11",
=======
    static final String dfa_53s = "\17\uffff";
    static final String dfa_54s = "\3\11\1\uffff\2\24\2\11\4\uffff\2\24\1\uffff";
    static final String dfa_55s = "\3\133\1\uffff\2\70\2\133\4\uffff\2\70\1\uffff";
    static final String dfa_56s = "\3\uffff\1\4\4\uffff\1\1\1\5\1\2\1\6\2\uffff\1\3";
    static final String dfa_57s = "\17\uffff}>";
    static final String[] dfa_58s = {
            "\1\4\1\5\26\uffff\1\2\6\uffff\1\1\60\uffff\3\3",
            "\2\10\27\uffff\1\6\1\7\1\10\11\uffff\1\10\52\uffff\3\10",
            "\2\11\35\uffff\1\12\60\uffff\3\11",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\2\11\17\uffff\6\6\1\10\1\uffff\5\10\2\uffff\1\11\57\uffff\3\11",
            "",
            ""
    };
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "3646:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_AssociationEndFeatureMember_2= ruleAssociationEndFeatureMember )";
        }
    }
    static final String dfa_47s = "\17\uffff";
    static final String dfa_48s = "\3\11\1\uffff\2\24\2\11\4\uffff\2\24\1\uffff";
    static final String dfa_49s = "\3\133\1\uffff\2\70\2\133\4\uffff\2\70\1\uffff";
    static final String dfa_50s = "\3\uffff\1\4\4\uffff\1\1\1\5\1\2\1\6\2\uffff\1\3";
    static final String dfa_51s = "\17\uffff}>";
    static final String[] dfa_52s = {
            "\1\4\1\5\26\uffff\1\2\7\uffff\1\1\57\uffff\3\3",
            "\2\10\27\uffff\1\6\1\7\1\10\11\uffff\1\10\52\uffff\3\10",
            "\2\11\36\uffff\1\12\57\uffff\3\11",
            "",
=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "\1\3\2\uffff\1\3\1\uffff\1\13\24\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\2\uffff\1\3\1\uffff\1\13\24\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\14\1\15\16\uffff\1\16\24\uffff\1\10\52\uffff\3\10",
            "\1\14\1\15\16\uffff\1\16\24\uffff\1\10\52\uffff\3\10",
            "",
            "",
            "",
            "",
            "\1\10\2\uffff\1\10\1\uffff\1\16\24\uffff\3\10\2\uffff\3\10\2\uffff\1\10",
            "\1\10\2\uffff\1\10\1\uffff\1\16\24\uffff\3\10\2\uffff\3\10\2\uffff\1\10",
            ""
    };

<<<<<<< Upstream, based on origin/ST6RI-75
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);
=======
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.decisionNumber = 67;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
=======
            this.decisionNumber = 65;
            this.eot = dfa_53;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "3715:3: ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) )";
=======
            return "3679:3: ( (otherlv_1= 'end' ( ( (lv_isPart_2_0= 'part' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) | ( (lv_isPort_4_0= 'port' ) ) )? ( (lv_direction_5_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_6_0= ruleFeatureDefinition ) ) ) | (otherlv_7= 'abstract' otherlv_8= 'end' ( ( (lv_isPart_9_0= 'part' ) ) | ( (lv_isPortion_10_0= 'portion' ) ) | ( (lv_isPort_11_0= 'port' ) ) )? ( (lv_direction_12_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_13_0= ruleAbstractFeatureDefinition ) ) ) | (otherlv_14= 'end' ( ( (lv_isPart_15_0= 'part' ) ) | ( (lv_isPortion_16_0= 'portion' ) ) ) ( (lv_memberName_17_0= ruleName ) )? otherlv_18= 'is' ( ( ruleQualifiedName ) ) otherlv_20= ';' ) | ( ( (lv_direction_21_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_22_0= ruleNamedFeatureDefinition ) ) ) | (otherlv_23= 'abstract' ( (lv_direction_24_0= ruleFeatureDirection ) )? ( (lv_ownedRelatedElement_25_0= ruleAbstractNamedFeatureDefinition ) ) ) | ( ( (lv_memberName_26_0= ruleName ) ) otherlv_27= 'is' ( ( ruleQualifiedName ) ) otherlv_29= ';' ) )";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_53s = "\1\4\1\uffff\1\4\2\20\1\uffff\1\11\2\21\2\11\2\21\1\uffff\2\22\2\11";
    static final String dfa_54s = "\1\130\1\uffff\1\130\2\55\1\uffff\1\12\2\25\2\23\2\25\1\uffff\2\25\2\23";
    static final String[] dfa_55s = {
            "\1\2\13\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\15\5\5\uffff\2\5\47\uffff\1\3\1\4\2\5",
=======
    static final String dfa_59s = "\1\4\1\uffff\1\4\2\20\1\uffff\1\11\2\21\2\11\2\22\1\uffff\2\21\2\11";
    static final String dfa_60s = "\1\130\1\uffff\1\130\2\55\1\uffff\1\12\2\25\2\23\2\25\1\uffff\2\25\2\23";
    static final String[] dfa_61s = {
            "\1\2\13\uffff\1\6\5\uffff\1\5\1\uffff\1\1\1\uffff\14\5\3\uffff\1\5\2\uffff\2\5\47\uffff\1\3\1\4\2\5",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\2\13\uffff\1\6\5\uffff\1\5\3\uffff\15\5\5\uffff\2\5\47\uffff\1\3\1\4\2\5",
            "\1\6\5\uffff\1\5\3\uffff\15\5\5\uffff\2\5",
            "\1\6\5\uffff\1\5\3\uffff\15\5\5\uffff\2\5",
=======
            "\1\2\13\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\2\uffff\2\5\47\uffff\1\3\1\4\2\5",
            "\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\2\uffff\2\5",
            "\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\2\uffff\2\5",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "\1\7\1\10",
            "\1\11\1\12\1\uffff\2\5",
            "\1\11\1\12\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15",
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
            "",
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15"
    };
<<<<<<< Upstream, based on origin/ST6RI-75
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);
=======
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    class DFA72 extends DFA {
=======
    class DFA71 extends DFA {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
        public DFA72(BaseRecognizer recognizer) {
=======
        public DFA71(BaseRecognizer recognizer) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.recognizer = recognizer;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.decisionNumber = 72;
=======
            this.decisionNumber = 71;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.eot = dfa_7;
            this.eof = dfa_7;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_15;
=======
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_37;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.special = dfa_11;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.transition = dfa_55;
=======
            this.transition = dfa_61;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "()* loopback of 4363:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
=======
            return "()* loopback of 4444:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_56s = "\2\4\4\20\1\uffff\1\32\2\uffff";
    static final String dfa_57s = "\2\130\4\55\1\uffff\1\55\2\uffff";
    static final String[] dfa_58s = {
            "\1\1\13\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\5\uffff\2\11\47\uffff\1\2\1\3\1\4\1\5",
            "\1\1\13\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\5\uffff\2\11\47\uffff\1\2\1\3\1\4\1\5",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\5\uffff\2\11",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\5\uffff\2\11",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\5\uffff\2\11",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\5\10\5\uffff\2\11",
=======
    static final String dfa_62s = "\2\4\4\20\1\uffff\1\32\2\uffff";
    static final String dfa_63s = "\2\130\4\55\1\uffff\1\55\2\uffff";
    static final String[] dfa_64s = {
            "\1\1\13\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\2\uffff\2\11\47\uffff\1\2\1\3\1\4\1\5",
            "\1\1\13\uffff\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\2\uffff\2\11\47\uffff\1\2\1\3\1\4\1\5",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\2\uffff\2\11",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\2\uffff\2\11",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\2\uffff\2\11",
            "\1\6\5\uffff\1\6\3\uffff\6\6\1\10\1\7\4\10\3\uffff\1\6\2\uffff\2\11",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\6\6\1\10\1\uffff\5\10\5\uffff\2\11",
=======
            "\6\6\1\10\1\uffff\4\10\3\uffff\1\6\2\uffff\2\11",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            ""
    };
<<<<<<< Upstream, based on origin/ST6RI-75
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "4503:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember )";
        }
    }
    static final String dfa_59s = "\14\uffff";
    static final String dfa_60s = "\1\41\1\54\2\11\2\uffff\2\24\1\uffff\2\24\1\uffff";
    static final String dfa_61s = "\2\55\2\56\2\uffff\2\70\1\uffff\2\70\1\uffff";
    static final String dfa_62s = "\4\uffff\1\3\1\1\2\uffff\1\2\2\uffff\1\4";
    static final String dfa_63s = "\14\uffff}>";
    static final String[] dfa_64s = {
            "\1\1\12\uffff\1\2\1\3",
            "\1\5\1\4",
            "\1\6\1\7\16\uffff\1\10\24\uffff\1\5",
            "\1\11\1\12\11\uffff\1\4\2\uffff\1\4\1\uffff\1\13\24\uffff\1\4",
            "",
            "",
            "\1\5\2\uffff\1\5\1\uffff\1\10\20\uffff\1\5\3\uffff\1\5\1\uffff\1\5\2\uffff\3\5\2\uffff\1\5",
            "\1\5\2\uffff\1\5\1\uffff\1\10\20\uffff\1\5\3\uffff\1\5\1\uffff\1\5\2\uffff\3\5\2\uffff\1\5",
            "",
            "\1\4\2\uffff\1\4\1\uffff\1\13\20\uffff\1\4\3\uffff\1\4\1\uffff\1\4\2\uffff\3\4\2\uffff\1\4",
            "\1\4\2\uffff\1\4\1\uffff\1\13\20\uffff\1\4\3\uffff\1\4\1\uffff\1\4\2\uffff\3\4\2\uffff\1\4",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
=======
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

<<<<<<< Upstream, based on origin/ST6RI-75
    class DFA78 extends DFA {
=======
    class DFA74 extends DFA {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
        public DFA78(BaseRecognizer recognizer) {
=======
        public DFA74(BaseRecognizer recognizer) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.recognizer = recognizer;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.decisionNumber = 78;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
=======
            this.decisionNumber = 74;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_44;
            this.special = dfa_17;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.transition = dfa_64;
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "4598:2: ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) )";
=======
            return "4584:2: (this_NonFeatureCategoryMember_0= ruleNonFeatureCategoryMember | this_FeatureMember_1= ruleFeatureMember | this_BehaviorStepMember_2= ruleBehaviorStepMember )";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_65s = "\1\4\1\uffff\1\4\2\20\1\uffff\1\11\2\21\2\11\1\uffff\2\21\2\22\2\11";
    static final String dfa_66s = "\1\130\1\uffff\1\130\2\55\1\uffff\1\12\2\25\2\23\1\uffff\4\25\2\23";
    static final String[] dfa_67s = {
            "\1\2\6\1\5\uffff\1\6\1\uffff\2\1\2\uffff\1\5\2\1\1\uffff\15\5\3\uffff\1\1\1\uffff\2\5\34\uffff\2\1\3\uffff\2\1\2\uffff\2\1\1\3\1\4\2\5",
            "",
            "\1\2\13\uffff\1\6\5\uffff\1\5\3\uffff\15\5\5\uffff\2\5\47\uffff\1\3\1\4\2\5",
            "\1\6\5\uffff\1\5\3\uffff\15\5\5\uffff\2\5",
            "\1\6\5\uffff\1\5\3\uffff\15\5\5\uffff\2\5",
            "",
            "\1\7\1\10",
            "\1\11\1\12\1\uffff\2\5",
            "\1\11\1\12\1\uffff\2\5",
            "\1\14\1\15\10\uffff\1\13",
            "\1\16\1\17\10\uffff\1\13",
            "",
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\14\1\15\10\uffff\1\13",
            "\1\16\1\17\10\uffff\1\13"
    };
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_33;
            this.special = dfa_11;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "()* loopback of 4963:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
        }
    }
    static final String dfa_68s = "\1\11\2\21\1\11\2\uffff\2\21\2\11\2\21\2\22";
    static final String dfa_69s = "\1\60\2\72\1\12\2\uffff\2\52\2\12\4\52";
    static final String dfa_70s = "\4\uffff\1\1\1\2\10\uffff";
    static final String[] dfa_71s = {
            "\1\1\1\2\16\uffff\1\4\20\uffff\1\5\5\uffff\1\3",
            "\2\4\6\uffff\1\4\20\uffff\1\5\5\uffff\1\3\4\uffff\1\4\3\uffff\2\4",
            "\2\4\6\uffff\1\4\20\uffff\1\5\5\uffff\1\3\4\uffff\1\4\3\uffff\2\4",
            "\1\6\1\7",
=======
    static final String dfa_65s = "\14\uffff";
    static final String dfa_66s = "\1\41\1\54\2\11\2\uffff\2\24\1\uffff\2\24\1\uffff";
    static final String dfa_67s = "\2\55\2\56\2\uffff\2\70\1\uffff\2\70\1\uffff";
    static final String dfa_68s = "\4\uffff\1\3\1\1\2\uffff\1\2\2\uffff\1\4";
    static final String dfa_69s = "\14\uffff}>";
    static final String[] dfa_70s = {
            "\1\1\12\uffff\1\2\1\3",
            "\1\5\1\4",
            "\1\6\1\7\16\uffff\1\10\24\uffff\1\5",
            "\1\11\1\12\11\uffff\1\4\2\uffff\1\4\1\uffff\1\13\24\uffff\1\4",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\10\1\11\6\uffff\1\4\20\uffff\1\5",
            "\1\10\1\11\6\uffff\1\4\20\uffff\1\5",
            "\1\12\1\13",
            "\1\14\1\15",
            "\1\10\7\uffff\1\4\20\uffff\1\5",
            "\1\10\7\uffff\1\4\20\uffff\1\5",
            "\1\11\6\uffff\1\4\20\uffff\1\5",
            "\1\11\6\uffff\1\4\20\uffff\1\5"
=======
            "\1\5\2\uffff\1\5\1\uffff\1\10\20\uffff\1\5\3\uffff\1\5\1\uffff\1\5\2\uffff\3\5\2\uffff\1\5",
            "\1\5\2\uffff\1\5\1\uffff\1\10\20\uffff\1\5\3\uffff\1\5\1\uffff\1\5\2\uffff\3\5\2\uffff\1\5",
            "",
            "\1\4\2\uffff\1\4\1\uffff\1\13\20\uffff\1\4\3\uffff\1\4\1\uffff\1\4\2\uffff\3\4\2\uffff\1\4",
            "\1\4\2\uffff\1\4\1\uffff\1\13\20\uffff\1\4\3\uffff\1\4\1\uffff\1\4\2\uffff\3\4\2\uffff\1\4",
            ""
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    };
<<<<<<< Upstream, based on origin/ST6RI-75
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);
=======

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    class DFA105 extends DFA {
=======
    class DFA77 extends DFA {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
        public DFA105(BaseRecognizer recognizer) {
=======
        public DFA77(BaseRecognizer recognizer) {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            this.recognizer = recognizer;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.decisionNumber = 105;
            this.eot = dfa_23;
            this.eof = dfa_23;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_27;
            this.transition = dfa_71;
=======
            this.decisionNumber = 77;
            this.eot = dfa_65;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "6295:2: ( ( ( ( (lv_name_0_0= ruleName ) )? (otherlv_1= ':' ( (lv_ownedRelationship_2_0= ruleConnectorTyping ) ) )? otherlv_3= 'is' )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_7_0= ruleName ) )? (otherlv_8= ':' ( (lv_ownedRelationship_9_0= ruleConnectorTyping ) ) )? otherlv_10= '(' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) (otherlv_14= ',' ( (lv_ownedRelationship_15_0= ruleConnectorEndMember ) ) )* otherlv_16= ')' ) )";
=======
            return "4679:2: ( ( (lv_ownedRelatedElement_0_0= ruleStepDefinition ) ) | (otherlv_1= 'step' ( (lv_memberName_2_0= ruleName ) )? otherlv_3= 'is' ( ( ruleQualifiedName ) ) otherlv_5= ';' ) | ( (lv_ownedRelatedElement_6_0= ruleExpressionDefinition ) ) | (otherlv_7= 'expr' ( (lv_memberName_8_0= ruleName ) )? otherlv_9= 'is' ( ( ruleQualifiedName ) ) otherlv_11= ';' ) )";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_72s = "\21\uffff";
    static final String dfa_73s = "\3\uffff\2\13\7\uffff\2\13\1\uffff\2\13";
    static final String dfa_74s = "\1\5\2\uffff\2\21\3\uffff\2\11\2\uffff\2\21\1\uffff\2\22";
    static final String dfa_75s = "\1\124\2\uffff\2\121\3\uffff\1\12\1\122\2\uffff\2\121\1\uffff\2\121";
    static final String dfa_76s = "\1\uffff\1\1\1\2\2\uffff\1\4\1\7\1\10\2\uffff\1\5\1\3\2\uffff\1\6\2\uffff";
    static final String dfa_77s = "\21\uffff}>";
    static final String[] dfa_78s = {
            "\4\2\1\3\1\4\7\uffff\2\2\3\uffff\1\6\22\uffff\1\7\50\uffff\1\1\1\5",
=======
    static final String dfa_71s = "\1\4\1\uffff\1\4\2\20\1\uffff\1\11\2\21\2\11\2\21\1\uffff\2\22\2\11";
    static final String[] dfa_72s = {
            "\1\2\6\1\5\uffff\1\6\1\uffff\2\1\2\uffff\1\5\2\1\1\uffff\14\5\3\uffff\1\5\1\1\1\uffff\2\5\34\uffff\2\1\3\uffff\2\1\2\uffff\2\1\1\3\1\4\2\5",
            "",
            "\1\2\13\uffff\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\2\uffff\2\5\47\uffff\1\3\1\4\2\5",
            "\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\2\uffff\2\5",
            "\1\6\5\uffff\1\5\3\uffff\14\5\3\uffff\1\5\2\uffff\2\5",
            "",
            "\1\7\1\10",
            "\1\11\1\12\1\uffff\2\5",
            "\1\11\1\12\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15",
            "\1\20\2\uffff\2\5",
            "\1\20\2\uffff\2\5",
            "",
            "\1\21\1\uffff\2\5",
            "\1\21\1\uffff\2\5",
            "\1\13\1\14\10\uffff\1\15",
            "\1\16\1\17\10\uffff\1\15"
    };
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_71;
            this.max = dfa_60;
            this.accept = dfa_37;
            this.special = dfa_11;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "()* loopback of 5044:4: ( ( (lv_ownedRelationship_2_0= ruleBehaviorMember ) ) | ( (lv_ownedRelationship_3_0= rulePackageImport ) ) )*";
        }
    }
    static final String dfa_73s = "\34\uffff";
    static final String dfa_74s = "\1\11\2\21\1\11\1\7\2\31\2\uffff\1\7\2\21\1\66\1\67\1\66\1\67\2\11\1\31\1\7\1\31\1\7\2\21\2\22\2\67";
    static final String dfa_75s = "\1\65\2\72\1\12\1\23\2\64\2\uffff\1\23\2\65\4\67\2\12\1\64\1\23\1\71\1\23\4\65\2\67";
    static final String dfa_76s = "\7\uffff\1\1\1\2\23\uffff";
    static final String dfa_77s = "\34\uffff}>";
    static final String[] dfa_78s = {
            "\1\1\1\2\16\uffff\1\7\20\uffff\1\10\5\uffff\1\3\2\uffff\1\5\1\6\1\4",
            "\2\7\6\uffff\1\7\20\uffff\1\10\5\uffff\1\3\2\uffff\1\5\1\6\1\11\3\uffff\2\7",
            "\2\7\6\uffff\1\7\20\uffff\1\10\5\uffff\1\3\2\uffff\1\5\1\6\1\11\3\uffff\2\7",
            "\1\12\1\13",
            "\1\14\13\uffff\1\15",
            "\1\7\20\uffff\1\10\10\uffff\1\5\1\6",
            "\1\7\20\uffff\1\10\10\uffff\1\5\1\6",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\10\1\11\2\13\2\uffff\2\13\17\uffff\1\13\1\uffff\1\12\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\13\3\uffff\24\13\2\uffff\1\13",
            "\1\10\1\11\2\13\2\uffff\2\13\17\uffff\1\13\1\uffff\1\12\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\13\3\uffff\24\13\2\uffff\1\13",
=======
            "\1\16\13\uffff\1\17",
            "\1\20\1\21\6\uffff\1\7\20\uffff\1\10\10\uffff\1\5\1\6\1\4",
            "\1\20\1\21\6\uffff\1\7\20\uffff\1\10\10\uffff\1\5\1\6\1\4",
            "\1\23\1\22",
            "\1\22",
            "\1\25\1\24",
            "\1\24",
            "\1\26\1\27",
            "\1\30\1\31",
            "\1\7\20\uffff\1\10\10\uffff\1\5\1\6",
            "\1\32\13\uffff\1\15",
            "\1\7\20\uffff\1\10\10\uffff\1\5\1\6\4\uffff\1\7",
            "\1\33\13\uffff\1\17",
            "\1\20\7\uffff\1\7\20\uffff\1\10\10\uffff\1\5\1\6\1\4",
            "\1\20\7\uffff\1\7\20\uffff\1\10\10\uffff\1\5\1\6\1\4",
            "\1\21\6\uffff\1\7\20\uffff\1\10\10\uffff\1\5\1\6\1\4",
            "\1\21\6\uffff\1\7\20\uffff\1\10\10\uffff\1\5\1\6\1\4",
            "\1\22",
            "\1\24"
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "6376:2: ( ( ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )? ( (lv_ownedRelationship_3_0= ruleConnectorEndMember ) ) otherlv_4= 'to' ( (lv_ownedRelationship_5_0= ruleConnectorEndMember ) ) ) | ( ( (lv_name_6_0= ruleName ) )? this_ConnectorTypePart_7= ruleConnectorTypePart[$current] otherlv_8= '(' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) otherlv_10= ',' ( (lv_ownedRelationship_11_0= ruleConnectorEndMember ) ) (otherlv_12= ',' ( (lv_ownedRelationship_13_0= ruleConnectorEndMember ) ) )* otherlv_14= ')' ) )";
        }
    }
    static final String dfa_79s = "\13\uffff";
    static final String dfa_80s = "\1\11\2\21\1\uffff\1\7\1\uffff\1\66\1\67\1\7\1\31\1\67";
    static final String dfa_81s = "\1\65\2\72\1\uffff\1\23\1\uffff\2\67\1\23\1\71\1\67";
    static final String dfa_82s = "\3\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String dfa_83s = "\13\uffff}>";
    static final String[] dfa_84s = {
            "\1\1\1\2\16\uffff\1\3\26\uffff\1\3\2\uffff\3\3",
            "\2\5\6\uffff\1\3\26\uffff\1\3\2\uffff\2\3\1\4\3\uffff\2\5",
            "\2\5\6\uffff\1\3\26\uffff\1\3\2\uffff\2\3\1\4\3\uffff\2\5",
            "",
            "\1\6\13\uffff\1\7",
            "",
            "\1\10\1\11",
            "\1\11",
            "\1\12\13\uffff\1\7",
            "\1\3\31\uffff\2\3\4\uffff\1\5",
            "\1\11"
    };

    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "6378:4: ( ( (lv_name_0_0= ruleName ) )? this_ConnectorTypePart_1= ruleConnectorTypePart[$current] otherlv_2= 'is' )?";
        }
    }
    static final String dfa_85s = "\21\uffff";
    static final String dfa_86s = "\3\uffff\2\12\7\uffff\4\12\1\uffff";
    static final String dfa_87s = "\1\5\2\uffff\2\21\3\uffff\2\11\2\uffff\2\21\2\22\1\uffff";
    static final String dfa_88s = "\1\124\2\uffff\2\121\3\uffff\1\12\1\122\2\uffff\4\121\1\uffff";
    static final String dfa_89s = "\1\uffff\1\1\1\2\2\uffff\1\4\1\7\1\10\2\uffff\1\3\1\5\4\uffff\1\6";
    static final String dfa_90s = "\21\uffff}>";
    static final String[] dfa_91s = {
            "\4\2\1\3\1\4\7\uffff\2\2\3\uffff\1\6\22\uffff\1\7\50\uffff\1\1\1\5",
            "",
            "",
            "\1\10\1\11\2\12\2\uffff\2\12\16\uffff\1\12\2\uffff\1\13\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\1\12\3\uffff\24\12\2\uffff\1\12",
            "\1\10\1\11\2\12\2\uffff\2\12\16\uffff\1\12\2\uffff\1\13\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\1\12\3\uffff\24\12\2\uffff\1\12",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "",
            "",
            "\1\14\1\15",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\17\1\20\107\uffff\1\16",
=======
            "\1\16\1\17\107\uffff\1\20",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "",
            "",
<<<<<<< Upstream, based on origin/ST6RI-75
            "\1\10\1\16\2\13\2\uffff\2\13\17\uffff\1\13\1\uffff\1\12\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\13\3\uffff\24\13\2\uffff\1\13",
            "\1\10\1\16\2\13\2\uffff\2\13\17\uffff\1\13\1\uffff\1\12\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\13\3\uffff\24\13\2\uffff\1\13",
            "",
            "\1\11\2\13\2\uffff\2\13\17\uffff\1\13\1\uffff\1\12\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\13\3\uffff\24\13\2\uffff\1\13",
            "\1\11\2\13\2\uffff\2\13\17\uffff\1\13\1\uffff\1\12\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\13\3\uffff\24\13\2\uffff\1\13"
=======
            "\1\10\1\20\2\12\2\uffff\2\12\16\uffff\1\12\2\uffff\1\13\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\1\12\3\uffff\24\12\2\uffff\1\12",
            "\1\10\1\20\2\12\2\uffff\2\12\16\uffff\1\12\2\uffff\1\13\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\1\12\3\uffff\24\12\2\uffff\1\12",
            "\1\11\2\12\2\uffff\2\12\16\uffff\1\12\2\uffff\1\13\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\1\12\3\uffff\24\12\2\uffff\1\12",
            "\1\11\2\12\2\uffff\2\12\16\uffff\1\12\2\uffff\1\13\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\1\12\3\uffff\24\12\2\uffff\1\12",
            ""
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
    };

<<<<<<< Upstream, based on origin/ST6RI-75
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);
=======
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
=======
            this.eot = dfa_85;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "9031:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) )";
=======
            return "9119:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_QueryPathExpression_3= ruleQueryPathExpression | this_InvocationExpression_4= ruleInvocationExpression | this_ClassExtentExpression_5= ruleClassExtentExpression | this_SequenceConstructionExpression_6= ruleSequenceConstructionExpression | (otherlv_7= '(' this_Expression_8= ruleExpression otherlv_9= ')' ) )";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
    }
<<<<<<< Upstream, based on origin/ST6RI-75
    static final String dfa_79s = "\41\uffff";
    static final String dfa_80s = "\1\2\40\uffff";
    static final String dfa_81s = "\1\23\1\0\37\uffff";
    static final String dfa_82s = "\1\121\1\0\37\uffff";
    static final String dfa_83s = "\2\uffff\1\2\35\uffff\1\1";
    static final String dfa_84s = "\1\uffff\1\0\37\uffff}>";
    static final String[] dfa_85s = {
            "\2\2\2\uffff\2\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\4\uffff\1\1\1\uffff\1\2\3\uffff\24\2\2\uffff\1\2",
=======
    static final String dfa_92s = "\1\2\40\uffff";
    static final String dfa_93s = "\1\23\1\0\37\uffff";
    static final String dfa_94s = "\1\121\1\0\37\uffff";
    static final String dfa_95s = "\2\uffff\1\2\35\uffff\1\1";
    static final String dfa_96s = "\1\uffff\1\0\37\uffff}>";
    static final String[] dfa_97s = {
            "\2\2\2\uffff\2\2\16\uffff\1\2\3\uffff\1\2\4\uffff\1\2\4\uffff\1\1\1\uffff\1\2\3\uffff\24\2\2\uffff\1\2",
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

<<<<<<< Upstream, based on origin/ST6RI-75
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);
=======
    class DFA153 extends DFA {
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

<<<<<<< Upstream, based on origin/ST6RI-75
    class DFA153 extends DFA {

=======
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        public DFA153(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 153;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.eot = dfa_79;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
=======
            this.eot = dfa_1;
            this.eof = dfa_92;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "10177:3: (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )?";
=======
            return "10265:3: (otherlv_1= '[' () ( (lv_ownedRelationship_3_0= ruleBodyMember ) ) otherlv_4= ']' )?";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA153_1 = input.LA(1);

                         
                        int index153_1 = input.index();
                        input.rewind();
                        s = -1;
<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (synpred221_InternalAlf()) ) {s = 32;}
=======
                        if ( (synpred222_InternalAlf()) ) {s = 32;}
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index153_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 153, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
<<<<<<< Upstream, based on origin/ST6RI-75
            this.eot = dfa_79;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
=======
            this.eot = dfa_1;
            this.eof = dfa_92;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public String getDescription() {
<<<<<<< Upstream, based on origin/ST6RI-75
            return "10250:4: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?";
=======
            return "10338:4: (otherlv_8= '[' () ( (lv_ownedRelationship_10_0= ruleBodyMember ) ) otherlv_11= ']' )?";
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
<<<<<<< Upstream, based on origin/ST6RI-75
                        if ( (synpred222_InternalAlf()) ) {s = 32;}
=======
                        if ( (synpred223_InternalAlf()) ) {s = 32;}
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000208000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000210000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000220000000L});
<<<<<<< Upstream, based on origin/ST6RI-75
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000240000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000280000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000300000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000010012L,0x0000000000600000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000010010L,0x0000000000600000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000600L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000060000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x00003003FD410610L,0x0000000000600000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x00003003FC410610L,0x0000000000600000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000012L,0x0000000000600000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000002000600L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000100000600L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000007FFD410610L,0x000000000FE00000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00000002FC410000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000300000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000100000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000007F00000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000400102000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000400102000600L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000001D00000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000400100000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0001040002000600L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000012L,0x0000000001E00000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000900000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000027FFD410610L,0x000000000FE00000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000020300000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000401D00000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000400100000600L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000080000000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000090000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000307FFD410610L,0x0000000001E00000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0039000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0039000000000600L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000347FFDCD07F0L,0x0000000001F98C00L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000800000900000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0039800000900000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0139400000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0100400000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x00000400008C07E0L,0x0000000000198C00L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0006000000000600L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0004000000000600L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0038000000000002L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0018000000000002L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x00000000000C01E0L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0100410000000002L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0001000002000600L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0001000002000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0001040000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000400000000600L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0139440000900000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0100440000900000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0100400000900000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0039040000900000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000040000900000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000400000900600L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x1000000000000002L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x4000000000000002L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000030L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000002L,0x00000000000003C0L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000C00L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000080002L,0x0000000000003000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x00000400008C07E0L,0x0000000000180000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000602L,0x0000000000020000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000040000000600L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x00000C00008C07E0L,0x0000000000198C00L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x00000400018C07E0L,0x0000000000198C00L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000010001000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0020000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000040002L});
=======
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000020200000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000240000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000280000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000300000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000010012L,0x0000000000600000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000010010L,0x0000000000600000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000600L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000060000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x00003203FD410610L,0x0000000000600000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x00003203FC410610L,0x0000000000600000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000012L,0x0000000000600000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000002000600L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000100000600L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000023FFD410610L,0x000000000FE00000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00000202FC410000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000300000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000100000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000003F00000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000400102000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000400102000600L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000001D00000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000400100000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0039040002000600L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000012L,0x0000000001E00000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000900000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000033FFD410610L,0x000000000FE00000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000010300000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000401D00000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000400100000600L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000080000000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000088000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000600L,0x000000000E000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000323FFD410610L,0x0000000001E00000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0039000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0039000000000600L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000363FFDCD07F0L,0x0000000001F98C00L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000800000900000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0039800000900000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0139400000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0100400000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x00000400008C07E0L,0x0000000000198C00L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0006000000000600L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0004000000000600L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0038000000000002L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0018000000000002L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x00000000000C01E0L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0100408000000002L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0039000002000600L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0039000002000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0039040000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000400000000600L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0139440000900000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0100440000900000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0100400000900000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0039040000900000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000040000900000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000400000900600L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x1000000000000002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x4000000000000002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000030L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x00000000000003C0L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000C00L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000080002L,0x0000000000003000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x00000400008C07E0L,0x0000000000180000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000602L,0x0000000000020000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000040000000600L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x00000C00008C07E0L,0x0000000000198C00L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x00000400018C07E0L,0x0000000000198C00L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000008001000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0020000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000040002L});
>>>>>>> a6f24c6 ST6RI-76 Added syntax for interactions to the textual notation.

}
