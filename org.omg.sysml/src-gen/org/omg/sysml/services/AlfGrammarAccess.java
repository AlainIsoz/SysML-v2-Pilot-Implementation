/*
 * generated by Xtext 2.12.0
 */
package org.omg.sysml.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AlfGrammarAccess extends AbstractGrammarElementFinder {
	
	public class UnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCommentedUnitDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUnCommentedUnitDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* UNITS */ UnitDefinition SysML::Package:
		//	CommentedUnitDefinition | UnCommentedUnitDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//CommentedUnitDefinition | UnCommentedUnitDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CommentedUnitDefinition
		public RuleCall getCommentedUnitDefinitionParserRuleCall_0() { return cCommentedUnitDefinitionParserRuleCall_0; }
		
		//UnCommentedUnitDefinition
		public RuleCall getUnCommentedUnitDefinitionParserRuleCall_1() { return cUnCommentedUnitDefinitionParserRuleCall_1; }
	}
	public class CommentedUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CommentedUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedMembershipCommentMemberParserRuleCall_0_0 = (RuleCall)cOwnedMembershipAssignment_0.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMembershipUnitMemberParserRuleCall_1_0 = (RuleCall)cOwnedMembershipAssignment_1.eContents().get(0);
		
		//CommentedUnitDefinition SysML::Package:
		//	ownedMembership+=CommentMember+
		//	ownedMembership+=UnitMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership+=CommentMember+ ownedMembership+=UnitMember
		public Group getGroup() { return cGroup; }
		
		//ownedMembership+=CommentMember+
		public Assignment getOwnedMembershipAssignment_0() { return cOwnedMembershipAssignment_0; }
		
		//CommentMember
		public RuleCall getOwnedMembershipCommentMemberParserRuleCall_0_0() { return cOwnedMembershipCommentMemberParserRuleCall_0_0; }
		
		//ownedMembership+=UnitMember
		public Assignment getOwnedMembershipAssignment_1() { return cOwnedMembershipAssignment_1; }
		
		//UnitMember
		public RuleCall getOwnedMembershipUnitMemberParserRuleCall_1_0() { return cOwnedMembershipUnitMemberParserRuleCall_1_0; }
	}
	public class UnitMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitMember");
		private final Assignment cOwnedMemberElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElementUnCommentedUnitDefinitionParserRuleCall_0 = (RuleCall)cOwnedMemberElementAssignment.eContents().get(0);
		
		//UnitMember SysML::Membership:
		//	ownedMemberElement=UnCommentedUnitDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement=UnCommentedUnitDefinition
		public Assignment getOwnedMemberElementAssignment() { return cOwnedMemberElementAssignment; }
		
		//UnCommentedUnitDefinition
		public RuleCall getOwnedMemberElementUnCommentedUnitDefinitionParserRuleCall_0() { return cOwnedMemberElementUnCommentedUnitDefinitionParserRuleCall_0; }
	}
	public class UnCommentedUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnCommentedUnitDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNamedFeatureDefinitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//UnCommentedUnitDefinition SysML::Package:
		//	PackageDefinition | ClassDefinition | NamedFeatureDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinition | ClassDefinition | NamedFeatureDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall_0() { return cPackageDefinitionParserRuleCall_0; }
		
		//ClassDefinition
		public RuleCall getClassDefinitionParserRuleCall_1() { return cClassDefinitionParserRuleCall_1; }
		
		//NamedFeatureDefinition
		public RuleCall getNamedFeatureDefinitionParserRuleCall_2() { return cNamedFeatureDefinitionParserRuleCall_2; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Comment");
		private final Assignment cBodyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0 = (RuleCall)cBodyAssignment.eContents().get(0);
		
		///* COMMENTS */ Comment SysML::Comment:
		//	body=DOCUMENTATION_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//body=DOCUMENTATION_COMMENT
		public Assignment getBodyAssignment() { return cBodyAssignment; }
		
		//DOCUMENTATION_COMMENT
		public RuleCall getBodyDOCUMENTATION_COMMENTTerminalRuleCall_0() { return cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0; }
	}
	public class PackageDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedMembershipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedMembershipPackageMemberParserRuleCall_3_0 = (RuleCall)cOwnedMembershipAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///* PACKAGES */ PackageDefinition SysML::Package:
		//	'package' name=Name '{' ownedMembership+=PackageMember* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=Name '{' ownedMembership+=PackageMember* '}'
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//ownedMembership+=PackageMember*
		public Assignment getOwnedMembershipAssignment_3() { return cOwnedMembershipAssignment_3; }
		
		//PackageMember
		public RuleCall getOwnedMembershipPackageMemberParserRuleCall_3_0() { return cOwnedMembershipPackageMemberParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PackageDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageDefinitionOrStub");
		private final RuleCall cPackageDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PackageDefinitionOrStub SysML::Package:
		//	PackageDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		////	'package' name = Name ( isStub ?= ';' | '{' ( ownedMember += PackagedElement )* '}' )
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall() { return cPackageDefinitionParserRuleCall; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPackagedFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PackageMember SysML::Membership:
		//	NonFeatureMember | PackagedFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureMember | PackagedFeatureMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureMember
		public RuleCall getNonFeatureMemberParserRuleCall_0() { return cNonFeatureMemberParserRuleCall_0; }
		
		//PackagedFeatureMember
		public RuleCall getPackagedFeatureMemberParserRuleCall_1() { return cPackagedFeatureMemberParserRuleCall_1; }
	}
	public class NonFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCommentMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNonCommentNonFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NonFeatureMember SysML::Membership:
		//	CommentMember | NonCommentNonFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//CommentMember | NonCommentNonFeatureMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CommentMember
		public RuleCall getCommentMemberParserRuleCall_0() { return cCommentMemberParserRuleCall_0; }
		
		//NonCommentNonFeatureMember
		public RuleCall getNonCommentNonFeatureMemberParserRuleCall_1() { return cNonCommentNonFeatureMemberParserRuleCall_1; }
	}
	public class CommentMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CommentMember");
		private final Assignment cOwnedMemberElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElementCommentParserRuleCall_0 = (RuleCall)cOwnedMemberElementAssignment.eContents().get(0);
		
		//CommentMember SysML::Membership:
		//	ownedMemberElement=Comment;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement=Comment
		public Assignment getOwnedMemberElementAssignment() { return cOwnedMemberElementAssignment; }
		
		//Comment
		public RuleCall getOwnedMemberElementCommentParserRuleCall_0() { return cOwnedMemberElementCommentParserRuleCall_0; }
	}
	public class NonCommentNonFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonCommentNonFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberElementAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOwnedMemberElementNonFeatureDefinitionParserRuleCall_1_0_0 = (RuleCall)cOwnedMemberElementAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cNonFeatureMemberKindParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_1_0 = (RuleCall)cMemberNameAssignment_1_1_1.eContents().get(0);
		private final Keyword cIsKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cMemberElementAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final CrossReference cMemberElementElementCrossReference_1_1_3_0 = (CrossReference)cMemberElementAssignment_1_1_3.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_1_1_3_0_1 = (RuleCall)cMemberElementElementCrossReference_1_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_1_4 = (Keyword)cGroup_1_1.eContents().get(4);
		
		//NonCommentNonFeatureMember SysML::Membership:
		//	visibility=VisibilityIndicator? (ownedMemberElement=NonFeatureDefinition
		//	| NonFeatureMemberKind memberName=Name? 'is' memberElement=[SysML::Element|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator? (ownedMemberElement=NonFeatureDefinition | NonFeatureMemberKind memberName=Name? 'is'
		//memberElement=[SysML::Element|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_0_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_0_0; }
		
		//ownedMemberElement=NonFeatureDefinition | NonFeatureMemberKind memberName=Name? 'is'
		//memberElement=[SysML::Element|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ownedMemberElement=NonFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_0() { return cOwnedMemberElementAssignment_1_0; }
		
		//NonFeatureDefinition
		public RuleCall getOwnedMemberElementNonFeatureDefinitionParserRuleCall_1_0_0() { return cOwnedMemberElementNonFeatureDefinitionParserRuleCall_1_0_0; }
		
		//NonFeatureMemberKind memberName=Name? 'is' memberElement=[SysML::Element|QualifiedName] ';'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//NonFeatureMemberKind
		public RuleCall getNonFeatureMemberKindParserRuleCall_1_1_0() { return cNonFeatureMemberKindParserRuleCall_1_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1_1() { return cMemberNameAssignment_1_1_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_1_0() { return cMemberNameNameParserRuleCall_1_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_1_2() { return cIsKeyword_1_1_2; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_1_1_3() { return cMemberElementAssignment_1_1_3; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_1_1_3_0() { return cMemberElementElementCrossReference_1_1_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_1_1_3_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_1_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_1_4() { return cSemicolonKeyword_1_1_4; }
	}
	public class NonFeatureMemberKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureMemberKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAssocKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//NonFeatureMemberKind:
		//	'package' | 'class' | 'assoc';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' | 'class' | 'assoc'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//'assoc'
		public Keyword getAssocKeyword_2() { return cAssocKeyword_2; }
	}
	public class PackagedFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackagedFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cFeatureKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_1_0 = (RuleCall)cOwnedMemberElementAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cFeatureKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMemberElementAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Alternatives cAlternatives_1_2_0 = (Alternatives)cGroup_1_2.eContents().get(0);
		private final Group cGroup_1_2_0_0 = (Group)cAlternatives_1_2_0.eContents().get(0);
		private final Keyword cFeatureKeyword_1_2_0_0_0 = (Keyword)cGroup_1_2_0_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_0_0_1 = (Assignment)cGroup_1_2_0_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_0_0_1_0 = (RuleCall)cMemberNameAssignment_1_2_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_0_1 = (Assignment)cAlternatives_1_2_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_0_1_0 = (RuleCall)cMemberNameAssignment_1_2_0_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cMemberElementAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final CrossReference cMemberElementFeatureCrossReference_1_2_2_0 = (CrossReference)cMemberElementAssignment_1_2_2.eContents().get(0);
		private final RuleCall cMemberElementFeatureQualifiedNameParserRuleCall_1_2_2_0_1 = (RuleCall)cMemberElementFeatureCrossReference_1_2_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		
		//PackagedFeatureMember SysML::Membership:
		//	visibility=VisibilityIndicator? ('feature'? ownedMemberElement=NamedFeatureDefinition
		//	| 'feature' ownedMemberElement=UnnamedFeatureDefinition
		//	| ('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator? ('feature'? ownedMemberElement=NamedFeatureDefinition | 'feature'
		//ownedMemberElement=UnnamedFeatureDefinition | ('feature' memberName=Name? | memberName=Name) 'is'
		//memberElement=[SysML::Feature|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_0_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_0_0; }
		
		//'feature'? ownedMemberElement=NamedFeatureDefinition | 'feature' ownedMemberElement=UnnamedFeatureDefinition |
		//('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'feature'? ownedMemberElement=NamedFeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'feature'?
		public Keyword getFeatureKeyword_1_0_0() { return cFeatureKeyword_1_0_0; }
		
		//ownedMemberElement=NamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_0_1() { return cOwnedMemberElementAssignment_1_0_1; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_1_0() { return cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_1_0; }
		
		//'feature' ownedMemberElement=UnnamedFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_1_0() { return cFeatureKeyword_1_1_0; }
		
		//ownedMemberElement=UnnamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_1_1() { return cOwnedMemberElementAssignment_1_1_1; }
		
		//UnnamedFeatureDefinition
		public RuleCall getOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_1_0() { return cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_1_0; }
		
		//('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'feature' memberName=Name? | memberName=Name
		public Alternatives getAlternatives_1_2_0() { return cAlternatives_1_2_0; }
		
		//'feature' memberName=Name?
		public Group getGroup_1_2_0_0() { return cGroup_1_2_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_2_0_0_0() { return cFeatureKeyword_1_2_0_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_0_0_1() { return cMemberNameAssignment_1_2_0_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_0_0_1_0() { return cMemberNameNameParserRuleCall_1_2_0_0_1_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_2_0_1() { return cMemberNameAssignment_1_2_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_0_1_0() { return cMemberNameNameParserRuleCall_1_2_0_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_1() { return cIsKeyword_1_2_1; }
		
		//memberElement=[SysML::Feature|QualifiedName]
		public Assignment getMemberElementAssignment_1_2_2() { return cMemberElementAssignment_1_2_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberElementFeatureCrossReference_1_2_2_0() { return cMemberElementFeatureCrossReference_1_2_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFeatureQualifiedNameParserRuleCall_1_2_2_0_1() { return cMemberElementFeatureQualifiedNameParserRuleCall_1_2_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_3() { return cSemicolonKeyword_1_2_3; }
	}
	public class NonFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDefinitionOrStubParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassifierDefinitionOrStubParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////enum ImportVisibilityIndicator returns groups::VisibilityKind:
		////	public = 'public' | private = 'private'
		////;
		//NonFeatureDefinition SysML::Element:
		//	PackageDefinitionOrStub | ClassifierDefinitionOrStub;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinitionOrStub | ClassifierDefinitionOrStub
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageDefinitionOrStub
		public RuleCall getPackageDefinitionOrStubParserRuleCall_0() { return cPackageDefinitionOrStubParserRuleCall_0; }
		
		//ClassifierDefinitionOrStub
		public RuleCall getClassifierDefinitionOrStubParserRuleCall_1() { return cClassifierDefinitionOrStubParserRuleCall_1; }
	}
	public class ClassifierDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassifierDefinitionOrStub");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassDefinitionOrStubParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationDefinitionOrStubParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ClassifierDefinitionOrStub SysML::Class:
		//	ClassDefinitionOrStub | AssociationDefinitionOrStub;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassDefinitionOrStub | AssociationDefinitionOrStub
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ClassDefinitionOrStub
		public RuleCall getClassDefinitionOrStubParserRuleCall_0() { return cClassDefinitionOrStubParserRuleCall_0; }
		
		//AssociationDefinitionOrStub
		public RuleCall getAssociationDefinitionOrStubParserRuleCall_1() { return cAssociationDefinitionOrStubParserRuleCall_1; }
	}
	public class ClassDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cIsKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Keyword cSpecializesKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedMembershipOwnedGeneralizationParserRuleCall_3_1_0 = (RuleCall)cOwnedMembershipAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cOwnedMembershipOwnedGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cOwnedMembershipAssignment_3_2_1.eContents().get(0);
		
		///* CLASSES */ ClassDeclaration SysML::Class:
		//	isAbstract?='abstract'? 'class' name=Name (('is' | 'specializes') ownedMembership+=OwnedGeneralization (','
		//	ownedMembership+=OwnedGeneralization)*)?;
		@Override public ParserRule getRule() { return rule; }
		
		////	( 'namespace' namespace += [groups::Namespace | QualifiedName] )?
		////	( ^import += ImportDeclaration )*
		//isAbstract?='abstract'? 'class' name=Name (('is' | 'specializes') ownedMembership+=OwnedGeneralization (','
		//ownedMembership+=OwnedGeneralization)*)?
		public Group getGroup() { return cGroup; }
		
		////	( 'namespace' namespace += [groups::Namespace | QualifiedName] )?
		////	( ^import += ImportDeclaration )*
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//(('is' | 'specializes') ownedMembership+=OwnedGeneralization (',' ownedMembership+=OwnedGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'is' | 'specializes'
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }
		
		//'is'
		public Keyword getIsKeyword_3_0_0() { return cIsKeyword_3_0_0; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_3_0_1() { return cSpecializesKeyword_3_0_1; }
		
		//ownedMembership+=OwnedGeneralization
		public Assignment getOwnedMembershipAssignment_3_1() { return cOwnedMembershipAssignment_3_1; }
		
		//OwnedGeneralization
		public RuleCall getOwnedMembershipOwnedGeneralizationParserRuleCall_3_1_0() { return cOwnedMembershipOwnedGeneralizationParserRuleCall_3_1_0; }
		
		//(',' ownedMembership+=OwnedGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//ownedMembership+=OwnedGeneralization
		public Assignment getOwnedMembershipAssignment_3_2_1() { return cOwnedMembershipAssignment_3_2_1; }
		
		//OwnedGeneralization
		public RuleCall getOwnedMembershipOwnedGeneralizationParserRuleCall_3_2_1_0() { return cOwnedMembershipOwnedGeneralizationParserRuleCall_3_2_1_0; }
	}
	public class OwnedGeneralizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.OwnedGeneralization");
		private final Assignment cOwnedMemberElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElementGeneralizationParserRuleCall_0 = (RuleCall)cOwnedMemberElementAssignment.eContents().get(0);
		
		//OwnedGeneralization SysML::Membership:
		//	ownedMemberElement=Generalization;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement=Generalization
		public Assignment getOwnedMemberElementAssignment() { return cOwnedMemberElementAssignment; }
		
		//Generalization
		public RuleCall getOwnedMemberElementGeneralizationParserRuleCall_0() { return cOwnedMemberElementGeneralizationParserRuleCall_0; }
	}
	public class GeneralizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Generalization");
		private final Assignment cGeneralAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cGeneralClassCrossReference_0 = (CrossReference)cGeneralAssignment.eContents().get(0);
		private final RuleCall cGeneralClassQualifiedNameParserRuleCall_0_1 = (RuleCall)cGeneralClassCrossReference_0.eContents().get(1);
		
		//Generalization SysML::Generalization:
		//	general=[SysML::Class|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//general=[SysML::Class|QualifiedName]
		public Assignment getGeneralAssignment() { return cGeneralAssignment; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getGeneralClassCrossReference_0() { return cGeneralClassCrossReference_0; }
		
		//QualifiedName
		public RuleCall getGeneralClassQualifiedNameParserRuleCall_0_1() { return cGeneralClassQualifiedNameParserRuleCall_0_1; }
	}
	public class ClassDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cClassDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMembershipClassMemberParserRuleCall_2_0 = (RuleCall)cOwnedMembershipAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ClassDefinition SysML::Class:
		//	ClassDeclaration '{' ownedMembership+=ClassMember* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//ClassDeclaration '{' ownedMembership+=ClassMember* '}'
		public Group getGroup() { return cGroup; }
		
		//ClassDeclaration
		public RuleCall getClassDeclarationParserRuleCall_0() { return cClassDeclarationParserRuleCall_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//ownedMembership+=ClassMember*
		public Assignment getOwnedMembershipAssignment_2() { return cOwnedMembershipAssignment_2; }
		
		//ClassMember
		public RuleCall getOwnedMembershipClassMemberParserRuleCall_2_0() { return cOwnedMembershipClassMemberParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ClassDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDefinitionOrStub");
		private final RuleCall cClassDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ClassDefinitionOrStub SysML::Class:
		//	ClassDefinition
		//	//	ClassDeclaration
		//	//	( isStub ?= ';' | '{' ( ownedMember += ClassMember )* '}' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassDefinition
		public RuleCall getClassDefinitionParserRuleCall() { return cClassDefinitionParserRuleCall; }
	}
	public class ClassMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ClassMember SysML::Membership:
		//	NonFeatureMember | ClassFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureMember | ClassFeatureMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureMember
		public RuleCall getNonFeatureMemberParserRuleCall_0() { return cNonFeatureMemberParserRuleCall_0; }
		
		//ClassFeatureMember
		public RuleCall getClassFeatureMemberParserRuleCall_1() { return cClassFeatureMemberParserRuleCall_1; }
	}
	public class ClassFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Keyword cFeatureKeyword_1_0_0_0 = (Keyword)cAlternatives_1_0_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_0_0_1_0 = (Keyword)cIsCompositeAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final Keyword cIsPortPortKeyword_1_0_0_2_0 = (Keyword)cIsPortAssignment_1_0_0_2.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_1_0 = (RuleCall)cDirectionAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberElementAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Alternatives cAlternatives_1_1_0 = (Alternatives)cGroup_1_1.eContents().get(0);
		private final Keyword cFeatureKeyword_1_1_0_0 = (Keyword)cAlternatives_1_1_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_0_1 = (Assignment)cAlternatives_1_1_0.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_1_0_1_0 = (Keyword)cIsCompositeAssignment_1_1_0_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_0_2 = (Assignment)cAlternatives_1_1_0.eContents().get(2);
		private final Keyword cIsPortPortKeyword_1_1_0_2_0 = (Keyword)cIsPortAssignment_1_1_0_2.eContents().get(0);
		private final Assignment cDirectionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_1_1_0 = (RuleCall)cDirectionAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMemberElementAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cConnectorKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOwnedMemberElementConnectorDefinitionParserRuleCall_1_2_1_0 = (RuleCall)cOwnedMemberElementAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Alternatives cAlternatives_1_3_0 = (Alternatives)cGroup_1_3.eContents().get(0);
		private final Group cGroup_1_3_0_0 = (Group)cAlternatives_1_3_0.eContents().get(0);
		private final Alternatives cAlternatives_1_3_0_0_0 = (Alternatives)cGroup_1_3_0_0.eContents().get(0);
		private final Keyword cFeatureKeyword_1_3_0_0_0_0 = (Keyword)cAlternatives_1_3_0_0_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_3_0_0_0_1 = (Assignment)cAlternatives_1_3_0_0_0.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_3_0_0_0_1_0 = (Keyword)cIsCompositeAssignment_1_3_0_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_3_0_0_1 = (Assignment)cGroup_1_3_0_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_3_0_0_1_0 = (RuleCall)cMemberNameAssignment_1_3_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_3_0_1 = (Assignment)cAlternatives_1_3_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_3_0_1_0 = (RuleCall)cMemberNameAssignment_1_3_0_1.eContents().get(0);
		private final Keyword cIsKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cMemberElementAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final CrossReference cMemberElementElementCrossReference_1_3_2_0 = (CrossReference)cMemberElementAssignment_1_3_2.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_1_3_2_0_1 = (RuleCall)cMemberElementElementCrossReference_1_3_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_3_3 = (Keyword)cGroup_1_3.eContents().get(3);
		
		//ClassFeatureMember SysML::FeatureMembership:
		//	visibility=VisibilityIndicator? (('feature' | isComposite?='part' | isPort?='port')? direction=FeatureDirection?
		//	ownedMemberElement=NamedFeatureDefinition
		//	| ('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection?
		//	ownedMemberElement=UnnamedFeatureDefinition
		//	| 'connector' ownedMemberElement=ConnectorDefinition
		//	| (('feature' | isComposite?='part') memberName=Name? | memberName=Name) 'is'
		//	memberElement=[SysML::Element|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator? (('feature' | isComposite?='part' | isPort?='port')? direction=FeatureDirection?
		//ownedMemberElement=NamedFeatureDefinition | ('feature' | isComposite?='part' | isPort?='port')
		//direction=FeatureDirection? ownedMemberElement=UnnamedFeatureDefinition | 'connector'
		//ownedMemberElement=ConnectorDefinition | (('feature' | isComposite?='part') memberName=Name? | memberName=Name) 'is'
		//memberElement=[SysML::Element|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_0_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_0_0; }
		
		//('feature' | isComposite?='part' | isPort?='port')? direction=FeatureDirection?
		//ownedMemberElement=NamedFeatureDefinition | ('feature' | isComposite?='part' | isPort?='port')
		//direction=FeatureDirection? ownedMemberElement=UnnamedFeatureDefinition | 'connector'
		//ownedMemberElement=ConnectorDefinition | (('feature' | isComposite?='part') memberName=Name? | memberName=Name) 'is'
		//memberElement=[SysML::Element|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('feature' | isComposite?='part' | isPort?='port')? direction=FeatureDirection?
		//ownedMemberElement=NamedFeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//('feature' | isComposite?='part' | isPort?='port')?
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_0_0_0() { return cFeatureKeyword_1_0_0_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_0_0_1() { return cIsCompositeAssignment_1_0_0_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_0_0_1_0() { return cIsCompositePartKeyword_1_0_0_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_0_2() { return cIsPortAssignment_1_0_0_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_0_2_0() { return cIsPortPortKeyword_1_0_0_2_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_1() { return cDirectionAssignment_1_0_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_1_0; }
		
		//ownedMemberElement=NamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_0_2() { return cOwnedMemberElementAssignment_1_0_2; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_2_0() { return cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_2_0; }
		
		//('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection?
		//ownedMemberElement=UnnamedFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'feature' | isComposite?='part' | isPort?='port'
		public Alternatives getAlternatives_1_1_0() { return cAlternatives_1_1_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_1_0_0() { return cFeatureKeyword_1_1_0_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_1_0_1() { return cIsCompositeAssignment_1_1_0_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_1_0_1_0() { return cIsCompositePartKeyword_1_1_0_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_1_0_2() { return cIsPortAssignment_1_1_0_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_1_0_2_0() { return cIsPortPortKeyword_1_1_0_2_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_1_1() { return cDirectionAssignment_1_1_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_1_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_1_1_0; }
		
		//ownedMemberElement=UnnamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_1_2() { return cOwnedMemberElementAssignment_1_1_2; }
		
		//UnnamedFeatureDefinition
		public RuleCall getOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_2_0() { return cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_2_0; }
		
		//'connector' ownedMemberElement=ConnectorDefinition
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'connector'
		public Keyword getConnectorKeyword_1_2_0() { return cConnectorKeyword_1_2_0; }
		
		//ownedMemberElement=ConnectorDefinition
		public Assignment getOwnedMemberElementAssignment_1_2_1() { return cOwnedMemberElementAssignment_1_2_1; }
		
		//ConnectorDefinition
		public RuleCall getOwnedMemberElementConnectorDefinitionParserRuleCall_1_2_1_0() { return cOwnedMemberElementConnectorDefinitionParserRuleCall_1_2_1_0; }
		
		//(('feature' | isComposite?='part') memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Element|QualifiedName]
		//';'
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//('feature' | isComposite?='part') memberName=Name? | memberName=Name
		public Alternatives getAlternatives_1_3_0() { return cAlternatives_1_3_0; }
		
		//('feature' | isComposite?='part') memberName=Name?
		public Group getGroup_1_3_0_0() { return cGroup_1_3_0_0; }
		
		//'feature' | isComposite?='part'
		public Alternatives getAlternatives_1_3_0_0_0() { return cAlternatives_1_3_0_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_3_0_0_0_0() { return cFeatureKeyword_1_3_0_0_0_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_3_0_0_0_1() { return cIsCompositeAssignment_1_3_0_0_0_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_3_0_0_0_1_0() { return cIsCompositePartKeyword_1_3_0_0_0_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_3_0_0_1() { return cMemberNameAssignment_1_3_0_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_3_0_0_1_0() { return cMemberNameNameParserRuleCall_1_3_0_0_1_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_3_0_1() { return cMemberNameAssignment_1_3_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_3_0_1_0() { return cMemberNameNameParserRuleCall_1_3_0_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_3_1() { return cIsKeyword_1_3_1; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_1_3_2() { return cMemberElementAssignment_1_3_2; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_1_3_2_0() { return cMemberElementElementCrossReference_1_3_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_1_3_2_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_1_3_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_3_3() { return cSemicolonKeyword_1_3_3; }
	}
	public class AssociationDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cAssocKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cIsKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Keyword cSpecializesKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedMembershipOwnedGeneralizationParserRuleCall_3_1_0 = (RuleCall)cOwnedMembershipAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cOwnedMembershipOwnedGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cOwnedMembershipAssignment_3_2_1.eContents().get(0);
		
		///* ASSOCIATIONS */ AssociationDeclaration SysML::Association:
		//	isAbstract?='abstract'? 'assoc' name=Name (('is' | 'specializes') ownedMembership+=OwnedGeneralization (','
		//	ownedMembership+=OwnedGeneralization)*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'assoc' name=Name (('is' | 'specializes') ownedMembership+=OwnedGeneralization (','
		//ownedMembership+=OwnedGeneralization)*)?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'assoc'
		public Keyword getAssocKeyword_1() { return cAssocKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//(('is' | 'specializes') ownedMembership+=OwnedGeneralization (',' ownedMembership+=OwnedGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'is' | 'specializes'
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }
		
		//'is'
		public Keyword getIsKeyword_3_0_0() { return cIsKeyword_3_0_0; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_3_0_1() { return cSpecializesKeyword_3_0_1; }
		
		//ownedMembership+=OwnedGeneralization
		public Assignment getOwnedMembershipAssignment_3_1() { return cOwnedMembershipAssignment_3_1; }
		
		//OwnedGeneralization
		public RuleCall getOwnedMembershipOwnedGeneralizationParserRuleCall_3_1_0() { return cOwnedMembershipOwnedGeneralizationParserRuleCall_3_1_0; }
		
		//(',' ownedMembership+=OwnedGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//ownedMembership+=OwnedGeneralization
		public Assignment getOwnedMembershipAssignment_3_2_1() { return cOwnedMembershipAssignment_3_2_1; }
		
		//OwnedGeneralization
		public RuleCall getOwnedMembershipOwnedGeneralizationParserRuleCall_3_2_1_0() { return cOwnedMembershipOwnedGeneralizationParserRuleCall_3_2_1_0; }
	}
	public class AssociationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAssociationDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMembershipAssociationMemberParserRuleCall_2_0 = (RuleCall)cOwnedMembershipAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AssociationDefinition SysML::Association:
		//	AssociationDeclaration '{' ownedMembership+=AssociationMember* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//AssociationDeclaration '{' ownedMembership+=AssociationMember* '}'
		public Group getGroup() { return cGroup; }
		
		//AssociationDeclaration
		public RuleCall getAssociationDeclarationParserRuleCall_0() { return cAssociationDeclarationParserRuleCall_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//ownedMembership+=AssociationMember*
		public Assignment getOwnedMembershipAssignment_2() { return cOwnedMembershipAssignment_2; }
		
		//AssociationMember
		public RuleCall getOwnedMembershipAssociationMemberParserRuleCall_2_0() { return cOwnedMembershipAssociationMemberParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class AssociationMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEndFeatureMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AssociationMember SysML::Membership:
		//	NonFeatureMember | AssociationFeatureMember | EndFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureMember | AssociationFeatureMember | EndFeatureMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureMember
		public RuleCall getNonFeatureMemberParserRuleCall_0() { return cNonFeatureMemberParserRuleCall_0; }
		
		//AssociationFeatureMember
		public RuleCall getAssociationFeatureMemberParserRuleCall_1() { return cAssociationFeatureMemberParserRuleCall_1; }
		
		//EndFeatureMember
		public RuleCall getEndFeatureMemberParserRuleCall_2() { return cEndFeatureMemberParserRuleCall_2; }
	}
	public class AssociationDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDefinitionOrStub");
		private final RuleCall cAssociationDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AssociationDefinitionOrStub SysML::Association:
		//	AssociationDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//AssociationDefinition
		public RuleCall getAssociationDefinitionParserRuleCall() { return cAssociationDefinitionParserRuleCall; }
	}
	public class AssociationFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Keyword cFeatureKeyword_1_0_0_0 = (Keyword)cAlternatives_1_0_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_0_0_1_0 = (Keyword)cIsCompositeAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final Keyword cIsPortPortKeyword_1_0_0_2_0 = (Keyword)cIsPortAssignment_1_0_0_2.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_1_0 = (RuleCall)cDirectionAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberElementFeatureDefinitionParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberElementAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cConnectorKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedMemberElementConnectorDefinitionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMemberElementAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Alternatives cAlternatives_1_2_0 = (Alternatives)cGroup_1_2.eContents().get(0);
		private final Keyword cFeatureKeyword_1_2_0_0 = (Keyword)cAlternatives_1_2_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_2_0_1 = (Assignment)cAlternatives_1_2_0.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_2_0_1_0 = (Keyword)cIsCompositeAssignment_1_2_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Assignment cMemberElementAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
		private final CrossReference cMemberElementElementCrossReference_1_2_3_0 = (CrossReference)cMemberElementAssignment_1_2_3.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_1_2_3_0_1 = (RuleCall)cMemberElementElementCrossReference_1_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		
		//AssociationFeatureMember SysML::FeatureMembership:
		//	visibility=VisibilityIndicator? (('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection?
		//	ownedMemberElement=FeatureDefinition
		//	| 'connector' ownedMemberElement=ConnectorDefinition
		//	| ('feature' | isComposite?='part') memberName=Name? 'is' memberElement=[SysML::Element|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator? (('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection?
		//ownedMemberElement=FeatureDefinition | 'connector' ownedMemberElement=ConnectorDefinition | ('feature' |
		//isComposite?='part') memberName=Name? 'is' memberElement=[SysML::Element|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_0_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_0_0; }
		
		//('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection? ownedMemberElement=FeatureDefinition |
		//'connector' ownedMemberElement=ConnectorDefinition | ('feature' | isComposite?='part') memberName=Name? 'is'
		//memberElement=[SysML::Element|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection? ownedMemberElement=FeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'feature' | isComposite?='part' | isPort?='port'
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_0_0_0() { return cFeatureKeyword_1_0_0_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_0_0_1() { return cIsCompositeAssignment_1_0_0_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_0_0_1_0() { return cIsCompositePartKeyword_1_0_0_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_0_2() { return cIsPortAssignment_1_0_0_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_0_2_0() { return cIsPortPortKeyword_1_0_0_2_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_1() { return cDirectionAssignment_1_0_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_1_0; }
		
		//ownedMemberElement=FeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_0_2() { return cOwnedMemberElementAssignment_1_0_2; }
		
		//FeatureDefinition
		public RuleCall getOwnedMemberElementFeatureDefinitionParserRuleCall_1_0_2_0() { return cOwnedMemberElementFeatureDefinitionParserRuleCall_1_0_2_0; }
		
		//'connector' ownedMemberElement=ConnectorDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'connector'
		public Keyword getConnectorKeyword_1_1_0() { return cConnectorKeyword_1_1_0; }
		
		//ownedMemberElement=ConnectorDefinition
		public Assignment getOwnedMemberElementAssignment_1_1_1() { return cOwnedMemberElementAssignment_1_1_1; }
		
		//ConnectorDefinition
		public RuleCall getOwnedMemberElementConnectorDefinitionParserRuleCall_1_1_1_0() { return cOwnedMemberElementConnectorDefinitionParserRuleCall_1_1_1_0; }
		
		//('feature' | isComposite?='part') memberName=Name? 'is' memberElement=[SysML::Element|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'feature' | isComposite?='part'
		public Alternatives getAlternatives_1_2_0() { return cAlternatives_1_2_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_2_0_0() { return cFeatureKeyword_1_2_0_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_2_0_1() { return cIsCompositeAssignment_1_2_0_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_2_0_1_0() { return cIsCompositePartKeyword_1_2_0_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_2() { return cIsKeyword_1_2_2; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_1_2_3() { return cMemberElementAssignment_1_2_3; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_1_2_3_0() { return cMemberElementElementCrossReference_1_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_1_2_3_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_1_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
	}
	public class EndFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EndFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cEndKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_1_0 = (RuleCall)cDirectionAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberElementAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cEndKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDirectionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_1_1_0 = (RuleCall)cDirectionAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMemberElementAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Alternatives cAlternatives_1_2_0 = (Alternatives)cGroup_1_2.eContents().get(0);
		private final Group cGroup_1_2_0_0 = (Group)cAlternatives_1_2_0.eContents().get(0);
		private final Keyword cEndKeyword_1_2_0_0_0 = (Keyword)cGroup_1_2_0_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_0_0_1 = (Assignment)cGroup_1_2_0_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_0_0_1_0 = (RuleCall)cMemberNameAssignment_1_2_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_0_1 = (Assignment)cAlternatives_1_2_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_0_1_0 = (RuleCall)cMemberNameAssignment_1_2_0_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cMemberElementAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final CrossReference cMemberElementElementCrossReference_1_2_2_0 = (CrossReference)cMemberElementAssignment_1_2_2.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_1_2_2_0_1 = (RuleCall)cMemberElementElementCrossReference_1_2_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		
		//EndFeatureMember SysML::EndFeatureMembership:
		//	visibility=VisibilityIndicator? ('end'? direction=FeatureDirection? ownedMemberElement=NamedFeatureDefinition
		//	| 'end' direction=FeatureDirection? ownedMemberElement=UnnamedFeatureDefinition
		//	| ('end' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Element|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator? ('end'? direction=FeatureDirection? ownedMemberElement=NamedFeatureDefinition | 'end'
		//direction=FeatureDirection? ownedMemberElement=UnnamedFeatureDefinition | ('end' memberName=Name? | memberName=Name)
		//'is' memberElement=[SysML::Element|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_0_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_0_0; }
		
		//'end'? direction=FeatureDirection? ownedMemberElement=NamedFeatureDefinition | 'end' direction=FeatureDirection?
		//ownedMemberElement=UnnamedFeatureDefinition | ('end' memberName=Name? | memberName=Name) 'is'
		//memberElement=[SysML::Element|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'end'? direction=FeatureDirection? ownedMemberElement=NamedFeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'end'?
		public Keyword getEndKeyword_1_0_0() { return cEndKeyword_1_0_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_1() { return cDirectionAssignment_1_0_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_1_0; }
		
		//ownedMemberElement=NamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_0_2() { return cOwnedMemberElementAssignment_1_0_2; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_2_0() { return cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_1_0_2_0; }
		
		//'end' direction=FeatureDirection? ownedMemberElement=UnnamedFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'end'
		public Keyword getEndKeyword_1_1_0() { return cEndKeyword_1_1_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_1_1() { return cDirectionAssignment_1_1_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_1_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_1_1_0; }
		
		//ownedMemberElement=UnnamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_1_2() { return cOwnedMemberElementAssignment_1_1_2; }
		
		//UnnamedFeatureDefinition
		public RuleCall getOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_2_0() { return cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_2_0; }
		
		//('end' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Element|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'end' memberName=Name? | memberName=Name
		public Alternatives getAlternatives_1_2_0() { return cAlternatives_1_2_0; }
		
		//'end' memberName=Name?
		public Group getGroup_1_2_0_0() { return cGroup_1_2_0_0; }
		
		//'end'
		public Keyword getEndKeyword_1_2_0_0_0() { return cEndKeyword_1_2_0_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_0_0_1() { return cMemberNameAssignment_1_2_0_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_0_0_1_0() { return cMemberNameNameParserRuleCall_1_2_0_0_1_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_2_0_1() { return cMemberNameAssignment_1_2_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_0_1_0() { return cMemberNameNameParserRuleCall_1_2_0_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_1() { return cIsKeyword_1_2_1; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_1_2_2() { return cMemberElementAssignment_1_2_2; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_1_2_2_0() { return cMemberElementElementCrossReference_1_2_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_1_2_2_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_1_2_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_3() { return cSemicolonKeyword_1_2_3; }
	}
	public class FeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamedFeatureDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUnnamedFeatureDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* FEATURES */ FeatureDefinition SysML::Feature:
		//	NamedFeatureDefinition | UnnamedFeatureDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//NamedFeatureDefinition | UnnamedFeatureDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NamedFeatureDefinition
		public RuleCall getNamedFeatureDefinitionParserRuleCall_0() { return cNamedFeatureDefinitionParserRuleCall_0; }
		
		//UnnamedFeatureDefinition
		public RuleCall getUnnamedFeatureDefinitionParserRuleCall_1() { return cUnnamedFeatureDefinitionParserRuleCall_1; }
	}
	public class NamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final Keyword cIsCompositeComposesKeyword_1_0_0_1_0 = (Keyword)cIsCompositeAssignment_1_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0_2 = (Alternatives)cGroup_1_0_0.eContents().get(2);
		private final Assignment cReferencedTypeAssignment_1_0_0_2_0 = (Assignment)cAlternatives_1_0_0_2.eContents().get(0);
		private final CrossReference cReferencedTypeClassCrossReference_1_0_0_2_0_0 = (CrossReference)cReferencedTypeAssignment_1_0_0_2_0.eContents().get(0);
		private final RuleCall cReferencedTypeClassQualifiedNameParserRuleCall_1_0_0_2_0_0_1 = (RuleCall)cReferencedTypeClassCrossReference_1_0_0_2_0_0.eContents().get(1);
		private final Keyword cAnyKeyword_1_0_0_2_1 = (Keyword)cAlternatives_1_0_0_2.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_0_0_3 = (Assignment)cGroup_1_0_0.eContents().get(3);
		private final RuleCall cOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_1_0_0_3_0 = (RuleCall)cOwnedMembershipAssignment_1_0_0_3.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cGroup_1_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Group cGroup_1_0_1_1 = (Group)cGroup_1_0_1.eContents().get(1);
		private final Assignment cLowerAssignment_1_0_1_1_0 = (Assignment)cGroup_1_0_1_1.eContents().get(0);
		private final RuleCall cLowerNaturalLiteralExpressionParserRuleCall_1_0_1_1_0_0 = (RuleCall)cLowerAssignment_1_0_1_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_0_1_1_1 = (Keyword)cGroup_1_0_1_1.eContents().get(1);
		private final Assignment cUpperAssignment_1_0_1_2 = (Assignment)cGroup_1_0_1.eContents().get(2);
		private final RuleCall cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_0_1_2_0 = (RuleCall)cUpperAssignment_1_0_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_0_1_3 = (Keyword)cGroup_1_0_1.eContents().get(3);
		private final Group cGroup_1_0_2 = (Group)cGroup_1_0.eContents().get(2);
		private final Keyword cEqualsSignKeyword_1_0_2_0 = (Keyword)cGroup_1_0_2.eContents().get(0);
		private final Assignment cValueAssignment_1_0_2_1 = (Assignment)cGroup_1_0_2.eContents().get(1);
		private final RuleCall cValueExpressionParserRuleCall_1_0_2_1_0 = (RuleCall)cValueAssignment_1_0_2_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_3 = (Alternatives)cGroup_1_0.eContents().get(3);
		private final Keyword cSemicolonKeyword_1_0_3_0 = (Keyword)cAlternatives_1_0_3.eContents().get(0);
		private final Group cGroup_1_0_3_1 = (Group)cAlternatives_1_0_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0_3_1_0 = (Keyword)cGroup_1_0_3_1.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1_0_3_1_1 = (Assignment)cGroup_1_0_3_1.eContents().get(1);
		private final RuleCall cOwnedMembershipClassMemberParserRuleCall_1_0_3_1_1_0 = (RuleCall)cOwnedMembershipAssignment_1_0_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_3_1_2 = (Keyword)cGroup_1_0_3_1.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembershipAssignment_1_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_0 = (Group)cAlternatives_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_1_0_0 = (Group)cGroup_1_1_1_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_1_1_0_0_0 = (Keyword)cGroup_1_1_1_0_0.eContents().get(0);
		private final Group cGroup_1_1_1_0_0_1 = (Group)cGroup_1_1_1_0_0.eContents().get(1);
		private final Assignment cLowerAssignment_1_1_1_0_0_1_0 = (Assignment)cGroup_1_1_1_0_0_1.eContents().get(0);
		private final RuleCall cLowerNaturalLiteralExpressionParserRuleCall_1_1_1_0_0_1_0_0 = (RuleCall)cLowerAssignment_1_1_1_0_0_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1_1_0_0_1_1 = (Keyword)cGroup_1_1_1_0_0_1.eContents().get(1);
		private final Assignment cUpperAssignment_1_1_1_0_0_2 = (Assignment)cGroup_1_1_1_0_0.eContents().get(2);
		private final RuleCall cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_1_0_0_2_0 = (RuleCall)cUpperAssignment_1_1_1_0_0_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_1_0_0_3 = (Keyword)cGroup_1_1_1_0_0.eContents().get(3);
		private final Alternatives cAlternatives_1_1_1_0_1 = (Alternatives)cGroup_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_1_0_1_0 = (Group)cAlternatives_1_1_1_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1_1_0_1_0_0 = (Keyword)cGroup_1_1_1_0_1_0.eContents().get(0);
		private final Assignment cValueAssignment_1_1_1_0_1_0_1 = (Assignment)cGroup_1_1_1_0_1_0.eContents().get(1);
		private final RuleCall cValueExpressionParserRuleCall_1_1_1_0_1_0_1_0 = (RuleCall)cValueAssignment_1_1_1_0_1_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1_0_1_0_2 = (Alternatives)cGroup_1_1_1_0_1_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_1_1_0_1_0_2_0 = (Keyword)cAlternatives_1_1_1_0_1_0_2.eContents().get(0);
		private final Group cGroup_1_1_1_0_1_0_2_1 = (Group)cAlternatives_1_1_1_0_1_0_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_1_0_1_0_2_1_0 = (Keyword)cGroup_1_1_1_0_1_0_2_1.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1_1_1_0_1_0_2_1_1 = (Assignment)cGroup_1_1_1_0_1_0_2_1.eContents().get(1);
		private final RuleCall cOwnedMembershipClassMemberParserRuleCall_1_1_1_0_1_0_2_1_1_0 = (RuleCall)cOwnedMembershipAssignment_1_1_1_0_1_0_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_1_1_0_1_0_2_1_2 = (Keyword)cGroup_1_1_1_0_1_0_2_1.eContents().get(2);
		private final Group cGroup_1_1_1_0_1_1 = (Group)cAlternatives_1_1_1_0_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_1_0_1_1_0 = (Keyword)cGroup_1_1_1_0_1_1.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1_1_1_0_1_1_1 = (Assignment)cGroup_1_1_1_0_1_1.eContents().get(1);
		private final RuleCall cOwnedMembershipClassMemberParserRuleCall_1_1_1_0_1_1_1_0 = (RuleCall)cOwnedMembershipAssignment_1_1_1_0_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_1_1_0_1_1_2 = (Keyword)cGroup_1_1_1_0_1_1.eContents().get(2);
		private final Group cGroup_1_1_1_1 = (Group)cAlternatives_1_1_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_1_1_1_0 = (Keyword)cGroup_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_1_1_1 = (Group)cGroup_1_1_1_1.eContents().get(1);
		private final Assignment cLowerAssignment_1_1_1_1_1_0 = (Assignment)cGroup_1_1_1_1_1.eContents().get(0);
		private final RuleCall cLowerNaturalLiteralExpressionParserRuleCall_1_1_1_1_1_0_0 = (RuleCall)cLowerAssignment_1_1_1_1_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1_1_1_1_1 = (Keyword)cGroup_1_1_1_1_1.eContents().get(1);
		private final Assignment cUpperAssignment_1_1_1_1_2 = (Assignment)cGroup_1_1_1_1.eContents().get(2);
		private final RuleCall cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_1_1_2_0 = (RuleCall)cUpperAssignment_1_1_1_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_1_1_3 = (Keyword)cGroup_1_1_1_1.eContents().get(3);
		private final Keyword cSemicolonKeyword_1_1_1_1_4 = (Keyword)cGroup_1_1_1_1.eContents().get(4);
		
		//NamedFeatureDefinition SysML::Feature:
		//	name=Name ((':' isComposite?='composes'? (referencedType+=[SysML::Class|QualifiedName] | 'any')
		//	ownedMembership+=OwnedRedefinitionOrSubset?)? ('[' (lower=NaturalLiteralExpression '..')?
		//	upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression)? (';' | '{' ownedMembership+=ClassMember* '}') |
		//	ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
		//	upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') |
		//	'{' ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')?
		//	upper=UnlimitedNaturalLiteralExpression ']' ';'));
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name ((':' isComposite?='composes'? (referencedType+=[SysML::Class|QualifiedName] | 'any')
		//ownedMembership+=OwnedRedefinitionOrSubset?)? ('[' (lower=NaturalLiteralExpression '..')?
		//upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression)? (';' | '{' ownedMembership+=ClassMember* '}') |
		//ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
		//upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') | '{'
		//ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression
		//']' ';'))
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		//(':' isComposite?='composes'? (referencedType+=[SysML::Class|QualifiedName] | 'any')
		//ownedMembership+=OwnedRedefinitionOrSubset?)? ('[' (lower=NaturalLiteralExpression '..')?
		//upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression)? (';' | '{' ownedMembership+=ClassMember* '}') |
		//ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
		//upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') | '{'
		//ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression
		//']' ';')
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//(':' isComposite?='composes'? (referencedType+=[SysML::Class|QualifiedName] | 'any')
		//ownedMembership+=OwnedRedefinitionOrSubset?)? ('[' (lower=NaturalLiteralExpression '..')?
		//upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression)? (';' | '{' ownedMembership+=ClassMember* '}')
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//(':' isComposite?='composes'? (referencedType+=[SysML::Class|QualifiedName] | 'any')
		//ownedMembership+=OwnedRedefinitionOrSubset?)?
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_1_0_0_0() { return cColonKeyword_1_0_0_0; }
		
		//isComposite?='composes'?
		public Assignment getIsCompositeAssignment_1_0_0_1() { return cIsCompositeAssignment_1_0_0_1; }
		
		//'composes'
		public Keyword getIsCompositeComposesKeyword_1_0_0_1_0() { return cIsCompositeComposesKeyword_1_0_0_1_0; }
		
		//referencedType+=[SysML::Class|QualifiedName] | 'any'
		public Alternatives getAlternatives_1_0_0_2() { return cAlternatives_1_0_0_2; }
		
		//referencedType+=[SysML::Class|QualifiedName]
		public Assignment getReferencedTypeAssignment_1_0_0_2_0() { return cReferencedTypeAssignment_1_0_0_2_0; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getReferencedTypeClassCrossReference_1_0_0_2_0_0() { return cReferencedTypeClassCrossReference_1_0_0_2_0_0; }
		
		//QualifiedName
		public RuleCall getReferencedTypeClassQualifiedNameParserRuleCall_1_0_0_2_0_0_1() { return cReferencedTypeClassQualifiedNameParserRuleCall_1_0_0_2_0_0_1; }
		
		//'any'
		public Keyword getAnyKeyword_1_0_0_2_1() { return cAnyKeyword_1_0_0_2_1; }
		
		//ownedMembership+=OwnedRedefinitionOrSubset?
		public Assignment getOwnedMembershipAssignment_1_0_0_3() { return cOwnedMembershipAssignment_1_0_0_3; }
		
		//OwnedRedefinitionOrSubset
		public RuleCall getOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_1_0_0_3_0() { return cOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_1_0_0_3_0; }
		
		//('[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']')?
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0_1_0() { return cLeftSquareBracketKeyword_1_0_1_0; }
		
		//(lower=NaturalLiteralExpression '..')?
		public Group getGroup_1_0_1_1() { return cGroup_1_0_1_1; }
		
		//lower=NaturalLiteralExpression
		public Assignment getLowerAssignment_1_0_1_1_0() { return cLowerAssignment_1_0_1_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getLowerNaturalLiteralExpressionParserRuleCall_1_0_1_1_0_0() { return cLowerNaturalLiteralExpressionParserRuleCall_1_0_1_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_0_1_1_1() { return cFullStopFullStopKeyword_1_0_1_1_1; }
		
		//upper=UnlimitedNaturalLiteralExpression
		public Assignment getUpperAssignment_1_0_1_2() { return cUpperAssignment_1_0_1_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_0_1_2_0() { return cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_0_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_0_1_3() { return cRightSquareBracketKeyword_1_0_1_3; }
		
		//('=' value=Expression)?
		public Group getGroup_1_0_2() { return cGroup_1_0_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_0_2_0() { return cEqualsSignKeyword_1_0_2_0; }
		
		//value=Expression
		public Assignment getValueAssignment_1_0_2_1() { return cValueAssignment_1_0_2_1; }
		
		//Expression
		public RuleCall getValueExpressionParserRuleCall_1_0_2_1_0() { return cValueExpressionParserRuleCall_1_0_2_1_0; }
		
		//';' | '{' ownedMembership+=ClassMember* '}'
		public Alternatives getAlternatives_1_0_3() { return cAlternatives_1_0_3; }
		
		//';'
		public Keyword getSemicolonKeyword_1_0_3_0() { return cSemicolonKeyword_1_0_3_0; }
		
		//'{' ownedMembership+=ClassMember* '}'
		public Group getGroup_1_0_3_1() { return cGroup_1_0_3_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0_3_1_0() { return cLeftCurlyBracketKeyword_1_0_3_1_0; }
		
		//ownedMembership+=ClassMember*
		public Assignment getOwnedMembershipAssignment_1_0_3_1_1() { return cOwnedMembershipAssignment_1_0_3_1_1; }
		
		//ClassMember
		public RuleCall getOwnedMembershipClassMemberParserRuleCall_1_0_3_1_1_0() { return cOwnedMembershipClassMemberParserRuleCall_1_0_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_0_3_1_2() { return cRightCurlyBracketKeyword_1_0_3_1_2; }
		
		//ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
		//upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') | '{'
		//ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression
		//']' ';')
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//ownedMembership+=OwnedRedefinitionOrSubset
		public Assignment getOwnedMembershipAssignment_1_1_0() { return cOwnedMembershipAssignment_1_1_0; }
		
		//OwnedRedefinitionOrSubset
		public RuleCall getOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_1_1_0_0() { return cOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_1_1_0_0; }
		
		//('[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' |
		//'{' ownedMembership+=ClassMember* '}') | '{' ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression
		//'..')? upper=UnlimitedNaturalLiteralExpression ']' ';'
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }
		
		//('[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' |
		//'{' ownedMembership+=ClassMember* '}') | '{' ownedMembership+=ClassMember* '}')
		public Group getGroup_1_1_1_0() { return cGroup_1_1_1_0; }
		
		//('[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']')?
		public Group getGroup_1_1_1_0_0() { return cGroup_1_1_1_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_1_1_0_0_0() { return cLeftSquareBracketKeyword_1_1_1_0_0_0; }
		
		//(lower=NaturalLiteralExpression '..')?
		public Group getGroup_1_1_1_0_0_1() { return cGroup_1_1_1_0_0_1; }
		
		//lower=NaturalLiteralExpression
		public Assignment getLowerAssignment_1_1_1_0_0_1_0() { return cLowerAssignment_1_1_1_0_0_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getLowerNaturalLiteralExpressionParserRuleCall_1_1_1_0_0_1_0_0() { return cLowerNaturalLiteralExpressionParserRuleCall_1_1_1_0_0_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1_1_0_0_1_1() { return cFullStopFullStopKeyword_1_1_1_0_0_1_1; }
		
		//upper=UnlimitedNaturalLiteralExpression
		public Assignment getUpperAssignment_1_1_1_0_0_2() { return cUpperAssignment_1_1_1_0_0_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_1_0_0_2_0() { return cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_1_0_0_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_1_1_0_0_3() { return cRightSquareBracketKeyword_1_1_1_0_0_3; }
		
		//'=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') | '{' ownedMembership+=ClassMember* '}'
		public Alternatives getAlternatives_1_1_1_0_1() { return cAlternatives_1_1_1_0_1; }
		
		//'=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}')
		public Group getGroup_1_1_1_0_1_0() { return cGroup_1_1_1_0_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_1_1_0_1_0_0() { return cEqualsSignKeyword_1_1_1_0_1_0_0; }
		
		//value=Expression
		public Assignment getValueAssignment_1_1_1_0_1_0_1() { return cValueAssignment_1_1_1_0_1_0_1; }
		
		//Expression
		public RuleCall getValueExpressionParserRuleCall_1_1_1_0_1_0_1_0() { return cValueExpressionParserRuleCall_1_1_1_0_1_0_1_0; }
		
		//';' | '{' ownedMembership+=ClassMember* '}'
		public Alternatives getAlternatives_1_1_1_0_1_0_2() { return cAlternatives_1_1_1_0_1_0_2; }
		
		//';'
		public Keyword getSemicolonKeyword_1_1_1_0_1_0_2_0() { return cSemicolonKeyword_1_1_1_0_1_0_2_0; }
		
		//'{' ownedMembership+=ClassMember* '}'
		public Group getGroup_1_1_1_0_1_0_2_1() { return cGroup_1_1_1_0_1_0_2_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1_1_0_1_0_2_1_0() { return cLeftCurlyBracketKeyword_1_1_1_0_1_0_2_1_0; }
		
		//ownedMembership+=ClassMember*
		public Assignment getOwnedMembershipAssignment_1_1_1_0_1_0_2_1_1() { return cOwnedMembershipAssignment_1_1_1_0_1_0_2_1_1; }
		
		//ClassMember
		public RuleCall getOwnedMembershipClassMemberParserRuleCall_1_1_1_0_1_0_2_1_1_0() { return cOwnedMembershipClassMemberParserRuleCall_1_1_1_0_1_0_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_1_1_0_1_0_2_1_2() { return cRightCurlyBracketKeyword_1_1_1_0_1_0_2_1_2; }
		
		//'{' ownedMembership+=ClassMember* '}'
		public Group getGroup_1_1_1_0_1_1() { return cGroup_1_1_1_0_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1_1_0_1_1_0() { return cLeftCurlyBracketKeyword_1_1_1_0_1_1_0; }
		
		//ownedMembership+=ClassMember*
		public Assignment getOwnedMembershipAssignment_1_1_1_0_1_1_1() { return cOwnedMembershipAssignment_1_1_1_0_1_1_1; }
		
		//ClassMember
		public RuleCall getOwnedMembershipClassMemberParserRuleCall_1_1_1_0_1_1_1_0() { return cOwnedMembershipClassMemberParserRuleCall_1_1_1_0_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_1_1_0_1_1_2() { return cRightCurlyBracketKeyword_1_1_1_0_1_1_2; }
		
		//'[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']' ';'
		public Group getGroup_1_1_1_1() { return cGroup_1_1_1_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_1_1_1_0() { return cLeftSquareBracketKeyword_1_1_1_1_0; }
		
		//(lower=NaturalLiteralExpression '..')?
		public Group getGroup_1_1_1_1_1() { return cGroup_1_1_1_1_1; }
		
		//lower=NaturalLiteralExpression
		public Assignment getLowerAssignment_1_1_1_1_1_0() { return cLowerAssignment_1_1_1_1_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getLowerNaturalLiteralExpressionParserRuleCall_1_1_1_1_1_0_0() { return cLowerNaturalLiteralExpressionParserRuleCall_1_1_1_1_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1_1_1_1_1() { return cFullStopFullStopKeyword_1_1_1_1_1_1; }
		
		//upper=UnlimitedNaturalLiteralExpression
		public Assignment getUpperAssignment_1_1_1_1_2() { return cUpperAssignment_1_1_1_1_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_1_1_2_0() { return cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_1_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_1_1_1_3() { return cRightSquareBracketKeyword_1_1_1_1_3; }
		
		//';'
		public Keyword getSemicolonKeyword_1_1_1_1_4() { return cSemicolonKeyword_1_1_1_1_4; }
	}
	public class UnnamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnnamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_0_0 = (RuleCall)cOwnedMembershipAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Group cGroup_1_0_0_1 = (Group)cGroup_1_0_0.eContents().get(1);
		private final Assignment cLowerAssignment_1_0_0_1_0 = (Assignment)cGroup_1_0_0_1.eContents().get(0);
		private final RuleCall cLowerNaturalLiteralExpressionParserRuleCall_1_0_0_1_0_0 = (RuleCall)cLowerAssignment_1_0_0_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_0_0_1_1 = (Keyword)cGroup_1_0_0_1.eContents().get(1);
		private final Assignment cUpperAssignment_1_0_0_2 = (Assignment)cGroup_1_0_0.eContents().get(2);
		private final RuleCall cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_0_0_2_0 = (RuleCall)cUpperAssignment_1_0_0_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_0_0_3 = (Keyword)cGroup_1_0_0.eContents().get(3);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_1_0 = (Group)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_0_1_0_0 = (Keyword)cGroup_1_0_1_0.eContents().get(0);
		private final Assignment cValueAssignment_1_0_1_0_1 = (Assignment)cGroup_1_0_1_0.eContents().get(1);
		private final RuleCall cValueExpressionParserRuleCall_1_0_1_0_1_0 = (RuleCall)cValueAssignment_1_0_1_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1_0_2 = (Alternatives)cGroup_1_0_1_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_0_1_0_2_0 = (Keyword)cAlternatives_1_0_1_0_2.eContents().get(0);
		private final Group cGroup_1_0_1_0_2_1 = (Group)cAlternatives_1_0_1_0_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0_1_0_2_1_0 = (Keyword)cGroup_1_0_1_0_2_1.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1_0_1_0_2_1_1 = (Assignment)cGroup_1_0_1_0_2_1.eContents().get(1);
		private final RuleCall cOwnedMembershipClassMemberParserRuleCall_1_0_1_0_2_1_1_0 = (RuleCall)cOwnedMembershipAssignment_1_0_1_0_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_1_0_2_1_2 = (Keyword)cGroup_1_0_1_0_2_1.eContents().get(2);
		private final Group cGroup_1_0_1_1 = (Group)cAlternatives_1_0_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0_1_1_0 = (Keyword)cGroup_1_0_1_1.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1_0_1_1_1 = (Assignment)cGroup_1_0_1_1.eContents().get(1);
		private final RuleCall cOwnedMembershipClassMemberParserRuleCall_1_0_1_1_1_0 = (RuleCall)cOwnedMembershipAssignment_1_0_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_0_1_1_2 = (Keyword)cGroup_1_0_1_1.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Assignment cLowerAssignment_1_1_1_0 = (Assignment)cGroup_1_1_1.eContents().get(0);
		private final RuleCall cLowerNaturalLiteralExpressionParserRuleCall_1_1_1_0_0 = (RuleCall)cLowerAssignment_1_1_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1_1_1 = (Keyword)cGroup_1_1_1.eContents().get(1);
		private final Assignment cUpperAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_2_0 = (RuleCall)cUpperAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_3 = (Keyword)cGroup_1_1.eContents().get(3);
		private final Keyword cSemicolonKeyword_1_1_4 = (Keyword)cGroup_1_1.eContents().get(4);
		
		//UnnamedFeatureDefinition SysML::Feature:
		//	ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
		//	upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') |
		//	'{' ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')?
		//	upper=UnlimitedNaturalLiteralExpression ']' ';');
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
		//upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') | '{'
		//ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression
		//']' ';')
		public Group getGroup() { return cGroup; }
		
		//ownedMembership+=OwnedRedefinitionOrSubset
		public Assignment getOwnedMembershipAssignment_0() { return cOwnedMembershipAssignment_0; }
		
		//OwnedRedefinitionOrSubset
		public RuleCall getOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_0_0() { return cOwnedMembershipOwnedRedefinitionOrSubsetParserRuleCall_0_0; }
		
		//('[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' |
		//'{' ownedMembership+=ClassMember* '}') | '{' ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression
		//'..')? upper=UnlimitedNaturalLiteralExpression ']' ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' |
		//'{' ownedMembership+=ClassMember* '}') | '{' ownedMembership+=ClassMember* '}')
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//('[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']')?
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0_0_0() { return cLeftSquareBracketKeyword_1_0_0_0; }
		
		//(lower=NaturalLiteralExpression '..')?
		public Group getGroup_1_0_0_1() { return cGroup_1_0_0_1; }
		
		//lower=NaturalLiteralExpression
		public Assignment getLowerAssignment_1_0_0_1_0() { return cLowerAssignment_1_0_0_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getLowerNaturalLiteralExpressionParserRuleCall_1_0_0_1_0_0() { return cLowerNaturalLiteralExpressionParserRuleCall_1_0_0_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_0_0_1_1() { return cFullStopFullStopKeyword_1_0_0_1_1; }
		
		//upper=UnlimitedNaturalLiteralExpression
		public Assignment getUpperAssignment_1_0_0_2() { return cUpperAssignment_1_0_0_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_0_0_2_0() { return cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_0_0_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_0_0_3() { return cRightSquareBracketKeyword_1_0_0_3; }
		
		//'=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') | '{' ownedMembership+=ClassMember* '}'
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }
		
		//'=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}')
		public Group getGroup_1_0_1_0() { return cGroup_1_0_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_0_1_0_0() { return cEqualsSignKeyword_1_0_1_0_0; }
		
		//value=Expression
		public Assignment getValueAssignment_1_0_1_0_1() { return cValueAssignment_1_0_1_0_1; }
		
		//Expression
		public RuleCall getValueExpressionParserRuleCall_1_0_1_0_1_0() { return cValueExpressionParserRuleCall_1_0_1_0_1_0; }
		
		//';' | '{' ownedMembership+=ClassMember* '}'
		public Alternatives getAlternatives_1_0_1_0_2() { return cAlternatives_1_0_1_0_2; }
		
		//';'
		public Keyword getSemicolonKeyword_1_0_1_0_2_0() { return cSemicolonKeyword_1_0_1_0_2_0; }
		
		//'{' ownedMembership+=ClassMember* '}'
		public Group getGroup_1_0_1_0_2_1() { return cGroup_1_0_1_0_2_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0_1_0_2_1_0() { return cLeftCurlyBracketKeyword_1_0_1_0_2_1_0; }
		
		//ownedMembership+=ClassMember*
		public Assignment getOwnedMembershipAssignment_1_0_1_0_2_1_1() { return cOwnedMembershipAssignment_1_0_1_0_2_1_1; }
		
		//ClassMember
		public RuleCall getOwnedMembershipClassMemberParserRuleCall_1_0_1_0_2_1_1_0() { return cOwnedMembershipClassMemberParserRuleCall_1_0_1_0_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_0_1_0_2_1_2() { return cRightCurlyBracketKeyword_1_0_1_0_2_1_2; }
		
		//'{' ownedMembership+=ClassMember* '}'
		public Group getGroup_1_0_1_1() { return cGroup_1_0_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0_1_1_0() { return cLeftCurlyBracketKeyword_1_0_1_1_0; }
		
		//ownedMembership+=ClassMember*
		public Assignment getOwnedMembershipAssignment_1_0_1_1_1() { return cOwnedMembershipAssignment_1_0_1_1_1; }
		
		//ClassMember
		public RuleCall getOwnedMembershipClassMemberParserRuleCall_1_0_1_1_1_0() { return cOwnedMembershipClassMemberParserRuleCall_1_0_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_0_1_1_2() { return cRightCurlyBracketKeyword_1_0_1_1_2; }
		
		//'[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']' ';'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_1_0() { return cLeftSquareBracketKeyword_1_1_0; }
		
		//(lower=NaturalLiteralExpression '..')?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//lower=NaturalLiteralExpression
		public Assignment getLowerAssignment_1_1_1_0() { return cLowerAssignment_1_1_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getLowerNaturalLiteralExpressionParserRuleCall_1_1_1_0_0() { return cLowerNaturalLiteralExpressionParserRuleCall_1_1_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1_1_1() { return cFullStopFullStopKeyword_1_1_1_1; }
		
		//upper=UnlimitedNaturalLiteralExpression
		public Assignment getUpperAssignment_1_1_2() { return cUpperAssignment_1_1_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_2_0() { return cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_1_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_1_3() { return cRightSquareBracketKeyword_1_1_3; }
		
		//';'
		public Keyword getSemicolonKeyword_1_1_4() { return cSemicolonKeyword_1_1_4; }
	}
	public class OwnedRedefinitionOrSubsetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.OwnedRedefinitionOrSubset");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cIsKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Keyword cRedefinesKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Assignment cOwnedMemberElementAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedMemberElementRedefinitionParserRuleCall_0_1_0 = (RuleCall)cOwnedMemberElementAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSubsetsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedMemberElementSubsetParserRuleCall_1_1_0 = (RuleCall)cOwnedMemberElementAssignment_1_1.eContents().get(0);
		
		//OwnedRedefinitionOrSubset SysML::Membership:
		//	('is' | 'redefines') ownedMemberElement=Redefinition
		//	| 'subsets' ownedMemberElement=Subset;
		@Override public ParserRule getRule() { return rule; }
		
		//('is' | 'redefines') ownedMemberElement=Redefinition | 'subsets' ownedMemberElement=Subset
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('is' | 'redefines') ownedMemberElement=Redefinition
		public Group getGroup_0() { return cGroup_0; }
		
		//'is' | 'redefines'
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }
		
		//'is'
		public Keyword getIsKeyword_0_0_0() { return cIsKeyword_0_0_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0_0_1() { return cRedefinesKeyword_0_0_1; }
		
		//ownedMemberElement=Redefinition
		public Assignment getOwnedMemberElementAssignment_0_1() { return cOwnedMemberElementAssignment_0_1; }
		
		//Redefinition
		public RuleCall getOwnedMemberElementRedefinitionParserRuleCall_0_1_0() { return cOwnedMemberElementRedefinitionParserRuleCall_0_1_0; }
		
		//'subsets' ownedMemberElement=Subset
		public Group getGroup_1() { return cGroup_1; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_1_0() { return cSubsetsKeyword_1_0; }
		
		//ownedMemberElement=Subset
		public Assignment getOwnedMemberElementAssignment_1_1() { return cOwnedMemberElementAssignment_1_1; }
		
		//Subset
		public RuleCall getOwnedMemberElementSubsetParserRuleCall_1_1_0() { return cOwnedMemberElementSubsetParserRuleCall_1_1_0; }
	}
	public class RedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Redefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Redefinition SysML::Redefinition:
		//	redefinedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature=[SysML::Feature|QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class SubsetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Subset");
		private final Assignment cSubsettedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0 = (CrossReference)cSubsettedFeatureAssignment.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Subset SysML::Subset:
		//	subsettedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//subsettedFeature=[SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment() { return cSubsettedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0() { return cSubsettedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class ConnectorDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cColonKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cAssociationAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final CrossReference cAssociationAssociationCrossReference_0_1_1_0 = (CrossReference)cAssociationAssignment_0_1_1.eContents().get(0);
		private final RuleCall cAssociationAssociationQualifiedNameParserRuleCall_0_1_1_0_1 = (RuleCall)cAssociationAssociationCrossReference_0_1_1_0.eContents().get(1);
		private final Keyword cIsKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cSourceFeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSourceFeatureFeatureCrossReference_1_0 = (CrossReference)cSourceFeatureAssignment_1.eContents().get(0);
		private final RuleCall cSourceFeatureFeatureQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cSourceFeatureFeatureCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetFeatureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTargetFeatureFeatureCrossReference_3_0 = (CrossReference)cTargetFeatureAssignment_3.eContents().get(0);
		private final RuleCall cTargetFeatureFeatureQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cTargetFeatureFeatureCrossReference_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ConnectorDefinition SysML::Connector:
		//	(name=Name? (':' association=[SysML::Association|QualifiedName])? 'is')?
		//	sourceFeature=[SysML::Feature|QualifiedName] '=>'
		//	targetFeature=[SysML::Feature|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? (':' association=[SysML::Association|QualifiedName])? 'is')? sourceFeature=[SysML::Feature|QualifiedName]
		//'=>' targetFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup() { return cGroup; }
		
		//(name=Name? (':' association=[SysML::Association|QualifiedName])? 'is')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//(':' association=[SysML::Association|QualifiedName])?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//':'
		public Keyword getColonKeyword_0_1_0() { return cColonKeyword_0_1_0; }
		
		//association=[SysML::Association|QualifiedName]
		public Assignment getAssociationAssignment_0_1_1() { return cAssociationAssignment_0_1_1; }
		
		//[SysML::Association|QualifiedName]
		public CrossReference getAssociationAssociationCrossReference_0_1_1_0() { return cAssociationAssociationCrossReference_0_1_1_0; }
		
		//QualifiedName
		public RuleCall getAssociationAssociationQualifiedNameParserRuleCall_0_1_1_0_1() { return cAssociationAssociationQualifiedNameParserRuleCall_0_1_1_0_1; }
		
		//'is'
		public Keyword getIsKeyword_0_2() { return cIsKeyword_0_2; }
		
		//sourceFeature=[SysML::Feature|QualifiedName]
		public Assignment getSourceFeatureAssignment_1() { return cSourceFeatureAssignment_1; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSourceFeatureFeatureCrossReference_1_0() { return cSourceFeatureFeatureCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getSourceFeatureFeatureQualifiedNameParserRuleCall_1_0_1() { return cSourceFeatureFeatureQualifiedNameParserRuleCall_1_0_1; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_2() { return cEqualsSignGreaterThanSignKeyword_2; }
		
		//targetFeature=[SysML::Feature|QualifiedName]
		public Assignment getTargetFeatureAssignment_3() { return cTargetFeatureAssignment_3; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getTargetFeatureFeatureCrossReference_3_0() { return cTargetFeatureFeatureCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getTargetFeatureFeatureQualifiedNameParserRuleCall_3_0_1() { return cTargetFeatureFeatureQualifiedNameParserRuleCall_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Expression");
		private final RuleCall cBinaryExpressionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* EXPRESSIONS */ Expression SysML::Expression:
		//	BinaryExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//BinaryExpression
		public RuleCall getBinaryExpressionParserRuleCall() { return cBinaryExpressionParserRuleCall; }
	}
	public class BinaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cAlternatives_1_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1_0_0 = (Assignment)cGroup_1_1_0.eContents().get(0);
		private final RuleCall cOperatorBinaryOperatorParserRuleCall_1_1_0_0_0 = (RuleCall)cOperatorAssignment_1_1_0_0.eContents().get(0);
		private final Assignment cOperandAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final RuleCall cOperandExpressionParserRuleCall_1_1_0_1_0 = (RuleCall)cOperandAssignment_1_1_0_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Assignment cOperatorAssignment_1_1_1_0 = (Assignment)cGroup_1_1_1.eContents().get(0);
		private final Keyword cOperatorCommercialAtKeyword_1_1_1_0_0 = (Keyword)cOperatorAssignment_1_1_1_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_1_1_1 = (Keyword)cGroup_1_1_1.eContents().get(1);
		private final Assignment cOperandAssignment_1_1_1_2 = (Assignment)cGroup_1_1_1.eContents().get(2);
		private final RuleCall cOperandExpressionParserRuleCall_1_1_1_2_0 = (RuleCall)cOperandAssignment_1_1_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_1_3 = (Keyword)cGroup_1_1_1.eContents().get(3);
		
		//BinaryExpression SysML::Expression:
		//	UnaryExpression ({SysML::OperatorExpression.operand+=current} (operator=BinaryOperator operand+=Expression |
		//	operator='@' '[' operand+=Expression ']'))?;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryExpression ({SysML::OperatorExpression.operand+=current} (operator=BinaryOperator operand+=Expression |
		//operator='@' '[' operand+=Expression ']'))?
		public Group getGroup() { return cGroup; }
		
		//UnaryExpression
		public RuleCall getUnaryExpressionParserRuleCall_0() { return cUnaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} (operator=BinaryOperator operand+=Expression | operator='@' '['
		//operand+=Expression ']'))?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=BinaryOperator operand+=Expression | operator='@' '[' operand+=Expression ']'
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//operator=BinaryOperator operand+=Expression
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//operator=BinaryOperator
		public Assignment getOperatorAssignment_1_1_0_0() { return cOperatorAssignment_1_1_0_0; }
		
		//BinaryOperator
		public RuleCall getOperatorBinaryOperatorParserRuleCall_1_1_0_0_0() { return cOperatorBinaryOperatorParserRuleCall_1_1_0_0_0; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_1_0_1() { return cOperandAssignment_1_1_0_1; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_1_0_1_0() { return cOperandExpressionParserRuleCall_1_1_0_1_0; }
		
		//operator='@' '[' operand+=Expression ']'
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//operator='@'
		public Assignment getOperatorAssignment_1_1_1_0() { return cOperatorAssignment_1_1_1_0; }
		
		//'@'
		public Keyword getOperatorCommercialAtKeyword_1_1_1_0_0() { return cOperatorCommercialAtKeyword_1_1_1_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_1_1_1() { return cLeftSquareBracketKeyword_1_1_1_1; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_1_1_2() { return cOperandAssignment_1_1_1_2; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_1_1_2_0() { return cOperandExpressionParserRuleCall_1_1_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_1_1_3() { return cRightSquareBracketKeyword_1_1_1_3; }
	}
	public class BinaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cSolidusKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cCircumflexAccentKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//BinaryOperator:
		//	'+' | '-' | '*' | '/' | '^';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '*' | '/' | '^'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
		
		//'/'
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }
		
		//'^'
		public Keyword getCircumflexAccentKeyword_4() { return cCircumflexAccentKeyword_4; }
	}
	public class UnaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSequenceAccessExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cOperatorExpressionAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorUnaryOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandSequenceAccessExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//UnaryExpression SysML::Expression:
		//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SequenceAccessExpression
		public RuleCall getSequenceAccessExpressionParserRuleCall_0() { return cSequenceAccessExpressionParserRuleCall_0; }
		
		//{SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression}
		public Action getOperatorExpressionAction_1_0() { return cOperatorExpressionAction_1_0; }
		
		//operator=UnaryOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//UnaryOperator
		public RuleCall getOperatorUnaryOperatorParserRuleCall_1_1_0() { return cOperatorUnaryOperatorParserRuleCall_1_1_0; }
		
		//operand+=SequenceAccessExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//SequenceAccessExpression
		public RuleCall getOperandSequenceAccessExpressionParserRuleCall_1_2_0() { return cOperandSequenceAccessExpressionParserRuleCall_1_2_0; }
	}
	public class UnaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//UnaryOperator:
		//	'+' | '-';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
	}
	public class SequenceAccessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceAccessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cSequenceAccessExpressionPrimaryAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cIndexAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cIndexExpressionParserRuleCall_1_2_0 = (RuleCall)cIndexAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//SequenceAccessExpression SysML::Expression:
		//	PrimaryExpression ({SysML::SequenceAccessExpression.primary=current} '[' index=Expression ']')*;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimaryExpression ({SysML::SequenceAccessExpression.primary=current} '[' index=Expression ']')*
		public Group getGroup() { return cGroup; }
		
		//PrimaryExpression
		public RuleCall getPrimaryExpressionParserRuleCall_0() { return cPrimaryExpressionParserRuleCall_0; }
		
		//({SysML::SequenceAccessExpression.primary=current} '[' index=Expression ']')*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::SequenceAccessExpression.primary=current}
		public Action getSequenceAccessExpressionPrimaryAction_1_0() { return cSequenceAccessExpressionPrimaryAction_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_1() { return cLeftSquareBracketKeyword_1_1; }
		
		//index=Expression
		public Assignment getIndexAssignment_1_2() { return cIndexAssignment_1_2; }
		
		//Expression
		public RuleCall getIndexExpressionParserRuleCall_1_2_0() { return cIndexExpressionParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
	}
	public class PrimaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PrimaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementReferenceExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInstanceCreationExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSequenceConstructionExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//PrimaryExpression SysML::Expression:
		//	LiteralExpression
		//	| ElementReferenceExpression
		//	| InstanceCreationExpression
		//	| SequenceConstructionExpression
		//	| '(' Expression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//LiteralExpression | ElementReferenceExpression | InstanceCreationExpression | SequenceConstructionExpression | '('
		//Expression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LiteralExpression
		public RuleCall getLiteralExpressionParserRuleCall_0() { return cLiteralExpressionParserRuleCall_0; }
		
		//ElementReferenceExpression
		public RuleCall getElementReferenceExpressionParserRuleCall_1() { return cElementReferenceExpressionParserRuleCall_1; }
		
		//InstanceCreationExpression
		public RuleCall getInstanceCreationExpressionParserRuleCall_2() { return cInstanceCreationExpressionParserRuleCall_2; }
		
		//SequenceConstructionExpression
		public RuleCall getSequenceConstructionExpressionParserRuleCall_3() { return cSequenceConstructionExpressionParserRuleCall_3; }
		
		//'(' Expression ')'
		public Group getGroup_4() { return cGroup_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_4_1() { return cExpressionParserRuleCall_4_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
	}
	public class ElementReferenceExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ElementReferenceExpression");
		private final Assignment cReferentAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cReferentElementCrossReference_0 = (CrossReference)cReferentAssignment.eContents().get(0);
		private final RuleCall cReferentElementQualifiedNameParserRuleCall_0_1 = (RuleCall)cReferentElementCrossReference_0.eContents().get(1);
		
		//ElementReferenceExpression SysML::ElementReferenceExpression:
		//	referent=[SysML::Element|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//referent=[SysML::Element|QualifiedName]
		public Assignment getReferentAssignment() { return cReferentAssignment; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getReferentElementCrossReference_0() { return cReferentElementCrossReference_0; }
		
		//QualifiedName
		public RuleCall getReferentElementQualifiedNameParserRuleCall_0_1() { return cReferentElementQualifiedNameParserRuleCall_0_1; }
	}
	public class InstanceCreationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.InstanceCreationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cClassAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cClassClassCrossReference_0_0 = (CrossReference)cClassAssignment_0.eContents().get(0);
		private final RuleCall cClassClassQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cClassClassCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cArgumentAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cArgumentExpressionParserRuleCall_2_0_0 = (RuleCall)cArgumentAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cArgumentAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cArgumentExpressionParserRuleCall_2_1_1_0 = (RuleCall)cArgumentAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InstanceCreationExpression SysML::InstanceCreationExpression:
		//	class=[SysML::Class|QualifiedName] '(' (argument+=Expression (',' argument+=Expression)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//class=[SysML::Class|QualifiedName] '(' (argument+=Expression (',' argument+=Expression)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//class=[SysML::Class|QualifiedName]
		public Assignment getClassAssignment_0() { return cClassAssignment_0; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getClassClassCrossReference_0_0() { return cClassClassCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getClassClassQualifiedNameParserRuleCall_0_0_1() { return cClassClassQualifiedNameParserRuleCall_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(argument+=Expression (',' argument+=Expression)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//argument+=Expression
		public Assignment getArgumentAssignment_2_0() { return cArgumentAssignment_2_0; }
		
		//Expression
		public RuleCall getArgumentExpressionParserRuleCall_2_0_0() { return cArgumentExpressionParserRuleCall_2_0_0; }
		
		//(',' argument+=Expression)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//argument+=Expression
		public Assignment getArgumentAssignment_2_1_1() { return cArgumentAssignment_2_1_1; }
		
		//Expression
		public RuleCall getArgumentExpressionParserRuleCall_2_1_1_0() { return cArgumentExpressionParserRuleCall_2_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class SequenceConstructionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceConstructionExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceConstructionExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cElementAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cElementExpressionParserRuleCall_2_0_0 = (RuleCall)cElementAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cElementAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cElementExpressionParserRuleCall_2_1_1_0 = (RuleCall)cElementAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SequenceConstructionExpression SysML::SequenceConstructionExpression:
		//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{SysML::SequenceConstructionExpression}
		public Action getSequenceConstructionExpressionAction_0() { return cSequenceConstructionExpressionAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(element+=Expression (',' element+=Expression)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_0() { return cElementAssignment_2_0; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_0_0() { return cElementExpressionParserRuleCall_2_0_0; }
		
		//(',' element+=Expression)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_1_1() { return cElementAssignment_2_1_1; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_1_1_0() { return cElementExpressionParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class LiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.LiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNullLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStringLiteralExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRealLiteralExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cUnlimitedNaturalLiteralExpressionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//LiteralExpression SysML::Expression:
		//	NullLiteralExpression | BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression |
		//	UnlimitedNaturalLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//NullLiteralExpression | BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression |
		//UnlimitedNaturalLiteralExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NullLiteralExpression
		public RuleCall getNullLiteralExpressionParserRuleCall_0() { return cNullLiteralExpressionParserRuleCall_0; }
		
		//BooleanLiteralExpression
		public RuleCall getBooleanLiteralExpressionParserRuleCall_1() { return cBooleanLiteralExpressionParserRuleCall_1; }
		
		//StringLiteralExpression
		public RuleCall getStringLiteralExpressionParserRuleCall_2() { return cStringLiteralExpressionParserRuleCall_2; }
		
		//RealLiteralExpression
		public RuleCall getRealLiteralExpressionParserRuleCall_3() { return cRealLiteralExpressionParserRuleCall_3; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUnlimitedNaturalLiteralExpressionParserRuleCall_4() { return cUnlimitedNaturalLiteralExpressionParserRuleCall_4; }
	}
	public class NullLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NullLiteralExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralNullAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NullLiteralExpression SysML::LiteralNull:
		//	{SysML::LiteralNull} 'null';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LiteralNull} 'null'
		public Group getGroup() { return cGroup; }
		
		//{SysML::LiteralNull}
		public Action getLiteralNullAction_0() { return cLiteralNullAction_0; }
		
		//'null'
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}
	public class BooleanLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BooleanLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEAN_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanLiteralExpression SysML::LiteralBoolean:
		//	value=BOOLEAN_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN_VALUE
		public RuleCall getValueBOOLEAN_VALUETerminalRuleCall_0() { return cValueBOOLEAN_VALUETerminalRuleCall_0; }
	}
	public class StringLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StringLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteralExpression SysML::LiteralString:
		//	value=STRING_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_0() { return cValueSTRING_VALUETerminalRuleCall_0; }
	}
	public class RealLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RealLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueRealValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//RealLiteralExpression SysML::LiteralReal:
		//	value=RealValue;
		@Override public ParserRule getRule() { return rule; }
		
		//value=RealValue
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//RealValue
		public RuleCall getValueRealValueParserRuleCall_0() { return cValueRealValueParserRuleCall_0; }
	}
	public class RealValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RealValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_0_0 = (RuleCall)cGroup_0_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_0_1 = (Keyword)cGroup_0_0.eContents().get(1);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_0_2 = (RuleCall)cGroup_0_0.eContents().get(2);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cEKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Keyword cEKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Keyword cPlusSignKeyword_1_1_0 = (Keyword)cAlternatives_1_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1_1_1 = (Keyword)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//RealValue Ecore::EDouble:
		//	(NATURAL_VALUE '.' NATURAL_VALUE? | '.' NATURAL_VALUE) (('e' | 'E') ('+' | '-')? NATURAL_VALUE)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(NATURAL_VALUE '.' NATURAL_VALUE? | '.' NATURAL_VALUE) (('e' | 'E') ('+' | '-')? NATURAL_VALUE)?
		public Group getGroup() { return cGroup; }
		
		//NATURAL_VALUE '.' NATURAL_VALUE? | '.' NATURAL_VALUE
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//NATURAL_VALUE '.' NATURAL_VALUE?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//NATURAL_VALUE
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_0_0() { return cNATURAL_VALUETerminalRuleCall_0_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_0_1() { return cFullStopKeyword_0_0_1; }
		
		//NATURAL_VALUE?
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_0_2() { return cNATURAL_VALUETerminalRuleCall_0_0_2; }
		
		//'.' NATURAL_VALUE
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1_0() { return cFullStopKeyword_0_1_0; }
		
		//NATURAL_VALUE
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_1_1() { return cNATURAL_VALUETerminalRuleCall_0_1_1; }
		
		//(('e' | 'E') ('+' | '-')? NATURAL_VALUE)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'e' | 'E'
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'e'
		public Keyword getEKeyword_1_0_0() { return cEKeyword_1_0_0; }
		
		//'E'
		public Keyword getEKeyword_1_0_1() { return cEKeyword_1_0_1; }
		
		//('+' | '-')?
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//'+'
		public Keyword getPlusSignKeyword_1_1_0() { return cPlusSignKeyword_1_1_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_1_1() { return cHyphenMinusKeyword_1_1_1; }
		
		//NATURAL_VALUE
		public RuleCall getNATURAL_VALUETerminalRuleCall_1_2() { return cNATURAL_VALUETerminalRuleCall_1_2; }
	}
	public class NaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NaturalLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNATURAL_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NaturalLiteralExpression SysML::LiteralInteger:
		//	value=NATURAL_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NATURAL_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NATURAL_VALUE
		public RuleCall getValueNATURAL_VALUETerminalRuleCall_0() { return cValueNATURAL_VALUETerminalRuleCall_0; }
	}
	public class UnlimitedNaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnlimitedNaturalLiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNaturalLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cLiteralUnboundedAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//UnlimitedNaturalLiteralExpression SysML::Expression:
		//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
		@Override public ParserRule getRule() { return rule; }
		
		//NaturalLiteralExpression | {SysML::LiteralUnbounded} '*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NaturalLiteralExpression
		public RuleCall getNaturalLiteralExpressionParserRuleCall_0() { return cNaturalLiteralExpressionParserRuleCall_0; }
		
		//{SysML::LiteralUnbounded} '*'
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::LiteralUnbounded}
		public Action getLiteralUnboundedAction_1_0() { return cLiteralUnboundedAction_1_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Name");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNRESTRICTED_NAMETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///***************
		//* NAMES        *
		//***************/ Name:
		//	ID | UNRESTRICTED_NAME;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | UNRESTRICTED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//UNRESTRICTED_NAME
		public RuleCall getUNRESTRICTED_NAMETerminalRuleCall_1() { return cUNRESTRICTED_NAMETerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cFullStopKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Keyword cColonColonKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	Name (('.' | '::') Name)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Name (('.' | '::') Name)*
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//(('.' | '::') Name)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.' | '::'
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0_0() { return cFullStopKeyword_1_0_0; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0_1() { return cColonColonKeyword_1_0_1; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	
	public class VisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPackageEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPackagePackagedKeyword_3_0 = (Keyword)cPackageEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind:
		//	public | private | protected | package='packaged';
		public EnumRule getRule() { return rule; }
		
		//public | private | protected | package='packaged'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
		
		//package='packaged'
		public EnumLiteralDeclaration getPackageEnumLiteralDeclaration_3() { return cPackageEnumLiteralDeclaration_3; }
		
		//'packaged'
		public Keyword getPackagePackagedKeyword_3_0() { return cPackagePackagedKeyword_3_0; }
	}
	public class FeatureDirectionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//	in | out | inout;
		public EnumRule getRule() { return rule; }
		
		//in | out | inout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	
	private final UnitDefinitionElements pUnitDefinition;
	private final CommentedUnitDefinitionElements pCommentedUnitDefinition;
	private final UnitMemberElements pUnitMember;
	private final UnCommentedUnitDefinitionElements pUnCommentedUnitDefinition;
	private final CommentElements pComment;
	private final PackageDefinitionElements pPackageDefinition;
	private final PackageDefinitionOrStubElements pPackageDefinitionOrStub;
	private final PackageMemberElements pPackageMember;
	private final NonFeatureMemberElements pNonFeatureMember;
	private final CommentMemberElements pCommentMember;
	private final NonCommentNonFeatureMemberElements pNonCommentNonFeatureMember;
	private final NonFeatureMemberKindElements pNonFeatureMemberKind;
	private final PackagedFeatureMemberElements pPackagedFeatureMember;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final NonFeatureDefinitionElements pNonFeatureDefinition;
	private final ClassifierDefinitionOrStubElements pClassifierDefinitionOrStub;
	private final ClassDeclarationElements pClassDeclaration;
	private final OwnedGeneralizationElements pOwnedGeneralization;
	private final GeneralizationElements pGeneralization;
	private final ClassDefinitionElements pClassDefinition;
	private final ClassDefinitionOrStubElements pClassDefinitionOrStub;
	private final ClassMemberElements pClassMember;
	private final ClassFeatureMemberElements pClassFeatureMember;
	private final FeatureDirectionElements eFeatureDirection;
	private final AssociationDeclarationElements pAssociationDeclaration;
	private final AssociationDefinitionElements pAssociationDefinition;
	private final AssociationMemberElements pAssociationMember;
	private final AssociationDefinitionOrStubElements pAssociationDefinitionOrStub;
	private final AssociationFeatureMemberElements pAssociationFeatureMember;
	private final EndFeatureMemberElements pEndFeatureMember;
	private final FeatureDefinitionElements pFeatureDefinition;
	private final NamedFeatureDefinitionElements pNamedFeatureDefinition;
	private final UnnamedFeatureDefinitionElements pUnnamedFeatureDefinition;
	private final OwnedRedefinitionOrSubsetElements pOwnedRedefinitionOrSubset;
	private final RedefinitionElements pRedefinition;
	private final SubsetElements pSubset;
	private final ConnectorDefinitionElements pConnectorDefinition;
	private final ExpressionElements pExpression;
	private final BinaryExpressionElements pBinaryExpression;
	private final BinaryOperatorElements pBinaryOperator;
	private final UnaryExpressionElements pUnaryExpression;
	private final UnaryOperatorElements pUnaryOperator;
	private final SequenceAccessExpressionElements pSequenceAccessExpression;
	private final PrimaryExpressionElements pPrimaryExpression;
	private final ElementReferenceExpressionElements pElementReferenceExpression;
	private final InstanceCreationExpressionElements pInstanceCreationExpression;
	private final SequenceConstructionExpressionElements pSequenceConstructionExpression;
	private final LiteralExpressionElements pLiteralExpression;
	private final NullLiteralExpressionElements pNullLiteralExpression;
	private final BooleanLiteralExpressionElements pBooleanLiteralExpression;
	private final StringLiteralExpressionElements pStringLiteralExpression;
	private final RealLiteralExpressionElements pRealLiteralExpression;
	private final RealValueElements pRealValue;
	private final NaturalLiteralExpressionElements pNaturalLiteralExpression;
	private final UnlimitedNaturalLiteralExpressionElements pUnlimitedNaturalLiteralExpression;
	private final NameElements pName;
	private final QualifiedNameElements pQualifiedName;
	private final TerminalRule tBOOLEAN_VALUE;
	private final TerminalRule tNATURAL_VALUE;
	private final TerminalRule tID;
	private final TerminalRule tUNRESTRICTED_NAME;
	private final TerminalRule tSTRING_VALUE;
	private final TerminalRule tDOCUMENTATION_COMMENT;
	private final TerminalRule tSTATEMENT_ANNOTATION;
	private final TerminalRule tINLINE_STATEMENT;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public AlfGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pUnitDefinition = new UnitDefinitionElements();
		this.pCommentedUnitDefinition = new CommentedUnitDefinitionElements();
		this.pUnitMember = new UnitMemberElements();
		this.pUnCommentedUnitDefinition = new UnCommentedUnitDefinitionElements();
		this.pComment = new CommentElements();
		this.pPackageDefinition = new PackageDefinitionElements();
		this.pPackageDefinitionOrStub = new PackageDefinitionOrStubElements();
		this.pPackageMember = new PackageMemberElements();
		this.pNonFeatureMember = new NonFeatureMemberElements();
		this.pCommentMember = new CommentMemberElements();
		this.pNonCommentNonFeatureMember = new NonCommentNonFeatureMemberElements();
		this.pNonFeatureMemberKind = new NonFeatureMemberKindElements();
		this.pPackagedFeatureMember = new PackagedFeatureMemberElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.pNonFeatureDefinition = new NonFeatureDefinitionElements();
		this.pClassifierDefinitionOrStub = new ClassifierDefinitionOrStubElements();
		this.pClassDeclaration = new ClassDeclarationElements();
		this.pOwnedGeneralization = new OwnedGeneralizationElements();
		this.pGeneralization = new GeneralizationElements();
		this.pClassDefinition = new ClassDefinitionElements();
		this.pClassDefinitionOrStub = new ClassDefinitionOrStubElements();
		this.pClassMember = new ClassMemberElements();
		this.pClassFeatureMember = new ClassFeatureMemberElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pAssociationDeclaration = new AssociationDeclarationElements();
		this.pAssociationDefinition = new AssociationDefinitionElements();
		this.pAssociationMember = new AssociationMemberElements();
		this.pAssociationDefinitionOrStub = new AssociationDefinitionOrStubElements();
		this.pAssociationFeatureMember = new AssociationFeatureMemberElements();
		this.pEndFeatureMember = new EndFeatureMemberElements();
		this.pFeatureDefinition = new FeatureDefinitionElements();
		this.pNamedFeatureDefinition = new NamedFeatureDefinitionElements();
		this.pUnnamedFeatureDefinition = new UnnamedFeatureDefinitionElements();
		this.pOwnedRedefinitionOrSubset = new OwnedRedefinitionOrSubsetElements();
		this.pRedefinition = new RedefinitionElements();
		this.pSubset = new SubsetElements();
		this.pConnectorDefinition = new ConnectorDefinitionElements();
		this.pExpression = new ExpressionElements();
		this.pBinaryExpression = new BinaryExpressionElements();
		this.pBinaryOperator = new BinaryOperatorElements();
		this.pUnaryExpression = new UnaryExpressionElements();
		this.pUnaryOperator = new UnaryOperatorElements();
		this.pSequenceAccessExpression = new SequenceAccessExpressionElements();
		this.pPrimaryExpression = new PrimaryExpressionElements();
		this.pElementReferenceExpression = new ElementReferenceExpressionElements();
		this.pInstanceCreationExpression = new InstanceCreationExpressionElements();
		this.pSequenceConstructionExpression = new SequenceConstructionExpressionElements();
		this.pLiteralExpression = new LiteralExpressionElements();
		this.pNullLiteralExpression = new NullLiteralExpressionElements();
		this.pBooleanLiteralExpression = new BooleanLiteralExpressionElements();
		this.pStringLiteralExpression = new StringLiteralExpressionElements();
		this.pRealLiteralExpression = new RealLiteralExpressionElements();
		this.pRealValue = new RealValueElements();
		this.pNaturalLiteralExpression = new NaturalLiteralExpressionElements();
		this.pUnlimitedNaturalLiteralExpression = new UnlimitedNaturalLiteralExpressionElements();
		this.pName = new NameElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.tBOOLEAN_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BOOLEAN_VALUE");
		this.tNATURAL_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NATURAL_VALUE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ID");
		this.tUNRESTRICTED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UNRESTRICTED_NAME");
		this.tSTRING_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.STRING_VALUE");
		this.tDOCUMENTATION_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.DOCUMENTATION_COMMENT");
		this.tSTATEMENT_ANNOTATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.STATEMENT_ANNOTATION");
		this.tINLINE_STATEMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.INLINE_STATEMENT");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.Alf".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	///* UNITS */ UnitDefinition SysML::Package:
	//	CommentedUnitDefinition | UnCommentedUnitDefinition;
	public UnitDefinitionElements getUnitDefinitionAccess() {
		return pUnitDefinition;
	}
	
	public ParserRule getUnitDefinitionRule() {
		return getUnitDefinitionAccess().getRule();
	}
	
	//CommentedUnitDefinition SysML::Package:
	//	ownedMembership+=CommentMember+
	//	ownedMembership+=UnitMember;
	public CommentedUnitDefinitionElements getCommentedUnitDefinitionAccess() {
		return pCommentedUnitDefinition;
	}
	
	public ParserRule getCommentedUnitDefinitionRule() {
		return getCommentedUnitDefinitionAccess().getRule();
	}
	
	//UnitMember SysML::Membership:
	//	ownedMemberElement=UnCommentedUnitDefinition;
	public UnitMemberElements getUnitMemberAccess() {
		return pUnitMember;
	}
	
	public ParserRule getUnitMemberRule() {
		return getUnitMemberAccess().getRule();
	}
	
	//UnCommentedUnitDefinition SysML::Package:
	//	PackageDefinition | ClassDefinition | NamedFeatureDefinition;
	public UnCommentedUnitDefinitionElements getUnCommentedUnitDefinitionAccess() {
		return pUnCommentedUnitDefinition;
	}
	
	public ParserRule getUnCommentedUnitDefinitionRule() {
		return getUnCommentedUnitDefinitionAccess().getRule();
	}
	
	///* COMMENTS */ Comment SysML::Comment:
	//	body=DOCUMENTATION_COMMENT;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	///* PACKAGES */ PackageDefinition SysML::Package:
	//	'package' name=Name '{' ownedMembership+=PackageMember* '}';
	public PackageDefinitionElements getPackageDefinitionAccess() {
		return pPackageDefinition;
	}
	
	public ParserRule getPackageDefinitionRule() {
		return getPackageDefinitionAccess().getRule();
	}
	
	//PackageDefinitionOrStub SysML::Package:
	//	PackageDefinition;
	public PackageDefinitionOrStubElements getPackageDefinitionOrStubAccess() {
		return pPackageDefinitionOrStub;
	}
	
	public ParserRule getPackageDefinitionOrStubRule() {
		return getPackageDefinitionOrStubAccess().getRule();
	}
	
	//PackageMember SysML::Membership:
	//	NonFeatureMember | PackagedFeatureMember;
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//NonFeatureMember SysML::Membership:
	//	CommentMember | NonCommentNonFeatureMember;
	public NonFeatureMemberElements getNonFeatureMemberAccess() {
		return pNonFeatureMember;
	}
	
	public ParserRule getNonFeatureMemberRule() {
		return getNonFeatureMemberAccess().getRule();
	}
	
	//CommentMember SysML::Membership:
	//	ownedMemberElement=Comment;
	public CommentMemberElements getCommentMemberAccess() {
		return pCommentMember;
	}
	
	public ParserRule getCommentMemberRule() {
		return getCommentMemberAccess().getRule();
	}
	
	//NonCommentNonFeatureMember SysML::Membership:
	//	visibility=VisibilityIndicator? (ownedMemberElement=NonFeatureDefinition
	//	| NonFeatureMemberKind memberName=Name? 'is' memberElement=[SysML::Element|QualifiedName] ';');
	public NonCommentNonFeatureMemberElements getNonCommentNonFeatureMemberAccess() {
		return pNonCommentNonFeatureMember;
	}
	
	public ParserRule getNonCommentNonFeatureMemberRule() {
		return getNonCommentNonFeatureMemberAccess().getRule();
	}
	
	//NonFeatureMemberKind:
	//	'package' | 'class' | 'assoc';
	public NonFeatureMemberKindElements getNonFeatureMemberKindAccess() {
		return pNonFeatureMemberKind;
	}
	
	public ParserRule getNonFeatureMemberKindRule() {
		return getNonFeatureMemberKindAccess().getRule();
	}
	
	//PackagedFeatureMember SysML::Membership:
	//	visibility=VisibilityIndicator? ('feature'? ownedMemberElement=NamedFeatureDefinition
	//	| 'feature' ownedMemberElement=UnnamedFeatureDefinition
	//	| ('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';');
	public PackagedFeatureMemberElements getPackagedFeatureMemberAccess() {
		return pPackagedFeatureMember;
	}
	
	public ParserRule getPackagedFeatureMemberRule() {
		return getPackagedFeatureMemberAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind:
	//	public | private | protected | package='packaged';
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	////enum ImportVisibilityIndicator returns groups::VisibilityKind:
	////	public = 'public' | private = 'private'
	////;
	//NonFeatureDefinition SysML::Element:
	//	PackageDefinitionOrStub | ClassifierDefinitionOrStub;
	public NonFeatureDefinitionElements getNonFeatureDefinitionAccess() {
		return pNonFeatureDefinition;
	}
	
	public ParserRule getNonFeatureDefinitionRule() {
		return getNonFeatureDefinitionAccess().getRule();
	}
	
	//ClassifierDefinitionOrStub SysML::Class:
	//	ClassDefinitionOrStub | AssociationDefinitionOrStub;
	public ClassifierDefinitionOrStubElements getClassifierDefinitionOrStubAccess() {
		return pClassifierDefinitionOrStub;
	}
	
	public ParserRule getClassifierDefinitionOrStubRule() {
		return getClassifierDefinitionOrStubAccess().getRule();
	}
	
	///* CLASSES */ ClassDeclaration SysML::Class:
	//	isAbstract?='abstract'? 'class' name=Name (('is' | 'specializes') ownedMembership+=OwnedGeneralization (','
	//	ownedMembership+=OwnedGeneralization)*)?;
	public ClassDeclarationElements getClassDeclarationAccess() {
		return pClassDeclaration;
	}
	
	public ParserRule getClassDeclarationRule() {
		return getClassDeclarationAccess().getRule();
	}
	
	//OwnedGeneralization SysML::Membership:
	//	ownedMemberElement=Generalization;
	public OwnedGeneralizationElements getOwnedGeneralizationAccess() {
		return pOwnedGeneralization;
	}
	
	public ParserRule getOwnedGeneralizationRule() {
		return getOwnedGeneralizationAccess().getRule();
	}
	
	//Generalization SysML::Generalization:
	//	general=[SysML::Class|QualifiedName];
	public GeneralizationElements getGeneralizationAccess() {
		return pGeneralization;
	}
	
	public ParserRule getGeneralizationRule() {
		return getGeneralizationAccess().getRule();
	}
	
	//ClassDefinition SysML::Class:
	//	ClassDeclaration '{' ownedMembership+=ClassMember* '}';
	public ClassDefinitionElements getClassDefinitionAccess() {
		return pClassDefinition;
	}
	
	public ParserRule getClassDefinitionRule() {
		return getClassDefinitionAccess().getRule();
	}
	
	//ClassDefinitionOrStub SysML::Class:
	//	ClassDefinition
	//	//	ClassDeclaration
	//	//	( isStub ?= ';' | '{' ( ownedMember += ClassMember )* '}' )
	//;
	public ClassDefinitionOrStubElements getClassDefinitionOrStubAccess() {
		return pClassDefinitionOrStub;
	}
	
	public ParserRule getClassDefinitionOrStubRule() {
		return getClassDefinitionOrStubAccess().getRule();
	}
	
	//ClassMember SysML::Membership:
	//	NonFeatureMember | ClassFeatureMember;
	public ClassMemberElements getClassMemberAccess() {
		return pClassMember;
	}
	
	public ParserRule getClassMemberRule() {
		return getClassMemberAccess().getRule();
	}
	
	//ClassFeatureMember SysML::FeatureMembership:
	//	visibility=VisibilityIndicator? (('feature' | isComposite?='part' | isPort?='port')? direction=FeatureDirection?
	//	ownedMemberElement=NamedFeatureDefinition
	//	| ('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection?
	//	ownedMemberElement=UnnamedFeatureDefinition
	//	| 'connector' ownedMemberElement=ConnectorDefinition
	//	| (('feature' | isComposite?='part') memberName=Name? | memberName=Name) 'is'
	//	memberElement=[SysML::Element|QualifiedName] ';');
	public ClassFeatureMemberElements getClassFeatureMemberAccess() {
		return pClassFeatureMember;
	}
	
	public ParserRule getClassFeatureMemberRule() {
		return getClassFeatureMemberAccess().getRule();
	}
	
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//	in | out | inout;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	///* ASSOCIATIONS */ AssociationDeclaration SysML::Association:
	//	isAbstract?='abstract'? 'assoc' name=Name (('is' | 'specializes') ownedMembership+=OwnedGeneralization (','
	//	ownedMembership+=OwnedGeneralization)*)?;
	public AssociationDeclarationElements getAssociationDeclarationAccess() {
		return pAssociationDeclaration;
	}
	
	public ParserRule getAssociationDeclarationRule() {
		return getAssociationDeclarationAccess().getRule();
	}
	
	//AssociationDefinition SysML::Association:
	//	AssociationDeclaration '{' ownedMembership+=AssociationMember* '}';
	public AssociationDefinitionElements getAssociationDefinitionAccess() {
		return pAssociationDefinition;
	}
	
	public ParserRule getAssociationDefinitionRule() {
		return getAssociationDefinitionAccess().getRule();
	}
	
	//AssociationMember SysML::Membership:
	//	NonFeatureMember | AssociationFeatureMember | EndFeatureMember;
	public AssociationMemberElements getAssociationMemberAccess() {
		return pAssociationMember;
	}
	
	public ParserRule getAssociationMemberRule() {
		return getAssociationMemberAccess().getRule();
	}
	
	//AssociationDefinitionOrStub SysML::Association:
	//	AssociationDefinition;
	public AssociationDefinitionOrStubElements getAssociationDefinitionOrStubAccess() {
		return pAssociationDefinitionOrStub;
	}
	
	public ParserRule getAssociationDefinitionOrStubRule() {
		return getAssociationDefinitionOrStubAccess().getRule();
	}
	
	//AssociationFeatureMember SysML::FeatureMembership:
	//	visibility=VisibilityIndicator? (('feature' | isComposite?='part' | isPort?='port') direction=FeatureDirection?
	//	ownedMemberElement=FeatureDefinition
	//	| 'connector' ownedMemberElement=ConnectorDefinition
	//	| ('feature' | isComposite?='part') memberName=Name? 'is' memberElement=[SysML::Element|QualifiedName] ';');
	public AssociationFeatureMemberElements getAssociationFeatureMemberAccess() {
		return pAssociationFeatureMember;
	}
	
	public ParserRule getAssociationFeatureMemberRule() {
		return getAssociationFeatureMemberAccess().getRule();
	}
	
	//EndFeatureMember SysML::EndFeatureMembership:
	//	visibility=VisibilityIndicator? ('end'? direction=FeatureDirection? ownedMemberElement=NamedFeatureDefinition
	//	| 'end' direction=FeatureDirection? ownedMemberElement=UnnamedFeatureDefinition
	//	| ('end' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Element|QualifiedName] ';');
	public EndFeatureMemberElements getEndFeatureMemberAccess() {
		return pEndFeatureMember;
	}
	
	public ParserRule getEndFeatureMemberRule() {
		return getEndFeatureMemberAccess().getRule();
	}
	
	///* FEATURES */ FeatureDefinition SysML::Feature:
	//	NamedFeatureDefinition | UnnamedFeatureDefinition;
	public FeatureDefinitionElements getFeatureDefinitionAccess() {
		return pFeatureDefinition;
	}
	
	public ParserRule getFeatureDefinitionRule() {
		return getFeatureDefinitionAccess().getRule();
	}
	
	//NamedFeatureDefinition SysML::Feature:
	//	name=Name ((':' isComposite?='composes'? (referencedType+=[SysML::Class|QualifiedName] | 'any')
	//	ownedMembership+=OwnedRedefinitionOrSubset?)? ('[' (lower=NaturalLiteralExpression '..')?
	//	upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression)? (';' | '{' ownedMembership+=ClassMember* '}') |
	//	ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
	//	upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') |
	//	'{' ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')?
	//	upper=UnlimitedNaturalLiteralExpression ']' ';'));
	public NamedFeatureDefinitionElements getNamedFeatureDefinitionAccess() {
		return pNamedFeatureDefinition;
	}
	
	public ParserRule getNamedFeatureDefinitionRule() {
		return getNamedFeatureDefinitionAccess().getRule();
	}
	
	//UnnamedFeatureDefinition SysML::Feature:
	//	ownedMembership+=OwnedRedefinitionOrSubset (('[' (lower=NaturalLiteralExpression '..')?
	//	upper=UnlimitedNaturalLiteralExpression ']')? ('=' value=Expression (';' | '{' ownedMembership+=ClassMember* '}') |
	//	'{' ownedMembership+=ClassMember* '}') | '[' (lower=NaturalLiteralExpression '..')?
	//	upper=UnlimitedNaturalLiteralExpression ']' ';');
	public UnnamedFeatureDefinitionElements getUnnamedFeatureDefinitionAccess() {
		return pUnnamedFeatureDefinition;
	}
	
	public ParserRule getUnnamedFeatureDefinitionRule() {
		return getUnnamedFeatureDefinitionAccess().getRule();
	}
	
	//OwnedRedefinitionOrSubset SysML::Membership:
	//	('is' | 'redefines') ownedMemberElement=Redefinition
	//	| 'subsets' ownedMemberElement=Subset;
	public OwnedRedefinitionOrSubsetElements getOwnedRedefinitionOrSubsetAccess() {
		return pOwnedRedefinitionOrSubset;
	}
	
	public ParserRule getOwnedRedefinitionOrSubsetRule() {
		return getOwnedRedefinitionOrSubsetAccess().getRule();
	}
	
	//Redefinition SysML::Redefinition:
	//	redefinedFeature=[SysML::Feature|QualifiedName];
	public RedefinitionElements getRedefinitionAccess() {
		return pRedefinition;
	}
	
	public ParserRule getRedefinitionRule() {
		return getRedefinitionAccess().getRule();
	}
	
	//Subset SysML::Subset:
	//	subsettedFeature=[SysML::Feature|QualifiedName];
	public SubsetElements getSubsetAccess() {
		return pSubset;
	}
	
	public ParserRule getSubsetRule() {
		return getSubsetAccess().getRule();
	}
	
	//ConnectorDefinition SysML::Connector:
	//	(name=Name? (':' association=[SysML::Association|QualifiedName])? 'is')?
	//	sourceFeature=[SysML::Feature|QualifiedName] '=>'
	//	targetFeature=[SysML::Feature|QualifiedName] ';';
	public ConnectorDefinitionElements getConnectorDefinitionAccess() {
		return pConnectorDefinition;
	}
	
	public ParserRule getConnectorDefinitionRule() {
		return getConnectorDefinitionAccess().getRule();
	}
	
	///* EXPRESSIONS */ Expression SysML::Expression:
	//	BinaryExpression;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//BinaryExpression SysML::Expression:
	//	UnaryExpression ({SysML::OperatorExpression.operand+=current} (operator=BinaryOperator operand+=Expression |
	//	operator='@' '[' operand+=Expression ']'))?;
	public BinaryExpressionElements getBinaryExpressionAccess() {
		return pBinaryExpression;
	}
	
	public ParserRule getBinaryExpressionRule() {
		return getBinaryExpressionAccess().getRule();
	}
	
	//BinaryOperator:
	//	'+' | '-' | '*' | '/' | '^';
	public BinaryOperatorElements getBinaryOperatorAccess() {
		return pBinaryOperator;
	}
	
	public ParserRule getBinaryOperatorRule() {
		return getBinaryOperatorAccess().getRule();
	}
	
	//UnaryExpression SysML::Expression:
	//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression;
	public UnaryExpressionElements getUnaryExpressionAccess() {
		return pUnaryExpression;
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperator:
	//	'+' | '-';
	public UnaryOperatorElements getUnaryOperatorAccess() {
		return pUnaryOperator;
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//SequenceAccessExpression SysML::Expression:
	//	PrimaryExpression ({SysML::SequenceAccessExpression.primary=current} '[' index=Expression ']')*;
	public SequenceAccessExpressionElements getSequenceAccessExpressionAccess() {
		return pSequenceAccessExpression;
	}
	
	public ParserRule getSequenceAccessExpressionRule() {
		return getSequenceAccessExpressionAccess().getRule();
	}
	
	//PrimaryExpression SysML::Expression:
	//	LiteralExpression
	//	| ElementReferenceExpression
	//	| InstanceCreationExpression
	//	| SequenceConstructionExpression
	//	| '(' Expression ')';
	public PrimaryExpressionElements getPrimaryExpressionAccess() {
		return pPrimaryExpression;
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	//ElementReferenceExpression SysML::ElementReferenceExpression:
	//	referent=[SysML::Element|QualifiedName];
	public ElementReferenceExpressionElements getElementReferenceExpressionAccess() {
		return pElementReferenceExpression;
	}
	
	public ParserRule getElementReferenceExpressionRule() {
		return getElementReferenceExpressionAccess().getRule();
	}
	
	//InstanceCreationExpression SysML::InstanceCreationExpression:
	//	class=[SysML::Class|QualifiedName] '(' (argument+=Expression (',' argument+=Expression)*)? ')';
	public InstanceCreationExpressionElements getInstanceCreationExpressionAccess() {
		return pInstanceCreationExpression;
	}
	
	public ParserRule getInstanceCreationExpressionRule() {
		return getInstanceCreationExpressionAccess().getRule();
	}
	
	//SequenceConstructionExpression SysML::SequenceConstructionExpression:
	//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
	public SequenceConstructionExpressionElements getSequenceConstructionExpressionAccess() {
		return pSequenceConstructionExpression;
	}
	
	public ParserRule getSequenceConstructionExpressionRule() {
		return getSequenceConstructionExpressionAccess().getRule();
	}
	
	//LiteralExpression SysML::Expression:
	//	NullLiteralExpression | BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression |
	//	UnlimitedNaturalLiteralExpression;
	public LiteralExpressionElements getLiteralExpressionAccess() {
		return pLiteralExpression;
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//NullLiteralExpression SysML::LiteralNull:
	//	{SysML::LiteralNull} 'null';
	public NullLiteralExpressionElements getNullLiteralExpressionAccess() {
		return pNullLiteralExpression;
	}
	
	public ParserRule getNullLiteralExpressionRule() {
		return getNullLiteralExpressionAccess().getRule();
	}
	
	//BooleanLiteralExpression SysML::LiteralBoolean:
	//	value=BOOLEAN_VALUE;
	public BooleanLiteralExpressionElements getBooleanLiteralExpressionAccess() {
		return pBooleanLiteralExpression;
	}
	
	public ParserRule getBooleanLiteralExpressionRule() {
		return getBooleanLiteralExpressionAccess().getRule();
	}
	
	//StringLiteralExpression SysML::LiteralString:
	//	value=STRING_VALUE;
	public StringLiteralExpressionElements getStringLiteralExpressionAccess() {
		return pStringLiteralExpression;
	}
	
	public ParserRule getStringLiteralExpressionRule() {
		return getStringLiteralExpressionAccess().getRule();
	}
	
	//RealLiteralExpression SysML::LiteralReal:
	//	value=RealValue;
	public RealLiteralExpressionElements getRealLiteralExpressionAccess() {
		return pRealLiteralExpression;
	}
	
	public ParserRule getRealLiteralExpressionRule() {
		return getRealLiteralExpressionAccess().getRule();
	}
	
	//RealValue Ecore::EDouble:
	//	(NATURAL_VALUE '.' NATURAL_VALUE? | '.' NATURAL_VALUE) (('e' | 'E') ('+' | '-')? NATURAL_VALUE)?;
	public RealValueElements getRealValueAccess() {
		return pRealValue;
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//NaturalLiteralExpression SysML::LiteralInteger:
	//	value=NATURAL_VALUE;
	public NaturalLiteralExpressionElements getNaturalLiteralExpressionAccess() {
		return pNaturalLiteralExpression;
	}
	
	public ParserRule getNaturalLiteralExpressionRule() {
		return getNaturalLiteralExpressionAccess().getRule();
	}
	
	//UnlimitedNaturalLiteralExpression SysML::Expression:
	//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
	public UnlimitedNaturalLiteralExpressionElements getUnlimitedNaturalLiteralExpressionAccess() {
		return pUnlimitedNaturalLiteralExpression;
	}
	
	public ParserRule getUnlimitedNaturalLiteralExpressionRule() {
		return getUnlimitedNaturalLiteralExpressionAccess().getRule();
	}
	
	///***************
	//* NAMES        *
	//***************/ Name:
	//	ID | UNRESTRICTED_NAME;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//QualifiedName:
	//	Name (('.' | '::') Name)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//terminal BOOLEAN_VALUE returns Ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEAN_VALUERule() {
		return tBOOLEAN_VALUE;
	}
	
	//terminal NATURAL_VALUE returns Ecore::EInt:
	//	('0' | '1'..'9' ('_'? '0'..'9')*) | ('0b' | '0B') '0'..'1' ('_'? '0'..'1')* | ('0x' | '0X') ('0'..'9' | 'a'..'f' |
	//	'A'..'F') ('_'? ('0'..'9' | 'a'..'f' | 'A'..'F'))* | '0' '_'? '0'..'7' ('_'? '0'..'7')*;
	public TerminalRule getNATURAL_VALUERule() {
		return tNATURAL_VALUE;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal UNRESTRICTED_NAME:
	//	'\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return tUNRESTRICTED_NAME;
	}
	
	//terminal STRING_VALUE:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return tSTRING_VALUE;
	}
	
	//terminal DOCUMENTATION_COMMENT:
	//	'/**'->'*/';
	public TerminalRule getDOCUMENTATION_COMMENTRule() {
		return tDOCUMENTATION_COMMENT;
	}
	
	//terminal STATEMENT_ANNOTATION:
	//	'//@'->'\n'
	//	//  '//@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')? 
	//	//  (WS? '@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')?)* (' '|'\t')* ('\r'? '\n')
	//;
	public TerminalRule getSTATEMENT_ANNOTATIONRule() {
		return tSTATEMENT_ANNOTATION;
	}
	
	//terminal INLINE_STATEMENT:
	//	'/*@inline(' (ID | UNRESTRICTED_NAME) ')'->'*/';
	public TerminalRule getINLINE_STATEMENTRule() {
		return tINLINE_STATEMENT;
	}
	
	//terminal ML_COMMENT:
	//	'/*' !('*' | '@')->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' (!('@' | '\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
