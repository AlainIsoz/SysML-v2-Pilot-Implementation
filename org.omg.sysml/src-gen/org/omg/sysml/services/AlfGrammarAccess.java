/*
 * generated by Xtext 2.16.0
 */
package org.omg.sysml.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AlfGrammarAccess extends AbstractGrammarElementFinder {
	
	public class UnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageUnitDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassUnitDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObjectClassUnitDefinitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cValueClassUnitDefinitionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAssociationUnitDefinitionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFeatureUnitDefinitionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		///* UNITS */ UnitDefinition SysML::Package:
		//	PackageUnitDefinition
		//	| ClassUnitDefinition
		//	| ObjectClassUnitDefinition
		//	| ValueClassUnitDefinition
		//	| AssociationUnitDefinition
		//	| FeatureUnitDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageUnitDefinition | ClassUnitDefinition | ObjectClassUnitDefinition | ValueClassUnitDefinition |
		//AssociationUnitDefinition | FeatureUnitDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageUnitDefinition
		public RuleCall getPackageUnitDefinitionParserRuleCall_0() { return cPackageUnitDefinitionParserRuleCall_0; }
		
		//ClassUnitDefinition
		public RuleCall getClassUnitDefinitionParserRuleCall_1() { return cClassUnitDefinitionParserRuleCall_1; }
		
		//ObjectClassUnitDefinition
		public RuleCall getObjectClassUnitDefinitionParserRuleCall_2() { return cObjectClassUnitDefinitionParserRuleCall_2; }
		
		//ValueClassUnitDefinition
		public RuleCall getValueClassUnitDefinitionParserRuleCall_3() { return cValueClassUnitDefinitionParserRuleCall_3; }
		
		//AssociationUnitDefinition
		public RuleCall getAssociationUnitDefinitionParserRuleCall_4() { return cAssociationUnitDefinitionParserRuleCall_4; }
		
		//FeatureUnitDefinition
		public RuleCall getFeatureUnitDefinitionParserRuleCall_5() { return cFeatureUnitDefinitionParserRuleCall_5; }
	}
	public class PackageUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackageDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//PackageUnitDefinition SysML::Package:
		//	UnitPrefix PackageDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix PackageDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall_1() { return cPackageDefinitionParserRuleCall_1; }
	}
	public class ClassUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cClassDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ClassUnitDefinition SysML::ObjectClass:
		//	UnitPrefix ClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ClassDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ClassDefinition
		public RuleCall getClassDefinitionParserRuleCall_1() { return cClassDefinitionParserRuleCall_1; }
	}
	public class ObjectClassUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cObjectClassDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ObjectClassUnitDefinition SysML::ObjectClass:
		//	UnitPrefix ObjectClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ObjectClassDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ObjectClassDefinition
		public RuleCall getObjectClassDefinitionParserRuleCall_1() { return cObjectClassDefinitionParserRuleCall_1; }
	}
	public class ValueClassUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValueClassDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ValueClassUnitDefinition SysML::ValueClass:
		//	UnitPrefix ValueClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ValueClassDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ValueClassDefinition
		public RuleCall getValueClassDefinitionParserRuleCall_1() { return cValueClassDefinitionParserRuleCall_1; }
	}
	public class AssociationUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AssociationUnitDefinition SysML::Association:
		//	UnitPrefix AssociationDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix AssociationDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//AssociationDefinition
		public RuleCall getAssociationDefinitionParserRuleCall_1() { return cAssociationDefinitionParserRuleCall_1; }
	}
	public class FeatureUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFeatureBodyDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//FeatureUnitDefinition SysML::Feature:
		//	UnitPrefix FeatureBodyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix FeatureBodyDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//FeatureBodyDefinition
		public RuleCall getFeatureBodyDefinitionParserRuleCall_1() { return cFeatureBodyDefinitionParserRuleCall_1; }
	}
	public class UnitPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cOwnedImportAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cOwnedImportPackageImportParserRuleCall_0_0_0 = (RuleCall)cOwnedImportAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cOwnedMembershipElementImportParserRuleCall_0_1_0 = (RuleCall)cOwnedMembershipAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment UnitPrefix returns SysML::Package:
		//	(ownedImport+=PackageImport
		//	| ownedMembership+=ElementImport)*
		//	ownedRelationship+=Annotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//(ownedImport+=PackageImport | ownedMembership+=ElementImport)* ownedRelationship+=Annotation*
		public Group getGroup() { return cGroup; }
		
		//(ownedImport+=PackageImport | ownedMembership+=ElementImport)*
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ownedImport+=PackageImport
		public Assignment getOwnedImportAssignment_0_0() { return cOwnedImportAssignment_0_0; }
		
		//PackageImport
		public RuleCall getOwnedImportPackageImportParserRuleCall_0_0_0() { return cOwnedImportPackageImportParserRuleCall_0_0_0; }
		
		//ownedMembership+=ElementImport
		public Assignment getOwnedMembershipAssignment_0_1() { return cOwnedMembershipAssignment_0_1; }
		
		//ElementImport
		public RuleCall getOwnedMembershipElementImportParserRuleCall_0_1_0() { return cOwnedMembershipElementImportParserRuleCall_0_1_0; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_1_0; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Annotation");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementCommentParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* COMMENTS */ Annotation SysML::Annotation:
		//	ownedRelatedElement+=Comment;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=Comment
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Comment
		public RuleCall getOwnedRelatedElementCommentParserRuleCall_0() { return cOwnedRelatedElementCommentParserRuleCall_0; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Comment");
		private final Assignment cBodyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0 = (RuleCall)cBodyAssignment.eContents().get(0);
		
		//Comment SysML::Comment:
		//	body=DOCUMENTATION_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//body=DOCUMENTATION_COMMENT
		public Assignment getBodyAssignment() { return cBodyAssignment; }
		
		//DOCUMENTATION_COMMENT
		public RuleCall getBodyDOCUMENTATION_COMMENTTerminalRuleCall_0() { return cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0; }
	}
	public class PackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cImportedPackageAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_0_0_0 = (CrossReference)cImportedPackageAssignment_3_0_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageNameParserRuleCall_3_0_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_0_0_0.eContents().get(1);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_0_1_0 = (Keyword)cAlternatives_3_0_1.eContents().get(0);
		private final Keyword cFullStopKeyword_3_0_1_1 = (Keyword)cAlternatives_3_0_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cImportedPackageAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_1_0_0 = (CrossReference)cImportedPackageAssignment_3_1_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_1_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cImportedPackageAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_2_0_0 = (CrossReference)cImportedPackageAssignment_3_2_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///* IMPORTS */ PackageImport SysML::Import:
		//	ownedRelationship+=Annotation*
		//	visibility=PackageElementVisibilityIndicator?
		//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* visibility=PackageElementVisibilityIndicator? 'import'
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'import'
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*' |
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//importedPackage=[SysML::Package|Name]
		public Assignment getImportedPackageAssignment_3_0_0() { return cImportedPackageAssignment_3_0_0; }
		
		//[SysML::Package|Name]
		public CrossReference getImportedPackagePackageCrossReference_3_0_0_0() { return cImportedPackagePackageCrossReference_3_0_0_0; }
		
		//Name
		public RuleCall getImportedPackagePackageNameParserRuleCall_3_0_0_0_1() { return cImportedPackagePackageNameParserRuleCall_3_0_0_0_1; }
		
		//'::' | '.'
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0_1_0() { return cColonColonKeyword_3_0_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0_1_1() { return cFullStopKeyword_3_0_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_0_2() { return cAsteriskKeyword_3_0_2; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName]
		public Assignment getImportedPackageAssignment_3_1_0() { return cImportedPackageAssignment_3_1_0; }
		
		//[SysML::Package|ColonQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_1_0_0() { return cImportedPackagePackageCrossReference_3_1_0_0; }
		
		//ColonQualifiedName
		public RuleCall getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1() { return cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_1_1() { return cColonColonKeyword_3_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_1_2() { return cAsteriskKeyword_3_1_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName]
		public Assignment getImportedPackageAssignment_3_2_0() { return cImportedPackageAssignment_3_2_0; }
		
		//[SysML::Package|DotQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_2_0_0() { return cImportedPackagePackageCrossReference_3_2_0_0; }
		
		//DotQualifiedName
		public RuleCall getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1() { return cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3_2_1() { return cFullStopKeyword_3_2_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_2_2() { return cAsteriskKeyword_3_2_2; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ElementImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ElementImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemberElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMemberElementElementCrossReference_2_0 = (CrossReference)cMemberElementAssignment_2.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cMemberElementElementCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemberNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_3_1_0 = (RuleCall)cMemberNameAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ElementImport SysML::Membership:
		//	PackageMemberPrefix
		//	'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//PackageMemberPrefix 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		public Group getGroup() { return cGroup; }
		
		//PackageMemberPrefix
		public RuleCall getPackageMemberPrefixParserRuleCall_0() { return cPackageMemberPrefixParserRuleCall_0; }
		
		//'import'
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_2() { return cMemberElementAssignment_2; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_2_0() { return cMemberElementElementCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_2_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_2_0_1; }
		
		//('as' memberName=Name)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'as'
		public Keyword getAsKeyword_3_0() { return cAsKeyword_3_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_3_1() { return cMemberNameAssignment_3_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_1_0() { return cMemberNameNameParserRuleCall_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class NonFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDefinitionOrStubParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassDefinitionOrStubParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObjectClassDefinitionOrStubParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cValueClassDefinitionOrStubParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAssociationDefinitionOrStubParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBehaviorDefinitionOrStubParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cFunctionDefinitionOrStubParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		///* PACKAGES */ NonFeatureDefinition SysML::Package:
		//	PackageDefinitionOrStub
		//	| ClassDefinitionOrStub
		//	| ObjectClassDefinitionOrStub
		//	| ValueClassDefinitionOrStub
		//	| AssociationDefinitionOrStub
		//	| BehaviorDefinitionOrStub
		//	| FunctionDefinitionOrStub;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinitionOrStub | ClassDefinitionOrStub | ObjectClassDefinitionOrStub | ValueClassDefinitionOrStub |
		//AssociationDefinitionOrStub | BehaviorDefinitionOrStub | FunctionDefinitionOrStub
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageDefinitionOrStub
		public RuleCall getPackageDefinitionOrStubParserRuleCall_0() { return cPackageDefinitionOrStubParserRuleCall_0; }
		
		//ClassDefinitionOrStub
		public RuleCall getClassDefinitionOrStubParserRuleCall_1() { return cClassDefinitionOrStubParserRuleCall_1; }
		
		//ObjectClassDefinitionOrStub
		public RuleCall getObjectClassDefinitionOrStubParserRuleCall_2() { return cObjectClassDefinitionOrStubParserRuleCall_2; }
		
		//ValueClassDefinitionOrStub
		public RuleCall getValueClassDefinitionOrStubParserRuleCall_3() { return cValueClassDefinitionOrStubParserRuleCall_3; }
		
		//AssociationDefinitionOrStub
		public RuleCall getAssociationDefinitionOrStubParserRuleCall_4() { return cAssociationDefinitionOrStubParserRuleCall_4; }
		
		//BehaviorDefinitionOrStub
		public RuleCall getBehaviorDefinitionOrStubParserRuleCall_5() { return cBehaviorDefinitionOrStubParserRuleCall_5; }
		
		//FunctionDefinitionOrStub
		public RuleCall getFunctionDefinitionOrStubParserRuleCall_6() { return cFunctionDefinitionOrStubParserRuleCall_6; }
	}
	public class PackageDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageDefinitionOrStub");
		private final RuleCall cPackageDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PackageDefinitionOrStub SysML::Package:
		//	PackageDefinition
		//	//	'package' name = Name ( isStub ?= ';' | '{' ( ownedMembership += PackageMember )* '}' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall() { return cPackageDefinitionParserRuleCall; }
	}
	public class PackageDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cOwnedMembershipAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cOwnedMembershipPackageMemberParserRuleCall_3_0_0 = (RuleCall)cOwnedMembershipAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedImportAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cOwnedImportPackageImportParserRuleCall_3_1_0 = (RuleCall)cOwnedImportAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//fragment PackageDefinition returns SysML::Package:
		//	'package' name=Name '{' (ownedMembership+=PackageMember | ownedImport+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=Name '{' (ownedMembership+=PackageMember | ownedImport+=PackageImport)* '}'
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(ownedMembership+=PackageMember | ownedImport+=PackageImport)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedMembership+=PackageMember
		public Assignment getOwnedMembershipAssignment_3_0() { return cOwnedMembershipAssignment_3_0; }
		
		//PackageMember
		public RuleCall getOwnedMembershipPackageMemberParserRuleCall_3_0_0() { return cOwnedMembershipPackageMemberParserRuleCall_3_0_0; }
		
		//ownedImport+=PackageImport
		public Assignment getOwnedImportAssignment_3_1() { return cOwnedImportAssignment_3_1; }
		
		//PackageImport
		public RuleCall getOwnedImportPackageImportParserRuleCall_3_1_0() { return cOwnedImportPackageImportParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cNonFeatureMemberElementParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cFeaturePackageMemberElementParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
		//	PackageMemberPrefix (NonFeatureMemberElement
		//	| FeaturePackageMemberElement);
		@Override public ParserRule getRule() { return rule; }
		
		//PackageMemberPrefix (NonFeatureMemberElement | FeaturePackageMemberElement)
		public Group getGroup() { return cGroup; }
		
		//PackageMemberPrefix
		public RuleCall getPackageMemberPrefixParserRuleCall_0() { return cPackageMemberPrefixParserRuleCall_0; }
		
		//NonFeatureMemberElement | FeaturePackageMemberElement
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//NonFeatureMemberElement
		public RuleCall getNonFeatureMemberElementParserRuleCall_1_0() { return cNonFeatureMemberElementParserRuleCall_1_0; }
		
		//FeaturePackageMemberElement
		public RuleCall getFeaturePackageMemberElementParserRuleCall_1_1() { return cFeaturePackageMemberElementParserRuleCall_1_1; }
	}
	public class PackageMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment PackageMemberPrefix returns SysML::Membership:
		//	ownedRelationship+=Annotation*
		//	//  ( annotation += StereotypeAnnotation )*
		//	visibility=PackageElementVisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* //  ( annotation += StereotypeAnnotation )*
		//visibility=PackageElementVisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class NonFeatureMemberElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureMemberElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedMemberElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedMemberElementNonFeatureDefinitionParserRuleCall_0_0 = (RuleCall)cOwnedMemberElementAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cPackageKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_0 = (RuleCall)cMemberNameAssignment_1_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMemberElementAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cMemberElementPackageCrossReference_1_3_0 = (CrossReference)cMemberElementAssignment_1_3.eContents().get(0);
		private final RuleCall cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1 = (RuleCall)cMemberElementPackageCrossReference_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cClassKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_2_1_0 = (RuleCall)cMemberNameAssignment_2_1.eContents().get(0);
		private final Keyword cIsKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMemberElementAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final CrossReference cMemberElementClassCrossReference_2_3_0 = (CrossReference)cMemberElementAssignment_2_3.eContents().get(0);
		private final RuleCall cMemberElementClassQualifiedNameParserRuleCall_2_3_0_1 = (RuleCall)cMemberElementClassCrossReference_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cClassKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemberNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_3_1_0 = (RuleCall)cMemberNameAssignment_3_1.eContents().get(0);
		private final Keyword cIsKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMemberElementAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final CrossReference cMemberElementObjectClassCrossReference_3_3_0 = (CrossReference)cMemberElementAssignment_3_3.eContents().get(0);
		private final RuleCall cMemberElementObjectClassQualifiedNameParserRuleCall_3_3_0_1 = (RuleCall)cMemberElementObjectClassCrossReference_3_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cDatatypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMemberNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_4_1_0 = (RuleCall)cMemberNameAssignment_4_1.eContents().get(0);
		private final Keyword cIsKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cMemberElementAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cMemberElementValueClassCrossReference_4_3_0 = (CrossReference)cMemberElementAssignment_4_3.eContents().get(0);
		private final RuleCall cMemberElementValueClassQualifiedNameParserRuleCall_4_3_0_1 = (RuleCall)cMemberElementValueClassCrossReference_4_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cAssocKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMemberNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_1_0 = (RuleCall)cMemberNameAssignment_5_1.eContents().get(0);
		private final Keyword cIsKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cMemberElementAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final CrossReference cMemberElementAssociationCrossReference_5_3_0 = (CrossReference)cMemberElementAssignment_5_3.eContents().get(0);
		private final RuleCall cMemberElementAssociationQualifiedNameParserRuleCall_5_3_0_1 = (RuleCall)cMemberElementAssociationCrossReference_5_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cBehaviorKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMemberNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_6_1_0 = (RuleCall)cMemberNameAssignment_6_1.eContents().get(0);
		private final Keyword cIsKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cMemberElementAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cMemberElementBehaviorCrossReference_6_3_0 = (CrossReference)cMemberElementAssignment_6_3.eContents().get(0);
		private final RuleCall cMemberElementBehaviorQualifiedNameParserRuleCall_6_3_0_1 = (RuleCall)cMemberElementBehaviorCrossReference_6_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cFunctionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMemberNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_7_1_0 = (RuleCall)cMemberNameAssignment_7_1.eContents().get(0);
		private final Keyword cIsKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cMemberElementAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cMemberElementFunctionCrossReference_7_3_0 = (CrossReference)cMemberElementAssignment_7_3.eContents().get(0);
		private final RuleCall cMemberElementFunctionQualifiedNameParserRuleCall_7_3_0_1 = (RuleCall)cMemberElementFunctionCrossReference_7_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cImportKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMemberElementAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cMemberElementElementCrossReference_8_1_0 = (CrossReference)cMemberElementAssignment_8_1.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_8_1_0_1 = (RuleCall)cMemberElementElementCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cAsKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_8_2_1_0 = (RuleCall)cMemberNameAssignment_8_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//fragment NonFeatureMemberElement returns SysML::Membership:
		//	ownedMemberElement=NonFeatureDefinition
		//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		//	| 'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';'
		//	| 'class' memberName=Name? 'is' memberElement=[SysML::ObjectClass|QualifiedName] ';'
		//	| 'datatype' memberName=Name? 'is' memberElement=[SysML::ValueClass|QualifiedName] ';'
		//	| 'assoc' memberName=Name? 'is' memberElement=[SysML::Association|QualifiedName] ';'
		//	| 'behavior' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		//	| 'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
		//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement=NonFeatureDefinition | 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName]
		//';' | 'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';' | 'class' memberName=Name? 'is'
		//memberElement=[SysML::ObjectClass|QualifiedName] ';' | 'datatype' memberName=Name? 'is'
		//memberElement=[SysML::ValueClass|QualifiedName] ';' | 'assoc' memberName=Name? 'is'
		//memberElement=[SysML::Association|QualifiedName] ';' | 'behavior' memberName=Name? 'is'
		//memberElement=[SysML::Behavior|QualifiedName] ';' | 'function' memberName=Name? 'is'
		//memberElement=[SysML::Function|QualifiedName] ';' | 'import' memberElement=[SysML::Element|QualifiedName] ('as'
		//memberName=Name)? ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedMemberElement=NonFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_0() { return cOwnedMemberElementAssignment_0; }
		
		//NonFeatureDefinition
		public RuleCall getOwnedMemberElementNonFeatureDefinitionParserRuleCall_0_0() { return cOwnedMemberElementNonFeatureDefinitionParserRuleCall_0_0; }
		
		//'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'package'
		public Keyword getPackageKeyword_1_0() { return cPackageKeyword_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1() { return cMemberNameAssignment_1_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_0() { return cMemberNameNameParserRuleCall_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2() { return cIsKeyword_1_2; }
		
		//memberElement=[SysML::Package|QualifiedName]
		public Assignment getMemberElementAssignment_1_3() { return cMemberElementAssignment_1_3; }
		
		//[SysML::Package|QualifiedName]
		public CrossReference getMemberElementPackageCrossReference_1_3_0() { return cMemberElementPackageCrossReference_1_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1() { return cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }
		
		//'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'Class'
		public Keyword getClassKeyword_2_0() { return cClassKeyword_2_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_2_1() { return cMemberNameAssignment_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_2_1_0() { return cMemberNameNameParserRuleCall_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2_2() { return cIsKeyword_2_2; }
		
		//memberElement=[SysML::Class|QualifiedName]
		public Assignment getMemberElementAssignment_2_3() { return cMemberElementAssignment_2_3; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getMemberElementClassCrossReference_2_3_0() { return cMemberElementClassCrossReference_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementClassQualifiedNameParserRuleCall_2_3_0_1() { return cMemberElementClassQualifiedNameParserRuleCall_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_4() { return cSemicolonKeyword_2_4; }
		
		//'class' memberName=Name? 'is' memberElement=[SysML::ObjectClass|QualifiedName] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'class'
		public Keyword getClassKeyword_3_0() { return cClassKeyword_3_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_3_1() { return cMemberNameAssignment_3_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_1_0() { return cMemberNameNameParserRuleCall_3_1_0; }
		
		//'is'
		public Keyword getIsKeyword_3_2() { return cIsKeyword_3_2; }
		
		//memberElement=[SysML::ObjectClass|QualifiedName]
		public Assignment getMemberElementAssignment_3_3() { return cMemberElementAssignment_3_3; }
		
		//[SysML::ObjectClass|QualifiedName]
		public CrossReference getMemberElementObjectClassCrossReference_3_3_0() { return cMemberElementObjectClassCrossReference_3_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementObjectClassQualifiedNameParserRuleCall_3_3_0_1() { return cMemberElementObjectClassQualifiedNameParserRuleCall_3_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }
		
		//'datatype' memberName=Name? 'is' memberElement=[SysML::ValueClass|QualifiedName] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_4_0() { return cDatatypeKeyword_4_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_4_1() { return cMemberNameAssignment_4_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_4_1_0() { return cMemberNameNameParserRuleCall_4_1_0; }
		
		//'is'
		public Keyword getIsKeyword_4_2() { return cIsKeyword_4_2; }
		
		//memberElement=[SysML::ValueClass|QualifiedName]
		public Assignment getMemberElementAssignment_4_3() { return cMemberElementAssignment_4_3; }
		
		//[SysML::ValueClass|QualifiedName]
		public CrossReference getMemberElementValueClassCrossReference_4_3_0() { return cMemberElementValueClassCrossReference_4_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementValueClassQualifiedNameParserRuleCall_4_3_0_1() { return cMemberElementValueClassQualifiedNameParserRuleCall_4_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_4() { return cSemicolonKeyword_4_4; }
		
		//'assoc' memberName=Name? 'is' memberElement=[SysML::Association|QualifiedName] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'assoc'
		public Keyword getAssocKeyword_5_0() { return cAssocKeyword_5_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_5_1() { return cMemberNameAssignment_5_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_1_0() { return cMemberNameNameParserRuleCall_5_1_0; }
		
		//'is'
		public Keyword getIsKeyword_5_2() { return cIsKeyword_5_2; }
		
		//memberElement=[SysML::Association|QualifiedName]
		public Assignment getMemberElementAssignment_5_3() { return cMemberElementAssignment_5_3; }
		
		//[SysML::Association|QualifiedName]
		public CrossReference getMemberElementAssociationCrossReference_5_3_0() { return cMemberElementAssociationCrossReference_5_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementAssociationQualifiedNameParserRuleCall_5_3_0_1() { return cMemberElementAssociationQualifiedNameParserRuleCall_5_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_4() { return cSemicolonKeyword_5_4; }
		
		//'behavior' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		public Group getGroup_6() { return cGroup_6; }
		
		//'behavior'
		public Keyword getBehaviorKeyword_6_0() { return cBehaviorKeyword_6_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_6_1() { return cMemberNameAssignment_6_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_6_1_0() { return cMemberNameNameParserRuleCall_6_1_0; }
		
		//'is'
		public Keyword getIsKeyword_6_2() { return cIsKeyword_6_2; }
		
		//memberElement=[SysML::Behavior|QualifiedName]
		public Assignment getMemberElementAssignment_6_3() { return cMemberElementAssignment_6_3; }
		
		//[SysML::Behavior|QualifiedName]
		public CrossReference getMemberElementBehaviorCrossReference_6_3_0() { return cMemberElementBehaviorCrossReference_6_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementBehaviorQualifiedNameParserRuleCall_6_3_0_1() { return cMemberElementBehaviorQualifiedNameParserRuleCall_6_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6_4() { return cSemicolonKeyword_6_4; }
		
		//'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
		public Group getGroup_7() { return cGroup_7; }
		
		//'function'
		public Keyword getFunctionKeyword_7_0() { return cFunctionKeyword_7_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_7_1() { return cMemberNameAssignment_7_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_7_1_0() { return cMemberNameNameParserRuleCall_7_1_0; }
		
		//'is'
		public Keyword getIsKeyword_7_2() { return cIsKeyword_7_2; }
		
		//memberElement=[SysML::Function|QualifiedName]
		public Assignment getMemberElementAssignment_7_3() { return cMemberElementAssignment_7_3; }
		
		//[SysML::Function|QualifiedName]
		public CrossReference getMemberElementFunctionCrossReference_7_3_0() { return cMemberElementFunctionCrossReference_7_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFunctionQualifiedNameParserRuleCall_7_3_0_1() { return cMemberElementFunctionQualifiedNameParserRuleCall_7_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7_4() { return cSemicolonKeyword_7_4; }
		
		//'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		public Group getGroup_8() { return cGroup_8; }
		
		//'import'
		public Keyword getImportKeyword_8_0() { return cImportKeyword_8_0; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_8_1() { return cMemberElementAssignment_8_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_8_1_0() { return cMemberElementElementCrossReference_8_1_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_8_1_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_8_1_0_1; }
		
		//('as' memberName=Name)?
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//'as'
		public Keyword getAsKeyword_8_2_0() { return cAsKeyword_8_2_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_8_2_1() { return cMemberNameAssignment_8_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_8_2_1_0() { return cMemberNameNameParserRuleCall_8_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8_3() { return cSemicolonKeyword_8_3; }
	}
	public class FeaturePackageMemberElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeaturePackageMemberElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cFeatureKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_0_1_0 = (RuleCall)cOwnedMemberElementAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cFeatureKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedMemberElementAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_0 = (RuleCall)cOwnedMemberElementAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Alternatives cAlternatives_2_0 = (Alternatives)cGroup_2.eContents().get(0);
		private final Group cGroup_2_0_0 = (Group)cAlternatives_2_0.eContents().get(0);
		private final Keyword cFeatureKeyword_2_0_0_0 = (Keyword)cGroup_2_0_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_2_0_0_1 = (Assignment)cGroup_2_0_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_2_0_0_1_0 = (RuleCall)cMemberNameAssignment_2_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_2_0_1 = (Assignment)cAlternatives_2_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_2_0_1_0 = (RuleCall)cMemberNameAssignment_2_0_1.eContents().get(0);
		private final Keyword cIsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cMemberElementAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cMemberElementFeatureCrossReference_2_2_0 = (CrossReference)cMemberElementAssignment_2_2.eContents().get(0);
		private final RuleCall cMemberElementFeatureQualifiedNameParserRuleCall_2_2_0_1 = (RuleCall)cMemberElementFeatureCrossReference_2_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		////NonFeatureMemberKind :
		////	'package' | 'class' | 'assoc'
		////;
		//fragment FeaturePackageMemberElement returns SysML::Membership:
		//	'feature'? ownedMemberElement=NamedFeatureDefinition
		//	| 'feature' ownedMemberElement=UnnamedFeatureDefinition
		//	| ('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'feature'? ownedMemberElement=NamedFeatureDefinition | 'feature' ownedMemberElement=UnnamedFeatureDefinition |
		//('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'feature'? ownedMemberElement=NamedFeatureDefinition
		public Group getGroup_0() { return cGroup_0; }
		
		//'feature'?
		public Keyword getFeatureKeyword_0_0() { return cFeatureKeyword_0_0; }
		
		//ownedMemberElement=NamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_0_1() { return cOwnedMemberElementAssignment_0_1; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedMemberElementNamedFeatureDefinitionParserRuleCall_0_1_0() { return cOwnedMemberElementNamedFeatureDefinitionParserRuleCall_0_1_0; }
		
		//'feature' ownedMemberElement=UnnamedFeatureDefinition
		public Group getGroup_1() { return cGroup_1; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_0() { return cFeatureKeyword_1_0; }
		
		//ownedMemberElement=UnnamedFeatureDefinition
		public Assignment getOwnedMemberElementAssignment_1_1() { return cOwnedMemberElementAssignment_1_1; }
		
		//UnnamedFeatureDefinition
		public RuleCall getOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_0() { return cOwnedMemberElementUnnamedFeatureDefinitionParserRuleCall_1_1_0; }
		
		//('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'feature' memberName=Name? | memberName=Name
		public Alternatives getAlternatives_2_0() { return cAlternatives_2_0; }
		
		//'feature' memberName=Name?
		public Group getGroup_2_0_0() { return cGroup_2_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_2_0_0_0() { return cFeatureKeyword_2_0_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_2_0_0_1() { return cMemberNameAssignment_2_0_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_2_0_0_1_0() { return cMemberNameNameParserRuleCall_2_0_0_1_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_2_0_1() { return cMemberNameAssignment_2_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_2_0_1_0() { return cMemberNameNameParserRuleCall_2_0_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2_1() { return cIsKeyword_2_1; }
		
		//memberElement=[SysML::Feature|QualifiedName]
		public Assignment getMemberElementAssignment_2_2() { return cMemberElementAssignment_2_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberElementFeatureCrossReference_2_2_0() { return cMemberElementFeatureCrossReference_2_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFeatureQualifiedNameParserRuleCall_2_2_0_1() { return cMemberElementFeatureQualifiedNameParserRuleCall_2_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_3() { return cSemicolonKeyword_2_3; }
	}
	public class CategoryBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CategoryBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembershipCategoryMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembershipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedImportAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedImportPackageImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedImportAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		///* CATEGORIES */ fragment CategoryBody returns SysML::Category:
		//	';' | '{' (ownedMembership+=CategoryMember | ownedImport+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedMembership+=CategoryMember | ownedImport+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedMembership+=CategoryMember | ownedImport+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedMembership+=CategoryMember | ownedImport+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership+=CategoryMember
		public Assignment getOwnedMembershipAssignment_1_1_0() { return cOwnedMembershipAssignment_1_1_0; }
		
		//CategoryMember
		public RuleCall getOwnedMembershipCategoryMemberParserRuleCall_1_1_0_0() { return cOwnedMembershipCategoryMemberParserRuleCall_1_1_0_0; }
		
		//ownedImport+=PackageImport
		public Assignment getOwnedImportAssignment_1_1_1() { return cOwnedImportAssignment_1_1_1; }
		
		//PackageImport
		public RuleCall getOwnedImportPackageImportParserRuleCall_1_1_1_0() { return cOwnedImportPackageImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class CategoryMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CategoryMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureCategoryMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureCategoryMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* CATEGORY MEMBERSHIPS */ CategoryMember SysML::Membership:
		//	NonFeatureCategoryMember | FeatureCategoryMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureCategoryMember | FeatureCategoryMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureCategoryMember
		public RuleCall getNonFeatureCategoryMemberParserRuleCall_0() { return cNonFeatureCategoryMemberParserRuleCall_0; }
		
		//FeatureCategoryMember
		public RuleCall getFeatureCategoryMemberParserRuleCall_1() { return cFeatureCategoryMemberParserRuleCall_1; }
	}
	public class NonFeatureCategoryMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureCategoryMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNonFeatureMemberElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//NonFeatureCategoryMember SysML::Membership:
		//	CategoryMemberPrefix NonFeatureMemberElement;
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix NonFeatureMemberElement
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//NonFeatureMemberElement
		public RuleCall getNonFeatureMemberElementParserRuleCall_1() { return cNonFeatureMemberElementParserRuleCall_1; }
	}
	public class FeatureCategoryMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureCategoryMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cFeatureMemberElementParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cDirectionAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_1_0_0 = (RuleCall)cDirectionAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedMemberFeatureAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureNamedFeatureDefinitionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMemberFeatureAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cDirectionAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_2_0_0 = (RuleCall)cDirectionAssignment_1_2_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_2_3_0 = (CrossReference)cMemberFeatureAssignment_1_2_3.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_3_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		
		//FeatureCategoryMember SysML::FeatureMembership:
		//	CategoryMemberPrefix (FeatureMemberElement
		//	// These alternatives are provided for legacy Alf backwards compatibility.	
		//	| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition
		//	| direction=FeatureDirection? memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix (FeatureMemberElement // These alternatives are provided for legacy Alf backwards compatibility.	
		//| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition | direction=FeatureDirection? memberName=Name
		//'is' memberFeature=[SysML::Feature|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//FeatureMemberElement // These alternatives are provided for legacy Alf backwards compatibility.	
		//| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition | direction=FeatureDirection? memberName=Name
		//'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//FeatureMemberElement
		public RuleCall getFeatureMemberElementParserRuleCall_1_0() { return cFeatureMemberElementParserRuleCall_1_0; }
		
		//direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_1_0() { return cDirectionAssignment_1_1_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_1_0_0() { return cDirectionFeatureDirectionEnumRuleCall_1_1_0_0; }
		
		//ownedMemberFeature=NamedFeatureDefinition
		public Assignment getOwnedMemberFeatureAssignment_1_1_1() { return cOwnedMemberFeatureAssignment_1_1_1; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedMemberFeatureNamedFeatureDefinitionParserRuleCall_1_1_1_0() { return cOwnedMemberFeatureNamedFeatureDefinitionParserRuleCall_1_1_1_0; }
		
		//direction=FeatureDirection? memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_2_0() { return cDirectionAssignment_1_2_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_2_0_0() { return cDirectionFeatureDirectionEnumRuleCall_1_2_0_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_2() { return cIsKeyword_1_2_2; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_3() { return cMemberFeatureAssignment_1_2_3; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_2_3_0() { return cMemberFeatureFeatureCrossReference_1_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_3_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
	}
	public class CategoryMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CategoryMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment CategoryMemberPrefix returns SysML::Membership:
		//	ownedRelationship+=Annotation*
		//	//  ( annotation += StereotypeAnnotation )*
		//	visibility=VisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* //  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class FeatureMemberElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureMemberElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cFeatureKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Assignment cIsPartAssignment_0_0_1 = (Assignment)cAlternatives_0_0.eContents().get(1);
		private final Keyword cIsPartPartKeyword_0_0_1_0 = (Keyword)cIsPartAssignment_0_0_1.eContents().get(0);
		private final Assignment cIsPortAssignment_0_0_2 = (Assignment)cAlternatives_0_0.eContents().get(2);
		private final Keyword cIsPortPortKeyword_0_0_2_0 = (Keyword)cIsPortAssignment_0_0_2.eContents().get(0);
		private final Assignment cDirectionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_1_0 = (RuleCall)cDirectionAssignment_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final Assignment cOwnedMemberFeatureAssignment_0_2_0 = (Assignment)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cOwnedMemberFeatureFeatureDefinitionParserRuleCall_0_2_0_0 = (RuleCall)cOwnedMemberFeatureAssignment_0_2_0.eContents().get(0);
		private final Group cGroup_0_2_1 = (Group)cAlternatives_0_2.eContents().get(1);
		private final Assignment cMemberNameAssignment_0_2_1_0 = (Assignment)cGroup_0_2_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_2_1_0_0 = (RuleCall)cMemberNameAssignment_0_2_1_0.eContents().get(0);
		private final Keyword cIsKeyword_0_2_1_1 = (Keyword)cGroup_0_2_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_0_2_1_2 = (Assignment)cGroup_0_2_1.eContents().get(2);
		private final CrossReference cMemberFeatureFeatureCrossReference_0_2_1_2_0 = (CrossReference)cMemberFeatureAssignment_0_2_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_0_2_1_2_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_0_2_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_2_1_3 = (Keyword)cGroup_0_2_1.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cConnectorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMemberFeatureAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMemberFeatureConnectorDefinitionParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMemberFeatureAssignment_1_1_0.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_1_1_0 = (Assignment)cGroup_1_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_1_1_1 = (Keyword)cGroup_1_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_1_1_2 = (Assignment)cGroup_1_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureConnectorCrossReference_1_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureConnectorQualifiedNameParserRuleCall_1_1_1_2_0_1 = (RuleCall)cMemberFeatureConnectorCrossReference_1_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_1_1_3 = (Keyword)cGroup_1_1_1.eContents().get(3);
		
		//fragment FeatureMemberElement returns SysML::FeatureMembership:
		//	('feature' | isPart?='part' | isPort?='port') direction=FeatureDirection? (ownedMemberFeature=FeatureDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';') | 'connector'
		//	(ownedMemberFeature=ConnectorDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//('feature' | isPart?='part' | isPort?='port') direction=FeatureDirection? (ownedMemberFeature=FeatureDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';') | 'connector'
		//(ownedMemberFeature=ConnectorDefinition | memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('feature' | isPart?='part' | isPort?='port') direction=FeatureDirection? (ownedMemberFeature=FeatureDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';')
		public Group getGroup_0() { return cGroup_0; }
		
		//'feature' | isPart?='part' | isPort?='port'
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_0_0_0() { return cFeatureKeyword_0_0_0; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_0_0_1() { return cIsPartAssignment_0_0_1; }
		
		//'part'
		public Keyword getIsPartPartKeyword_0_0_1_0() { return cIsPartPartKeyword_0_0_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_0_0_2() { return cIsPortAssignment_0_0_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_0_0_2_0() { return cIsPortPortKeyword_0_0_2_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0_1() { return cDirectionAssignment_0_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_1_0() { return cDirectionFeatureDirectionEnumRuleCall_0_1_0; }
		
		//ownedMemberFeature=FeatureDefinition | memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//ownedMemberFeature=FeatureDefinition
		public Assignment getOwnedMemberFeatureAssignment_0_2_0() { return cOwnedMemberFeatureAssignment_0_2_0; }
		
		//FeatureDefinition
		public RuleCall getOwnedMemberFeatureFeatureDefinitionParserRuleCall_0_2_0_0() { return cOwnedMemberFeatureFeatureDefinitionParserRuleCall_0_2_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_0_2_1() { return cGroup_0_2_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_0_2_1_0() { return cMemberNameAssignment_0_2_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_2_1_0_0() { return cMemberNameNameParserRuleCall_0_2_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_0_2_1_1() { return cIsKeyword_0_2_1_1; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_0_2_1_2() { return cMemberFeatureAssignment_0_2_1_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_0_2_1_2_0() { return cMemberFeatureFeatureCrossReference_0_2_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_0_2_1_2_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_0_2_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_0_2_1_3() { return cSemicolonKeyword_0_2_1_3; }
		
		//'connector' (ownedMemberFeature=ConnectorDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::Connector|QualifiedName] ';')
		public Group getGroup_1() { return cGroup_1; }
		
		//'connector'
		public Keyword getConnectorKeyword_1_0() { return cConnectorKeyword_1_0; }
		
		//ownedMemberFeature=ConnectorDefinition | memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';'
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMemberFeature=ConnectorDefinition
		public Assignment getOwnedMemberFeatureAssignment_1_1_0() { return cOwnedMemberFeatureAssignment_1_1_0; }
		
		//ConnectorDefinition
		public RuleCall getOwnedMemberFeatureConnectorDefinitionParserRuleCall_1_1_0_0() { return cOwnedMemberFeatureConnectorDefinitionParserRuleCall_1_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';'
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1_1_0() { return cMemberNameAssignment_1_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_1_0_0() { return cMemberNameNameParserRuleCall_1_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_1_1_1() { return cIsKeyword_1_1_1_1; }
		
		//memberFeature=[SysML::Connector|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_1_1_2() { return cMemberFeatureAssignment_1_1_1_2; }
		
		//[SysML::Connector|QualifiedName]
		public CrossReference getMemberFeatureConnectorCrossReference_1_1_1_2_0() { return cMemberFeatureConnectorCrossReference_1_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureConnectorQualifiedNameParserRuleCall_1_1_1_2_0_1() { return cMemberFeatureConnectorQualifiedNameParserRuleCall_1_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_1_1_3() { return cSemicolonKeyword_1_1_1_3; }
	}
	public class ClassDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDefinitionOrStub");
		private final RuleCall cClassDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* CLASSES */ ClassDefinitionOrStub SysML::Class:
		//	ClassDefinition
		//	//	ClassDeclaration ( isStub ?= ';' | CategoryBody )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassDefinition
		public RuleCall getClassDefinitionParserRuleCall() { return cClassDefinitionParserRuleCall; }
	}
	public class ClassDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cClassDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ClassDefinition returns SysML::Class:
		//	ClassDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ClassDeclaration
		public RuleCall getClassDeclarationParserRuleCall_0() { return cClassDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class ClassDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ClassDeclaration returns SysML::Class:
		//	isAbstract?='abstract'? 'Class' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'Class' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'Class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class ClassDeclarationCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDeclarationCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cSpecializationListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ClassDeclarationCompletion returns SysML::Class:
		//	name=Name
		//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//	SpecializationList?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name //  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SpecializationList?
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		////  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SpecializationList?
		public RuleCall getSpecializationListParserRuleCall_1() { return cSpecializationListParserRuleCall_1; }
	}
	public class SpecializationListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SpecializationList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecializesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipSuperclassingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipSuperclassingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		
		//fragment SpecializationList returns SysML::Class:
		//	'specializes' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'specializes' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*
		public Group getGroup() { return cGroup; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_0() { return cSpecializesKeyword_0; }
		
		//ownedRelationship+=Superclassing
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationshipSuperclassingParserRuleCall_1_0() { return cOwnedRelationshipSuperclassingParserRuleCall_1_0; }
		
		//(',' ownedRelationship+=Superclassing)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship+=Superclassing
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationshipSuperclassingParserRuleCall_2_1_0() { return cOwnedRelationshipSuperclassingParserRuleCall_2_1_0; }
	}
	public class SuperclassingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Superclassing");
		private final Assignment cSuperclassAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSuperclassClassCrossReference_0 = (CrossReference)cSuperclassAssignment.eContents().get(0);
		private final RuleCall cSuperclassClassQualifiedNameParserRuleCall_0_1 = (RuleCall)cSuperclassClassCrossReference_0.eContents().get(1);
		
		//Superclassing SysML::Superclassing:
		//	superclass=[SysML::Class|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//superclass=[SysML::Class|QualifiedName]
		public Assignment getSuperclassAssignment() { return cSuperclassAssignment; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getSuperclassClassCrossReference_0() { return cSuperclassClassCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSuperclassClassQualifiedNameParserRuleCall_0_1() { return cSuperclassClassQualifiedNameParserRuleCall_0_1; }
	}
	public class ObjectClassDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassDefinitionOrStub");
		private final RuleCall cObjectClassDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* OBJECT CLASSES */ ObjectClassDefinitionOrStub SysML::ObjectClass:
		//	ObjectClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ObjectClassDefinition
		public RuleCall getObjectClassDefinitionParserRuleCall() { return cObjectClassDefinitionParserRuleCall; }
	}
	public class ObjectClassDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cObjectClassDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ObjectClassDefinition returns SysML::ObjectClass:
		//	ObjectClassDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ObjectClassDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ObjectClassDeclaration
		public RuleCall getObjectClassDeclarationParserRuleCall_0() { return cObjectClassDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class ObjectClassDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ObjectClassDeclaration returns SysML::ObjectClass:
		//	isAbstract?='abstract'? 'class' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'class' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class ValueClassDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassDefinitionOrStub");
		private final RuleCall cValueClassDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* VALUE CLASSES (DATA TYPES) */ ValueClassDefinitionOrStub SysML::ValueClass:
		//	ValueClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueClassDefinition
		public RuleCall getValueClassDefinitionParserRuleCall() { return cValueClassDefinitionParserRuleCall; }
	}
	public class ValueClassDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueClassDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ValueClassDefinition returns SysML::ValueClass:
		//	ValueClassDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueClassDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ValueClassDeclaration
		public RuleCall getValueClassDeclarationParserRuleCall_0() { return cValueClassDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class ValueClassDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cDatatypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ValueClassDeclaration returns SysML::ValueClass:
		//	isAbstract?='abstract'? 'datatype' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'datatype' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_1() { return cDatatypeKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class AssociationDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDefinitionOrStub");
		private final RuleCall cAssociationDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* ASSOCIATIONS */ AssociationDefinitionOrStub SysML::Association:
		//	AssociationDefinition
		//	// AssociationDeclaration { isStub = ';' | AssociationBody }
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AssociationDefinition
		public RuleCall getAssociationDefinitionParserRuleCall() { return cAssociationDefinitionParserRuleCall; }
	}
	public class AssociationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAssociationDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment AssociationDefinition returns SysML::Association:
		//	AssociationDeclaration AssociationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//AssociationDeclaration AssociationBody
		public Group getGroup() { return cGroup; }
		
		//AssociationDeclaration
		public RuleCall getAssociationDeclarationParserRuleCall_0() { return cAssociationDeclarationParserRuleCall_0; }
		
		//AssociationBody
		public RuleCall getAssociationBodyParserRuleCall_1() { return cAssociationBodyParserRuleCall_1; }
	}
	public class AssociationDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cAssocKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment AssociationDeclaration returns SysML::Association:
		//	isAbstract?='abstract'? 'assoc' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'assoc' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'assoc'
		public Keyword getAssocKeyword_1() { return cAssocKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class AssociationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembershipAssociationMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembershipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedImportAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedImportPackageImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedImportAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AssociationBody returns SysML::Association:
		//	';' | '{' (ownedMembership+=AssociationMember | ownedImport+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedMembership+=AssociationMember | ownedImport+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedMembership+=AssociationMember | ownedImport+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedMembership+=AssociationMember | ownedImport+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership+=AssociationMember
		public Assignment getOwnedMembershipAssignment_1_1_0() { return cOwnedMembershipAssignment_1_1_0; }
		
		//AssociationMember
		public RuleCall getOwnedMembershipAssociationMemberParserRuleCall_1_1_0_0() { return cOwnedMembershipAssociationMemberParserRuleCall_1_1_0_0; }
		
		//ownedImport+=PackageImport
		public Assignment getOwnedImportAssignment_1_1_1() { return cOwnedImportAssignment_1_1_1; }
		
		//PackageImport
		public RuleCall getOwnedImportPackageImportParserRuleCall_1_1_1_0() { return cOwnedImportPackageImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AssociationMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureCategoryMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAssociationEndFeatureMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* ASSOCIATION MEMBERSHIPS */ AssociationMember SysML::Membership:
		//	NonFeatureCategoryMember | AssociationFeatureMember | AssociationEndFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureCategoryMember | AssociationFeatureMember | AssociationEndFeatureMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureCategoryMember
		public RuleCall getNonFeatureCategoryMemberParserRuleCall_0() { return cNonFeatureCategoryMemberParserRuleCall_0; }
		
		//AssociationFeatureMember
		public RuleCall getAssociationFeatureMemberParserRuleCall_1() { return cAssociationFeatureMemberParserRuleCall_1; }
		
		//AssociationEndFeatureMember
		public RuleCall getAssociationEndFeatureMemberParserRuleCall_2() { return cAssociationEndFeatureMemberParserRuleCall_2; }
	}
	public class AssociationFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFeatureMemberElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AssociationFeatureMember SysML::FeatureMembership:
		//	CategoryMemberPrefix FeatureMemberElement;
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix FeatureMemberElement
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//FeatureMemberElement
		public RuleCall getFeatureMemberElementParserRuleCall_1() { return cFeatureMemberElementParserRuleCall_1; }
	}
	public class AssociationEndFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationEndFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cEndKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Assignment cIsPartAssignment_1_0_1_0 = (Assignment)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cIsPartPartKeyword_1_0_1_0_0 = (Keyword)cIsPartAssignment_1_0_1_0.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_1_1 = (Assignment)cAlternatives_1_0_1.eContents().get(1);
		private final Keyword cIsPortPortKeyword_1_0_1_1_0 = (Keyword)cIsPortAssignment_1_0_1_1.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_2_0 = (RuleCall)cDirectionAssignment_1_0_2.eContents().get(0);
		private final Assignment cOwnedMemberFeatureAssignment_1_0_3 = (Assignment)cGroup_1_0.eContents().get(3);
		private final RuleCall cOwnedMemberFeatureFeatureDefinitionParserRuleCall_1_0_3_0 = (RuleCall)cOwnedMemberFeatureAssignment_1_0_3.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cEndKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsPartAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsPartPartKeyword_1_1_1_0 = (Keyword)cIsPartAssignment_1_1_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_2_0 = (RuleCall)cMemberNameAssignment_1_1_2.eContents().get(0);
		private final Keyword cIsKeyword_1_1_3 = (Keyword)cGroup_1_1.eContents().get(3);
		private final Assignment cMemberFeatureAssignment_1_1_4 = (Assignment)cGroup_1_1.eContents().get(4);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_1_4_0 = (CrossReference)cMemberFeatureAssignment_1_1_4.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_1_4_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_1_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_1_5 = (Keyword)cGroup_1_1.eContents().get(5);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cDirectionAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_2_0_0 = (RuleCall)cDirectionAssignment_1_2_0.eContents().get(0);
		private final Assignment cOwnedMemberFeatureAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureNamedFeatureDefinitionParserRuleCall_1_2_1_0 = (RuleCall)cOwnedMemberFeatureAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Assignment cMemberNameAssignment_1_3_0 = (Assignment)cGroup_1_3.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_3_0_0 = (RuleCall)cMemberNameAssignment_1_3_0.eContents().get(0);
		private final Keyword cIsKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_3_2_0 = (CrossReference)cMemberFeatureAssignment_1_3_2.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_3_2_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_3_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_3_3 = (Keyword)cGroup_1_3.eContents().get(3);
		
		//AssociationEndFeatureMember SysML::EndFeatureMembership:
		//	CategoryMemberPrefix ('end' (isPart?='part' | isPort?='port')? direction=FeatureDirection?
		//	ownedMemberFeature=FeatureDefinition
		//	| 'end' isPart?='part' memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		//	// These alternatives are provided for legacy Alf backwards compatibility;
		//	| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition
		//	| memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix ('end' (isPart?='part' | isPort?='port')? direction=FeatureDirection?
		//ownedMemberFeature=FeatureDefinition | 'end' isPart?='part' memberName=Name? 'is'
		//memberFeature=[SysML::Feature|QualifiedName] ';' // These alternatives are provided for legacy Alf backwards compatibility;
		//| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition | memberName=Name 'is'
		//memberFeature=[SysML::Feature|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//'end' (isPart?='part' | isPort?='port')? direction=FeatureDirection? ownedMemberFeature=FeatureDefinition | 'end'
		//isPart?='part' memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';' // These alternatives are provided for legacy Alf backwards compatibility;
		//| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition | memberName=Name 'is'
		//memberFeature=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'end' (isPart?='part' | isPort?='port')? direction=FeatureDirection? ownedMemberFeature=FeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_0_0() { return cEndKeyword_1_0_0; }
		
		//(isPart?='part' | isPort?='port')?
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_1_0_1_0() { return cIsPartAssignment_1_0_1_0; }
		
		//'part'
		public Keyword getIsPartPartKeyword_1_0_1_0_0() { return cIsPartPartKeyword_1_0_1_0_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_1_1() { return cIsPortAssignment_1_0_1_1; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_1_1_0() { return cIsPortPortKeyword_1_0_1_1_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_2() { return cDirectionAssignment_1_0_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_2_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_2_0; }
		
		//ownedMemberFeature=FeatureDefinition
		public Assignment getOwnedMemberFeatureAssignment_1_0_3() { return cOwnedMemberFeatureAssignment_1_0_3; }
		
		//FeatureDefinition
		public RuleCall getOwnedMemberFeatureFeatureDefinitionParserRuleCall_1_0_3_0() { return cOwnedMemberFeatureFeatureDefinitionParserRuleCall_1_0_3_0; }
		
		//'end' isPart?='part' memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'end'
		public Keyword getEndKeyword_1_1_0() { return cEndKeyword_1_1_0; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_1_1_1() { return cIsPartAssignment_1_1_1; }
		
		//'part'
		public Keyword getIsPartPartKeyword_1_1_1_0() { return cIsPartPartKeyword_1_1_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1_2() { return cMemberNameAssignment_1_1_2; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_2_0() { return cMemberNameNameParserRuleCall_1_1_2_0; }
		
		//'is'
		public Keyword getIsKeyword_1_1_3() { return cIsKeyword_1_1_3; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_1_4() { return cMemberFeatureAssignment_1_1_4; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_1_4_0() { return cMemberFeatureFeatureCrossReference_1_1_4_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_1_4_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_1_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_1_5() { return cSemicolonKeyword_1_1_5; }
		
		//direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_2_0() { return cDirectionAssignment_1_2_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_2_0_0() { return cDirectionFeatureDirectionEnumRuleCall_1_2_0_0; }
		
		//ownedMemberFeature=NamedFeatureDefinition
		public Assignment getOwnedMemberFeatureAssignment_1_2_1() { return cOwnedMemberFeatureAssignment_1_2_1; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedMemberFeatureNamedFeatureDefinitionParserRuleCall_1_2_1_0() { return cOwnedMemberFeatureNamedFeatureDefinitionParserRuleCall_1_2_1_0; }
		
		//memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_3_0() { return cMemberNameAssignment_1_3_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_3_0_0() { return cMemberNameNameParserRuleCall_1_3_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_3_1() { return cIsKeyword_1_3_1; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_3_2() { return cMemberFeatureAssignment_1_3_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_3_2_0() { return cMemberFeatureFeatureCrossReference_1_3_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_3_2_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_3_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_3_3() { return cSemicolonKeyword_1_3_3; }
	}
	public class BehaviorDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorDefinitionOrStub");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBehaviorDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		///* BEHAVIORS */ BehaviorDefinitionOrStub SysML::Behavior:
		//	BehaviorDeclaration ';';
		@Override public ParserRule getRule() { return rule; }
		
		////	BehaviorDefinition |
		//BehaviorDeclaration ';'
		public Group getGroup() { return cGroup; }
		
		////	BehaviorDefinition |
		//BehaviorDeclaration
		public RuleCall getBehaviorDeclarationParserRuleCall_0() { return cBehaviorDeclarationParserRuleCall_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class BehaviorDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cBehaviorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSpecializationListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//fragment BehaviorDeclaration returns SysML::Behavior:
		//	isAbstract?='abstract'? 'behavior' name=Name ParameterList SpecializationList?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'behavior' name=Name ParameterList SpecializationList?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'behavior'
		public Keyword getBehaviorKeyword_1() { return cBehaviorKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_3() { return cParameterListParserRuleCall_3; }
		
		//SpecializationList?
		public RuleCall getSpecializationListParserRuleCall_4() { return cSpecializationListParserRuleCall_4; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedMembershipParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedMembershipAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedMembershipParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMembershipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ParameterList returns SysML::Behavior:
		//	'(' (ownedMembership+=ParameterMember (',' ownedMembership+=ParameterMember)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedMembership+=ParameterMember (',' ownedMembership+=ParameterMember)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedMembership+=ParameterMember (',' ownedMembership+=ParameterMember)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedMembership+=ParameterMember
		public Assignment getOwnedMembershipAssignment_1_0() { return cOwnedMembershipAssignment_1_0; }
		
		//ParameterMember
		public RuleCall getOwnedMembershipParameterMemberParserRuleCall_1_0_0() { return cOwnedMembershipParameterMemberParserRuleCall_1_0_0; }
		
		//(',' ownedMembership+=ParameterMember)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedMembership+=ParameterMember
		public Assignment getOwnedMembershipAssignment_1_1_1() { return cOwnedMembershipAssignment_1_1_1; }
		
		//ParameterMember
		public RuleCall getOwnedMembershipParameterMemberParserRuleCall_1_1_1_0() { return cOwnedMembershipParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_0 = (RuleCall)cMemberNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeatureParameterDefinitionParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeatureAssignment_2.eContents().get(0);
		
		///* BEHAVIOR MEMBERSHIPS */ ParameterMember SysML::FeatureMembership:
		//	direction=FeatureDirection? memberName=Name ownedMemberFeature=ParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? memberName=Name ownedMemberFeature=ParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1() { return cMemberNameAssignment_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_0() { return cMemberNameNameParserRuleCall_1_0; }
		
		//ownedMemberFeature=ParameterDefinition
		public Assignment getOwnedMemberFeatureAssignment_2() { return cOwnedMemberFeatureAssignment_2; }
		
		//ParameterDefinition
		public RuleCall getOwnedMemberFeatureParameterDefinitionParserRuleCall_2_0() { return cOwnedMemberFeatureParameterDefinitionParserRuleCall_2_0; }
	}
	public class FunctionDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FunctionDefinitionOrStub");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFunctionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		///* FUNCTIONS */ FunctionDefinitionOrStub SysML::Function:
		//	FunctionDeclaration ';';
		@Override public ParserRule getRule() { return rule; }
		
		////	FunctionDefinition |
		//FunctionDeclaration ';'
		public Group getGroup() { return cGroup; }
		
		////	FunctionDefinition |
		//FunctionDeclaration
		public RuleCall getFunctionDeclarationParserRuleCall_0() { return cFunctionDeclarationParserRuleCall_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class FunctionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FunctionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cFunctionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cReturnParameterPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSpecializationListParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//fragment FunctionDeclaration returns SysML::Function:
		//	isAbstract?='abstract'? 'function' name=Name ParameterList ReturnParameterPart SpecializationList?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'function' name=Name ParameterList ReturnParameterPart SpecializationList?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'function'
		public Keyword getFunctionKeyword_1() { return cFunctionKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_3() { return cParameterListParserRuleCall_3; }
		
		//ReturnParameterPart
		public RuleCall getReturnParameterPartParserRuleCall_4() { return cReturnParameterPartParserRuleCall_4; }
		
		//SpecializationList?
		public RuleCall getSpecializationListParserRuleCall_5() { return cSpecializationListParserRuleCall_5; }
	}
	public class ReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ReturnParameterPart");
		private final Assignment cOwnedMembershipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMembershipReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedMembershipAssignment.eContents().get(0);
		
		//fragment ReturnParameterPart returns SysML::Function:
		//	ownedMembership+=ReturnParameterMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership+=ReturnParameterMember
		public Assignment getOwnedMembershipAssignment() { return cOwnedMembershipAssignment; }
		
		//ReturnParameterMember
		public RuleCall getOwnedMembershipReturnParameterMemberParserRuleCall_0() { return cOwnedMembershipReturnParameterMemberParserRuleCall_0; }
	}
	public class ReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ReturnParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberFeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureParameterDefinitionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeatureAssignment_1.eContents().get(0);
		
		///* FUNCTION MEMBERSHIPS */ ReturnParameterMember SysML::FeatureMembership:
		//	memberName=Name? ownedMemberFeature=ParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name? ownedMemberFeature=ParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//ownedMemberFeature=ParameterDefinition
		public Assignment getOwnedMemberFeatureAssignment_1() { return cOwnedMemberFeatureAssignment_1; }
		
		//ParameterDefinition
		public RuleCall getOwnedMemberFeatureParameterDefinitionParserRuleCall_1_0() { return cOwnedMemberFeatureParameterDefinitionParserRuleCall_1_0; }
	}
	public class FeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamedFeatureDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUnnamedFeatureDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* FEATURES */ FeatureDefinition SysML::Feature:
		//	NamedFeatureDefinition | UnnamedFeatureDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//NamedFeatureDefinition | UnnamedFeatureDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NamedFeatureDefinition
		public RuleCall getNamedFeatureDefinitionParserRuleCall_0() { return cNamedFeatureDefinitionParserRuleCall_0; }
		
		//UnnamedFeatureDefinition
		public RuleCall getUnnamedFeatureDefinitionParserRuleCall_1() { return cUnnamedFeatureDefinitionParserRuleCall_1; }
	}
	public class NamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFeatureDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFeatureCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//NamedFeatureDefinition SysML::Feature:
		//	FeatureDeclaration FeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureDeclaration FeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall_0() { return cFeatureDeclarationParserRuleCall_0; }
		
		//FeatureCompletion
		public RuleCall getFeatureCompletionParserRuleCall_1() { return cFeatureCompletionParserRuleCall_1; }
	}
	public class UnnamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnnamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cFeatureCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//UnnamedFeatureDefinition SysML::Feature:
		//	'redefines' ownedRelationship+=Redefinition TypePart
		//	FeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart FeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2() { return cTypePartParserRuleCall_2; }
		
		//FeatureCompletion
		public RuleCall getFeatureCompletionParserRuleCall_3() { return cFeatureCompletionParserRuleCall_3; }
	}
	public class FeatureBodyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureBodyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFeatureDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cFeatureCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment FeatureBodyDefinition returns SysML::Feature:
		//	'feature' FeatureDeclaration FeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//'feature' FeatureDeclaration FeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//'feature'
		public Keyword getFeatureKeyword_0() { return cFeatureKeyword_0; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall_1() { return cFeatureDeclarationParserRuleCall_1; }
		
		//FeatureCompletion
		public RuleCall getFeatureCompletionParserRuleCall_2() { return cFeatureCompletionParserRuleCall_2; }
	}
	public class FeatureDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cSubsettingPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment FeatureDeclaration returns SysML::Feature:
		//	name=Name TypePart SubsettingPart;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name TypePart SubsettingPart
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_1() { return cTypePartParserRuleCall_1; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_2() { return cSubsettingPartParserRuleCall_2; }
	}
	public class FeatureCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cValuationAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cValuationFeatureValueParserRuleCall_0_1_0 = (RuleCall)cValuationAssignment_0_1.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment FeatureCompletion returns SysML::Feature:
		//	('=' valuation=FeatureValue)? CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//('=' valuation=FeatureValue)? CategoryBody
		public Group getGroup() { return cGroup; }
		
		//('=' valuation=FeatureValue)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_0() { return cEqualsSignKeyword_0_0; }
		
		//valuation=FeatureValue
		public Assignment getValuationAssignment_0_1() { return cValuationAssignment_0_1; }
		
		//FeatureValue
		public RuleCall getValuationFeatureValueParserRuleCall_0_1_0() { return cValuationFeatureValueParserRuleCall_0_1_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueExpressionParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//FeatureValue SysML::FeatureValue:
		//	value=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//value=Expression
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Expression
		public RuleCall getValueExpressionParserRuleCall_0() { return cValueExpressionParserRuleCall_0; }
	}
	public class TypePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.TypePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cIsCompositeComposeKeyword_0_1_0 = (Keyword)cIsCompositeAssignment_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_2_0 = (Assignment)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0_2_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_2_0.eContents().get(0);
		private final Keyword cAnyKeyword_0_2_1 = (Keyword)cAlternatives_0_2.eContents().get(1);
		private final Assignment cMultiplicityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_1_0 = (RuleCall)cMultiplicityAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIsOrderedAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_2_0_0 = (Keyword)cIsOrderedAssignment_2_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_2_1_0 = (Keyword)cIsNonuniqueAssignment_2_1.eContents().get(0);
		
		//fragment TypePart returns SysML::Feature:
		//	(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))?
		//	multiplicity=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
		@Override public ParserRule getRule() { return rule; }
		
		//(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))? multiplicity=Multiplicity?
		//(isOrdered?='ordered'? & isNonunique?='nonunique'?)
		public Group getGroup() { return cGroup; }
		
		//(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))?
		public Group getGroup_0() { return cGroup_0; }
		
		//':'
		public Keyword getColonKeyword_0_0() { return cColonKeyword_0_0; }
		
		//isComposite?='compose'?
		public Assignment getIsCompositeAssignment_0_1() { return cIsCompositeAssignment_0_1; }
		
		//'compose'
		public Keyword getIsCompositeComposeKeyword_0_1_0() { return cIsCompositeComposeKeyword_0_1_0; }
		
		//ownedRelationship+=FeatureTyping | 'any'
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment_0_2_0() { return cOwnedRelationshipAssignment_0_2_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0_2_0_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0_2_0_0; }
		
		//'any'
		public Keyword getAnyKeyword_0_2_1() { return cAnyKeyword_0_2_1; }
		
		//multiplicity=Multiplicity?
		public Assignment getMultiplicityAssignment_1() { return cMultiplicityAssignment_1; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_1_0() { return cMultiplicityMultiplicityParserRuleCall_1_0; }
		
		//isOrdered?='ordered'? & isNonunique?='nonunique'?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//isOrdered?='ordered'?
		public Assignment getIsOrderedAssignment_2_0() { return cIsOrderedAssignment_2_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_2_0_0() { return cIsOrderedOrderedKeyword_2_0_0; }
		
		//isNonunique?='nonunique'?
		public Assignment getIsNonuniqueAssignment_2_1() { return cIsNonuniqueAssignment_2_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_2_1_0() { return cIsNonuniqueNonuniqueKeyword_2_1_0; }
	}
	public class FeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeCategoryCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeCategoryQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeCategoryCrossReference_0.eContents().get(1);
		
		//FeatureTyping SysML::FeatureTyping:
		//	type=[SysML::Category|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Category|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Category|QualifiedName]
		public CrossReference getTypeCategoryCrossReference_0() { return cTypeCategoryCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeCategoryQualifiedNameParserRuleCall_0_1() { return cTypeCategoryQualifiedNameParserRuleCall_0_1; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Multiplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cLowerAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cLowerNaturalLiteralExpressionParserRuleCall_1_0_0 = (RuleCall)cLowerAssignment_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cUpperAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_2_0 = (RuleCall)cUpperAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Multiplicity SysML::Multiplicity:
		//	'[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(lower=NaturalLiteralExpression '..')?
		public Group getGroup_1() { return cGroup_1; }
		
		//lower=NaturalLiteralExpression
		public Assignment getLowerAssignment_1_0() { return cLowerAssignment_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getLowerNaturalLiteralExpressionParserRuleCall_1_0_0() { return cLowerNaturalLiteralExpressionParserRuleCall_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1() { return cFullStopFullStopKeyword_1_1; }
		
		//upper=UnlimitedNaturalLiteralExpression
		public Assignment getUpperAssignment_2() { return cUpperAssignment_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUpperUnlimitedNaturalLiteralExpressionParserRuleCall_2_0() { return cUpperUnlimitedNaturalLiteralExpressionParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class SubsettingPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SubsettingPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cSubsetsParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		
		//fragment SubsettingPart returns SysML::Feature:
		//	(Subsets (',' ownedRelationship+=Subset)*
		//	| Redefines (',' ownedRelationship+=Redefinition)*)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(Subsets (',' ownedRelationship+=Subset)* | Redefines (',' ownedRelationship+=Redefinition)*)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Subsets (',' ownedRelationship+=Subset)*
		public Group getGroup_0() { return cGroup_0; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_0_0() { return cSubsetsParserRuleCall_0_0; }
		
		//(',' ownedRelationship+=Subset)*
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1_0() { return cCommaKeyword_0_1_0; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_0_1_1() { return cOwnedRelationshipAssignment_0_1_1; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_0_1_1_0() { return cOwnedRelationshipSubsetParserRuleCall_0_1_1_0; }
		
		//Redefines (',' ownedRelationship+=Redefinition)*
		public Group getGroup_1() { return cGroup_1; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_1_0() { return cRedefinesParserRuleCall_1_0; }
		
		//(',' ownedRelationship+=Redefinition)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0; }
	}
	public class SubsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Subsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubsetsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Subsets returns SysML::Feature:
		//	'subsets' ownedRelationship+=Subset;
		@Override public ParserRule getRule() { return rule; }
		
		//'subsets' ownedRelationship+=Subset
		public Group getGroup() { return cGroup; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_0() { return cSubsetsKeyword_0; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_1_0() { return cOwnedRelationshipSubsetParserRuleCall_1_0; }
	}
	public class SubsetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Subset");
		private final Assignment cSubsettedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0 = (CrossReference)cSubsettedFeatureAssignment.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Subset SysML::Subsetting:
		//	subsettedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//subsettedFeature=[SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment() { return cSubsettedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0() { return cSubsettedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class RedefinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Redefines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Redefines returns SysML::Feature:
		//	'redefines' ownedRelationship+=Redefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
	}
	public class RedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Redefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Redefinition SysML::Redefinition:
		//	redefinedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature=[SysML::Feature|QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class ConnectorDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_0_0 = (Group)cGroup_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_0_0 = (Assignment)cGroup_0_0_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0_0_0 = (RuleCall)cNameAssignment_0_0_0_0.eContents().get(0);
		private final Group cGroup_0_0_0_1 = (Group)cGroup_0_0_0.eContents().get(1);
		private final Keyword cColonKeyword_0_0_0_1_0 = (Keyword)cGroup_0_0_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0_0_1_1 = (Assignment)cGroup_0_0_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorTypingParserRuleCall_0_0_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_0_1_1.eContents().get(0);
		private final Keyword cIsKeyword_0_0_0_2 = (Keyword)cGroup_0_0_0.eContents().get(2);
		private final Assignment cConnectorEndAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cConnectorEndConnectorEndParserRuleCall_0_0_1_0 = (RuleCall)cConnectorEndAssignment_0_0_1.eContents().get(0);
		private final Keyword cToKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cConnectorEndAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cConnectorEndConnectorEndParserRuleCall_0_0_3_0 = (RuleCall)cConnectorEndAssignment_0_0_3.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Assignment cNameAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_1_0_0 = (RuleCall)cNameAssignment_0_1_0.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cGroup_0_1.eContents().get(1);
		private final Keyword cColonKeyword_0_1_1_0 = (Keyword)cGroup_0_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1_1_1 = (Assignment)cGroup_0_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorTypingParserRuleCall_0_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_1_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Assignment cConnectorEndAssignment_0_1_3 = (Assignment)cGroup_0_1.eContents().get(3);
		private final RuleCall cConnectorEndConnectorEndParserRuleCall_0_1_3_0 = (RuleCall)cConnectorEndAssignment_0_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_1_4 = (Keyword)cGroup_0_1.eContents().get(4);
		private final Assignment cConnectorEndAssignment_0_1_5 = (Assignment)cGroup_0_1.eContents().get(5);
		private final RuleCall cConnectorEndConnectorEndParserRuleCall_0_1_5_0 = (RuleCall)cConnectorEndAssignment_0_1_5.eContents().get(0);
		private final Group cGroup_0_1_6 = (Group)cGroup_0_1.eContents().get(6);
		private final Keyword cCommaKeyword_0_1_6_0 = (Keyword)cGroup_0_1_6.eContents().get(0);
		private final Assignment cConnectorEndAssignment_0_1_6_1 = (Assignment)cGroup_0_1_6.eContents().get(1);
		private final RuleCall cConnectorEndConnectorEndParserRuleCall_0_1_6_1_0 = (RuleCall)cConnectorEndAssignment_0_1_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_1_7 = (Keyword)cGroup_0_1.eContents().get(7);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* CONNECTORS */ ConnectorDefinition SysML::Connector:
		//	((name=Name? (':' ownedRelationship+=ConnectorTyping)? 'is')?
		//	connectorEnd+=ConnectorEnd 'to' connectorEnd+=ConnectorEnd
		//	| name=Name? (':' ownedRelationship+=ConnectorTyping)?
		//	'(' connectorEnd+=ConnectorEnd ',' connectorEnd+=ConnectorEnd (',' connectorEnd+=ConnectorEnd)*
		//	')') CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//((name=Name? (':' ownedRelationship+=ConnectorTyping)? 'is')? connectorEnd+=ConnectorEnd 'to' connectorEnd+=ConnectorEnd
		//| name=Name? (':' ownedRelationship+=ConnectorTyping)? '(' connectorEnd+=ConnectorEnd ',' connectorEnd+=ConnectorEnd
		//(',' connectorEnd+=ConnectorEnd)* ')') CategoryBody
		public Group getGroup() { return cGroup; }
		
		//(name=Name? (':' ownedRelationship+=ConnectorTyping)? 'is')? connectorEnd+=ConnectorEnd 'to' connectorEnd+=ConnectorEnd
		//| name=Name? (':' ownedRelationship+=ConnectorTyping)? '(' connectorEnd+=ConnectorEnd ',' connectorEnd+=ConnectorEnd
		//(',' connectorEnd+=ConnectorEnd)* ')'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//(name=Name? (':' ownedRelationship+=ConnectorTyping)? 'is')? connectorEnd+=ConnectorEnd 'to' connectorEnd+=ConnectorEnd
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//(name=Name? (':' ownedRelationship+=ConnectorTyping)? 'is')?
		public Group getGroup_0_0_0() { return cGroup_0_0_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0_0_0() { return cNameAssignment_0_0_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0_0_0() { return cNameNameParserRuleCall_0_0_0_0_0; }
		
		//(':' ownedRelationship+=ConnectorTyping)?
		public Group getGroup_0_0_0_1() { return cGroup_0_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_0_0_0_1_0() { return cColonKeyword_0_0_0_1_0; }
		
		//ownedRelationship+=ConnectorTyping
		public Assignment getOwnedRelationshipAssignment_0_0_0_1_1() { return cOwnedRelationshipAssignment_0_0_0_1_1; }
		
		//ConnectorTyping
		public RuleCall getOwnedRelationshipConnectorTypingParserRuleCall_0_0_0_1_1_0() { return cOwnedRelationshipConnectorTypingParserRuleCall_0_0_0_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_0_0_0_2() { return cIsKeyword_0_0_0_2; }
		
		//connectorEnd+=ConnectorEnd
		public Assignment getConnectorEndAssignment_0_0_1() { return cConnectorEndAssignment_0_0_1; }
		
		//ConnectorEnd
		public RuleCall getConnectorEndConnectorEndParserRuleCall_0_0_1_0() { return cConnectorEndConnectorEndParserRuleCall_0_0_1_0; }
		
		//'to'
		public Keyword getToKeyword_0_0_2() { return cToKeyword_0_0_2; }
		
		//connectorEnd+=ConnectorEnd
		public Assignment getConnectorEndAssignment_0_0_3() { return cConnectorEndAssignment_0_0_3; }
		
		//ConnectorEnd
		public RuleCall getConnectorEndConnectorEndParserRuleCall_0_0_3_0() { return cConnectorEndConnectorEndParserRuleCall_0_0_3_0; }
		
		//name=Name? (':' ownedRelationship+=ConnectorTyping)? '(' connectorEnd+=ConnectorEnd ',' connectorEnd+=ConnectorEnd (','
		//connectorEnd+=ConnectorEnd)* ')'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//name=Name?
		public Assignment getNameAssignment_0_1_0() { return cNameAssignment_0_1_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_1_0_0() { return cNameNameParserRuleCall_0_1_0_0; }
		
		//(':' ownedRelationship+=ConnectorTyping)?
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }
		
		//':'
		public Keyword getColonKeyword_0_1_1_0() { return cColonKeyword_0_1_1_0; }
		
		//ownedRelationship+=ConnectorTyping
		public Assignment getOwnedRelationshipAssignment_0_1_1_1() { return cOwnedRelationshipAssignment_0_1_1_1; }
		
		//ConnectorTyping
		public RuleCall getOwnedRelationshipConnectorTypingParserRuleCall_0_1_1_1_0() { return cOwnedRelationshipConnectorTypingParserRuleCall_0_1_1_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1_2() { return cLeftParenthesisKeyword_0_1_2; }
		
		//connectorEnd+=ConnectorEnd
		public Assignment getConnectorEndAssignment_0_1_3() { return cConnectorEndAssignment_0_1_3; }
		
		//ConnectorEnd
		public RuleCall getConnectorEndConnectorEndParserRuleCall_0_1_3_0() { return cConnectorEndConnectorEndParserRuleCall_0_1_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_1_4() { return cCommaKeyword_0_1_4; }
		
		//connectorEnd+=ConnectorEnd
		public Assignment getConnectorEndAssignment_0_1_5() { return cConnectorEndAssignment_0_1_5; }
		
		//ConnectorEnd
		public RuleCall getConnectorEndConnectorEndParserRuleCall_0_1_5_0() { return cConnectorEndConnectorEndParserRuleCall_0_1_5_0; }
		
		//(',' connectorEnd+=ConnectorEnd)*
		public Group getGroup_0_1_6() { return cGroup_0_1_6; }
		
		//','
		public Keyword getCommaKeyword_0_1_6_0() { return cCommaKeyword_0_1_6_0; }
		
		//connectorEnd+=ConnectorEnd
		public Assignment getConnectorEndAssignment_0_1_6_1() { return cConnectorEndAssignment_0_1_6_1; }
		
		//ConnectorEnd
		public RuleCall getConnectorEndConnectorEndParserRuleCall_0_1_6_1_0() { return cConnectorEndConnectorEndParserRuleCall_0_1_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_1_7() { return cRightParenthesisKeyword_0_1_7; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class ConnectorTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeAssociationCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeAssociationQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeAssociationCrossReference_0.eContents().get(1);
		
		//ConnectorTyping SysML::FeatureTyping:
		//	type=[SysML::Association|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Association|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Association|QualifiedName]
		public CrossReference getTypeAssociationCrossReference_0() { return cTypeAssociationCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeAssociationQualifiedNameParserRuleCall_0_1() { return cTypeAssociationQualifiedNameParserRuleCall_0_1; }
	}
	public class ConnectorEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorEnd");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Assignment cEndAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final CrossReference cEndFeatureCrossReference_0_0_0_0 = (CrossReference)cEndAssignment_0_0_0.eContents().get(0);
		private final RuleCall cEndFeatureQualifiedNameParserRuleCall_0_0_0_0_1 = (RuleCall)cEndFeatureCrossReference_0_0_0_0.eContents().get(1);
		private final Keyword cColonKeyword_0_0_1 = (Keyword)cGroup_0_0.eContents().get(1);
		private final Assignment cFeatureAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cFeatureFeatureCrossReference_0_1_0 = (CrossReference)cFeatureAssignment_0_1.eContents().get(0);
		private final RuleCall cFeatureFeatureQualifiedNameParserRuleCall_0_1_0_1 = (RuleCall)cFeatureFeatureCrossReference_0_1_0.eContents().get(1);
		private final Assignment cMultiplicityAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_0_2_0 = (RuleCall)cMultiplicityAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Assignment cEndAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final CrossReference cEndFeatureCrossReference_1_0_0_0 = (CrossReference)cEndAssignment_1_0_0.eContents().get(0);
		private final RuleCall cEndFeatureQualifiedNameParserRuleCall_1_0_0_0_1 = (RuleCall)cEndFeatureCrossReference_1_0_0_0.eContents().get(1);
		private final Assignment cMultiplicityAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_1_0_1_0 = (RuleCall)cMultiplicityAssignment_1_0_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_0_2 = (Keyword)cGroup_1_0.eContents().get(2);
		private final Assignment cFeatureAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cFeatureFeatureCrossReference_1_1_0 = (CrossReference)cFeatureAssignment_1_1.eContents().get(0);
		private final RuleCall cFeatureFeatureQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cFeatureFeatureCrossReference_1_1_0.eContents().get(1);
		
		//ConnectorEnd SysML::ConnectorEnd:
		//	(end=[SysML::Feature|QualifiedName] ':')?
		//	feature=[SysML::Feature|QualifiedName] multiplicity=Multiplicity?
		//	| (end=[SysML::Feature|QualifiedName] multiplicity=Multiplicity? '=>') feature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//(end=[SysML::Feature|QualifiedName] ':')? feature=[SysML::Feature|QualifiedName] multiplicity=Multiplicity? |
		//(end=[SysML::Feature|QualifiedName] multiplicity=Multiplicity? '=>') feature=[SysML::Feature|QualifiedName]
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(end=[SysML::Feature|QualifiedName] ':')? feature=[SysML::Feature|QualifiedName] multiplicity=Multiplicity?
		public Group getGroup_0() { return cGroup_0; }
		
		//(end=[SysML::Feature|QualifiedName] ':')?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//end=[SysML::Feature|QualifiedName]
		public Assignment getEndAssignment_0_0_0() { return cEndAssignment_0_0_0; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getEndFeatureCrossReference_0_0_0_0() { return cEndFeatureCrossReference_0_0_0_0; }
		
		//QualifiedName
		public RuleCall getEndFeatureQualifiedNameParserRuleCall_0_0_0_0_1() { return cEndFeatureQualifiedNameParserRuleCall_0_0_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_0_0_1() { return cColonKeyword_0_0_1; }
		
		//feature=[SysML::Feature|QualifiedName]
		public Assignment getFeatureAssignment_0_1() { return cFeatureAssignment_0_1; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getFeatureFeatureCrossReference_0_1_0() { return cFeatureFeatureCrossReference_0_1_0; }
		
		//QualifiedName
		public RuleCall getFeatureFeatureQualifiedNameParserRuleCall_0_1_0_1() { return cFeatureFeatureQualifiedNameParserRuleCall_0_1_0_1; }
		
		//multiplicity=Multiplicity?
		public Assignment getMultiplicityAssignment_0_2() { return cMultiplicityAssignment_0_2; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_0_2_0() { return cMultiplicityMultiplicityParserRuleCall_0_2_0; }
		
		//(end=[SysML::Feature|QualifiedName] multiplicity=Multiplicity? '=>') feature=[SysML::Feature|QualifiedName]
		public Group getGroup_1() { return cGroup_1; }
		
		//end=[SysML::Feature|QualifiedName] multiplicity=Multiplicity? '=>'
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//end=[SysML::Feature|QualifiedName]
		public Assignment getEndAssignment_1_0_0() { return cEndAssignment_1_0_0; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getEndFeatureCrossReference_1_0_0_0() { return cEndFeatureCrossReference_1_0_0_0; }
		
		//QualifiedName
		public RuleCall getEndFeatureQualifiedNameParserRuleCall_1_0_0_0_1() { return cEndFeatureQualifiedNameParserRuleCall_1_0_0_0_1; }
		
		//multiplicity=Multiplicity?
		public Assignment getMultiplicityAssignment_1_0_1() { return cMultiplicityAssignment_1_0_1; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_1_0_1_0() { return cMultiplicityMultiplicityParserRuleCall_1_0_1_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1_0_2() { return cEqualsSignGreaterThanSignKeyword_1_0_2; }
		
		//feature=[SysML::Feature|QualifiedName]
		public Assignment getFeatureAssignment_1_1() { return cFeatureAssignment_1_1; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getFeatureFeatureCrossReference_1_1_0() { return cFeatureFeatureCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getFeatureFeatureQualifiedNameParserRuleCall_1_1_0_1() { return cFeatureFeatureQualifiedNameParserRuleCall_1_1_0_1; }
	}
	public class ParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ParameterDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cSubsetsParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cRedefinesParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		///* PARAMETERS */ ParameterDefinition SysML::Parameter:
		//	TypePart (Subsets | Redefines)*;
		@Override public ParserRule getRule() { return rule; }
		
		//TypePart (Subsets | Redefines)*
		public Group getGroup() { return cGroup; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_0() { return cTypePartParserRuleCall_0; }
		
		//(Subsets | Redefines)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_1_0() { return cSubsetsParserRuleCall_1_0; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_1_1() { return cRedefinesParserRuleCall_1_1; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Expression");
		private final RuleCall cBinaryExpressionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* EXPRESSIONS */ Expression SysML::Expression:
		//	BinaryExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//BinaryExpression
		public RuleCall getBinaryExpressionParserRuleCall() { return cBinaryExpressionParserRuleCall; }
	}
	public class BinaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cBinaryTermParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//BinaryExpression SysML::Expression:
		//	UnaryExpression BinaryTerm*;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryExpression BinaryTerm*
		public Group getGroup() { return cGroup; }
		
		//UnaryExpression
		public RuleCall getUnaryExpressionParserRuleCall_0() { return cUnaryExpressionParserRuleCall_0; }
		
		//BinaryTerm*
		public RuleCall getBinaryTermParserRuleCall_1() { return cBinaryTermParserRuleCall_1; }
	}
	public class BinaryTermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryTerm");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedMembershipBinaryOperatorMemberParserRuleCall_0_0_0 = (RuleCall)cOwnedMembershipAssignment_0_0.eContents().get(0);
		private final RuleCall cUnaryExpressionParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedMembershipUnitOperatorMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedMembershipAssignment_1_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedMembershipExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedMembershipAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment BinaryTerm returns SysML::Expression:
		//	ownedMembership+=BinaryOperatorMember UnaryExpression
		//	| ownedMembership+=UnitOperatorMember '[' ownedMembership+=ExpressionMember ']';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership+=BinaryOperatorMember UnaryExpression | ownedMembership+=UnitOperatorMember '['
		//ownedMembership+=ExpressionMember ']'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedMembership+=BinaryOperatorMember UnaryExpression
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedMembership+=BinaryOperatorMember
		public Assignment getOwnedMembershipAssignment_0_0() { return cOwnedMembershipAssignment_0_0; }
		
		//BinaryOperatorMember
		public RuleCall getOwnedMembershipBinaryOperatorMemberParserRuleCall_0_0_0() { return cOwnedMembershipBinaryOperatorMemberParserRuleCall_0_0_0; }
		
		//UnaryExpression
		public RuleCall getUnaryExpressionParserRuleCall_0_1() { return cUnaryExpressionParserRuleCall_0_1; }
		
		//ownedMembership+=UnitOperatorMember '[' ownedMembership+=ExpressionMember ']'
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedMembership+=UnitOperatorMember
		public Assignment getOwnedMembershipAssignment_1_0() { return cOwnedMembershipAssignment_1_0; }
		
		//UnitOperatorMember
		public RuleCall getOwnedMembershipUnitOperatorMemberParserRuleCall_1_0_0() { return cOwnedMembershipUnitOperatorMemberParserRuleCall_1_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_1() { return cLeftSquareBracketKeyword_1_1; }
		
		//ownedMembership+=ExpressionMember
		public Assignment getOwnedMembershipAssignment_1_2() { return cOwnedMembershipAssignment_1_2; }
		
		//ExpressionMember
		public RuleCall getOwnedMembershipExpressionMemberParserRuleCall_1_2_0() { return cOwnedMembershipExpressionMemberParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
	}
	public class BinaryOperatorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryOperatorExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipBinaryOperatorFunctionParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//BinaryOperatorExpression SysML::Expression:
		//	ownedRelationship+=BinaryOperatorFunction;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=BinaryOperatorFunction
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//BinaryOperatorFunction
		public RuleCall getOwnedRelationshipBinaryOperatorFunctionParserRuleCall_0() { return cOwnedRelationshipBinaryOperatorFunctionParserRuleCall_0; }
	}
	public class BinaryOperatorFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryOperatorFunction");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeFunctionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeFunctionBinaryOperatorParserRuleCall_0_1 = (RuleCall)cTypeFunctionCrossReference_0.eContents().get(1);
		
		//BinaryOperatorFunction SysML::FeatureTyping:
		//	type=[SysML::Function|BinaryOperator];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Function|BinaryOperator]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Function|BinaryOperator]
		public CrossReference getTypeFunctionCrossReference_0() { return cTypeFunctionCrossReference_0; }
		
		//BinaryOperator
		public RuleCall getTypeFunctionBinaryOperatorParserRuleCall_0_1() { return cTypeFunctionBinaryOperatorParserRuleCall_0_1; }
	}
	public class BinaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cSolidusKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cAsteriskAsteriskKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cPercentSignKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cVerticalLineKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cCircumflexAccentKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cAmpersandKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cLessThanSignKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cGreaterThanSignKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cLessThanSignEqualsSignKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cGreaterThanSignEqualsSignKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cEqualsSignEqualsSignKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cSolidusEqualsSignKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		
		//BinaryOperator:
		//	'+' | '-' | '*' | '/' | '**' | '%' | '|' | '^' | '&' | '<' | '>' | '<=' | '>=' | '==' | '/=';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '*' | '/' | '**' | '%' | '|' | '^' | '&' | '<' | '>' | '<=' | '>=' | '==' | '/='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
		
		//'/'
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }
		
		//'**'
		public Keyword getAsteriskAsteriskKeyword_4() { return cAsteriskAsteriskKeyword_4; }
		
		//'%'
		public Keyword getPercentSignKeyword_5() { return cPercentSignKeyword_5; }
		
		//'|'
		public Keyword getVerticalLineKeyword_6() { return cVerticalLineKeyword_6; }
		
		//'^'
		public Keyword getCircumflexAccentKeyword_7() { return cCircumflexAccentKeyword_7; }
		
		//'&'
		public Keyword getAmpersandKeyword_8() { return cAmpersandKeyword_8; }
		
		//'<'
		public Keyword getLessThanSignKeyword_9() { return cLessThanSignKeyword_9; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_10() { return cGreaterThanSignKeyword_10; }
		
		//'<='
		public Keyword getLessThanSignEqualsSignKeyword_11() { return cLessThanSignEqualsSignKeyword_11; }
		
		//'>='
		public Keyword getGreaterThanSignEqualsSignKeyword_12() { return cGreaterThanSignEqualsSignKeyword_12; }
		
		//'=='
		public Keyword getEqualsSignEqualsSignKeyword_13() { return cEqualsSignEqualsSignKeyword_13; }
		
		//'/='
		public Keyword getSolidusEqualsSignKeyword_14() { return cSolidusEqualsSignKeyword_14; }
	}
	public class UnitOperatorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitOperatorExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipUnitOperatorFunctionParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//UnitOperatorExpression SysML::Expression:
		//	ownedRelationship+=UnitOperatorFunction;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=UnitOperatorFunction
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//UnitOperatorFunction
		public RuleCall getOwnedRelationshipUnitOperatorFunctionParserRuleCall_0() { return cOwnedRelationshipUnitOperatorFunctionParserRuleCall_0; }
	}
	public class UnitOperatorFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitOperatorFunction");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeFunctionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeFunctionUnitOperatorParserRuleCall_0_1 = (RuleCall)cTypeFunctionCrossReference_0.eContents().get(1);
		
		//UnitOperatorFunction SysML::FeatureTyping:
		//	type=[SysML::Function|UnitOperator];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Function|UnitOperator]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Function|UnitOperator]
		public CrossReference getTypeFunctionCrossReference_0() { return cTypeFunctionCrossReference_0; }
		
		//UnitOperator
		public RuleCall getTypeFunctionUnitOperatorParserRuleCall_0_1() { return cTypeFunctionUnitOperatorParserRuleCall_0_1; }
	}
	public class UnitOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitOperator");
		private final Keyword cCommercialAtKeyword = (Keyword)rule.eContents().get(1);
		
		//UnitOperator:
		//	'@';
		@Override public ParserRule getRule() { return rule; }
		
		//'@'
		public Keyword getCommercialAtKeyword() { return cCommercialAtKeyword; }
	}
	public class UnaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedMembershipUnaryOperatorMemberParserRuleCall_0_0 = (RuleCall)cOwnedMembershipAssignment_0.eContents().get(0);
		private final RuleCall cSequenceAccessExpressionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment UnaryExpression returns SysML::Expression:
		//	ownedMembership+=UnaryOperatorMember* SequenceAccessExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership+=UnaryOperatorMember* SequenceAccessExpression
		public Group getGroup() { return cGroup; }
		
		//ownedMembership+=UnaryOperatorMember*
		public Assignment getOwnedMembershipAssignment_0() { return cOwnedMembershipAssignment_0; }
		
		//UnaryOperatorMember
		public RuleCall getOwnedMembershipUnaryOperatorMemberParserRuleCall_0_0() { return cOwnedMembershipUnaryOperatorMemberParserRuleCall_0_0; }
		
		//SequenceAccessExpression
		public RuleCall getSequenceAccessExpressionParserRuleCall_1() { return cSequenceAccessExpressionParserRuleCall_1; }
	}
	public class UnaryOperatorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryOperatorExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipUnaryOperatorFunctionParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//UnaryOperatorExpression SysML::Expression:
		//	ownedRelationship+=UnaryOperatorFunction;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=UnaryOperatorFunction
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//UnaryOperatorFunction
		public RuleCall getOwnedRelationshipUnaryOperatorFunctionParserRuleCall_0() { return cOwnedRelationshipUnaryOperatorFunctionParserRuleCall_0; }
	}
	public class UnaryOperatorFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryOperatorFunction");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeFunctionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeFunctionUnaryOperatorParserRuleCall_0_1 = (RuleCall)cTypeFunctionCrossReference_0.eContents().get(1);
		
		//UnaryOperatorFunction SysML::FeatureTyping:
		//	type=[SysML::Function|UnaryOperator];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Function|UnaryOperator]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Function|UnaryOperator]
		public CrossReference getTypeFunctionCrossReference_0() { return cTypeFunctionCrossReference_0; }
		
		//UnaryOperator
		public RuleCall getTypeFunctionUnaryOperatorParserRuleCall_0_1() { return cTypeFunctionUnaryOperatorParserRuleCall_0_1; }
	}
	public class UnaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTildeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//UnaryOperator:
		//	'+' | '-' | '!' | '~';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '!' | '~'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
		
		//'~'
		public Keyword getTildeKeyword_3() { return cTildeKeyword_3; }
	}
	public class SequenceAccessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceAccessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedMembershipPrimaryExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedMembershipAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedMembershipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedMembershipSequenceAccessOperatorMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedMembershipAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedMembershipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedMembershipExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedMembershipAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment SequenceAccessExpression returns SysML::Expression:
		//	ownedMembership+=PrimaryExpressionMember (ownedMembership+=SequenceAccessOperatorMember
		//	ownedMembership+=ExpressionMember ']')*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership+=PrimaryExpressionMember (ownedMembership+=SequenceAccessOperatorMember
		//ownedMembership+=ExpressionMember ']')*
		public Group getGroup() { return cGroup; }
		
		//ownedMembership+=PrimaryExpressionMember
		public Assignment getOwnedMembershipAssignment_0() { return cOwnedMembershipAssignment_0; }
		
		//PrimaryExpressionMember
		public RuleCall getOwnedMembershipPrimaryExpressionMemberParserRuleCall_0_0() { return cOwnedMembershipPrimaryExpressionMemberParserRuleCall_0_0; }
		
		//(ownedMembership+=SequenceAccessOperatorMember ownedMembership+=ExpressionMember ']')*
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedMembership+=SequenceAccessOperatorMember
		public Assignment getOwnedMembershipAssignment_1_0() { return cOwnedMembershipAssignment_1_0; }
		
		//SequenceAccessOperatorMember
		public RuleCall getOwnedMembershipSequenceAccessOperatorMemberParserRuleCall_1_0_0() { return cOwnedMembershipSequenceAccessOperatorMemberParserRuleCall_1_0_0; }
		
		//ownedMembership+=ExpressionMember
		public Assignment getOwnedMembershipAssignment_1_1() { return cOwnedMembershipAssignment_1_1; }
		
		//ExpressionMember
		public RuleCall getOwnedMembershipExpressionMemberParserRuleCall_1_1_0() { return cOwnedMembershipExpressionMemberParserRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	public class SequenceAccessOperatorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceAccessOperatorMember");
		private final Assignment cOwnedMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureSequenceAccessOperatorExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeatureAssignment.eContents().get(0);
		
		//SequenceAccessOperatorMember SysML::FeatureMembership:
		//	ownedMemberFeature=SequenceAccessOperatorExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature=SequenceAccessOperatorExpression
		public Assignment getOwnedMemberFeatureAssignment() { return cOwnedMemberFeatureAssignment; }
		
		//SequenceAccessOperatorExpression
		public RuleCall getOwnedMemberFeatureSequenceAccessOperatorExpressionParserRuleCall_0() { return cOwnedMemberFeatureSequenceAccessOperatorExpressionParserRuleCall_0; }
	}
	public class SequenceAccessOperatorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceAccessOperatorExpression");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cNameLeftSquareBracketKeyword_0 = (Keyword)cNameAssignment.eContents().get(0);
		
		//SequenceAccessOperatorExpression SysML::Expression:
		//	name='[';
		@Override public ParserRule getRule() { return rule; }
		
		//name='['
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//'['
		public Keyword getNameLeftSquareBracketKeyword_0() { return cNameLeftSquareBracketKeyword_0; }
	}
	public class PrimaryExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PrimaryExpressionMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedMemberElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedMemberElementPrimaryExpressionParserRuleCall_0_0 = (RuleCall)cOwnedMemberElementAssignment_0.eContents().get(0);
		private final Assignment cMemberElementAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final CrossReference cMemberElementElementCrossReference_1_0 = (CrossReference)cMemberElementAssignment_1.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cMemberElementElementCrossReference_1_0.eContents().get(1);
		
		//PrimaryExpressionMember SysML::Membership:
		//	ownedMemberElement=PrimaryExpression
		//	| memberElement=[SysML::Element|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement=PrimaryExpression | memberElement=[SysML::Element|QualifiedName]
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedMemberElement=PrimaryExpression
		public Assignment getOwnedMemberElementAssignment_0() { return cOwnedMemberElementAssignment_0; }
		
		//PrimaryExpression
		public RuleCall getOwnedMemberElementPrimaryExpressionParserRuleCall_0_0() { return cOwnedMemberElementPrimaryExpressionParserRuleCall_0_0; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_1() { return cMemberElementAssignment_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_1_0() { return cMemberElementElementCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_1_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_1_0_1; }
	}
	public class PrimaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PrimaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNullExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInstanceCreationExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSequenceConstructionExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//PrimaryExpression SysML::Expression:
		//	NullExpression
		//	| LiteralExpression
		//	//	| ElementReferenceExpression 
		//	| InstanceCreationExpression
		//	| SequenceConstructionExpression
		//	| '(' Expression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//NullExpression | LiteralExpression //	| ElementReferenceExpression 
		//| InstanceCreationExpression | SequenceConstructionExpression | '(' Expression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NullExpression
		public RuleCall getNullExpressionParserRuleCall_0() { return cNullExpressionParserRuleCall_0; }
		
		//LiteralExpression
		public RuleCall getLiteralExpressionParserRuleCall_1() { return cLiteralExpressionParserRuleCall_1; }
		
		//InstanceCreationExpression
		public RuleCall getInstanceCreationExpressionParserRuleCall_2() { return cInstanceCreationExpressionParserRuleCall_2; }
		
		//SequenceConstructionExpression
		public RuleCall getSequenceConstructionExpressionParserRuleCall_3() { return cSequenceConstructionExpressionParserRuleCall_3; }
		
		//'(' Expression ')'
		public Group getGroup_4() { return cGroup_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_4_1() { return cExpressionParserRuleCall_4_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
	}
	public class InstanceCreationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.InstanceCreationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cClassAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cClassClassCrossReference_0_0 = (CrossReference)cClassAssignment_0.eContents().get(0);
		private final RuleCall cClassClassQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cClassClassCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTupleParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////ElementReferenceExpression returns SysML::ElementReferenceExpression :
		////	referent = [SysML::Element | QualifiedName]
		////;
		//InstanceCreationExpression SysML::InstanceCreationExpression:
		//	class=[SysML::Class|QualifiedName] '(' Tuple? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//class=[SysML::Class|QualifiedName] '(' Tuple? ')'
		public Group getGroup() { return cGroup; }
		
		//class=[SysML::Class|QualifiedName]
		public Assignment getClassAssignment_0() { return cClassAssignment_0; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getClassClassCrossReference_0_0() { return cClassClassCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getClassClassQualifiedNameParserRuleCall_0_0_1() { return cClassClassQualifiedNameParserRuleCall_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//Tuple?
		public RuleCall getTupleParserRuleCall_2() { return cTupleParserRuleCall_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class TupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Tuple");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPositionalTupleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNamedTupleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment Tuple returns SysML::InstanceCreationExpression:
		//	PositionalTuple | NamedTuple;
		@Override public ParserRule getRule() { return rule; }
		
		//PositionalTuple | NamedTuple
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PositionalTuple
		public RuleCall getPositionalTupleParserRuleCall_0() { return cPositionalTupleParserRuleCall_0; }
		
		//NamedTuple
		public RuleCall getNamedTupleParserRuleCall_1() { return cNamedTupleParserRuleCall_1; }
	}
	public class PositionalTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PositionalTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cArgumentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cArgumentExpressionParserRuleCall_0_0 = (RuleCall)cArgumentAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cArgumentAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cArgumentExpressionParserRuleCall_1_1_0 = (RuleCall)cArgumentAssignment_1_1.eContents().get(0);
		
		//fragment PositionalTuple returns SysML::InstanceCreationExpression:
		//	argument+=Expression (',' argument+=Expression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//argument+=Expression (',' argument+=Expression)*
		public Group getGroup() { return cGroup; }
		
		//argument+=Expression
		public Assignment getArgumentAssignment_0() { return cArgumentAssignment_0; }
		
		//Expression
		public RuleCall getArgumentExpressionParserRuleCall_0_0() { return cArgumentExpressionParserRuleCall_0_0; }
		
		//(',' argument+=Expression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//argument+=Expression
		public Assignment getArgumentAssignment_1_1() { return cArgumentAssignment_1_1; }
		
		//Expression
		public RuleCall getArgumentExpressionParserRuleCall_1_1_0() { return cArgumentExpressionParserRuleCall_1_1_0; }
	}
	public class NamedTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NamedTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgumentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgumentExpressionParserRuleCall_2_0 = (RuleCall)cArgumentAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cNameParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cArgumentAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cArgumentExpressionParserRuleCall_3_3_0 = (RuleCall)cArgumentAssignment_3_3.eContents().get(0);
		
		//fragment NamedTuple returns SysML::InstanceCreationExpression:
		//	Name '=>' argument+=Expression (',' Name '=>' argument+=Expression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Name '=>' argument+=Expression (',' Name '=>' argument+=Expression)*
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//argument+=Expression
		public Assignment getArgumentAssignment_2() { return cArgumentAssignment_2; }
		
		//Expression
		public RuleCall getArgumentExpressionParserRuleCall_2_0() { return cArgumentExpressionParserRuleCall_2_0; }
		
		//(',' Name '=>' argument+=Expression)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_3_1() { return cNameParserRuleCall_3_1; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_3_2() { return cEqualsSignGreaterThanSignKeyword_3_2; }
		
		//argument+=Expression
		public Assignment getArgumentAssignment_3_3() { return cArgumentAssignment_3_3; }
		
		//Expression
		public RuleCall getArgumentExpressionParserRuleCall_3_3_0() { return cArgumentExpressionParserRuleCall_3_3_0; }
	}
	public class SequenceConstructionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceConstructionExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceConstructionExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cElementAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cElementExpressionParserRuleCall_2_0_0 = (RuleCall)cElementAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cElementAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cElementExpressionParserRuleCall_2_1_1_0 = (RuleCall)cElementAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SequenceConstructionExpression SysML::SequenceConstructionExpression:
		//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{SysML::SequenceConstructionExpression}
		public Action getSequenceConstructionExpressionAction_0() { return cSequenceConstructionExpressionAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(element+=Expression (',' element+=Expression)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_0() { return cElementAssignment_2_0; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_0_0() { return cElementExpressionParserRuleCall_2_0_0; }
		
		//(',' element+=Expression)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_1_1() { return cElementAssignment_2_1_1; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_1_1_0() { return cElementExpressionParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class NullExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NullExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralNullAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NullExpression SysML::LiteralNull:
		//	{SysML::LiteralNull} 'null';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LiteralNull} 'null'
		public Group getGroup() { return cGroup; }
		
		//{SysML::LiteralNull}
		public Action getLiteralNullAction_0() { return cLiteralNullAction_0; }
		
		//'null'
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}
	public class LiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.LiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRealLiteralExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUnlimitedNaturalLiteralExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//LiteralExpression SysML::LiteralExpression:
		//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BooleanLiteralExpression
		public RuleCall getBooleanLiteralExpressionParserRuleCall_0() { return cBooleanLiteralExpressionParserRuleCall_0; }
		
		//StringLiteralExpression
		public RuleCall getStringLiteralExpressionParserRuleCall_1() { return cStringLiteralExpressionParserRuleCall_1; }
		
		//RealLiteralExpression
		public RuleCall getRealLiteralExpressionParserRuleCall_2() { return cRealLiteralExpressionParserRuleCall_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUnlimitedNaturalLiteralExpressionParserRuleCall_3() { return cUnlimitedNaturalLiteralExpressionParserRuleCall_3; }
	}
	public class BooleanLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BooleanLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEAN_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanLiteralExpression SysML::LiteralBoolean:
		//	value=BOOLEAN_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN_VALUE
		public RuleCall getValueBOOLEAN_VALUETerminalRuleCall_0() { return cValueBOOLEAN_VALUETerminalRuleCall_0; }
	}
	public class StringLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StringLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteralExpression SysML::LiteralString:
		//	value=STRING_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_0() { return cValueSTRING_VALUETerminalRuleCall_0; }
	}
	public class RealLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RealLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueRealValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//RealLiteralExpression SysML::LiteralReal:
		//	value=RealValue;
		@Override public ParserRule getRule() { return rule; }
		
		//value=RealValue
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//RealValue
		public RuleCall getValueRealValueParserRuleCall_0() { return cValueRealValueParserRuleCall_0; }
	}
	public class RealValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RealValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_2_0 = (RuleCall)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cEXP_VALUETerminalRuleCall_0_2_1 = (RuleCall)cAlternatives_0_2.eContents().get(1);
		private final RuleCall cEXP_VALUETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RealValue Ecore::EDouble:
		//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE)
		public Group getGroup_0() { return cGroup_0; }
		
		//NATURAL_VALUE?
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_0() { return cNATURAL_VALUETerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//NATURAL_VALUE | EXP_VALUE
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//NATURAL_VALUE
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_2_0() { return cNATURAL_VALUETerminalRuleCall_0_2_0; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_0_2_1() { return cEXP_VALUETerminalRuleCall_0_2_1; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_1() { return cEXP_VALUETerminalRuleCall_1; }
	}
	public class NaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NaturalLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNATURAL_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NaturalLiteralExpression SysML::LiteralInteger:
		//	value=NATURAL_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NATURAL_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NATURAL_VALUE
		public RuleCall getValueNATURAL_VALUETerminalRuleCall_0() { return cValueNATURAL_VALUETerminalRuleCall_0; }
	}
	public class UnlimitedNaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnlimitedNaturalLiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNaturalLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cLiteralUnboundedAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
		//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
		@Override public ParserRule getRule() { return rule; }
		
		//NaturalLiteralExpression | {SysML::LiteralUnbounded} '*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NaturalLiteralExpression
		public RuleCall getNaturalLiteralExpressionParserRuleCall_0() { return cNaturalLiteralExpressionParserRuleCall_0; }
		
		//{SysML::LiteralUnbounded} '*'
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::LiteralUnbounded}
		public Action getLiteralUnboundedAction_1_0() { return cLiteralUnboundedAction_1_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}
	public class ExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ExpressionMember");
		private final Assignment cOwnedMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeatureAssignment.eContents().get(0);
		
		///* EXPRESSION MEMBERSHIPS */ ExpressionMember SysML::FeatureMembership:
		//	ownedMemberFeature=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature=Expression
		public Assignment getOwnedMemberFeatureAssignment() { return cOwnedMemberFeatureAssignment; }
		
		//Expression
		public RuleCall getOwnedMemberFeatureExpressionParserRuleCall_0() { return cOwnedMemberFeatureExpressionParserRuleCall_0; }
	}
	public class BinaryOperatorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BinaryOperatorMember");
		private final Assignment cOwnedMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureBinaryOperatorExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeatureAssignment.eContents().get(0);
		
		//BinaryOperatorMember SysML::FeatureMembership:
		//	ownedMemberFeature=BinaryOperatorExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature=BinaryOperatorExpression
		public Assignment getOwnedMemberFeatureAssignment() { return cOwnedMemberFeatureAssignment; }
		
		//BinaryOperatorExpression
		public RuleCall getOwnedMemberFeatureBinaryOperatorExpressionParserRuleCall_0() { return cOwnedMemberFeatureBinaryOperatorExpressionParserRuleCall_0; }
	}
	public class UnitOperatorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitOperatorMember");
		private final Assignment cOwnedMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureUnitOperatorExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeatureAssignment.eContents().get(0);
		
		//UnitOperatorMember SysML::FeatureMembership:
		//	ownedMemberFeature=UnitOperatorExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature=UnitOperatorExpression
		public Assignment getOwnedMemberFeatureAssignment() { return cOwnedMemberFeatureAssignment; }
		
		//UnitOperatorExpression
		public RuleCall getOwnedMemberFeatureUnitOperatorExpressionParserRuleCall_0() { return cOwnedMemberFeatureUnitOperatorExpressionParserRuleCall_0; }
	}
	public class UnaryOperatorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryOperatorMember");
		private final Assignment cOwnedMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeatureUnaryOperatorExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeatureAssignment.eContents().get(0);
		
		//UnaryOperatorMember SysML::FeatureMembership:
		//	ownedMemberFeature=UnaryOperatorExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature=UnaryOperatorExpression
		public Assignment getOwnedMemberFeatureAssignment() { return cOwnedMemberFeatureAssignment; }
		
		//UnaryOperatorExpression
		public RuleCall getOwnedMemberFeatureUnaryOperatorExpressionParserRuleCall_0() { return cOwnedMemberFeatureUnaryOperatorExpressionParserRuleCall_0; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Name");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNRESTRICTED_NAMETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* NAMES */ Name:
		//	ID | UNRESTRICTED_NAME;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | UNRESTRICTED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//UNRESTRICTED_NAME
		public RuleCall getUNRESTRICTED_NAMETerminalRuleCall_1() { return cUNRESTRICTED_NAMETerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.QualifiedName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColonQualifiedNameParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDotQualifiedNameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QualifiedName:
		//	Name | ColonQualifiedName | DotQualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//Name | ColonQualifiedName | DotQualifiedName
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//ColonQualifiedName
		public RuleCall getColonQualifiedNameParserRuleCall_1() { return cColonQualifiedNameParserRuleCall_1; }
		
		//DotQualifiedName
		public RuleCall getDotQualifiedNameParserRuleCall_2() { return cDotQualifiedNameParserRuleCall_2; }
	}
	public class ColonQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ColonQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ColonQualifiedName:
		//	Name ('::' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('::' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('::' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	public class DotQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.DotQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//DotQualifiedName:
		//	Name ('.' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('.' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('.' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	
	public class PackageElementVisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageElementVisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
		//	public | private;
		public EnumRule getRule() { return rule; }
		
		//public | private
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
	}
	public class VisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPackageEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPackagePackagedKeyword_3_0 = (Keyword)cPackageEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind:
		//	public | private | protected | package='packaged';
		public EnumRule getRule() { return rule; }
		
		//public | private | protected | package='packaged'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
		
		//package='packaged'
		public EnumLiteralDeclaration getPackageEnumLiteralDeclaration_3() { return cPackageEnumLiteralDeclaration_3; }
		
		//'packaged'
		public Keyword getPackagePackagedKeyword_3_0() { return cPackagePackagedKeyword_3_0; }
	}
	public class FeatureDirectionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//	in | out | inout;
		public EnumRule getRule() { return rule; }
		
		//in | out | inout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	
	private final UnitDefinitionElements pUnitDefinition;
	private final PackageUnitDefinitionElements pPackageUnitDefinition;
	private final ClassUnitDefinitionElements pClassUnitDefinition;
	private final ObjectClassUnitDefinitionElements pObjectClassUnitDefinition;
	private final ValueClassUnitDefinitionElements pValueClassUnitDefinition;
	private final AssociationUnitDefinitionElements pAssociationUnitDefinition;
	private final FeatureUnitDefinitionElements pFeatureUnitDefinition;
	private final UnitPrefixElements pUnitPrefix;
	private final PackageElementVisibilityIndicatorElements ePackageElementVisibilityIndicator;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final AnnotationElements pAnnotation;
	private final CommentElements pComment;
	private final PackageImportElements pPackageImport;
	private final ElementImportElements pElementImport;
	private final NonFeatureDefinitionElements pNonFeatureDefinition;
	private final PackageDefinitionOrStubElements pPackageDefinitionOrStub;
	private final PackageDefinitionElements pPackageDefinition;
	private final PackageMemberElements pPackageMember;
	private final PackageMemberPrefixElements pPackageMemberPrefix;
	private final NonFeatureMemberElementElements pNonFeatureMemberElement;
	private final FeaturePackageMemberElementElements pFeaturePackageMemberElement;
	private final CategoryBodyElements pCategoryBody;
	private final CategoryMemberElements pCategoryMember;
	private final NonFeatureCategoryMemberElements pNonFeatureCategoryMember;
	private final FeatureCategoryMemberElements pFeatureCategoryMember;
	private final CategoryMemberPrefixElements pCategoryMemberPrefix;
	private final FeatureMemberElementElements pFeatureMemberElement;
	private final FeatureDirectionElements eFeatureDirection;
	private final ClassDefinitionOrStubElements pClassDefinitionOrStub;
	private final ClassDefinitionElements pClassDefinition;
	private final ClassDeclarationElements pClassDeclaration;
	private final ClassDeclarationCompletionElements pClassDeclarationCompletion;
	private final SpecializationListElements pSpecializationList;
	private final SuperclassingElements pSuperclassing;
	private final ObjectClassDefinitionOrStubElements pObjectClassDefinitionOrStub;
	private final ObjectClassDefinitionElements pObjectClassDefinition;
	private final ObjectClassDeclarationElements pObjectClassDeclaration;
	private final ValueClassDefinitionOrStubElements pValueClassDefinitionOrStub;
	private final ValueClassDefinitionElements pValueClassDefinition;
	private final ValueClassDeclarationElements pValueClassDeclaration;
	private final AssociationDefinitionOrStubElements pAssociationDefinitionOrStub;
	private final AssociationDefinitionElements pAssociationDefinition;
	private final AssociationDeclarationElements pAssociationDeclaration;
	private final AssociationBodyElements pAssociationBody;
	private final AssociationMemberElements pAssociationMember;
	private final AssociationFeatureMemberElements pAssociationFeatureMember;
	private final AssociationEndFeatureMemberElements pAssociationEndFeatureMember;
	private final BehaviorDefinitionOrStubElements pBehaviorDefinitionOrStub;
	private final BehaviorDeclarationElements pBehaviorDeclaration;
	private final ParameterListElements pParameterList;
	private final ParameterMemberElements pParameterMember;
	private final FunctionDefinitionOrStubElements pFunctionDefinitionOrStub;
	private final FunctionDeclarationElements pFunctionDeclaration;
	private final ReturnParameterPartElements pReturnParameterPart;
	private final ReturnParameterMemberElements pReturnParameterMember;
	private final FeatureDefinitionElements pFeatureDefinition;
	private final NamedFeatureDefinitionElements pNamedFeatureDefinition;
	private final UnnamedFeatureDefinitionElements pUnnamedFeatureDefinition;
	private final FeatureBodyDefinitionElements pFeatureBodyDefinition;
	private final FeatureDeclarationElements pFeatureDeclaration;
	private final FeatureCompletionElements pFeatureCompletion;
	private final FeatureValueElements pFeatureValue;
	private final TypePartElements pTypePart;
	private final FeatureTypingElements pFeatureTyping;
	private final MultiplicityElements pMultiplicity;
	private final SubsettingPartElements pSubsettingPart;
	private final SubsetsElements pSubsets;
	private final SubsetElements pSubset;
	private final RedefinesElements pRedefines;
	private final RedefinitionElements pRedefinition;
	private final ConnectorDefinitionElements pConnectorDefinition;
	private final ConnectorTypingElements pConnectorTyping;
	private final ConnectorEndElements pConnectorEnd;
	private final ParameterDefinitionElements pParameterDefinition;
	private final ExpressionElements pExpression;
	private final BinaryExpressionElements pBinaryExpression;
	private final BinaryTermElements pBinaryTerm;
	private final BinaryOperatorExpressionElements pBinaryOperatorExpression;
	private final BinaryOperatorFunctionElements pBinaryOperatorFunction;
	private final BinaryOperatorElements pBinaryOperator;
	private final UnitOperatorExpressionElements pUnitOperatorExpression;
	private final UnitOperatorFunctionElements pUnitOperatorFunction;
	private final UnitOperatorElements pUnitOperator;
	private final UnaryExpressionElements pUnaryExpression;
	private final UnaryOperatorExpressionElements pUnaryOperatorExpression;
	private final UnaryOperatorFunctionElements pUnaryOperatorFunction;
	private final UnaryOperatorElements pUnaryOperator;
	private final SequenceAccessExpressionElements pSequenceAccessExpression;
	private final SequenceAccessOperatorMemberElements pSequenceAccessOperatorMember;
	private final SequenceAccessOperatorExpressionElements pSequenceAccessOperatorExpression;
	private final PrimaryExpressionMemberElements pPrimaryExpressionMember;
	private final PrimaryExpressionElements pPrimaryExpression;
	private final InstanceCreationExpressionElements pInstanceCreationExpression;
	private final TupleElements pTuple;
	private final PositionalTupleElements pPositionalTuple;
	private final NamedTupleElements pNamedTuple;
	private final SequenceConstructionExpressionElements pSequenceConstructionExpression;
	private final NullExpressionElements pNullExpression;
	private final LiteralExpressionElements pLiteralExpression;
	private final BooleanLiteralExpressionElements pBooleanLiteralExpression;
	private final StringLiteralExpressionElements pStringLiteralExpression;
	private final RealLiteralExpressionElements pRealLiteralExpression;
	private final RealValueElements pRealValue;
	private final NaturalLiteralExpressionElements pNaturalLiteralExpression;
	private final UnlimitedNaturalLiteralExpressionElements pUnlimitedNaturalLiteralExpression;
	private final ExpressionMemberElements pExpressionMember;
	private final BinaryOperatorMemberElements pBinaryOperatorMember;
	private final UnitOperatorMemberElements pUnitOperatorMember;
	private final UnaryOperatorMemberElements pUnaryOperatorMember;
	private final NameElements pName;
	private final QualifiedNameElements pQualifiedName;
	private final ColonQualifiedNameElements pColonQualifiedName;
	private final DotQualifiedNameElements pDotQualifiedName;
	private final TerminalRule tBOOLEAN_VALUE;
	private final TerminalRule tNATURAL_VALUE;
	private final TerminalRule tEXP_VALUE;
	private final TerminalRule tID;
	private final TerminalRule tUNRESTRICTED_NAME;
	private final TerminalRule tSTRING_VALUE;
	private final TerminalRule tDOCUMENTATION_COMMENT;
	private final TerminalRule tSTATEMENT_ANNOTATION;
	private final TerminalRule tINLINE_STATEMENT;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public AlfGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pUnitDefinition = new UnitDefinitionElements();
		this.pPackageUnitDefinition = new PackageUnitDefinitionElements();
		this.pClassUnitDefinition = new ClassUnitDefinitionElements();
		this.pObjectClassUnitDefinition = new ObjectClassUnitDefinitionElements();
		this.pValueClassUnitDefinition = new ValueClassUnitDefinitionElements();
		this.pAssociationUnitDefinition = new AssociationUnitDefinitionElements();
		this.pFeatureUnitDefinition = new FeatureUnitDefinitionElements();
		this.pUnitPrefix = new UnitPrefixElements();
		this.ePackageElementVisibilityIndicator = new PackageElementVisibilityIndicatorElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.pAnnotation = new AnnotationElements();
		this.pComment = new CommentElements();
		this.pPackageImport = new PackageImportElements();
		this.pElementImport = new ElementImportElements();
		this.pNonFeatureDefinition = new NonFeatureDefinitionElements();
		this.pPackageDefinitionOrStub = new PackageDefinitionOrStubElements();
		this.pPackageDefinition = new PackageDefinitionElements();
		this.pPackageMember = new PackageMemberElements();
		this.pPackageMemberPrefix = new PackageMemberPrefixElements();
		this.pNonFeatureMemberElement = new NonFeatureMemberElementElements();
		this.pFeaturePackageMemberElement = new FeaturePackageMemberElementElements();
		this.pCategoryBody = new CategoryBodyElements();
		this.pCategoryMember = new CategoryMemberElements();
		this.pNonFeatureCategoryMember = new NonFeatureCategoryMemberElements();
		this.pFeatureCategoryMember = new FeatureCategoryMemberElements();
		this.pCategoryMemberPrefix = new CategoryMemberPrefixElements();
		this.pFeatureMemberElement = new FeatureMemberElementElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pClassDefinitionOrStub = new ClassDefinitionOrStubElements();
		this.pClassDefinition = new ClassDefinitionElements();
		this.pClassDeclaration = new ClassDeclarationElements();
		this.pClassDeclarationCompletion = new ClassDeclarationCompletionElements();
		this.pSpecializationList = new SpecializationListElements();
		this.pSuperclassing = new SuperclassingElements();
		this.pObjectClassDefinitionOrStub = new ObjectClassDefinitionOrStubElements();
		this.pObjectClassDefinition = new ObjectClassDefinitionElements();
		this.pObjectClassDeclaration = new ObjectClassDeclarationElements();
		this.pValueClassDefinitionOrStub = new ValueClassDefinitionOrStubElements();
		this.pValueClassDefinition = new ValueClassDefinitionElements();
		this.pValueClassDeclaration = new ValueClassDeclarationElements();
		this.pAssociationDefinitionOrStub = new AssociationDefinitionOrStubElements();
		this.pAssociationDefinition = new AssociationDefinitionElements();
		this.pAssociationDeclaration = new AssociationDeclarationElements();
		this.pAssociationBody = new AssociationBodyElements();
		this.pAssociationMember = new AssociationMemberElements();
		this.pAssociationFeatureMember = new AssociationFeatureMemberElements();
		this.pAssociationEndFeatureMember = new AssociationEndFeatureMemberElements();
		this.pBehaviorDefinitionOrStub = new BehaviorDefinitionOrStubElements();
		this.pBehaviorDeclaration = new BehaviorDeclarationElements();
		this.pParameterList = new ParameterListElements();
		this.pParameterMember = new ParameterMemberElements();
		this.pFunctionDefinitionOrStub = new FunctionDefinitionOrStubElements();
		this.pFunctionDeclaration = new FunctionDeclarationElements();
		this.pReturnParameterPart = new ReturnParameterPartElements();
		this.pReturnParameterMember = new ReturnParameterMemberElements();
		this.pFeatureDefinition = new FeatureDefinitionElements();
		this.pNamedFeatureDefinition = new NamedFeatureDefinitionElements();
		this.pUnnamedFeatureDefinition = new UnnamedFeatureDefinitionElements();
		this.pFeatureBodyDefinition = new FeatureBodyDefinitionElements();
		this.pFeatureDeclaration = new FeatureDeclarationElements();
		this.pFeatureCompletion = new FeatureCompletionElements();
		this.pFeatureValue = new FeatureValueElements();
		this.pTypePart = new TypePartElements();
		this.pFeatureTyping = new FeatureTypingElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pSubsettingPart = new SubsettingPartElements();
		this.pSubsets = new SubsetsElements();
		this.pSubset = new SubsetElements();
		this.pRedefines = new RedefinesElements();
		this.pRedefinition = new RedefinitionElements();
		this.pConnectorDefinition = new ConnectorDefinitionElements();
		this.pConnectorTyping = new ConnectorTypingElements();
		this.pConnectorEnd = new ConnectorEndElements();
		this.pParameterDefinition = new ParameterDefinitionElements();
		this.pExpression = new ExpressionElements();
		this.pBinaryExpression = new BinaryExpressionElements();
		this.pBinaryTerm = new BinaryTermElements();
		this.pBinaryOperatorExpression = new BinaryOperatorExpressionElements();
		this.pBinaryOperatorFunction = new BinaryOperatorFunctionElements();
		this.pBinaryOperator = new BinaryOperatorElements();
		this.pUnitOperatorExpression = new UnitOperatorExpressionElements();
		this.pUnitOperatorFunction = new UnitOperatorFunctionElements();
		this.pUnitOperator = new UnitOperatorElements();
		this.pUnaryExpression = new UnaryExpressionElements();
		this.pUnaryOperatorExpression = new UnaryOperatorExpressionElements();
		this.pUnaryOperatorFunction = new UnaryOperatorFunctionElements();
		this.pUnaryOperator = new UnaryOperatorElements();
		this.pSequenceAccessExpression = new SequenceAccessExpressionElements();
		this.pSequenceAccessOperatorMember = new SequenceAccessOperatorMemberElements();
		this.pSequenceAccessOperatorExpression = new SequenceAccessOperatorExpressionElements();
		this.pPrimaryExpressionMember = new PrimaryExpressionMemberElements();
		this.pPrimaryExpression = new PrimaryExpressionElements();
		this.pInstanceCreationExpression = new InstanceCreationExpressionElements();
		this.pTuple = new TupleElements();
		this.pPositionalTuple = new PositionalTupleElements();
		this.pNamedTuple = new NamedTupleElements();
		this.pSequenceConstructionExpression = new SequenceConstructionExpressionElements();
		this.pNullExpression = new NullExpressionElements();
		this.pLiteralExpression = new LiteralExpressionElements();
		this.pBooleanLiteralExpression = new BooleanLiteralExpressionElements();
		this.pStringLiteralExpression = new StringLiteralExpressionElements();
		this.pRealLiteralExpression = new RealLiteralExpressionElements();
		this.pRealValue = new RealValueElements();
		this.pNaturalLiteralExpression = new NaturalLiteralExpressionElements();
		this.pUnlimitedNaturalLiteralExpression = new UnlimitedNaturalLiteralExpressionElements();
		this.pExpressionMember = new ExpressionMemberElements();
		this.pBinaryOperatorMember = new BinaryOperatorMemberElements();
		this.pUnitOperatorMember = new UnitOperatorMemberElements();
		this.pUnaryOperatorMember = new UnaryOperatorMemberElements();
		this.pName = new NameElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pColonQualifiedName = new ColonQualifiedNameElements();
		this.pDotQualifiedName = new DotQualifiedNameElements();
		this.tBOOLEAN_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BOOLEAN_VALUE");
		this.tNATURAL_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NATURAL_VALUE");
		this.tEXP_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EXP_VALUE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ID");
		this.tUNRESTRICTED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UNRESTRICTED_NAME");
		this.tSTRING_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.STRING_VALUE");
		this.tDOCUMENTATION_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.DOCUMENTATION_COMMENT");
		this.tSTATEMENT_ANNOTATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.STATEMENT_ANNOTATION");
		this.tINLINE_STATEMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.INLINE_STATEMENT");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.Alf".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	///* UNITS */ UnitDefinition SysML::Package:
	//	PackageUnitDefinition
	//	| ClassUnitDefinition
	//	| ObjectClassUnitDefinition
	//	| ValueClassUnitDefinition
	//	| AssociationUnitDefinition
	//	| FeatureUnitDefinition;
	public UnitDefinitionElements getUnitDefinitionAccess() {
		return pUnitDefinition;
	}
	
	public ParserRule getUnitDefinitionRule() {
		return getUnitDefinitionAccess().getRule();
	}
	
	//PackageUnitDefinition SysML::Package:
	//	UnitPrefix PackageDefinition;
	public PackageUnitDefinitionElements getPackageUnitDefinitionAccess() {
		return pPackageUnitDefinition;
	}
	
	public ParserRule getPackageUnitDefinitionRule() {
		return getPackageUnitDefinitionAccess().getRule();
	}
	
	//ClassUnitDefinition SysML::ObjectClass:
	//	UnitPrefix ClassDefinition;
	public ClassUnitDefinitionElements getClassUnitDefinitionAccess() {
		return pClassUnitDefinition;
	}
	
	public ParserRule getClassUnitDefinitionRule() {
		return getClassUnitDefinitionAccess().getRule();
	}
	
	//ObjectClassUnitDefinition SysML::ObjectClass:
	//	UnitPrefix ObjectClassDefinition;
	public ObjectClassUnitDefinitionElements getObjectClassUnitDefinitionAccess() {
		return pObjectClassUnitDefinition;
	}
	
	public ParserRule getObjectClassUnitDefinitionRule() {
		return getObjectClassUnitDefinitionAccess().getRule();
	}
	
	//ValueClassUnitDefinition SysML::ValueClass:
	//	UnitPrefix ValueClassDefinition;
	public ValueClassUnitDefinitionElements getValueClassUnitDefinitionAccess() {
		return pValueClassUnitDefinition;
	}
	
	public ParserRule getValueClassUnitDefinitionRule() {
		return getValueClassUnitDefinitionAccess().getRule();
	}
	
	//AssociationUnitDefinition SysML::Association:
	//	UnitPrefix AssociationDefinition;
	public AssociationUnitDefinitionElements getAssociationUnitDefinitionAccess() {
		return pAssociationUnitDefinition;
	}
	
	public ParserRule getAssociationUnitDefinitionRule() {
		return getAssociationUnitDefinitionAccess().getRule();
	}
	
	//FeatureUnitDefinition SysML::Feature:
	//	UnitPrefix FeatureBodyDefinition;
	public FeatureUnitDefinitionElements getFeatureUnitDefinitionAccess() {
		return pFeatureUnitDefinition;
	}
	
	public ParserRule getFeatureUnitDefinitionRule() {
		return getFeatureUnitDefinitionAccess().getRule();
	}
	
	//fragment UnitPrefix returns SysML::Package:
	//	(ownedImport+=PackageImport
	//	| ownedMembership+=ElementImport)*
	//	ownedRelationship+=Annotation*;
	public UnitPrefixElements getUnitPrefixAccess() {
		return pUnitPrefix;
	}
	
	public ParserRule getUnitPrefixRule() {
		return getUnitPrefixAccess().getRule();
	}
	
	//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
	//	public | private;
	public PackageElementVisibilityIndicatorElements getPackageElementVisibilityIndicatorAccess() {
		return ePackageElementVisibilityIndicator;
	}
	
	public EnumRule getPackageElementVisibilityIndicatorRule() {
		return getPackageElementVisibilityIndicatorAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind:
	//	public | private | protected | package='packaged';
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	///* COMMENTS */ Annotation SysML::Annotation:
	//	ownedRelatedElement+=Comment;
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//Comment SysML::Comment:
	//	body=DOCUMENTATION_COMMENT;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	///* IMPORTS */ PackageImport SysML::Import:
	//	ownedRelationship+=Annotation*
	//	visibility=PackageElementVisibilityIndicator?
	//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
	//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
	//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
	public PackageImportElements getPackageImportAccess() {
		return pPackageImport;
	}
	
	public ParserRule getPackageImportRule() {
		return getPackageImportAccess().getRule();
	}
	
	//ElementImport SysML::Membership:
	//	PackageMemberPrefix
	//	'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
	public ElementImportElements getElementImportAccess() {
		return pElementImport;
	}
	
	public ParserRule getElementImportRule() {
		return getElementImportAccess().getRule();
	}
	
	///* PACKAGES */ NonFeatureDefinition SysML::Package:
	//	PackageDefinitionOrStub
	//	| ClassDefinitionOrStub
	//	| ObjectClassDefinitionOrStub
	//	| ValueClassDefinitionOrStub
	//	| AssociationDefinitionOrStub
	//	| BehaviorDefinitionOrStub
	//	| FunctionDefinitionOrStub;
	public NonFeatureDefinitionElements getNonFeatureDefinitionAccess() {
		return pNonFeatureDefinition;
	}
	
	public ParserRule getNonFeatureDefinitionRule() {
		return getNonFeatureDefinitionAccess().getRule();
	}
	
	//PackageDefinitionOrStub SysML::Package:
	//	PackageDefinition
	//	//	'package' name = Name ( isStub ?= ';' | '{' ( ownedMembership += PackageMember )* '}' )
	//;
	public PackageDefinitionOrStubElements getPackageDefinitionOrStubAccess() {
		return pPackageDefinitionOrStub;
	}
	
	public ParserRule getPackageDefinitionOrStubRule() {
		return getPackageDefinitionOrStubAccess().getRule();
	}
	
	//fragment PackageDefinition returns SysML::Package:
	//	'package' name=Name '{' (ownedMembership+=PackageMember | ownedImport+=PackageImport)* '}';
	public PackageDefinitionElements getPackageDefinitionAccess() {
		return pPackageDefinition;
	}
	
	public ParserRule getPackageDefinitionRule() {
		return getPackageDefinitionAccess().getRule();
	}
	
	///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
	//	PackageMemberPrefix (NonFeatureMemberElement
	//	| FeaturePackageMemberElement);
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//fragment PackageMemberPrefix returns SysML::Membership:
	//	ownedRelationship+=Annotation*
	//	//  ( annotation += StereotypeAnnotation )*
	//	visibility=PackageElementVisibilityIndicator?;
	public PackageMemberPrefixElements getPackageMemberPrefixAccess() {
		return pPackageMemberPrefix;
	}
	
	public ParserRule getPackageMemberPrefixRule() {
		return getPackageMemberPrefixAccess().getRule();
	}
	
	//fragment NonFeatureMemberElement returns SysML::Membership:
	//	ownedMemberElement=NonFeatureDefinition
	//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
	//	| 'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';'
	//	| 'class' memberName=Name? 'is' memberElement=[SysML::ObjectClass|QualifiedName] ';'
	//	| 'datatype' memberName=Name? 'is' memberElement=[SysML::ValueClass|QualifiedName] ';'
	//	| 'assoc' memberName=Name? 'is' memberElement=[SysML::Association|QualifiedName] ';'
	//	| 'behavior' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
	//	| 'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
	//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
	public NonFeatureMemberElementElements getNonFeatureMemberElementAccess() {
		return pNonFeatureMemberElement;
	}
	
	public ParserRule getNonFeatureMemberElementRule() {
		return getNonFeatureMemberElementAccess().getRule();
	}
	
	////NonFeatureMemberKind :
	////	'package' | 'class' | 'assoc'
	////;
	//fragment FeaturePackageMemberElement returns SysML::Membership:
	//	'feature'? ownedMemberElement=NamedFeatureDefinition
	//	| 'feature' ownedMemberElement=UnnamedFeatureDefinition
	//	| ('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';';
	public FeaturePackageMemberElementElements getFeaturePackageMemberElementAccess() {
		return pFeaturePackageMemberElement;
	}
	
	public ParserRule getFeaturePackageMemberElementRule() {
		return getFeaturePackageMemberElementAccess().getRule();
	}
	
	///* CATEGORIES */ fragment CategoryBody returns SysML::Category:
	//	';' | '{' (ownedMembership+=CategoryMember | ownedImport+=PackageImport)* '}';
	public CategoryBodyElements getCategoryBodyAccess() {
		return pCategoryBody;
	}
	
	public ParserRule getCategoryBodyRule() {
		return getCategoryBodyAccess().getRule();
	}
	
	///* CATEGORY MEMBERSHIPS */ CategoryMember SysML::Membership:
	//	NonFeatureCategoryMember | FeatureCategoryMember;
	public CategoryMemberElements getCategoryMemberAccess() {
		return pCategoryMember;
	}
	
	public ParserRule getCategoryMemberRule() {
		return getCategoryMemberAccess().getRule();
	}
	
	//NonFeatureCategoryMember SysML::Membership:
	//	CategoryMemberPrefix NonFeatureMemberElement;
	public NonFeatureCategoryMemberElements getNonFeatureCategoryMemberAccess() {
		return pNonFeatureCategoryMember;
	}
	
	public ParserRule getNonFeatureCategoryMemberRule() {
		return getNonFeatureCategoryMemberAccess().getRule();
	}
	
	//FeatureCategoryMember SysML::FeatureMembership:
	//	CategoryMemberPrefix (FeatureMemberElement
	//	// These alternatives are provided for legacy Alf backwards compatibility.	
	//	| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition
	//	| direction=FeatureDirection? memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
	public FeatureCategoryMemberElements getFeatureCategoryMemberAccess() {
		return pFeatureCategoryMember;
	}
	
	public ParserRule getFeatureCategoryMemberRule() {
		return getFeatureCategoryMemberAccess().getRule();
	}
	
	//fragment CategoryMemberPrefix returns SysML::Membership:
	//	ownedRelationship+=Annotation*
	//	//  ( annotation += StereotypeAnnotation )*
	//	visibility=VisibilityIndicator?;
	public CategoryMemberPrefixElements getCategoryMemberPrefixAccess() {
		return pCategoryMemberPrefix;
	}
	
	public ParserRule getCategoryMemberPrefixRule() {
		return getCategoryMemberPrefixAccess().getRule();
	}
	
	//fragment FeatureMemberElement returns SysML::FeatureMembership:
	//	('feature' | isPart?='part' | isPort?='port') direction=FeatureDirection? (ownedMemberFeature=FeatureDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';') | 'connector'
	//	(ownedMemberFeature=ConnectorDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';');
	public FeatureMemberElementElements getFeatureMemberElementAccess() {
		return pFeatureMemberElement;
	}
	
	public ParserRule getFeatureMemberElementRule() {
		return getFeatureMemberElementAccess().getRule();
	}
	
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//	in | out | inout;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	///* CLASSES */ ClassDefinitionOrStub SysML::Class:
	//	ClassDefinition
	//	//	ClassDeclaration ( isStub ?= ';' | CategoryBody )
	//;
	public ClassDefinitionOrStubElements getClassDefinitionOrStubAccess() {
		return pClassDefinitionOrStub;
	}
	
	public ParserRule getClassDefinitionOrStubRule() {
		return getClassDefinitionOrStubAccess().getRule();
	}
	
	//fragment ClassDefinition returns SysML::Class:
	//	ClassDeclaration CategoryBody;
	public ClassDefinitionElements getClassDefinitionAccess() {
		return pClassDefinition;
	}
	
	public ParserRule getClassDefinitionRule() {
		return getClassDefinitionAccess().getRule();
	}
	
	//fragment ClassDeclaration returns SysML::Class:
	//	isAbstract?='abstract'? 'Class' ClassDeclarationCompletion;
	public ClassDeclarationElements getClassDeclarationAccess() {
		return pClassDeclaration;
	}
	
	public ParserRule getClassDeclarationRule() {
		return getClassDeclarationAccess().getRule();
	}
	
	//fragment ClassDeclarationCompletion returns SysML::Class:
	//	name=Name
	//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
	//	SpecializationList?;
	public ClassDeclarationCompletionElements getClassDeclarationCompletionAccess() {
		return pClassDeclarationCompletion;
	}
	
	public ParserRule getClassDeclarationCompletionRule() {
		return getClassDeclarationCompletionAccess().getRule();
	}
	
	//fragment SpecializationList returns SysML::Class:
	//	'specializes' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*;
	public SpecializationListElements getSpecializationListAccess() {
		return pSpecializationList;
	}
	
	public ParserRule getSpecializationListRule() {
		return getSpecializationListAccess().getRule();
	}
	
	//Superclassing SysML::Superclassing:
	//	superclass=[SysML::Class|QualifiedName];
	public SuperclassingElements getSuperclassingAccess() {
		return pSuperclassing;
	}
	
	public ParserRule getSuperclassingRule() {
		return getSuperclassingAccess().getRule();
	}
	
	///* OBJECT CLASSES */ ObjectClassDefinitionOrStub SysML::ObjectClass:
	//	ObjectClassDefinition;
	public ObjectClassDefinitionOrStubElements getObjectClassDefinitionOrStubAccess() {
		return pObjectClassDefinitionOrStub;
	}
	
	public ParserRule getObjectClassDefinitionOrStubRule() {
		return getObjectClassDefinitionOrStubAccess().getRule();
	}
	
	//fragment ObjectClassDefinition returns SysML::ObjectClass:
	//	ObjectClassDeclaration CategoryBody;
	public ObjectClassDefinitionElements getObjectClassDefinitionAccess() {
		return pObjectClassDefinition;
	}
	
	public ParserRule getObjectClassDefinitionRule() {
		return getObjectClassDefinitionAccess().getRule();
	}
	
	//fragment ObjectClassDeclaration returns SysML::ObjectClass:
	//	isAbstract?='abstract'? 'class' ClassDeclarationCompletion;
	public ObjectClassDeclarationElements getObjectClassDeclarationAccess() {
		return pObjectClassDeclaration;
	}
	
	public ParserRule getObjectClassDeclarationRule() {
		return getObjectClassDeclarationAccess().getRule();
	}
	
	///* VALUE CLASSES (DATA TYPES) */ ValueClassDefinitionOrStub SysML::ValueClass:
	//	ValueClassDefinition;
	public ValueClassDefinitionOrStubElements getValueClassDefinitionOrStubAccess() {
		return pValueClassDefinitionOrStub;
	}
	
	public ParserRule getValueClassDefinitionOrStubRule() {
		return getValueClassDefinitionOrStubAccess().getRule();
	}
	
	//fragment ValueClassDefinition returns SysML::ValueClass:
	//	ValueClassDeclaration CategoryBody;
	public ValueClassDefinitionElements getValueClassDefinitionAccess() {
		return pValueClassDefinition;
	}
	
	public ParserRule getValueClassDefinitionRule() {
		return getValueClassDefinitionAccess().getRule();
	}
	
	//fragment ValueClassDeclaration returns SysML::ValueClass:
	//	isAbstract?='abstract'? 'datatype' ClassDeclarationCompletion;
	public ValueClassDeclarationElements getValueClassDeclarationAccess() {
		return pValueClassDeclaration;
	}
	
	public ParserRule getValueClassDeclarationRule() {
		return getValueClassDeclarationAccess().getRule();
	}
	
	///* ASSOCIATIONS */ AssociationDefinitionOrStub SysML::Association:
	//	AssociationDefinition
	//	// AssociationDeclaration { isStub = ';' | AssociationBody }
	//;
	public AssociationDefinitionOrStubElements getAssociationDefinitionOrStubAccess() {
		return pAssociationDefinitionOrStub;
	}
	
	public ParserRule getAssociationDefinitionOrStubRule() {
		return getAssociationDefinitionOrStubAccess().getRule();
	}
	
	//fragment AssociationDefinition returns SysML::Association:
	//	AssociationDeclaration AssociationBody;
	public AssociationDefinitionElements getAssociationDefinitionAccess() {
		return pAssociationDefinition;
	}
	
	public ParserRule getAssociationDefinitionRule() {
		return getAssociationDefinitionAccess().getRule();
	}
	
	//fragment AssociationDeclaration returns SysML::Association:
	//	isAbstract?='abstract'? 'assoc' ClassDeclarationCompletion;
	public AssociationDeclarationElements getAssociationDeclarationAccess() {
		return pAssociationDeclaration;
	}
	
	public ParserRule getAssociationDeclarationRule() {
		return getAssociationDeclarationAccess().getRule();
	}
	
	//fragment AssociationBody returns SysML::Association:
	//	';' | '{' (ownedMembership+=AssociationMember | ownedImport+=PackageImport)* '}';
	public AssociationBodyElements getAssociationBodyAccess() {
		return pAssociationBody;
	}
	
	public ParserRule getAssociationBodyRule() {
		return getAssociationBodyAccess().getRule();
	}
	
	///* ASSOCIATION MEMBERSHIPS */ AssociationMember SysML::Membership:
	//	NonFeatureCategoryMember | AssociationFeatureMember | AssociationEndFeatureMember;
	public AssociationMemberElements getAssociationMemberAccess() {
		return pAssociationMember;
	}
	
	public ParserRule getAssociationMemberRule() {
		return getAssociationMemberAccess().getRule();
	}
	
	//AssociationFeatureMember SysML::FeatureMembership:
	//	CategoryMemberPrefix FeatureMemberElement;
	public AssociationFeatureMemberElements getAssociationFeatureMemberAccess() {
		return pAssociationFeatureMember;
	}
	
	public ParserRule getAssociationFeatureMemberRule() {
		return getAssociationFeatureMemberAccess().getRule();
	}
	
	//AssociationEndFeatureMember SysML::EndFeatureMembership:
	//	CategoryMemberPrefix ('end' (isPart?='part' | isPort?='port')? direction=FeatureDirection?
	//	ownedMemberFeature=FeatureDefinition
	//	| 'end' isPart?='part' memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
	//	// These alternatives are provided for legacy Alf backwards compatibility;
	//	| direction=FeatureDirection? ownedMemberFeature=NamedFeatureDefinition
	//	| memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
	public AssociationEndFeatureMemberElements getAssociationEndFeatureMemberAccess() {
		return pAssociationEndFeatureMember;
	}
	
	public ParserRule getAssociationEndFeatureMemberRule() {
		return getAssociationEndFeatureMemberAccess().getRule();
	}
	
	///* BEHAVIORS */ BehaviorDefinitionOrStub SysML::Behavior:
	//	BehaviorDeclaration ';';
	public BehaviorDefinitionOrStubElements getBehaviorDefinitionOrStubAccess() {
		return pBehaviorDefinitionOrStub;
	}
	
	public ParserRule getBehaviorDefinitionOrStubRule() {
		return getBehaviorDefinitionOrStubAccess().getRule();
	}
	
	//fragment BehaviorDeclaration returns SysML::Behavior:
	//	isAbstract?='abstract'? 'behavior' name=Name ParameterList SpecializationList?;
	public BehaviorDeclarationElements getBehaviorDeclarationAccess() {
		return pBehaviorDeclaration;
	}
	
	public ParserRule getBehaviorDeclarationRule() {
		return getBehaviorDeclarationAccess().getRule();
	}
	
	//fragment ParameterList returns SysML::Behavior:
	//	'(' (ownedMembership+=ParameterMember (',' ownedMembership+=ParameterMember)*)? ')';
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	///* BEHAVIOR MEMBERSHIPS */ ParameterMember SysML::FeatureMembership:
	//	direction=FeatureDirection? memberName=Name ownedMemberFeature=ParameterDefinition;
	public ParameterMemberElements getParameterMemberAccess() {
		return pParameterMember;
	}
	
	public ParserRule getParameterMemberRule() {
		return getParameterMemberAccess().getRule();
	}
	
	///* FUNCTIONS */ FunctionDefinitionOrStub SysML::Function:
	//	FunctionDeclaration ';';
	public FunctionDefinitionOrStubElements getFunctionDefinitionOrStubAccess() {
		return pFunctionDefinitionOrStub;
	}
	
	public ParserRule getFunctionDefinitionOrStubRule() {
		return getFunctionDefinitionOrStubAccess().getRule();
	}
	
	//fragment FunctionDeclaration returns SysML::Function:
	//	isAbstract?='abstract'? 'function' name=Name ParameterList ReturnParameterPart SpecializationList?;
	public FunctionDeclarationElements getFunctionDeclarationAccess() {
		return pFunctionDeclaration;
	}
	
	public ParserRule getFunctionDeclarationRule() {
		return getFunctionDeclarationAccess().getRule();
	}
	
	//fragment ReturnParameterPart returns SysML::Function:
	//	ownedMembership+=ReturnParameterMember;
	public ReturnParameterPartElements getReturnParameterPartAccess() {
		return pReturnParameterPart;
	}
	
	public ParserRule getReturnParameterPartRule() {
		return getReturnParameterPartAccess().getRule();
	}
	
	///* FUNCTION MEMBERSHIPS */ ReturnParameterMember SysML::FeatureMembership:
	//	memberName=Name? ownedMemberFeature=ParameterDefinition;
	public ReturnParameterMemberElements getReturnParameterMemberAccess() {
		return pReturnParameterMember;
	}
	
	public ParserRule getReturnParameterMemberRule() {
		return getReturnParameterMemberAccess().getRule();
	}
	
	///* FEATURES */ FeatureDefinition SysML::Feature:
	//	NamedFeatureDefinition | UnnamedFeatureDefinition;
	public FeatureDefinitionElements getFeatureDefinitionAccess() {
		return pFeatureDefinition;
	}
	
	public ParserRule getFeatureDefinitionRule() {
		return getFeatureDefinitionAccess().getRule();
	}
	
	//NamedFeatureDefinition SysML::Feature:
	//	FeatureDeclaration FeatureCompletion;
	public NamedFeatureDefinitionElements getNamedFeatureDefinitionAccess() {
		return pNamedFeatureDefinition;
	}
	
	public ParserRule getNamedFeatureDefinitionRule() {
		return getNamedFeatureDefinitionAccess().getRule();
	}
	
	//UnnamedFeatureDefinition SysML::Feature:
	//	'redefines' ownedRelationship+=Redefinition TypePart
	//	FeatureCompletion;
	public UnnamedFeatureDefinitionElements getUnnamedFeatureDefinitionAccess() {
		return pUnnamedFeatureDefinition;
	}
	
	public ParserRule getUnnamedFeatureDefinitionRule() {
		return getUnnamedFeatureDefinitionAccess().getRule();
	}
	
	//fragment FeatureBodyDefinition returns SysML::Feature:
	//	'feature' FeatureDeclaration FeatureCompletion;
	public FeatureBodyDefinitionElements getFeatureBodyDefinitionAccess() {
		return pFeatureBodyDefinition;
	}
	
	public ParserRule getFeatureBodyDefinitionRule() {
		return getFeatureBodyDefinitionAccess().getRule();
	}
	
	//fragment FeatureDeclaration returns SysML::Feature:
	//	name=Name TypePart SubsettingPart;
	public FeatureDeclarationElements getFeatureDeclarationAccess() {
		return pFeatureDeclaration;
	}
	
	public ParserRule getFeatureDeclarationRule() {
		return getFeatureDeclarationAccess().getRule();
	}
	
	//fragment FeatureCompletion returns SysML::Feature:
	//	('=' valuation=FeatureValue)? CategoryBody;
	public FeatureCompletionElements getFeatureCompletionAccess() {
		return pFeatureCompletion;
	}
	
	public ParserRule getFeatureCompletionRule() {
		return getFeatureCompletionAccess().getRule();
	}
	
	//FeatureValue SysML::FeatureValue:
	//	value=Expression;
	public FeatureValueElements getFeatureValueAccess() {
		return pFeatureValue;
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}
	
	//fragment TypePart returns SysML::Feature:
	//	(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))?
	//	multiplicity=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
	public TypePartElements getTypePartAccess() {
		return pTypePart;
	}
	
	public ParserRule getTypePartRule() {
		return getTypePartAccess().getRule();
	}
	
	//FeatureTyping SysML::FeatureTyping:
	//	type=[SysML::Category|QualifiedName];
	public FeatureTypingElements getFeatureTypingAccess() {
		return pFeatureTyping;
	}
	
	public ParserRule getFeatureTypingRule() {
		return getFeatureTypingAccess().getRule();
	}
	
	//Multiplicity SysML::Multiplicity:
	//	'[' (lower=NaturalLiteralExpression '..')? upper=UnlimitedNaturalLiteralExpression ']';
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//fragment SubsettingPart returns SysML::Feature:
	//	(Subsets (',' ownedRelationship+=Subset)*
	//	| Redefines (',' ownedRelationship+=Redefinition)*)*;
	public SubsettingPartElements getSubsettingPartAccess() {
		return pSubsettingPart;
	}
	
	public ParserRule getSubsettingPartRule() {
		return getSubsettingPartAccess().getRule();
	}
	
	//fragment Subsets returns SysML::Feature:
	//	'subsets' ownedRelationship+=Subset;
	public SubsetsElements getSubsetsAccess() {
		return pSubsets;
	}
	
	public ParserRule getSubsetsRule() {
		return getSubsetsAccess().getRule();
	}
	
	//Subset SysML::Subsetting:
	//	subsettedFeature=[SysML::Feature|QualifiedName];
	public SubsetElements getSubsetAccess() {
		return pSubset;
	}
	
	public ParserRule getSubsetRule() {
		return getSubsetAccess().getRule();
	}
	
	//fragment Redefines returns SysML::Feature:
	//	'redefines' ownedRelationship+=Redefinition;
	public RedefinesElements getRedefinesAccess() {
		return pRedefines;
	}
	
	public ParserRule getRedefinesRule() {
		return getRedefinesAccess().getRule();
	}
	
	//Redefinition SysML::Redefinition:
	//	redefinedFeature=[SysML::Feature|QualifiedName];
	public RedefinitionElements getRedefinitionAccess() {
		return pRedefinition;
	}
	
	public ParserRule getRedefinitionRule() {
		return getRedefinitionAccess().getRule();
	}
	
	///* CONNECTORS */ ConnectorDefinition SysML::Connector:
	//	((name=Name? (':' ownedRelationship+=ConnectorTyping)? 'is')?
	//	connectorEnd+=ConnectorEnd 'to' connectorEnd+=ConnectorEnd
	//	| name=Name? (':' ownedRelationship+=ConnectorTyping)?
	//	'(' connectorEnd+=ConnectorEnd ',' connectorEnd+=ConnectorEnd (',' connectorEnd+=ConnectorEnd)*
	//	')') CategoryBody;
	public ConnectorDefinitionElements getConnectorDefinitionAccess() {
		return pConnectorDefinition;
	}
	
	public ParserRule getConnectorDefinitionRule() {
		return getConnectorDefinitionAccess().getRule();
	}
	
	//ConnectorTyping SysML::FeatureTyping:
	//	type=[SysML::Association|QualifiedName];
	public ConnectorTypingElements getConnectorTypingAccess() {
		return pConnectorTyping;
	}
	
	public ParserRule getConnectorTypingRule() {
		return getConnectorTypingAccess().getRule();
	}
	
	//ConnectorEnd SysML::ConnectorEnd:
	//	(end=[SysML::Feature|QualifiedName] ':')?
	//	feature=[SysML::Feature|QualifiedName] multiplicity=Multiplicity?
	//	| (end=[SysML::Feature|QualifiedName] multiplicity=Multiplicity? '=>') feature=[SysML::Feature|QualifiedName];
	public ConnectorEndElements getConnectorEndAccess() {
		return pConnectorEnd;
	}
	
	public ParserRule getConnectorEndRule() {
		return getConnectorEndAccess().getRule();
	}
	
	///* PARAMETERS */ ParameterDefinition SysML::Parameter:
	//	TypePart (Subsets | Redefines)*;
	public ParameterDefinitionElements getParameterDefinitionAccess() {
		return pParameterDefinition;
	}
	
	public ParserRule getParameterDefinitionRule() {
		return getParameterDefinitionAccess().getRule();
	}
	
	///* EXPRESSIONS */ Expression SysML::Expression:
	//	BinaryExpression;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//BinaryExpression SysML::Expression:
	//	UnaryExpression BinaryTerm*;
	public BinaryExpressionElements getBinaryExpressionAccess() {
		return pBinaryExpression;
	}
	
	public ParserRule getBinaryExpressionRule() {
		return getBinaryExpressionAccess().getRule();
	}
	
	//fragment BinaryTerm returns SysML::Expression:
	//	ownedMembership+=BinaryOperatorMember UnaryExpression
	//	| ownedMembership+=UnitOperatorMember '[' ownedMembership+=ExpressionMember ']';
	public BinaryTermElements getBinaryTermAccess() {
		return pBinaryTerm;
	}
	
	public ParserRule getBinaryTermRule() {
		return getBinaryTermAccess().getRule();
	}
	
	//BinaryOperatorExpression SysML::Expression:
	//	ownedRelationship+=BinaryOperatorFunction;
	public BinaryOperatorExpressionElements getBinaryOperatorExpressionAccess() {
		return pBinaryOperatorExpression;
	}
	
	public ParserRule getBinaryOperatorExpressionRule() {
		return getBinaryOperatorExpressionAccess().getRule();
	}
	
	//BinaryOperatorFunction SysML::FeatureTyping:
	//	type=[SysML::Function|BinaryOperator];
	public BinaryOperatorFunctionElements getBinaryOperatorFunctionAccess() {
		return pBinaryOperatorFunction;
	}
	
	public ParserRule getBinaryOperatorFunctionRule() {
		return getBinaryOperatorFunctionAccess().getRule();
	}
	
	//BinaryOperator:
	//	'+' | '-' | '*' | '/' | '**' | '%' | '|' | '^' | '&' | '<' | '>' | '<=' | '>=' | '==' | '/=';
	public BinaryOperatorElements getBinaryOperatorAccess() {
		return pBinaryOperator;
	}
	
	public ParserRule getBinaryOperatorRule() {
		return getBinaryOperatorAccess().getRule();
	}
	
	//UnitOperatorExpression SysML::Expression:
	//	ownedRelationship+=UnitOperatorFunction;
	public UnitOperatorExpressionElements getUnitOperatorExpressionAccess() {
		return pUnitOperatorExpression;
	}
	
	public ParserRule getUnitOperatorExpressionRule() {
		return getUnitOperatorExpressionAccess().getRule();
	}
	
	//UnitOperatorFunction SysML::FeatureTyping:
	//	type=[SysML::Function|UnitOperator];
	public UnitOperatorFunctionElements getUnitOperatorFunctionAccess() {
		return pUnitOperatorFunction;
	}
	
	public ParserRule getUnitOperatorFunctionRule() {
		return getUnitOperatorFunctionAccess().getRule();
	}
	
	//UnitOperator:
	//	'@';
	public UnitOperatorElements getUnitOperatorAccess() {
		return pUnitOperator;
	}
	
	public ParserRule getUnitOperatorRule() {
		return getUnitOperatorAccess().getRule();
	}
	
	//fragment UnaryExpression returns SysML::Expression:
	//	ownedMembership+=UnaryOperatorMember* SequenceAccessExpression;
	public UnaryExpressionElements getUnaryExpressionAccess() {
		return pUnaryExpression;
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperatorExpression SysML::Expression:
	//	ownedRelationship+=UnaryOperatorFunction;
	public UnaryOperatorExpressionElements getUnaryOperatorExpressionAccess() {
		return pUnaryOperatorExpression;
	}
	
	public ParserRule getUnaryOperatorExpressionRule() {
		return getUnaryOperatorExpressionAccess().getRule();
	}
	
	//UnaryOperatorFunction SysML::FeatureTyping:
	//	type=[SysML::Function|UnaryOperator];
	public UnaryOperatorFunctionElements getUnaryOperatorFunctionAccess() {
		return pUnaryOperatorFunction;
	}
	
	public ParserRule getUnaryOperatorFunctionRule() {
		return getUnaryOperatorFunctionAccess().getRule();
	}
	
	//UnaryOperator:
	//	'+' | '-' | '!' | '~';
	public UnaryOperatorElements getUnaryOperatorAccess() {
		return pUnaryOperator;
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//fragment SequenceAccessExpression returns SysML::Expression:
	//	ownedMembership+=PrimaryExpressionMember (ownedMembership+=SequenceAccessOperatorMember
	//	ownedMembership+=ExpressionMember ']')*;
	public SequenceAccessExpressionElements getSequenceAccessExpressionAccess() {
		return pSequenceAccessExpression;
	}
	
	public ParserRule getSequenceAccessExpressionRule() {
		return getSequenceAccessExpressionAccess().getRule();
	}
	
	//SequenceAccessOperatorMember SysML::FeatureMembership:
	//	ownedMemberFeature=SequenceAccessOperatorExpression;
	public SequenceAccessOperatorMemberElements getSequenceAccessOperatorMemberAccess() {
		return pSequenceAccessOperatorMember;
	}
	
	public ParserRule getSequenceAccessOperatorMemberRule() {
		return getSequenceAccessOperatorMemberAccess().getRule();
	}
	
	//SequenceAccessOperatorExpression SysML::Expression:
	//	name='[';
	public SequenceAccessOperatorExpressionElements getSequenceAccessOperatorExpressionAccess() {
		return pSequenceAccessOperatorExpression;
	}
	
	public ParserRule getSequenceAccessOperatorExpressionRule() {
		return getSequenceAccessOperatorExpressionAccess().getRule();
	}
	
	//PrimaryExpressionMember SysML::Membership:
	//	ownedMemberElement=PrimaryExpression
	//	| memberElement=[SysML::Element|QualifiedName];
	public PrimaryExpressionMemberElements getPrimaryExpressionMemberAccess() {
		return pPrimaryExpressionMember;
	}
	
	public ParserRule getPrimaryExpressionMemberRule() {
		return getPrimaryExpressionMemberAccess().getRule();
	}
	
	//PrimaryExpression SysML::Expression:
	//	NullExpression
	//	| LiteralExpression
	//	//	| ElementReferenceExpression 
	//	| InstanceCreationExpression
	//	| SequenceConstructionExpression
	//	| '(' Expression ')';
	public PrimaryExpressionElements getPrimaryExpressionAccess() {
		return pPrimaryExpression;
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	////ElementReferenceExpression returns SysML::ElementReferenceExpression :
	////	referent = [SysML::Element | QualifiedName]
	////;
	//InstanceCreationExpression SysML::InstanceCreationExpression:
	//	class=[SysML::Class|QualifiedName] '(' Tuple? ')';
	public InstanceCreationExpressionElements getInstanceCreationExpressionAccess() {
		return pInstanceCreationExpression;
	}
	
	public ParserRule getInstanceCreationExpressionRule() {
		return getInstanceCreationExpressionAccess().getRule();
	}
	
	//fragment Tuple returns SysML::InstanceCreationExpression:
	//	PositionalTuple | NamedTuple;
	public TupleElements getTupleAccess() {
		return pTuple;
	}
	
	public ParserRule getTupleRule() {
		return getTupleAccess().getRule();
	}
	
	//fragment PositionalTuple returns SysML::InstanceCreationExpression:
	//	argument+=Expression (',' argument+=Expression)*;
	public PositionalTupleElements getPositionalTupleAccess() {
		return pPositionalTuple;
	}
	
	public ParserRule getPositionalTupleRule() {
		return getPositionalTupleAccess().getRule();
	}
	
	//fragment NamedTuple returns SysML::InstanceCreationExpression:
	//	Name '=>' argument+=Expression (',' Name '=>' argument+=Expression)*;
	public NamedTupleElements getNamedTupleAccess() {
		return pNamedTuple;
	}
	
	public ParserRule getNamedTupleRule() {
		return getNamedTupleAccess().getRule();
	}
	
	//SequenceConstructionExpression SysML::SequenceConstructionExpression:
	//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
	public SequenceConstructionExpressionElements getSequenceConstructionExpressionAccess() {
		return pSequenceConstructionExpression;
	}
	
	public ParserRule getSequenceConstructionExpressionRule() {
		return getSequenceConstructionExpressionAccess().getRule();
	}
	
	//NullExpression SysML::LiteralNull:
	//	{SysML::LiteralNull} 'null';
	public NullExpressionElements getNullExpressionAccess() {
		return pNullExpression;
	}
	
	public ParserRule getNullExpressionRule() {
		return getNullExpressionAccess().getRule();
	}
	
	//LiteralExpression SysML::LiteralExpression:
	//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
	public LiteralExpressionElements getLiteralExpressionAccess() {
		return pLiteralExpression;
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//BooleanLiteralExpression SysML::LiteralBoolean:
	//	value=BOOLEAN_VALUE;
	public BooleanLiteralExpressionElements getBooleanLiteralExpressionAccess() {
		return pBooleanLiteralExpression;
	}
	
	public ParserRule getBooleanLiteralExpressionRule() {
		return getBooleanLiteralExpressionAccess().getRule();
	}
	
	//StringLiteralExpression SysML::LiteralString:
	//	value=STRING_VALUE;
	public StringLiteralExpressionElements getStringLiteralExpressionAccess() {
		return pStringLiteralExpression;
	}
	
	public ParserRule getStringLiteralExpressionRule() {
		return getStringLiteralExpressionAccess().getRule();
	}
	
	//RealLiteralExpression SysML::LiteralReal:
	//	value=RealValue;
	public RealLiteralExpressionElements getRealLiteralExpressionAccess() {
		return pRealLiteralExpression;
	}
	
	public ParserRule getRealLiteralExpressionRule() {
		return getRealLiteralExpressionAccess().getRule();
	}
	
	//RealValue Ecore::EDouble:
	//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
	public RealValueElements getRealValueAccess() {
		return pRealValue;
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//NaturalLiteralExpression SysML::LiteralInteger:
	//	value=NATURAL_VALUE;
	public NaturalLiteralExpressionElements getNaturalLiteralExpressionAccess() {
		return pNaturalLiteralExpression;
	}
	
	public ParserRule getNaturalLiteralExpressionRule() {
		return getNaturalLiteralExpressionAccess().getRule();
	}
	
	//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
	//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
	public UnlimitedNaturalLiteralExpressionElements getUnlimitedNaturalLiteralExpressionAccess() {
		return pUnlimitedNaturalLiteralExpression;
	}
	
	public ParserRule getUnlimitedNaturalLiteralExpressionRule() {
		return getUnlimitedNaturalLiteralExpressionAccess().getRule();
	}
	
	///* EXPRESSION MEMBERSHIPS */ ExpressionMember SysML::FeatureMembership:
	//	ownedMemberFeature=Expression;
	public ExpressionMemberElements getExpressionMemberAccess() {
		return pExpressionMember;
	}
	
	public ParserRule getExpressionMemberRule() {
		return getExpressionMemberAccess().getRule();
	}
	
	//BinaryOperatorMember SysML::FeatureMembership:
	//	ownedMemberFeature=BinaryOperatorExpression;
	public BinaryOperatorMemberElements getBinaryOperatorMemberAccess() {
		return pBinaryOperatorMember;
	}
	
	public ParserRule getBinaryOperatorMemberRule() {
		return getBinaryOperatorMemberAccess().getRule();
	}
	
	//UnitOperatorMember SysML::FeatureMembership:
	//	ownedMemberFeature=UnitOperatorExpression;
	public UnitOperatorMemberElements getUnitOperatorMemberAccess() {
		return pUnitOperatorMember;
	}
	
	public ParserRule getUnitOperatorMemberRule() {
		return getUnitOperatorMemberAccess().getRule();
	}
	
	//UnaryOperatorMember SysML::FeatureMembership:
	//	ownedMemberFeature=UnaryOperatorExpression;
	public UnaryOperatorMemberElements getUnaryOperatorMemberAccess() {
		return pUnaryOperatorMember;
	}
	
	public ParserRule getUnaryOperatorMemberRule() {
		return getUnaryOperatorMemberAccess().getRule();
	}
	
	///* NAMES */ Name:
	//	ID | UNRESTRICTED_NAME;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//QualifiedName:
	//	Name | ColonQualifiedName | DotQualifiedName;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//ColonQualifiedName:
	//	Name ('::' Name)+;
	public ColonQualifiedNameElements getColonQualifiedNameAccess() {
		return pColonQualifiedName;
	}
	
	public ParserRule getColonQualifiedNameRule() {
		return getColonQualifiedNameAccess().getRule();
	}
	
	//DotQualifiedName:
	//	Name ('.' Name)+;
	public DotQualifiedNameElements getDotQualifiedNameAccess() {
		return pDotQualifiedName;
	}
	
	public ParserRule getDotQualifiedNameRule() {
		return getDotQualifiedNameAccess().getRule();
	}
	
	//terminal BOOLEAN_VALUE returns Ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEAN_VALUERule() {
		return tBOOLEAN_VALUE;
	}
	
	//terminal NATURAL_VALUE returns Ecore::EInt:
	//	('0' | '1'..'9' ('_'? '0'..'9')*) | ('0b' | '0B') '0'..'1' ('_'? '0'..'1')* | ('0x' | '0X') ('0'..'9' | 'a'..'f' |
	//	'A'..'F') ('_'? ('0'..'9' | 'a'..'f' | 'A'..'F'))* | '0' '_'? '0'..'7' ('_'? '0'..'7')*;
	public TerminalRule getNATURAL_VALUERule() {
		return tNATURAL_VALUE;
	}
	
	//terminal EXP_VALUE:
	//	NATURAL_VALUE ('e' | 'E') ('+' | '-')? NATURAL_VALUE;
	public TerminalRule getEXP_VALUERule() {
		return tEXP_VALUE;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal UNRESTRICTED_NAME:
	//	'\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return tUNRESTRICTED_NAME;
	}
	
	//terminal STRING_VALUE:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return tSTRING_VALUE;
	}
	
	//terminal DOCUMENTATION_COMMENT:
	//	'/**'->'*/';
	public TerminalRule getDOCUMENTATION_COMMENTRule() {
		return tDOCUMENTATION_COMMENT;
	}
	
	//terminal STATEMENT_ANNOTATION:
	//	'//@'->'\n'
	//	//  '//@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')? 
	//	//  (WS? '@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')?)* (' '|'\t')* ('\r'? '\n')
	//;
	public TerminalRule getSTATEMENT_ANNOTATIONRule() {
		return tSTATEMENT_ANNOTATION;
	}
	
	//terminal INLINE_STATEMENT:
	//	'/*@inline(' (ID | UNRESTRICTED_NAME) ')'->'*/';
	public TerminalRule getINLINE_STATEMENTRule() {
		return tINLINE_STATEMENT;
	}
	
	//terminal ML_COMMENT:
	//	'/*' !('*' | '@')->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' (!('@' | '\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
