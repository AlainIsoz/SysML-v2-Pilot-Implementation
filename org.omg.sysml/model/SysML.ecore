<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="sysml" nsURI="http://www.omg.org/spec/SysML/2.0" nsPrefix="sysml">
  <eClassifiers xsi:type="ecore:EClass" name="DecisionNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A DecisionNode is a ControlNode that makes a selection from its outgoing Successions. All outgoing Successions must be ConditionalSuccession with a target multiplicity of 0..1. A DecisionNode may have at most one incoming Succession.&#xA;&#xA;A DecisionNode must subset, directly or indirectly, the ActionUsage Action::decisions, implying that it is typed by DecisionAction from the Systems model library (or a subtype of it). A DecisionAction is constrained to have exactly one successor, which is chosen from among the outgoing ConditionalSuccessions for which the guard is true."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ControlNode" abstract="true" eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ControlNode is an ActionUsage that does not have any inherent behavior but provides constraints on incoming and outgoing Succession connectors that are used to control other Actions.&#xA;&#xA;A ControlNode must be a composite owned feature of an Activity or ActionUsage, subsetting, directly or indirectly, the ActionUsage Action::controls. This implies that the ControlNode must be typed by ControlAction from the Systems model library, or a subtype of it.&#xA;&#xA;All outgoing Successions from a ControlNode must have source multiplicity of 1..1. All incoming Succession must have target multiplicity of 1..1."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ActionUsage" eSuperTypes="#//Usage #//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An ActionUsage is a Usage that is also a Step, and, so, is typed by a Behavior. Nominally, if the type is an Activity, an ActionUsage is a Usage of that Activity (as an action definition) within a system. However, non-Activity Behaviors are also allowed, to permit use of Behaviors from the Kernel Library.&#xA;&#xA;An ActionUsage (other than a PerformActionUsage owned by a Part) must subset, directly or indirectly, either the base ActionUsage &quot;actions&quot; from the Systems model library, if it is not a composite feature, or the ActionUsage &quot;subactions&quot; inherited from its owner, if it is a composite feature."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="actionOwningDefinition"
        ordered="false" eType="#//Definition" volatile="true" transient="true" derived="true"
        eOpposite="#//Definition/ownedAction">
      <eAnnotations source="redefines" references="#//Usage/owningDefinition"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="actionOwningUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/nestedAction">
      <eAnnotations source="redefines" references="#//Usage/owningUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="activity" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Behavior" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedAction"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Step/behavior"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Step" eSuperTypes="#//Feature">
    <eStructuralFeatures xsi:type="ecore:EReference" name="behavior" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Behavior" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedStep"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Feature" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Feature is a Type that represents a relation whose domain is the intersection of its featuringType(s) and whose range is the union of its types. A Feature without any explicitly modeled featuringTypes is implicitly considered to have the (maximal) type Anything from the Base model library as its featuring type.&lt;/p>&#xA;&#xA;&lt;p>Traditionally, the instances of a relation are given by pairs, the first element of which is from the domain set of the relation and the second element of which is from the range set. Examples include cars with wheels, people with other people and cars with values representing the car length. Naming these relations provies a context about the relationships and attributes they describe at M0.&lt;/p>&#xA;&#xA;&lt;p>However, since Features are themselves Types, it is possible for the domain and/or range Types of a Feature to themselves be Types. As a result, the instances may be pairs whose members are nested pairs, to any level of nesting. Alternatively, these nested pairs may be flattened out into sequences of individuals with length greater than 1. That is, the instances of Features can be interpreted in general as not just pairs, but n-tuples, where n > 1.&lt;/p>&#xA;&#xA;ownedRedefinition = ownedSubsetting->intersection(redefining)&#xA;referencedType = type - ownedElement&#xA;ownedSubsetting = ownedGeneralization->intersection(subsetting)&#xA;isComposite = owningFeatureMembership &lt;> null and owningFeatureMembership.isComposite&#xA;ownedType = type->intersection(ownedElement)&#xA;type = typing.type&#xA;isEnd = owningFeatureMembership &lt;> null and owningFeatureMembership.oclIsKindOf(EndFeatureMembership)"/>
    </eAnnotations>
    <eOperations name="directionFor" ordered="false" lowerBound="1" eType="#//FeatureDirectionKind">
      <eParameters name="type" ordered="false" lowerBound="1" eType="#//Type"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeatureMembership"
        ordered="false" eType="#//FeatureMembership" eOpposite="#//FeatureMembership/ownedMemberFeature_comp">
      <eAnnotations source="subsets" references="#//Element/owningMembership"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedFeature">
      <eAnnotations source="subsets" references="#//Element/owningNamespace"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endOwningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedEndFeature">
      <eAnnotations source="subsets" references="#//Feature/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedType" ordered="false"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="referencingFeature"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" lowerBound="1"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedFeature"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedType" ordered="false"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningFeature"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/type #//Element/ownedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRedefinition" ordered="false"
        upperBound="-1" eType="#//Redefinition" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningFeature"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/ownedSubsetting"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSubsetting" ordered="false"
        upperBound="-1" eType="#//Subsetting" volatile="true" transient="true" derived="true"
        eOpposite="#//Subsetting/owningFeature">
      <eAnnotations source="subsets" references="#//Type/ownedGeneralization"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typing" ordered="false"
        upperBound="-1" eType="#//FeatureTyping" eOpposite="#//FeatureTyping/typedFeature"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isEnd" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isNonunique" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" defaultValueLiteral="false" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#//Package">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Type is a descriptor of a set, giving criteria for things being members of the set, known as the &lt;em>instances&lt;/em> of the type. For example, the set of real numbers, the set of all wheeled vehicles, the set of all occurring actions, and so on.&lt;/p>&#xA;&#xA;&lt;p>Both Classifiers and Features are kinds of Types. A Classifier fundamentally represents a set of individual things, while a Feature represents a relation between such things. However, because Features can be nested, a Feature can also represent a contextualized relations and relations between other Features, to any level.&lt;/p> &#xA;&#xA;&#xA;ownedGeneralization->asSet() = specificOfGeneralization->intersection(ownedElement)"/>
    </eAnnotations>
    <eOperations name="directionOf" ordered="false" eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If the given feature is a feature of this type, then return its effective direction relative to this type."/>
      </eAnnotations>
      <eParameters name="feature" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedGeneralization" upperBound="-1"
        eType="#//Generalization" volatile="true" transient="true" derived="true"
        eOpposite="#//Generalization/owningType">
      <eAnnotations source="subsets" references="#//Element/ownedElement #//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeatureMembership_comp"
        upperBound="-1" eType="#//FeatureMembership" containment="true" eOpposite="#//FeatureMembership/owningType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="feature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringType"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/member"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true"
        eOpposite="#//Feature/owningType">
      <eAnnotations source="subsets" references="#//Type/feature #//Package/ownedMember"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="input" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithInput"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="output" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithOutput"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="inheritingType"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/membership"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="endFeaturingType"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedEndFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true"
        eOpposite="#//Feature/endOwningType">
      <eAnnotations source="subsets" references="#//Type/endFeature #//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSufficient" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this Type is to be interpreted as including all M0 things that meet the constraints (logically speaking) of the type. That is, whether the constraints specified for the Type are not only &lt;em>necessary&lt;/em> for inclusion of an instance in the Type, but are also &lt;em>sufficient&lt;/em> to &lt;em>require&lt;/em> inclusion.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedConjugator" ordered="false"
        eType="#//Conjugation" volatile="true" transient="true" derived="true" eOpposite="#//Conjugation/owningType">
      <eAnnotations source="subsets" references="#//Element/ownedRelationship_comp #//Element/ownedElement #//Type/conjugator"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugator" ordered="false"
        eType="#//Conjugation" eOpposite="#//Conjugation/conjugatedType"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isConjugated" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureMembership" upperBound="-1"
        eType="#//FeatureMembership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="type"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="inheritingType"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="multiplicity" ordered="false"
        eType="#//Multiplicity" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithMultiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The one feature (at most) of a Type that is a Multiplicity, which constrains the cardinality of the Type."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeatureMembership"
        upperBound="-1" eType="#//FeatureMembership" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="subsets" references="#//Package/ownedMembership_comp #//Type/featureMembership"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="membership->isUnique(name)&#xA;membership->forAll(m1 | membership->forAll(m2 | m1 &lt;> m2 implies m1.isDistinguishableFrom(m2)))&#xA;member = membership.memberElement&#xA;ownedMember = ownedMembership.ownedMemberElement&#xA;importedMembership = excludeCollisions(ownedImport.importedMembership())->select(m1 | ownedMembership->forAll(m2 | m1.isDistinguishableFrom(m2)))"/>
    </eAnnotations>
    <eOperations name="nameOf" ordered="false" eType="ecore:EDataType types.ecore#//String">
      <eParameters name="element" ordered="false" lowerBound="1" eType="#//Element"/>
    </eOperations>
    <eOperations name="excludeCollisions" ordered="false" upperBound="-1" eType="#//Membership">
      <eParameters name="mem" ordered="false" upperBound="-1" eType="#//Membership"/>
    </eOperations>
    <eOperations name="publicMemberships" ordered="false" upperBound="-1" eType="#//Membership"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMembership_comp" upperBound="-1"
        eType="#//Membership" containment="true" eOpposite="#//Membership/membershipOwningPackage"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMember" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true" eOpposite="#//Element/owningNamespace">
      <eAnnotations source="subsets" references="#//Package/member"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="membership" upperBound="-1"
        eType="#//Membership" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="package"/>
      </eAnnotations>
      <eAnnotations source="union"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedImport_comp" upperBound="-1"
        eType="#//Import" containment="true" eOpposite="#//Import/importOwningPackage"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="member" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="namespace"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="importingPackage"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/membership"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Package/membership #//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedImport" upperBound="-1"
        eType="#//Import" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Element is most basic tracked entity in the model. It provides an identifier for the system to track.&lt;/p>&#xA;&#xA;name = if owningNamespace = null then null&#xA;else owningNamespace.nameOf(self) endif&#xA;ownedElement = ownedRelationship.ownedRelatedElement&#xA;owner = owningRelationship.owningRelatedElement"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningMembership" ordered="false"
        eType="#//Membership" eOpposite="#//Membership/ownedMemberElement_comp">
      <eAnnotations source="subsets" references="#//Element/owningRelationship"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelationship_comp"
        ordered="false" upperBound="-1" eType="#//Relationship" containment="true"
        eOpposite="#//Relationship/owningRelatedElement"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningRelationship" ordered="false"
        eType="#//Relationship" eOpposite="#//Relationship/ownedRelatedElement_comp"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="identifier" ordered="false"
        eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningNamespace" ordered="false"
        eType="#//Package" volatile="true" transient="true" derived="true" eOpposite="#//Package/ownedMember"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false" eType="ecore:EDataType types.ecore#//String"
        volatile="true" transient="true" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" ordered="false"
        eType="#//Element" volatile="true" transient="true" derived="true" eOpposite="#//Element/ownedElement"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedElement" ordered="false"
        upperBound="-1" eType="#//Element" volatile="true" transient="true" derived="true"
        eOpposite="#//Element/owner"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelationship" upperBound="-1"
        eType="#//Relationship" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Membership" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Membership is a relationship between a Package and an Element that helps manage how elements are described and made visible in different models.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eOperations name="isDistinguishableFrom" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eParameters name="other" ordered="false" lowerBound="1" eType="#//Membership"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="memberName" ordered="false"
        eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
        lowerBound="1" eType="#//VisibilityKind" defaultValueLiteral="public"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="aliases" ordered="false"
        upperBound="-1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberElement" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="membership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="membershipOwningPackage"
        ordered="false" eType="#//Package" eOpposite="#//Package/ownedMembership_comp">
      <eAnnotations source="redefines" references="#//Relationship/source #//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberElement_comp"
        ordered="false" eType="#//Element" containment="true" eOpposite="#//Element/owningMembership"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberElement" eType="#//Element"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Membership/memberElement #//Relationship/ownedRelatedElement_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Relationship" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Relationship is an Element that has no reason to exist without having at least two other Elements to which to relate.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedElement" ordered="false"
        unique="false" lowerBound="2" upperBound="-1" eType="#//Element" changeable="false"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="relationship"/>
      </eAnnotations>
      <eAnnotations source="union"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false"
        upperBound="-1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="targetRelationship"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" ordered="false"
        upperBound="-1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sourceRelationship"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningRelatedElement" ordered="false"
        eType="#//Element" eOpposite="#//Element/ownedRelationship_comp">
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelatedElement_comp"
        ordered="false" upperBound="-1" eType="#//Element" containment="true" eOpposite="#//Element/owningRelationship"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelatedElement" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="VisibilityKind">
    <eLiterals name="public"/>
    <eLiterals name="private" value="1"/>
    <eLiterals name="protected" value="2"/>
    <eLiterals name="package" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Import" eSuperTypes="#//Relationship">
    <eOperations name="importedMembership" upperBound="-1" eType="#//Membership"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedPackage" ordered="false"
        lowerBound="1" eType="#//Package">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="import"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
        lowerBound="1" eType="#//VisibilityKind" defaultValueLiteral="public"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importOwningPackage" ordered="false"
        eType="#//Package" eOpposite="#//Package/ownedImport_comp">
      <eAnnotations source="redefines" references="#//Relationship/source #//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Generalization" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Generalization is a Relationship between two Types that asserts that any instance of the specific type is also an instance of the general Type. Special cases of Generalization include&lt;/p>&#xA;&#xA;&lt;ol>&#xA;&lt;li>Subclassing, in which the related Types are both Classifiers,&lt;/li>&#xA;&lt;li>Subsetting , in which the related Types are both Features, and&lt;/li>&#xA;&lt;li>FeatureTyping, in which the specific Type is a Feature and the general Type can be either a Classifier or a Feature.&lt;/li>&#xA;&lt;/ol>&#xA;&#xA;&lt;p>A Generalization is not allowed with a specific Type that is a Classifier and a general Type that is a Feature. This is because a Classifier always includes instances that are individual entities, which an never be instances of a Feature.&lt;/p>&#xA;&#xA;&lt;p>The specific Type of a Generalization can also not be a conjugated Type.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="speciallization"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="specific" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="generalization"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedGeneralization">
      <eAnnotations source="subsets" references="#//Generalization/specific #//Element/owner #//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureMembership" eSuperTypes="#//Membership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>FeatureMembership is a Membership for Features within Types. The Feature that is a member of a Type is said to be &lt;em>nested&lt;/em> under that Type.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featureMembership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/memberElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberFeature_comp"
        ordered="false" eType="#//Feature" containment="true" eOpposite="#//Feature/owningFeatureMembership">
      <eAnnotations source="redefines" references="#//Membership/ownedMemberElement_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPortion" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPort" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="direction" ordered="false"
        eType="#//FeatureDirectionKind"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" eOpposite="#//Type/ownedFeatureMembership_comp">
      <eAnnotations source="redefines" references="#//Membership/membershipOwningPackage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberFeature" eType="#//Feature"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//FeatureMembership/memberFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="FeatureDirectionKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>FeatureDirectionKind enumerates the possible kinds of direction that a Feature may be given as a member of a Type. These include:&lt;/p>&#xA;&#xA;&lt;ol>&#xA;&lt;li>&lt;em>in&lt;/em> - The value of the Feature relative to a given domain instance is specified externally to that instance but used internally.&lt;/li>&#xA;&lt;li>&lt;em>out&lt;/em> - The value of the Feature relative to a given domain instance is specified internally to that instance but used externally.&lt;/li>&#xA;&lt;li>&lt;em>inout&lt;/em> - The value of the Feature relative to a given domain instance is specified externally to that instance and used internally, but may be updated internally, with the updated value made available for use externally.&lt;/li>&#xA;&lt;/ol>"/>
    </eAnnotations>
    <eLiterals name="in"/>
    <eLiterals name="inout" value="1"/>
    <eLiterals name="out" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Conjugation" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Conjugation is a Relationship between two types in which the conjugatedType inherits all the Features of the originalType, but with all input and output Features reversed. That is, any Features with a FeatureMembership with direction &lt;em>in&lt;/em> relative to the originalType are considered to have an effective direction of &lt;em>out&lt;/em> relative to the conjugatedType and, similarly, Features with direction &lt;em>out&lt;/em> in the original type are considered to have an effective direction of &lt;em>in&lt;/em> in the original type. Features with direction &lt;em>inout&lt;/em>, or with no direction, in the originalType, are inherited without change.&lt;/p>&#xA;&#xA;&lt;p>A Type may participate as a conjugatedType in at most one Conjugation relationship, and such a Type may not also be the specific Type in any Generalization relationship.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="originalType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="conjugation"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedType" ordered="false"
        lowerBound="1" eType="#//Type" eOpposite="#//Type/conjugator">
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedConjugator">
      <eAnnotations source="subsets" references="#//Conjugation/conjugatedType #//Relationship/ownedRelatedElement_comp #//Element/owner"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Multiplicity" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Multiplicity is a Feature whose value is the set of allowed cardinalities of its owning Type.&lt;/p>&#xA;&#xA;&lt;p>&lt;b>Note:&lt;/b> A Multiplicity is a nested Feature so that specializations of it can specify cardinality sets as being computed based on the context of the owning Type.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Redefinition" eSuperTypes="#//Subsetting">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Redefinition is a Subsetting in which, in addition, the redefining Feature replaces the redefinedFeature in the context of the owningNamespace of the redefiningFeature. Redefinition is only allowed if the owningNamespace of the redefiningFeature is its owningType and the redefinedFeature would have been inherited into the owningNamespace if it had not been redefined.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefiningFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="redefinition"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettingFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="redefining"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Subsetting" eSuperTypes="#//Generalization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Subsetting is Generalization in which both the specific and general Types are Features. Such a Subsetting relationship implies that the domain (i.e., the intersection of a Feature's featuringTypes) of the subsettingFeature be a subset of the domain of the subsettedFeature and that the range (i.e., the union of a Feature's types) of the subsettingFeature be a subset of the range of the subsettedFeature. Thus, for a specific instance in the domain of both the subsettingFeature and the subsettedFeature (that is, for a specific context), the set of range values of the subsettingFeature will be a subset of the set of range values of the subsettedFeature.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsettedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subsetting"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsettingFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="supersetting"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/specific"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeature" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/ownedSubsetting">
      <eAnnotations source="redefines" references="#//Generalization/owningType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureTyping" eSuperTypes="#//Generalization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>FeatureTyping is Generalization in which the specific Type is a Feature. The general Type of a FeatureTyping is asserted to be a subset of the range of the typedFeature.&lt;/p>&#xA;&#xA;&lt;p>Note, however, that the union of the Types explicitly related to a Feature does not necessarily define the entire range of the Feature. The complete set of &lt;em>types of a Feature&lt;/em> include types inherited from Features it subsets, if any, as well as those explicitly specified through FeatureTyping relationships. The range of a Feature is defined to be the union of &lt;em>all&lt;/em> the types of the Feature.&lt;/p>&#xA;&#xA;&lt;p>If no types are explicitly given for a Feature, either through FeatureTyping or via Subsetting, then the Feature is considered to always have at least the (maximal) type Anything from the Base model library as its single type.&lt;/p> &#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" lowerBound="1"
        eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typingByType"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typedFeature" ordered="false"
        lowerBound="1" eType="#//Feature" eOpposite="#//Feature/typing">
      <eAnnotations source="redefines" references="#//Generalization/specific"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Behavior" eSuperTypes="#//Classifier">
    <eStructuralFeatures xsi:type="ecore:EReference" name="step" ordered="false" upperBound="-1"
        eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringBehavior"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" ordered="false"
        upperBound="-1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameteredBehavior"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Classifier" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Classifier is a Type whose instances include individual entities from the universe of discourse, such as cars, ships or people. However, since FeatureTyping is a kind of Generalization, every Feature typed by a Classifier (directly or indirectly) is semantically a subtype of that Classifier. Therefore, instances of such Features are also instances of the Classifier.&lt;/p>&#xA;    &#xA;&lt;p>Thus, like Features, instances of a Classifier can also, in general, be interpreted as n-tuples. Unlike a Feature, however, the instances of a Classifier include the case of n=1, that is, individual entities. Indeed, for every n-tuple that is an instance of a Classifier, the n-th member of the n-tuple must also be an entity that is also individually an instance of the Classifier (essentially due to the semantics of FeatureTyping).&lt;/p>&#xA;&#xA;ownedSuperclassings = ownedGeneralizations->intersection(superclassing)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSuperclassing" ordered="false"
        upperBound="-1" eType="#//Superclassing" volatile="true" transient="true"
        derived="true" eOpposite="#//Superclassing/owningClassifier">
      <eAnnotations source="subsets" references="#//Type/ownedGeneralization"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Superclassing" eSuperTypes="#//Generalization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Superclassing is Generalization in which both the specific and general Types are Classifiers. Thus, all individual entities that are instances of the specific Classifier, as well as all instances of Features directly or indirectly typed by that Classifier, are asserted to also be instances of the general Classifier.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="superclass" ordered="false"
        lowerBound="1" eType="#//Classifier">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subclassing"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subclass" ordered="false"
        lowerBound="1" eType="#//Classifier">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="superclassing"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/specific"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningClassifier" ordered="false"
        eType="#//Classifier" volatile="true" transient="true" derived="true" eOpposite="#//Classifier/ownedSuperclassing">
      <eAnnotations source="redefines" references="#//Generalization/owningType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="Usage" abstract="true" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Usage is a usage of a Definition. A Usage may only be an owned Feature of a Definition or another Usage."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedUsage" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/owningUsage">
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/nestedUsage">
      <eAnnotations source="subsets" references="#//Feature/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningDefinition" ordered="false"
        eType="#//Definition" volatile="true" transient="true" derived="true" eOpposite="#//Definition/ownedUsage">
      <eAnnotations source="subsets" references="#//Feature/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPort" ordered="false"
        upperBound="-1" eType="#//PortUsage" volatile="true" transient="true" derived="true"
        eOpposite="#//PortUsage/portOwningUsage">
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedProperty" ordered="false"
        upperBound="-1" eType="#//Property" volatile="true" transient="true" derived="true"
        eOpposite="#//Property/propertyOwningUsage">
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedState" ordered="false"
        upperBound="-1" eType="#//StateUsage" volatile="true" transient="true" derived="true"
        eOpposite="#//StateUsage/stateOwningUsage">
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true" eOpposite="#//ConstraintUsage/constraintOwningUsage">
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedTransition" ordered="false"
        upperBound="-1" eType="#//TransitionUsage" volatile="true" transient="true"
        derived="true" eOpposite="#//TransitionUsage/transitionOwningUsage">
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="property" ordered="false"
        upperBound="-1" eType="#//Property" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="usageWithProperty"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedAction" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true"
        eOpposite="#//ActionUsage/actionOwningUsage">
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Definition" abstract="true" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Definition is a Classifier of Usages. The actual kinds of Definitions that may appear in a model are given by the concrete subclasses of Definition. "/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedPort" ordered="false"
        upperBound="-1" eType="#//PortUsage" volatile="true" transient="true" derived="true"
        eOpposite="#//PortUsage/portOwningDefinition">
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="flowProperty" ordered="false"
        upperBound="-1" eType="#//Property" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definitionWithFlow"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The flow Properties of a Definition are the Properties that it features that have a direction specified."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/property"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedProperty" ordered="false"
        upperBound="-1" eType="#//Property" volatile="true" transient="true" derived="true"
        eOpposite="#//Property/propertyOwningDefinition">
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="property" ordered="false"
        upperBound="-1" eType="#//Property" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definitionWithProperty"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAction" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true"
        eOpposite="#//ActionUsage/actionOwningDefinition">
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedState" ordered="false"
        upperBound="-1" eType="#//StateUsage" volatile="true" transient="true" derived="true"
        eOpposite="#//StateUsage/stateOwningDefinition">
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true" eOpposite="#//ConstraintUsage/constraintOwningDefinition">
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTransition" ordered="false"
        upperBound="-1" eType="#//TransitionUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedUsage" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/owningDefinition">
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortUsage" eSuperTypes="#//Usage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A PortUsage is a usage of a PortDefinition. A PortUsage must be owned by a Block, a PortDefinition, a PartProperty or another PortUsage.  Any owned Properties of a PortUsage must not be composite (and, therefore, cannot be PartProperties).&#xA;&#xA;A PortUsage must subset, directly or indirectly, the PortUsage Part::ports inherited by its owner."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="portDefinition" ordered="false"
        lowerBound="1" eType="#//PortDefinition" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedPort"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="portOwningUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/nestedPort">
      <eAnnotations source="redefines" references="#//Usage/owningUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="portOwningDefinition" ordered="false"
        eType="#//Definition" volatile="true" transient="true" derived="true" eOpposite="#//Definition/ownedPort">
      <eAnnotations source="redefines" references="#//Usage/owningDefinition"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortDefinition" eSuperTypes="#//Definition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A PortDefinition defines a point at which external entities can connect to and interact with a system or part of a system. Any owned Properties of a PortDefinition must not be composite (and, therefore, cannot be PartProperties)."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedPortDefinition"
        ordered="false" eType="#//ConjugatedPortDefinition" volatile="true" transient="true"
        derived="true" eOpposite="#//ConjugatedPortDefinition/originalPortDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The ConjugatedPortDefinition that is conjugate to this PortDefinition."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/ownedMember"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConjugatedPortDefinition" eSuperTypes="#//PortDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ConjugatedPortDefinition is a PortDefinition that is a PortConjugation of its original PortDefinition. That is, a ConjugatedPortDefinition inherits all the features of the original PortDefinition, but input flowProperties of the original PortDefinition become outputs on the ConjugatedPortDefinition and output flowProperties of the original PortDefinition become inputs on the ConjugatedPortDefinition. Every PortDefinition has exactly one corresponding ConjugatedPortDefinition, whose name is the same as that of the originalPortDefinition, with the character &quot;~&quot; prepended."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedPortConjugator" ordered="false"
        lowerBound="1" eType="#//PortConjugation" eOpposite="#//PortConjugation/conjugatedPortDefinition">
      <eAnnotations source="redefines" references="#//Type/ownedConjugator"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="originalPortDefinition"
        ordered="false" lowerBound="1" eType="#//PortDefinition" volatile="true" transient="true"
        derived="true" eOpposite="#//PortDefinition/conjugatedPortDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The original PortDefinition for this ConjugatedPortDefinition."/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Element/owningNamespace"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortConjugation" eSuperTypes="#//Conjugation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="PortConjugation is a Conjugation relationship is a Conjugation relationship between a PortDefinition and its corresponding ConjugatedPortDefinition. As a result of this relationship, the ConjugatedPortDefinition inherits all the features of the original PortDefinition, but input flowProperties of the original PortDefinition become outputs on the ConjugatedPortDefinition and output flowProperties of the original PortDefinition become inputs on the ConjugatedPortDefinition."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="originalPortDefinition"
        ordered="false" lowerBound="1" eType="#//PortDefinition">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="portConjugation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The PortDefinition being conjugated."/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Conjugation/originalType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedPortDefinition"
        ordered="false" lowerBound="1" eType="#//ConjugatedPortDefinition" eOpposite="#//ConjugatedPortDefinition/ownedPortConjugator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The ConjugatedPortDefinition that is conjugate to the originalPortDefinition."/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Conjugation/owningType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Property" abstract="true" eSuperTypes="#//Usage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Property is a Usage that represents a measurable or observable attribute, quality or characteristic of a system or part of a system."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="propertyOwningDefinition"
        ordered="false" eType="#//Definition" volatile="true" transient="true" derived="true"
        eOpposite="#//Definition/ownedProperty">
      <eAnnotations source="subsets" references="#//Usage/owningDefinition"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="propertyOwningUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/nestedProperty">
      <eAnnotations source="redefines" references="#//Usage/owningUsage"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateUsage" eSuperTypes="#//Usage #//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A StateUsage is a Usage that is also a Step, and, so, is typed by a Behavior. Nominally, if the type is a StateDefinition, a StateUsage is a Usage of that StateDefinition within a system. However, non-StateDefinition Behaviors are also allowed, to permit use of Behaviors from the Kernel Library.&#xA;&#xA;A StateUsage (other than an ExhibitStateUsage owned by a Part) must subset, directly or indirectly, either the base ActionUsage &quot;states&quot; from the Systems model library, if it is not a composite feature, or the StateUsage &quot;substates&quot; inherited from its owner, if it is a composite feature.&#xA;&#xA;A StateUsage may have up to three features using StateBehaviorMembership, all of different kinds, corresponding to the entry, do and exit actions of the state."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="stateOwningUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/nestedState">
      <eAnnotations source="redefines" references="#//Usage/owningUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="stateDefinition" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Behavior" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedState"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Step/behavior"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="stateOwningDefinition"
        ordered="false" eType="#//Definition" volatile="true" transient="true" derived="true"
        eOpposite="#//Definition/ownedState">
      <eAnnotations source="redefines" references="#//Usage/owningDefinition"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintUsage" eSuperTypes="#//Usage #//Invariant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConstraintUsage is a Usage that is also an Invariant, and, so, is typed by a Predicate. Nominally, if the type is a ConstraintDefinition, a ConstraintUsage is a Usage of that ConstraintDefinition, asserting that the defined constraint holds in the context of the ConstraintUsage. However, non-ConstraintDefinition Predicates are also allowed, to permit use of Predicates from the Kernel Library.&lt;/p>&#xA;&#xA;&lt;p>A ConstraintUsage must be owned by a subtype of the Block Part from the Systems model library, and it must subset, directly or indirectly, the ConstraintUsage Part::constraints inherited by its owner.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraintDefinition" ordered="false"
        lowerBound="1" eType="#//Predicate" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedConstraint"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//BooleanExpression/predicate"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraintOwningUsage"
        ordered="false" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/nestedConstraint">
      <eAnnotations source="redefines" references="#//Usage/owningUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraintOwningDefinition"
        ordered="false" eType="#//Definition" volatile="true" transient="true" derived="true"
        eOpposite="#//Definition/ownedConstraint">
      <eAnnotations source="redefines" references="#//Usage/owningDefinition"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Invariant" eSuperTypes="#//BooleanExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Invariant is a Boolean-valued Expression whose type is the predicate Condition from the Base model library. It represents a logical condition that is asserted to always be true in the context of the evaluation of the Invariant.&lt;/p>&#xA;&#xA;&lt;p>An Invariant must subset, directly or indirectly, the Expression &quot;conditions&quot; from the Base model library which is typed by the base Predicate Condition. As a result, an Invariant must always be typed by Condition or a subclass of Condition. An Invariant must also have a FeatureValue binding it to the LiteralExpression true.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="predicate" ordered="false"
        lowerBound="1" eType="#//Predicate" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedBooleanExpression"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Expression/function"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="#//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Expression is a single computational step within a Function. These can be interpretated as one side of a mathematical equation, a full equation (which can evaluate to true or false), or a software expression (which evaluates to some data type).&#xA;&#xA;Expressions can be typed by Functions, which supports parameterization."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="function" ordered="false"
        lowerBound="1" eType="#//Function" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedExpression"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Step/behavior"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Function" eSuperTypes="#//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Function represents the performance of a calculation that has a singular result. The calculation may be composed of multiple steps."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" ordered="false"
        upperBound="-1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computedFunction"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Behavior/step"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="result" ordered="false"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computingFunction"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/parameter #//Type/output"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Predicate" eSuperTypes="#//Function">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Predicate is a Behavior whose result Parameter has type Boolean and multiplicity 1..1.&lt;/p>&#xA;&#xA;&lt;p>A Predicate must subclass, directly or indirectly, the Predicate Condition from the Base model library.&lt;/p>&#xA;A Predicate is a Function whose result is a Boolean true or false value. These are typically used to test logical statements about modeled objects."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TransitionUsage" eSuperTypes="#//Usage #//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A TransitionUsage is a Usage that is also a Step that is typed by the Activity Transition from the Systems model library, or a subclass of it. As such, it is a behavioral Step that represents a transition between ActionUsages or StateUsages.&#xA;&#xA;A TransitionUsage must subset, directly or indirectly, the base TransitionUsage &quot;transitions&quot;, if it is not a composite feature, or the TransitionUsage &quot;subtransitions&quot; inherited from its owner, if it is a composite feature.&#xA;&#xA;A TransitionUsage may have up to three features using TransitionFeatureMembership, all of different kinds, corresponding to the trigger, guard and effect of the transition."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="transitionOwningUsage"
        ordered="false" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/nestedTransition">
      <eAnnotations source="redefines" references="#//Usage/owningUsage"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ForkNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ForkNode is a ControlNode that must be followed by successor Actions as given by all its outgoing Successions. All outgoing Successions must have a source multiplicity of 1..1. A ForkNode may have at most one incoming Succession.&#xA;&#xA;A ForkNode must subset, directly or indirectly, the ActionUsage Action::forks, implying that it is typed by ForkAction from the Systems model library (or a subtype of it)."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MergeNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A MergeNode is a ControlNode that asserts the merging of its incoming Successions. All incoming Successions must have a source multiplicity of 0..1. A MergeNode may have at most one outgoing Succession.&#xA;&#xA;A MergeNode must subset, directly or indirectly, the ActionUsage Action::merges, implying that it is typed by MergeAction from the Systems model library (or a subtype of it). A MergeAction is constrained to have exactly one predecessor Action, which must be chosen from among the Succession connectors incoming to a MergeNode."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JoinNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A JoinNode is a ControlNode that waits for the completion of all the predecessor Actions given by incoming Successions. All incoming Successions must have a source multiplicity of 1..1. A JoinNode may have at most one outgoing Succession.&#xA;&#xA;A JoinNode must subset, directly or indirectly, the ActionUsage Action::joins, implying that it is typed by JoinAction from the Systems model library (or a subtype of it)."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Activity" eSuperTypes="#//Definition #//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Activity is a Behavior that defines an action performed by a system or part of a system.&#xA;&#xA;An Activity must subclass, directly or indirectly, the base Activity Action from the Systems model library."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringActivity"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/step"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AssociationBlock" eSuperTypes="#//Block #//Association">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An AssociationBlock is a Block that is also an Association, with two or more end features. An AssociationBlock can act as the type of a ConnectionUsage.&#xA;&#xA;An AssociationBlock must subset, directly or indirectly, the base AssociationBlock Connection from the Systems model library."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="#//Definition #//Class">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Block is a Definition of a Class of systems or parts of systems.&#xA;&#xA;A Block must subclass, directly or indirectly, the base Block Part from the Systems model library."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//Classifier"/>
  <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//Class #//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Association specifies multiple semantic relationships (pairs) that can occur between individuals of a given Category. It has at least two participant properties to connect Categories. These properties can have further properties nested under them in order to provide navigation between one Category and another.&#xA;relatedTypes = associationEnd.type"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedType" ordered="false"
        unique="false" lowerBound="2" upperBound="-1" eType="#//Type" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="association"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The types of the endFeatures of the Association, which are the relatedElements of the Association considered as a Relationship."/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningConnector" ordered="false"
        eType="#//Connector" volatile="true" transient="true" derived="true" eOpposite="#//Connector/ownedAssociationType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="associationWithEnd"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Type/endFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Connector" eSuperTypes="#//Feature #//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="relatedFeature = connectorEnd.feature"/>
    </eAnnotations>
    <eOperations name="path" ordered="false" upperBound="-1" eType="#//Feature">
      <eParameters name="relatedFeature" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedFeature" ordered="false"
        unique="false" lowerBound="2" upperBound="-1" eType="#//Feature" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="connector"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="association" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Association" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedConnector"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDirected" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="connectorEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringConnector"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAssociationType" ordered="false"
        upperBound="-1" eType="#//Association" volatile="true" transient="true" derived="true"
        eOpposite="#//Association/owningConnector">
      <eAnnotations source="redefines" references="#//Feature/ownedType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PartProperty" eSuperTypes="#//BlockProperty">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A PartProperty is a usage of a Block to represent a composite part of a system. Any FeatureMembership of a PartProperty must be composite, which means a PartProperty cannot be a feature of ValueType or a nested feature of a ReferenceProperty or a ValueProperty."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BlockProperty" abstract="true" eSuperTypes="#//Property">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A BlockProperty is a Usage whose type is a Class. Nominally, if the type is a Block, a BlockProperty is a Usage of that Block within a system. However, non-Block Classes are also allowed, to permit use of Classes from the Kernel Library. A BlockProperty must be a PartProperty or a ReferenceProperty.&#xA;&#xA;A BlockProperty must subset, directly or indirectly, the base PartProperty &quot;parts&quot; from the Systems model library."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="block" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Class" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedProperty"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceProperty" eSuperTypes="#//BlockProperty">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ReferenceProperty is a non-composite reference to a usage of Block elsewhere in a system. A ReferenceProperty must not be composite. Any nested Properties of a ReferenceProperty must also not be composite (and, therefore, cannot be PartProperties)."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueType" eSuperTypes="#//Definition #//DataType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ValueType defines types of values that may be used to express information about a system, but cannot be identified as the target of any reference. Any owned Properties of a ValueType must not be composite (and, therefore, cannot be PartProperties)."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="#//Classifier"/>
  <eClassifiers xsi:type="ecore:EClass" name="ValueProperty" eSuperTypes="#//Property">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ValueProperty is a Property whose type is a DataType. Nominally, if the type is a ValueType, a ValueProperty is a usage of a ValueType to represent the value of some system characteristic. However, non-ValueType DataTypes are also allowed, to permit use of DataTypes from the Kernel Library. A ValueProperty must not be composite. Any nested Properties of a ValueProperty must also not be composite (and, therefore, cannot be PartProperties).&#xA;&#xA;A ValueProperty must subset, directly or indirectly, the base ValueProperty &quot;values&quot; from the Systems model library."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueType" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//DataType" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedProperty"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="StateActionKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Whether this is an entry, do or exit Action.&#xA;A StateActionKind indicates whether a Action feature of a State is an entry, do or exit Action."/>
    </eAnnotations>
    <eLiterals name="entry"/>
    <eLiterals name="do" value="1"/>
    <eLiterals name="exit" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExhibitStateUsage" eSuperTypes="#//StateUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An ExhibitStateUsage is a StateUsage that represents the exhibiting of another StateUsage. The StateUsage to be exhibited is related to the ExhibitStateUsage by a Subsetting relationship. &#xA;&#xA;If the ExhibitStateUsage is owned by a Part, then it also subsets the exhibitedStates property of that Part (as defined in the library model for Part), otherwise it subsets either &quot;states&quot; or &quot;subsubstates&quot;, as required for a regular StateUsage."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="exhibitedState" ordered="false"
        lowerBound="1" eType="#//StateUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="exhibitStateUsage"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TransitionFeatureKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A StateActionKind indicates whether a Action feature of a State is an entry, do or exit Action."/>
    </eAnnotations>
    <eLiterals name="trigger"/>
    <eLiterals name="guard" value="1"/>
    <eLiterals name="effect" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateDefinition" eSuperTypes="#//Definition #//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A StateDefinition is the Definition of the Behavior of a system or part of a system in a certain state condition.&#xA;&#xA;A State Definition must subclass, directly or indirectly, the base StateDefinition State from the Systems model library."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="state" ordered="false"
        upperBound="-1" eType="#//StateUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringStateDefinition"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/step"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TransitionFeatureMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A TransitionFeatureMembership is a FeatureMembership for a trigger, guard or effect of a TransitionUsage."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" ordered="false" lowerBound="1"
        eType="#//TransitionFeatureKind"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateActionMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A StateBehaviorMembership is a FeatureMembership for an entry, do or exit Action in a StateUsage."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" ordered="false" lowerBound="1"
        eType="#//StateActionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Whether this is an entry, do or exit Action."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InterfaceDefinition" eSuperTypes="#//AssociationBlock">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An InterfaceDefinition is an AssociationBlock all of whose ends are PortUsages, defining an interface between elements that interact through such ports.&#xA;&#xA;An InterfaceDefinition must subclass, directly or indirectly, the base InterfaceDefinition Interface from the Systems model library."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interfaceEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//PortUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="interfaceDefinitionWithEnd"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Association/associationEnd"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConnectionUsage" eSuperTypes="#//Connector #//Usage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ConnectionUsage is a Connector that is also a Usage. Nominally, if its type is an AssociationBlock, then a ConnectionUsage is a Usage of that AssociationBlock representing a connection between parts of a system. However, non-Block Associations are also allowed, to permit use of Associations from the Kernel Library (such as the default BinaryLink).&#xA;&#xA;A ConnectionUsage must subset the base ConnectionUsage &quot;connections&quot; from the Systems model library."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InterfaceUsage" eSuperTypes="#//ConnectionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An InterfaceUsage is a Usage of an InterfaceDefinition to represent an interface connecting parts of a system through specific ports.&#xA;&#xA;An InterfaceUsage must subset, directly or indirectly, the base InterfaceUsage &quot;interfaces&quot; from the Systems model libary."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interfaceDefinition" ordered="false"
        lowerBound="1" eType="#//InterfaceDefinition" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="interfaceConnector"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Connector/association"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintDefinition" eSuperTypes="#//Definition #//Predicate"/>
  <eClassifiers xsi:type="ecore:EClass" name="ConjugatedPortTyping" eSuperTypes="#//FeatureTyping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ConjugatedPortTyping is a FeatureTyping in which the type is derived as the conjugatedPortDefinition of a given PortDefinition."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="portDefinition" ordered="false"
        lowerBound="1" eType="#//PortDefinition">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="conjugatedPortTyping"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedPortDefinition"
        ordered="false" lowerBound="1" eType="#//ConjugatedPortDefinition" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typingByConjugatedPort"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureTyping/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TransferActionUsage" abstract="true"
      eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A TransferActionUsage is an ActionUsage that is also an incomingTransfer in a specific context. A TransferActionUsage must not be composite.&#xA;&#xA;A TransferActionUsage must subset, directly or indirectly, the ActionUsage &quot;transferActions&quot; from the Systems model library. This implies that the TransferActionUsage will be typed by the TransferAction from the model library (or a subtype). The TransferActionUsage must bind the &quot;context&quot; parameter of the TransferAction to the actual context for the usage.&#xA;&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="context" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The context of a TransferActionUsage a Feature specifying the Occurrence of which the TransferActionUsage is an incomingTransfer. It is the target of the binding connector whose source is the redefinition of TransferAction::context by the TransferActionUsage."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PerformActionUsage" eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A PerformActionUsage is an ActionUsage that represents the performance of another ActionUsage. The ActionUsage to be performed is related to the PerformActionUsage by a Subsetting relationship. &#xA;&#xA;If the PerformActionUsage is owned by a Part, then it also subsets the performedAction property of that Part (as defined in the library model for Part),&#xA;otherwise it subsets either &quot;actions&quot; or &quot;subactions&quot;, as required for a regular ActionUsage."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="performedAction" ordered="false"
        lowerBound="1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The performedAction of a PerformedActionUsage specifies the Action to be performed by the PerformedActionUsage. It is the subsetted element of the first owned Subsetting relationship of the PerformedActionUsage."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AcceptActionUsage" eSuperTypes="#//TransferActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An AcceptActionUsage is a TransferActionUsage the specifies the acceptance of an incomingTransfer from its context. "/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SendActionUsage" eSuperTypes="#//TransferActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A SendActionUsage is an ActionUsage that is a Transfer of items sent to a specific target. The context Feature of a SendUsageAction is the result of the target Expression for the SendUsageAction."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false"
        lowerBound="1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The target Expression of a SendActionUsage specifies the target Occurrence to which the SendActionUsage transfers items. The result Parameter of the Expression is the context of the SendActionUsage."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SequenceConstructionExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="element_comp" upperBound="-1"
        eType="#//Expression" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sequenceConstructionExpression"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" upperBound="-1"
        eType="#//Expression" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QueryPathExpression" eSuperTypes="#//FeatureReferenceExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureReferenceExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="referent" ordered="false"
        lowerBound="1" eType="#//Feature"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OperatorExpression" eSuperTypes="#//InvocationExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand_comp" upperBound="-1"
        eType="#//Expression" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="operatorExpression"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand" upperBound="-1"
        eType="#//Expression" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InvocationExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="InstanceCreationExpression" eSuperTypes="#//InvocationExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="instantiatedType" ordered="false"
        lowerBound="1" eType="#//Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QueryPathStepExpression" eSuperTypes="#//OperatorExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="QueryQualifierExpression" eSuperTypes="#//OperatorExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="BlockExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="NullExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralReal" eSuperTypes="#//LiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralInteger" eSuperTypes="#//LiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Integer"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralString" eSuperTypes="#//LiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralUnbounded" eSuperTypes="#//LiteralExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralBoolean" eSuperTypes="#//LiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MultiplicityRange" eSuperTypes="#//Multiplicity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A MultiplicityRange is a Multiplicity whose value is defined to be the (inclusive) range of natural numbers given by the result of a lowerBound Expression and the result of an upperBoundExpression. The result of the lowerBound Expression shall be of type Natural, while the result of the upperBound Expression shall be of type UnlimitedNatural. If the result of the upperBound Expression is the &quot;unbounded&quot; value *, then the specified range includes all natural numbers greater than or equal to the lowerBound value."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBound" ordered="false"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The Expression whose result provides the lower bound of MultiplicityRange. If no lowerBound Expression is given, then the lower bound shall have the same value as the upper bound, unless the upper bound is unbounded (*), in which case the lower bound shall be 0."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//MultiplicityRange/bound"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="upperBound" ordered="false"
        lowerBound="1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The Expression whose result is the upper bound of the MultiplicityRange."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//MultiplicityRange/bound"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="bound" lowerBound="1" upperBound="2"
        eType="#//Expression" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The bound Expressions of the MultiplicityRange. These shall be the only ownedFeatures of the MultiplicityRange."/>
      </eAnnotations>
      <eAnnotations source="union"/>
      <eAnnotations source="redefines" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureValue" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A FeatureValue is a FeatureMembership that identifies a particular member Expression that provides the value of the Feature that owns the FeatureValue. A FeatureValue requires that there be a BindingConnector between the Feature and the result of the Expression, enforcing the intended  semantics. A Feature can have at most one FeatureValue."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureWithValue" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="valuation"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//FeatureMembership/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueConnector" ordered="false"
        lowerBound="1" eType="#//BindingConnector" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featureValue"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value_comp" ordered="false"
        lowerBound="1" eType="#//Expression" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="expressedValuation"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="#//Expression"
        volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BindingConnector" eSuperTypes="#//Connector"/>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterMembership" eSuperTypes="#//FeatureMembership">
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberParameter" ordered="false"
        lowerBound="1" eType="#//Parameter">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameterMembership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/memberFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberParameter_comp"
        ordered="false" lowerBound="1" eType="#//Parameter" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningParameterMembership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberParameter" lowerBound="1"
        eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//ParameterMembership/memberParameter"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TargetEnd" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="SourceEnd" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="ReturnParameterMembership" eSuperTypes="#//ParameterMembership"/>
  <eClassifiers xsi:type="ecore:EClass" name="Succession" eSuperTypes="#//Connector">
    <eStructuralFeatures xsi:type="ecore:EReference" name="transitionStep" ordered="false"
        eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="triggerStep" ordered="false"
        upperBound="-1" eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="effectStep" ordered="false"
        upperBound="-1" eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="guardExpression" ordered="false"
        upperBound="-1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFeature" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlowFeature" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlowEnd" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="AtomicInteraction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemType" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Classifier"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlow" eSuperTypes="#//Connector #//Step">
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemType" unique="false"
        lowerBound="1" upperBound="-1" eType="#//Classifier" volatile="true" transient="true"
        derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetInputFeature" unique="false"
        lowerBound="1" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceOutputFeature" unique="false"
        lowerBound="1" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFlowEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//ItemFlowEnd" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="redefines" references="#//Connector/connectorEnd"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFlowFeature" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//ItemFlowFeature" volatile="true"
        transient="true" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFeature" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//ItemFeature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SuccessionItemFlow" eSuperTypes="#//ItemFlow #//Succession"/>
  <eClassifiers xsi:type="ecore:EClass" name="Interaction" eSuperTypes="#//Association #//Behavior"/>
  <eClassifiers xsi:type="ecore:EClass" name="ConditionalImport" eSuperTypes="#//Import">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition_comp" ordered="false"
        lowerBound="1" eType="#//ImportCondition" containment="true" eOpposite="#//ImportCondition/conditionalImport"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="selector" ordered="false"
        lowerBound="1" eType="#//Predicate" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="import"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="#//ImportCondition" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ImportCondition" eSuperTypes="#//Relationship">
    <eStructuralFeatures xsi:type="ecore:EReference" name="predicate_comp" ordered="false"
        lowerBound="1" eType="#//Predicate" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="condition"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/ownedRelatedElement_comp #//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conditionalImport" ordered="false"
        eType="#//ConditionalImport" eOpposite="#//ConditionalImport/condition_comp">
      <eAnnotations source="redefines" references="#//Relationship/owningRelatedElement #//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="predicate" lowerBound="1"
        eType="#//Predicate" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="commentedElement = annotationForComment.annotatedElement"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false" lowerBound="1"
        eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="commentedElement" ordered="false"
        lowerBound="1" eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="comment"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotationForComment" ordered="false"
        lowerBound="1" eType="#//Annotation" eOpposite="#//Annotation/annotatingComment"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotation" eSuperTypes="#//Relationship">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="annotation"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotatingComment" ordered="false"
        lowerBound="1" eType="#//Comment" eOpposite="#//Comment/annotationForComment">
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Ownership" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Ownership provides an organizational hint to the model to support the development of tree views of the model and nested serializations.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningSource" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sourceOwnership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTarget_comp" ordered="false"
        lowerBound="1" eType="#//Element" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="targetOwnership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTarget" lowerBound="1"
        eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Relationship/ownedRelatedElement_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EndFeatureMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An EndFeatureMembership is a FeatureMembership that specifies the memberFeature as an &lt;em>end&lt;/em> Feature of the owningType of the EndFeatureMembership. EndFeatureMembership has exactly the same meaning as FeatureMembership, except that the semantics of Multiplicity is different for end Features.&lt;/p>&#xA;&#xA;&lt;p>An end Feature is always considered to map each domain entity to a single range entity, whether or not a Multiplicity is given for it. If a Multiplicity constraint &lt;em>is&lt;/em> given for an end Feature, rather than giving the range cardinality for the Feature as usual, it specifies a cardinality constraint for &lt;em>navigating&lt;/em> across the end Features of the featuringType of the end Feature. That is, if a Type has n end Features, then the Multiplicity of any one of those end Features constrains the cardinality of the set of values of that Feature when the values of the other n-1 end Features are held fixed.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
</ecore:EPackage>
