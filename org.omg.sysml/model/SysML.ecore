<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="sysml" nsURI="http://www.omg.org/spec/SysML/2.0" nsPrefix="sysml">
  <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//Class #//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Association classifies relations that can occur between objects of a particular Type. It has at least two participant properties to connect Types. The Association itself may have additional properties that describe the relationship itself.&lt;/p>&#xA;&#xA;relatedTypes = associationEnd.type"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedType" ordered="false"
        unique="false" lowerBound="2" upperBound="-1" eType="#//Type" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="association"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The types of the endFeatures of the Association, which are the relatedElements of the Association considered as a Relationship."/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningConnector" ordered="false"
        eType="#//Connector" volatile="true" transient="true" derived="true" eOpposite="#//Connector/ownedAssociationType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Where the Association is used as a Type for a Connector, it may optionally be owned by the Connector.&lt;/p>&#xA;&#xA;&lt;p>This is the Connector that owns the Association. This is used in the case where the Connector owns its Typing Association. Ownership is unique, so ownership by a Connector precludes ownership by other elements.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="associationWithEnd"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ends of an Association define the objects that can be related by it. When there are two values in this attribute, the Association is informally called &quot;binary.&quot;&lt;/p>&#xA;&lt;p>The ends of the Association determine which elements are eligible to be related by instances of the Association.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Type/endFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Classes serve to subdivide Classifiers into two kinds of objects: those that have some definition beyond their property values and those that are defined entirely by their values. Classes are the first kind. Two objects that conform to a given class can have entirely identical descriptions and properties and still be treated as separate. Classes are intended to be used to describe objects where two copies with the same properties may sit side-by-side and yet be independent of one another.&lt;/p>&#xA;&#xA;&lt;p>Classes serve to subdivide Classifiers into two kinds of objects: those that have some definition beyond their property values and those that are defined entirely by their values. Classes are the first kind. Two objects that are classified by a given Class can have entirely identical descriptions and properties and still be treated as separate. Classes are intended for the construction of models representing real world things which can be separate entities even if all measurable properties are the same.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Classifier" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Classifier is a Type whose instances include individual things, such as cars, ships or people, and all relations (navigations) to those things via Features. To support this, FeatureTyping is a kind of Generalization, so every Feature typed by a Classifier is&amp;nbsp;a specialization of that Classifier (instances of such Features are also instances of the Classifier).&lt;/p>&#xA;&#xA;&lt;p>Like Features, instances of a Classifier can also be interpreted as n-tuples. Unlike a Feature, however, the instances of a Classifier include the case of n=1, that is, individual entities. Ffor every n-tuple that is an instance of a Classifier, the n-th member of the n-tuple must also be an entity that is also individually an instance of the Classifier (because FeatureTyping is a kind of Generalization).&lt;/p>&#xA;&#xA;ownedSuperclassings = ownedGeneralizations->intersection(superclassing)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSuperclassing" ordered="false"
        upperBound="-1" eType="#//Superclassing" volatile="true" transient="true"
        derived="true" eOpposite="#//Superclassing/owningClassifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The relationship leading from the &lt;code>subclass&lt;/code> to a more general Classifier and is owned by the &lt;code>subclass&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedGeneralization"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#//Package">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Type gives&amp;nbsp;criteria for things to be of a particular kind, which are its&amp;nbsp;&lt;em>instances&lt;/em>. For example, RealNumber as a type has real numbers as its instances, WheeledVehicle has&amp;nbsp;particular wheeled vehicles as instances, each with a unique&amp;nbsp;identification number, OperatingProcess has instances of processes being carried out, and so on.&amp;nbsp; See isSufficient.&lt;/p>&#xA;&#xA;&lt;p>Both Classifiers and Features are kinds of Types. A Classifier represents a set of individual things, while a Feature represents a relation between such things and/or other (nested and nesting) Features.&lt;/p>&#xA;&#xA;ownedGeneralization->asSet() = specificOfGeneralization->intersection(ownedElement)"/>
    </eAnnotations>
    <eOperations name="directionOf" ordered="false" eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>If the given feature is a feature of this type, then return its direction relative to this type, taking conjugation into account.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eParameters name="feature" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedGeneralization" upperBound="-1"
        eType="#//Generalization" volatile="true" transient="true" derived="true"
        eOpposite="#//Generalization/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Generalizations owned by this Type.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedElement #//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeatureMembership_comp"
        upperBound="-1" eType="#//FeatureMembership" containment="true" eOpposite="#//FeatureMembership/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All FeatureMemberships that have the Type as source and are owned by it. Each FeatureMembership identifies a Feature of the Type.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true"
        eOpposite="#//Feature/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The result of&amp;nbsp;navigating from &lt;code>ownedFeatureMembership&lt;/code> to that FeatureMembership&amp;#39;s &lt;code>ownedMemberFeature&lt;/code> attribute values.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature #//Package/ownedMember"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedEndFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true"
        eOpposite="#//Feature/endOwningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The result of navigating from &lt;code>ownedFeatureMembership&lt;/code> to that EndFeatureMembership&amp;#39;s &lt;code>ownedMemberFeature&lt;/code> attribute values.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/endFeature #//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="feature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The result of navigating from &lt;code>featureMembership&lt;/code> to that FeatureMembership&amp;#39;s &lt;code>memberFeature&lt;/code> property values.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/member"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="input" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithInput"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All&amp;nbsp;&lt;code>features&lt;/code>&amp;nbsp;identified by&amp;nbsp;FeatureMemberships that have&amp;nbsp;an &amp;quot;in&amp;quot; ??or inout?? &lt;code>direction&lt;/code>. See FeatureDirectionKind.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="output" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithOutput"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All&amp;nbsp;&lt;code>features&lt;/code> identified by&amp;nbsp;FeatureMemberships that have&amp;nbsp;&amp;quot;out&amp;quot; ??or inout?? &lt;code>direction&lt;/code>. See FeatureDirectionKind.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates whether instances of this Type must also be instances of at least one of its specialized Types.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="inheritingType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Placeholder&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/membership"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="endFeaturingType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The result of navigating from &lt;code>featureMembership&lt;/code> to that EndFeatureMembership&amp;#39;s &lt;code>memberFeature&lt;/code> property values.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSufficient" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A Type&amp;nbsp;gives conditions that must be met by its instances, but when isSufficient is false or absent, things meeting those conditions might not be instances of the type.&amp;nbsp; For example, a type Car that is not sufficient could require every instance to have four wheels, but not all four wheeled things would need to be cars.&amp;nbsp; If isSufficient is true, conditions on a Type are enough for things to be its instances.&amp;nbsp; For example, if the type Car were sufficient, all four-wheeled things would be instances of it.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedConjugator" ordered="false"
        eType="#//Conjugation" volatile="true" transient="true" derived="true" eOpposite="#//Conjugation/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedConjugator&lt;/code> attribute references the Conjugation that defines the Type that is also owned by it.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship_comp #//Element/ownedElement #//Type/conjugator"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugator" ordered="false"
        eType="#//Conjugation" eOpposite="#//Conjugation/conjugatedType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>conjugator&lt;/code> attribute references the Conjugation that defines the Type.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isConjugated" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates whether this Type is is conjugated.&amp;nbsp; See Conjugation.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureMembership" upperBound="-1"
        eType="#//FeatureMembership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="type"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All FeatureMemberships that have the Type as source. Each FeatureMembership identifies a Feature of the Type.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedFeature" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="inheritingType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Placeholder&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="multiplicity" ordered="false"
        eType="#//Multiplicity" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithMultiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The one feature (at most) of a Type that is a Multiplicity, which constrains the cardinality of the Type."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeatureMembership"
        upperBound="-1" eType="#//FeatureMembership" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="subsets" references="#//Package/ownedMembership_comp #//Type/featureMembership"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Package is an Element that contains other Elements, known as its &lt;tt>members&lt;/tt>, via Membership Relationships with those Elements. Some of the &lt;tt>members&lt;/tt> of a Package may be owned by the Package. The rest are imported into the Package, either as unowned &lt;tt>memberElements&lt;/tt> of owned Memberships of the Package or via Import Relationships with other Packages.&lt;/p> &#xA;&#xA;&lt;p>A Package also acts as a namespace for its &lt;tt>members&lt;/tt> that consists of the &lt;tt>memberNames&lt;/tt> specified by all the Memberships in the Package. If a Membership specifies a &lt;tt>memberName&lt;/tt>, then that is the name of the corresponding &lt;tt>memberElement&lt;/tt> relative to the namespace defined by the Package. Note that the same Element may be the &lt;tt>memberElement&lt;/tt> of multiple Memberships in a Package (though it may be owned at most once), each of which may define a separate alias for the Element relative to the Package namespace.&lt;/p>&#xA;&#xA;membership->forAll(m1 | membership->forAll(m2 | m1 &lt;> m2 implies m1.isDistinguishableFrom(m2)))&#xA;member = membership.memberElement&#xA;ownedMember = ownedMembership.ownedMemberElement&#xA;importedMembership = excludeCollisions(ownedImport.importedMembership())->select(m1 | ownedMembership->forAll(m2 | m1.isDistinguishableFrom(m2)))"/>
    </eAnnotations>
    <eOperations name="namesOf" ordered="false" upperBound="-1" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the names of the given &lt;tt>element&lt;/tt> as it is known in the namespace defined by this Package.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eParameters name="element" ordered="false" lowerBound="1" eType="#//Element"/>
    </eOperations>
    <eOperations name="excludeCollisions" ordered="false" upperBound="-1" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Exclude from the given set &lt;tt>mem&lt;/tt> of Memberships those that would not be distinguishable from each other if imported into this Package.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eParameters name="mem" ordered="false" upperBound="-1" eType="#//Membership"/>
    </eOperations>
    <eOperations name="publicMemberships" ordered="false" upperBound="-1" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the publicly visible Memberships of this Package, which includes those &lt;tt>ownedMemberships&lt;/tt> that are with a &lt;tt>visibility&lt;/tt> of &lt;tt>public&lt;/tt> and those &lt;tt>importedMemberships&lt;/tt> that where imported via Import Relationships with a &lt;tt>visibility&lt;/tt> of &lt;tt>public&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMembership_comp" upperBound="-1"
        eType="#//Membership" containment="true" eOpposite="#//Membership/membershipOwningPackage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Memberships for which this Package is the &lt;tt>membershipOwningPackage&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMember" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true" eOpposite="#//Element/owningNamespace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owned &lt;tt>members&lt;/tt> of this Package, derived as the &lt;tt>ownedMemberElements&lt;/tt> of the &lt;tt>ownedMemberships&lt;/tt> of the Package.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/member"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="membership" upperBound="-1"
        eType="#//Membership" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="package"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All Memberships in this Package, defined as the union of &lt;tt>ownedMemberships&lt;/tt> and &lt;tt>importedMemberships&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="union"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedImport_comp" upperBound="-1"
        eType="#//Import" containment="true" eOpposite="#//Import/importOwningPackage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Import Relationships for which this Package is the &lt;tt>importingPackage&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="member" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="namespace"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The set of all member Elements of a Package, derived as the &lt;tt>memberElements&lt;/tt> of all &lt;tt>memberships&lt;/tt> of the Package.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="importingPackage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Memberships in this Package that result from Import Relationships between the Package and other Packages. This excludes any Membership from one imported Package that would be indistinguishable from a Membership imported from another Package or from an &lt;tt>ownedMembership&lt;/tt> of this Package.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/membership"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Package/membership #//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedImport" upperBound="-1"
        eType="#//Import" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Element is a constituent of a model that is uniquely identified relative to all other Elements. It can&amp;nbsp;have Relationships with other Elements. Some of these Relationships might imply ownership of other Elements, which means that if an&amp;nbsp;Element is deleted from a model, then so are are all the Elements it owns.&amp;nbsp;Packages are Elements that own other&amp;nbsp;Elements through a Membership Relationship.&lt;/p>&#xA;&#xA;name = if owningNamespace = null then null&#xA;else owningNamespace.nameOf(self) endif&#xA;ownedElement = ownedRelationship.ownedRelatedElement&#xA;owner = owningRelationship.owningRelatedElement"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningMembership" ordered="false"
        eType="#//Membership" eOpposite="#//Membership/ownedMemberElement_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>owningRelationship&lt;/tt> of this Element, if that Relationship is a Membership.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningRelationship"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelationship_comp"
        ordered="false" upperBound="-1" eType="#//Relationship" containment="true"
        eOpposite="#//Relationship/owningRelatedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Relationships for which this Element is the &lt;tt>owningRelatedElement&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningRelationship" ordered="false"
        eType="#//Relationship" eOpposite="#//Relationship/ownedRelatedElement_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Relationship for which this Element is an &lt;tt>ownedRelatedElement&lt;/tt>, if any.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="identifier" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The globally unique identifier for this Element."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningNamespace" ordered="false"
        eType="#//Package" volatile="true" transient="true" derived="true" eOpposite="#//Package/ownedMember">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Package that is the owning namespace for this Element, derived as the &lt;tt>membershipOwningPackage&lt;/tt> of the &lt;tt>owningMembership&lt;/tt> of this Element, if any.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false" eType="ecore:EDataType types.ecore#//String"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The primary name of this Element. If the Element is owned by a Package, then its &lt;tt>name&lt;/tt> is derived as the &lt;tt>memberName&lt;/tt> of the &lt;tt>owningMembership&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" ordered="false"
        eType="#//Element" volatile="true" transient="true" derived="true" eOpposite="#//Element/ownedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owner of this Element, derived as the &lt;tt>owningRelatedElement&lt;/tt> of the &lt;tt>owningRelationship&lt;/tt> of this Element, if any.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedElement" ordered="false"
        upperBound="-1" eType="#//Element" volatile="true" transient="true" derived="true"
        eOpposite="#//Element/owner">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Elements owned by this Element, derived as the &lt;tt>ownedRelatedElements&lt;/tt> of the &lt;tt>ownedRelationships&lt;/tt> of this Element.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelationship" upperBound="-1"
        eType="#//Relationship" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Membership" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Membership is a Relationship between a Package and an Element that indicates the Element is a &lt;tt>member&lt;/tt> of (i.e., is contained in) the Package. The Membership may define a &lt;tt>memberName&lt;/tt> for the Element as a member of the Package and specifies whether or not the Element is publicly visible as a member of the Package from outside the Package. The Element may be owned by the Membership, in which case it is an &lt;tt>ownedMember&lt;/tt> of the Package, or it may be referenced but not owned, in which case it is effectively individually imported into the Package.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eOperations name="isDistinguishableFrom" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this Membership is distinguishable from a given &lt;tt>other&lt;/tt> Membership. By default, this is true if the &lt;tt>memberName&lt;/tt> of this Membership is either empty or is different the &lt;tt>memberName&lt;/tt> of the &lt;tt>other&lt;/tt> Membership, or if the metaclass of the &lt;tt>memberElement&lt;/tt> of this Membership is different than the metaclass of the &lt;tt>memberElement&lt;/tt> of the &lt;tt>other&lt;/tt> Membership. But this may be overridden in specializations of Membership.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eParameters name="other" ordered="false" lowerBound="1" eType="#//Membership"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="memberName" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The name of the &lt;tt>memberElement&lt;/tt> in the namespace defined by the &lt;tt>membershipOwningPackage&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
        lowerBound="1" eType="#//VisibilityKind" defaultValueLiteral="public">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not the Membership of the &lt;tt>memberElement&lt;/tt> in the &lt;tt>membershipOwningPackage&lt;/tt> is publicly visible outside that Package. Unless the &lt;tt>membershipOwningPackage&lt;/tt> is a Type, &lt;tt>visibility&lt;/tt> must be either &lt;tt>public&lt;/tt> or &lt;tt>private&lt;/tt>&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberElement" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="membership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Element that becomes a &lt;tt>member&lt;/tt> of the &lt;tt>membershipOwningPackage&lt;/tt> due to this Membership.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="membershipOwningPackage"
        ordered="false" eType="#//Package" eOpposite="#//Package/ownedMembership_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Package of which the &lt;tt>memberElement&lt;/tt> becomes a &lt;tt>member&lt;/tt> due to this Membership.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source #//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberElement_comp"
        ordered="false" eType="#//Element" containment="true" eOpposite="#//Element/owningMembership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>memberElement&lt;/tt> of this Membership if it is owned by the Membership as an &lt;tt>ownedRelatedElement&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberElement" eType="#//Element"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Membership/memberElement #//Relationship/ownedRelatedElement_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Relationship" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Relationship is an Element that relates two or more other Elements. Some of its &lt;tt>relatedElements&lt;/tt> may be owned, in which case those &lt;tt>ownedRelatedElements&lt;/tt> will be deleted from a model if their &lt;tt>owningRelationship&lt;/tt> is. A Relationship may also be owned by another Element, in which case the &lt;tt>ownedRelatedElements&lt;/tt> of the Relationship are also considered to be transitively owned by the &lt;tt>owningRelatedElement&lt;/tt> of the Relationship.&lt;/p>&#xA;&#xA;&lt;p>The &lt;tt>relatedElements&lt;/tt> of a Relationship are divided into &lt;tt>source&lt;/tt> and &lt;tt>target&lt;/tt> Elements. The Relationship is considered to be directed from the &lt;tt>source&lt;/tt> to the &lt;tt>target&lt;/tt> Elements. An undirected Relationship may have either all &lt;tt>source&lt;/tt> or all &lt;tt>target&lt;/tt> Elements.&lt;/p>&#xA;&#xA;&lt;p>A &amp;quot;relationship Element&amp;quot; in the kernel abstract syntax is generically any Element that is an instance of either Relationship or a direct or indirect specialization of Relationship. Any other kind of Element is a &amp;quot;non-relationship Element&amp;quot;. It is a convention of the kernel abstract syntax that non-relationship Elements are &lt;em>only&lt;/em> related via reified relationship Elements. Any meta-associations directly between non-relationship Elements must be derived from underlying reified Relationships.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedElement" ordered="false"
        unique="false" lowerBound="2" upperBound="-1" eType="#//Element" changeable="false"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="relationship"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Elements that are related by this Relationship, derived as the union of the &lt;tt>source&lt;/tt> and &lt;tt>target&lt;/tt> Elements of the Relationship. Every Relationship must have at least two &lt;tt>relatedElements&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="union"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false"
        upperBound="-1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="targetRelationship"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>relatedElements&lt;/tt> to which this Relationship is considered to be directed.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" ordered="false"
        upperBound="-1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sourceRelationship"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>relatedElements&lt;/tt> from which this Relationship is considered to be directed.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningRelatedElement" ordered="false"
        eType="#//Element" eOpposite="#//Element/ownedRelationship_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>relatedElement&lt;/tt> of this Relationship that owns the Relationship, if any.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelatedElement_comp"
        ordered="false" upperBound="-1" eType="#//Element" containment="true" eOpposite="#//Element/owningRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>relatedElements&lt;/tt> of this Relationship that are owned by the Relationship.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelatedElement" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="VisibilityKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>VisibilityKind is an enumeration whose literals specify the visibility of a Membership of an Element in a Package outside of that Package. Note that &amp;quot;visibility&amp;quot; specifically restricts whether an Element in a Package may be referenced by name from outside the Package and only otherwise restricts access to an Element as provided by specific constraints in the abstract syntax (e.g., preventing the import or inheritance of private Elements).&lt;/p>&#xA;"/>
    </eAnnotations>
    <eLiterals name="public">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a Membership is publicly visible outside its owning Package.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="private" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates a Membership is not visible outside its owning Package.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="protected" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Only valid for if the owning Package of a Membership is a Type. Indicates that the Membership is visible outside its owning Type only if inherited by direct or indirect specializations of the Type.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="package" value="3">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Only valid if the owning Package of a Membership is a Type. Indicates that the Membership is visible to all Elements within the nearest enclosing Package that is not a Type to which it would have been visible if it had public visibility, but that it is not visible outside the nearest owning Package that is not a Type (or if there is no such Package).&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Import" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Import is a Relationship between an importing Package an imported Package in which the visible member Elements of the imported Package become imported members of the importing Package. An Import may be &lt;em>public,&lt;/em> in which case the imported members are &amp;quot;re-exported&amp;quot; as publicly visible members of the importing Package, or it may be &lt;em>private,&lt;/em> in which case the imported members are private to the importing Package.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eOperations name="importedMembership" upperBound="-1" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Returns the Memberships of the &lt;tt>importedPackage&lt;/tt> whose &lt;tt>memberElements&lt;/tt> are to become imported &lt;tt>members&lt;/tt> of the &lt;tt>importOwningPackage&lt;/tt>. By default, this is the set of publicly visible Memberships of the &lt;tt>importedPackage&lt;/tt>, but this may be overridden in specializations of Import&lt;/p>&#xA;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedPackage" ordered="false"
        lowerBound="1" eType="#//Package">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="import"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Package whose visible &lt;tt>members&lt;/tt> are imported by this Import.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
        lowerBound="1" eType="#//VisibilityKind" defaultValueLiteral="public">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether the imported members from this Import become public or private members of the &lt;tt>importOwningPackage&lt;/tt>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importOwningPackage" ordered="false"
        eType="#//Package" eOpposite="#//Package/ownedImport_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Package into which &lt;tt>members&lt;/tt> are imported by this Import, which must be the &lt;tt>owningRelatedElement&lt;/tt> of the Import.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source #//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Generalization" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Generalization is a Relationship between two Types indicating that any instance of the specific type is also an instance of the general Type. This means instances of the special Type form a subset of instances of the general Type, which might be the same set. Special cases of Generalization include&lt;/p>&#xA;&#xA;&lt;ol>&#xA;&#x9;&lt;li>Subclassing, in which the related Types are both Classifiers,&lt;/li>&#xA;&#x9;&lt;li>Subsetting , in which the related Types are both Features, and&lt;/li>&#xA;&#x9;&lt;li>FeatureTyping, in which the specific Type is a Feature and the general Type can be either a Classifier or a Feature.&lt;/li>&#xA;&lt;/ol>&#xA;&#xA;&lt;p>A Generalization is not allowed with a specific Type that is a Classifier and a general Type that is a Feature. This is because a Classifier always includes instances that are individual entities, which an never be instances of a Feature.&lt;/p>&#xA;&#xA;&lt;p>The specific Type of a Generalization cannot&amp;nbsp;be a conjugated Type.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="speciallization"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A Type with&amp;nbsp;a&amp;nbsp;superset of all instances of the specific Type, which might be the same set.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="specific" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="generalization"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A Type with&amp;nbsp;a&amp;nbsp;subset of all instances of the general Type, which might be the same set.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedGeneralization">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Type that owns this Generalization.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Generalization/specific #//Element/owner #//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureMembership" eSuperTypes="#//Membership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>FeatureMembership is a Membership for Features within Types. The Feature that is a member of a Type is said to be &lt;em>nested&lt;/em> under that Type.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates whether values of&amp;nbsp;the Feature are computed from values of other Features.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates whether the values of the Feature change after an instance of the Feature&amp;#39;s domain comes into existence.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featureMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>memberFeature&lt;/code> indicates a Feature that will have Membership with the FeatureMembership's &lt;code>type&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/memberElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberFeature_comp"
        ordered="false" eType="#//Feature" containment="true" eOpposite="#//Feature/owningFeatureMembership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>memberFeature&lt;/code> indicates a Feature that will have Membership with the FeatureMembership's &lt;code>type&lt;/code> and be owned by that Type.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/ownedMemberElement_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not the Feature is integral to the definition of the featuringType.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPortion" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not values of the Feature are contained in the space and time of instances of the Feature&amp;#39;s domain.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPort" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>If true, the Feature will be treated as a &amp;quot;port,&amp;quot; which is visible externally to instances of the Feature&amp;#39;s domain.&amp;nbsp;&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="direction" ordered="false"
        eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Determines how values of the Feature are determined or used, see&amp;nbsp;FeatureDirectionKind.&lt;/p>&#xA;&#xA;&lt;p>&lt;mms-cf mms-cf-type=&quot;doc&quot; mms-element-id=&quot;_18_5_3_12e503d9_1533160651677_936694_42144&quot; non-editable=&quot;false&quot;>[cf:FeatureDirectionKind.doc]&lt;/mms-cf>&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" eOpposite="#//Type/ownedFeatureMembership_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Type of which this FeatureMembership will make the Feature a member and owned element.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/membershipOwningPackage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberFeature" eType="#//Feature"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//FeatureMembership/memberFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Feature" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Feature is a Type that represents a relation with a domain that is the intersection of its featuringTypes&amp;nbsp;and a range (co-domain) that is the intersection of its types. A Feature&amp;#39;s types include&amp;nbsp;at least Anything (the library superclass of all classifiers), which can be narrowed to other classifiers by redefinition.&amp;nbsp; Features might not have any&amp;nbsp;featuringTypes, whereupon its domain is the same as if it were Anything.&lt;/p>&#xA;&#xA;&lt;p>In the simplest cases, a Feature&amp;#39;s featuringTypes and types&amp;nbsp;are classifiers, leading to its instances being pairs (sequences of length two), with&amp;nbsp;the first element from the domain&amp;nbsp;and the second element&amp;nbsp;from the range. Examples include cars paired with wheels, people with other people, and cars with numbers&amp;nbsp;representing the car length.&lt;/p>&#xA;&#xA;&lt;p>Since Features are Types, it is possible for their&amp;nbsp;featuringTypes and types&amp;nbsp;to be Features. In this case, instances are sequences with more than two elements, with the leading elements being instances of the domain features and trailing elements being instances of the range features.&lt;/p>&#xA;&#xA;ownedRedefinition = ownedSubsetting->intersection(redefining)&#xA;referencedType = type - ownedElement&#xA;ownedSubsetting = ownedGeneralization->intersection(subsetting)&#xA;isComposite = owningFeatureMembership &lt;> null and owningFeatureMembership.isComposite&#xA;ownedType = type->intersection(ownedElement)&#xA;type = typing.type&#xA;isEnd = owningFeatureMembership &lt;> null and owningFeatureMembership.oclIsKindOf(EndFeatureMembership)"/>
    </eAnnotations>
    <eOperations name="directionFor" ordered="false" lowerBound="1" eType="#//FeatureDirectionKind">
      <eParameters name="type" ordered="false" lowerBound="1" eType="#//Type"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedType" ordered="false"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="referencingFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The members of &lt;code>type&lt;/code> that are not in &lt;code>ownedType&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>featuringType&lt;/code> values are derived as all Types that have a path through &lt;code>ownedFeatureMembership&lt;/code> to &lt;code>ownedMemberFeature&lt;/code>."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningNamespace"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not values for this Feature must have no duplicates&amp;nbsp;or not.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether an order exists for the values of this Feature or not.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" lowerBound="1"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Types of a Feature restrict its&amp;nbsp;values to instances that are classified by all the types.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedType" ordered="false"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The elements in &lt;code>type&lt;/code> of this Feature that are also owned.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/type #//Element/ownedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRedefinition" ordered="false"
        upperBound="-1" eType="#//Redefinition" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Redefinition relationships that are&amp;nbsp;owned by this Feature, where this feature is the redefining one??.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/ownedSubsetting"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSubsetting" ordered="false"
        upperBound="-1" eType="#//Subsetting" volatile="true" transient="true" derived="true"
        eOpposite="#//Subsetting/owningFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Subsetting relationships that are&amp;nbsp;owned by this Feature, where this feature is the subsetting one??.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedGeneralization"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeatureMembership"
        ordered="false" eType="#//FeatureMembership" eOpposite="#//FeatureMembership/ownedMemberFeature_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The FeatureMembership that indicates where this Feature will be a &lt;code>memberElement&lt;/code> and what its owner will be.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningMembership"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not the Feature is integral to the definition of the featuringType.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typing" ordered="false"
        upperBound="-1" eType="#//FeatureTyping" eOpposite="#//FeatureTyping/typedFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The FeatureTyping relationships determining the &lt;code>type&lt;/code> of this Feature.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isEnd" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not the Feature is to be treated as an End for an Association. When a Feature is marked as an End, there are additional navigation rules to consider between instances of that Feature's Type and instances of the Types of other Ends of the Association.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endOwningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedEndFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Placeholder&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isNonunique" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" defaultValueLiteral="false" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Redefinition" eSuperTypes="#//Subsetting">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Redefinition is a Subsetting that&amp;nbsp;requires the redefinedFeature and the&amp;nbsp;redefiningFeature to have the same values (on each instance of the owningType /domain ??&amp;nbsp;&amp;nbsp;of the redefiningFeature).&amp;nbsp;&amp;nbsp;This means any restrictions on the redefiningFeature, such as type or multiplicity, also apply to the redefinedFeature (on each instance of the owningType of the redefining Feature), and vice versa.&amp;nbsp; The redefinedFeature might have&amp;nbsp;values for instances of the owningType of the redefiningFeature, but only as instances of the owningType of the redefinedFeature that happen to also be instances of the owningType of the redefiningFeature.&amp;nbsp; This is supported by the constraints on the domains of the redefining and redefinedFeature inherited from&amp;nbsp;Subsetting.&amp;nbsp; However, these constraints are narrowed for Redefinition to require the owningTypes of the redefining and redefinedFeatures to be different and the redefinedFeature to&amp;nbsp;not be imported into the owningNamespace of the redefiningFeature [violates subsetting constraint??].&amp;nbsp; This&amp;nbsp;enables&amp;nbsp;the redefiningFeature to have the same name as the redefinedFeature if desired.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefiningFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="redefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature that is redefining another Feature linked by this Redefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettingFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="redefining"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature that is redefined by another Feature linked by this Redefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Subsetting" eSuperTypes="#//Generalization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Subsetting is Generalization in which&amp;nbsp;the specific and general Types are Features. This means all values of the subsettingFeature (on instances of its domain, i.e., the intersection of its featuringTypes) are values of the subsettingFeature on instances of its domain.&amp;nbsp; To support this,&amp;nbsp;the owningType / domain?? of the subsettingFeature must be the same or specialize (at least indirectly) the&amp;nbsp;owningType / domain?? of the subsettedFeature (via Generalization), and the type / range?? (intersection of a Feature&amp;#39;s types) of the subsetting feature must specialize the range of the subsetted feature.&amp;nbsp;The subsettedFeature is imported into the owningNamespace of the subsettingFeature (if it is not already in that namespace), requiring the names of the subsetting and subsettedFeatures to be different.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsettedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subsetting"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature that has a more encompassing value set of the pair linked by this Subsetting.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsettingFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="supersetting"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature whose set of values is a subset of the set of values of the other member of the pair linked by this Subsetting.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/specific"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeature" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/ownedSubsetting">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature whose set of values is a subset of the set of values of the other member of the pair linked by this Subsetting. It also owns the relationship.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/owningType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureTyping" eSuperTypes="#//Generalization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>FeatureTyping is Generalization in which the specific Type is a Feature. This means the range of the typedFeature is a subset of the set of&amp;nbsp;instances of the general Type.&amp;nbsp; Because of this,&amp;nbsp;the range of the Feature might be narrower than the intersection of Types related to a Feature via FeatureTypings, for example due to additional constraints on the Feature.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" lowerBound="1"
        eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typingByType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Type that is being applied by this FeatureTyping.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typedFeature" ordered="false"
        lowerBound="1" eType="#//Feature" eOpposite="#//Feature/typing">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature that has its Type determined by this FeatureTyping.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/specific"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="FeatureDirectionKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>FeatureDirectionKind enumerates the possible kinds of direction that a Feature may be given as a member of a Type. See description of its literal values.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eLiterals name="in">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Values&amp;nbsp;of the Feature on each&amp;nbsp;instance of its domain are&amp;nbsp;determined&amp;nbsp;externally to that instance and&amp;nbsp;used internally.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="inout" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Values&amp;nbsp;of the Feature on each&amp;nbsp;instance are&amp;nbsp;determined either as&amp;nbsp;&lt;em>in&lt;/em> or &lt;em>out&lt;/em>&amp;nbsp;directions, or both.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="out" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Values of the Feature on each instance of its domain are&amp;nbsp;determined internally to that instance and used externally.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Conjugation" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Conjugation is a Relationship between two types in which the conjugatedType inherits all the Features of the originalType, but with all input and output Features reversed. That is, any Features with a FeatureMembership with direction &lt;em>in&lt;/em> relative to the originalType are considered to have an effective direction of &lt;em>out&lt;/em> relative to the conjugatedType and, similarly, Features with direction &lt;em>out&lt;/em> in the original type are considered to have an effective direction of &lt;em>in&lt;/em> in the original type. Features with direction &lt;em>inout&lt;/em>, or with no direction, in the originalType, are inherited without change.&lt;/p>&#xA;&#xA;&lt;p>A Type may participate as a conjugatedType in at most one Conjugation relationship, and such a Type may not also be the specific Type in any Generalization relationship.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="originalType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="conjugation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Type in the model to be conjugated.&lt;/P>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedType" ordered="false"
        lowerBound="1" eType="#//Type" eOpposite="#//Type/conjugator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Type that is the result of applying Conjugation to the &lt;code>originalType&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedConjugator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Type that is the result of applying Conjugation to the &lt;code>originalType&lt;/code> that also owns the Conjugation.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Conjugation/conjugatedType #//Relationship/ownedRelatedElement_comp #//Element/owner"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Multiplicity" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Multiplicity is a Feature whose values are the&amp;nbsp;possible number of instances of its owning Type.&lt;/p>&#xA;&#xA;&lt;p>&lt;b>Note:&lt;/b> A Multiplicity is a nested Feature so that specializations of it can specify numbers by expressions&amp;nbsp;that might give different results depending on the instance on which it is evaluated.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Superclassing" eSuperTypes="#//Generalization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Superclassing is Generalization in which both the specific and general Types are Classifiers. All individual entities that are instances of the specific Classifier are&amp;nbsp;also instances of the general Classifier.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="superclass" ordered="false"
        lowerBound="1" eType="#//Classifier">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subclassing"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The more general Classifier in the pair linked by Superclassing.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subclass" ordered="false"
        lowerBound="1" eType="#//Classifier">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="superclassing"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The more specific Classifier in the pair linked by Superclassing.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/specific"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningClassifier" ordered="false"
        eType="#//Classifier" volatile="true" transient="true" derived="true" eOpposite="#//Classifier/ownedSuperclassing">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The more general Classifier in the pair linked by Superclassing and that owns the relationship.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Generalization/owningType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Connector" eSuperTypes="#//Feature #//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Connector is a context-specific application of an Association. Associations determine what kinds of objects can be linked. The Connector further restricts those links according to specific roles played within a featuringType.&lt;/p>&#xA;&#xA;relatedFeature = connectorEnd.feature"/>
    </eAnnotations>
    <eOperations name="path" ordered="false" upperBound="-1" eType="#//Feature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The path operation returns the path from the Connector owner to the Feature given as the &amp;quot;relatedFeature&amp;quot; parameter.&lt;/p>&#xA;&#xA;&lt;p>There must be a path of Features from the owner of a Connector (which must be a Type) to each of the relatedFeatures of the Connector.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eParameters name="relatedFeature" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedFeature" ordered="false"
        unique="false" lowerBound="2" upperBound="-1" eType="#//Feature" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="connector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>relatedFeatures&lt;/tt> of a Connector are the subsetted Features of the connectorEnds of the Connector.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="association" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Association" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedConnector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Association that types the connector.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDirected" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not the Connector should be considered to have a direction from source to target.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="connectorEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringConnector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>These are the ends of the Connector, which show what Features it relates. The connectorEnds of a Connector are the features of the Connector that redefine the end Features of the Connector association.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAssociationType" ordered="false"
        upperBound="-1" eType="#//Association" volatile="true" transient="true" derived="true"
        eOpposite="#//Association/owningConnector">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Connector may optionally own the Association that types it.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/ownedType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ParameterMembership is a FeatureMembership for which the &lt;code>memberFeature&lt;/code> is a Parameter, which always owned. The default &lt;code>direction&lt;/code> for a ParameterMembership is &lt;code>in&lt;/code>  (unless it is a ReturnParameterMembership). A ParameterMembership must be owned by a Behavior or a Step.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberParameter" ordered="false"
        lowerBound="1" eType="#//Parameter">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameterMembership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/memberFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberParameter_comp"
        ordered="false" lowerBound="1" eType="#//Parameter" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningParameterMembership"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberParameter" lowerBound="1"
        eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//ParameterMembership/memberParameter"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Parameter is a Feature that either modifies the course of a Behavior or Expression, or characterizes its outcome. It provides a fixed role for objects or values in the context of a Behavior or Expression to describe incoming and outgoing effects. A Parameter must be owned by a Behavior or Step via a ParameterMembership Relationship.&lt;/p>&#xA;&#xA;&lt;p>Parameters either modify the course of Behaviors or characterize their outcomes. They provide fixed roles for objects or values in the context of a Behavior to describe incoming and outgoing effects.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Behavior" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Behaviors provide a place to describe changes in objects over time. Behaviors can be decomposed into steps and be characterized by parameters.&lt;/p>&#xA;&lt;p>Behaviors provide a place to describe changes in objects over time. Behaviors can be decomposed into steps and be characterized by parameters.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="step" ordered="false" upperBound="-1"
        eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringBehavior"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The steps that make up the given Behavior.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" ordered="false"
        upperBound="-1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameteredBehavior"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The set of parameters that are applied to or returned from the given Behavior. It is also possible to set a direction for &lt;code>parameter&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Step" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Steps are Features for Behaviors and support the steady refinement of behavioral descriptions. Steps can be related in time and serve as sources and targets for object transfers.&lt;/p>&#xA;&#xA;&lt;p>Steps are Features for Behaviors and support the steady refinement of behavioral descriptions. Steps can be related in time and serve as sources and targets for object transfers.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behavior" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Behavior" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedStep"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>This is the Behavior that types the Step.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" ordered="false"
        upperBound="-1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameteredStep"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReturnParameterMembership" eSuperTypes="#//ParameterMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ReturnParameterMembership is a ParameterMembership that indicates that the &lt;code>memberParameter&lt;/code> is the &lt;code>result&lt;/code> Parameter of a Function or Expression. The &lt;code>direction&lt;/code> for a ReturnParameterMembership must be &lt;code>out&lt;/code>.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QueryQualifierExpression" eSuperTypes="#//OperatorExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="OperatorExpression" eSuperTypes="#//InvocationExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand_comp" upperBound="-1"
        eType="#//Expression" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="operatorExpression"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//InvocationExpression/argument"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand" upperBound="-1"
        eType="#//Expression" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InvocationExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An InocationExpression is an Expression each of whose input &lt;code>parameters&lt;/code> are bound to the &lt;code>result&lt;/code> of an owned &lt;code>argument&lt;/code> Expression. Each input &lt;code>parameter&lt;/code> may be bound to the &lt;code>result&lt;/code> of at most one &lt;code>argument&lt;/code>.&lt;/p> "/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="invocation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An Expression owned by the InvocationExpression whose &lt;code>result&lt;/code> is bound to an input &lt;code>parameter&lt;/code> of the InvocationExpression.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="#//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression is a single computational step within a Function. These can be interpreted as one side of a mathematical equation, a full equation (which can evaluate to true or false), or a software expression (which evaluates to some data type). Expressions can be typed by Functions, which supports parameterization. Expressions return one &lt;code>result&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="function" ordered="false"
        lowerBound="1" eType="#//Function" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Function that types the Expression.&lt;/p>&#xA;&lt;p>This is the Function that types the Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Step/behavior"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="result" ordered="false"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computingExpresion"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The object or value that is the result of evaluating the Expression, derived as the &lt;code>parameter&lt;/code> related to the Expression by a ReturnParameterMembership.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Step/parameter #//Type/output"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Function" eSuperTypes="#//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Function represents the performance of a calculation that has a singular result. The calculation may be composed of multiple steps."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" ordered="false"
        upperBound="-1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computedFunction"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The set of expressions that represent computational steps or parts of a system of equations within the Function.&lt;/p>&#xA;&lt;p>The set of expressions that represent computational steps or parts of a system of equations within the Function.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Behavior/step"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="result" ordered="false"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computingFunction"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The object or value that is the result of evaluating the Function, derived as the &lt;code>parameter&lt;/code> related to the Function by a ReturnParameterMembership.&lt;/p>&#xA;&#xA;&lt;p>The object or value that is the result of evaluating the Function.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/parameter #//Type/output"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QueryPathExpression" eSuperTypes="#//FeatureReferenceExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureReferenceExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A FeatureReferenceExpression is an Expression whose &lt;code>result&lt;/code> is bound a &lt;code>referent&lt;/code> Feature. The only &lt;code>members&lt;/code> allowed for a FeatureReferenceExpression are the &lt;code>referent&lt;/code>, the &lt;code>result&lt;/code> and the BindingConnector between them.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referent" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="reference"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The single unowned &lt;code>member&lt;/code> of this FeatureReferenceExpression that is bound to its &lt;code>result&lt;/code> Parameter.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/member"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InstanceCreationExpression" eSuperTypes="#//InvocationExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="instantiatedType" ordered="false"
        lowerBound="1" eType="#//Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BlockExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="QueryPathStepExpression" eSuperTypes="#//OperatorExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralBoolean" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression that provides a Boolean value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralBoolean must be typed by a specialization of Evaluation with no input parameters and a single Boolean value as its result.&lt;/p>&#xA;&#xA;&lt;p>An Expression that provides a Boolean value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralBoolean must be typed by a specialization of Evaluation with no input parameters and a single Boolean value as its result.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Boolean value that is the result of evaluating this Expression.&lt;/p>&#xA;&lt;p>The Boolean value that is the result of evaluating this Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression that provides a basic value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralExpression must be typed by a specialization of Evaluation with no input parameters and a single value as its result.&lt;/p>&#xA;&#xA;&lt;p>An Expression that provides a basic value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralExpression must be typed by a specialization of Evaluation with no input parameters and a single value as its result.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NullExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression that results in a null value.&lt;/p>&#xA;&#xA;&lt;p>A NullExpression must be typed by a NullEvaluation which results in an empty value.&lt;/p>&#xA;&#xA;&lt;p>An Expression that results in a null value.&lt;/p>&#xA;&#xA;&lt;p>A NullExpression must be typed by a NullEvaluation which results in an empty value.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralString" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression that provides a String value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralString must be typed by a specialization of Evaluation with no input parameters and a single String value as its result.&lt;/p>&#xA;&lt;p>An Expression that provides a String value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralString must be typed by a specialization of Evaluation with no input parameters and a single String value as its result.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The String value that is the result of evaluating this Expression.&lt;/p>&#xA;&#xA;&lt;p>The String value that is the result of evaluating this Expression.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralUnbounded" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression that provides a value without a given bound as a result.&lt;/p>&#xA;&#xA;&lt;p>An Expression that provides a value without a given bound as a result.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralReal" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression that provides a Real value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralReal must be typed by a specialization of Evaluation with no input parameters and a single Real value as its result.&lt;/p>&#xA;&lt;p>An Expression that provides a Real value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralReal must be typed by a specialization of Evaluation with no input parameters and a single Real value as its result.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Real">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Real value that is the result of evaluating this Expression.&lt;/p>&#xA;&#xA;&lt;p>The Real value that is the result of evaluating this Expression.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralInteger" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Expression that provides an Integer value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralInteger must be typed by a specialization of Evaluation with no input parameters and a single Integer value as its result.&lt;/p>&#xA;&#xA;&lt;p>An Expression that provides an Integer value as a result.&lt;/p>&#xA;&#xA;&lt;p>A LiteralInteger must be typed by a specialization of Evaluation with no input parameters and a single Integer value as its result.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Integer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Integer value that is the result of evaluating this Expression.&lt;/p>&#xA;&lt;p>The Integer value that is the result of evaluating this Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Predicate" eSuperTypes="#//Function">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Predicate is a Behavior whose result Parameter has type Boolean and multiplicity 1..1.&lt;/p>&#xA;&#xA;&lt;p>A Predicate must subclass, directly or indirectly, the Predicate Condition from the Base model library.&lt;/p>&#xA;A Predicate is a Function whose result is a Boolean true or false value. These are typically used to test logical statements about modeled objects."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An BooleanExpression is a Boolean-valued Expression whose type is a Predicate. It represents a logical condition resulting from the evaluation of the Predicate.&lt;/p>&#xA;&#xA;&lt;p>A BooleanExpression must subset, directly or indirectly, the Expression &quot;booleanEvaluations&quot; from the Base model library, which is typed by the base Predicate BooleanEvaluation. As a result, a BooleanExpression must always be typed by BooleanEvaluation or a subclass of BooleanEvaluation.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="predicate" ordered="false"
        lowerBound="1" eType="#//Predicate" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedBooleanExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Predicate that types the Expression.&lt;/p>&#xA;&lt;p>The Predicate that types the Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Expression/function"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Invariant" eSuperTypes="#//BooleanExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Invariant is a BooleanExpression that is asserted to be true. This assertion is made by the Invariant having a BindingConnector as an owned Feature that binds the Invariant to the result of a LiteralBoolean with value &quot;true&quot;.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="assertionConnector" ordered="false"
        lowerBound="1" eType="#//BindingConnector" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="invariant"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An owned Feature of the Invariant that is a BindingConnector between the Invariant and the result of a LiteralBoolean with value &quot;true&quot;."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BindingConnector" eSuperTypes="#//Connector">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Binding Connector asserts that the values of instances of objects linked by its ends are identical. Binding connectors are typically used to assign equivalence between instances of DataType but can also be used with objects typed by Classes. In the later case, the binding declares that the objects that are playing roles defined by two Features are in fact the same object.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureValue" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A FeatureValue is a FeatureMembership that identifies a particular member Expression that provides the value of the Feature that owns the FeatureValue. A FeatureValue requires that there be a BindingConnector between the Feature and the result of the Expression, enforcing the intended  semantics. A Feature can have at most one FeatureValue."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureWithValue" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="valuation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature to be provided a value.&lt;/p>&#xA;&#xA;&lt;p>The Feature to be provided a value.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//FeatureMembership/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueConnector" ordered="false"
        lowerBound="1" eType="#//BindingConnector" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featureValue"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The BindingConnector that assigns the result of the Expression to the Feature.&lt;/p>&#xA;&#xA;&lt;p>The valueConnector must be an ownedFeature of the featureWithValue.&lt;br />&#xA;The source of the valueConnector must be the featureWithValue.&lt;br />&#xA;The target of the valueConnector must be result of the value Expression.&lt;/p>&#xA;&lt;p>The BindingConnector that assigns the result of the Expression to the Feature.&lt;/p>&#xA;&#xA;&lt;p>The valueConnector must be an ownedFeature of the featureWithValue.&lt;br />&#xA;The source of the valueConnector must be the featureWithValue.&lt;br />&#xA;The target of the valueConnector must be result of the value Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value_comp" ordered="false"
        lowerBound="1" eType="#//Expression" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="expressedValuation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Expression that provides the value as a result.&lt;/p>&#xA;&#xA;&lt;p>The Expression that provides the value as a result.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="#//Expression"
        volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MultiplicityRange" eSuperTypes="#//Multiplicity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A MultiplicityRange is a Multiplicity whose value is defined to be the (inclusive) range of natural numbers given by the result of a lowerBound Expression and the result of an upperBoundExpression. The result of the lowerBound Expression shall be of type Natural, while the result of the upperBound Expression shall be of type UnlimitedNatural. If the result of the upperBound Expression is the &quot;unbounded&quot; value *, then the specified range includes all natural numbers greater than or equal to the lowerBound value."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBound" ordered="false"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The Expression whose result provides the lower bound of MultiplicityRange. If no lowerBound Expression is given, then the lower bound shall have the same value as the upper bound, unless the upper bound is unbounded (*), in which case the lower bound shall be 0."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//MultiplicityRange/bound"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="upperBound" ordered="false"
        lowerBound="1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The Expression whose result is the upper bound of the MultiplicityRange."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//MultiplicityRange/bound"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="bound" lowerBound="1" upperBound="2"
        eType="#//Expression" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The bound Expressions of the MultiplicityRange. These shall be the only ownedFeatures of the MultiplicityRange."/>
      </eAnnotations>
      <eAnnotations source="union"/>
      <eAnnotations source="redefines" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlowFeature" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFeature" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlowEnd" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="Interaction" eSuperTypes="#//Association #//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Interactions are Behaviors that also provide context for multiple objects that have behaviors that impact one another.&lt;/p>&#xA;&#xA;&lt;p>Interactions are Behaviors that also provide context for multiple objects that have behaviors that impact one another.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlow" eSuperTypes="#//Connector #//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An ItemFlow is a Behavior that represents the transfer of objects or values from one Feature to another. ItemFlows can take finite time to complete.&lt;/p>&#xA;&#xA;&lt;p>ItemsFlows must be typed by a library Transfer element or one of its specializations.&lt;/p>&#xA;&lt;p>An ItemFlow is a Behavior that represents the transfer of objects or values from one Feature to another. ItemFlows can take finite time to complete.&lt;/p>&#xA;&#xA;&lt;p>ItemsFlows must be typed by a library Transfer element or one of its specializations.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemType" unique="false"
        lowerBound="1" upperBound="-1" eType="#//Classifier" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>This is the Type of the item transferred.&lt;/p>&#xA;&#xA;&lt;p>This is the Type of the item transferred.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetInputFeature" unique="false"
        lowerBound="1" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature that receives the ItemFlow.&lt;/p>&#xA;&#xA;&lt;p>The Feature that receives the ItemFlow.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceOutputFeature" unique="false"
        lowerBound="1" upperBound="-1" eType="#//Feature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature that originates the ItemFlow.&lt;/p>&#xA;&#xA;&lt;p>The Feature that originates the ItemFlow.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFlowEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//ItemFlowEnd" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>TBD. Uses a class from the Interactions IMPL Package.&lt;/p>&#xA;&#xA;&lt;p>TBD. Uses a class from the Interactions IMPL Package.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Connector/connectorEnd"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFlowFeature" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//ItemFlowFeature" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>TBD. Uses a class from the Interactions IMPL Package.&lt;/p>&#xA;&#xA;&lt;p>TBD. Uses a class from the Interactions IMPL Package.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFeature" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//ItemFeature" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>This Feature represents the Item in transit between the source and the target during the transfer.&lt;/p>&#xA;&#xA;&lt;p>This Feature represents the Item in transit between the source and the target during the transfer.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SuccessionItemFlow" eSuperTypes="#//ItemFlow #//Succession">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>SuccessionItemFlows are ItemFlows that also provide temporal ordering. They classify Transfers that must complete before the target behavior can start.&lt;/p>&#xA;&#xA;&lt;p>Must be typed by M1 TransferBefore or one of its specializations.&lt;br />&#xA;association-&amp;gt;is=OrSpecializationOf(TransferBefore) }&lt;/p>&#xA;&#xA;&lt;p>SuccessionItemFlows are ItemFlows that also provide temporal ordering. They classify Transfers that must complete before the target behavior can start.&lt;/p>&#xA;&#xA;&lt;p>Must be typed by M1 TransferBefore or one of its specializations.&lt;br />&#xA;association-&amp;gt;is=OrSpecializationOf(TransferBefore) }&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Succession" eSuperTypes="#//Connector">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Succession is a  temporal Connector that asserts an ordering of occurrences with respect to time. A Succession must directly or indirectly specialize the Association HappensBefore from the Kernel model library.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="transitionStep" ordered="false"
        eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The transitionStep represents a TransitionPerformance, which means that the Succession is interpreted as an occurrence as well as a time ordering of other occurrences.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="triggerStep" ordered="false"
        upperBound="-1" eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Steps that map incoming events to the timing of occurrences of the transitionStep. The values of triggerStep subset the list of acceptable events to be received by a Behavior or the object that performs it.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="effectStep" ordered="false"
        upperBound="-1" eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Steps that represent occurrences that are side effects of the transitionStep occurring.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="guardExpression" ordered="false"
        upperBound="-1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An Expression that must evaluate to true before the transitionStep can occur.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>DataTypes serve to subdivide Classifiers into two kinds of objects: those that have some definition beyond their property values and those that are defined entirely by their values. DataTypes are the second kind. If two objects classified by DataType have identical property values, they are understood to be in fact the same object. DataTypes are intended to represent data or mathematical objects which is where the equivalence based on matched values is appropriate.&lt;/p>&#xA;&#xA;&lt;p>DataTypes serve to subdivide Classifiers into two kinds of objects: those that have some definition beyond their property values and those that are defined entirely by their values. DataTypes are the second kind. If two objects classified by DataType have identical property values, they are understood to be in fact the same object. DataTypes are intended to represent data or mathematical objects which is where the equivalence based on matched values is appropriate.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ImportCondition" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>The ImportCondition links ConditionalImports to the predicate that serves as the criteria for import.&lt;/p>&#xA;&lt;p>The ImportCondition links ConditionalImports to the predicate that serves as the criteria for import.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conditionalImport" ordered="false"
        eType="#//ConditionalImport" eOpposite="#//ConditionalImport/condition_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConditionalImport that may be chosen for element import.&lt;/p>&#xA;&#xA;&lt;p>The ConditionalImport that may be chosen for element import.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/owningRelatedElement #//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="predicate_comp" ordered="false"
        lowerBound="1" eType="#//Predicate" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="condition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The criteria by which the import is chosen to be employed.&lt;/p>&#xA;&lt;p>The criteria by which the import is chosen to be employed.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/ownedRelatedElement_comp #//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="predicate" lowerBound="1"
        eType="#//Predicate" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConditionalImport" eSuperTypes="#//Import">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConditionalImport is an Import that is based on a specific condition. The condition allows for selective gathering of items from one package to another.&lt;/p>&#xA;&lt;p>A ConditionalImport is an Import that is based on a specific condition. The condition allows for selective gathering of items from one package to another.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="selector" ordered="false"
        lowerBound="1" eType="#//Predicate" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="import"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Predicate that determines what is imported.&lt;/p>&#xA;&#xA;&lt;p>The Predicate that determines what is imported.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition_comp" ordered="false"
        lowerBound="1" eType="#//ImportCondition" containment="true" eOpposite="#//ImportCondition/conditionalImport">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ImportCondition that links the ConditionalImport to a predicate that is the basis for accepting the import.&lt;/p>&#xA;&lt;p>The ImportCondition that links the ConditionalImport to a predicate that is the basis for accepting the import.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="#//ImportCondition" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Element/ownedRelationship_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TargetEnd" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="SourceEnd" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="TimeSliceFeature" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="LifeClass" eSuperTypes="#//Class"/>
  <eClassifiers xsi:type="ecore:EClass" name="SnapshotFeature" eSuperTypes="#//Feature"/>
  <eClassifiers xsi:type="ecore:EClass" name="IndividualDefinition" eSuperTypes="#//ItemDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An IndividualDefinition is an ItemDefinition that is constrained to represent an individual thing. The instances of an IndividualDefinition include all spatial and temporal portions of the individual being represented, but only one of these can be the complete Life of the individual. All other instances must be portions of the &quot;maximal portion&quot; that is single Life instance, capturing the conception that all of the instances represent one individual with a single &quot;identity&quot;.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lifeClass" ordered="false"
        lowerBound="1" eType="#//Class" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="individualWithLife"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An Class that is an &lt;tt>ownedMember&lt;/tt> of this IndividualDefinition, which specializes both the IndividualDefinition and the &lt;tt>Base::Life&lt;/tt> Class from the Kernel Library and has a multiplicity of 0..1. This constrains the IndividualDefinition to have at most one instance that is a complete Life.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/ownedMember"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemDefinition" eSuperTypes="#//Definition #//Class">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An ItemDefinition is a Definition of a Class of things that may be acted on by a system or parts of a system, which do not necessarily perform actions themselves. This includes items that can be exchanged between parts of a system, such as water or electrical signals.&lt;/p>&#xA;&#xA;&lt;p>An ItemDefinition must subclass, directly or indirectly, the base ItemDefinition Item from the Systems model library.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Definition" abstract="true" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Definition is a Classifier of Usages. The actual kinds of Definitions that may appear in a model are given by the concrete subclasses of Definition.&lt;/p>&#xA;&#xA;&lt;p>Normally, a Definition has owned Usages that model &lt;code>features&lt;/code> of the thing being defined. A Definition may also have other Definitions nested in it, but this has no semantic significance, other than the nested namespace scoping resulting from the Definition being considered as a Package for any nested Definitions.&lt;/p>&#xA;&#xA;&lt;p>However, if a Definition has &lt;code>isVariation&lt;/code> = true, then it represents a &lt;em>variation point&lt;/em> Definition. In this case, all of its &lt;code>members&lt;/code> must be &lt;code>variant&lt;/code> Usages, related to the Definition by VariantMembership Relationships. Rather than being &lt;code>features&lt;/code> of the Definition, &lt;code>variant&lt;/code> Usages model different concrete alternatives that can be chosen to fill in for an abstract Usage of the variation point Definition.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedUsage" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/owningDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usages that are &lt;code>ownedFeatures&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature #//Definition/usage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variant" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/owningVariationDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usages which represent the variants of this Definition as a variation point Definition, if &lt;code>isVariation&lt;/code> = true. If &lt;code>isVariation&lt;/code> = false, the there must be no &lt;code>variants&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/ownedMember"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variantMembership_comp"
        ordered="false" upperBound="-1" eType="#//VariantMembership" containment="true"
        eOpposite="#//VariantMembership/owningVariationDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedMemberships&lt;/code> of this Definition that are VariantMemberships. If &lt;code>isVariation&lt;/code> = true, then this must be all &lt;code>memberships&lt;/code> of the Definition. If &lt;code>isVariation&lt;/code> = false, then &lt;code>variantMembership&lt;/code>must be empty.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedPort" ordered="false"
        upperBound="-1" eType="#//PortUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="portOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PortUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="flow" ordered="false" upperBound="-1"
        eType="#//Usage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definitionWithFlow"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>usages&lt;/code> of this Definition that have a non-null &lt;code>direction&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/usage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="usage" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usages that are &lt;code>features&lt;/code> of this Definition (not necessarily owned).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedState" ordered="false"
        upperBound="-1" eType="#//StateUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="stateOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The StateUsages that are &lt;tt>ownedUsages&lt;/tt> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="constraintOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConstraintUsages that are &lt;tt>ownedUsages&lt;/tt> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTransition" ordered="false"
        upperBound="-1" eType="#//TransitionUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="transitionOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The TransitionUsages that are &lt;tt>ownedUsages&lt;/tt> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRequirement" ordered="false"
        upperBound="-1" eType="#//RequirementUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="requirementOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The RequirementUsages that are &lt;tt>ownedUsages&lt;/tt> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedConstraint"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedCalculation" ordered="false"
        upperBound="-1" eType="#//CalculationUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="calculationOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The CalculationUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedAction"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isVariation" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this Definition is for a variation point or not. If true, then all the &lt;code>memberships&lt;/code> of the Definition must be VariantMemberships.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAnalysisCase" ordered="false"
        upperBound="-1" eType="#//AnalysisCaseUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="analysisCaseOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The AnalysisCaseUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedCase"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedCase" ordered="false"
        upperBound="-1" eType="#//CaseUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="caseOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The CaseUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedCalculation"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedReference" ordered="false"
        upperBound="-1" eType="#//ReferenceUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="referenceOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ReferenceUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAction" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="actionOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/code>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedConnection" ordered="false"
        upperBound="-1" eType="#//ConnectionUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="connectionOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConnectionUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedPart"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedItem" ordered="false"
        upperBound="-1" eType="#//ItemUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="itemOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedPart" ordered="false"
        upperBound="-1" eType="#//PartUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="partOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PartUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedItem"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedIndividual" ordered="false"
        upperBound="-1" eType="#//IndividualUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="individualOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;>The IndividualUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.>/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedItem"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedInterface" ordered="false"
        upperBound="-1" eType="#//InterfaceUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="interfaceOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The InterfaceUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedConnection"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" ordered="false"
        upperBound="-1" eType="#//AttributeUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="attributeOwningDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The AttributeUsages that are &lt;code>ownedUsages&lt;/code> of this Definition.&lt;p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Definition/ownedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variantMembership" upperBound="-1"
        eType="#//VariantMembership" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Package/ownedMembership_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Usage" abstract="true" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Usage is a usage of a Definition. A Usage may only be an &lt;code>ownedFeature&lt;/code> of a Definition or another Usage.&lt;/p>&#xA;&#xA;&lt;p>A Usage may have &lt;code>nestedUsages&lt;/code> that model &lt;code>features&lt;/code> that apply in the context of the &lt;code>owningUsage&lt;/code>. A Usage may also have Definitions nested in it, but this has no semantic significance, other than the nested namespace scoping resulting from the Usage being considered as a Package for any nested Definitions.&lt;/p>&#xA;&#xA;&lt;p>However, if a Usage has &lt;code>isVariation&lt;/code> = true, then it represents a &lt;em>variation point&lt;/em> Usage. In this case, all of its &lt;code>members&lt;/code> must be &lt;code>variant&lt;/code> Usages, related to the Usage by VariantMembership Relationships. Rather than being &lt;code>features&lt;/code> of the Usage, &lt;code>variant&lt;/code> Usages model different concrete alternatives that can be chosen to fill in for the variation point Usage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedUsage" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/owningUsage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usages that are &lt;code>ownedFeatures&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature #//Usage/usage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/nestedUsage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usage in which this Usage is nested (if any).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPort" ordered="false"
        upperBound="-1" eType="#//PortUsage" volatile="true" transient="true" derived="true"
        eOpposite="#//PortUsage/portOwningUsage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PortUsages that are &lt;code>ownedUsages&lt;/cpde> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedAction" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="actionOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsages that are &lt;tt>ownedUsages&lt;/tt> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedState" ordered="false"
        upperBound="-1" eType="#//StateUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="stateOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The StateUsages that are &lt;tt>ownedUsages&lt;/tt> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedAction"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="constraintOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConstraintUsages that are &lt;tt>ownedUsages&lt;/tt> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedTransition" ordered="false"
        upperBound="-1" eType="#//TransitionUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="transitionOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The TransitionUsages that are &lt;tt>ownedUsages&lt;/tt> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedRequirement" ordered="false"
        upperBound="-1" eType="#//RequirementUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="requirementOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The RequirementUsages that are &lt;tt>ownedUsages&lt;/tt> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedConstraint"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedCalculation" ordered="false"
        upperBound="-1" eType="#//CalculationUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="calculationOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The CalculationUsage that are &lt;code>ownedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedAction"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isVariation" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this Usage is for a variation point or not. If true, then all the &lt;code>memberships&lt;/code> of the Usage must be VariantMemberships.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningVariationDefinition"
        ordered="false" eType="#//Definition" volatile="true" transient="true" derived="true"
        eOpposite="#//Definition/variant">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The variation point Definition that for which this Usage represents a variant, derived as the &lt;code>owningVariationDefinition&lt;/code> of the &lt;code>owningVariantMembership&lt;/code> of the Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningNamespace"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="flow" ordered="false" upperBound="-1"
        eType="#//Usage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="usageWithFlow"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>usages&lt;/code> of this Usage that have a non-null &lt;code>direction&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/usage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedCase" ordered="false"
        upperBound="-1" eType="#//CaseUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value=" /caseOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The CaseUsages that are &lt;code>ownedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedCalculation"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningVariantMembership"
        ordered="false" eType="#//VariantMembership" eOpposite="#//VariantMembership/ownedVariantUsage_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The VariantMembership that owns this Usage, if the Usage represents a variant in the context of some variation point Definition or Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningMembership"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variantMembership_comp"
        ordered="false" upperBound="-1" eType="#//VariantMembership" containment="true"
        eOpposite="#//VariantMembership/owningVariationUsage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedMemberships&lt;/code> of this Usage that are VariantMemberships. If &lt;code>isVariation&lt;/code> = true, then this must be all &lt;code>memberships&lt;/code> of the Usages. If &lt;code>isVariation&lt;/code> = false, then &lt;code>variantMembership&lt;/code>must be empty.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningVariationUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/variant">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The variation point Usage that for which this Usage represents a variant, derived as the &lt;code>owningVariationUsage&lt;/code> of the &lt;code>owningVariantMembership&lt;/code> of the Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningNamespace"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variant" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true"
        eOpposite="#//Usage/owningVariationUsage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usages which represent the variants of this Usage as a variation point Usage, if &lt;code>isVariation&lt;/code> = true. If &lt;code>isVariation&lt;/code> = false, the there must be no &lt;code>variants&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/ownedMember"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedAnalysisCase" ordered="false"
        upperBound="-1" eType="#//AnalysisCaseUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="analysisCaseOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The AnalysisCaseUsages that are &lt;code>ownedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedCase"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="usage" ordered="false"
        upperBound="-1" eType="#//Usage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usages that are &lt;code>features&lt;/code> of this Usage (not necessarily owned).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedReference" ordered="false"
        upperBound="-1" eType="#//ReferenceUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="referenceOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedConnection" ordered="false"
        upperBound="-1" eType="#//ConnectionUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="connectionOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConnectionUsages that are &lt;code>nestedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedPart"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedItem" ordered="false"
        upperBound="-1" eType="#//ItemUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="itemOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ItemUsages that are &lt;code>nestedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPart" ordered="false"
        upperBound="-1" eType="#//PartUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="partOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PartUsages that are &lt;code>nestedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedItem"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedIndividual" ordered="false"
        upperBound="-1" eType="#//IndividualUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="indvidualOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p.The IndividualUsages that are &lt;code>nestedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedItem"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedInterface" ordered="false"
        upperBound="-1" eType="#//InterfaceUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="interfaceOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The InterfaceUsages that are &lt;code>ownedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedConnection"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nestedAttribute" ordered="false"
        upperBound="-1" eType="#//AttributeUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="attributeOwningUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The AttributeUsages that are &lt;code>ownedUsages&lt;/code> of this Usage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Usage/nestedUsage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningDefinition" ordered="false"
        eType="#//Definition" volatile="true" transient="true" derived="true" eOpposite="#//Definition/ownedUsage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Definition that owns this Usage (if any).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/owningType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variantMembership" upperBound="-1"
        eType="#//VariantMembership" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Package/ownedMembership_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortUsage" eSuperTypes="#//Usage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A PortUsage is a usage of a PortDefinition. A PortUsage must be owned by a PartDefinition, a PortDefinition, a PartUsage or another PortUsage.  Any &lt;code>ownedUsages&lt;/code> of a PortUsage must not be composite.&lt;/p>&#xA;&#xA;&lt;p>A PortUsage must subset, directly or indirectly, the PortUsage &lt;code>ports&lt;/code> from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="portDefinition" ordered="false"
        lowerBound="1" eType="#//PortDefinition" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedPort"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PortDefinition that is the single &lt;tt>type&lt;/tt> of this PortUsage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="portOwningUsage" ordered="false"
        eType="#//Usage" volatile="true" transient="true" derived="true" eOpposite="#//Usage/nestedPort">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usage in which the &lt;code>nestedPort&lt;/code> is nested (if any).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Usage/owningUsage"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortDefinition" eSuperTypes="#//Definition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A PortDefinition defines a point at which external entities can connect to and interact with a system or part of a system. Any &lt;code>ownedUsages&lt;/code> of a PortDefinition must not be composite.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedPortDefinition"
        ordered="false" eType="#//ConjugatedPortDefinition" volatile="true" transient="true"
        derived="true" eOpposite="#//ConjugatedPortDefinition/originalPortDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConjugatedPortDefinition that is conjugate to this PortDefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Package/ownedMember"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConjugatedPortDefinition" eSuperTypes="#//PortDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConjugatedPortDefinition is a PortDefinition that is a PortConjugation of its original PortDefinition. That is, a ConjugatedPortDefinition inherits all the &lt;code>features&lt;/code> of the original PortDefinition, but input &lt;code>flows&lt;/code> of the original PortDefinition become outputs on the ConjugatedPortDefinition and output &lt;code>flows&lt;/code> of the original PortDefinition become inputs on the ConjugatedPortDefinition. Every PortDefinition has exactly one corresponding ConjugatedPortDefinition, whose name is the same as that of the originalPortDefinition, with the character &lt;code>~&lt;/code> prepended.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedPortConjugator" ordered="false"
        lowerBound="1" eType="#//PortConjugation" eOpposite="#//PortConjugation/conjugatedPortDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PortConjugation that is the &lt;tt>ownedConjugator&lt;/tt> of this ConjugatedPortDefinition, linking it its &lt;tt>originalPortDefinition&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Type/ownedConjugator"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="originalPortDefinition"
        ordered="false" lowerBound="1" eType="#//PortDefinition" volatile="true" transient="true"
        derived="true" eOpposite="#//PortDefinition/conjugatedPortDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The original PortDefinition for this ConjugatedPortDefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Element/owningNamespace"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortConjugation" eSuperTypes="#//Conjugation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A PortConjugation is a Conjugation Relationship between a PortDefinition and its corresponding ConjugatedPortDefinition. As a result of this Relationship, the ConjugatedPortDefinition inherits all the &lt;code>features&lt;/cpde> of the original PortDefinition, but input &lt;code>flows&lt;/cpde> of the original PortDefinition become outputs on the ConjugatedPortDefinition and output &lt;code>flows&lt;/code> of the original PortDefinition become inputs on the ConjugatedPortDefinition.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="originalPortDefinition"
        ordered="false" lowerBound="1" eType="#//PortDefinition">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="portConjugation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PortDefinition being conjugated.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Conjugation/originalType"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedPortDefinition"
        ordered="false" lowerBound="1" eType="#//ConjugatedPortDefinition" eOpposite="#//ConjugatedPortDefinition/ownedPortConjugator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConjugatedPortDefinition that is conjugate to the &lt;tt>originalPortDefinition&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Conjugation/owningType"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ActionUsage" eSuperTypes="#//Usage #//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An ActionUsage is a Usage that is also a Step, and, so, is typed by a Behavior. Nominally, if the type is an ActionDefinition, an ActionUsage is a Usage of that ActionDefinition within a system. However, other kinds of kernel Behaviors are also allowed, to permit use of Behaviors from the Kernel Library.&lt;/p>&#xA;&#xA;&lt;p>An ActionUsage (other than a PerformActionUsage owned by a Part) must subset, directly or indirectly, either the base ActionUsage &lt;code>actions&lt;/code> from the Systems model library, if it is not a composite feature, or the ActionUsage &lt;code>subactions&lt;/code> inherited from its owner, if it is a composite feature.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="actionDefinition" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Behavior" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedAction"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Behaviors that are the types of this ActionUsage. Nominally, these would be ActionDefinitions, but other kings of Kernel Behaviors are also allowed, to permit use of Behaviors from the Kernel Library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Step/behavior"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateUsage" eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A StateUsage is an ActionUsage that is nominally the Usage of a StateDefinition. However, other kinds of kernel Behaviors are also allowed as types, to permit use of Behaviors from the Kernel Library.&lt;/p>&#xA;&#xA;&lt;p>A StateUsage (other than an ExhibitStateUsage owned by a Part) must subset, directly or indirectly, either the base StateUsage &lt;code>stateActions&lt;/code> from the Systems model library, if it is not a composite feature, or the StateUsage &lt;code>substates&lt;/cpde> inherited from its owner, if it is a composite feature.&lt;/p>&#xA;&#xA;&lt;p>A StateUsage may be related to up to three of its &lt;code>ownedFeatures&lt;/code> by StateBehaviorMembership Relationships, all of different &lt;code>kinds&lt;/code>, corresponding to the entry, do and exit actions of the StateUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="stateDefinition" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Behavior" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedState"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Behaviors that are the types of this StateUsage. Nominally, these would be StateDefinitions, but non-Activity Behaviors are also allowed, to permit use of Behaviors from the Kernel Library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Step/behavior"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="entryAction" ordered="false"
        eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="enteredState"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage of this StateUsage to be performed on entry to the state specified by the StateUsage. This is derived as the owned ActionUsage related to the StateDefinition by a StateSubactionMembership  with &lt;tt>kind&lt;/tt> = &lt;tt>entry&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="doAction" ordered="false"
        eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="activeState"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage of this StateUsage to be performed while in the state specified by the StateUsage. This is derived as the owned ActionUsage related to the StateDefinition by a StateSubactionMembership  with &lt;tt>kind&lt;/tt> = &lt;tt>do&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="exitAction" ordered="false"
        eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="exitedState"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage of this StateUsage to be performed on exit from the state specified by the StateUsage. This is derived as the owned ActionUsage related to the StateDefinition by a StateSubactionMembership  with &lt;tt>kind&lt;/tt> = &lt;tt>exit&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintUsage" eSuperTypes="#//Usage #//BooleanExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConstraintUsage is a Usage that is also a BooleanExpression, and, so, is typed by a Predicate. Nominally, if the type is a ConstraintDefinition, a ConstraintUsage is a Usage of that ConstraintDefinition. However, other kinds of kernel Predicates are also allowed, to permit use of Predicates from the Kernel Library.&lt;/p>&#xA;&#xA;&lt;p>A ConstraintUsage (other than an AssertConstraintUsage owned by a Part) must subset, directly or indirectly, the base ConstraintUsage &lt;code>constraintChecks&lt;/code> from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraintDefinition" ordered="false"
        lowerBound="1" eType="#//Predicate" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedConstraint"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The (single) Predicate the is the type of this Constraint Usage. Nominally, this will be ConstraintDefinition, but non-ConstraintDefinition Predicates are also allowed, to permit use of Predicates from the Kernel Library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//BooleanExpression/predicate"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TransitionUsage" eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A TransitionUsage is an ActionUsage that is a behavioral Step representing a transition between ActionUsages or StateUsages.&lt;/p>&#xA;&#xA;&lt;p>A TransitionUsage must subset, directly or indirectly, the base TransitionUsage &lt;code>transitionActions&lt;/code>, if it is not a composite feature, or the TransitionUsage &lt;code>subtransitions&lt;/code> inherited from its owner, if it is a composite feature.&lt;/p>&#xA;&#xA;&lt;p>A TransitionUsage may by related to some of its &lt;code>ownedFeatures&lt;/code> using TransitionFeatureMembership Relationships, corresponding to the triggers, guards and effects of the TransitionUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" ordered="false"
        lowerBound="1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="outgoingTransition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The source ActionUsage of this TransitionUsage, derived as the &lt;tt>source&lt;/tt> of the &lt;tt>succession&lt;/tt> for the TransitionUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false"
        lowerBound="1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="incomingTransition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The target ActionUsage of this TransitionUsage, derived as the &lt;tt>target&lt;/tt> of the &lt;tt>succession&lt;/tt> for the TransitionUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="triggerAction" ordered="false"
        upperBound="-1" eType="#//AcceptActionUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="triggeredTransition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The AcceptActionUsages that define the triggers of this TransitionUsage, derived as the &lt;code>ownedFeatures&lt;/code> of this TransitionUsage related to it by a TransitionFeatureMembership with &lt;code>kind&lt;/code> = &lt;code>trigger&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="guardExpression" ordered="false"
        upperBound="-1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="guardedTransition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Expressions that define the guards of this TransitionUsage, derived as the &lt;code>ownedFeatures&lt;/code> of this TransitionUsage related to it by a TransitionFeatureMembership with &lt;code>kind&lt;/code> = &lt;code>guard&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="effectAction" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="activeTransition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsages that define the effects of this TransitionUsage, derived as the &lt;tt>ownedFeatures&lt;/tt> of this TransitionUsage related to it by a TransitionFeatureMembership with &lt;tt>kind&lt;/tt> = &lt;tt>effect&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="succession" ordered="false"
        lowerBound="1" eType="#//Succession" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="linkedTransition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Succession that is the &lt;code>ownedFeature&lt;/code> of this TransitionUsage that redefines &lt;code>TransitionPerformance::transitionLink&lt;/code>."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AcceptActionUsage" eSuperTypes="#//TransferActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An AcceptActionUsage is a TransferActionUsage the specifies the acceptance of an incomingTransfer from its context. "/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TransferActionUsage" abstract="true"
      eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A TransferActionUsage is an ActionUsage that is also an &lt;code>incomingTransfer&lt;/code> in a specific &lt;code>context&lt;/code>. A TransferActionUsage must not be composite.&#xA;&#xA;&lt;p>A TransferActionUsage must subset, directly or indirectly, the ActionUsage &lt;code>transferActions&lt;/code> from the Systems model library. This implies that the TransferActionUsage will be typed by TransferAction from the model library (or a subtype). The TransferActionUsage must bind the &lt;code>context&lt;/code> Parameter of the TransferAction to the actual context for the usage.&lt;/p>&#xA;&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="context" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="transferActionUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A Feature specifying the Occurrence of which the TransferActionUsage is an &lt;tt>incomingTransfer&lt;/tt>. The &lt;tt>context&lt;/tt> Feature is the target of a binding connector whose source is the redefinition of &lt;tt>TransferAction::context&lt;/tt> by the TransferActionUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RequirementUsage" eSuperTypes="#//ConstraintUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A RequirementUsage is a Usage of a RequirementDefinition.&lt;/p>&#xA;&#xA;&lt;p>A RequirementUsage (other than a SatisfyRequirementUsage owned by a Part) must subset, directly or indirectly, the base RequirementUsage &lt;code>requirementChecks&lt;/code> from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="requirementDefinition"
        ordered="false" lowerBound="1" eType="#//RequirementDefinition" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedRequirement"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The RequirementDefinition that is the single type of this RequirementUsage.&lt;/[>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//ConstraintUsage/constraintDefinition"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subjectParameter" ordered="false"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameteredRequirement"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;p>parameter&lt;/p> of this RequirementUsage that is owned via a SubjectMembership, which must redefine, directly or indirectly, the &lt;code>subject&lt;/code> Parameter of the base RequirementDefinition RequirementCheck from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/parameter #//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reqId" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An optional modeler-specified identifier for this RequirementUsage (used, e.g., to link it to an original requirement text in some source document).&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" ordered="false" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An optional textual statement of the requirement represented by this RequirementUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="requiredConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="requringRequirement"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owned ConstraintUsages that represent requirements of this RequirementUsage. These are derived as the ConstraintUsages related to the RequirementUsage by a RequirementConstraintMembership with &lt;tt>kind&lt;/tt> = &lt;tt>requirement&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="assumedConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="assumingRequirement"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owned ConstraintUsages that represent assumptions of this RequirementUsage. These are derived as the ConstraintUsages related to the RequirementUsage by a RequirementConstraintMembership with &lt;tt>kind&lt;/tt> = &lt;tt>assumption&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RequirementDefinition" eSuperTypes="#//ConstraintDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A RequirementDefinition is a ConstraintDefinition that defines a requirement as a constraint that is used in the context of a specification that a valid solution must satisfy.&lt;/p>&#xA;&#xA;&lt;p>A RequirementDefinition must subclass, directly or indirectly, the base RequirementDefinition RequirementCheck from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subjectParameter" ordered="false"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameteredRequirementDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;p>parameter&lt;/p> of this RequirementDefinition that is owned via a SubjectMembership, which must redefine, directly or indirectly, the &lt;code>subject&lt;/code> Parameter of the base RequirementDefinition RequirementCheck from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/parameter #//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reqId" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An optional modeler-specified identifier for this RequirementDefinition (used, e.g., to link it to an original requirement text in some source document).&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" ordered="false" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An optional textual statement of the requirement represented by this RequirementDefinition.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="assumedConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="assumingRequirementDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owned ConstraintUsages that represent requirements of this RequirementDefinition. These are derived as the ConstraintUsages related to the RequirementDefinition by a RequirementConstraintMembership with &lt;tt>kind&lt;/tt> = &lt;tt>requirement&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="requiredConstraint" ordered="false"
        upperBound="-1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="requiringRequirementDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owned ConstraintUsages that represent requirements of this RequirementDefinitionb. These are derived as the ConstraintUsages related to the RequirementDefinition by a RequirementConstraintMembership with &lt;tt>kind&lt;/tt> = &lt;tt>requirement&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintDefinition" eSuperTypes="#//Definition #//Predicate">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConstraintDefinition is a Definition that is also a Predicate that defines a constraint that may be asserted to hold on a system or part of a system.&lt;/p>&#xA;&#xA;&lt;p>A ConstraintDefinition must subclass, directly or indirectly, the base ConstraintDefinition ConstraintCheck from the Systems model library.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CalculationUsage" eSuperTypes="#//ActionUsage #//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A CalculationUsage is an ActionUsage that is also an Expression, and, so, is typed by a Function. Nominally, if the type is a CalculationDefinition, a CalculationUsage is a Usage of that CalculationDefinition within a system. However, other kinds of kernel Functions are also allowed, to permit use of Functions from the Kernel Library.&lt;/p>&#xA;&#xA;&lt;p>A CalculationUsage must subset, directly or indirectly, either the base CalculationUsage &lt;code>calculations&lt;/code> from the Systems model library, if it is not a composite feature, or the CalculationUsage &lt;code>subcalculations&lt;/code> inherited from its owner, if it is a composite feature.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="calculationDefinition"
        ordered="false" lowerBound="1" eType="#//Function" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedCalculation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Function that is the type of this CalculationUsage. Nominally, this would be a CalculationDefinition, but a kernel Function is also allowed, to permit use of Functions from the Kernel Library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Expression/function #//ActionUsage/actionDefinition"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CaseUsage" eSuperTypes="#//CalculationUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A CaseUsage is a Usage of a CaseDefinition.&lt;/p>&#xA;&#xA;&lt;p>A CaseUsage must subset, directly or indirectly, either the base CaseUsage &lt;code>cases&lt;/code> from the Systems model library, if it is not owned by a CaseDefinition or CaseUsage, or the CaseUsage &lt;code>subcases&lt;/code> inherited from its owner, otherwise.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="objectiveRequirement" ordered="false"
        eType="#//RequirementUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="objectiveOwningCase"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;p>ownedFeature&lt;/p> of this CaseUsage that is owned via an ObjectiveMembership, and that must redefine, directly or indirectly, the &lt;code>objective&lt;/code> RequirementUsage of the base CaseDefinition Case from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subjectParameter" ordered="false"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subjectOwningCase"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;p>parameter&lt;/p> of this CaseUsage that is owned via a SubjectMembership, which must redefine, directly or indirectly, the &lt;code>subject&lt;/code> Parameter of the base CaseDefinition Case from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Step/parameter #//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="caseDefinition" ordered="false"
        lowerBound="1" eType="#//CaseDefinition" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedCase"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The CaseDefinition that is the type of this CaseUsage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//CalculationUsage/calculationDefinition"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CaseDefinition" eSuperTypes="#//CalculationDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A CaseDefinition is a CalculationDefinition for a process, often involving collecting evidence or data, relative to a subject, producing a result that meets an objective.&lt;/p>&#xA;&#xA;&lt;p>A CaseDefinition must subclass, directly or indirectly, the base CaseDefinition Case from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="objectiveRequirement" ordered="false"
        eType="#//RequirementUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="objectiveOwningCaseDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;p>ownedFeature&lt;/p> of this CaseDefinition that is owned via an ObjectiveMembership, and that must redefine, directly or indirectly, the &lt;code>objective&lt;/code> RequirementUsage of the base CaseDefinition Case from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subjectParameter" ordered="false"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subjectOwningCaseDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;p>parameter&lt;/p> of this CaseDefinition that is owned via a SubjectMembership, which must redefine, directly or indirectly, the &lt;code>subject&lt;/code> Parameter of the base CaseDefinition Case from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/parameter #//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CalculationDefinition" eSuperTypes="#//ActionDefinition #//Function">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A CalculationDefinition is an ActionDefinition that also defines a Function producing a &lt;code>result&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>A CalculationDefinition must subclass, directly or indirectly, the base CalculationDefinition Calculation from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="calculationUsage" ordered="false"
        upperBound="-1" eType="#//CalculationUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringCalculationDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The CalculationUsage that are &lt;code>actions&lt;/code> in this CalculationDefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//ActionDefinition/action #//Function/expression"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ActionDefinition" eSuperTypes="#//Definition #//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An ActionDefinition is a Definition that is also a Behavior that defines an action performed by a system or part of a system.&lt;/p>&#xA;&#xA;&lt;p>An ActionDefinition must subclass, directly or indirectly, the base ActionDefinition Action from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringActionDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsages that are Steps in this Activity, which define the actions that specify the behavior of the Activity.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/step"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariantMembership" eSuperTypes="#//Membership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A VariantMembership is a Membership between a variation point Definition or Usage and a Usage that represents a variant in the context of that variation. The &lt;code>membershipOwningPackage&lt;/code> for the VariantMembership must be either a Definition or a Usage with &lt;code>isVariation&lt;/code> = &lt;code>true&lt;/code>.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningVariationDefinition"
        ordered="false" eType="#//Definition" eOpposite="#//Definition/variantMembership_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owning Definition of this VariantMembership, which must have &lt;code>isVariation&lt;/code> = true.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Membership/membershipOwningPackage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningVariationUsage" ordered="false"
        eType="#//Usage" eOpposite="#//Usage/variantMembership_comp">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owning Definition of this VariantMembership, which must have &lt;code>isVariation&lt;/code> = true.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Membership/membershipOwningPackage"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedVariantUsage_comp"
        ordered="false" eType="#//Usage" containment="true" eOpposite="#//Usage/owningVariantMembership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usage that represents a variant in the context of the &lt;code>owningVariationDefinition&lt;/code> or &lt;code>owningVariationUsage&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/ownedMemberElement_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedVariantUsage" eType="#//Usage"
        volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnalysisCaseUsage" eSuperTypes="#//CaseUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An AnalysisCaseUsage is a Usage of an AnalysisCaseDefinition.&lt;/p>&#xA;&#xA;&lt;p>An AnalysisCaseUsage must subset, directly or indirectly, either the base AnalysisCaseUsage &lt;code>analysisCases&lt;/code> from the Systems model library, if it is not owned by an AnalysisCaseDefinition or AnalysisCaseUsage, or the AnalysisCaseUsage &lt;code>subAnalysisCases&lt;/code> inherited from its owner, otherwise.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="analysisAction" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringAnalysisCase"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>features&lt;/code> of the AnalysisCaseUsage that are typed as AnalysisActions. Each &lt;code>analysisAction&lt;/code> ActionUsage must subset the &lt;code&lt;>analysisSteps&lt;/code> ActionUsage of the base AnalysisCaseDefinition AnalysisCase from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="analysisCaseDefinition"
        ordered="false" lowerBound="1" eType="#//AnalysisCaseDefinition" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedAnalysisCase"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The AnalysisCaseDefinition that is the type of this AnalysisCaseUsage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//CaseUsage/caseDefinition"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resultExpression" ordered="false"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="analysisCase"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Expression used to compute the &lt;code>result&lt;/code> of the AnalysisCaseUsage, derived as the last &lt;code>ownedFeature&lt;/code> of the AnalysisCaseUsage that is an Expression. The &lt;code>resultExpression>&lt;/code> must redefine directly or indirectly, the &lt;code>resultEvaluation&lt;/code> Expression of the base AnalysisCaseDefinition AnalysisCase from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnalysisCaseDefinition" eSuperTypes="#//CaseDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An AnalysisCaseDefinition is a CaseDefinition for the case of carrying out an analysis.&lt;/p>&#xA;&#xA;&lt;p>An AnalysisCaseDefinition must subclass, directly or indirectly, the base AnalysisCaseDefinition AnalysisCase from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="analysisAction" ordered="false"
        upperBound="-1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringAnalysisCaseDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>actions&lt;/code> of the AnalysisCaseDefinitions that are typed as AnalysisActions. Each &lt;code>analysisAction&lt;/code> ActionUsage must subset the &lt;code&lt;>analysisSteps&lt;/code> ActionUsage of the base AnalysisCaseDefinition AnalysisCase from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//ActionDefinition/action"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resultExpression" ordered="false"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="analysisCaseDefintion"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Expression used to compute the &lt;code>result&lt;/code> of the AnalysisCaseDefinition, derived as the last owned &lt;code>expression&lt;/code> of the AnalysisCaseDefinition. The &lt;code>resultExpression>&lt;/code> must redefine directly or indirectly, the &lt;code>resultEvaluation&lt;/code> Expression of the base AnalysisCaseDefinition AnalysisCase from the Systems model library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Function/expression #//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceUsage" eSuperTypes="#//Usage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ReferenceUsage is a Usage that specifies a non-compositional (&lt;code>isComposite&lt;/code> = &lt;code>false&lt;/code>) reference to something. The type of a ReferenceUsage can be any kind of Classifier, with the default being the top-level Classifier Anything from the Kernel library. This allows the specification of a generic reference without distinguishing if the thing referenced is an attribute value, item, action, etc. All &lt;code>features&lt;/code> of a ReferenceUsage must also have &lt;code>isComposite&lt;/code> = &lt;code>false&lt;/code>.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referenceType" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Classifier" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedReference"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The types of this ReferenceUsage, which must all be Classifiers.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConnectionUsage" eSuperTypes="#//PartUsage #//Connector">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConnectionUsage is a Connector that is also a Usage. Nominally, if its type is a ConnectionDefinition, then a ConnectionUsage is a Usage of that ConnectionDefinition, representing a connection between parts of a system. However, other kinds of kernel Associations are also allowed, to permit use of Associations from the Kernel Library (such as the default BinaryLink).&lt;/p>&#xA;&#xA;&lt;p>A ConnectionUsage must subset the base ConnectionUsage &lt;code>connections&lt;/code> from the Systems model library.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PartUsage" eSuperTypes="#//ItemUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A PartUsage is a usage of a PartDefinition to represent a composite part of a system. At least one of the types of the PartUsage must be a PartDefinition.&lt;/p>&#xA;&#xA;&lt;p>A PartUsage must subset, directly or indirectly, the base PartUsage &lt;code>parts&lt;/code> from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="partDefinition" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//PartDefinition" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedPart"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>itemDefinitions&lt;/code> of this PartUsage that are PartDefinitions.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//ItemUsage/itemDefinition"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemUsage" eSuperTypes="#//Usage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An ItemUsage is a Usage whose type is a Class. Nominally, if the type is an ItemDefinition, an ItemUsage is a Usage of that ItemDefinition within a system. However, other types of Kernel Classes are also allowed, to permit use of Classes from the Kernel Library.&lt;/p>&#xA;&#xA;&lt;p>An ItemUsage must subset, directly or indirectly, the base ItemUsage &lt;code>items&lt;/code> from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemDefinition" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//Class" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedItem"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Classes that are the types of this ItemUsage. Nominally, these are ItemDefinitions, but other kinds of Kernel Classes are also allowed, to permit use of Classes from the Kernel Library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PartDefinition" eSuperTypes="#//ItemDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A PartDefinition is a ItemDefinition of a Class of systems or parts of systems. Note that all parts may be considered items for certain purposes, but not all items are parts that can perform actions within a system.&lt;/p>&#xA;&#xA;&lt;/p>A PartDefinition must subclass, directly or indirectly, the base PartDefinition Part from the Systems model library.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IndividualUsage" eSuperTypes="#//ItemUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An IndividualUsage is a ItemUsage exactly one of whose types is an IndividualDefinition, specifying the usage of the represented individual, or a portion of it, in a certain context.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="individualDefinition" ordered="false"
        lowerBound="1" eType="#//IndividualDefinition" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="individualUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p.>The one type of the IndividualUsage that is the IndividualDefinition defining the individual thing being represented. (Note that the IndividualUsage may have other types in addition to this that are not IndividualDefinitions.)&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//ItemUsage/itemDefinition"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isTimeSlice" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this IndividualUsage represents a temporal portion of the entire spacial extent of an individual over some duration of time, as indicated by whether or not it has a &lt;t>timeSliceFeature&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSnapshot" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this IndividualUsage represents a temporal portion of the entire spacial extent of an individual at one instance of time, as indicated by whether or not it has a &lt;t>snapshotFeature&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="timeSliceFeature" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="timeSliceUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;tt>An &lt;tt>ownedFeature&lt;/tt> of this IndividualUsage that is a redefinition of the Feature &lt;tt>Occurrence::timeSliceOf&lt;/tt> and is typed by the &lt;tt>individualDefinition&lt;/tt>. An IndividualUsage with such a feature is restricted to represent a time slice of the represented individual.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="snapshotFeature" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="snapshotUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;tt>An &lt;tt>ownedFeature&lt;/tt> of this IndividualUsage that is a redefinition of the Feature &lt;tt>Occurrence::snapshotOf&lt;/tt> and is typed by the &lt;tt>individualDefinition&lt;/tt>. An IndividualUsage with such a feature is restricted to represent a snapshot of the represented individual.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InterfaceUsage" eSuperTypes="#//ConnectionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An InterfaceUsage is a Usage of an InterfaceDefinition to represent an interface connecting parts of a system through specific ports.&lt;/p>&#xA;&#xA;&lt;p>An InterfaceUsage must subset, directly or indirectly, the base InterfaceUsage &lt;code>interfaces&lt;/code> from the Systems model libary.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interfaceDefinition" ordered="false"
        lowerBound="1" eType="#//InterfaceDefinition" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="interfaceUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The InterfaceDefinition that is the single type of this InterfaceUsage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Connector/association"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InterfaceDefinition" eSuperTypes="#//ConnectionDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An InterfaceDefinition is a ConnectionDefinition all of whose ends are PortUsages, defining an interface between elements that interact through such ports.&lt;/p>&#xA;&#xA;&lt;p>An InterfaceDefinition must subclass, directly or indirectly, the base InterfaceDefinition Interface from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interfaceEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//PortUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="interfaceDefinitionWithEnd"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PortUsages that are the &lt;tt>associationEnds&lt;/p> of this InterfaceDefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//ConnectionDefinition/connectionEnd"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConnectionDefinition" eSuperTypes="#//PartDefinition #//Association">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConnectionDefinition is a PartDefinition that is also an Association, with two or more end features. The &lt;code>associationEnds&lt;/code> of a ConnectionUsage must be Usages.&lt;/p>&#xA;&#xA;&lt;p>A ConnectionDefinition must subset, directly or indirectly, the base ConnectionDefinition Connection from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="connectionEnd" ordered="false"
        lowerBound="2" upperBound="-1" eType="#//Usage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="connectionDefinitionWithEnd"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Usages that define the things related by the ConnectionDefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Association/associationEnd"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeUsage" eSuperTypes="#//Usage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An AttributeUsage is a Usage whose type is a DataType. Nominally, if the type is an AttributeDefinition, an AttributeUsage is a usage of a AttributeDefinition to represent the value of some system quality or characteristic. However, other kinds of kernel DataTypes are also allowed, to permit use of DataTypes from the Kernel Library. An AttributeUsage itself as well as all its nested &lt;code>features&lt;/code> must have &lt;code>isComposite&lt;/code> = &lt;code>false&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>A AttributeUsage must subset, directly or indirectly, the base AttributeUsage &lt;code>attributeValues&lt;/code> from the Systems model library.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributeDefinition" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//DataType" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="definedAttribute"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The DataTypes that are the types of this AttributeUsage. Nominally, these are AttributeDefinitions, but other kinds of kernel DataTypes are also allowed, to permit use of DataTypes from the Kernel Library.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ControlNode" abstract="true" eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ControlNode is an ActionUsage that does not have any inherent behavior but provides constraints on incoming and outgoing Succession Connectors that are used to control other Actions.&lt;/p>&#xA;&#xA;&lt;p>A ControlNode must be a composite owned feature of an ActionDefinition or ActionUsage, subsetting, directly or indirectly, the ActionUsage &lt;code>Action::controls&lt;/code>. This implies that the ControlNode must be typed by ControlAction from the Systems model library, or a subtype of it.&lt;/p>&#xA;&#xA;&lt;p>All outgoing Successions from a ControlNode must have source multiplicity of 1..1. All incoming Succession must have target multiplicity of 1..1.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MergeNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A MergeNode is a ControlNode that asserts the merging of its incoming Successions. All incoming Successions must have a source multiplicity of 0..1 and subset the Feature &lt;tt>MergeAction::incomingHBLink&lt;/tt>. A MergeNode may have at most one outgoing Succession.&lt;/p>&#xA;&#xA;&lt;p>A MergeNode must subset, directly or indirectly, the ActionUsage &lt;code>Action::merges&lt;/code>, implying that it is typed by MergeAction from the Systems model library (or a subtype of it).&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DecisionNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A DecisionNode is a ControlNode that makes a selection from its outgoing Successions. All outgoing Successions must be must have a target multiplicity of 0..1 and subset the Feature &lt;code>DecisionAction::outgoingHBLink&lt;/code>. A DecisionNode may have at most one incoming Succession.&lt;/p>&#xA;&#xA;&lt;p>A DecisionNode must subset, directly or indirectly, the ActionUsage &lt;code>Action::decisions&lt;/code>, implying that it is typed by DecisionAction from the Systems model library (or a subtype of it).&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PerformActionUsage" eSuperTypes="#//ActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A PerformActionUsage is an ActionUsage that represents the performance of an ActionUsage. The ActionUsage to be performed (which may be the PerformActionUsage itself) is related to the PerformActionUsage by a Subsetting relationship.&lt;/p>&#xA;&#xA;&lt;p>If the PerformActionUsage is owned by a Part, then it also subsets the performedAction property of that Part (as defined in the library model for Part),&#xA;otherwise it subsets either &lt;code>actions&lt;/code> or &lt;code>subactions&lt;/code>, as required for a regular ActionUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="performedAction" ordered="false"
        lowerBound="1" eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="actionPerformance"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage to be performed by the PerformedActionUsage. It is the &lt;tt>subsettedFeature&lt;/tt> of the first owned Subsetting Relationship of the PerformedActionUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SendActionUsage" eSuperTypes="#//TransferActionUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A SendActionUsage is an ActionUsage that is a Transfer of items sent to a specific target. The &lt;code>context&lt;/code> Feature of a SendUsageAction is the &lt;code>result&lt;/code> of the &lt;code>target&lt;/code> Expression for the SendUsageAction.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false"
        lowerBound="1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sendActionUsage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The target Expression of a SendActionUsage specifies the target Occurrence to which the SendActionUsage transfers items. The result Parameter of the Expression is the context of the SendActionUsage."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JoinNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A JoinNode is a ControlNode that waits for the completion of all the predecessor Actions given by incoming Successions. All incoming Successions must have a source multiplicity of 1..1. A JoinNode may have at most one outgoing Succession.&lt;/p>&#xA;&#xA;&lt;p>A JoinNode must subset, directly or indirectly, the ActionUsage &lt;code>Action::joins&lt;/code>, implying that it is typed by JoinAction from the Systems model library (or a subtype of it).&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ForkNode" eSuperTypes="#//ControlNode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ForkNode is a ControlNode that must be followed by successor Actions as given by all its outgoing Successions. All outgoing Successions must have a target multiplicity of 1..1. A ForkNode may have at most one incoming Succession.&lt;/p>&#xA;&#xA;&lt;p>A ForkNode must subset, directly or indirectly, the ActionUsage &lt;code>Action::forks&lt;/code>, implying that it is typed by ForkAction from the Systems model library (or a subtype of it).&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConjugatedPortTyping" eSuperTypes="#//FeatureTyping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A ConjugatedPortTyping is a FeatureTyping in which the &lt;code>type&lt;/code> is derived as the &lt;code>conjugatedPortDefinition&lt;/code> of a given PortDefinition. A ConjugatedPortTyping allows a PortUsage to by related directly to a PortDefinition, but to be effectively typed by the conjugation of the referenced PortDefinition.&lt;/p>&#xA;&#xA;&lt;p>Note that ConjugatedPortTyping is a &lt;em>ternary&lt;/em> Relationship, with &lt;code>portDefinition&lt;/code> being a third &lt;code>relatedElement&lt;/code>, in addition to &lt;code>type&lt;/code> and &lt;code>typedFeature&lt;/code> from FeatureTyping.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="portDefinition" ordered="false"
        lowerBound="1" eType="#//PortDefinition">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="conjugatedPortTyping"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The PortDefinition whose &lt;tt>conjugatedPortDefinition&lt;/tt> is to be the derived &lt;tt>type&lt;/tt> of this ConjugatedPortTyping.&lt;p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedPortDefinition"
        ordered="false" lowerBound="1" eType="#//ConjugatedPortDefinition" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typingByConjugatedPort"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>conjugatedPortDefinition&lt;/tt> of the &lt;tt>portDefinition&lt;/tt> of this ConjugatedPortTyping, which is the derived &lt;tt>type&lt;/tt> of the ConjugatedPortTyping considered as a FeatureTyping.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureTyping/type"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateSubactionMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A StateSubactionMembership is a FeatureMembership for an entry, do or exit ActionUsage of a StateDefinition or StateUsage. The &lt;code>ownedMemberFeature&lt;/code> of a StateSubactionMembership must be an ActionUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" ordered="false" lowerBound="1"
        eType="#//StateSubactionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this StateSubactionMembership is for an entry, do or exit ActionUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action_comp" ordered="false"
        lowerBound="1" eType="#//ActionUsage" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="stateSubactionMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage that is the &lt;tt>ownedMemberFeature&lt;/tt> of this StateSubactionMembership.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" lowerBound="1"
        eType="#//ActionUsage" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="StateSubactionKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A StateSubactionKind indicates whether the &lt;tt>action&lt;/tt> of a StateSubactionMembership is an entry, do or exit action.&lt;/p>&#xA;&lt;p>A StateActionKind indicates whether a Action feature of a State is an entry, do or exit Action."/>
    </eAnnotations>
    <eLiterals name="entry">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a subaction of a StateUsage is an entry action.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="do" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a subaction of a StateUsage is a do action.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="exit" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a subaction of a StateUsage is an exit action.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TransitionFeatureKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A TransitionActionKind indicates whether the &lt;tt>transitionFeature&lt;/tt> of a TransitionFeatureMembership is a trigger, guard or effect.&lt;/p>"/>
    </eAnnotations>
    <eLiterals name="trigger">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a member Transfer of a TransitionUsage represents a trigger.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="guard" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a member Expression of a TransitionUsage represents a guard.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="effect" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a member Step of a TransitionUsage represents an effect.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateDefinition" eSuperTypes="#//ActionDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A StateDefinition is the Definition of the Behavior of a system or part of a system in a certain state condition.&lt;/p>&#xA;&#xA;&lt;p>A State Definition must subclass, directly or indirectly, the base StateDefinition StateAction from the Systems model library.&lt;/p>&#xA;&#xA;&lt;p>A StateDefinition may be related to up to three of its &lt;cpde>ownedFeatures&lt;/cpde> by StateBehaviorMembership Relationships, all of different &lt;code>kinds&lt;/code>, corresponding to the entry, do and exit actions of the StateDefinition.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="state" ordered="false"
        upperBound="-1" eType="#//StateUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringStateDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The StateUsages that are the &lt;tt>steps&lt;/tt> of the StateDefinition, which specify the discrete states in the Behavior defined by the StateDefinition.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/step"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="entryAction" ordered="false"
        eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="enteredStateDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage of this StateDefinition to be performed on entry to the state defined by the StateDefinition. This is derived as the owned ActionUsage related to the StateDefinition by a StateSubactionMembership  with &lt;tt>kind&lt;/tt> = &lt;tt>entry&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="doAction" ordered="false"
        eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="activeStateDefintion"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage of this StateDefinition to be performed while in the state defined by the StateDefinition. This is derived as the owned ActionUsage related to the StateDefinition by a StateSubactionMembership  with &lt;tt>kind&lt;/tt> = &lt;tt>do&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="exitAction" ordered="false"
        eType="#//ActionUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="exitedStateDefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ActionUsage of this StateDefinition to be performed on exit from the state defined by the StateDefinition. This is derived as the owned ActionUsage related to the StateDefinition by a StateSubactionMembership  with &lt;tt>kind&lt;/tt> = &lt;tt>exit&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TransitionFeatureMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A TransitionFeatureMembership is a FeatureMembership for a trigger, guard or effect of a TransitionUsage. The &lt;code>ownedMemberFeature&lt;/code> must be a Step. For a trigger, the &lt;code>ownedMemberFeature&lt;/code> must more specifically be a Transfer, while for a guard it must be an Expression with a result type of Boolean.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" ordered="false" lowerBound="1"
        eType="#//TransitionFeatureKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this TransitionFeatureMembership is for a trigger, guard or effect.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="transitionFeature_comp"
        ordered="false" lowerBound="1" eType="#//Step" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="transitionFeatureMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Step that is the &lt;tt>ownedMemberFeature&lt;/tt> of this TransitionFeatureMembership.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="transitionFeature" lowerBound="1"
        eType="#//Step" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExhibitStateUsage" eSuperTypes="#//StateUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An ExhibitStateUsage is a StateUsage that represents the exhibiting of a StateUsage. The StateUsage to be exhibited (which may be the ExhibitStateUsage itself) is related to the ExhibitStateUsage by a Subsetting Relationship.&lt;/p>&#xA;&#xA;&lt;p>If the ExhibitStateUsage is owned by a Part, then it also subsets the &lt;code>exhibitedStates&lt;/cpde> property of that Part (as defined in the library model for Part), otherwise it subsets either &lt;code>states&lt;/code> or &lt;code>substates&lt;/cpde>, as required for a regular StateUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="exhibitedState" ordered="false"
        lowerBound="1" eType="#//StateUsage" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="stateExhibition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The StateUsage to be exhibited by the ExhibitStateUsage. It is the &lt;tt>subsettedFeature&lt;/tt> of the first owned Subsetting Relationship of the ExhibitStateUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeDefinition" eSuperTypes="#//Definition #//DataType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An AttributeDefinition is a Definition and a DataType of information about a quality or characteristic of a system or part of a system that has no independent identity other than its value. All &lt;code>features&lt;/code> of an AttributeDefinition must have &lt;code>isComposite&lt;/code> = &lt;code>false&lt;/code>.&lt;/p>"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RequirementConstraintMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A RequirementConstraintMembership is a FeatureMembership for an assumed or required ConstraintUsage of a RequirementDefinition or RequirementUsage. The &lt;code>ownedMemberFeature&lt;/cpde> of a RequirementConstraintMembership must be a ConstraintUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" ordered="false" lowerBound="1"
        eType="#//RequirementConstraintKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether the RequirementConstraintMembership is for an assumed or required ConstraintUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraint_comp" ordered="false"
        lowerBound="1" eType="#//ConstraintUsage" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="requirementConstraintMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConstraintUsage that is the &lt;tt>ownedMemberFeature&lt;/tt> of this RequirementConstraintUsage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraint" lowerBound="1"
        eType="#//ConstraintUsage" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="RequirementConstraintKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A RequirementConstraintKind indicates whether a ConstraintUsage is an assumption or a requirement in a RequirementDefinition or RequirementUsage.&lt;/p>"/>
    </eAnnotations>
    <eLiterals name="assumption">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a member ConstraintUsage of a RequirementDefinition or RequirementUsage represents an assumption.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="requirement" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a member ConstraintUsage of a RequirementDefinition or RequirementUsage represents an requirement.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SatisfyRequirementUsage" eSuperTypes="#//RequirementUsage #//AssertConstraintUsage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A SatisfyRequirementUsage is an AssertConstraintUsage that asserts that a satisfied RequirementUsage is true for a specific satisfyingSubject. The satisfied RequirementUsage is related to the SatisfyRequirementUsage by a Subsetting relationship.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="satisfiedRequirement" ordered="false"
        lowerBound="1" eType="#//RequirementUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="requirementSatisfaction"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The RequirementUsage that is satisfied by the &lt;tt>satisfyingSubject&lt;/tt> of this SatisfyRequirementUsage. It is the &lt;tt>subsettedFeature&lt;/tt> of the first owned Subsetting Relationship of the SatisfyRequirementUsage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//AssertConstraintUsage/assertedConstraint"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="satisfyingFeature" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="satisfiedRequirement"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Feature that represents the actual subject that is asserted to satisfy the &lt;tt>satisfiedRequirement&lt;/tt>. The &lt;tt>satisfyingFeature&lt;/tt> must be the target of a BindingConnector from the &lt;tt>subjectParameter&lt;/tt> of the &lt;tt>satisfiedRequirement&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AssertConstraintUsage" eSuperTypes="#//ConstraintUsage #//Invariant">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An AssertConstraintUsage is a ConstraintUsage that is also an Invariant and, so, is asserted to be true. The asserted ConstraintUsage (which may be the AssertConstraintUsage itself) is related to the AssertConstraintUsage by a Subsetting relationship.&lt;/p>&#xA;&#xA;&lt;p>If the AssertConstraintUsage is owned by a Part, then it also subsets the &lt;code>assertedConstraints&lt;/code> property of that Part (as defined in the library model for Part), otherwise it subsets &lt;code>constraintChecks&lt;/code>, as required for a regular ConstraintUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="assertedConstraint" ordered="false"
        lowerBound="1" eType="#//ConstraintUsage" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="constraintAssertion"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The ConstraintUsage to be performed by the AssertConstraintUsage. It is the &lt;tt>subsettedFeature&lt;/tt> of the first owned Subsetting Relationship of the AssertConstraintUsage.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SubjectMembership" eSuperTypes="#//ParameterMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A SubjectMembership is a ParameterMembership that indicates that its &lt;code>ownedSubjectParameter&lt;/code> is the subject Parameter for its &lt;code>owningType&lt;/code>. The &lt;code>owningType&lt;/code> of a SubjectMembership must be a CaseDefinition, CaseUsage, RequirementDefinition or RequirementUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSubjectParameter_comp"
        ordered="false" lowerBound="1" eType="#//Parameter" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningSubjectMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Parameter that is the &lt;code>ownedMemberParameter&lt;/code> of this SubjectMembership.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//ParameterMembership/ownedMemberParameter_comp"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSubjectParameter"
        lowerBound="1" eType="#//Parameter" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ObjectiveMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An ObjectiveMembership is a FeatureMembership that indicates that its &lt;code>ownedObjectiveRequirement&lt;/code> is the objective RequirementUsage for its &lt;code>owningType&lt;/code>. The &lt;code>owningType&lt;/code> of an ObjectiveMembership must be a CaseDefinition or CaseUsage.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedObjectiveRequirement"
        ordered="false" lowerBound="1" eType="#//RequirementUsage">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningObjectiveMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The RequirementUsage that is the &lt;p>ownedMemberFeature&lt;/p> of this RequirementUsage.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Ownership" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>Ownership is a Relationship whose sole purpose is to model the ownership of one Element by another. As such, its two &lt;tt>relatedElements&lt;/tt> consist of a single &lt;tt>owningRelatedElement&lt;/tt> (the source) and a single &lt;tt>ownedRelatedElement&lt;/tt> (the target). Note that it is &lt;em>not&lt;/em> usually necessary to use an Ownership Relationship to model ownership in a model, as other Relationships can also have &lt;tt>ownedRelatedElements&lt;/tt> (most notably Memberships, which can be used to model &lt;tt>ownedMembers&lt;/tt> of a Package).&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningSource" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sourceOwnership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>owningRelatedElement&lt;/tt> that is the &lt;tt>source&lt;/tt> of this Ownership.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTarget_comp" ordered="false"
        lowerBound="1" eType="#//Element" containment="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="targetOwnership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>ownedRelatedElement&lt;/tt> that is the &lt;tt>target&lt;/tt> of this Ownership.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTarget" lowerBound="1"
        eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="subsets" references="#//Relationship/ownedRelatedElement_comp"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotation" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An Annotation is a Relationship between a Comment and the Element that is annotated by that Comment.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotatingComment" ordered="false"
        lowerBound="1" eType="#//Comment" eOpposite="#//Comment/annotationForComment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Comment that annotates the &lt;tt>annotatedElement&lt;/tt> of this Annotation.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="annotation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Element that is annotated by the &lt;tt>annotatingComment&lt;/tt> of this Annotation.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A Comment is a textual annotation attached to a specific Element using an Annotation Relationship.&lt;/p>&#xA;&#xA;commentedElement = annotationForComment.annotatedElement"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false" lowerBound="1"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The annotation text for the Comment.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="commentedElement" ordered="false"
        lowerBound="1" eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="comment"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Element that is annotated by this Comment, derived as the &lt;tt>annotatedElement&lt;/tt> of the &lt;tt>annotationForComment&lt;/tt> of the Comment.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotationForComment" ordered="false"
        lowerBound="1" eType="#//Annotation" eOpposite="#//Annotation/annotatingComment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Annotation that relates this Comment to its &lt;tt>commentedElement&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EndFeatureMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An EndFeatureMembership is a FeatureMembership that specifies the memberFeature as an &lt;em>end&lt;/em> Feature of the owningType of the EndFeatureMembership. EndFeatureMembership has exactly the same meaning as FeatureMembership, except that the semantics of Multiplicity is different for end Features.&lt;/p>&#xA;&#xA;&lt;p>An end Feature is always considered to map each domain entity to a single range entity, whether or not a Multiplicity is given for it. If a Multiplicity constraint &lt;em>is&lt;/em> given for an end Feature, rather than giving the range cardinality for the Feature as usual, it specifies a cardinality constraint for &lt;em>navigating&lt;/em> across the end Features of the featuringType of the end Feature. That is, if a Type has n end Features, then the Multiplicity of any one of those end Features constrains the cardinality of the set of values of that Feature when the values of the other n-1 end Features are held fixed.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
</ecore:EPackage>
