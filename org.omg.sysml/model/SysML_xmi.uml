<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_0" name="SysML" URI="https://www.omg.org/spec/SysML/20230201">
  <packagedElement xmi:type="uml:Package" xmi:id="Root" name="Root" visibility="public" URI="">
    <ownedComment xmi:id="Root-_ownedComment.0" annotatedElement="Root">
      <body>The Root layer provides the syntactic foundation for KerML.
</body>
    </ownedComment>
    <packagedElement xmi:type="uml:Package" xmi:id="Root-Annotations" name="Annotations" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Annotations-Comment" name="Comment" visibility="public">
        <ownedComment xmi:id="Root-Annotations-Comment-_ownedComment.0" annotatedElement="Root-Annotations-Comment">
          <body>&lt;p>A &lt;code>Comment&lt;/code> is an &lt;code>AnnotatingElement&lt;/code> whose &lt;code>body&lt;/code> in some way describes its &lt;code>annotatedElements&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Root-Annotations-Comment-_generalization.0" general="Root-Annotations-AnnotatingElement"/>
        <ownedAttribute xmi:id="Root-Annotations-Comment-locale" name="locale" visibility="public">
          <ownedComment xmi:id="Root-Annotations-Comment-locale-_ownedComment.0" annotatedElement="Root-Annotations-Comment-locale">
            <body>&lt;p>Identification of the language of the &lt;code>body&lt;/code> text and, optionally, the region and/or encoding. The format shall be a POSIX locale conformant to ISO/IEC 15897, with the format &lt;code>[language[_territory][.codeset][@modifier]]&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-Comment-locale-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-Comment-locale-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Annotations-Comment-body" name="body" visibility="public">
          <ownedComment xmi:id="Root-Annotations-Comment-body-_ownedComment.0" annotatedElement="Root-Annotations-Comment-body">
            <body>&lt;p>The annotation text for the &lt;code>Comment&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-Comment-body-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-Comment-body-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Annotations-Annotation" name="Annotation" visibility="public">
        <ownedComment xmi:id="Root-Annotations-Annotation-_ownedComment.0" annotatedElement="Root-Annotations-Annotation">
          <body>&lt;p>An &lt;code>Annotation&lt;/code> is a Relationship between an &lt;code>AnnotatingElement&lt;/code> and the &lt;code>Element&lt;/code> that is annotated by that &lt;code>AnnotatingElement&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Root-Annotations-Annotation-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Root-Annotations-Annotation-annotatingElement" name="annotatingElement" visibility="public" type="Root-Annotations-AnnotatingElement" redefinedProperty="Root-Elements-Relationship-source" association="Root-Annotations-_packagedElement.2">
          <ownedComment xmi:id="Root-Annotations-Annotation-annotatingElement-_ownedComment.0" annotatedElement="Root-Annotations-Annotation-annotatingElement">
            <body>&lt;p>The &lt;code>AnnotatingElement&lt;/code> that annotates the &lt;code>annotatedElement&lt;/code> of this &lt;code>Annotation&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-Annotation-annotatingElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-Annotation-annotatingElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Annotations-Annotation-annotatedElement" name="annotatedElement" visibility="public" type="Root-Elements-Element" redefinedProperty="Root-Elements-Relationship-target" association="Root-Annotations-_packagedElement.3">
          <ownedComment xmi:id="Root-Annotations-Annotation-annotatedElement-_ownedComment.0" annotatedElement="Root-Annotations-Annotation-annotatedElement">
            <body>&lt;p>The &lt;code>Element&lt;/code> that is annotated by the &lt;code>annotatingElement&lt;/code> of this Annotation.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-Annotation-annotatedElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-Annotation-annotatedElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Annotations-Annotation-owningAnnotatedElement" name="owningAnnotatedElement" visibility="public" type="Root-Elements-Element" isDerived="true" subsettedProperty="Root-Annotations-Annotation-annotatedElement Root-Elements-Relationship-owningRelatedElement" association="Root-Elements-_packagedElement.10">
          <ownedComment xmi:id="Root-Annotations-Annotation-owningAnnotatedElement-_ownedComment.0" annotatedElement="Root-Annotations-Annotation-owningAnnotatedElement">
            <body>&lt;p>The &lt;code>annotatedElement&lt;/code> of this &lt;code>Annotation&lt;/code>, when it is also its &lt;code>owningRelatedElement&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-Annotation-owningAnnotatedElement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-Annotation-owningAnnotatedElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Annotations-_packagedElement.2" name="" visibility="private" memberEnd="Root-Annotations-AnnotatingElement-annotation Root-Annotations-Annotation-annotatingElement"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Annotations-_packagedElement.3" name="" visibility="private" memberEnd="Root-Annotations-Annotation-annotatedElement Root-Annotations-_packagedElement.3-annotation">
        <ownedEnd xmi:id="Root-Annotations-_packagedElement.3-annotation" name="annotation" visibility="public" type="Root-Annotations-Annotation" isOrdered="true" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Root-Annotations-_packagedElement.3">
          <ownedComment xmi:id="Root-Annotations-_packagedElement.3-annotation-_ownedComment.0" annotatedElement="Root-Annotations-_packagedElement.3-annotation">
            <body>&lt;p>The Annotations associated with a certain &lt;code>annotatedElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-_packagedElement.3-annotation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-_packagedElement.3-annotation-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Annotations-AnnotatingElement" name="AnnotatingElement" visibility="public">
        <ownedComment xmi:id="Root-Annotations-AnnotatingElement-_ownedComment.0" annotatedElement="Root-Annotations-AnnotatingElement">
          <body>&lt;p>An &lt;code>AnnotatingElement&lt;/code> is an &lt;code>Element&lt;/code> that provides additional description of or metadata on some other &lt;code>Element&lt;/code>. An &lt;code>AnnotatingElement&lt;/code> is either attached to its &lt;code>annotatedElements&lt;/code> by &lt;code>Annotation&lt;/code> &lt;code>Relationships&lt;/code>, or it implicitly annotates its &lt;code>owningNamespace&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Annotations-AnnotatingElement-deriveAnnotatingElementAnnotatedElement" name="deriveAnnotatingElementAnnotatedElement" visibility="public" constrainedElement="Root-Annotations-AnnotatingElement">
          <ownedComment xmi:id="Root-Annotations-AnnotatingElement-deriveAnnotatingElementAnnotatedElement-_ownedComment.0" annotatedElement="Root-Annotations-AnnotatingElement-deriveAnnotatingElementAnnotatedElement">
            <body>&lt;p>If an &lt;code>AnnotatingElement&lt;/code> has &lt;code>annotations&lt;/code>, then its &lt;code>annotatedElements&lt;/code> are the &lt;code>annotatedElements&lt;/code> of all its &lt;code>annotations&lt;/code>. Otherwise, it's single &lt;code>annotatedElement&lt;/code> is its &lt;code>owningNamespace&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Annotations-AnnotatingElement-deriveAnnotatingElementAnnotatedElement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>annotatedElement = 
 if annotation->notEmpty() then annotation.annotatedElement
 else Sequence{owningNamespace} endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Root-Annotations-AnnotatingElement-_generalization.0" general="Root-Elements-Element"/>
        <ownedAttribute xmi:id="Root-Annotations-AnnotatingElement-annotation" name="annotation" visibility="public" type="Root-Annotations-Annotation" isOrdered="true" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship" association="Root-Annotations-_packagedElement.2">
          <ownedComment xmi:id="Root-Annotations-AnnotatingElement-annotation-_ownedComment.0" annotatedElement="Root-Annotations-AnnotatingElement-annotation">
            <body>&lt;p>The &lt;code>Annotations&lt;/code> that relate this &lt;code>AnnotatingElement&lt;/code> to its &lt;code>annotatedElements&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-AnnotatingElement-annotation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-AnnotatingElement-annotation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Annotations-AnnotatingElement-annotatedElement" name="annotatedElement" visibility="public" type="Root-Elements-Element" isOrdered="true" isDerived="true" association="Root-Annotations-_packagedElement.5">
          <ownedComment xmi:id="Root-Annotations-AnnotatingElement-annotatedElement-_ownedComment.0" annotatedElement="Root-Annotations-AnnotatingElement-annotatedElement">
            <body>&lt;p>The &lt;code>Elements&lt;/code> that are annotated by this &lt;code>AnnotatingElement&lt;/code>. If &lt;code>annotation&lt;/code> is not empty, these are the &lt;code>annotatedElements&lt;/code> of the &lt;code>annotations&lt;/code>. If &lt;code>annotation&lt;/code> is empty, then it is the &lt;code>owningNamespace&lt;/code> of the &lt;code>AnnotatingElement&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-AnnotatingElement-annotatedElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-AnnotatingElement-annotatedElement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Annotations-_packagedElement.5" name="" visibility="private" memberEnd="Root-Annotations-AnnotatingElement-annotatedElement Root-Annotations-_packagedElement.5-annotatingElement">
        <ownedEnd xmi:id="Root-Annotations-_packagedElement.5-annotatingElement" name="annotatingElement" visibility="public" type="Root-Annotations-AnnotatingElement" isOrdered="true" isDerived="true" association="Root-Annotations-_packagedElement.5">
          <ownedComment xmi:id="Root-Annotations-_packagedElement.5-annotatingElement-_ownedComment.0" annotatedElement="Root-Annotations-_packagedElement.5-annotatingElement">
            <body>&lt;p>The AnnotatingElements that have a certain Element as their &lt;code>annotatedElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-_packagedElement.5-annotatingElement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-_packagedElement.5-annotatingElement-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Annotations-TextualRepresentation" name="TextualRepresentation" visibility="public">
        <ownedComment xmi:id="Root-Annotations-TextualRepresentation-_ownedComment.0" annotatedElement="Root-Annotations-TextualRepresentation">
          <body>&lt;p>A &lt;code>TextualRepresentation&lt;/code> is an &lt;code>AnnotatingElement&lt;/code> whose &lt;code>body&lt;/code> represents the &lt;code>representedElement&lt;/code> in a given &lt;code>language&lt;/code>. The &lt;code>representedElement&lt;/code> must be the &lt;code>owner&lt;/code> of the &lt;code>TextualRepresentation&lt;/code>. The named &lt;code>language&lt;/code> can be a natural language, in which case the &lt;code>body&lt;/code> is an informal representation, or an artificial language, in which case the &lt;code>body&lt;/code> is expected to be a formal, machine-parsable representation.&lt;/p>

&lt;p>If the named &lt;code>language&lt;/code> of a &lt;code>TextualRepresentation&lt;/code> is machine-parsable, then the &lt;code>body&lt;/code> text should be legal input text as defined for that &lt;code>language&lt;/code>. The interpretation of the named language string shall be case insensitive. The following &lt;code>language&lt;/code> names are defined to correspond to the given standard languages:&lt;/p>

&lt;table border=&quot;1&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; width=&quot;498&quot;>
	&lt;thead>
	&lt;/thead>
	&lt;tbody>
		&lt;tr>
			&lt;td style=&quot;text-align: center; width: 154px;&quot;>&lt;code>kerml&lt;/code>&lt;/td>
			&lt;td style=&quot;width: 332px;&quot;>Kernel Modeling Language&lt;/td>
		&lt;/tr>
		&lt;tr>
			&lt;td style=&quot;text-align: center; width: 154px;&quot;>&lt;code>ocl&lt;/code>&lt;/td>
			&lt;td style=&quot;width: 332px;&quot;>Object Constraint Language&lt;/td>
		&lt;/tr>
		&lt;tr>
			&lt;td style=&quot;text-align: center; width: 154px;&quot;>&lt;code>alf&lt;/code>&lt;/td>
			&lt;td style=&quot;width: 332px;&quot;>Action Language for fUML&lt;/td>
		&lt;/tr>
	&lt;/tbody>
&lt;/table>

&lt;p>Other specifications may define specific &lt;code>language&lt;/code> strings, other than those shown above, to be used to indicate the use of languages from those specifications in KerML &lt;code>TextualRepresentation&lt;/code>.&lt;/p>

&lt;p>If the &lt;code>language&lt;/code> of a &lt;code>TextualRepresentation&lt;/code> is &amp;quot;&lt;code>kerml&lt;/code>&amp;quot;, then the &lt;code>body&lt;/code> text shall be a legal representation of the &lt;code>representedElement&lt;/code> in the KerML textual concrete syntax. A conforming tool can use such a &lt;code>TextualRepresentation&lt;/code> &lt;code>Annotation&lt;/code> to record the original KerML concrete syntax text from which an &lt;code>Element&lt;/code> was parsed. In this case, it is a tool responsibility to ensure that the &lt;code>body&lt;/code> of the &lt;code>TextualRepresentation&lt;/code> remains correct (or the Annotation is removed) if the annotated &lt;code>Element&lt;/code> changes other than by re-parsing the &lt;code>body&lt;/code> text.&lt;/p>

&lt;p>An &lt;code>Element&lt;/code> with a &lt;code>TextualRepresentation&lt;/code> in a language other than KerML is essentially a semantically &amp;quot;opaque&amp;quot; &lt;code>Element&lt;/code> specified in the other language. However, a conforming KerML tool may interpret such an element consistently with the specification of the named language.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Root-Annotations-TextualRepresentation-_generalization.0" general="Root-Annotations-AnnotatingElement"/>
        <ownedAttribute xmi:id="Root-Annotations-TextualRepresentation-language" name="language" visibility="public">
          <ownedComment xmi:id="Root-Annotations-TextualRepresentation-language-_ownedComment.0" annotatedElement="Root-Annotations-TextualRepresentation-language">
            <body>&lt;p>The natural or artifical language in which the &lt;code>body&lt;/code> text is written.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-TextualRepresentation-language-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-TextualRepresentation-language-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Annotations-TextualRepresentation-representedElement" name="representedElement" visibility="public" type="Root-Elements-Element" isDerived="true" redefinedProperty="Root-Annotations-AnnotatingElement-annotatedElement" subsettedProperty="Root-Elements-Element-owner" association="Root-Elements-_packagedElement.8">
          <ownedComment xmi:id="Root-Annotations-TextualRepresentation-representedElement-_ownedComment.0" annotatedElement="Root-Annotations-TextualRepresentation-representedElement">
            <body>&lt;p>The &lt;code>Element&lt;/code> that is represented by this &lt;code>TextualRepresentation&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-TextualRepresentation-representedElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-TextualRepresentation-representedElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Annotations-TextualRepresentation-body" name="body" visibility="public">
          <ownedComment xmi:id="Root-Annotations-TextualRepresentation-body-_ownedComment.0" annotatedElement="Root-Annotations-TextualRepresentation-body">
            <body>&lt;p>The textual representation of the &lt;code>representedElement&lt;/code> in the given &lt;code>language&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-TextualRepresentation-body-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-TextualRepresentation-body-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Annotations-Documentation" name="Documentation" visibility="public">
        <ownedComment xmi:id="Root-Annotations-Documentation-_ownedComment.0" annotatedElement="Root-Annotations-Documentation">
          <body>&lt;p>&lt;code>Documentation&lt;/code> is a &lt;code>Comment&lt;/code> that specifically documents a &lt;code>documentedElement&lt;/code>, which must be its &lt;code>owner&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Root-Annotations-Documentation-_generalization.0" general="Root-Annotations-Comment"/>
        <ownedAttribute xmi:id="Root-Annotations-Documentation-documentedElement" name="documentedElement" visibility="public" type="Root-Elements-Element" isDerived="true" redefinedProperty="Root-Annotations-AnnotatingElement-annotatedElement" subsettedProperty="Root-Elements-Element-owner" association="Root-Elements-_packagedElement.9">
          <ownedComment xmi:id="Root-Annotations-Documentation-documentedElement-_ownedComment.0" annotatedElement="Root-Annotations-Documentation-documentedElement">
            <body>&lt;p>The &lt;code>Element&lt;/code> that is documented by this &lt;code>Documentation&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Annotations-Documentation-documentedElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Annotations-Documentation-documentedElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Root-Namespaces" name="Namespaces" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Namespaces-Import" name="Import" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Root-Namespaces-Import-_ownedComment.0" annotatedElement="Root-Namespaces-Import">
          <body>&lt;p>An &lt;code>Import&lt;/code> is an &lt;code>Relationship&lt;/code> between its &lt;code>importOwningNamespace&lt;/code> and either a &lt;code>Membership&lt;/code> (for a &lt;code>MembershipImport&lt;/code>) or another &lt;code>Namespace&lt;/code> (for a &lt;code>NamespaceImport&lt;/code>), which determines a set of &lt;code>Memberships&lt;/code> that become &lt;code>importedMemberships&lt;/code> of the &lt;code>importOwningNamespace&lt;/code>. If &lt;code>isImportAll = false&lt;/code> (the default), then only public &lt;code>Memberships&lt;/code> are considered &amp;quot;visible&amp;quot;. If &lt;code>isImportAll = true&lt;/code>, then all &lt;code>Memberships&lt;/code> are considered &amp;quot;visible&amp;quot;, regardless of their declared &lt;code>visibility&lt;/code>. If &lt;code>isRecursive = true&lt;/code>, then visible &lt;code>Memberships&lt;/code> are also recursively imported from owned sub-&lt;code>Namespaces&lt;/code>.&lt;/p>

</body>
        </ownedComment>
        <generalization xmi:id="Root-Namespaces-Import-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Root-Namespaces-Import-importOwningNamespace" name="importOwningNamespace" visibility="public" type="Root-Namespaces-Namespace" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Root-Elements-Relationship-owningRelatedElement" association="Root-Namespaces-_packagedElement.8">
          <ownedComment xmi:id="Root-Namespaces-Import-importOwningNamespace-_ownedComment.0" annotatedElement="Root-Namespaces-Import-importOwningNamespace">
            <body>&lt;p>The Namespace into which Memberships are imported by this Import, which must be the &lt;code>owningRelatedElement&lt;/code> of the Import.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Import-importOwningNamespace-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Import-importOwningNamespace-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Import-visibility" name="visibility" visibility="public" type="Root-Namespaces-VisibilityKind">
          <ownedComment xmi:id="Root-Namespaces-Import-visibility-_ownedComment.0" annotatedElement="Root-Namespaces-Import-visibility">
            <body>&lt;p>The visibility level of the imported &lt;code>members&lt;/code> from this Import relative to the &lt;code>importOwningNamespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="Root-Namespaces-Import-visibility-_defaultValue" name="" visibility="public" instance="Root-Namespaces-VisibilityKind-public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Import-isRecursive" name="isRecursive" visibility="public">
          <ownedComment xmi:id="Root-Namespaces-Import-isRecursive-_ownedComment.0" annotatedElement="Root-Namespaces-Import-isRecursive">
            <body>&lt;p>Whether to recursively import Memberships from visible, owned sub-Namespaces.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Root-Namespaces-Import-isRecursive-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Import-isImportAll" name="isImportAll" visibility="public">
          <ownedComment xmi:id="Root-Namespaces-Import-isImportAll-_ownedComment.0" annotatedElement="Root-Namespaces-Import-isImportAll">
            <body>&lt;p>Whether to import memberships without regard to declared visibility.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Root-Namespaces-Import-isImportAll-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Import-importedElement" name="importedElement" visibility="public" type="Root-Elements-Element" isDerived="true" association="Root-Namespaces-_packagedElement.14">
          <ownedComment xmi:id="Root-Namespaces-Import-importedElement-_ownedComment.0" annotatedElement="Root-Namespaces-Import-importedElement">
            <body>&lt;p>The effectively imported &lt;code>Element&lt;/code> for this &lt;/code>Import&lt;/code>. For a &lt;code>MembershipImport&lt;/code>, this is the &lt;code>memberElement&lt;/code> of the &lt;code>importedMembership&lt;/code>. For a &lt;code>NamespaceImport&lt;/code>, it is the &lt;code>importedNamespace&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Import-importedElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Import-importedElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Root-Namespaces-Import-importedMemberships" name="importedMemberships" visibility="public" isAbstract="true">
          <ownedComment xmi:id="Root-Namespaces-Import-importedMemberships-_ownedComment.0" annotatedElement="Root-Namespaces-Import-importedMemberships">
            <body>&lt;p>Returns Memberships that are to become &lt;code>importedMemberships&lt;/code> of the &lt;code>importOwningNamespace&lt;/code>. (The &lt;code>excluded&lt;/code> parameter is used to handle the possibility of circular Import Relationships.)&lt;/p>
</body>
          </ownedComment>
          <ownedParameter xmi:id="Root-Namespaces-Import-importedMemberships-excluded" name="excluded" visibility="public" type="Root-Namespaces-Namespace">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Import-importedMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Import-importedMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Import-importedMemberships-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Import-importedMemberships-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Import-importedMemberships-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.1" name="" visibility="private" memberEnd="Root-Namespaces-Namespace-membership Root-Namespaces-_packagedElement.1-membershipNamespace">
        <ownedEnd xmi:id="Root-Namespaces-_packagedElement.1-membershipNamespace" name="membershipNamespace" visibility="public" type="Root-Namespaces-Namespace" isDerived="true" isDerivedUnion="true" association="Root-Namespaces-_packagedElement.1">
          <ownedComment xmi:id="Root-Namespaces-_packagedElement.1-membershipNamespace-_ownedComment.0" annotatedElement="Root-Namespaces-_packagedElement.1-membershipNamespace">
            <body>&lt;p>The Namespace that has a certain &lt;code>membership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-_packagedElement.1-membershipNamespace-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-_packagedElement.1-membershipNamespace-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.2" name="" visibility="private" memberEnd="Root-Namespaces-Namespace-ownedMembership Root-Namespaces-Membership-membershipOwningNamespace"/>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="Root-Namespaces-VisibilityKind" name="VisibilityKind" visibility="public">
        <ownedComment xmi:id="Root-Namespaces-VisibilityKind-_ownedComment.0" annotatedElement="Root-Namespaces-VisibilityKind">
          <body>&lt;p>&lt;code>VisibilityKind&lt;/code> is an enumeration whose literals specify the visibility of a &lt;code>Membership&lt;/code> of an &lt;code>Element&lt;/code> in a &lt;code>Namespace&lt;/code> outside of that &lt;code>Namespace&lt;/code>. Note that &amp;quot;visibility&amp;quot; specifically restricts whether an &lt;code>Element&lt;/code> in a &lt;code>Namespace&lt;/code> may be referenced by name from outside the &lt;code>Namespace&lt;/code> and only otherwise restricts access to an &lt;code>Element&lt;/code> as provided by specific constraints in the abstract syntax (e.g., preventing the import or inheritance of private &lt;code>Elements&lt;/code>).&lt;/p>
</body>
        </ownedComment>
        <ownedLiteral xmi:id="Root-Namespaces-VisibilityKind-private" name="private" visibility="public">
          <ownedComment xmi:id="Root-Namespaces-VisibilityKind-private-_ownedComment.0" annotatedElement="Root-Namespaces-VisibilityKind-private">
            <body>&lt;p>Indicates a &lt;code>Membership&lt;/code> is not visible outside its owning &lt;code>Namespace&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Root-Namespaces-VisibilityKind-protected" name="protected" visibility="public">
          <ownedComment xmi:id="Root-Namespaces-VisibilityKind-protected-_ownedComment.0" annotatedElement="Root-Namespaces-VisibilityKind-protected">
            <body>&lt;p>An intermediate level of visibility between &lt;code>public&lt;/code> and &lt;code>private&lt;/code>. By default, it is equivalent to &lt;code>private&lt;/code> for the purposes of normal access to and import of &lt;code>Elements&lt;/code> from a &lt;code>Namespace&lt;/code>. However, other &lt;code>Relationships&lt;/code> may be specified to include &lt;code>Memberships&lt;/code> with &lt;code>protected&lt;/code> visibility in the list of &lt;code>memberships&lt;/code> for a &lt;code>Namespace&lt;/code> (e.g., &lt;code>Specialization&lt;/code>).&lt;/p>
</body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Root-Namespaces-VisibilityKind-public" name="public" visibility="public">
          <ownedComment xmi:id="Root-Namespaces-VisibilityKind-public-_ownedComment.0" annotatedElement="Root-Namespaces-VisibilityKind-public">
            <body>&lt;p>Indicates that a &lt;code>Membership&lt;/code> is publicly visible outside its owning &lt;code>Namespace&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.4" name="" visibility="private" memberEnd="Root-Namespaces-OwningMembership-ownedMemberElement Root-Elements-Element-owningMembership"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.5" name="" visibility="private" memberEnd="Root-Namespaces-Namespace-member Root-Namespaces-_packagedElement.5-namespace">
        <ownedEnd xmi:id="Root-Namespaces-_packagedElement.5-namespace" name="namespace" visibility="public" type="Root-Namespaces-Namespace" isDerived="true" association="Root-Namespaces-_packagedElement.5">
          <ownedComment xmi:id="Root-Namespaces-_packagedElement.5-namespace-_ownedComment.0" annotatedElement="Root-Namespaces-_packagedElement.5-namespace">
            <body>&lt;p>The Namespace the has a certain Element as a &lt;code>member&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-_packagedElement.5-namespace-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-_packagedElement.5-namespace-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Namespaces-Namespace" name="Namespace" visibility="public">
        <ownedComment xmi:id="Root-Namespaces-Namespace-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace">
          <body>&lt;p>A &lt;code>Namespace&lt;/code> is an &lt;code>Element&lt;/code> that contains other &lt;code>Element&lt;/code>, known as its &lt;code>members&lt;/code>, via &lt;code>Membership&lt;/code> &lt;code>Relationships&lt;/code> with those &lt;code>Elements&lt;/code>. The &lt;code>members&lt;/code> of a &lt;code>Namespace&lt;/code> may be owned by the &lt;code>Namespace&lt;/code>, aliased in the &lt;code>Namespace&lt;/code>, or imported into the &lt;code>Namespace&lt;/code> via &lt;code>Import&lt;/code> &lt;code>Relationships&lt;/code> with other &lt;code>Namespace&lt;/code>.&lt;/p>

&lt;p>A &lt;code>Namespace&lt;/code> can provide names for its &lt;code>members&lt;/code> via the &lt;code>memberNames&lt;/code> and &lt;code>memberShortNames&lt;/code> specified by the &lt;code>Memberships&lt;/code> in the &lt;code>Namespace&lt;/code>. If a &lt;code>Membership&lt;/code> specifies a &lt;code>memberName&lt;/code> and/or &lt;code>memberShortName&lt;/code>, then that those are names of the corresponding &lt;code>memberElement&lt;/code> relative to the &lt;code>Namespace&lt;/code>. For an &lt;code>OwningMembership&lt;/code>, the &lt;code>owningMemberName&lt;/code> and &lt;code>owningMemberShortName&lt;/code> are given by the &lt;code>Element&lt;/code> &lt;code>name&lt;/code> and &lt;code>shortName&lt;/code>. Note that the same &lt;code>Element&lt;/code> may be the &lt;code>memberElement&lt;/code> of multiple &lt;code>Memberships&lt;/code> in a &lt;code>Namespace&lt;/code> (though it may be owned at most once), each of which may define a separate alias for the &lt;code>Element&lt;/code> relative to the &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Namespaces-Namespace-validateNamespaceDistinguishibility" name="validateNamespaceDistinguishibility" visibility="public" constrainedElement="Root-Namespaces-Namespace">
          <ownedComment xmi:id="Root-Namespaces-Namespace-validateNamespaceDistinguishibility-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-validateNamespaceDistinguishibility">
            <body>&lt;p>All &lt;code>memberships&lt;/code> of a Namespace must be distinguishable from each other.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-validateNamespaceDistinguishibility-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>membership->forAll(m1 | 
    membership->forAll(m2 | 
        m1 &lt;> m2 implies m1.isDistinguishableFrom(m2)))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Namespaces-Namespace-deriveNamespaceMembers" name="deriveNamespaceMembers" visibility="public" constrainedElement="Root-Namespaces-Namespace">
          <ownedComment xmi:id="Root-Namespaces-Namespace-deriveNamespaceMembers-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-deriveNamespaceMembers">
            <body>&lt;p>The &lt;code>members&lt;/code> of a Namespace are the &lt;code>memberElements&lt;/code> of all its &lt;code>memberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-deriveNamespaceMembers-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>member = membership.memberElement</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedMember" name="deriveNamespaceOwnedMember" visibility="public" constrainedElement="Root-Namespaces-Namespace">
          <ownedComment xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedMember-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-deriveNamespaceOwnedMember">
            <body>&lt;p>The &lt;code>ownedMembers&lt;/code> of a Namespace are the &lt;code>ownedMemberElements&lt;/code> of all its &lt;code>ownedMemberships&lt;/code> that are OwningMemberships.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedMember-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMember = ownedMembership->selectByKind(OwningMembership).ownedMemberElement</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Namespaces-Namespace-deriveNamespaceImportedMembership" name="deriveNamespaceImportedMembership" visibility="public" constrainedElement="Root-Namespaces-Namespace">
          <ownedComment xmi:id="Root-Namespaces-Namespace-deriveNamespaceImportedMembership-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-deriveNamespaceImportedMembership">
            <body>&lt;p>The &lt;code>importedMemberships&lt;/code> of a Namespace are derived using the &lt;code>importedMemberships()&lt;/code> operation,with no initially &lt;code>excluded&lt;/code> Namespaces.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-deriveNamespaceImportedMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>importedMembership = importedMemberships(Set{})</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedImport" name="deriveNamespaceOwnedImport" visibility="public" constrainedElement="Root-Namespaces-Namespace">
          <ownedComment xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedImport-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-deriveNamespaceOwnedImport">
            <body>&lt;p>The &lt;code>ownedImports&lt;/code> of a Namespace are all its &lt;code>ownedRelationships&lt;/code> that are Imports.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedImport-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedImport = ownedRelationship->selectByKind(Import)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedMembership" name="deriveNamespaceOwnedMembership" visibility="public" constrainedElement="Root-Namespaces-Namespace">
          <ownedComment xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedMembership-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-deriveNamespaceOwnedMembership">
            <body>&lt;p>The &lt;code>ownedMemberships&lt;/code> of a Namespace are all its &lt;code>ownedRelationships&lt;/code> that are Memberships.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-deriveNamespaceOwnedMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMembership = ownedRelationship->selectByKind(Membership)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Root-Namespaces-Namespace-_generalization.0" general="Root-Elements-Element"/>
        <ownedAttribute xmi:id="Root-Namespaces-Namespace-membership" name="membership" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" isDerived="true" isDerivedUnion="true" association="Root-Namespaces-_packagedElement.1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-membership-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-membership">
            <body>&lt;p>All &lt;code>Memberships&lt;/code> in this &lt;code>Namespace&lt;/code>, including (at least) the union of &lt;code>ownedMemberships&lt;/code> and &lt;code>importedMemberships&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-membership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-membership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Namespace-ownedImport" name="ownedImport" visibility="public" type="Root-Namespaces-Import" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship Root-Elements-Element-ownedRelationship" association="Root-Namespaces-_packagedElement.8">
          <ownedComment xmi:id="Root-Namespaces-Namespace-ownedImport-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-ownedImport">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Namespace&lt;/code> that are &lt;code>Imports&lt;/code>, for which the &lt;code>Namespace&lt;/code> is the &lt;code>importOwningNamespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-ownedImport-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-ownedImport-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Namespace-member" name="member" visibility="public" type="Root-Elements-Element" isOrdered="true" isDerived="true" association="Root-Namespaces-_packagedElement.5">
          <ownedComment xmi:id="Root-Namespaces-Namespace-member-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-member">
            <body>&lt;p>The set of all member &lt;code>Elements&lt;/code> of this &lt;code>Namespace&lt;/code>, which are the &lt;code>memberElements&lt;/code> of all &lt;code>memberships&lt;/code> of the &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-member-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-member-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Namespace-ownedMember" name="ownedMember" visibility="public" type="Root-Elements-Element" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-member" association="Root-Namespaces-_packagedElement.10">
          <ownedComment xmi:id="Root-Namespaces-Namespace-ownedMember-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-ownedMember">
            <body>&lt;p>The owned &lt;code>members&lt;/code> of this &lt;code>Namespace&lt;/code>, which are the &lt;cpde>&lt;code>ownedMemberElements&lt;/code> of the &lt;code>ownedMemberships&lt;/code> of the .&lt;/cpde>&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-ownedMember-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-ownedMember-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Namespace-ownedMembership" name="ownedMembership" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-membership Root-Elements-_packagedElement.5-sourceRelationship Root-Elements-Element-ownedRelationship" association="Root-Namespaces-_packagedElement.2">
          <ownedComment xmi:id="Root-Namespaces-Namespace-ownedMembership-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-ownedMembership">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Namespace&lt;/code> that are &lt;code>Memberships&lt;/code>, for which the &lt;code>Namespace&lt;/code> is the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-ownedMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-ownedMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Namespace-importedMembership" name="importedMembership" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-membership" association="Root-Namespaces-_packagedElement.9">
          <ownedComment xmi:id="Root-Namespaces-Namespace-importedMembership-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-importedMembership">
            <body>&lt;p>The &lt;code>Memberships&lt;/code> in this &lt;code>Namespace&lt;/code> that result from the &lt;code>ownedImports&lt;/code> of this &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-importedMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-importedMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-namesOf" name="namesOf" visibility="public" bodyCondition="Root-Namespaces-Namespace-namesOf-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-namesOf-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-namesOf">
            <body>&lt;p>Return the names of the given &lt;code>element&lt;/code> as it is known in this &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-namesOf-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-namesOf-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let elementMemberships : Sequence(Membership) = 
    memberships->select(memberElement = element) in
memberships.memberShortName->
    union(memberships.memberName)->
    asSet()</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-namesOf-element" name="element" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-namesOf-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-namesOf-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-namesOf-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-visibilityOf" name="visibilityOf" visibility="public" bodyCondition="Root-Namespaces-Namespace-visibilityOf-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-visibilityOf-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-visibilityOf">
            <body>&lt;p>Returns this visibility of &lt;code>mem&lt;/code> relative to this &lt;code>Namespace&lt;/code>. If &lt;code>mem&lt;/code> is an &lt;code>importedMembership&lt;/code>, this is the &lt;code>visibility&lt;/code> of its Import. Otherwise it is the &lt;code>visibility&lt;/code> of the &lt;code>Membership&lt;/code> itself.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-visibilityOf-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-visibilityOf-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if importedMembership->includes(mem) then
    ownedImport->
        select(importedMemberships(Set{})->includes(mem)).
        first().visibility
else if memberships->includes(mem) then
    mem.visibility
else
    VisibilityKind::private
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-visibilityOf-mem" name="mem" visibility="public" type="Root-Namespaces-Membership"/>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-visibilityOf-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-VisibilityKind" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-visibleMemberships" name="visibleMemberships" visibility="public" bodyCondition="Root-Namespaces-Namespace-visibleMemberships-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-visibleMemberships-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-visibleMemberships">
            <body>&lt;p>If &lt;code>includeAll = true&lt;/code>, then return all the &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code>. Otherwise, return only the publicly visible &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code> (which includes those &lt;code>ownedMemberships&lt;/code> that have a &lt;code>visibility&lt;/code> of &lt;code>public&lt;/code> and those &lt;code>importedMemberships&lt;/code> imported with a &lt;code>visibility&lt;/code> of &lt;code>public&lt;/code>). If &lt;code>isRecursive = true&lt;/code>, also recursively include all visible &lt;code>Memberships&lt;/code> of any visible owned &lt;code>Namespaces&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-visibleMemberships-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-visibleMemberships-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let visibleMemberships : Sequence(Membership) =
    if includeAll then memberships
    else ownedMembership->
        select(visibility = VisibilityKind::public)->
        union(ownedImport->
            select(visibility = VisibilityKind::public).
            importedMemberships(excluded->including(self)))
    endif in
if not isRecursive then visibleMemberships
else visibleMemberships->union(visibleMemberships->
        selectAsKind(Namespace).
        visibleMemberships(excluded->including(self), true, includeAll))
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-visibleMemberships-excluded" name="excluded" visibility="public" type="Root-Namespaces-Namespace">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-visibleMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-visibleMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-visibleMemberships-isRecursive" name="isRecursive" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-visibleMemberships-includeAll" name="includeAll" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-visibleMemberships-_ownedParameter.3" name="" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-visibleMemberships-_ownedParameter.3-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-visibleMemberships-_ownedParameter.3-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-importedMemberships" name="importedMemberships" visibility="public" bodyCondition="Root-Namespaces-Namespace-importedMemberships-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-importedMemberships-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-importedMemberships">
            <body>&lt;p>Derive the imported &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code> as the &lt;code>importedMembership&lt;/code> of all &lt;code>ownedImports&lt;/code>, excluding those Imports whose &lt;code>importOwningNamespace&lt;/code> is in the &lt;code>excluded&lt;/code> set, and excluding &lt;code>Memberships&lt;/code> that have distinguisibility collisions with each other or with any &lt;code>ownedMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-importedMemberships-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-importedMemberships-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>ownedImport.importedMemberships(excluded->including(self))</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-importedMemberships-excluded" name="excluded" visibility="public" type="Root-Namespaces-Namespace">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-importedMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-importedMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-importedMemberships-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-importedMemberships-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-importedMemberships-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-resolve" name="resolve" visibility="public" bodyCondition="Root-Namespaces-Namespace-resolve-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-resolve-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-resolve">
            <body>&lt;p>Resolve the given qualified name to the named &lt;code>Membership&lt;/code> (if any), starting with this &lt;code>Namespace&lt;/code> as the local scope. The qualified name string must conform to the concrete syntax of the KerML textual notation. According to the KerML name resolution rules every qualified name will resolve to either a single &lt;code>Membership&lt;/code>, or to none.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-resolve-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-resolve-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let qualification : String = qualificationOf(qualifiedName) in
let name : String = unqualifiedNameOf(qualifiedName) in
if qualification = null then resolveLocal(name)
else 
    let namespace : Element = resolve(qualification) in
    if namespace = null or not namespace.oclIsKindOf(Namespace) then null
    else namespace.oclAsType(Namespace).resolveVisible(name) endif
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolve-qualifiedName" name="qualifiedName" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolve-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-resolve-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-resolve-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-resolveGlobal" name="resolveGlobal" visibility="public" bodyCondition="Root-Namespaces-Namespace-resolveGlobal-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-resolveGlobal-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-resolveGlobal">
            <body>&lt;p>Resolve the given qualified name to the named &lt;code>Membership&lt;/code> (if any) in the effective global &lt;code>Namespace&lt;/code> that is the outermost naming scope. The qualified name string must conform to the concrete syntax of the KerML textual notation.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-resolveGlobal-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-resolveGlobal-unnamed1-_specification" name="" visibility="public">
              <language>English</language>
              <body>No OCL</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolveGlobal-qualifiedName" name="qualifiedName" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolveGlobal-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-resolveGlobal-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-resolveGlobal-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-resolveLocal" name="resolveLocal" visibility="public" bodyCondition="Root-Namespaces-Namespace-resolveLocal-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-resolveLocal-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-resolveLocal">
            <body>&lt;p>Resolve a simple &lt;code>name&lt;/code> starting with this &lt;code>Namespace&lt;/code> as the local scope, and continuing with containing outer scopes as necessary. However, if this &lt;code>Namespace&lt;/code> is a root &lt;code>Namespace&lt;/code>, then the resolution is done directly in global scope.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-resolveLocal-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-resolveLocal-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if owningNamespace = null then resolveGlobal(name)
else
    let memberships : Membership = membership->
        select(memberShortName = name or memberName = name) in
    if memberships->notEmpty() then memberships->first()
    else owningNamspace.resolveLocal(name)
    endif
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolveLocal-name" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolveLocal-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-resolveLocal-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-resolveLocal-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-resolveVisible" name="resolveVisible" visibility="public" bodyCondition="Root-Namespaces-Namespace-resolveVisible-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-resolveVisible-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-resolveVisible">
            <body>&lt;p>Resolve a simple name from the visible &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-resolveVisible-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-resolveVisible-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let memberships : Sequence(Membership) =
    visibleMemberships(Set{}, false, false)->
    select(memberShortName = name or memberName = name) in
if memberships->isEmpty() then null
else memberships->first()
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolveVisible-name" name="name" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-resolveVisible-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-resolveVisible-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-resolveVisible-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-qualificationOf" name="qualificationOf" visibility="public" bodyCondition="Root-Namespaces-Namespace-qualificationOf-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-qualificationOf-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-qualificationOf">
            <body>&lt;p>Return a string with valid KerML syntax representing the qualification part of a given &lt;code>qualifiedName&lt;/code>, that is, a qualified name with all the segment names of the given name except the last. If the given &lt;code>qualifiedName&lt;/code> has only one segment, then return null.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-qualificationOf-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-qualificationOf-unnamed1-_specification" name="" visibility="public">
              <language>English</language>
              <body>No OCL</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-qualificationOf-qualifiedName" name="qualifiedName" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-qualificationOf-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Namespace-qualificationOf-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Namespace-qualificationOf-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Namespaces-Namespace-unqualifiedNameOf" name="unqualifiedNameOf" visibility="public" bodyCondition="Root-Namespaces-Namespace-unqualifiedNameOf-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Namespace-unqualifiedNameOf-_ownedComment.0" annotatedElement="Root-Namespaces-Namespace-unqualifiedNameOf">
            <body>&lt;p>Return the simple name that is the last segment name of the given &lt;code>qualifiedName&lt;/code>. If this segment name has the form of a KerML unrestricted name, then &quot;unescape&quot; it by removing the surrounding single quotes and replacing all escape sequences with the specified character.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Namespace-unqualifiedNameOf-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Namespace-unqualifiedNameOf-unnamed1-_specification" name="" visibility="public">
              <language>English</language>
              <body>No OCL</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-unqualifiedNameOf-qualifiedName" name="qualifiedName" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-Namespace-unqualifiedNameOf-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Namespaces-Membership" name="Membership" visibility="public">
        <ownedComment xmi:id="Root-Namespaces-Membership-_ownedComment.0" annotatedElement="Root-Namespaces-Membership">
          <body>&lt;p>A &lt;code>Membership&lt;/code> is a &lt;code>Relationship&lt;/code> between a &lt;code>Namespace&lt;/code> and an &lt;code>Element&lt;/code> that indicates the &lt;code>Element&lt;/code> is a &lt;code>member&lt;/code> of (i.e., is contained in) the Namespace. Any &lt;code>memberNames&lt;/code> specify how the &lt;code>memberElement&lt;/code> is identified in the &lt;code>Namespace&lt;/code> and the &lt;code>visibility&lt;/code> specifies whether or not the &lt;code>memberElement&lt;/code> is publicly visible from outside the &lt;code>Namespace&lt;/code>.&lt;/p>

&lt;p>If a &lt;code>Membership&lt;/code> is an &lt;code>OwningMembership&lt;/code>, then it owns its &lt;code>memberElement&lt;/code>, which becomes an &lt;code>ownedMember&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code>. Otherwise, the &lt;code>memberNames&lt;/code> of a &lt;code>Membership&lt;/code> are effectively aliases within the &lt;code>membershipOwningNamespace&lt;/code> for an &lt;code>Element&lt;/code> with a separate &lt;code>OwningMembership&lt;/code> in the same or a different &lt;code>Namespace&lt;/code>.&lt;/p>

&lt;p>&amp;nbsp;&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Namespaces-Membership-deriveMembershipMemberElementId" name="deriveMembershipMemberElementId" visibility="public" constrainedElement="Root-Namespaces-Membership">
          <ownedComment xmi:id="Root-Namespaces-Membership-deriveMembershipMemberElementId-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-deriveMembershipMemberElementId">
            <body>&lt;p>The &lt;code>memberElementId&lt;/code> of a &lt;code>Membership&lt;/code> is the &lt;code>elementIf&lt;/code> of its &lt;code>memberElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Membership-deriveMembershipMemberElementId-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>memberElementId = memberElement.elementId</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Root-Namespaces-Membership-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Root-Namespaces-Membership-memberElementId" name="memberElementId" visibility="public" isDerived="true">
          <ownedComment xmi:id="Root-Namespaces-Membership-memberElementId-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-memberElementId">
            <body>&lt;p>The &lt;code>elementId&lt;/code> of the &lt;code>memberElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Membership-membershipOwningNamespace" name="membershipOwningNamespace" visibility="public" type="Root-Namespaces-Namespace" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Root-Namespaces-_packagedElement.1-membershipNamespace Root-Elements-Relationship-owningRelatedElement" association="Root-Namespaces-_packagedElement.2">
          <ownedComment xmi:id="Root-Namespaces-Membership-membershipOwningNamespace-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-membershipOwningNamespace">
            <body>&lt;p>The &lt;code>Namespace&lt;/code> of which the &lt;code>memberElement&lt;/code> becomes a &lt;cpde>member due to this &lt;code>Membership&lt;/code>.&lt;/cpde>&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Membership-membershipOwningNamespace-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Membership-membershipOwningNamespace-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Membership-memberShortName" name="memberShortName" visibility="public">
          <ownedComment xmi:id="Root-Namespaces-Membership-memberShortName-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-memberShortName">
            <body>&lt;p>The short name of the &lt;code>memberElement&lt;/code> relative to the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Membership-memberShortName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Membership-memberShortName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Membership-memberElement" name="memberElement" visibility="public" type="Root-Elements-Element" redefinedProperty="Root-Elements-Relationship-target" association="Root-Namespaces-_packagedElement.11">
          <ownedComment xmi:id="Root-Namespaces-Membership-memberElement-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-memberElement">
            <body>&lt;p>The &lt;code>Element&lt;/code> that becomes a &lt;code>member&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code> due to this &lt;code>Membership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Membership-memberElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Membership-memberElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Membership-memberName" name="memberName" visibility="public">
          <ownedComment xmi:id="Root-Namespaces-Membership-memberName-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-memberName">
            <body>&lt;p>The name of the &lt;code>memberElement&lt;/code> relative to the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-Membership-memberName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-Membership-memberName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-Membership-visibility" name="visibility" visibility="public" type="Root-Namespaces-VisibilityKind">
          <ownedComment xmi:id="Root-Namespaces-Membership-visibility-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-visibility">
            <body>&lt;p>Whether or not the &lt;code>Membership&lt;/code> of the &lt;code>memberElement&lt;/code> in the &lt;code>membershipOwningNamespace&lt;/code> is publicly visible outside that &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="Root-Namespaces-Membership-visibility-_defaultValue" name="" visibility="public" instance="Root-Namespaces-VisibilityKind-public"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Root-Namespaces-Membership-isDistinguishableFrom" name="isDistinguishableFrom" visibility="public" bodyCondition="Root-Namespaces-Membership-isDistinguishableFrom-unnamed1">
          <ownedComment xmi:id="Root-Namespaces-Membership-isDistinguishableFrom-_ownedComment.0" annotatedElement="Root-Namespaces-Membership-isDistinguishableFrom">
            <body>&lt;p>Whether this &lt;code>Membership&lt;/code> is distinguishable from a given &lt;code>other&lt;/code> &lt;code>Membership&lt;/code>. By default, this is true if this &lt;code>Membership&lt;/code> has no &lt;code>memberShortName&lt;/code> or &lt;code>memberName&lt;/code>; or each of the &lt;code>memberShortName&lt;/code> and &lt;code>memberName&lt;/code> are different than both of those of the &lt;code>other&lt;/code> &lt;code>Membership&lt;/code>; or neither of the metaclasses of the &lt;code>memberElement&lt;/code> of this &lt;code>Membership&lt;/code> and the &lt;code>memberElement&lt;/code> of the &lt;code>other&lt;/code> &lt;code>Membership&lt;/code> conform to the other. But this may be overridden in specializations of &lt;code>Membership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-Membership-isDistinguishableFrom-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-Membership-isDistinguishableFrom-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>not (memberElement.oclKindOf(other.memberElement.oclType()) or
     other.memberElement.oclKindOf(memberElement.oclType())) or
(shortMemberName = null or
    (shortMemberName &lt;> other.shortMemberName and
     shortMemberName &lt;> other.memberName)) and
(memberName = null or
    (memberName &lt;> other.shortMemberName and
     memberName &lt;> other.memberName)))
</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-Membership-isDistinguishableFrom-other" name="other" visibility="public" type="Root-Namespaces-Membership"/>
          <ownedParameter xmi:id="Root-Namespaces-Membership-isDistinguishableFrom-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.8" name="" visibility="private" memberEnd="Root-Namespaces-Namespace-ownedImport Root-Namespaces-Import-importOwningNamespace"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.9" name="" visibility="private" memberEnd="Root-Namespaces-Namespace-importedMembership Root-Namespaces-_packagedElement.9-importingNamespace">
        <ownedEnd xmi:id="Root-Namespaces-_packagedElement.9-importingNamespace" name="importingNamespace" visibility="public" type="Root-Namespaces-Namespace" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.1-membershipNamespace" association="Root-Namespaces-_packagedElement.9">
          <ownedComment xmi:id="Root-Namespaces-_packagedElement.9-importingNamespace-_ownedComment.0" annotatedElement="Root-Namespaces-_packagedElement.9-importingNamespace">
            <body>&lt;p>The Namespace with a certain &lt;code>importedMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-_packagedElement.9-importingNamespace-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-_packagedElement.9-importingNamespace-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.10" name="" visibility="private" memberEnd="Root-Namespaces-Namespace-ownedMember Root-Elements-Element-owningNamespace"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.11" name="" visibility="private" memberEnd="Root-Namespaces-Membership-memberElement Root-Namespaces-_packagedElement.11-membership">
        <ownedEnd xmi:id="Root-Namespaces-_packagedElement.11-membership" name="membership" visibility="public" type="Root-Namespaces-Membership" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Root-Namespaces-_packagedElement.11">
          <ownedComment xmi:id="Root-Namespaces-_packagedElement.11-membership-_ownedComment.0" annotatedElement="Root-Namespaces-_packagedElement.11-membership">
            <body>&lt;p>The Membership with a certain Element as its &lt;code>memberElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-_packagedElement.11-membership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-_packagedElement.11-membership-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.12" name="" visibility="private" memberEnd="Root-Namespaces-NamespaceImport-importedNamespace Root-Namespaces-_packagedElement.12-import">
        <ownedEnd xmi:id="Root-Namespaces-_packagedElement.12-import" name="import" visibility="public" type="Root-Namespaces-NamespaceImport" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Root-Namespaces-_packagedElement.12">
          <ownedComment xmi:id="Root-Namespaces-_packagedElement.12-import-_ownedComment.0" annotatedElement="Root-Namespaces-_packagedElement.12-import">
            <body>&lt;p>A NamespaceImport that has a certain &lt;code>importedNamespace&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-_packagedElement.12-import-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-_packagedElement.12-import-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Namespaces-OwningMembership" name="OwningMembership" visibility="public">
        <ownedComment xmi:id="Root-Namespaces-OwningMembership-_ownedComment.0" annotatedElement="Root-Namespaces-OwningMembership">
          <body>&lt;p>An &lt;code>OwningMembership&lt;/code> is a &lt;code>Membership&lt;/code> that owns its &lt;code>memberElement&lt;/code> as a &lt;code>ownedRelatedElement&lt;/code>. The &lt;code>ownedMemberElementM&lt;/code> becomes an &lt;code>ownedMember&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberName" name="deriveOwningMembershipOwnedMemberName" visibility="public" constrainedElement="Root-Namespaces-OwningMembership">
          <ownedComment xmi:id="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberName-_ownedComment.0" annotatedElement="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberName">
            <body>&lt;p>The &lt;code>ownedMemberName&lt;/code> of an OwningMembership is the &lt;code>name&lt;/code> of its &lt;code>ownedMemberElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberName-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMemberName = ownedMemberElement.name</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberShortName" name="deriveOwningMembershipOwnedMemberShortName" visibility="public" constrainedElement="Root-Namespaces-OwningMembership">
          <ownedComment xmi:id="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberShortName-_ownedComment.0" annotatedElement="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberShortName">
            <body>&lt;p>The &lt;code>ownedMemberShortName&lt;/code> of an OwningMembership is the &lt;code>shortName&lt;/code> of its &lt;code>ownedMemberElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-OwningMembership-deriveOwningMembershipOwnedMemberShortName-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMemberShortName = ownedMemberElement.shortName</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Root-Namespaces-OwningMembership-_generalization.0" general="Root-Namespaces-Membership"/>
        <ownedAttribute xmi:id="Root-Namespaces-OwningMembership-ownedMemberElement" name="ownedMemberElement" visibility="public" type="Root-Elements-Element" aggregation="composite" isDerived="true" redefinedProperty="Root-Namespaces-Membership-memberElement" subsettedProperty="Root-Elements-Relationship-ownedRelatedElement" association="Root-Namespaces-_packagedElement.4">
          <ownedComment xmi:id="Root-Namespaces-OwningMembership-ownedMemberElement-_ownedComment.0" annotatedElement="Root-Namespaces-OwningMembership-ownedMemberElement">
            <body>&lt;p>The &lt;code>Element&lt;/code> that becomes an &lt;code>ownedMember&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code> due to this &lt;code>OwningMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-OwningMembership-ownedMemberElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-OwningMembership-ownedMemberElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-OwningMembership-ownedMemberElementId" name="ownedMemberElementId" visibility="public" isDerived="true" redefinedProperty="Root-Namespaces-Membership-memberElementId">
          <ownedComment xmi:id="Root-Namespaces-OwningMembership-ownedMemberElementId-_ownedComment.0" annotatedElement="Root-Namespaces-OwningMembership-ownedMemberElementId">
            <body>&lt;p>The &lt;code>elementId&lt;/code> of the &lt;code>ownedMemberElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-OwningMembership-ownedMemberShortName" name="ownedMemberShortName" visibility="public" isDerived="true" redefinedProperty="Root-Namespaces-Membership-memberShortName">
          <ownedComment xmi:id="Root-Namespaces-OwningMembership-ownedMemberShortName-_ownedComment.0" annotatedElement="Root-Namespaces-OwningMembership-ownedMemberShortName">
            <body>&lt;p>The &lt;code>shortName&lt;/code> of the &lt;code>ownedMemberElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-OwningMembership-ownedMemberShortName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-OwningMembership-ownedMemberShortName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Namespaces-OwningMembership-ownedMemberName" name="ownedMemberName" visibility="public" isDerived="true" redefinedProperty="Root-Namespaces-Membership-memberName">
          <ownedComment xmi:id="Root-Namespaces-OwningMembership-ownedMemberName-_ownedComment.0" annotatedElement="Root-Namespaces-OwningMembership-ownedMemberName">
            <body>&lt;p>The &lt;code>name&lt;/code> of the &lt;code>ownedMemberElement&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-OwningMembership-ownedMemberName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-OwningMembership-ownedMemberName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.14" name="" visibility="private" memberEnd="Root-Namespaces-Import-importedElement Root-Namespaces-_packagedElement.14-membershipImport">
        <ownedEnd xmi:id="Root-Namespaces-_packagedElement.14-membershipImport" name="membershipImport" visibility="public" type="Root-Namespaces-Import" isDerived="true" association="Root-Namespaces-_packagedElement.14">
          <ownedComment xmi:id="Root-Namespaces-_packagedElement.14-membershipImport-_ownedComment.0" annotatedElement="Root-Namespaces-_packagedElement.14-membershipImport">
            <body>&lt;p>An Import with a certain &lt;code>importedElement&lt;/code>.&lt;/p> </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-_packagedElement.14-membershipImport-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-_packagedElement.14-membershipImport-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Namespaces-NamespaceImport" name="NamespaceImport" visibility="public">
        <ownedComment xmi:id="Root-Namespaces-NamespaceImport-_ownedComment.0" annotatedElement="Root-Namespaces-NamespaceImport">
          <body>&lt;p>A &lt;code>NamespaceImport&lt;/code> is an Import that imports &lt;code>Memberships&lt;/code> from its &lt;code>importedNamespace&lt;/code> into the &lt;code>importOwningNamespace&lt;/code>. If &lt;code> isRecursive = false&lt;/code>, then only the visible &lt;code>Memberships&lt;/code> of the &lt;code>importOwningNamespace&lt;/code> are imported. If &lt;code> isRecursive = true&lt;/code>, then, in addition, &lt;code>Memberships&lt;/code> are recursively imported from any &lt;code>ownedMembers&lt;/code> of the &lt;code>importedNamespace&lt;/code> that are &lt;code>Namespaces&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Namespaces-NamespaceImport-deriveNamespaceImportImportedElement" name="deriveNamespaceImportImportedElement" visibility="public" constrainedElement="Root-Namespaces-NamespaceImport">
          <ownedComment xmi:id="Root-Namespaces-NamespaceImport-deriveNamespaceImportImportedElement-_ownedComment.0" annotatedElement="Root-Namespaces-NamespaceImport-deriveNamespaceImportImportedElement">
            <body>&lt;p>The &lt;code>importedElement&lt;/code> of a &lt;code>NamespaceImport&lt;/code> is its &lt;code>importedNamespace&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-NamespaceImport-deriveNamespaceImportImportedElement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>importedElement = importedNamespace</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Root-Namespaces-NamespaceImport-_generalization.0" general="Root-Namespaces-Import"/>
        <ownedAttribute xmi:id="Root-Namespaces-NamespaceImport-importedNamespace" name="importedNamespace" visibility="public" type="Root-Namespaces-Namespace" redefinedProperty="Root-Elements-Relationship-target" association="Root-Namespaces-_packagedElement.12">
          <ownedComment xmi:id="Root-Namespaces-NamespaceImport-importedNamespace-_ownedComment.0" annotatedElement="Root-Namespaces-NamespaceImport-importedNamespace">
            <body>&lt;p>The &lt;code>Namespace&lt;/code> whose visible &lt;code>Memberships&lt;/code> are imported by this &lt;code>NamespaceImport&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-NamespaceImport-importedNamespace-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-NamespaceImport-importedNamespace-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Root-Namespaces-NamespaceImport-importedMemberships" name="importedMemberships" visibility="public" bodyCondition="Root-Namespaces-NamespaceImport-importedMemberships-unnamed1" redefinedOperation="Root-Namespaces-Import-importedMemberships">
          <ownedComment xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-_ownedComment.0" annotatedElement="Root-Namespaces-NamespaceImport-importedMemberships">
            <body>&lt;p>Returns at least the visible &lt;code>Memberships&lt;/code> of the &lt;code>importedNamespace&lt;/code>. If &lt;code>isRecursive = true&lt;/code>, then &lt;code>Memberships&lt;/code> are also recursively imported from any &lt;code>ownedMembers&lt;/code> of the &lt;code>importedNamespace&lt;/code> that are themselves &lt;code>Namespaces&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if excluded->includes(importedNamespace) then Sequence{}
else importedNamespace.visibleMemberships(excluded, isRecursive, isImportAll)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-excluded" name="excluded" visibility="public" type="Root-Namespaces-Namespace">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-NamespaceImport-importedMemberships-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Namespaces-MembershipImport" name="MembershipImport" visibility="public">
        <ownedComment xmi:id="Root-Namespaces-MembershipImport-_ownedComment.0" annotatedElement="Root-Namespaces-MembershipImport">
          <body>&lt;p>A &lt;code>MembershipImport&lt;/code> is an &lt;code>Import&lt;/code> that imports its &lt;code>importedMembership&lt;/code> into the &lt;code>importOwningNamespace&lt;/code>. If &lt;code>isRecursive = true&lt;/code> and the &lt;code>memberElement&lt;/code> of the &lt;code>importedMembership&lt;/code> is a &lt;code>Namespace&lt;/code>, then the equivalent of a recursive &lt;code>NamespaceImport&lt;/code> is also performed on that &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Namespaces-MembershipImport-deriveMembershipImportImportedElement" name="deriveMembershipImportImportedElement" visibility="public" constrainedElement="Root-Namespaces-MembershipImport">
          <ownedComment xmi:id="Root-Namespaces-MembershipImport-deriveMembershipImportImportedElement-_ownedComment.0" annotatedElement="Root-Namespaces-MembershipImport-deriveMembershipImportImportedElement">
            <body>&lt;p>The &lt;code>importedElement&lt;/code> of a &lt;code>MembershipImport&lt;/code> is the &lt;code>memberElement&lt;/code> of its &lt;code>importedMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-MembershipImport-deriveMembershipImportImportedElement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>importedElement = importedMembership.memberElement</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Root-Namespaces-MembershipImport-_generalization.0" general="Root-Namespaces-Import"/>
        <ownedAttribute xmi:id="Root-Namespaces-MembershipImport-importedMembership" name="importedMembership" visibility="public" type="Root-Namespaces-Membership" redefinedProperty="Root-Elements-Relationship-target" association="Root-Namespaces-_packagedElement.17">
          <ownedComment xmi:id="Root-Namespaces-MembershipImport-importedMembership-_ownedComment.0" annotatedElement="Root-Namespaces-MembershipImport-importedMembership">
            <body>&lt;p>The &lt;code>Membership&lt;/code> to be imported.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-MembershipImport-importedMembership-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-MembershipImport-importedMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Root-Namespaces-MembershipImport-importedMemberships" name="importedMemberships" visibility="public" bodyCondition="Root-Namespaces-MembershipImport-importedMemberships-unnamed1" redefinedOperation="Root-Namespaces-Import-importedMemberships">
          <ownedComment xmi:id="Root-Namespaces-MembershipImport-importedMemberships-_ownedComment.0" annotatedElement="Root-Namespaces-MembershipImport-importedMemberships">
            <body>&lt;p>Returns at least the &lt;code>importedMembership&lt;/code>. If &lt;code>isRecursive = true&lt;/code> and the &lt;code>memberElement&lt;/code> of the &lt;code>importedMembership&lt;/code> is a &lt;code>Namespace&lt;/code>, then &lt;code>Memberships&lt;/code> are also recursively imported from that &lt;code>Namespace&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Root-Namespaces-MembershipImport-importedMemberships-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Namespaces-MembershipImport-importedMemberships-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if not isRecursive or 
   not importedElement.oclIsKindOf(Namespace) or
   excluded->includes(importedElement)
then Sequence{importedMembership}
else importedElement.oclAsType(Namespace).
        visibleMemberships(excluded, true, importAll)->
        prepend(importedMembership)
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Namespaces-MembershipImport-importedMemberships-excluded" name="excluded" visibility="public" type="Root-Namespaces-Namespace">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-MembershipImport-importedMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-MembershipImport-importedMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Root-Namespaces-MembershipImport-importedMemberships-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-MembershipImport-importedMemberships-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-MembershipImport-importedMemberships-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Namespaces-_packagedElement.17" name="" visibility="private" memberEnd="Root-Namespaces-MembershipImport-importedMembership Root-Namespaces-_packagedElement.17-import">
        <ownedEnd xmi:id="Root-Namespaces-_packagedElement.17-import" name="import" visibility="public" type="Root-Namespaces-MembershipImport" redefinedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Root-Namespaces-_packagedElement.17">
          <ownedComment xmi:id="Root-Namespaces-_packagedElement.17-import-_ownedComment.0" annotatedElement="Root-Namespaces-_packagedElement.17-import">
            <body>&lt;p>A MembershipImport that has a certain &lt;code>importedMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Namespaces-_packagedElement.17-import-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Namespaces-_packagedElement.17-import-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Root-Elements" name="Elements" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Elements-Element" name="Element" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Root-Elements-Element-_ownedComment.0" annotatedElement="Root-Elements-Element">
          <body>&lt;p>An &lt;code>Element&lt;/code> is a constituent of a model that is uniquely identified relative to all other &lt;code>Elements&lt;/code>. It can have &lt;code>Relationships&lt;/code> with other &lt;code>Elements&lt;/code>. Some of these &lt;code>Relationships&lt;/code> might imply ownership of other &lt;code>Elements&lt;/code>, which means that if an &lt;code>Element&lt;/code> is deleted from a model, then so are all the &lt;code>Elements&lt;/code> that it owns.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementOwnedElement" name="deriveElementOwnedElement" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementOwnedElement-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementOwnedElement">
            <body>&lt;p>The &lt;code>ownedElements&lt;/code> of an &lt;code>Element&lt;/code> are the &lt;code>ownedRelatedElements&lt;/code> of its &lt;code>ownedRelationships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementOwnedElement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedElement = ownedRelationship.ownedRelatedElement</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementOwner" name="deriveElementOwner" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementOwner-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementOwner">
            <body>&lt;p>The &lt;code>owner&lt;/code> of an &lt;code>Element&lt;/code> is the &lt;code>owningRelatedElement&lt;/code> of its &lt;code>owningRelationship&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementOwner-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owner = owningRelationship.owningRelatedElement</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementQualifiedName" name="deriveElementQualifiedName" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementQualifiedName-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementQualifiedName">
            <body>&lt;p>If this &lt;code>Element&lt;/code> does not have an &lt;code>owningNamespace&lt;/code>, then its &lt;code>qualifiedName&lt;/code> is null. If the &lt;code>owningNamespace&lt;/code> of this Element is a root &lt;code>Namespace&lt;/code>, then the &lt;code>qualifiedName&lt;/code> of the &lt;code>Element&lt;/code> is the escaped name of the &lt;code>Element&lt;/code> (if any). If the &lt;code>owningNamespace&lt;/code> is non-null but not a root &lt;code>Namespace&lt;/code>, then the &lt;code>qualifiedName&lt;/code> of this &lt;code>Element&lt;/code> is constructed from the &lt;code>qualifiedName&lt;/code> of the &lt;code>owningNamespace&lt;/code> and the escaped name of the &lt;code>Element&lt;/code>, unless the &lt;code>qualifiedName&lt;/code> of the &lt;code>owningNamespace&lt;/code> is null or the escaped name is null, in which case the &lt;code>qualifiedName&lt;/code> of this &lt;code>Element&lt;/code> is also null.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementQualifiedName-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>qualifiedName =
    if owningNamespace = null then null
    else if owningNamespace.owner = null then escapedName()
    else if owningNamespace.qualifiedName = null or 
            escapedName() = null then null
    else owningNamespace.qualifiedName + '::' + escapedName()
    endif endif endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementDocumentation" name="deriveElementDocumentation" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementDocumentation-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementDocumentation">
            <body>&lt;p>The &lt;code>documentation&lt;/code> of an &lt;code>Element&lt;/code> is its &lt;code>ownedElements&lt;/code> that are &lt;code>Documentation&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementDocumentation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>documentation = ownedElement->selectByKind(Documentation)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementOwnedAnnotation" name="deriveElementOwnedAnnotation" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementOwnedAnnotation-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementOwnedAnnotation">
            <body>&lt;p>The &lt;code>ownedAnnotations&lt;/code> of an &lt;code>Element&lt;/code> are its &lt;code>ownedRelationships&lt;/code> that are &lt;code>Annotations&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementOwnedAnnotation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedAnnotation = ownedRelationship->
    selectByKind(Annotation)->
    select(a | a.annotatedElement = self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementName" name="deriveElementName" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementName-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementName">
            <body>&lt;p>The &lt;code>name&lt;/code> of an &lt;code>Element&lt;/code> is given by the result of the &lt;code>effectiveName()&lt;/code> operation.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementName-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>name = effectiveName()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-validateElementIsImpliedIncluded" name="validateElementIsImpliedIncluded" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-validateElementIsImpliedIncluded-_ownedComment.0" annotatedElement="Root-Elements-Element-validateElementIsImpliedIncluded">
            <body>&lt;p>If an &lt;code>Element&lt;/code> has any &lt;code>ownedRelationships&lt;/code> for which &lt;code>isImplied = true&lt;/code>, then the &lt;code>Element&lt;/code> must also have &lt;code>isImpliedIncluded = true&lt;/code>. (Note that an &lt;code>Element&lt;/code> &lt;em>can&lt;/em> have &lt;code>isImplied = true&lt;/code> even if no &lt;code>ownedRelationships&lt;/code> have &lt;code>isImplied = true&lt;/code>, indicating the &lt;code>Element&lt;/code> simply has no implied &lt;code>Relationships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-validateElementIsImpliedIncluded-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRelationship->exists(isImplied) implies isImpliedIncluded</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementIsLibraryElement" name="deriveElementIsLibraryElement" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementIsLibraryElement-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementIsLibraryElement">
            <body>&lt;p>An &lt;code>Element&lt;/code> &lt;code>isLibraryElement&lt;/code> if &lt;code>libraryNamespace()&lt;/code> is not null.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementIsLibraryElement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isLibraryElement = libraryNamespace() &lt;>null
</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementShortName" name="deriveElementShortName" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementShortName-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementShortName">
            <body>&lt;p>The &lt;code>shortName&lt;/code> of an &lt;code>Element&lt;/code> is given by the result of the &lt;code>effectiveShortName()&lt;/code> operation.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementShortName-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>shortName = effectiveShortName()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveOwningNamespace" name="deriveOwningNamespace" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveOwningNamespace-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveOwningNamespace">
            <body>&lt;p>The &lt;code>owningNamespace&lt;/code> of an &lt;code>Element&lt;/code> is the &lt;code>membershipOwningNamspace&lt;/code> of its &lt;code>owningMembership&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveOwningNamespace-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningNamespace =
    if owningMembership = null then null
    else owningMembership.membershipOwningNamespace
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Root-Elements-Element-deriveElementTextualRepresentation" name="deriveElementTextualRepresentation" visibility="public" constrainedElement="Root-Elements-Element">
          <ownedComment xmi:id="Root-Elements-Element-deriveElementTextualRepresentation-_ownedComment.0" annotatedElement="Root-Elements-Element-deriveElementTextualRepresentation">
            <body>&lt;p>The &lt;code>textualRepresentations&lt;/code> of an &lt;code>Element&lt;/code> are its &lt;code>ownedElements&lt;/code> that are &lt;code>TextualRepresentations&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-deriveElementTextualRepresentation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>textualRepresentation = ownedElement->selectByKind(TextualRepresentation)</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="Root-Elements-Element-owningMembership" name="owningMembership" visibility="public" type="Root-Namespaces-OwningMembership" isDerived="true" subsettedProperty="Root-Elements-Element-owningRelationship Root-Namespaces-_packagedElement.11-membership" association="Root-Namespaces-_packagedElement.4">
          <ownedComment xmi:id="Root-Elements-Element-owningMembership-_ownedComment.0" annotatedElement="Root-Elements-Element-owningMembership">
            <body>&lt;p>The &lt;code>owningRelationship&lt;/code> of this &lt;code>Element&lt;/code>, if that &lt;code>Relationship&lt;/code> is a &lt;code>Membership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-owningMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-owningMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-owningRelationship" name="owningRelationship" visibility="public" type="Root-Elements-Relationship" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Root-Elements-_packagedElement.3">
          <ownedComment xmi:id="Root-Elements-Element-owningRelationship-_ownedComment.0" annotatedElement="Root-Elements-Element-owningRelationship">
            <body>&lt;p>The Relationship for which this Element is an &lt;tt>ownedRelatedElement&lt;/tt>, if any.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-owningRelationship-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-owningRelationship-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-owningNamespace" name="owningNamespace" visibility="public" type="Root-Namespaces-Namespace" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.5-namespace" association="Root-Namespaces-_packagedElement.10">
          <ownedComment xmi:id="Root-Elements-Element-owningNamespace-_ownedComment.0" annotatedElement="Root-Elements-Element-owningNamespace">
            <body>&lt;p>The &lt;code>Namespace&lt;/code> that owns this &lt;code>Element&lt;/code>, which is the &lt;code>membershipOwningNamespace&lt;/code> of the &lt;code>owningMembership&lt;/code> of this &lt;code>Element&lt;/code>, if any.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-owningNamespace-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-owningNamespace-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-elementId" name="elementId" visibility="public" isID="true">
          <ownedComment xmi:id="Root-Elements-Element-elementId-_ownedComment.0" annotatedElement="Root-Elements-Element-elementId">
            <body>&lt;p>The globally unique identifier for this Element. This is intended to be set by tooling, and it must not change during the lifetime of the Element.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-ownedRelationship" name="ownedRelationship" visibility="public" type="Root-Elements-Relationship" isOrdered="true" aggregation="composite" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Root-Elements-_packagedElement.6">
          <ownedComment xmi:id="Root-Elements-Element-ownedRelationship-_ownedComment.0" annotatedElement="Root-Elements-Element-ownedRelationship">
            <body>&lt;p>The Relationships for which this Element is the &lt;tt>owningRelatedElement&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-ownedRelationship-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-ownedRelationship-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-owner" name="owner" visibility="public" type="Root-Elements-Element" isDerived="true" association="Root-Elements-_packagedElement.7">
          <ownedComment xmi:id="Root-Elements-Element-owner-_ownedComment.0" annotatedElement="Root-Elements-Element-owner">
            <body>&lt;p>The owner of this Element, derived as the &lt;code>owningRelatedElement&lt;/code> of the &lt;code>owningRelationship&lt;/code> of this Element, if any.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-owner-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-owner-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-ownedElement" name="ownedElement" visibility="public" type="Root-Elements-Element" isOrdered="true" isDerived="true" association="Root-Elements-_packagedElement.7">
          <ownedComment xmi:id="Root-Elements-Element-ownedElement-_ownedComment.0" annotatedElement="Root-Elements-Element-ownedElement">
            <body>&lt;p>The Elements owned by this Element, derived as the &lt;tt>ownedRelatedElements&lt;/tt> of the &lt;tt>ownedRelationships&lt;/tt> of this Element.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-ownedElement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-ownedElement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-documentation" name="documentation" visibility="public" type="Root-Annotations-Documentation" isOrdered="true" isDerived="true" subsettedProperty="Root-Elements-Element-ownedElement Root-Annotations-_packagedElement.5-annotatingElement" association="Root-Elements-_packagedElement.9">
          <ownedComment xmi:id="Root-Elements-Element-documentation-_ownedComment.0" annotatedElement="Root-Elements-Element-documentation">
            <body>&lt;p>The Documentation owned by this Element.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-documentation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-documentation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-ownedAnnotation" name="ownedAnnotation" visibility="public" type="Root-Annotations-Annotation" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-Element-ownedRelationship Root-Annotations-_packagedElement.3-annotation" association="Root-Elements-_packagedElement.10">
          <ownedComment xmi:id="Root-Elements-Element-ownedAnnotation-_ownedComment.0" annotatedElement="Root-Elements-Element-ownedAnnotation">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Element&lt;/code> that are &lt;code>Annotations&lt;/code>, for which this &lt;code>Element&lt;/code> is the &lt;code>annotatedElement&lt;/code>.&lt;/code></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-ownedAnnotation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-ownedAnnotation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-textualRepresentation" name="textualRepresentation" visibility="public" type="Root-Annotations-TextualRepresentation" isOrdered="true" isDerived="true" subsettedProperty="Root-Elements-Element-ownedElement Root-Annotations-_packagedElement.5-annotatingElement" association="Root-Elements-_packagedElement.8">
          <ownedComment xmi:id="Root-Elements-Element-textualRepresentation-_ownedComment.0" annotatedElement="Root-Elements-Element-textualRepresentation">
            <body>&lt;p>The &lt;code>TextualRepresentations&lt;/code> that annotate this &lt;code>Element&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-textualRepresentation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-textualRepresentation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-aliasIds" name="aliasIds" visibility="public" isOrdered="true">
          <ownedComment xmi:id="Root-Elements-Element-aliasIds-_ownedComment.0" annotatedElement="Root-Elements-Element-aliasIds">
            <body>&lt;p>Various alternative identifiers for this Element. Generally, these will be set by tools.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-aliasIds-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-aliasIds-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-declaredShortName" name="declaredShortName" visibility="public">
          <ownedComment xmi:id="Root-Elements-Element-declaredShortName-_ownedComment.0" annotatedElement="Root-Elements-Element-declaredShortName">
            <body>&lt;p>An optional alternative name for the &lt;code>Element&lt;/code> that is intended to be shorter or in some way more succinct than its primary &lt;code>name&lt;/code>. It may act as a modeler-specified identifier for the &lt;code>Element&lt;/code>, though it is then the responsibility of the modeler to maintain the uniqueness of this identifier within a model or relative to some other context.&lt;/p> 
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-declaredShortName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-declaredShortName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-declaredName" name="declaredName" visibility="public">
          <ownedComment xmi:id="Root-Elements-Element-declaredName-_ownedComment.0" annotatedElement="Root-Elements-Element-declaredName">
            <body>&lt;p>The declared name of this &lt;code>Element&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-declaredName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-declaredName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-shortName" name="shortName" visibility="public" isDerived="true">
          <ownedComment xmi:id="Root-Elements-Element-shortName-_ownedComment.0" annotatedElement="Root-Elements-Element-shortName">
            <body>&lt;p>The short name to be used for this &lt;code>Element&lt;/code> during name resolution within its &lt;code>owningNamespace&lt;/code>. This is derived using the &lt;code>effectiveShortName()&lt;/code> operation. By default, it is the same as the &lt;code>declaredShortName&lt;/code>, but this is overridden for certain kinds of &lt;code>Elements&lt;/code> to compute a &lt;code>shortName&lt;/code> even when the &lt;code>declaredName&lt;/code> is null.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-shortName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-shortName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-name" name="name" visibility="public" isDerived="true">
          <ownedComment xmi:id="Root-Elements-Element-name-_ownedComment.0" annotatedElement="Root-Elements-Element-name">
            <body>&lt;p>The name to be used for this &lt;code>Element&lt;/code> during name resolution within its &lt;code>owningNamespace&lt;/code>. This is derived using the &lt;code>effectiveName()&lt;/code> operation. By default, it is the same as the &lt;code>declaredName&lt;/code>, but this is overridden for certain kinds of &lt;code>Elements&lt;/code> to compute a &lt;code>name&lt;/code> even when the &lt;code>declaredName&lt;/code> is null.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-name-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-name-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-qualifiedName" name="qualifiedName" visibility="public" isDerived="true">
          <ownedComment xmi:id="Root-Elements-Element-qualifiedName-_ownedComment.0" annotatedElement="Root-Elements-Element-qualifiedName">
            <body>&lt;p>The full ownership-qualified name of this &lt;code>Element&lt;/code>, represented in a form that is valid according to the KerML textual concrete syntax for qualified names (including use of unrestricted name notation and escaped characters, as necessary). The &lt;code>qualifiedName&lt;/code> is null if this &lt;code>Element&lt;/code> has no &lt;code>owningNamespace&lt;/code> or if there is not a complete ownership chain of named &lt;code>Namespaces&lt;/code> from a root &lt;code>Namespace&lt;/code> to this &lt;code>Element&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-qualifiedName-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-qualifiedName-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-isImpliedIncluded" name="isImpliedIncluded" visibility="public">
          <ownedComment xmi:id="Root-Elements-Element-isImpliedIncluded-_ownedComment.0" annotatedElement="Root-Elements-Element-isImpliedIncluded">
            <body>&lt;p>Whether all necessary implied Relationships have been included in the &lt;code>ownedRelationships&lt;/code> of this Element. This property may be true, even if there are not actually any &lt;code>ownedRelationships&lt;/code> with &lt;code>isImplied = true&lt;/code>, meaning that no such Relationships are actually implied for this Element. However, if it is false, then &lt;code>ownedRelationships&lt;/code> may &lt;em>not&lt;/em> contain any implied Relationships. That is, either &lt;em>all&lt;/em> required implied Relationships must be included, or none of them.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Root-Elements-Element-isImpliedIncluded-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Element-isLibraryElement" name="isLibraryElement" visibility="public" isDerived="true">
          <ownedComment xmi:id="Root-Elements-Element-isLibraryElement-_ownedComment.0" annotatedElement="Root-Elements-Element-isLibraryElement">
            <body>&lt;p>Whether this Element is contained in the ownership tree of a library model.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Root-Elements-Element-escapedName" name="escapedName" visibility="public">
          <ownedComment xmi:id="Root-Elements-Element-escapedName-_ownedComment.0" annotatedElement="Root-Elements-Element-escapedName">
            <body>&lt;p>Return &lt;code>name&lt;/code>, if that is not null, otherwise the &lt;code>shortName&lt;/code>, if that is not null, otherwise null. If the returned value is non-null, it is returned as-is if it has the form of a basic name, or, otherwise, represented as a restricted name according to the lexical structure of the KerML textual notation (i.e., surrounded by single quote characters and with special characters escaped).&lt;/p></body>
          </ownedComment>
          <ownedParameter xmi:id="Root-Elements-Element-escapedName-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-escapedName-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-escapedName-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Elements-Element-effectiveShortName" name="effectiveShortName" visibility="public" bodyCondition="Root-Elements-Element-effectiveShortName-unnamed1">
          <ownedComment xmi:id="Root-Elements-Element-effectiveShortName-_ownedComment.0" annotatedElement="Root-Elements-Element-effectiveShortName">
            <body>&lt;p>Return an effective &lt;code>shortName&lt;/code> for this &lt;code>Element&lt;/code>. By default this is the same as its &lt;code>declaredShortName&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Root-Elements-Element-effectiveShortName-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-effectiveShortName-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>declaredShortName</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Elements-Element-effectiveShortName-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-effectiveShortName-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-effectiveShortName-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Elements-Element-effectiveName" name="effectiveName" visibility="public" bodyCondition="Root-Elements-Element-effectiveName-unnamed1">
          <ownedComment xmi:id="Root-Elements-Element-effectiveName-_ownedComment.0" annotatedElement="Root-Elements-Element-effectiveName">
            <body>&lt;p>Return an effective &lt;code>name&lt;/code> for this &lt;code>Element&lt;/code>. By default this is the same as its &lt;code>declaredName&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Root-Elements-Element-effectiveName-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-effectiveName-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>declaredName</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Elements-Element-effectiveName-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-effectiveName-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-effectiveName-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Root-Elements-Element-libraryNamespace" name="libraryNamespace" visibility="public" bodyCondition="Root-Elements-Element-libraryNamespace-unnamed1">
          <ownedComment xmi:id="Root-Elements-Element-libraryNamespace-_ownedComment.0" annotatedElement="Root-Elements-Element-libraryNamespace">
            <body>&lt;p>By default, return the library Namespace of the &lt;code>owningRelationship&lt;/code> of this Element, if it has one.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Root-Elements-Element-libraryNamespace-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Element-libraryNamespace-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if owningRelationship &lt;> null then owningRelationship.libraryNamespace()
else null endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Elements-Element-libraryNamespace-_ownedParameter.0" name="" visibility="public" type="Root-Namespaces-Namespace" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Element-libraryNamespace-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Element-libraryNamespace-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Elements-Relationship" name="Relationship" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Root-Elements-Relationship-_ownedComment.0" annotatedElement="Root-Elements-Relationship">
          <body>&lt;p>A &lt;code>Relationship&lt;/code> is an &lt;code>Element&lt;/code> that relates other &lt;code>Element&lt;/code>. Some of its &lt;code>relatedElements&lt;/code> may be owned, in which case those &lt;code>ownedRelatedElements&lt;/code> will be deleted from a model if their &lt;code>owningRelationship&lt;/code> is. A &lt;code>Relationship&lt;/code> may also be owned by another &lt;code>Element&lt;/code>, in which case the &lt;code>ownedRelatedElements&lt;/code> of the &lt;code>Relationship&lt;/code> are also considered to be transitively owned by the &lt;code>owningRelatedElement&lt;/code> of the &lt;code>Relationship&lt;/code>.&lt;/p>

&lt;p>The &lt;code>relatedElements&lt;/code> of a &lt;code>Relationship&lt;/code> are divided into &lt;code>source&lt;/code> and &lt;code>target&lt;/code> &lt;code>Elements&lt;/code>. The &lt;code>Relationship&lt;/code> is considered to be directed from the &lt;code>source&lt;/code> to the &lt;code>target&lt;/code> &lt;code>Elements&lt;/code>. An undirected &lt;code>Relationship&lt;/code> may have either all &lt;code>source&lt;/code> or all &lt;code>target&lt;/code> &lt;code>Elements&lt;/code>.&lt;/p>

&lt;p>A &amp;quot;relationship &lt;code>Element&lt;/code>&amp;quot; in the abstract syntax is generically any &lt;code>Element&lt;/code> that is an instance of either &lt;code>Relationship&lt;/code> or a direct or indirect specialization of &lt;code>Relationship&lt;/code>. Any other kind of &lt;code>Element&lt;/code> is a &amp;quot;non-relationship &lt;code>Element&lt;/code>&amp;quot;. It is a convention of that non-relationship &lt;code>Elements&lt;/code> are &lt;em>only&lt;/em> related via reified relationship &lt;code>Elements&lt;/code>. Any meta-associations directly between non-relationship &lt;code>Elements&lt;/code> must be derived from underlying reified &lt;code>Relationship&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Root-Elements-Relationship-deriveRelationshipRelatedElement" name="deriveRelationshipRelatedElement" visibility="public" constrainedElement="Root-Elements-Relationship">
          <ownedComment xmi:id="Root-Elements-Relationship-deriveRelationshipRelatedElement-_ownedComment.0" annotatedElement="Root-Elements-Relationship-deriveRelationshipRelatedElement">
            <body>&lt;p>The &lt;code>relatedElements&lt;/code> of a &lt;code>Relationship&lt;/code> consist of all of its &lt;code>source&lt;/code> &lt;code>Elements&lt;/code> followed by all of its &lt;code>target&lt;/code> &lt;code>Elements&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Relationship-deriveRelationshipRelatedElement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>relatedElement = source->union(target)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Root-Elements-Relationship-_generalization.0" general="Root-Elements-Element"/>
        <ownedAttribute xmi:id="Root-Elements-Relationship-relatedElement" name="relatedElement" visibility="public" type="Root-Elements-Element" isOrdered="true" isUnique="false" isDerived="true" association="Root-Elements-_packagedElement.4">
          <ownedComment xmi:id="Root-Elements-Relationship-relatedElement-_ownedComment.0" annotatedElement="Root-Elements-Relationship-relatedElement">
            <body>&lt;p>The Elements that are related by this Relationship, derived as the union of the &lt;code>source&lt;/code> and &lt;code>target&lt;/code> Elements of the Relationship.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Relationship-relatedElement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Relationship-relatedElement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Relationship-target" name="target" visibility="public" type="Root-Elements-Element" isOrdered="true" subsettedProperty="Root-Elements-Relationship-relatedElement" association="Root-Elements-_packagedElement.2">
          <ownedComment xmi:id="Root-Elements-Relationship-target-_ownedComment.0" annotatedElement="Root-Elements-Relationship-target">
            <body>&lt;p>The &lt;code>relatedElements&lt;/code> to which this Relationship is considered to be directed.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Relationship-target-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Relationship-target-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Relationship-source" name="source" visibility="public" type="Root-Elements-Element" isOrdered="true" subsettedProperty="Root-Elements-Relationship-relatedElement" association="Root-Elements-_packagedElement.5">
          <ownedComment xmi:id="Root-Elements-Relationship-source-_ownedComment.0" annotatedElement="Root-Elements-Relationship-source">
            <body>&lt;p>The &lt;code>relatedElements&lt;/c ode> from which this Relationship is considered to be directed.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Relationship-source-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Relationship-source-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Relationship-owningRelatedElement" name="owningRelatedElement" visibility="public" type="Root-Elements-Element" subsettedProperty="Root-Elements-Relationship-relatedElement" association="Root-Elements-_packagedElement.6">
          <ownedComment xmi:id="Root-Elements-Relationship-owningRelatedElement-_ownedComment.0" annotatedElement="Root-Elements-Relationship-owningRelatedElement">
            <body>&lt;p>The &lt;tt>relatedElement&lt;/tt> of this Relationship that owns the Relationship, if any.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Relationship-owningRelatedElement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Relationship-owningRelatedElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Relationship-ownedRelatedElement" name="ownedRelatedElement" visibility="public" type="Root-Elements-Element" isOrdered="true" aggregation="composite" subsettedProperty="Root-Elements-Relationship-relatedElement" association="Root-Elements-_packagedElement.3">
          <ownedComment xmi:id="Root-Elements-Relationship-ownedRelatedElement-_ownedComment.0" annotatedElement="Root-Elements-Relationship-ownedRelatedElement">
            <body>&lt;p>The &lt;tt>relatedElements&lt;/tt> of this Relationship that are owned by the Relationship.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Relationship-ownedRelatedElement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Relationship-ownedRelatedElement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Elements-Relationship-isImplied" name="isImplied" visibility="public">
          <ownedComment xmi:id="Root-Elements-Relationship-isImplied-_ownedComment.0" annotatedElement="Root-Elements-Relationship-isImplied">
            <body>&lt;p>Whether this Relationship was generated by tooling to meet semantic rules, rather than being directly created by a modeler.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Root-Elements-Relationship-isImplied-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Root-Elements-Relationship-libraryNamespace" name="libraryNamespace" visibility="public" bodyCondition="Root-Elements-Relationship-libraryNamespace-unnamed1" redefinedOperation="Root-Elements-Element-libraryNamespace">
          <ownedComment xmi:id="Root-Elements-Relationship-libraryNamespace-_ownedComment.0" annotatedElement="Root-Elements-Relationship-libraryNamespace">
            <body>&lt;p>Return whether this Relationship has either an &lt;code>owningRelatedElement&lt;/code> or &lt;code>owningRelationship&lt;/code> that is a library element.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Root-Elements-Relationship-libraryNamespace-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Root-Elements-Relationship-libraryNamespace-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if owningRelatedElement &lt;> null then owningRelatedElement.libraryNamespace()
else if owningRelationship &lt;> null then owningRelationship.libraryNamespace() 
else null endif endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Root-Elements-Relationship-libraryNamespace-_ownedParameter.0" name="" visibility="public" type="Root-Namespaces-Namespace" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-Relationship-libraryNamespace-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-Relationship-libraryNamespace-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.2" name="" visibility="private" memberEnd="Root-Elements-Relationship-target Root-Elements-_packagedElement.2-targetRelationship">
        <ownedEnd xmi:id="Root-Elements-_packagedElement.2-targetRelationship" name="targetRelationship" visibility="public" type="Root-Elements-Relationship" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Root-Elements-_packagedElement.2">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-_packagedElement.2-targetRelationship-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-_packagedElement.2-targetRelationship-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.3" name="" visibility="private" memberEnd="Root-Elements-Relationship-ownedRelatedElement Root-Elements-Element-owningRelationship"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.4" name="" visibility="private" memberEnd="Root-Elements-Relationship-relatedElement Root-Elements-_packagedElement.4-relationship">
        <ownedEnd xmi:id="Root-Elements-_packagedElement.4-relationship" name="relationship" visibility="public" type="Root-Elements-Relationship" isUnique="false" isDerived="true" isDerivedUnion="true" association="Root-Elements-_packagedElement.4">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-_packagedElement.4-relationship-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-_packagedElement.4-relationship-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.5" name="" visibility="private" memberEnd="Root-Elements-Relationship-source Root-Elements-_packagedElement.5-sourceRelationship">
        <ownedEnd xmi:id="Root-Elements-_packagedElement.5-sourceRelationship" name="sourceRelationship" visibility="public" type="Root-Elements-Relationship" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Root-Elements-_packagedElement.5">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Elements-_packagedElement.5-sourceRelationship-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Elements-_packagedElement.5-sourceRelationship-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.6" name="" visibility="private" memberEnd="Root-Elements-Element-ownedRelationship Root-Elements-Relationship-owningRelatedElement"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.7" name="" visibility="private" memberEnd="Root-Elements-Element-owner Root-Elements-Element-ownedElement"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.8" name="" visibility="private" memberEnd="Root-Elements-Element-textualRepresentation Root-Annotations-TextualRepresentation-representedElement"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.9" name="" visibility="private" memberEnd="Root-Elements-Element-documentation Root-Annotations-Documentation-documentedElement"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Elements-_packagedElement.10" name="" visibility="private" memberEnd="Root-Elements-Element-ownedAnnotation Root-Annotations-Annotation-owningAnnotatedElement"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Root-Dependencies" name="Dependencies" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Root-Dependencies-Dependency" name="Dependency" visibility="public">
        <ownedComment xmi:id="Root-Dependencies-Dependency-_ownedComment.0" annotatedElement="Root-Dependencies-Dependency">
          <body>&lt;p>A &lt;code>Dependency&lt;/code> is a &lt;code>Relationship&lt;/code> that indicates that one or more &lt;code>client&lt;/code> &lt;code>Elements&lt;/code> require one more &lt;code>supplier&lt;/code> &lt;code>Elements&lt;/code> for their complete specification. In general, this means that a change to one of the &lt;code>supplier&lt;/code> &lt;code>Elements&lt;/code> may necessitate a change to, or re-specification of, the &lt;code>client&lt;/code> &lt;code>Elements&lt;/code>.&lt;/p>

&lt;p>Note that a &lt;code>Dependency&lt;/code> is entirely a model-level &lt;code>Relationship&lt;/code>, without instance-level semantics.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Root-Dependencies-Dependency-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Root-Dependencies-Dependency-client" name="client" visibility="public" type="Root-Elements-Element" isOrdered="true" redefinedProperty="Root-Elements-Relationship-source" association="Root-Dependencies-_packagedElement.1">
          <ownedComment xmi:id="Root-Dependencies-Dependency-client-_ownedComment.0" annotatedElement="Root-Dependencies-Dependency-client">
            <body>&lt;p>The &lt;code>Element&lt;/code> or &lt;code>Elements&lt;/code> dependent on the &lt;code>supplier&lt;/code> &lt;code>Elements&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Dependencies-Dependency-client-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Dependencies-Dependency-client-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Root-Dependencies-Dependency-supplier" name="supplier" visibility="public" type="Root-Elements-Element" isOrdered="true" redefinedProperty="Root-Elements-Relationship-target" association="Root-Dependencies-_packagedElement.2">
          <ownedComment xmi:id="Root-Dependencies-Dependency-supplier-_ownedComment.0" annotatedElement="Root-Dependencies-Dependency-supplier">
            <body>&lt;p>The &lt;code>Element&lt;/code> or &lt;code>Elements&lt;/code> on which the &lt;code>client&lt;/code> &lt;code>Elements&lt;/code> depend in some respect.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Dependencies-Dependency-supplier-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Dependencies-Dependency-supplier-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Dependencies-_packagedElement.1" name="" visibility="private" memberEnd="Root-Dependencies-Dependency-client Root-Dependencies-_packagedElement.1-clientDependency">
        <ownedEnd xmi:id="Root-Dependencies-_packagedElement.1-clientDependency" name="clientDependency" visibility="public" type="Root-Dependencies-Dependency" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship" association="Root-Dependencies-_packagedElement.1">
          <ownedComment xmi:id="Root-Dependencies-_packagedElement.1-clientDependency-_ownedComment.0" annotatedElement="Root-Dependencies-_packagedElement.1-clientDependency">
            <body>&lt;p>The &lt;code>Dependencies&lt;/code> that have a certain &lt;code>client&lt;/code> &lt;code>Element&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Dependencies-_packagedElement.1-clientDependency-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Dependencies-_packagedElement.1-clientDependency-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Root-Dependencies-_packagedElement.2" name="" visibility="private" memberEnd="Root-Dependencies-Dependency-supplier Root-Dependencies-_packagedElement.2-supplierDependency">
        <ownedEnd xmi:id="Root-Dependencies-_packagedElement.2-supplierDependency" name="supplierDependency" visibility="public" type="Root-Dependencies-Dependency" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Root-Dependencies-_packagedElement.2">
          <ownedComment xmi:id="Root-Dependencies-_packagedElement.2-supplierDependency-_ownedComment.0" annotatedElement="Root-Dependencies-_packagedElement.2-supplierDependency">
            <body>&lt;p>The &lt;code>Dependencies&lt;/code> that have a certain &lt;code>supplier&lt;/code> &lt;code>Element&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Root-Dependencies-_packagedElement.2-supplierDependency-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Root-Dependencies-_packagedElement.2-supplierDependency-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="Core" name="Core" visibility="public" URI="">
    <ownedComment xmi:id="Core-_ownedComment.0" annotatedElement="Core">
      <body>The Core layer provides the semantic foundation for KerML.</body>
    </ownedComment>
    <packageImport xmi:id="Core-_packageImport.0" importedPackage="Root"/>
    <packagedElement xmi:type="uml:Package" xmi:id="Core-Features" name="Features" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-Redefinition" name="Redefinition" visibility="public">
        <ownedComment xmi:id="Core-Features-Redefinition-_ownedComment.0" annotatedElement="Core-Features-Redefinition">
          <body>&lt;p>&lt;code>Redefinition&lt;/code> is a kind of &lt;code>Subsetting&lt;/code> that requires the &lt;code>redefinedFeature&lt;/code> and the &lt;code>redefiningFeature&lt;/code> to have the same values (on each instance of the domain of the &lt;code>redefiningFeature&lt;/code>). This means any restrictions on the &lt;code>redefiningFeature&lt;/code>, such as &lt;code>type&lt;/code> or &lt;code>multiplicity&lt;/code>, also apply to the &lt;code>redefinedFeature&lt;/code> (on each instance of the domain of the &lt;code>redefiningFeature&lt;/code>), and vice versa. The &lt;code>redefinedFeature&lt;/code> might have values for instances of the domain of the &lt;code>redefiningFeature&lt;/code>, but only as instances of the domain of the &lt;code>redefinedFeature&lt;/code> that happen to also be instances of the domain of the &lt;code>redefiningFeature&lt;/code>. This is supported by the constraints inherited from &lt;code>Subsetting&lt;/code> on the domains of the &lt;code>redefiningFeature&lt;/code> and &lt;code>redefinedFeature&lt;/code>. However, these constraints are narrowed for &lt;code>Redefinition&lt;/code> to require the &lt;code>owningTypes&lt;/code> of the &lt;code>redefiningFeature&lt;/code> and &lt;code>redefinedFeature&lt;/code> to be different and the &lt;code>redefinedFeature&lt;/code> to not be inherited into the &lt;code>owningNamespace&lt;/code> of the &lt;code>redefiningFeature&lt;/code>.This enables the &lt;code>redefiningFeature&lt;/code> to have the same name as the &lt;code>redefinedFeature&lt;/code>, if desired.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Features-Redefinition-validateRedefinitionFeaturingTypes" name="validateRedefinitionFeaturingTypes" visibility="public" constrainedElement="Core-Features-Redefinition">
          <ownedComment xmi:id="Core-Features-Redefinition-validateRedefinitionFeaturingTypes-_ownedComment.0" annotatedElement="Core-Features-Redefinition-validateRedefinitionFeaturingTypes">
            <body>&lt;p>The &lt;code>subsettingFeature&lt;/code> of a &lt;code>Subsetting&lt;/code> must have at least one &lt;code>featuringType&lt;/code> that is not also a &lt;code>featuringType&lt;/code> of the &lt;code>subsettedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Redefinition-validateRedefinitionFeaturingTypes-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let anythingType: Type =
    subsettingFeature.resolveGlobal('Base::Anything').oclAsType(Type) in 
-- Including &quot;Anything&quot; accounts for implicit featuringType of Features
-- with no explicit featuringType.
let subsettingFeaturingTypes: Set(Type) =
    subsettingFeature.featuringTypes->asSet()->including(anythingType) in
let subsettedFeaturingTypes: Set(Type) =
    subsettedFeature.featuringTypes->asSet()->including(anythingType) in
subsettingFeaturingTypes &lt;> subsettedFeaturingType</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Features-Redefinition-_generalization.0" general="Core-Features-Subsetting"/>
        <ownedAttribute xmi:id="Core-Features-Redefinition-redefiningFeature" name="redefiningFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Core-Features-Subsetting-subsettingFeature" association="Core-Features-_packagedElement.10">
          <ownedComment xmi:id="Core-Features-Redefinition-redefiningFeature-_ownedComment.0" annotatedElement="Core-Features-Redefinition-redefiningFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is redefining the &lt;code>redefinedFeature&lt;/code> of this &lt;code>Redefinition&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Redefinition-redefiningFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Redefinition-redefiningFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Redefinition-redefinedFeature" name="redefinedFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Core-Features-Subsetting-subsettedFeature" association="Core-Features-_packagedElement.5">
          <ownedComment xmi:id="Core-Features-Redefinition-redefinedFeature-_ownedComment.0" annotatedElement="Core-Features-Redefinition-redefinedFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is redefined by the &lt;code>redefiningFeature&lt;/code> of this &lt;code>Redefinition&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Redefinition-redefinedFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Redefinition-redefinedFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.1" name="" visibility="private" memberEnd="Core-Features-FeatureTyping-type Core-Features-_packagedElement.1-typingByType">
        <ownedEnd xmi:id="Core-Features-_packagedElement.1-typingByType" name="typingByType" visibility="public" type="Core-Features-FeatureTyping" subsettedProperty="Core-Types-_packagedElement.10-generalization" association="Core-Features-_packagedElement.1">
          <ownedComment xmi:id="Core-Features-_packagedElement.1-typingByType-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.1-typingByType">
            <body>&lt;p>The FeatureTyping relating this Type to a Feature.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.1-typingByType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.1-typingByType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.2" name="" visibility="private" memberEnd="Core-Features-_packagedElement.2-typedFeature Core-Features-Feature-type">
        <ownedEnd xmi:id="Core-Features-_packagedElement.2-typedFeature" name="typedFeature" visibility="public" type="Core-Features-Feature" isDerived="true" association="Core-Features-_packagedElement.2">
          <ownedComment xmi:id="Core-Features-_packagedElement.2-typedFeature-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.2-typedFeature">
            <body>&lt;p>The Features for which a certain Type is a &lt;code>type&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.2-typedFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.2-typedFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.3" name="" visibility="private" memberEnd="Core-Features-_packagedElement.3-typing Core-Features-FeatureTyping-typedFeature">
        <ownedEnd xmi:id="Core-Features-_packagedElement.3-typing" name="typing" type="Core-Features-FeatureTyping" subsettedProperty="Core-Types-_packagedElement.8-specialization" association="Core-Features-_packagedElement.3">
          <ownedComment xmi:id="Core-Features-_packagedElement.3-typing-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.3-typing">
            <body>&lt;p>The FeatureTypings for which a certain Feature is the &lt;code>typedFeature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.3-typing-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.3-typing-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.4" name="" visibility="private" memberEnd="Core-Features-Feature-ownedRedefinition Core-Features-_packagedElement.4-owningFeature">
        <ownedEnd xmi:id="Core-Features-_packagedElement.4-owningFeature" name="owningFeature" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Core-Features-Subsetting-owningFeature" association="Core-Features-_packagedElement.4">
          <ownedComment xmi:id="Core-Features-_packagedElement.4-owningFeature-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.4-owningFeature">
            <body>&lt;p>The Feature that owns this Redefinition relationship, which must also be its &lt;code>redefiningFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.4-owningFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.4-owningFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.5" name="" visibility="private" memberEnd="Core-Features-Redefinition-redefinedFeature Core-Features-_packagedElement.5-redefining">
        <ownedEnd xmi:id="Core-Features-_packagedElement.5-redefining" name="redefining" visibility="public" type="Core-Features-Redefinition" subsettedProperty="Core-Features-_packagedElement.12-supersetting" association="Core-Features-_packagedElement.5">
          <ownedComment xmi:id="Core-Features-_packagedElement.5-redefining-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.5-redefining">
            <body>&lt;p>The Redefinitions with a certain Feature as the &lt;code>redefinedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.5-redefining-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.5-redefining-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.6" name="" visibility="private" memberEnd="Core-Features-Subsetting-subsettingFeature Core-Features-_packagedElement.6-subsetting">
        <ownedEnd xmi:id="Core-Features-_packagedElement.6-subsetting" name="subsetting" visibility="public" type="Core-Features-Subsetting" subsettedProperty="Core-Types-_packagedElement.8-specialization" association="Core-Features-_packagedElement.6">
          <ownedComment xmi:id="Core-Features-_packagedElement.6-subsetting-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.6-subsetting">
            <body>&lt;p>The Subsettings with a certain Feature as the &lt;code>subsettingFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.6-subsetting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.6-subsetting-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-Feature" name="Feature" visibility="public">
        <ownedComment xmi:id="Core-Features-Feature-_ownedComment.0" annotatedElement="Core-Features-Feature">
          <body>&lt;p>A &lt;code>Feature&lt;/code> is a &lt;code>Type&lt;/code> that classifies relations between multiple things (in the universe). The domain of the relation is the intersection of the &lt;code>featuringTypes&lt;/code> of the &lt;code>Feature&lt;/code>. (The domain of a &lt;code>Feature&lt;/code> with no &lt;code>featuringTyps&lt;/code> is implicitly the most general &lt;code>Type&lt;/code> &lt;em>&lt;code>Base::Anything&lt;/code>&lt;/em> from the Kernel Semantic Library.) The co-domain of the relation is the intersection of the &lt;code>types&lt;/code> of the &lt;code>Feature&lt;/code>.

&lt;p>In the simplest cases, the &lt;code>featuringTypes&lt;/code> and &lt;code>types&lt;/code> are &lt;code>Classifiers&lt;/code> and the &lt;code>Feature&lt;/code> relates two things, one from the domain and one from the range. Examples include cars paired with wheels, people paired with other people, and cars paired with numbers representing the car length.&lt;/p>

&lt;p>Since &lt;code>Features&lt;/code> are &lt;code>Types&lt;/code>, their &lt;code>featuringTypes&lt;/code> and &lt;code>types&lt;/code> can be &lt;code>Features&lt;/code>. In this case, the &lt;code>Feature&lt;/code> effectively classifies relations between relations, which can be interpreted as the sequence of things related by the domain &lt;code>Feature&lt;/code> concatenated with the sequence of things related by the co-domain &lt;code>Feature&lt;/code>.&lt;/p>

&lt;p>The &lt;em>values&lt;/em> of a &lt;code>Feature&lt;/code> for a given instance of its domain are all the instances of its co-domain that are related that domain instance by the &lt;code>Feature&lt;/code>. The values of a &lt;code>Feature&lt;/code> with &lt;code>chainingFeatures&lt;/code> are the same as values of the last &lt;code>Feature&lt;/code> in the chain, which can be found by starting with values of the first &lt;code>Feature&lt;/code>, then using those values as domain instances to obtain valus of the second &lt;code>Feature&lt;/code>, and so on, to values of the last &lt;code>Feature&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureOwnedRedefinition" name="deriveFeatureOwnedRedefinition" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureOwnedRedefinition-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureOwnedRedefinition">
            <body>&lt;p>The &lt;code>ownedRedefinitions&lt;/code> of a &lt;code>Feature&lt;/code> are its &lt;code>ownedSubsettings&lt;/code> that are &lt;code>Redefinitions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureOwnedRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRedefinition = ownedSubsetting->selectByKind(Redefinition)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureOwnedTypeFeaturing" name="deriveFeatureOwnedTypeFeaturing" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureOwnedTypeFeaturing-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureOwnedTypeFeaturing">
            <body>&lt;p>The &lt;code>ownedTypeFeaturings&lt;/code> of a &lt;code>Feature&lt;/code> are its &lt;code>ownedRelationships&lt;/code> that are &lt;code>TypeFeaturings&lt;/code> and which have the &lt;code>Feature&lt;/code> as their &lt;code>featureOfType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureOwnedTypeFeaturing-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedTypeFeaturing = ownedRelationship->selectByKind(TypeFeaturing)->
    select(tf | tf.featureOfType = self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureOwnedSubsetting" name="deriveFeatureOwnedSubsetting" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureOwnedSubsetting-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureOwnedSubsetting">
            <body>&lt;p>The &lt;code>ownedRedefinitions&lt;/code> of a &lt;code>Feature&lt;/code> are its &lt;code>ownedSpecializations&lt;/code> that are &lt;code>Subsettings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureOwnedSubsetting-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedSubsetting = ownedSpecialization->selectByKind(Subsetting)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureOwnedTyping" name="deriveFeatureOwnedTyping" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureOwnedTyping-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureOwnedTyping">
            <body>&lt;p>The &lt;code>ownedTypings&lt;/code> of a &lt;code>Feature&lt;/code> are its &lt;code>ownedSpecializations&lt;/code> that are &lt;code>FeatureTypings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureOwnedTyping-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedTyping = ownedGeneralization->selectByKind(FeatureTyping)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureType" name="deriveFeatureType" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureType-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureType">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> has &lt;code>chainingFeatures&lt;/code>, then its &lt;code>types&lt;/code> are the same as the last &lt;code>chainingFeature&lt;/code>. Otherwise its &lt;code>types&lt;/code> are the union of the &lt;code>types&lt;/code> of its &lt;code>typings&lt;/code> and the &lt;code>types&lt;/code> of the &lt;code>subsettedFeatures&lt;/code> of its &lt;code>subsettings&lt;/code>, with all redundant supertypes removed.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>type =
    let types : OrderedSet(Type) = typing.type->
        union(subsetting.subsettedFeature.type)->
        asOrderedSet() in
    if chainingFeature->isEmpty() then types
    else 
        types->union(chainingFeature->last().type)->
        asOrderedSet()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-validateFeatureMultiplicityDomain" name="validateFeatureMultiplicityDomain" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-validateFeatureMultiplicityDomain-_ownedComment.0" annotatedElement="Core-Features-Feature-validateFeatureMultiplicityDomain">
            <body>&lt;p>If a Feature has a &lt;code>multiplicity&lt;/code>, then the &lt;code>featuringTypes&lt;/code> of the &lt;code>multiplicity&lt;/code> must be the same as those of the Feature itself.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-validateFeatureMultiplicityDomain-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>multiplicity &lt;> null implies multiplicity.featuringType = featuringType </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureSpecialization" name="checkFeatureSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureSpecialization">
            <body>&lt;p>A Feature must directly or indirectly specialize &lt;code>&lt;em>Base::things&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Base::things&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-validateFeatureChainingFeaturesNotSelf" name="validateFeatureChainingFeaturesNotSelf" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-validateFeatureChainingFeaturesNotSelf-_ownedComment.0" annotatedElement="Core-Features-Feature-validateFeatureChainingFeaturesNotSelf">
            <body>&lt;p>A Feature cannot be one of its own &lt;code>chainingFeatures&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-validateFeatureChainingFeaturesNotSelf-_specification" name="" visibility="public">
            <language>English</language>
            <body>chainingFeatures->excludes(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureOwnedFeatureChaining" name="deriveFeatureOwnedFeatureChaining" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureOwnedFeatureChaining-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureOwnedFeatureChaining">
            <body>&lt;p>The &lt;code>ownedFeatureChainings&lt;/code> of a &lt;code>Feature&lt;/code> are the &lt;code>ownedRelationships&lt;/code> that are &lt;code>FeatureChainings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureOwnedFeatureChaining-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeatureChaining = ownedRelationship->selectByKind(FeatureChaining)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureChainingFeature" name="deriveFeatureChainingFeature" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureChainingFeature-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureChainingFeature">
            <body>&lt;p>The &lt;code>chainingFeatures&lt;/code> of a &lt;code>Feature&lt;/code> are the &lt;code>chainingFeatures&lt;/code> of its &lt;code>ownedFeatureChainings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureChainingFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>chainingFeature = ownedFeatureChaining.chainingFeature</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-validateFeatureChainingFeatureNotOne" name="validateFeatureChainingFeatureNotOne" visibility="public" constrainedElement="Core-Features-Feature">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-validateFeatureChainingFeatureNotOne-_specification" name="" visibility="public">
            <language>English</language>
            <body>chainingFeatures->size() &lt;> 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureEndRedefinition" name="checkFeatureEndRedefinition" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureEndRedefinition-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureEndRedefinition">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> has &lt;code>isEnd = true&lt;/code> and an &lt;code>owningType&lt;/code> that is not empty, then, for each direct supertype of its &lt;code>owningType&lt;/code>, it must redefine the &lt;code>endFeature&lt;/code> at the same position, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureEndRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isEnd and owningType &lt;> null implies
    let i : Integer = 
        owningType.ownedFeature->select(isEnd) in
    owningType.ownedSpecialization.general->
        forAll(supertype |
            let ownedEndFeatures : Sequence(Feature) = 
                supertype.ownedFeature->select(isEnd) in
            ownedEndFeatures->size() >= i implies
                redefines(ownedEndFeatures->at(i))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureValuationSpecialization" name="checkFeatureValuationSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureValuationSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureValuationSpecialization">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> has a &lt;code>FeatureValue&lt;/code>, then it must specialize the &lt;code>result&lt;/code> of the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> of the &lt;code>FeatureValue&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureValuationSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMembership->
    selectByKind(FeatureValue)->
    forAll(fv | specializes(fv.value.result))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureEndSpecialization" name="checkFeatureEndSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureEndSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureEndSpecialization">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> has &lt;code>isEnd = true&lt;/code> and an &lt;code>owningType&lt;/code> that is an &lt;code>Association&lt;/code>, then it must directly or indirectly specialize &lt;code>&lt;em>Links::Link::participants&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureEndSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isEnd and owningType &lt;> null and
owningType.oclIsKindOf(Association) implies
    specializesFromLibrary(&quot;Links::Link::participants&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureSubobjectSpecialization" name="checkFeatureSubobjectSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureSubobjectSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureSubobjectSpecialization">
            <body>&lt;p>A composite &lt;code>Feature&lt;code> typed by a &lt;code>Structure&lt;/code>, and whose &lt;code>ownedType&lt;/code> is a &lt;code>Structure&lt;/code> or another &lt;code>Feature&lt;/code> typed by a &lt;code>Structure&lt;code> must directly or indirectly specialize &lt;em>&lt;code>Objects::Object::subobjects&lt;/code>&lt;/em>.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureSubobjectSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and
ownedTyping.type->includes(oclIsKindOf(Structure)) and
owningType &lt;> null and
(owningType.oclIsKindOf(Structure) or
 owningType.type->includes(oclIsKindOf(Structure))) implies
    specializesFromLibrary(&quot;Occurrence::Occurrence::suboccurrences&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureResultSpecialization" name="checkFeatureResultSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureResultSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureResultSpecialization">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> has an &lt;code>owningType&lt;/code> that is a &lt;code>LiteralExpression&lt;/code> it must directly or indirectly specialize the &lt;code>DataType&lt;/code> from the &lt;code>&lt;em>ScalarValues&lt;/em>&lt;/code> package in the Kernel Data Types Library corresponding to the kind of &lt;code>LiteralExpression&lt;/code>. If the &lt;code>owningType&lt;/code> is a &lt;code>FeatureReferenceExpression&lt;/code>, then the &lt;code>Feature&lt;/code> must specialize the &lt;code>referent&lt;/code> of the &lt;code>FeatureReferenceExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureResultSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(LiteralExpression) or
 owningType.oclIsKindOf(FeatureReferenceExpression)) implies
    if owningType.oclIsKindOf(LiteralString) then
        specializesFromLibrary(&quot;ScalarValues::String&quot;)
    else if owningType.oclIsKindOf(LiteralBoolean) then
        specializesFromLibrary(&quot;ScalarValues::Boolean&quot;)
    else if owningType.oclIsKindOf(LiteralInteger) then
        specializesFromLibrary(&quot;ScalarValues::Rational&quot;)
    else if owningType.oclIsKindOf(LiteralBoolean) then
        specializesFromLibrary(&quot;ScalarValues::Rational&quot;)
    else if owningType.oclIsKindOf(LiteralBoolean) then
        specializesFromLibrary(&quot;ScalarValues::Real&quot;)
    else specializes(
        owningType.oclAsType(FeatureReferenceExpression).referent)
    endif endif endif endif endif
</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureOccurrenceSpecialization" name="checkFeatureOccurrenceSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureOccurrenceSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureOccurrenceSpecialization">
            <body>&lt;p>If a Feature has an &lt;code>ownedTyping&lt;/code> relationship to a &lt;code>Class&lt;/code>, then it must directly or indirectly specialize &lt;code>&lt;em>Occurrences::occurrences&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureOccurrenceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedTyping.type->exists(selectByKind(Class)) implies
    specializesFromLibrary(&quot;Occurrences::occurrences&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureSuboccurrenceSpecialization" name="checkFeatureSuboccurrenceSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureSuboccurrenceSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureSuboccurrenceSpecialization">
            <body>&lt;p>A composite &lt;code>Feature&lt;code> that has an &lt;code>ownedTyping&lt;/code> relationship to a &lt;code>Class&lt;/code>, and whose &lt;code>ownedType&lt;/code> is a &lt;code>Class&lt;/code> or another &lt;code>Feature&lt;/code> typed by a &lt;code>Class&lt;code>, must directly or indirectly specialize &lt;em>&lt;code>Occurrences::Occurrence::suboccurrences&lt;/code>&lt;/em>.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureSuboccurrenceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and
ownedTyping.type->includes(oclIsKindOf(Class)) and
owningType &lt;> null and
(owningType.oclIsKindOf(Class) or
 owningType.oclIsKindOf(Feature) and
    owningType.oclAsType(Feature).type->
        exists(oclIsKindOf(Class))) implies
    specializesFromLibrary(&quot;Occurrence::Occurrence::suboccurrences&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureDataValueSpecialization" name="checkFeatureDataValueSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureDataValueSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureDataValueSpecialization">
            <body>&lt;p>If a Feature has an &lt;code>ownedTyping&lt;/code> relationship to a &lt;code>DataType&lt;/code>, then it must directly or indirectly specialize &lt;code>&lt;em>Base::dataValues&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureDataValueSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedTyping.type->exists(selectByKind(DataType)) implies
    specializesFromLibary(&quot;Base::dataValues&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureItemFlowFeatureRedefinition" name="checkFeatureItemFlowFeatureRedefinition" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureItemFlowFeatureRedefinition-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureItemFlowFeatureRedefinition">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> is the first &lt;code>ownedFeature&lt;/code> of a first or second &lt;code>ItemFlowEnd&lt;/code>, then it must directly or indirectly specialize either &lt;em>&lt;code>Transfers::Transfer::source::sourceOutput&lt;/code>&lt;/em> or &lt;em>&lt;code>Transfers::Transfer::target::targetInput&lt;/code>&lt;/em>, respectively, from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureItemFlowFeatureRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
owningType.oclIsKindOf(ItemFlowEnd) and
owningType.ownedFeature->at(1) = self implies
    let flowType : Type = owningType.owningType in
    flowType &lt;> null implies
        let i : Integer = 
            flowType.ownedFeature.indexOf(owningType) in
        (i = 1 implies 
            redefinesFromLibrary(&quot;Transfers::Transfer::source::sourceOutput&quot;)) and
        (i = 2 implies
            redefinesFromLibrary(&quot;Transfers::Transfer::source::targetInput&quot;))
                 </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureParameterRedefinition" name="checkFeatureParameterRedefinition" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureParameterRedefinition-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureParameterRedefinition">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> is a &lt;code>parameter&lt;/code> of an &lt;code>owningType&lt;/code> that is a &lt;code>Behavior&lt;/code> or &lt;code>Step&lt;/code>, &lt;em>other&lt;/em> than the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> (if any), then, for each direct supertype of its &lt;code>owningType&lt;/code> that is also a &lt;code>Behavior&lt;/code> or &lt;code>Step&lt;/code>, it must redefine the &lt;code>parameter&lt;/code> at the same position, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureParameterRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(Behavior) or
 owningType.oclIsKindOf(Step)) implies
    let i : Integer = 
        owningType.ownedFeature->select(direction &lt;> null) in
    owningType.ownedSpecialization.general->
        forAll(supertype |
            let ownedParameters : Sequence(Feature) = 
                supertype.ownedFeature->select(direction &lt;> null) in
            ownedParameters->size() >= i implies
                redefines(ownedParameters->at(i))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureObjectSpecialization" name="checkFeatureObjectSpecialization" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureObjectSpecialization-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureObjectSpecialization">
            <body>&lt;p>If a Feature has an &lt;code>ownedTyping&lt;/code> relationship to a &lt;code>Structure&lt;/code>, then it must directly or indirectly specialize &lt;code>&lt;em>Objects::objects&lt;/em>&lt;/code> from the Kernel Semantics Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureObjectSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedTyping.type->exists(selectByKind(Structure)) implies
    specializesFromLibary(&quot;Objects::objects&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-checkFeatureResultRedefinition" name="checkFeatureResultRedefinition" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-checkFeatureResultRedefinition-_ownedComment.0" annotatedElement="Core-Features-Feature-checkFeatureResultRedefinition">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> is a &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of an &lt;code>owningType&lt;/code> that is a &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>, then, for each direct supertype of its &lt;code>owningType&lt;/code> that is also a &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>, it must redefine the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-checkFeatureResultRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(Function) and
    self = owningType.oclAsType(Function).result or
 owningType.oclIsKindOf(Expression) and
    self = owningType.oclAsType(Expression).result) implies
    owningType.ownedSpecialization.general->
        select(oclIsKindOf(Function) or oclIsKindOf(Expression))->
        forAll(supertype |
            redefines(
                if superType.oclIsKindOf(Function) then
                    superType.oclAsType(Function).result
                else
                    superType.oclAsType(Expression).result
                endif)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureOwnedFeatureInverting" name="deriveFeatureOwnedFeatureInverting" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureOwnedFeatureInverting-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureOwnedFeatureInverting">
            <body>&lt;p>The &lt;code>ownedFeatureInvertings&lt;/code> of a &lt;code>Feature&lt;/code> are its &lt;code>ownedRelationships&lt;/code> that are &lt;code>FeatureInvertings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureOwnedFeatureInverting-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeatureInverting = ownedRelationship->selectByKind(FeatureInverting)->
    select(fi | fi.featureInverted = self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureFeaturingType" name="deriveFeatureFeaturingType" visibility="public" constrainedElement="Core-Features-Feature">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureFeaturingType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featuringType =
    let featuringTypes : OrderedSet(Type) = 
        typeFeaturing.featuringType->asOrderedSet() in
    if chainingFeature->isEmpty() then featuringTypes
    else
        featuringTypes->
            union(chainingFeature->first().featuringType)->
            asOrderedSet()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-deriveFeatureOwnedReferenceSubsetting" name="deriveFeatureOwnedReferenceSubsetting" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-deriveFeatureOwnedReferenceSubsetting-_ownedComment.0" annotatedElement="Core-Features-Feature-deriveFeatureOwnedReferenceSubsetting">
            <body>&lt;p>The &lt;code>ownedReferenceSubsetting&lt;/code> of a &lt;code>Feature&lt;/code> is the first
&lt;code>ownedSubsetting&lt;/code> that is a &lt;code>ReferenceSubsetting&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-deriveFeatureOwnedReferenceSubsetting-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedReferenceSubsetting =
    let referenceSubsettings : OrderedSet(ReferenceSubsetting) =
        ownedSubsetting->selectByKind(ReferenceSubsetting) in
    if referenceSubsettings->isEmpty() then null
    else referenceSubsettings->first() endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Features-Feature-validateFeatureOwnedReferenceSubsetting" name="validateFeatureOwnedReferenceSubsetting" visibility="public" constrainedElement="Core-Features-Feature">
          <ownedComment xmi:id="Core-Features-Feature-validateFeatureOwnedReferenceSubsetting-_ownedComment.0" annotatedElement="Core-Features-Feature-validateFeatureOwnedReferenceSubsetting">
            <body>&lt;p>A &lt;code>Feature&lt;/code> must have at most one &lt;code>ownedSubsetting&lt;/code> that is an &lt;code>ReferenceSubsetting&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-validateFeatureOwnedReferenceSubsetting-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedSubsetting->selectByKind(ReferenceSubsetting)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Features-Feature-_generalization.0" general="Core-Types-Type"/>
        <ownedAttribute xmi:id="Core-Features-Feature-owningType" name="owningType" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature Root-Elements-Element-owningNamespace Core-Features-Feature-featuringType" association="Core-Types-_packagedElement.2">
          <ownedComment xmi:id="Core-Features-Feature-owningType-_ownedComment.0" annotatedElement="Core-Features-Feature-owningType">
            <body>&lt;p>The &lt;code>Type&lt;/code> that is the &lt;code>owningType&lt;/code> of the &lt;code>owningFeatureMembership&lt;/code> of this &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-owningType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-owningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-isUnique" name="isUnique" visibility="public">
          <ownedComment xmi:id="Core-Features-Feature-isUnique-_ownedComment.0" annotatedElement="Core-Features-Feature-isUnique">
            <body>&lt;p>Whether or not values for this &lt;code>Feature&lt;/code> must have no duplicates or not.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Features-Feature-isUnique-_defaultValue" name="" visibility="public" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-isOrdered" name="isOrdered" visibility="public">
          <ownedComment xmi:id="Core-Features-Feature-isOrdered-_ownedComment.0" annotatedElement="Core-Features-Feature-isOrdered">
            <body>&lt;p>Whether an order exists for the values of this &lt;code>Feature&lt;/code> or not.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Features-Feature-isOrdered-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-type" name="type" visibility="public" type="Core-Types-Type" isOrdered="true" isDerived="true" association="Core-Features-_packagedElement.2">
          <ownedComment xmi:id="Core-Features-Feature-type-_ownedComment.0" annotatedElement="Core-Features-Feature-type">
            <body>&lt;p>&lt;code>Types&lt;/code> that restrict the values of this &lt;code>Feature&lt;/code>, such that the values must be instances of all the &lt;code>types&lt;/code>. The types of a &lt;code>Feature&lt;/code> are derived from its &lt;code>typings&lt;/code> and the &lt;code>types&lt;/code> of its &lt;code>subsettings&lt;/code>. If the &lt;code>Feature&lt;/code> is chained, then the &lt;code>types&lt;/code> of the last &lt;code>Feature&lt;/code> in the chain are also &lt;code>types&lt;/code> of the chained &lt;code>Feature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-type-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-type-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-ownedRedefinition" name="ownedRedefinition" visibility="public" type="Core-Features-Redefinition" aggregation="composite" isDerived="true" subsettedProperty="Core-Features-Feature-ownedSubsetting" association="Core-Features-_packagedElement.4">
          <ownedComment xmi:id="Core-Features-Feature-ownedRedefinition-_ownedComment.0" annotatedElement="Core-Features-Feature-ownedRedefinition">
            <body>&lt;p>The &lt;code>ownedSubsettings&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>Redefinitions&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>redefiningFeature&lt;/code>.&lt;/p>

</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-ownedRedefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-ownedRedefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-ownedSubsetting" name="ownedSubsetting" visibility="public" type="Core-Features-Subsetting" aggregation="composite" isDerived="true" subsettedProperty="Core-Types-Type-ownedSpecialization Core-Features-_packagedElement.6-subsetting" association="Core-Features-_packagedElement.11">
          <ownedComment xmi:id="Core-Features-Feature-ownedSubsetting-_ownedComment.0" annotatedElement="Core-Features-Feature-ownedSubsetting">
            <body>&lt;p>The &lt;code>ownedSpecializations&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>Subsettings&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>subsettingFeature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-ownedSubsetting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-ownedSubsetting-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-owningFeatureMembership" name="owningFeatureMembership" visibility="public" type="Core-Types-FeatureMembership" isDerived="true" subsettedProperty="Root-Elements-Element-owningMembership Core-Features-_packagedElement.30-featuring" association="Core-Types-_packagedElement.9">
          <ownedComment xmi:id="Core-Features-Feature-owningFeatureMembership-_ownedComment.0" annotatedElement="Core-Features-Feature-owningFeatureMembership">
            <body>&lt;p>The &lt;code>FeatureMembership&lt;/code> that owns this &lt;code>Feature&lt;/code> as an &lt;code>ownedMemberFeature&lt;/code>, determining its &lt;code>owningType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-owningFeatureMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-owningFeatureMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-isComposite" name="isComposite" visibility="public">
          <ownedComment xmi:id="Core-Features-Feature-isComposite-_ownedComment.0" annotatedElement="Core-Features-Feature-isComposite">
            <body>&lt;p>Whether the &lt;code>Feature&lt;/code> is a composite &lt;code>feature&lt;/code> of its &lt;code>featuringType&lt;/code>. If so, the values of the &lt;code>Feature&lt;/code> cannot exist after its featuring instance no longer does.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Features-Feature-isComposite-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-isEnd" name="isEnd" visibility="public">
          <ownedComment xmi:id="Core-Features-Feature-isEnd-_ownedComment.0" annotatedElement="Core-Features-Feature-isEnd">
            <body>&lt;p>Whether or not the this &lt;code>Feature&lt;/code> is an end &lt;code>Feature&lt;/code>, requiring a different interpretation of the &lt;code>multiplicity&lt;/code> of the &lt;code>Feature&lt;/code>.&lt;/p>

&lt;p>An end &lt;code>Feature&lt;/code> is always considered to map each domain instance to a single co-domain instance, whether or not a &lt;code>Multiplicity&lt;/code> is given for it. If a &lt;code>Multiplicity&lt;/code> is given for an end &lt;code>Feature&lt;/code>, rather than giving the co-domain cardinality for the &lt;code>Feature&lt;/code> as usual, it specifies a cardinality constraint for &lt;em>navigating&lt;/em> across the &lt;code>endFeatures&lt;/code> of the &lt;code>featuringType&lt;/code> of the end &lt;code>Feature&lt;/code>. That is, if a &lt;code>Type&lt;/code> has &lt;em>n&lt;/em> &lt;code>endFeatures&lt;/code>, then the &lt;code>Multiplicity&lt;/code> of any one of those end &lt;code>Features&lt;/code> constrains the cardinality of the set of values of that &lt;code>Feature&lt;/code> when the values of the other &lt;em>n-1&lt;/em> end &lt;code>Features&lt;/code> are held fixed.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Features-Feature-isEnd-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-endOwningType" name="endOwningType" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-_packagedElement.1-typeWithEndFeature Core-Features-Feature-owningType" association="Core-Types-_packagedElement.15">
          <ownedComment xmi:id="Core-Features-Feature-endOwningType-_ownedComment.0" annotatedElement="Core-Features-Feature-endOwningType">
            <body>&lt;p>The &lt;code>Type&lt;/code> that is related to this &lt;code>Feature&lt;/code> by an &lt;code>EndFeatureMembership&lt;/code> in which the &lt;code>Feature&lt;/code> is an &lt;code>ownedMemberFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-endOwningType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-endOwningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-ownedTyping" name="ownedTyping" visibility="public" type="Core-Features-FeatureTyping" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Core-Types-Type-ownedSpecialization Core-Features-_packagedElement.3-typing" association="Core-Features-_packagedElement.14">
          <ownedComment xmi:id="Core-Features-Feature-ownedTyping-_ownedComment.0" annotatedElement="Core-Features-Feature-ownedTyping">
            <body>&lt;p>The &lt;code>ownedSpecializations&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>FeatureTypings&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>typedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-ownedTyping-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-ownedTyping-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-featuringType" name="featuringType" visibility="public" type="Core-Types-Type" isOrdered="true" isDerived="true" association="Core-Features-_packagedElement.16">
          <ownedComment xmi:id="Core-Features-Feature-featuringType-_ownedComment.0" annotatedElement="Core-Features-Feature-featuringType">
            <body>&lt;p>&lt;code>Types&lt;/code> that feature this &lt;code>Feature&lt;/code>, such that any instance in the domain of the &lt;code>Feature&lt;/code> must be classified by all of these &lt;code>Types&lt;/code>, including at least all the &lt;code>featuringTypes&lt;/code> of its &lt;code>typeFeaturings&lt;/code>.  If the &lt;code>Feature&lt;/code> is chained, then the &lt;code>featuringTypes&lt;/code> of the first &lt;code>Feature&lt;/code> in the chain are also &lt;code>featuringTypes&lt;/code> of the chained &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-featuringType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-featuringType-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-ownedTypeFeaturing" name="ownedTypeFeaturing" visibility="public" type="Core-Features-TypeFeaturing" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-Element-ownedRelationship Core-Features-_packagedElement.15-typeFeaturing" association="Core-Features-_packagedElement.18">
          <ownedComment xmi:id="Core-Features-Feature-ownedTypeFeaturing-_ownedComment.0" annotatedElement="Core-Features-Feature-ownedTypeFeaturing">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>TypeFeaturings&lt;/code> and for which the &lt;code>Feature&lt;/code> is the &lt;code>featureOfType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-ownedTypeFeaturing-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-ownedTypeFeaturing-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-isDerived" name="isDerived" visibility="public">
          <ownedComment xmi:id="Core-Features-Feature-isDerived-_ownedComment.0" annotatedElement="Core-Features-Feature-isDerived">
            <body>&lt;p>Whether the values of this &lt;code>Feature&lt;/code> can always be computed from the values of other &lt;code>Feature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Features-Feature-isDerived-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-chainingFeature" name="chainingFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isUnique="false" isDerived="true" association="Core-Features-_packagedElement.24">
          <ownedComment xmi:id="Core-Features-Feature-chainingFeature-_ownedComment.0" annotatedElement="Core-Features-Feature-chainingFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that are chained together to determine the values of this &lt;code>Feature&lt;/code>, derived from the &lt;code>chainingFeatures&lt;/code> of the &lt;code>ownedFeatureChainings&lt;/code> of this &lt;code>Feature&lt;/code>, in the same order. The values of a &lt;code>Feature&lt;/code> with &lt;code>chainingFeatures&lt;/code> are the same as values of the last &lt;code>Feature&lt;/code> in the chain, which can be found by starting with the values of the first &lt;code>Feature&lt;/code> (for each instance of the domain of the original &lt;code>Feature&lt;/code>), then using each of those as domain instances to find the values of the second &lt;code>Feature&lt;/code> in chainingFeatures, and so on, to values of the last &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-chainingFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-chainingFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-ownedFeatureInverting" name="ownedFeatureInverting" visibility="public" type="Core-Features-FeatureInverting" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-Element-ownedRelationship Core-Features-_packagedElement.27-invertingFeatureInverting" association="Core-Features-_packagedElement.29">
          <ownedComment xmi:id="Core-Features-Feature-ownedFeatureInverting-_ownedComment.0" annotatedElement="Core-Features-Feature-ownedFeatureInverting">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>FeatureInvertings&lt;/code> and for which the &lt;code>Feature&lt;/code> is the &lt;code>featureInverted&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-ownedFeatureInverting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-ownedFeatureInverting-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-ownedFeatureChaining" name="ownedFeatureChaining" visibility="public" type="Core-Features-FeatureChaining" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship Root-Elements-Element-ownedRelationship" association="Core-Features-_packagedElement.20">
          <ownedComment xmi:id="Core-Features-Feature-ownedFeatureChaining-_ownedComment.0" annotatedElement="Core-Features-Feature-ownedFeatureChaining">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/owned> of this &lt;code>Feature&lt;/code> that are &lt;code>FeatureChainings&lt;/code>, for which the &lt;code>Feature&lt;/code> will be the &lt;code>featureChained&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-ownedFeatureChaining-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-ownedFeatureChaining-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-isReadOnly" name="isReadOnly" visibility="public">
          <ownedComment xmi:id="Core-Features-Feature-isReadOnly-_ownedComment.0" annotatedElement="Core-Features-Feature-isReadOnly">
            <body>&lt;p>Whether the values of this &lt;code>Feature&lt;/code> can change over the lifetime of an instance of the domain.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Features-Feature-isReadOnly-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-isPortion" name="isPortion" visibility="public">
          <ownedComment xmi:id="Core-Features-Feature-isPortion-_ownedComment.0" annotatedElement="Core-Features-Feature-isPortion">
            <body>&lt;p>Whether the values of this &lt;code>Feature&lt;/code> are contained in the space and time of instances of the domain of the &lt;code>Feature&lt;/code> and represent the same thing as those instances.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Features-Feature-isPortion-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-direction" name="direction" visibility="public" type="Core-Types-FeatureDirectionKind">
          <ownedComment xmi:id="Core-Features-Feature-direction-_ownedComment.0" annotatedElement="Core-Features-Feature-direction">
            <body>&lt;p>Indicates how values of this &lt;code>Feature&lt;/code> are determined or used (as specified for the &lt;code>FeatureDirectionKind&lt;/code>).&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-direction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-direction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Feature-ownedReferenceSubsetting" name="ownedReferenceSubsetting" visibility="public" type="Core-Features-ReferenceSubsetting" aggregation="composite" isDerived="true" subsettedProperty="Core-Features-Feature-ownedSubsetting" association="Core-Features-_packagedElement.31">
          <ownedComment xmi:id="Core-Features-Feature-ownedReferenceSubsetting-_ownedComment.0" annotatedElement="Core-Features-Feature-ownedReferenceSubsetting">
            <body>&lt;p>The one &lt;code>ownedSubsetting&lt;/code> of this &lt;code>Feature&lt;/code>, if any, that is a &lt;code>ReferenceSubsetting&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>referencingFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-ownedReferenceSubsetting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-ownedReferenceSubsetting-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Core-Features-Feature-directionFor" name="directionFor" visibility="public" bodyCondition="Core-Features-Feature-directionFor-directionForBody">
          <ownedComment xmi:id="Core-Features-Feature-directionFor-_ownedComment.0" annotatedElement="Core-Features-Feature-directionFor">
            <body>&lt;p>Return the &lt;code>directionOf&lt;/code> this &lt;code>Feature&lt;/code> relative to the given &lt;code>type&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-directionFor-directionForBody" name="directionForBody" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-directionFor-directionForBody-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>type.directionOf(self)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-directionFor-type" name="type" visibility="public" type="Core-Types-Type"/>
          <ownedParameter xmi:id="Core-Features-Feature-directionFor-_ownedParameter.1" name="" visibility="public" type="Core-Types-FeatureDirectionKind" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-directionFor-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-directionFor-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Features-Feature-isFeaturedWithin" name="isFeaturedWithin" visibility="public" bodyCondition="Core-Features-Feature-isFeaturedWithin-isFeaturedWithIn_Body">
          <ownedComment xmi:id="Core-Features-Feature-isFeaturedWithin-_ownedComment.0" annotatedElement="Core-Features-Feature-isFeaturedWithin">
            <body>&lt;p>Return whether this Feature has the given &lt;code>type&lt;/code> as a direct or indirect &lt;code>featuringType&lt;/code>. If &lt;code>type&lt;/code> is null, then check if this Feature is implicitly directly or indirectly featured in &lt;em>Base::Anything&lt;/em>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-isFeaturedWithin-isFeaturedWithIn_Body" name="isFeaturedWithIn_Body" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-isFeaturedWithin-isFeaturedWithIn_Body-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>type = null and feature.featuringType->isEmpty() or
    type &lt;> null and feature.featuringType->includes(type) or
    feature.featuringType->exists(t |
        t.oclIsKindOf(Feature) and
        t.oclAsType(Feature).isFeaturedWithin(type)) </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-isFeaturedWithin-type" name="type" visibility="public" type="Core-Types-Type">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-isFeaturedWithin-type-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-isFeaturedWithin-type-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Core-Features-Feature-isFeaturedWithin-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Features-Feature-effectiveShortName" name="effectiveShortName" visibility="public" bodyCondition="Core-Features-Feature-effectiveShortName-unnamed1" redefinedOperation="Root-Elements-Element-effectiveShortName">
          <ownedComment xmi:id="Core-Features-Feature-effectiveShortName-_ownedComment.0" annotatedElement="Core-Features-Feature-effectiveShortName">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> has no &lt;code>declaredShortName&lt;/code> or &lt;code>declaredName&lt;/code>, then its effective &lt;code>shortName&lt;/code> is given by the effective &lt;code>shortName&lt;/code> of the &lt;code>Feature&lt;/code> returned by the &lt;code>namingFeature()&lt;/code> operation, if any.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-effectiveShortName-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-effectiveShortName-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if declaredShortName &lt;> null or declaredName &lt;> null then
    declaredShortName
else
    let namingFeature : Feature = namingFeature() in
    if namingFeature = null then
        null
    else
        namingFeature.effectiveShortName()
    endif
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-effectiveShortName-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-effectiveShortName-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-effectiveShortName-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Features-Feature-effectiveName" name="effectiveName" visibility="public" bodyCondition="Core-Features-Feature-effectiveName-unnamed1" redefinedOperation="Root-Elements-Element-effectiveName">
          <ownedComment xmi:id="Core-Features-Feature-effectiveName-_ownedComment.0" annotatedElement="Core-Features-Feature-effectiveName">
            <body>&lt;p>If a &lt;code>Feature&lt;/code> has no &lt;code>declaredName&lt;/code> or &lt;code>declaredShortName&lt;/code>
, then its effective &lt;code>name&lt;/code> is given by the effective &lt;code>name&lt;/code> of the &lt;code>Feature&lt;/code> returned by the &lt;code>namingFeature()&lt;/code> operation, if any.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-effectiveName-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-effectiveName-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if declaredShortName &lt;> null or declaredName &lt;> null then
    declaredName
else
    let namingFeature : Feature = namingFeature() in
    if namingFeature = null then
        null
    else
        namingFeature.effectiveName()
    endif
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-effectiveName-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-effectiveName-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-effectiveName-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Features-Feature-namingFeature" name="namingFeature" visibility="public" bodyCondition="Core-Features-Feature-namingFeature-unnamed1">
          <ownedComment xmi:id="Core-Features-Feature-namingFeature-_ownedComment.0" annotatedElement="Core-Features-Feature-namingFeature">
            <body>&lt;p>By default, the naming &lt;code>Feature&lt;/code> of a &lt;code>Feature&lt;/code> is given by its first &lt;code>redefinedFeature&lt;/code> of its first &lt;code>ownedRedefinition&lt;/code>, if any.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-namingFeature-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-namingFeature-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if ownedRedefinition->isEmpty() then
    null
else
    ownedRedefinition->at(1).redefinedFeature
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-namingFeature-_ownedParameter.0" name="" visibility="public" type="Core-Features-Feature" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Feature-namingFeature-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Feature-namingFeature-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Features-Feature-redefines" name="redefines" visibility="public" bodyCondition="Core-Features-Feature-redefines-unnamed1">
          <ownedComment xmi:id="Core-Features-Feature-redefines-_ownedComment.0" annotatedElement="Core-Features-Feature-redefines">
            <body>&lt;p>Check whether this &lt;code>Feature&lt;/code> &lt;em>directly&lt;/em> redefines the given &lt;code>redefinedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-redefines-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-redefines-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>ownedRedefinition.redefinedFeature->includes(redefinedFeature)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-redefines-redefinedFeature" name="redefinedFeature" visibility="public" type="Core-Features-Feature"/>
          <ownedParameter xmi:id="Core-Features-Feature-redefines-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Features-Feature-redefinesFromLibrary" name="redefinesFromLibrary" visibility="public" bodyCondition="Core-Features-Feature-redefinesFromLibrary-unnamed1">
          <ownedComment xmi:id="Core-Features-Feature-redefinesFromLibrary-_ownedComment.0" annotatedElement="Core-Features-Feature-redefinesFromLibrary">
            <body>&lt;p>Check whether this &lt;code>Feature&lt;/code> &lt;em>directly&lt;/em> redefines the named library &lt;code>Feature&lt;/code>. &lt;code>libraryFeatureName&lt;/code> must conform to the syntax of a KerML qualified name and must resolve to a &lt;code>Feature&lt;/code> in global scope.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-redefinesFromLibrary-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-redefinesFromLibrary-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let mem: Membership = resolveGlobal(libraryFeatureName) in
mem &lt;> null and mem.memberElement.oclIsKindOf(Feature) and
redefines(mem.memberElement.oclAsType(Feature))</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-redefinesFromLibrary-libraryFeatureName" name="libraryFeatureName" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Core-Features-Feature-redefinesFromLibrary-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Features-Feature-subsetsChain" name="subsetsChain" visibility="public" bodyCondition="Core-Features-Feature-subsetsChain-unnamed1">
          <ownedComment xmi:id="Core-Features-Feature-subsetsChain-_ownedComment.0" annotatedElement="Core-Features-Feature-subsetsChain">
            <body>&lt;p>Check whether this &lt;code>Feature&lt;/code> directly or indirectly specializes a &lt;code>Feature&lt;/code> whose last two &lt;code>chainingFeatures&lt;/code> are the given &lt;code>Features&lt;/code> &lt;code>first&lt;/code> and &lt;code>second&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Features-Feature-subsetsChain-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Feature-subsetsChain-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>allSuperTypes()->selectAsKind(Feature)->
    exists(f | let n: Integer = f.chainingFeature->size() in
        n >= 2 and
        f.chainingFeature->at(n-1) = first and
        f.chainingFeature->at(n) = second)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Features-Feature-subsetsChain-first" name="first" visibility="public" type="Core-Features-Feature"/>
          <ownedParameter xmi:id="Core-Features-Feature-subsetsChain-second" name="second" visibility="public" type="Core-Features-Feature"/>
          <ownedParameter xmi:id="Core-Features-Feature-subsetsChain-_ownedParameter.2" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-FeatureTyping" name="FeatureTyping" visibility="public">
        <ownedComment xmi:id="Core-Features-FeatureTyping-_ownedComment.0" annotatedElement="Core-Features-FeatureTyping">
          <body>&lt;p>&lt;code>FeatureTyping&lt;/code> is &lt;code>Specialization&lt;/code> in which the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code> is a &lt;code>Feature&lt;/code>. This means the set of instances of the (specific) &lt;code>typedFeature&lt;/code> is a subset of the set of instances of the (general) &lt;code>type&lt;/code>. In the simplest case, the &lt;code>type&lt;/code> is a &lt;code>Classifier&lt;/code>, whereupon the &lt;code>typedFeature&lt;/code> has values that are instances of the &lt;code>Classifier&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Features-FeatureTyping-_generalization.0" general="Core-Types-Specialization"/>
        <ownedAttribute xmi:id="Core-Features-FeatureTyping-typedFeature" name="typedFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Core-Types-Specialization-specific" association="Core-Features-_packagedElement.3">
          <ownedComment xmi:id="Core-Features-FeatureTyping-typedFeature-_ownedComment.0" annotatedElement="Core-Features-FeatureTyping-typedFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that has a &lt;code>type&lt;/code> determined by this &lt;code>FeatureTyping&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureTyping-typedFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureTyping-typedFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-FeatureTyping-type" name="type" visibility="public" type="Core-Types-Type" redefinedProperty="Core-Types-Specialization-general" association="Core-Features-_packagedElement.1">
          <ownedComment xmi:id="Core-Features-FeatureTyping-type-_ownedComment.0" annotatedElement="Core-Features-FeatureTyping-type">
            <body>&lt;p>The &lt;code>Type&lt;/code> that is being applied by this &lt;code>FeatureTyping&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureTyping-type-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureTyping-type-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-FeatureTyping-owningFeature" name="owningFeature" visibility="public" type="Core-Features-Feature" isDerived="true" redefinedProperty="Core-Types-Specialization-owningType" subsettedProperty="Core-Features-FeatureTyping-typedFeature" association="Core-Features-_packagedElement.14">
          <ownedComment xmi:id="Core-Features-FeatureTyping-owningFeature-_ownedComment.0" annotatedElement="Core-Features-FeatureTyping-owningFeature">
            <body>&lt;p>A &lt;code>typedFeature&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>FeatureTyping&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureTyping-owningFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureTyping-owningFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-Subsetting" name="Subsetting" visibility="public">
        <ownedComment xmi:id="Core-Features-Subsetting-_ownedComment.0" annotatedElement="Core-Features-Subsetting">
          <body>&lt;p>&lt;code>Subsetting&lt;/code> is &lt;code>Specialization&lt;/code> in which the &lt;code>specific&lt;/code> and &lt;code>general&lt;/code> &lt;code>Types&lt;/code> that are &lt;code>Features&lt;/code>. This means all values of the &lt;code>subsettingFeature&lt;/code> (on instances of its domain, i.e., the intersection of its &lt;code>featuringTypes&lt;/code>) are values of the &lt;code>subsettedFeature&lt;/code> on instances of its domain. To support this the domain of the &lt;code>subsettingFeature&lt;/code> must be the same or specialize (at least indirectly) the domain of the &lt;code>subsettedFeature&lt;/code> (via &lt;code>Specialization&lt;/code>), and the co-domain (intersection of the &lt;code>types&lt;/code>) of the &lt;code>subsettingFeature&lt;/code> must specialize the co-domain of the &lt;code>subsettedFeature&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Features-Subsetting-validateSubsettingFeaturingTypes" name="validateSubsettingFeaturingTypes" visibility="public" constrainedElement="Core-Features-Subsetting">
          <ownedComment xmi:id="Core-Features-Subsetting-validateSubsettingFeaturingTypes-_ownedComment.0" annotatedElement="Core-Features-Subsetting-validateSubsettingFeaturingTypes">
            <body>&lt;p>For each &lt;code>featuringType&lt;/code> of the &lt;code>subsettedFeature&lt;/code> of a &lt;code>Subsetting&lt;/code>, there must be a &lt;code>featuringType&lt;/code> of the &lt;code>subsettingFeature&lt;/code> that conforms to it.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-Subsetting-validateSubsettingFeaturingTypes-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let subsettingFeaturingTypes: OrderedSet(Type) =
    subsettingFeature.featuringTypes in
let subsettedFeaturingTypes: OrderedSet(Type) =
    subsettedFeature.featuringTypes in
let anythingType: Element =
    subsettingFeature.resolveGlobal('Base::Anything') in 
subsettedFeaturingTypes->forAll(t |
    subsettingFeaturingTypes->isEmpty() and t = anythingType or
    subsettingFeaturingTypes->exists(specializes(t))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Features-Subsetting-_generalization.0" general="Core-Types-Specialization"/>
        <ownedAttribute xmi:id="Core-Features-Subsetting-subsettedFeature" name="subsettedFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Core-Types-Specialization-general" association="Core-Features-_packagedElement.12">
          <ownedComment xmi:id="Core-Features-Subsetting-subsettedFeature-_ownedComment.0" annotatedElement="Core-Features-Subsetting-subsettedFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is subsetted by the &lt;code>subsettingFeature&lt;/code> of this &lt;code>Subsetting&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Subsetting-subsettedFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Subsetting-subsettedFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Subsetting-subsettingFeature" name="subsettingFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Core-Types-Specialization-specific" association="Core-Features-_packagedElement.6">
          <ownedComment xmi:id="Core-Features-Subsetting-subsettingFeature-_ownedComment.0" annotatedElement="Core-Features-Subsetting-subsettingFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is a subset of the &lt;code>subsettedFeature&lt;/code> of this &lt;code>Subsetting&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Subsetting-subsettingFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Subsetting-subsettingFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Subsetting-owningFeature" name="owningFeature" visibility="public" type="Core-Features-Feature" isDerived="true" redefinedProperty="Core-Types-Specialization-owningType" subsettedProperty="Core-Features-Subsetting-subsettingFeature" association="Core-Features-_packagedElement.11">
          <ownedComment xmi:id="Core-Features-Subsetting-owningFeature-_ownedComment.0" annotatedElement="Core-Features-Subsetting-owningFeature">
            <body>&lt;p>A &lt;code>subsettingFeature&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>Subsetting&lt;/code>.&lt;/p>

</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Subsetting-owningFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Subsetting-owningFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.10" name="" visibility="private" memberEnd="Core-Features-Redefinition-redefiningFeature Core-Features-_packagedElement.10-redefinition">
        <ownedEnd xmi:id="Core-Features-_packagedElement.10-redefinition" name="redefinition" visibility="public" type="Core-Features-Redefinition" subsettedProperty="Core-Features-_packagedElement.6-subsetting" association="Core-Features-_packagedElement.10">
          <ownedComment xmi:id="Core-Features-_packagedElement.10-redefinition-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.10-redefinition">
            <body>&lt;p>The Redefinitions with a certain Feature as the &lt;code>redefiningFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.10-redefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.10-redefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.11" name="" visibility="private" memberEnd="Core-Features-Subsetting-owningFeature Core-Features-Feature-ownedSubsetting"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.12" name="" visibility="private" memberEnd="Core-Features-Subsetting-subsettedFeature Core-Features-_packagedElement.12-supersetting">
        <ownedEnd xmi:id="Core-Features-_packagedElement.12-supersetting" name="supersetting" visibility="public" type="Core-Features-Subsetting" subsettedProperty="Core-Types-_packagedElement.10-generalization" association="Core-Features-_packagedElement.12">
          <ownedComment xmi:id="Core-Features-_packagedElement.12-supersetting-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.12-supersetting">
            <body>&lt;p>The Subsettings with a certain Feature as the &lt;code>subsettedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.12-supersetting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.12-supersetting-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.13" name="" visibility="private" memberEnd="Core-Types-Type-multiplicity Core-Features-_packagedElement.13-typeWithMultiplicity">
        <ownedEnd xmi:id="Core-Features-_packagedElement.13-typeWithMultiplicity" name="typeWithMultiplicity" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.5-namespace" association="Core-Features-_packagedElement.13">
          <ownedComment xmi:id="Core-Features-_packagedElement.13-typeWithMultiplicity-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.13-typeWithMultiplicity">
            <body>&lt;p>A &lt;code>Type&lt;/code> that has the &lt;code>multiplicity&lt;/code> as an &lt;code>ownedMember&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.13-typeWithMultiplicity-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.13-typeWithMultiplicity-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.14" name="" visibility="private" memberEnd="Core-Features-Feature-ownedTyping Core-Features-FeatureTyping-owningFeature"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.15" name="" visibility="private" memberEnd="Core-Features-TypeFeaturing-featureOfType Core-Features-_packagedElement.15-typeFeaturing">
        <ownedEnd xmi:id="Core-Features-_packagedElement.15-typeFeaturing" name="typeFeaturing" visibility="public" type="Core-Features-TypeFeaturing" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship Core-Features-_packagedElement.30-featuring" association="Core-Features-_packagedElement.15">
          <ownedComment xmi:id="Core-Features-_packagedElement.15-typeFeaturing-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.15-typeFeaturing">
            <body>&lt;p>The TypeFeaturings for which a certain Feature is the &lt;code>featureOfType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.15-typeFeaturing-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.15-typeFeaturing-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.16" name="" visibility="private" memberEnd="Core-Features-Feature-featuringType Core-Features-_packagedElement.16-featureOfType">
        <ownedEnd xmi:id="Core-Features-_packagedElement.16-featureOfType" name="featureOfType" visibility="public" type="Core-Features-Feature" isDerived="true" association="Core-Features-_packagedElement.16">
          <ownedComment xmi:id="Core-Features-_packagedElement.16-featureOfType-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.16-featureOfType">
            <body>&lt;p>The Features for which a certain Type is a &lt;code>featuringType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.16-featureOfType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.16-featureOfType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-TypeFeaturing" name="TypeFeaturing" visibility="public">
        <ownedComment xmi:id="Core-Features-TypeFeaturing-_ownedComment.0" annotatedElement="Core-Features-TypeFeaturing">
          <body>&lt;p>A &lt;code>TypeFeaturing&lt;/code> is a &lt;code>Featuring&lt;/code> &lt;code>Relationship&lt;/code> in which the &lt;code>featureOfType&lt;/code> is the &lt;code>source&lt;/code> and the &lt;code>featuringType&lt;/code> is the &lt;code>target&lt;/code>.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Core-Features-TypeFeaturing-_generalization.0" general="Core-Features-Featuring"/>
        <ownedAttribute xmi:id="Core-Features-TypeFeaturing-featureOfType" name="featureOfType" visibility="public" type="Core-Features-Feature" redefinedProperty="Root-Elements-Relationship-source Core-Features-Featuring-feature" association="Core-Features-_packagedElement.15">
          <ownedComment xmi:id="Core-Features-TypeFeaturing-featureOfType-_ownedComment.0" annotatedElement="Core-Features-TypeFeaturing-featureOfType">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is featured by the &lt;code>featuringType&lt;/code>. It is the &lt;code>source&lt;/code> of the &lt;code>TypeFeaturing&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-TypeFeaturing-featureOfType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-TypeFeaturing-featureOfType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-TypeFeaturing-featuringType" name="featuringType" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-target Core-Features-Featuring-type" association="Core-Features-_packagedElement.19">
          <ownedComment xmi:id="Core-Features-TypeFeaturing-featuringType-_ownedComment.0" annotatedElement="Core-Features-TypeFeaturing-featuringType">
            <body>&lt;p>The &lt;code>Type&lt;/code> that features the &lt;code>featureOfType&lt;/code>. It is the &lt;code>target&lt;/code> of the &lt;code>TypeFeaturing&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-TypeFeaturing-featuringType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-TypeFeaturing-featuringType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-TypeFeaturing-owningFeatureOfType" name="owningFeatureOfType" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Core-Features-TypeFeaturing-featureOfType Root-Elements-Relationship-owningRelatedElement" association="Core-Features-_packagedElement.18">
          <ownedComment xmi:id="Core-Features-TypeFeaturing-owningFeatureOfType-_ownedComment.0" annotatedElement="Core-Features-TypeFeaturing-owningFeatureOfType">
            <body>&lt;p>A &lt;code>featureOfType&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>TypeFeaturing&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-TypeFeaturing-owningFeatureOfType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-TypeFeaturing-owningFeatureOfType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.18" name="" visibility="private" memberEnd="Core-Features-Feature-ownedTypeFeaturing Core-Features-TypeFeaturing-owningFeatureOfType"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.19" name="" visibility="private" memberEnd="Core-Features-TypeFeaturing-featuringType Core-Features-_packagedElement.19-typeFeaturingOfType">
        <ownedEnd xmi:id="Core-Features-_packagedElement.19-typeFeaturingOfType" name="typeFeaturingOfType" visibility="public" type="Core-Features-TypeFeaturing" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship Core-Features-_packagedElement.33-featuringOfType" association="Core-Features-_packagedElement.19">
          <ownedComment xmi:id="Core-Features-_packagedElement.19-typeFeaturingOfType-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.19-typeFeaturingOfType">
            <body>&lt;p>The TypeFeaturings for which a certain Type is the &lt;code>featuringType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.19-typeFeaturingOfType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.19-typeFeaturingOfType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.20" name="" visibility="private" memberEnd="Core-Features-Feature-ownedFeatureChaining Core-Features-FeatureChaining-featureChained"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-EndFeatureMembership" name="EndFeatureMembership" visibility="public">
        <ownedComment xmi:id="Core-Features-EndFeatureMembership-_ownedComment.0" annotatedElement="Core-Features-EndFeatureMembership">
          <body>&lt;p>&lt;code>EndFeatureMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> that requires its &lt;code>memberFeature&lt;/code> be owned and have &lt;code>isEnd = true&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Features-EndFeatureMembership-validateEndFeatureMembershipIsEnd" name="validateEndFeatureMembershipIsEnd" visibility="public" constrainedElement="Core-Features-EndFeatureMembership">
          <ownedComment xmi:id="Core-Features-EndFeatureMembership-validateEndFeatureMembershipIsEnd-_ownedComment.0" annotatedElement="Core-Features-EndFeatureMembership-validateEndFeatureMembershipIsEnd">
            <body>&lt;p>The &lt;code>ownedMemberFeature&lt;/code> of an &lt;code>EndFeatureMembership&lt;/code> must be an end &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Features-EndFeatureMembership-validateEndFeatureMembershipIsEnd-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMemberFeature.isEnd</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Features-EndFeatureMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Core-Features-EndFeatureMembership-ownedMemberFeature" name="ownedMemberFeature" visibility="public" type="Core-Features-Feature" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Core-Features-_packagedElement.25">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-EndFeatureMembership-ownedMemberFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-EndFeatureMembership-ownedMemberFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.22" name="" visibility="private" memberEnd="Core-Features-FeatureChaining-chainingFeature Core-Features-_packagedElement.22-chainedFeatureChaining">
        <ownedComment xmi:id="Core-Features-_packagedElement.22-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.22">
          <body>&lt;p>Relationship for chainedFeatures.&lt;/p></body>
        </ownedComment>
        <ownedEnd xmi:id="Core-Features-_packagedElement.22-chainedFeatureChaining" name="chainedFeatureChaining" visibility="public" type="Core-Features-FeatureChaining" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Features-_packagedElement.22">
          <ownedComment xmi:id="Core-Features-_packagedElement.22-chainedFeatureChaining-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.22-chainedFeatureChaining">
            <body>&lt;p>The FeatureChainings that identify this Feature as their &lt;code>chainingFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.22-chainedFeatureChaining-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.22-chainedFeatureChaining-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-FeatureChaining" name="FeatureChaining" visibility="public">
        <ownedComment xmi:id="Core-Features-FeatureChaining-_ownedComment.0" annotatedElement="Core-Features-FeatureChaining">
          <body>&lt;p>&lt;code>FeatureChaining&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its target &lt;code>Feature&lt;/code> one of the &lt;code>chainingFeatures&lt;/code> of its owning &lt;code>Feature&lt;/code>.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Core-Features-FeatureChaining-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Features-FeatureChaining-chainingFeature" name="chainingFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Root-Elements-Relationship-target" association="Core-Features-_packagedElement.22">
          <ownedComment xmi:id="Core-Features-FeatureChaining-chainingFeature-_ownedComment.0" annotatedElement="Core-Features-FeatureChaining-chainingFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> whose values partly determine values of &lt;code>featureChained&lt;/code>, as described in &lt;code>Feature::chainingFeature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureChaining-chainingFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureChaining-chainingFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-FeatureChaining-featureChained" name="featureChained" visibility="public" type="Core-Features-Feature" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Root-Elements-Relationship-owningRelatedElement" association="Core-Features-_packagedElement.20">
          <ownedComment xmi:id="Core-Features-FeatureChaining-featureChained-_ownedComment.0" annotatedElement="Core-Features-FeatureChaining-featureChained">
            <body>&lt;p>The &lt;code>Feature&lt;/code> whose values are partly determined by values of the &lt;code>chainingFeature&lt;/code>, as described in &lt;code>Feature::chainingFeature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureChaining-featureChained-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureChaining-featureChained-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.24" name="" visibility="private" memberEnd="Core-Features-Feature-chainingFeature Core-Features-_packagedElement.24-chainedFeature">
        <ownedEnd xmi:id="Core-Features-_packagedElement.24-chainedFeature" name="chainedFeature" visibility="public" type="Core-Features-Feature" isDerived="true" association="Core-Features-_packagedElement.24">
          <ownedComment xmi:id="Core-Features-_packagedElement.24-chainedFeature-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.24-chainedFeature">
            <body>&lt;p>The Features that have a particular &lt;code>chainingFeature&lt;/code> in their Feature chain, whose values are partly determined by values of the &lt;code>chainingFeature&lt;/code>, as described in &lt;code>chainingFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.24-chainedFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.24-chainedFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.25" name="" visibility="private" memberEnd="Core-Features-EndFeatureMembership-ownedMemberFeature Core-Features-_packagedElement.25-owningEndFeatureMembership">
        <ownedEnd xmi:id="Core-Features-_packagedElement.25-owningEndFeatureMembership" name="owningEndFeatureMembership" visibility="public" type="Core-Features-EndFeatureMembership" isDerived="true" subsettedProperty="Core-Features-Feature-owningFeatureMembership" association="Core-Features-_packagedElement.25">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.25-owningEndFeatureMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.25-owningEndFeatureMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-FeatureInverting" name="FeatureInverting" visibility="public">
        <ownedComment xmi:id="Core-Features-FeatureInverting-_ownedComment.0" annotatedElement="Core-Features-FeatureInverting">
          <body>&lt;p>A &lt;code>FeatureInverting&lt;/code> is a &lt;code>Relationship&lt;/code> between &lt;code>Features&lt;/code> asserting that their interpretations (sequences) are the reverse of each other, identified as &lt;code>featureInverted&lt;/code> and &lt;code>invertingFeature&lt;/code>. For example, a &lt;code>Feature&lt;/code> identifying each person&amp;#39;s parents is the inverse of a &lt;code>Feature&lt;/code> identifying each person&amp;#39;s children. A person identified as a parent of another will identify that other as one of their children.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Features-FeatureInverting-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Features-FeatureInverting-featureInverted" name="featureInverted" visibility="public" type="Core-Features-Feature" redefinedProperty="Root-Elements-Relationship-source" association="Core-Features-_packagedElement.27">
          <ownedComment xmi:id="Core-Features-FeatureInverting-featureInverted-_ownedComment.0" annotatedElement="Core-Features-FeatureInverting-featureInverted">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is an inverse of the &lt;code>invertingFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureInverting-featureInverted-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureInverting-featureInverted-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-FeatureInverting-invertingFeature" name="invertingFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Root-Elements-Relationship-target" association="Core-Features-_packagedElement.28">
          <ownedComment xmi:id="Core-Features-FeatureInverting-invertingFeature-_ownedComment.0" annotatedElement="Core-Features-FeatureInverting-invertingFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is an inverse of the &lt;code>invertedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureInverting-invertingFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureInverting-invertingFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-FeatureInverting-owningFeature" name="owningFeature" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Root-Elements-Relationship-owningRelatedElement Core-Features-FeatureInverting-featureInverted" association="Core-Features-_packagedElement.29">
          <ownedComment xmi:id="Core-Features-FeatureInverting-owningFeature-_ownedComment.0" annotatedElement="Core-Features-FeatureInverting-owningFeature">
            <body>&lt;p>A &lt;code>featureInverted&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>FeatureInverting&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-FeatureInverting-owningFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-FeatureInverting-owningFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.27" name="" visibility="private" memberEnd="Core-Features-_packagedElement.27-invertingFeatureInverting Core-Features-FeatureInverting-featureInverted">
        <ownedEnd xmi:id="Core-Features-_packagedElement.27-invertingFeatureInverting" name="invertingFeatureInverting" visibility="public" type="Core-Features-FeatureInverting" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship" association="Core-Features-_packagedElement.27">
          <ownedComment xmi:id="Core-Features-_packagedElement.27-invertingFeatureInverting-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.27-invertingFeatureInverting">
            <body>&lt;p>The FeatureInvertings that identify this Feature as their &lt;code>featureInverted&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.27-invertingFeatureInverting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.27-invertingFeatureInverting-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.28" name="" visibility="private" memberEnd="Core-Features-FeatureInverting-invertingFeature Core-Features-_packagedElement.28-invertedFeatureInverting">
        <ownedEnd xmi:id="Core-Features-_packagedElement.28-invertedFeatureInverting" name="invertedFeatureInverting" visibility="public" type="Core-Features-FeatureInverting" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Features-_packagedElement.28">
          <ownedComment xmi:id="Core-Features-_packagedElement.28-invertedFeatureInverting-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.28-invertedFeatureInverting">
            <body>&lt;p>The FeatureInvertings that identify this Feature as their &lt;code>invertingFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.28-invertedFeatureInverting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.28-invertedFeatureInverting-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.29" name="" visibility="private" memberEnd="Core-Features-Feature-ownedFeatureInverting Core-Features-FeatureInverting-owningFeature"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.30" name="" visibility="private" memberEnd="Core-Features-Featuring-feature Core-Features-_packagedElement.30-featuring">
        <ownedEnd xmi:id="Core-Features-_packagedElement.30-featuring" name="featuring" visibility="public" type="Core-Features-Featuring" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Core-Features-_packagedElement.30">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.30-featuring-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.30-featuring-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.31" name="" visibility="private" memberEnd="Core-Features-Feature-ownedReferenceSubsetting Core-Features-ReferenceSubsetting-referencingFeature"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-Featuring" name="Featuring" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Core-Features-Featuring-_ownedComment.0" annotatedElement="Core-Features-Featuring">
          <body>&lt;p>&lt;code>Featuring&lt;/code> is a &lt;code>Relationship&lt;/code> between a &lt;code>Type&lt;/code> and a &lt;code>Feature&lt;/code> that is featured by that code>Type&lt;/code>. It asserts that every instance in the domain of the &lt;code>feature&lt;/code> must be classified by the &lt;code>type&lt;/code>.&lt;/p>

&lt;p>&lt;code>Featuring&lt;/code> is abstract and does not commit to which of &lt;code>feature&lt;/code> or &lt;code>type&lt;/code> are the &lt;code>source&lt;/code> or &lt;code>target&lt;/code> of the &lt;code>Relationship&lt;/code>. This commitment is made in the subclasses of &lt;code>Featuring&lt;/code>, &lt;code>TypeFeaturing&lt;/code> and &lt;code>FeatureMembership&lt;/code>, which have opposite directions.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Core-Features-Featuring-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Features-Featuring-type" name="type" visibility="public" type="Core-Types-Type" subsettedProperty="Root-Elements-Relationship-relatedElement" association="Core-Features-_packagedElement.33">
          <ownedComment xmi:id="Core-Features-Featuring-type-_ownedComment.0" annotatedElement="Core-Features-Featuring-type">
            <body>&lt;p>The &lt;code>Type&lt;code> that features the &lt;code>featureOfType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Featuring-type-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Featuring-type-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-Featuring-feature" name="feature" visibility="public" type="Core-Features-Feature" subsettedProperty="Root-Elements-Relationship-relatedElement" association="Core-Features-_packagedElement.30">
          <ownedComment xmi:id="Core-Features-Featuring-feature-_ownedComment.0" annotatedElement="Core-Features-Featuring-feature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is featured by the &lt;code>featuringType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-Featuring-feature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-Featuring-feature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.33" name="" visibility="private" memberEnd="Core-Features-Featuring-type Core-Features-_packagedElement.33-featuringOfType">
        <ownedEnd xmi:id="Core-Features-_packagedElement.33-featuringOfType" name="featuringOfType" visibility="public" type="Core-Features-Featuring" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Core-Features-_packagedElement.33">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.33-featuringOfType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.33-featuringOfType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Features-ReferenceSubsetting" name="ReferenceSubsetting" visibility="public">
        <ownedComment xmi:id="Core-Features-ReferenceSubsetting-_ownedComment.0" annotatedElement="Core-Features-ReferenceSubsetting">
          <body>&lt;p>&lt;code>ReferenceSubsetting&lt;/code> is a kind of &lt;code>Subsetting&lt;/code> in which the &lt;code>referencedFeature&lt;/code> is syntactically distinguished from other &lt;code>Features&lt;/code> subsetted by the &lt;code>referencingFeature&lt;/code>. &lt;code>ReferenceSubsetting&lt;/code> has the same semantics as &lt;code>Subsetting&lt;/code>, but the &lt;code>referenceFeature&lt;/code> may have a special purpose relative to the &lt;code>referencingFeature&lt;/code>. For instance, &lt;code>ReferenceSubsetting&lt;/code> is used to identify the &lt;code>relatedFeatures&lt;/code> of a &lt;code>Connector&lt;/code>.&lt;/p>

&lt;p>&lt;code>ReferenceSubsetting&lt;/code> is always an &lt;code>ownedRelationship&lt;/code> of its &lt;code>referencingFeature&lt;/code>. A &lt;code>Feature&lt;/code> can have at most one &lt;code>ownedReferenceSubsetting&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Features-ReferenceSubsetting-_generalization.0" general="Core-Features-Subsetting"/>
        <ownedAttribute xmi:id="Core-Features-ReferenceSubsetting-referencedFeature" name="referencedFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Core-Features-Subsetting-subsettedFeature" association="Core-Features-_packagedElement.35">
          <ownedComment xmi:id="Core-Features-ReferenceSubsetting-referencedFeature-_ownedComment.0" annotatedElement="Core-Features-ReferenceSubsetting-referencedFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is referenced by the &lt;code>referencingFeature&lt;/code> of this &lt;code>ReferenceSubsetting&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-ReferenceSubsetting-referencedFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-ReferenceSubsetting-referencedFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Features-ReferenceSubsetting-referencingFeature" name="referencingFeature" visibility="public" type="Core-Features-Feature" isDerived="true" redefinedProperty="Core-Features-Subsetting-subsettingFeature Core-Features-Subsetting-owningFeature" association="Core-Features-_packagedElement.31">
          <ownedComment xmi:id="Core-Features-ReferenceSubsetting-referencingFeature-_ownedComment.0" annotatedElement="Core-Features-ReferenceSubsetting-referencingFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that owns this &lt;code>ReferenceSubsetting&lt;/code> relationship, which is also its &lt;code>subsettingFeature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-ReferenceSubsetting-referencingFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-ReferenceSubsetting-referencingFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Features-_packagedElement.35" name="" visibility="private" memberEnd="Core-Features-ReferenceSubsetting-referencedFeature Core-Features-_packagedElement.35-referencing">
        <ownedEnd xmi:id="Core-Features-_packagedElement.35-referencing" name="referencing" visibility="public" type="Core-Features-ReferenceSubsetting" subsettedProperty="Core-Features-_packagedElement.12-supersetting" association="Core-Features-_packagedElement.35">
          <ownedComment xmi:id="Core-Features-_packagedElement.35-referencing-_ownedComment.0" annotatedElement="Core-Features-_packagedElement.35-referencing">
            <body>&lt;p>The ReferenceSubsettings with a certain Feature as the &lt;code>referencedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Features-_packagedElement.35-referencing-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Features-_packagedElement.35-referencing-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Core-Classifiers" name="Classifiers" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Classifiers-_packagedElement.0" name="" visibility="private" memberEnd="Core-Classifiers-Subclassification-superclassifier Core-Classifiers-_packagedElement.0-superclassification">
        <ownedEnd xmi:id="Core-Classifiers-_packagedElement.0-superclassification" name="superclassification" visibility="public" type="Core-Classifiers-Subclassification" subsettedProperty="Core-Types-_packagedElement.10-generalization" association="Core-Classifiers-_packagedElement.0">
          <ownedComment xmi:id="Core-Classifiers-_packagedElement.0-superclassification-_ownedComment.0" annotatedElement="Core-Classifiers-_packagedElement.0-superclassification">
            <body>&lt;p>The Subclassifications with a certain &lt;code>superclassifier&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Classifiers-_packagedElement.0-superclassification-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Classifiers-_packagedElement.0-superclassification-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Classifiers-Classifier" name="Classifier" visibility="public">
        <ownedComment xmi:id="Core-Classifiers-Classifier-_ownedComment.0" annotatedElement="Core-Classifiers-Classifier">
          <body>&lt;p>A &lt;code>Classifier&lt;/code> is a &lt;code>Type&lt;/code> that classifies:&lt;/p>

&lt;ul>
	&lt;li>Things (in the universe) regardless of how &lt;code>Features&lt;/code> relate them. (These are interpreted semantically as sequences of exactly one thing.)&lt;/li>
	&lt;li>How the above things are related by &lt;code>Features.&lt;/code> (These are interpreted semantically as sequences of multiple things, such that the last thing in the sequence is also classified by the &lt;code>Classifier&lt;/code>. Note that his means that a &lt;code>Classifier&lt;/code> modeled as specializing a &lt;code>Feature&lt;/code> cannot classify anything.)&lt;/li>
&lt;/ul>

</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Classifiers-Classifier-deriveClassifierOwnedSubclassification" name="deriveClassifierOwnedSubclassification" visibility="public" constrainedElement="Core-Classifiers-Classifier">
          <ownedComment xmi:id="Core-Classifiers-Classifier-deriveClassifierOwnedSubclassification-_ownedComment.0" annotatedElement="Core-Classifiers-Classifier-deriveClassifierOwnedSubclassification">
            <body>&lt;p>The &lt;code>ownedSubclassifications&lt;/code> of a &lt;code>Classifier&lt;/code> are its &lt;code>ownedSpecializations&lt;/code> that are &lt;code>Subclassifications&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Classifiers-Classifier-deriveClassifierOwnedSubclassification-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedSubclassification = 
    ownedSpecialization->selectByKind(Superclassification)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Classifiers-Classifier-validateClassifierMultiplicityDomain" name="validateClassifierMultiplicityDomain" visibility="public" constrainedElement="Core-Classifiers-Classifier">
          <ownedComment xmi:id="Core-Classifiers-Classifier-validateClassifierMultiplicityDomain-_ownedComment.0" annotatedElement="Core-Classifiers-Classifier-validateClassifierMultiplicityDomain">
            <body>&lt;p>If a &lt;code>Classifier&lt;/code> has a &lt;code>multiplicity&lt;/code>, then the &lt;code>multiplicity&lt;/code> must have no &lt;code>featuringTypes&lt;/code> (meaning that its domain is implicitly &lt;em>Base::Anything&lt;/em>).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Classifiers-Classifier-validateClassifierMultiplicityDomain-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>multiplicity &lt;> null implies multiplicity.featuringType->isEmpty()</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Classifiers-Classifier-_generalization.0" general="Core-Types-Type"/>
        <ownedAttribute xmi:id="Core-Classifiers-Classifier-ownedSubclassification" name="ownedSubclassification" visibility="public" type="Core-Classifiers-Subclassification" aggregation="composite" isDerived="true" subsettedProperty="Core-Types-Type-ownedSpecialization" association="Core-Classifiers-_packagedElement.4">
          <ownedComment xmi:id="Core-Classifiers-Classifier-ownedSubclassification-_ownedComment.0" annotatedElement="Core-Classifiers-Classifier-ownedSubclassification">
            <body>&lt;p>The &lt;code>ownedSpecializations&lt;/code> of this &lt;code>Classifier&lt;/code> that are &lt;code>Subclassifications&lt;/code>, for which this &lt;code>Classifier&lt;/code> is the &lt;code>subclassifier&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Classifiers-Classifier-ownedSubclassification-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Classifiers-Classifier-ownedSubclassification-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Classifiers-_packagedElement.2" name="" visibility="private" memberEnd="Core-Classifiers-Subclassification-subclassifier Core-Classifiers-_packagedElement.2-subclassification">
        <ownedEnd xmi:id="Core-Classifiers-_packagedElement.2-subclassification" name="subclassification" visibility="public" type="Core-Classifiers-Subclassification" subsettedProperty="Core-Types-_packagedElement.8-specialization" association="Core-Classifiers-_packagedElement.2">
          <ownedComment xmi:id="Core-Classifiers-_packagedElement.2-subclassification-_ownedComment.0" annotatedElement="Core-Classifiers-_packagedElement.2-subclassification">
            <body>&lt;p>The Subclassifications with a certain &lt;code>subclassifier&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Classifiers-_packagedElement.2-subclassification-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Classifiers-_packagedElement.2-subclassification-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Classifiers-Subclassification" name="Subclassification" visibility="public">
        <ownedComment xmi:id="Core-Classifiers-Subclassification-_ownedComment.0" annotatedElement="Core-Classifiers-Subclassification">
          <body>&lt;p>&lt;code>Subclassification&lt;/code> is &lt;code>Specialization&lt;/code> in which both the &lt;code>specific&lt;/code> and &lt;code>general&lt;/code> &lt;code>Types&lt;/code> are &lt;code>Classifier&lt;/code>. This means all instances of the specific &lt;code>Classifier&lt;/code> are also instances of the general &lt;code>Classifier&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Classifiers-Subclassification-_generalization.0" general="Core-Types-Specialization"/>
        <ownedAttribute xmi:id="Core-Classifiers-Subclassification-superclassifier" name="superclassifier" visibility="public" type="Core-Classifiers-Classifier" redefinedProperty="Core-Types-Specialization-general" association="Core-Classifiers-_packagedElement.0">
          <ownedComment xmi:id="Core-Classifiers-Subclassification-superclassifier-_ownedComment.0" annotatedElement="Core-Classifiers-Subclassification-superclassifier">
            <body>&lt;p>The more &lt;code>general&lt;/code> Classifier in this &lt;code>Subclassification&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Classifiers-Subclassification-superclassifier-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Classifiers-Subclassification-superclassifier-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Classifiers-Subclassification-subclassifier" name="subclassifier" visibility="public" type="Core-Classifiers-Classifier" redefinedProperty="Core-Types-Specialization-specific" association="Core-Classifiers-_packagedElement.2">
          <ownedComment xmi:id="Core-Classifiers-Subclassification-subclassifier-_ownedComment.0" annotatedElement="Core-Classifiers-Subclassification-subclassifier">
            <body>&lt;p>The more specific &lt;code>Classifier&lt;/code> in this &lt;code>Subclassification&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Classifiers-Subclassification-subclassifier-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Classifiers-Subclassification-subclassifier-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Classifiers-Subclassification-owningClassifier" name="owningClassifier" visibility="public" type="Core-Classifiers-Classifier" isDerived="true" redefinedProperty="Core-Types-Specialization-owningType" association="Core-Classifiers-_packagedElement.4">
          <ownedComment xmi:id="Core-Classifiers-Subclassification-owningClassifier-_ownedComment.0" annotatedElement="Core-Classifiers-Subclassification-owningClassifier">
            <body>&lt;p>The &lt;code>Classifier&lt;/code> that owns this &lt;code>Subclassification&lt;/code> relationship, which must also be its &lt;code>subclassifier&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Classifiers-Subclassification-owningClassifier-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Classifiers-Subclassification-owningClassifier-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Classifiers-_packagedElement.4" name="" visibility="private" memberEnd="Core-Classifiers-Subclassification-owningClassifier Core-Classifiers-Classifier-ownedSubclassification"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Core-Types" name="Types" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.0" name="" visibility="private" memberEnd="Core-Types-Type-output Core-Types-_packagedElement.0-typeWithOutput">
        <ownedEnd xmi:id="Core-Types-_packagedElement.0-typeWithOutput" name="typeWithOutput" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Core-Types-_packagedElement.0">
          <ownedComment xmi:id="Core-Types-_packagedElement.0-typeWithOutput-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.0-typeWithOutput">
            <body>&lt;p>A Type with a certain &lt;code>input&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.0-typeWithOutput-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.0-typeWithOutput-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.1" name="" visibility="private" memberEnd="Core-Types-Type-endFeature Core-Types-_packagedElement.1-typeWithEndFeature">
        <ownedEnd xmi:id="Core-Types-_packagedElement.1-typeWithEndFeature" name="typeWithEndFeature" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Core-Types-_packagedElement.1">
          <ownedComment xmi:id="Core-Types-_packagedElement.1-typeWithEndFeature-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.1-typeWithEndFeature">
            <body>&lt;p>A Type that has an EndFeatureMembership in which the &lt;code>endFeature&lt;/code> is a &lt;code>memberFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.1-typeWithEndFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.1-typeWithEndFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.2" name="" visibility="private" memberEnd="Core-Types-Type-ownedFeature Core-Features-Feature-owningType"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.3" name="" visibility="private" memberEnd="Core-Types-Type-input Core-Types-_packagedElement.3-typeWithInput">
        <ownedEnd xmi:id="Core-Types-_packagedElement.3-typeWithInput" name="typeWithInput" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Core-Types-_packagedElement.3">
          <ownedComment xmi:id="Core-Types-_packagedElement.3-typeWithInput-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.3-typeWithInput">
            <body>&lt;p>A Type with a certain &lt;code>output&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.3-typeWithInput-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.3-typeWithInput-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.4" name="" visibility="private" memberEnd="Core-Types-Type-ownedFeatureMembership Core-Types-FeatureMembership-owningType"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.5" name="" visibility="private" memberEnd="Core-Types-Type-ownedSpecialization Core-Types-Specialization-owningType"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Specialization" name="Specialization" visibility="public">
        <ownedComment xmi:id="Core-Types-Specialization-_ownedComment.0" annotatedElement="Core-Types-Specialization">
          <body>&lt;p>&lt;code>Specialization&lt;/code> is a &lt;code>Relationship&lt;/code> between two &lt;code>Types&lt;/code> that requires all instances of the &lt;code>specific&lt;/code> type to also be instances of the &lt;code>general&lt;/code> Type (i.e., the set of instances of the &lt;code>specific&lt;/code> Type is a &lt;em>subset&lt;/em> of those of the &lt;code>general&lt;/code> Type, which might be the same set).&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Types-Specialization-validateSpecificationSpecificNotConjugated" name="validateSpecificationSpecificNotConjugated" visibility="public" constrainedElement="Core-Types-Specialization">
          <ownedComment xmi:id="Core-Types-Specialization-validateSpecificationSpecificNotConjugated-_ownedComment.0" annotatedElement="Core-Types-Specialization-validateSpecificationSpecificNotConjugated">
            <body>&lt;p>The &lt;code>specific&lt;/code> Type of a Generalization cannot be a conjugated Type.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Specialization-validateSpecificationSpecificNotConjugated-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not specific.isConjugated</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Types-Specialization-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Types-Specialization-owningType" name="owningType" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-Specialization-specific Root-Elements-Relationship-owningRelatedElement" association="Core-Types-_packagedElement.5">
          <ownedComment xmi:id="Core-Types-Specialization-owningType-_ownedComment.0" annotatedElement="Core-Types-Specialization-owningType">
            <body>&lt;p>The &lt;code>Type&lt;/code> that is the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code> of this &lt;code>Specialization&lt;/code> and owns it as its &lt;code>owningRelatedElement&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Specialization-owningType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Specialization-owningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Specialization-general" name="general" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-target" association="Core-Types-_packagedElement.10">
          <ownedComment xmi:id="Core-Types-Specialization-general-_ownedComment.0" annotatedElement="Core-Types-Specialization-general">
            <body>&lt;p>A &lt;code>Type&lt;/code> with a superset of all instances of the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code>, which might be the same set.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Specialization-general-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Specialization-general-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Specialization-specific" name="specific" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-source" association="Core-Types-_packagedElement.8">
          <ownedComment xmi:id="Core-Types-Specialization-specific-_ownedComment.0" annotatedElement="Core-Types-Specialization-specific">
            <body>&lt;p>A &lt;code>Type&lt;/code> with a subset of all instances of the &lt;code>general&lt;/code> &lt;code>Type&lt;/code>, which might be the same set.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Specialization-specific-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Specialization-specific-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="Core-Types-FeatureDirectionKind" name="FeatureDirectionKind" visibility="public">
        <ownedComment xmi:id="Core-Types-FeatureDirectionKind-_ownedComment.0" annotatedElement="Core-Types-FeatureDirectionKind">
          <body>&lt;p>&lt;code>FeatureDirectionKind&lt;/code> enumerates the possible kinds of &lt;code>direction&lt;/code> that a &lt;code>Feature&lt;/code> may be given as a member of a &lt;code>Type&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedLiteral xmi:id="Core-Types-FeatureDirectionKind-in" name="in" visibility="public">
          <ownedComment xmi:id="Core-Types-FeatureDirectionKind-in-_ownedComment.0" annotatedElement="Core-Types-FeatureDirectionKind-in">
            <body>&lt;p>Values&amp;nbsp;of the &lt;code>Feature&lt;/code> on each&amp;nbsp;instance of its domain are&amp;nbsp;determined&amp;nbsp;externally to that instance and&amp;nbsp;used internally.&lt;/p>
</body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Core-Types-FeatureDirectionKind-inout" name="inout" visibility="public">
          <ownedComment xmi:id="Core-Types-FeatureDirectionKind-inout-_ownedComment.0" annotatedElement="Core-Types-FeatureDirectionKind-inout">
            <body>&lt;p>Values&amp;nbsp;of the &lt;code>Feature&lt;/code> on each&amp;nbsp;instance are&amp;nbsp;determined either as&amp;nbsp;&lt;em>in&lt;/em> or &lt;em>out&lt;/em>&amp;nbsp;directions, or both.&lt;/p>
</body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Core-Types-FeatureDirectionKind-out" name="out" visibility="public">
          <ownedComment xmi:id="Core-Types-FeatureDirectionKind-out-_ownedComment.0" annotatedElement="Core-Types-FeatureDirectionKind-out">
            <body>&lt;p>Values of the &lt;code>Feature&lt;/code> on each instance of its domain are&amp;nbsp;determined internally to that instance and used externally.&lt;/p>
</body>
          </ownedComment>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.8" name="" visibility="private" memberEnd="Core-Types-Specialization-specific Core-Types-_packagedElement.8-specialization">
        <ownedEnd xmi:id="Core-Types-_packagedElement.8-specialization" name="specialization" visibility="public" type="Core-Types-Specialization" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship" association="Core-Types-_packagedElement.8">
          <ownedComment xmi:id="Core-Types-_packagedElement.8-specialization-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.8-specialization">
            <body>&lt;p>The Specializations with a certain &lt;code>specific&lt;/code> Type.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.8-specialization-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.8-specialization-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.9" name="" visibility="private" memberEnd="Core-Types-FeatureMembership-ownedMemberFeature Core-Features-Feature-owningFeatureMembership"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.10" name="" visibility="private" memberEnd="Core-Types-Specialization-general Core-Types-_packagedElement.10-generalization">
        <ownedEnd xmi:id="Core-Types-_packagedElement.10-generalization" name="generalization" visibility="public" type="Core-Types-Specialization" redefinedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Types-_packagedElement.10">
          <ownedComment xmi:id="Core-Types-_packagedElement.10-generalization-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.10-generalization">
            <body>&lt;p>The Specializations with a certain &lt;code>general&lt;code> Type.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.10-generalization-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.10-generalization-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Type" name="Type" visibility="public">
        <ownedComment xmi:id="Core-Types-Type-_ownedComment.0" annotatedElement="Core-Types-Type">
          <body>&lt;p>A &lt;code>Type&lt;/code> is a &lt;code>Namespace&lt;/code> that is the most general kind of &lt;code>Element&lt;/code> supporting the semantics of classification. A &lt;code>Type&lt;/code> may be a &lt;code>Classifier&lt;/code> or a &lt;code>Feature&lt;/code>, defining conditions on what is classified by the &lt;code>Type&lt;/code> (see also the description of &lt;code>isSufficient&lt;/code>).&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedSpecialization" name="deriveTypeOwnedSpecialization" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedSpecialization-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedSpecialization">
            <body>&lt;p>The &lt;code>ownedSpecializations&lt;/code> of a &lt;code>Type&lt;/code> are the &lt;code>ownedRelationships&lt;/code> that are &lt;code>Specializations&lt;/code> whose &lt;code>special&lt;/code> &lt;code>Type&lt;/code> is the owning &lt;code>Type&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedSpecialization = ownedRelationship->selectByKind(Specialization)->
    select(s | s.special = self)
    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeMultiplicity" name="deriveTypeMultiplicity" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeMultiplicity-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeMultiplicity">
            <body>&lt;p>If a &lt;code>Type&lt;/code> has an owned &lt;code>Multiplicity&lt;/code>, then that is its &lt;code>multiplicity&lt;/code>. Otherwise, if the &lt;code>Type&lt;/code> has an &lt;code>ownedSpecialization&lt;/code>, then its &lt;code>multiplicity&lt;/code> is the &lt;code>multiplicity&lt;/code> of the &lt;code>general&lt;/code> &lt;code>Type&lt;/code> of that &lt;code>Specialization&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeMultiplicity-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>multiplicity = 
    let ownedMultiplicities: Sequence(Multiplicity) =
        ownedMember->selectByKind(Multiplicity) in
    if ownedMultiplicities->isEmpty() then null
    else ownedMultiplicities->first()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedFeatureMembership" name="deriveTypeOwnedFeatureMembership" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedFeatureMembership-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedFeatureMembership">
            <body>&lt;p>The &lt;code>ownedFeatureMemberships&lt;/code> of a &lt;code>Type&lt;/code> are its &lt;code>ownedMemberships&lt;/code> that are &lt;code>FeatureMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedFeatureMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeatureMembership = ownedRelationship->selectByKind(FeatureMembership)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedConjugator" name="deriveTypeOwnedConjugator" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedConjugator-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedConjugator">
            <body>&lt;p>The &lt;code>ownedConjugator&lt;/code> of a &lt;code>Type&lt;/code> is the its single &lt;code>ownedRelationship&lt;/code> that is a &lt;code>Conjugation&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedConjugator-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let ownedConjugators: Sequence(Conjugator) = 
    ownedRelationship->selectByKind(Conjugation) in
    ownedConjugator = 
        if ownedConjugators->isEmpty() then null 
        else ownedConjugators->at(1) endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOutput" name="deriveTypeOutput" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOutput-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOutput">
            <body>&lt;p>If this Type is conjugated, then its &lt;code>outputs&lt;/code> are the &lt;code>inputs&lt;/code> of the &lt;code>originalType&lt;/code>. Otherwise, its &lt;code>outputs&lt;/code> are all &lt;code>features&lt;/code> with a &lt;code>direction&lt;/code> of &lt;code>out&lt;/code> or &lt;code>inout&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOutput-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>output =
    if isConjugated then 
        conjugator.originalType.input
    else 
        feature->select(direction = out or direction = inout)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeInput" name="deriveTypeInput" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeInput-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeInput">
            <body>&lt;p>If this &lt;code>Type&lt;/code> is conjugated, then its &lt;code>inputs&lt;/code> are the &lt;code>outputs&lt;/code> of the &lt;code>originalType&lt;/code>. Otherwise, its &lt;code>inputs&lt;/code> are all &lt;code>features&lt;/code> with a &lt;code>direction&lt;/code> of &lt;code>in&lt;/code> or &lt;code>inout&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeInput-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>input = 
    if isConjugated then 
        conjugator.originalType.output
    else 
        feature->select(direction = _'in' or direction = inout)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeInheritedMembership" name="deriveTypeInheritedMembership" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeInheritedMembership-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeInheritedMembership">
            <body>&lt;p>The &lt;code>inheritedMemberships&lt;code> of a &lt;code>Type&lt;/code> are determined by the &lt;code>inheritedMemberships()&lt;/code> operation.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeInheritedMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>inheritedMembership = inheritedMemberships(Set{})</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-checkTypeSpecialization" name="checkTypeSpecialization" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-checkTypeSpecialization-_ownedComment.0" annotatedElement="Core-Types-Type-checkTypeSpecialization">
            <body>&lt;p>A Type must directly or indirectly specialize &lt;code>&lt;em>Base::Anything&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-checkTypeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Base::Anything')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeDirectedFeature" name="deriveTypeDirectedFeature" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeDirectedFeature-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeDirectedFeature">
            <body>&lt;p>The &lt;code>directedFeatures&lt;/code> of a &lt;code>Type&lt;/code> are those &lt;code>features&lt;/code> for which the &lt;code>direction&lt;/code> is non-null.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeDirectedFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>directedFeature = feature->select(f | directionOf(f) &lt;> null)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeFeature" name="deriveTypeFeature" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeFeature-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeFeature">
            <body>&lt;p>The &lt;code>features&lt;/code> of a &lt;code>Type&lt;/code> are the &lt;code>ownedMemberFeatures&lt;/code> of its &lt;code>featureMemberships&lt;/code>.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>feature = featureMembership.ownedMemberFeature</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeFeatureMembership" name="deriveTypeFeatureMembership" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeFeatureMembership-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeFeatureMembership">
            <body>&lt;p>The &lt;code>featureMemberships&lt;/code> of a &lt;code>Type&lt;/code> is the union of the &lt;code>ownedFeatureMemberships&lt;/code> and those &lt;code>inheritedMemberships&lt;/code> that are &lt;code>FeatureMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeFeatureMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership = ownedMembership->union(
    inheritedMembership->selectByKind(FeatureMembership))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedFeature" name="deriveTypeOwnedFeature" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedFeature-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedFeature">
            <body>&lt;p>The &lt;code>ownedFeatures&lt;/code> of a Type are the &lt;code>ownedMemberFeatures&lt;/code> of its &lt;code>ownedFeatureMemberships&lt;/code>.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedFeature-_specification" name="" visibility="public">
            <language>English</language>
            <body>ownedFeature = ownedFeatureMembership.ownedMemberFeature</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeDifferencingType" name="deriveTypeDifferencingType" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeDifferencingType-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeDifferencingType">
            <body>&lt;p>The &lt;code>differencingTypes&lt;/code> of a Type are the &lt;code>differencingTypes&lt;/code> of its &lt;code>ownedDifferencings&lt;/code>, in the same order.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeDifferencingType-_specification" name="" visibility="public">
            <language>English</language>
            <body>differencingType = ownedDifferencing.differencingType</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-validateTypeIntersectingTypesNotSelf" name="validateTypeIntersectingTypesNotSelf" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-validateTypeIntersectingTypesNotSelf-_ownedComment.0" annotatedElement="Core-Types-Type-validateTypeIntersectingTypesNotSelf">
            <body>&lt;p>A Type cannot be one of its own &lt;code>intersectingTypes&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-validateTypeIntersectingTypesNotSelf-_specification" name="" visibility="public">
            <language>English</language>
            <body>intersectingType->excludes(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-validateTypeDifferencingTypesNotSelf" name="validateTypeDifferencingTypesNotSelf" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-validateTypeDifferencingTypesNotSelf-_ownedComment.0" annotatedElement="Core-Types-Type-validateTypeDifferencingTypesNotSelf">
            <body>&lt;p>A Type cannot be one of its own &lt;code>differencingTypes&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-validateTypeDifferencingTypesNotSelf-_specification" name="" visibility="public">
            <language>English</language>
            <body>differencingType->excludes(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeUnioningType" name="deriveTypeUnioningType" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeUnioningType-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeUnioningType">
            <body>&lt;p>The &lt;code>unioningTypes&lt;/code> of a &lt;code>Type&lt;/code> are the &lt;code>unioningTypes&lt;/code> of its &lt;code>ownedUnionings&lt;/code>.&lt;p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeUnioningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>unioningType = ownedUnioning.unioningType</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-validateTypeUnioningTypesNotSelf" name="validateTypeUnioningTypesNotSelf" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-validateTypeUnioningTypesNotSelf-_ownedComment.0" annotatedElement="Core-Types-Type-validateTypeUnioningTypesNotSelf">
            <body>&lt;p>A Type cannot be one of its own &lt;code>unioningTypes&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-validateTypeUnioningTypesNotSelf-_specification" name="" visibility="public">
            <language>English</language>
            <body>unioningType->excludes(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeIntersectingType" name="deriveTypeIntersectingType" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeIntersectingType-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeIntersectingType">
            <body>&lt;p>The &lt;code>intersectingTypes&lt;/code> of a &lt;code>Type&lt;/code> are the &lt;code>intersectingTypes&lt;/code> of its &lt;code>ownedIntersectings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeIntersectingType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>intersectingType = ownedIntersecting.intersectingType</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-validateTypeAtMostOneConjugator" name="validateTypeAtMostOneConjugator" visibility="public" constrainedElement="Core-Types-Type">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-validateTypeAtMostOneConjugator-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRelationship->selectByKind(Conjugator)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-validateTypeOwnedMultiplicity" name="validateTypeOwnedMultiplicity" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-validateTypeOwnedMultiplicity-_ownedComment.0" annotatedElement="Core-Types-Type-validateTypeOwnedMultiplicity">
            <body>&lt;p>A &lt;code>Type&lt;/code> may have at most one &lt;code>ownedMember&lt;/code> that is a &lt;code>Multiplicity&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-validateTypeOwnedMultiplicity-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMember->selectByKind(Multiplicity)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeEndFeature" name="deriveTypeEndFeature" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeEndFeature-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeEndFeature">
            <body>&lt;p>The &lt;code>endFeatures&lt;/code> of a &lt;code>Type&lt;/code> are all its &lt;code>features&lt;/code> for which &lt;code>isEnd = true&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeEndFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>endFeature = feature->select(isEnd)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedDisjoining" name="deriveTypeOwnedDisjoining" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedDisjoining-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedDisjoining">
            <body>&lt;p>The &lt;code>ownedDisjoinings&lt;/code> of a &lt;code>Type&lt;/code> are the &lt;code>ownedRelationships&lt;/code> that are &lt;code>Disjoinings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedDisjoining-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRelationship->selectByKind(Disjoining)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedUnioning" name="deriveTypeOwnedUnioning" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedUnioning-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedUnioning">
            <body>&lt;p>The &lt;code>ownedUnionings&lt;/code> of a &lt;code>Type&lt;/code> are the &lt;code>ownedRelationships&lt;/code> that are &lt;code>Unionings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedUnioning-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRelationship->selectByKind(Unioning)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedIntersecting" name="deriveTypeOwnedIntersecting" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedIntersecting-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedIntersecting">
            <body>&lt;p>The &lt;code>ownedIntersectings&lt;/code> of a &lt;code>Type&lt;/code> are the &lt;code>ownedRelationships&lt;/code> that are &lt;code>Intersectings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedIntersecting-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRelationship->selectByKind(Intersecting)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedDifferencing" name="deriveTypeOwnedDifferencing" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedDifferencing-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedDifferencing">
            <body>&lt;p>The &lt;code>ownedDifferencings&lt;/code> of a &lt;code>Type&lt;/code> are its &lt;code>ownedRelationships&lt;/code> that are &lt;code>Differencings&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedDifferencing-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRelationship->selectByKind(Differencing)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeOwnedEndFeature" name="deriveTypeOwnedEndFeature" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeOwnedEndFeature-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeOwnedEndFeature">
            <body>&lt;p>The &lt;code>ownedEndFeatures&lt;/code> of a &lt;code>Type&lt;/code> are all its &lt;code>ownedFeatures&lt;/code> for which &lt;code>isEnd = true&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeOwnedEndFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedEndFeature = ownedFeature->select(isEnd)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Type-deriveTypeInheritedFeature" name="deriveTypeInheritedFeature" visibility="public" constrainedElement="Core-Types-Type">
          <ownedComment xmi:id="Core-Types-Type-deriveTypeInheritedFeature-_ownedComment.0" annotatedElement="Core-Types-Type-deriveTypeInheritedFeature">
            <body>&lt;p>The &lt;code>inheritedFeatures&lt;/code> of this &lt;code>Type&lt;/code> are the &lt;code>memberFeatures&lt;/code> of the &lt;code>inheritedMemberships&lt;/code> that are &lt;code>FeatureMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-deriveTypeInheritedFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>inheritedFeature = inheritedMemberships->
    selectByKind(FeatureMembership).memberFeature</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Types-Type-_generalization.0" general="Root-Namespaces-Namespace"/>
        <ownedAttribute xmi:id="Core-Types-Type-ownedSpecialization" name="ownedSpecialization" visibility="public" type="Core-Types-Specialization" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Core-Types-_packagedElement.8-specialization Root-Elements-Element-ownedRelationship" association="Core-Types-_packagedElement.5">
          <ownedComment xmi:id="Core-Types-Type-ownedSpecialization-_ownedComment.0" annotatedElement="Core-Types-Type-ownedSpecialization">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Specializations&lt;/code>, for which the &lt;code>Type&lt;/code> is the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedSpecialization-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedSpecialization-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedFeatureMembership" name="ownedFeatureMembership" visibility="public" type="Core-Types-FeatureMembership" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMembership Core-Types-Type-featureMembership Core-Features-_packagedElement.33-featuringOfType" association="Core-Types-_packagedElement.4">
          <ownedComment xmi:id="Core-Types-Type-ownedFeatureMembership-_ownedComment.0" annotatedElement="Core-Types-Type-ownedFeatureMembership">
            <body>&lt;p>The &lt;code>ownedMemberships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>FeatureMemberships&lt;/code>, for which the &lt;code>Type&lt;/code> is the &lt;code>owningType&lt;/code>. Each such &lt;code>FeatureMembership&lt;/code> identifies an &lt;code>ownedFeature&lt;/code> of the &lt;code>Type&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedFeatureMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedFeatureMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-feature" name="feature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-member" association="Core-Types-_packagedElement.12">
          <ownedComment xmi:id="Core-Types-Type-feature-_ownedComment.0" annotatedElement="Core-Types-Type-feature">
            <body>&lt;p>The &lt;code>ownedMemberFeatures&lt;/code> of the &lt;code>featureMemberships&lt;/code> of this &lt;code>Type&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-feature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-feature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedFeature" name="ownedFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Core-Types-_packagedElement.2">
          <ownedComment xmi:id="Core-Types-Type-ownedFeature-_ownedComment.0" annotatedElement="Core-Types-Type-ownedFeature">
            <body>&lt;p>The &lt;code>ownedMemberFeatures&lt;/code> of the &lt;code>ownedFeatureMemberships&lt;/code> of this &lt;code>Type&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-input" name="input" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-directedFeature" association="Core-Types-_packagedElement.3">
          <ownedComment xmi:id="Core-Types-Type-input-_ownedComment.0" annotatedElement="Core-Types-Type-input">
            <body>&lt;p>All &lt;code>features&lt;/code> related to this &lt;code>Type&lt;/code> by &lt;code>FeatureMemberships&lt;/code> that have &lt;code>direction&lt;/code> &lt;code>in&lt;code> or &lt;code>inout&lt;code>.&lt;/code>&lt;/code>&lt;/code>&lt;/code>&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-input-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-input-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-output" name="output" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-directedFeature" association="Core-Types-_packagedElement.0">
          <ownedComment xmi:id="Core-Types-Type-output-_ownedComment.0" annotatedElement="Core-Types-Type-output">
            <body>&lt;p>All &lt;code>features&lt;/code> related to this &lt;code>Type&lt;/code> by &lt;code>FeatureMemberships&lt;/code> that have &lt;code>direction&lt;/code> &lt;code>out&lt;code> or &lt;code>inout&lt;code>.&lt;/code>&lt;/code>&lt;/code>&lt;/code>&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-output-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-output-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-isAbstract" name="isAbstract" visibility="public">
          <ownedComment xmi:id="Core-Types-Type-isAbstract-_ownedComment.0" annotatedElement="Core-Types-Type-isAbstract">
            <body>&lt;p>Indicates whether instances of this &lt;code>Type&lt;/code> must also be instances of at least one of its specialized &lt;code>Types&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Types-Type-isAbstract-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-inheritedMembership" name="inheritedMembership" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-membership" association="Core-Types-_packagedElement.14">
          <ownedComment xmi:id="Core-Types-Type-inheritedMembership-_ownedComment.0" annotatedElement="Core-Types-Type-inheritedMembership">
            <body>&lt;p>All &lt;code>Memberships&lt;/code> inherited by this &lt;code>Type&lt;/code> via &lt;code>Specialization&lt;/code> or &lt;code>Conjugation&lt;/code>. These are included in the derived union for the &lt;code>memberships&lt;/code> of the &lt;code>Type&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-inheritedMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-inheritedMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-endFeature" name="endFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-feature" association="Core-Types-_packagedElement.1">
          <ownedComment xmi:id="Core-Types-Type-endFeature-_ownedComment.0" annotatedElement="Core-Types-Type-endFeature">
            <body>&lt;p>All &lt;code>features&lt;/code> of this &lt;code>Type&lt;/code> with &lt;code>isEnd = true&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-endFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-endFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedEndFeature" name="ownedEndFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-endFeature Core-Types-Type-ownedFeature" association="Core-Types-_packagedElement.15">
          <ownedComment xmi:id="Core-Types-Type-ownedEndFeature-_ownedComment.0" annotatedElement="Core-Types-Type-ownedEndFeature">
            <body>&lt;p>All &lt;code>endFeatures&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>ownedFeatures&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedEndFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedEndFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-isSufficient" name="isSufficient" visibility="public">
          <ownedComment xmi:id="Core-Types-Type-isSufficient-_ownedComment.0" annotatedElement="Core-Types-Type-isSufficient">
            <body>&lt;p>Whether all things that meet the classification conditions of this &lt;code>Type&lt;/code> must be classified by the &lt;code>Type&lt;/code>.&lt;/p>

&lt;p>(A &lt;code>Type&lt;/code>&amp;nbsp;gives conditions that must be met by whatever it classifies, but when &lt;code>isSufficient&lt;/code> is false, things may meet those conditions but still not be classified by the &lt;code>Type&lt;/code>. For example, a Type &lt;code>&lt;em>Car&lt;/em>&lt;/code> that is not sufficient could require everything it classifies to have four wheels, but not all four wheeled things would need to be cars. However, if the &lt;code>Type&lt;/code> &lt;code>&lt;em>Car&lt;/em>&lt;/code> were sufficient, it would classify all four-wheeled things.)&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Core-Types-Type-isSufficient-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedConjugator" name="ownedConjugator" visibility="public" type="Core-Types-Conjugation" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-Element-ownedRelationship Core-Types-_packagedElement.20-conjugator" association="Core-Types-_packagedElement.17">
          <ownedComment xmi:id="Core-Types-Type-ownedConjugator-_ownedComment.0" annotatedElement="Core-Types-Type-ownedConjugator">
            <body>&lt;p>A &lt;code>Conjugation&lt;/code> owned by this &lt;code>Type&lt;/code> for which the &lt;code>Type&lt;/code> is the &lt;code>originalType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedConjugator-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedConjugator-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-isConjugated" name="isConjugated" visibility="public" isDerived="true">
          <ownedComment xmi:id="Core-Types-Type-isConjugated-_ownedComment.0" annotatedElement="Core-Types-Type-isConjugated">
            <body>&lt;p>Indicates whether this &lt;code>Type&lt;/code> has an &lt;code>ownedConjugator&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-inheritedFeature" name="inheritedFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-feature" association="Core-Types-_packagedElement.16">
          <ownedComment xmi:id="Core-Types-Type-inheritedFeature-_ownedComment.0" annotatedElement="Core-Types-Type-inheritedFeature">
            <body>&lt;p>All the &lt;code>memberFeatures&lt;/code> of the &lt;code>inheritedMemberships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>FeatureMemberships&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-inheritedFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-inheritedFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-multiplicity" name="multiplicity" visibility="public" type="Core-Types-Multiplicity" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Core-Features-_packagedElement.13">
          <ownedComment xmi:id="Core-Types-Type-multiplicity-_ownedComment.0" annotatedElement="Core-Types-Type-multiplicity">
            <body>&lt;p>An &lt;code>ownedMember&lt;/code> of this &lt;code>Type&lt;/code> that is a &lt;code>Multiplicity&lt;/code>, which constraints the cardinality of the &lt;code>Type&lt;/code>. If there is no such &lt;code>ownedMember&lt;/code>, then the cardinality of this &lt;code>Type&lt;/code> is constrained by all the &lt;code>Multiplicity&lt;/code> constraints applicable to any direct supertypes.&lt;/p>

&lt;p>&amp;nbsp;&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-multiplicity-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-multiplicity-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-unioningType" name="unioningType" visibility="public" type="Core-Types-Type" isOrdered="true" isDerived="true" association="Core-Types-_packagedElement.29">
          <ownedComment xmi:id="Core-Types-Type-unioningType-_ownedComment.0" annotatedElement="Core-Types-Type-unioningType">
            <body>&lt;p>The interpretations of a &lt;code>Type&lt;/code> with &lt;code>unioningTypes&lt;/code> are asserted to be the same as those of all the &lt;code>unioningTypes&lt;/code> together, which are the &lt;code>Types&lt;/code> derived from the &lt;code>unioningType&lt;/code> of the &lt;code>ownedUnionings&lt;/code> of this &lt;code>Type&lt;/code>. For example, a &lt;code>Classifier&lt;/code> for people might be the union of &lt;code>Classifiers&lt;/code> for all the sexes. Similarly, a feature for people&amp;#39;s children might be the union of features dividing them in the same ways as people in general.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-unioningType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-unioningType-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedIntersecting" name="ownedIntersecting" visibility="public" type="Core-Types-Intersecting" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-Element-ownedRelationship Root-Elements-_packagedElement.5-sourceRelationship" association="Core-Types-_packagedElement.38">
          <ownedComment xmi:id="Core-Types-Type-ownedIntersecting-_ownedComment.0" annotatedElement="Core-Types-Type-ownedIntersecting">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Intersectings&lt;/code>, have the &lt;code>Type&lt;/code> as their &lt;code>typeIntersected&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedIntersecting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedIntersecting-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-intersectingType" name="intersectingType" visibility="public" type="Core-Types-Type" isOrdered="true" isDerived="true" association="Core-Types-_packagedElement.31">
          <ownedComment xmi:id="Core-Types-Type-intersectingType-_ownedComment.0" annotatedElement="Core-Types-Type-intersectingType">
            <body>&lt;p>The interpretations of a &lt;code>Type&lt;/code> with &lt;code>intersectingTypes&lt;/code> are asserted to be those in common among the &lt;code>intersectingTypes&lt;/code>, which are the &lt;code>Types&lt;/code> derived from the &lt;code>intersectingType&lt;/code> of the &lt;code>ownedIntersectings&lt;/code> of this &lt;code>Type&lt;/code>. For example, a &lt;code>Classifier&lt;/code> might be an intersection of &lt;code>Classifiers&lt;/code> for people of a particular sex and of a particular nationality. Similarly, a feature for people&amp;#39;s children of a particular sex might be the intersection of a &lt;code>Feature&lt;/code> for their children and a &lt;code>Classifier&lt;/code> for people of that sex (because the interpretations of the children &lt;code>Feature&lt;/code> that identify those of that sex are also interpretations of the Classifier for that sex).&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-intersectingType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-intersectingType-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedUnioning" name="ownedUnioning" visibility="public" type="Core-Types-Unioning" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-Element-ownedRelationship Root-Elements-_packagedElement.5-sourceRelationship" association="Core-Types-_packagedElement.32">
          <ownedComment xmi:id="Core-Types-Type-ownedUnioning-_ownedComment.0" annotatedElement="Core-Types-Type-ownedUnioning">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Unionings&lt;/code>, having the &lt;code>Type&lt;/code> as their &lt;code>typeUnioned&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedUnioning-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedUnioning-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedDisjoining" name="ownedDisjoining" visibility="public" type="Core-Types-Disjoining" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-Element-ownedRelationship Core-Types-_packagedElement.25-disjoiningTypeDisjoining" association="Core-Types-_packagedElement.26">
          <ownedComment xmi:id="Core-Types-Type-ownedDisjoining-_ownedComment.0" annotatedElement="Core-Types-Type-ownedDisjoining">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Disjoinings&lt;/code>, for which the &lt;code>Type&lt;/code> is the &lt;code>typeDisjoined&lt;/code> &lt;code>Type&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedDisjoining-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedDisjoining-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-featureMembership" name="featureMembership" visibility="public" type="Core-Types-FeatureMembership" isOrdered="true" isDerived="true" association="Core-Types-_packagedElement.27">
          <ownedComment xmi:id="Core-Types-Type-featureMembership-_ownedComment.0" annotatedElement="Core-Types-Type-featureMembership">
            <body>&lt;p>The &lt;code>FeatureMemberships&lt;/code> for &lt;code>features&lt;/code> of this &lt;code>Type&lt;/code>, which include all &lt;code>ownedFeatureMemberships&lt;/code> and those &lt;code>inheritedMemberships&lt;/code> that are &lt;code>FeatureMemberships&lt;/code> (but does &lt;em>not&lt;/em> include any &lt;code>importedMemberships&lt;/code>).&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-featureMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-featureMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-differencingType" name="differencingType" visibility="public" type="Core-Types-Type" isOrdered="true" isDerived="true" association="Core-Types-_packagedElement.33">
          <ownedComment xmi:id="Core-Types-Type-differencingType-_ownedComment.0" annotatedElement="Core-Types-Type-differencingType">
            <body>&lt;p>The interpretations of a &lt;code>Type&lt;/code> with &lt;code>differencingTypes&lt;/code> are asserted to be those of the first of those &lt;code>Types&lt;/code>, but not including those of the remaining &lt;code>Types&lt;/code>. For example, a &lt;code>Classifier&lt;/code> might be the difference of a &lt;code>Classifier&lt;/code> for people and another for people of a particular nationality, leaving people who are not of that nationality. Similarly, a feature of people might be the difference between a feature for their children and a &lt;code>Classifier&lt;/code> for people of a particular sex, identifying their children not of that sex (because the interpretations of the children &lt;code>Feature&lt;/code> that identify those of that sex are also interpretations of the &lt;code>Classifier&lt;/code> for that sex).&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-differencingType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-differencingType-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-ownedDifferencing" name="ownedDifferencing" visibility="public" type="Core-Types-Differencing" isOrdered="true" aggregation="composite" isDerived="true" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship Root-Elements-Element-ownedRelationship" association="Core-Types-_packagedElement.35">
          <ownedComment xmi:id="Core-Types-Type-ownedDifferencing-_ownedComment.0" annotatedElement="Core-Types-Type-ownedDifferencing">
            <body>&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Differencings&lt;/code>, having this &lt;code>Type&lt;/code> as their &lt;code>typeDifferenced&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-ownedDifferencing-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-ownedDifferencing-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Type-directedFeature" name="directedFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-feature" association="Core-Types-_packagedElement.24">
          <ownedComment xmi:id="Core-Types-Type-directedFeature-_ownedComment.0" annotatedElement="Core-Types-Type-directedFeature">
            <body>&lt;p>The &lt;code>features&lt;/code> of this &lt;code>Type&lt;/code> that have a non-null &lt;code>direction&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-directedFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-directedFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Core-Types-Type-visibleMemberships" name="visibleMemberships" visibility="public" bodyCondition="Core-Types-Type-visibleMemberships-unnamed1" redefinedOperation="Root-Namespaces-Namespace-visibleMemberships">
          <ownedComment xmi:id="Core-Types-Type-visibleMemberships-_ownedComment.0" annotatedElement="Core-Types-Type-visibleMemberships">
            <body>&lt;p>The visible &lt;code>Memberships&lt;/code> of a &lt;code>Type&lt;/code> include &lt;code>inheritedMemberships&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Core-Types-Type-visibleMemberships-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-visibleMemberships-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let visibleInheritedMemberships : Sequence(Membership) = 
    inheritedMemberships(excluded)->
        select(includeAll or visibility = VisibilityKind::public) in
self.oclAsType(Namespace).visibleMemberships(excluded, isRecursive, includeAll)->
    union(visibleInheritedMemberships)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Types-Type-visibleMemberships-excluded" name="excluded" visibility="public" type="Root-Namespaces-Namespace">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-visibleMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-visibleMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Core-Types-Type-visibleMemberships-isRecursive" name="isRecursive" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Core-Types-Type-visibleMemberships-includeAll" name="includeAll" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Core-Types-Type-visibleMemberships-_ownedParameter.3" name="" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-visibleMemberships-_ownedParameter.3-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-visibleMemberships-_ownedParameter.3-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Types-Type-inheritedMemberships" name="inheritedMemberships" visibility="public">
          <ownedComment xmi:id="Core-Types-Type-inheritedMemberships-_ownedComment.0" annotatedElement="Core-Types-Type-inheritedMemberships">
            <body>&lt;p>Return the inherited &lt;code>Memberships&lt;/code> of this &lt;code>Type&lt;/code>, excluding those supertypes in the &lt;code>excluded&lt;/code> set.&lt;/p>
</body>
          </ownedComment>
          <ownedParameter xmi:id="Core-Types-Type-inheritedMemberships-excluded" name="excluded" visibility="public" type="Core-Types-Type">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-inheritedMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-inheritedMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Core-Types-Type-inheritedMemberships-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-inheritedMemberships-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-inheritedMemberships-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Types-Type-directionOf" name="directionOf" visibility="public" bodyCondition="Core-Types-Type-directionOf-unnamed1">
          <ownedComment xmi:id="Core-Types-Type-directionOf-_ownedComment.0" annotatedElement="Core-Types-Type-directionOf">
            <body>&lt;p>If the given &lt;code>feature&lt;/code> is a &lt;code>feature&lt;/code> of this &lt;code>Type&lt;/code>, then return its direction relative to this &lt;code>Type&lt;/code>, taking conjugation into account.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Core-Types-Type-directionOf-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-directionOf-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if input->includes(feature) and output->includes(feature) then 
    FeatureDirectionKind::inout
else if input->includes(feature) then 
    FeatureDirectionKind::_'in'
else if output->includes(feature) then 
    FeatureDirectionKind::out
else 
    null 
endif endif endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Types-Type-directionOf-feature" name="feature" visibility="public" type="Core-Features-Feature"/>
          <ownedParameter xmi:id="Core-Types-Type-directionOf-_ownedParameter.1" name="" visibility="public" type="Core-Types-FeatureDirectionKind" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-directionOf-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-directionOf-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Types-Type-allSupertypes" name="allSupertypes" visibility="public" bodyCondition="Core-Types-Type-allSupertypes-unnamed1">
          <ownedComment xmi:id="Core-Types-Type-allSupertypes-_ownedComment.0" annotatedElement="Core-Types-Type-allSupertypes">
            <body>&lt;p>Return all &lt;code>Types&lt;/code> related to this &lt;code>Type&lt;/code> as supertypes directly or transitively by &lt;code>Specialization&lt;/code> &lt;code>Relationships&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Core-Types-Type-allSupertypes-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-allSupertypes-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>ownedSpecialization->
    closure(general.ownedSpecialization).general->
    including(self)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Types-Type-allSupertypes-result" name="result" visibility="public" type="Core-Types-Type" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Type-allSupertypes-result-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Type-allSupertypes-result-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Types-Type-specializes" name="specializes" visibility="public" bodyCondition="Core-Types-Type-specializes-unnamed1">
          <ownedComment xmi:id="Core-Types-Type-specializes-_ownedComment.0" annotatedElement="Core-Types-Type-specializes">
            <body>&lt;p>Check whether this &lt;code>Type&lt;/code> is a direct or indirect specialization of the given &lt;code>supertype&lt;code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Core-Types-Type-specializes-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-specializes-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if isConjugated then 
    ownedConjugator.originalType.specializes(supertype)
else
    allSupertypes()->includes(supertype)
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Types-Type-specializes-supertype" name="supertype" visibility="public" type="Core-Types-Type"/>
          <ownedParameter xmi:id="Core-Types-Type-specializes-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Core-Types-Type-specializesFromLibrary" name="specializesFromLibrary" visibility="public" bodyCondition="Core-Types-Type-specializesFromLibrary-unnamed1">
          <ownedComment xmi:id="Core-Types-Type-specializesFromLibrary-_ownedComment.0" annotatedElement="Core-Types-Type-specializesFromLibrary">
            <body>&lt;p>Check whether this &lt;code>Type&lt;/code> is a direct or indirect specialization of the named library &lt;code>Type&lt;/code>. &lt;code>libraryTypeName&lt;/code> must conform to the syntax of a KerML qualified name and must resolve to a &lt;code>Type&lt;/code> in global scope.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Core-Types-Type-specializesFromLibrary-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Type-specializesFromLibrary-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let mem : Membership = resolveGlobal(libraryTypeName) in
mem &lt;> null and mem.memberElement.oclIsKindOf(Type) and
specializes(mem.memberElement.oclAsType(Type))</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Core-Types-Type-specializesFromLibrary-libraryTypeName" name="libraryTypeName" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Core-Types-Type-specializesFromLibrary-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.12" name="" visibility="private" memberEnd="Core-Types-_packagedElement.12-typeWithFeature Core-Types-Type-feature">
        <ownedEnd xmi:id="Core-Types-_packagedElement.12-typeWithFeature" name="typeWithFeature" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.5-namespace" association="Core-Types-_packagedElement.12">
          <ownedComment xmi:id="Core-Types-_packagedElement.12-typeWithFeature-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.12-typeWithFeature">
            <body>&lt;p>A Type that owns or inherits a FeatureMembership Relationship with the &lt;code>feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.12-typeWithFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.12-typeWithFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-FeatureMembership" name="FeatureMembership" visibility="public">
        <ownedComment xmi:id="Core-Types-FeatureMembership-_ownedComment.0" annotatedElement="Core-Types-FeatureMembership">
          <body>&lt;p>A &lt;code>FeatureMembership&lt;/code> is an &lt;code>OwningMembership&lt;/code> between a &lt;code>Feature&lt;/code> in an &lt;code>owningType&lt;/code> that is also a &lt;code>Featuring&lt;/code> &lt;code>Relationship&lt;code? between the &lt;code>Feature&lt;/code> and the &lt;code>Type&lt;/code>, in which the &lt;code>featuringType&lt;/code> is the &lt;code>source&lt;/code> and the &lt;code>featureOfType&lt;/code> is the &lt;code>target&lt;/code>. A &lt;code>FeatureMembership&lt;/code> is always owned by its &lt;code>owningType&lt;/code>, which is the &lt;code>featuringType&lt;/code> for the &lt;code>FeatureMembership&lt;/code> considered as a &lt;code>Featuring&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Types-FeatureMembership-_generalization.0" general="Root-Namespaces-OwningMembership"/>
        <generalization xmi:id="Core-Types-FeatureMembership-_generalization.1" general="Core-Features-Featuring"/>
        <ownedAttribute xmi:id="Core-Types-FeatureMembership-owningType" name="owningType" visibility="public" type="Core-Types-Type" isDerived="true" redefinedProperty="Root-Namespaces-Membership-membershipOwningNamespace Core-Features-Featuring-type" subsettedProperty="Core-Types-_packagedElement.27-type" association="Core-Types-_packagedElement.4">
          <ownedComment xmi:id="Core-Types-FeatureMembership-owningType-_ownedComment.0" annotatedElement="Core-Types-FeatureMembership-owningType">
            <body>&lt;p>The &lt;code>Type&lt;/code> that owns this &lt;code>FeatureMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-FeatureMembership-owningType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-FeatureMembership-owningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-FeatureMembership-ownedMemberFeature" name="ownedMemberFeature" visibility="public" type="Core-Features-Feature" aggregation="composite" isDerived="true" redefinedProperty="Root-Namespaces-OwningMembership-ownedMemberElement Core-Features-Featuring-feature" association="Core-Types-_packagedElement.9">
          <ownedComment xmi:id="Core-Types-FeatureMembership-ownedMemberFeature-_ownedComment.0" annotatedElement="Core-Types-FeatureMembership-ownedMemberFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that this &lt;code>FeatureMembership&lt;/code> relates to its &lt;code>owningType&lt;/code>, making it an &lt;code>ownedFeature&lt;/code> of the &lt;code>owningType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-FeatureMembership-ownedMemberFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-FeatureMembership-ownedMemberFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.14" name="" visibility="private" memberEnd="Core-Types-Type-inheritedMembership Core-Types-_packagedElement.14-inheritingType">
        <ownedEnd xmi:id="Core-Types-_packagedElement.14-inheritingType" name="inheritingType" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.1-membershipNamespace" association="Core-Types-_packagedElement.14">
          <ownedComment xmi:id="Core-Types-_packagedElement.14-inheritingType-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.14-inheritingType">
            <body>&lt;p>The Type that inherits the &lt;code>inheritedMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.14-inheritingType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.14-inheritingType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.15" name="" visibility="private" memberEnd="Core-Types-Type-ownedEndFeature Core-Features-Feature-endOwningType"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.16" name="" visibility="private" memberEnd="Core-Types-Type-inheritedFeature Core-Types-_packagedElement.16-inheritingType">
        <ownedEnd xmi:id="Core-Types-_packagedElement.16-inheritingType" name="inheritingType" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Core-Types-_packagedElement.16">
          <ownedComment xmi:id="Core-Types-_packagedElement.16-inheritingType-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.16-inheritingType">
            <body>&lt;p>A Type that has an &lt;code>inheritedMembership&lt;/code> with the &lt;code>inheritedFeature&lt;/code> as its &lt;code>memberFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.16-inheritingType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.16-inheritingType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.17" name="" visibility="private" memberEnd="Core-Types-Type-ownedConjugator Core-Types-Conjugation-owningType"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.18" name="" visibility="private" memberEnd="Core-Types-Conjugation-originalType Core-Types-_packagedElement.18-conjugation">
        <ownedEnd xmi:id="Core-Types-_packagedElement.18-conjugation" name="conjugation" visibility="public" type="Core-Types-Conjugation" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Types-_packagedElement.18">
          <ownedComment xmi:id="Core-Types-_packagedElement.18-conjugation-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.18-conjugation">
            <body>&lt;p>The Conjugations with a certain Type as the &lt;code>originalType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.18-conjugation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.18-conjugation-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Conjugation" name="Conjugation" visibility="public">
        <ownedComment xmi:id="Core-Types-Conjugation-_ownedComment.0" annotatedElement="Core-Types-Conjugation">
          <body>&lt;p>&lt;code>Conjugation&lt;/code> is a &lt;code>Relationship&lt;/code> between two types in which the &lt;code>conjugatedType&lt;/code> inherits all the &lt;code>Features&lt;/code> of the &lt;code>originalType&lt;/code>, but with all &lt;code>input&lt;/code> and &lt;code>output&lt;/code> &lt;code>Features&lt;/code> reversed. That is, any &lt;code>Features&lt;/code> with a &lt;code>FeatureMembership&lt;/code> with &lt;code>direction&lt;/code> &lt;em>in&lt;/em> relative to the &lt;code>originalType&lt;/code> are considered to have an effective &lt;code>direction&lt;/code> of &lt;em>out&lt;/em> relative to the &lt;code>conjugatedType&lt;/code> and, similarly, &lt;code>Features&lt;/code> with &lt;code>direction&lt;/code> &lt;em>out&lt;/em> in the &lt;code>originalType&lt;/code> are considered to have an effective &lt;code>direction&lt;/code> of &lt;em>in&lt;/em> in the &lt;code>originalType&lt;/code>. &lt;code>Features&lt;/code> with &lt;code>direction&lt;/code> &lt;em>inout&lt;/em>, or with no &lt;code>direction&lt;/code>, in the &lt;code>originalType&lt;/code>, are inherited without change.&lt;/p>

&lt;p>A &lt;code>Type&lt;/code> may participate as a &lt;code>conjugatedType&lt;/code> in at most one &lt;code>Conjugation&lt;/code> relationship, and such a &lt;code>Type&lt;/code> may not also be the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code> in any &lt;code>Specialization&lt;/code> relationship.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Types-Conjugation-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Types-Conjugation-originalType" name="originalType" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-target" association="Core-Types-_packagedElement.18">
          <ownedComment xmi:id="Core-Types-Conjugation-originalType-_ownedComment.0" annotatedElement="Core-Types-Conjugation-originalType">
            <body>&lt;p>The &lt;code>Type&lt;/code> to be conjugated.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Conjugation-originalType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Conjugation-originalType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Conjugation-conjugatedType" name="conjugatedType" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-source" association="Core-Types-_packagedElement.20">
          <ownedComment xmi:id="Core-Types-Conjugation-conjugatedType-_ownedComment.0" annotatedElement="Core-Types-Conjugation-conjugatedType">
            <body>&lt;p>The &lt;code>Type&lt;/code> that is the result of applying &lt;code>Conjugation&lt;/code> to the &lt;code>originalType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Conjugation-conjugatedType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Conjugation-conjugatedType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Conjugation-owningType" name="owningType" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-Conjugation-conjugatedType Root-Elements-Relationship-owningRelatedElement" association="Core-Types-_packagedElement.17">
          <ownedComment xmi:id="Core-Types-Conjugation-owningType-_ownedComment.0" annotatedElement="Core-Types-Conjugation-owningType">
            <body>&lt;p>The &lt;code>conjugatedType&lt;/code> of this &lt;code>Conjugation&lt;/code> that is also its &lt;code>owningRelatedElement&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Conjugation-owningType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Conjugation-owningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.20" name="" visibility="private" memberEnd="Core-Types-Conjugation-conjugatedType Core-Types-_packagedElement.20-conjugator">
        <ownedEnd xmi:id="Core-Types-_packagedElement.20-conjugator" name="conjugator" visibility="public" type="Core-Types-Conjugation" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship" association="Core-Types-_packagedElement.20">
          <ownedComment xmi:id="Core-Types-_packagedElement.20-conjugator-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.20-conjugator">
            <body>&lt;p>The Conjugation corresponding to the &lt;code>conjugatedType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.20-conjugator-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.20-conjugator-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Multiplicity" name="Multiplicity" visibility="public">
        <ownedComment xmi:id="Core-Types-Multiplicity-_ownedComment.0" annotatedElement="Core-Types-Multiplicity">
          <body>&lt;p>A &lt;code>Multiplicity&lt;/code> is a &lt;code>Feature&lt;/code> whose co-domain is a set of natural numbers giving the allowed cardinalities of each &lt;code>typeWithMultiplicity&lt;/code>. The &lt;em>cardinality&lt;/em> of a &lt;code>Type&lt;/code> is defined as follows, depending on whether the &lt;code>Type&lt;/code> is a &lt;code>Classifier&lt;/code> or &lt;code>Feature&lt;/code>.
&lt;ul>
&lt;li>&lt;code>Classifier&lt;/code> – The number of basic instances of the &lt;code>Classifier&lt;/code>, that is, those instances representing things, which are not instances of any subtypes of the &lt;code>Classifier&lt;/code> that are &lt;code>Features&lt;/code>.
&lt;li>&lt;code>Features&lt;/code> – The number of instances with the same featuring instances. In the case of a &lt;code>Feature&lt;/code> with a &lt;code>Classifier&lt;/code> as its &lt;code>featuringType&lt;/code>, this is the number of values of &lt;code>Feature&lt;/code> for each basic instance of the &lt;code>Classifier&lt;/code>. Note that, for non-unique &lt;code>Features&lt;/code>, all duplicate values are included in this count.&lt;/li>
&lt;/ul>

&lt;p>&lt;code>Multiplicity&lt;/code> co-domains (in models) can be specified by &lt;code>Expression&lt;/code> that might vary in their results. If the &lt;code>typeWithMultiplicity&lt;/code> is a &lt;code>Classifier&lt;/code>, the domain of the &lt;code>Multiplicity&lt;/code> shall be &lt;em>&lt;code>Base::Anything&lt;/code>&lt;/em>.  If the &lt;code>typeWithMultiplicity&lt;/code> is a &lt;code>Feature&lt;/code>,  the &lt;code>Multiplicity&lt;/code> shall have the same domain as the &lt;code>typeWithMultiplicity&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Core-Types-Multiplicity-checkMultiplicityTypeFeaturing" name="checkMultiplicityTypeFeaturing" visibility="public" constrainedElement="Core-Types-Multiplicity">
          <ownedComment xmi:id="Core-Types-Multiplicity-checkMultiplicityTypeFeaturing-_ownedComment.0" annotatedElement="Core-Types-Multiplicity-checkMultiplicityTypeFeaturing">
            <body>&lt;p>If the &lt;code>owningType&lt;/code> of a &lt;code>Multiplicity&lt;/code> is a &lt;code>Feature&lt;/code>, then the &lt;code>Multiplicity&lt;/code> must have the same &lt;code>featuringTypes&lt;/code> as that &lt;code>Feature&lt;/code>. Otherwise, it must have no &lt;code>featuringTypes&lt;/code> (meaning that it is implicitly featured by the base &lt;code>Classifier&lt;/code> &lt;em>&lt;code>Anything&lt;/code>&lt;/em>).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Multiplicity-checkMultiplicityTypeFeaturing-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>if owningType &lt;> null and owningType.oclIsKindOf(Feature) then
    featuringType = 
        owningType.oclAsType(Feature).featuringType
else
    featuringType->isEmpty()
endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Core-Types-Multiplicity-checkMultiplicitySpecialization" name="checkMultiplicitySpecialization" visibility="public" constrainedElement="Core-Types-Multiplicity">
          <ownedComment xmi:id="Core-Types-Multiplicity-checkMultiplicitySpecialization-_ownedComment.0" annotatedElement="Core-Types-Multiplicity-checkMultiplicitySpecialization">
            <body>&lt;p>A &lt;code>Multiplicity&lt;/code> must directly or indirectly specialize the &lt;code>Feature&lt;/code> &lt;code>&lt;em>Base::naturals&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Core-Types-Multiplicity-checkMultiplicitySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Base::naturals&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Core-Types-Multiplicity-_generalization.0" general="Core-Features-Feature"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.22" name="" visibility="private" memberEnd="Core-Types-Disjoining-disjoiningType Core-Types-_packagedElement.22-disjoinedTypeDisjoining">
        <ownedEnd xmi:id="Core-Types-_packagedElement.22-disjoinedTypeDisjoining" name="disjoinedTypeDisjoining" visibility="public" type="Core-Types-Disjoining" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Types-_packagedElement.22">
          <ownedComment xmi:id="Core-Types-_packagedElement.22-disjoinedTypeDisjoining-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.22-disjoinedTypeDisjoining">
            <body>&lt;p>The Disjoinings that identify this Type as their &lt;code>disjoiningType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.22-disjoinedTypeDisjoining-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.22-disjoinedTypeDisjoining-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Disjoining" name="Disjoining" visibility="public">
        <ownedComment xmi:id="Core-Types-Disjoining-_ownedComment.0" annotatedElement="Core-Types-Disjoining">
          <body>&lt;p>A &lt;code>Disjoining&lt;/code> is a &lt;code>Relationship&lt;/code> between &lt;code>Types&lt;/code> asserted to have interpretations that are not shared (disjoint) between them, identified as &lt;code>typeDisjoined&lt;/code> and &lt;code>disjoiningType&lt;/code>. For example, a &lt;code>Classifier&lt;/code> for mammals is disjoint from a &lt;code>Classifier&lt;/code> for minerals, and a &lt;code>Feature&lt;/code> for people&amp;#39;s parents is disjoint from a &lt;code>Feature&lt;/code> for their children.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Types-Disjoining-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Types-Disjoining-typeDisjoined" name="typeDisjoined" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-source" association="Core-Types-_packagedElement.25">
          <ownedComment xmi:id="Core-Types-Disjoining-typeDisjoined-_ownedComment.0" annotatedElement="Core-Types-Disjoining-typeDisjoined">
            <body>&lt;p>&lt;code>Type&lt;/code> asserted to be disjoint with the &lt;code>disjoiningType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Disjoining-typeDisjoined-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Disjoining-typeDisjoined-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Disjoining-disjoiningType" name="disjoiningType" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-target" association="Core-Types-_packagedElement.22">
          <ownedComment xmi:id="Core-Types-Disjoining-disjoiningType-_ownedComment.0" annotatedElement="Core-Types-Disjoining-disjoiningType">
            <body>&lt;p>&lt;code>Type&lt;/code> asserted to be disjoint with the &lt;code>typeDisjoined&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Disjoining-disjoiningType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Disjoining-disjoiningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Disjoining-owningType" name="owningType" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-Disjoining-typeDisjoined Root-Elements-Relationship-owningRelatedElement" association="Core-Types-_packagedElement.26">
          <ownedComment xmi:id="Core-Types-Disjoining-owningType-_ownedComment.0" annotatedElement="Core-Types-Disjoining-owningType">
            <body>&lt;p>A &lt;code>typeDisjoined&lt;/code> that is also an &lt;code>owningRelatedElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Disjoining-owningType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Disjoining-owningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.24" name="" visibility="private" memberEnd="Core-Types-Type-directedFeature Core-Types-_packagedElement.24-typeWithDirectedFeature">
        <ownedEnd xmi:id="Core-Types-_packagedElement.24-typeWithDirectedFeature" name="typeWithDirectedFeature" visibility="public" type="Core-Types-Type" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Core-Types-_packagedElement.24">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.24-typeWithDirectedFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.24-typeWithDirectedFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.25" name="" visibility="private" memberEnd="Core-Types-_packagedElement.25-disjoiningTypeDisjoining Core-Types-Disjoining-typeDisjoined">
        <ownedEnd xmi:id="Core-Types-_packagedElement.25-disjoiningTypeDisjoining" name="disjoiningTypeDisjoining" visibility="public" type="Core-Types-Disjoining" subsettedProperty="Root-Elements-_packagedElement.5-sourceRelationship" association="Core-Types-_packagedElement.25">
          <ownedComment xmi:id="Core-Types-_packagedElement.25-disjoiningTypeDisjoining-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.25-disjoiningTypeDisjoining">
            <body>&lt;p>The Disjoinings that identify this Type as their &lt;code>typeDisjoined&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.25-disjoiningTypeDisjoining-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.25-disjoiningTypeDisjoining-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.26" name="" visibility="private" memberEnd="Core-Types-Type-ownedDisjoining Core-Types-Disjoining-owningType"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.27" name="" visibility="private" memberEnd="Core-Types-Type-featureMembership Core-Types-_packagedElement.27-type">
        <ownedEnd xmi:id="Core-Types-_packagedElement.27-type" name="type" visibility="public" type="Core-Types-Type" isDerived="true" association="Core-Types-_packagedElement.27">
          <ownedComment xmi:id="Core-Types-_packagedElement.27-type-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.27-type">
            <body>&lt;p>A Type that owns or inherits the &lt;code>featureMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.27-type-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.27-type-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.28" name="" visibility="private" memberEnd="Core-Types-Differencing-differencingType Core-Types-_packagedElement.28-differencedDifferencing">
        <ownedEnd xmi:id="Core-Types-_packagedElement.28-differencedDifferencing" name="differencedDifferencing" visibility="public" type="Core-Types-Differencing" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Types-_packagedElement.28">
          <ownedComment xmi:id="Core-Types-_packagedElement.28-differencedDifferencing-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.28-differencedDifferencing">
            <body>&lt;p>The Differencings that identify this Type as their &lt;code>differencingType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.28-differencedDifferencing-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.28-differencedDifferencing-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.29" name="" visibility="private" memberEnd="Core-Types-Type-unioningType Core-Types-_packagedElement.29-unionedType">
        <ownedEnd xmi:id="Core-Types-_packagedElement.29-unionedType" name="unionedType" visibility="public" type="Core-Types-Type" isDerived="true" association="Core-Types-_packagedElement.29">
          <ownedComment xmi:id="Core-Types-_packagedElement.29-unionedType-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.29-unionedType">
            <body>&lt;p>The Types that include this one among their &lt;code>unioningTypes&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.29-unionedType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.29-unionedType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.30" name="" visibility="private" memberEnd="Core-Types-Unioning-unioningType Core-Types-_packagedElement.30-unionedUnioning">
        <ownedEnd xmi:id="Core-Types-_packagedElement.30-unionedUnioning" name="unionedUnioning" visibility="public" type="Core-Types-Unioning" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Types-_packagedElement.30">
          <ownedComment xmi:id="Core-Types-_packagedElement.30-unionedUnioning-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.30-unionedUnioning">
            <body>&lt;p>The Unionings that identify all these Types as their &lt;code>unioningType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.30-unionedUnioning-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.30-unionedUnioning-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.31" name="" visibility="private" memberEnd="Core-Types-Type-intersectingType Core-Types-_packagedElement.31-intersectedType">
        <ownedEnd xmi:id="Core-Types-_packagedElement.31-intersectedType" name="intersectedType" visibility="public" type="Core-Types-Type" isDerived="true" association="Core-Types-_packagedElement.31">
          <ownedComment xmi:id="Core-Types-_packagedElement.31-intersectedType-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.31-intersectedType">
            <body>&lt;p>The Types that include this one among their &lt;code>intersectingTypes&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.31-intersectedType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.31-intersectedType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.32" name="" visibility="private" memberEnd="Core-Types-Unioning-typeUnioned Core-Types-Type-ownedUnioning"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.33" name="" visibility="private" memberEnd="Core-Types-Type-differencingType Core-Types-_packagedElement.33-differencedType">
        <ownedEnd xmi:id="Core-Types-_packagedElement.33-differencedType" name="differencedType" visibility="public" type="Core-Types-Type" isDerived="true" association="Core-Types-_packagedElement.33">
          <ownedComment xmi:id="Core-Types-_packagedElement.33-differencedType-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.33-differencedType">
            <body>&lt;p>The Types that include this one among their &lt;code>differencingTypes&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.33-differencedType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.33-differencedType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Differencing" name="Differencing" visibility="public">
        <ownedComment xmi:id="Core-Types-Differencing-_ownedComment.0" annotatedElement="Core-Types-Differencing">
          <body>&lt;p>&lt;code>Differencing&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its &lt;code>differencingType&lt;/code> one of the &lt;code>differencingTypes&lt;/code> of its &lt;code>typeDifferenced&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Types-Differencing-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Types-Differencing-typeDifferenced" name="typeDifferenced" visibility="public" type="Core-Types-Type" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Root-Elements-Relationship-owningRelatedElement" association="Core-Types-_packagedElement.35">
          <ownedComment xmi:id="Core-Types-Differencing-typeDifferenced-_ownedComment.0" annotatedElement="Core-Types-Differencing-typeDifferenced">
            <body>&lt;p>&lt;code>Type&lt;/code> with interpretations partly determined by &lt;code>differencingType&lt;/code>, as described in &lt;code>Type::differencingType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Differencing-typeDifferenced-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Differencing-typeDifferenced-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Differencing-differencingType" name="differencingType" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-target" association="Core-Types-_packagedElement.28">
          <ownedComment xmi:id="Core-Types-Differencing-differencingType-_ownedComment.0" annotatedElement="Core-Types-Differencing-differencingType">
            <body>&lt;p>&lt;code>Type&lt;/code> that partly determines interpretations of &lt;code>typeDifferenced&lt;/code>, as described in &lt;code>Type::differencingType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Differencing-differencingType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Differencing-differencingType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.35" name="" visibility="private" memberEnd="Core-Types-Differencing-typeDifferenced Core-Types-Type-ownedDifferencing"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.36" name="" visibility="private" memberEnd="Core-Types-Intersecting-intersectingType Core-Types-_packagedElement.36-intersectedIntersecting">
        <ownedEnd xmi:id="Core-Types-_packagedElement.36-intersectedIntersecting" name="intersectedIntersecting" visibility="public" type="Core-Types-Intersecting" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Core-Types-_packagedElement.36">
          <ownedComment xmi:id="Core-Types-_packagedElement.36-intersectedIntersecting-_ownedComment.0" annotatedElement="Core-Types-_packagedElement.36-intersectedIntersecting">
            <body>&lt;p>The Intersectings that identify this Type as their &lt;code>intersectingType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-_packagedElement.36-intersectedIntersecting-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-_packagedElement.36-intersectedIntersecting-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Unioning" name="Unioning" visibility="public">
        <ownedComment xmi:id="Core-Types-Unioning-_ownedComment.0" annotatedElement="Core-Types-Unioning">
          <body>&lt;p>&lt;code>Unioning&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its &lt;code>unioningType&lt;/code> one of the &lt;code>unioningTypes&lt;/code> of its &lt;code>typeUnioned&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Types-Unioning-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Types-Unioning-typeUnioned" name="typeUnioned" visibility="public" type="Core-Types-Type" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Root-Elements-Relationship-owningRelatedElement" association="Core-Types-_packagedElement.32">
          <ownedComment xmi:id="Core-Types-Unioning-typeUnioned-_ownedComment.0" annotatedElement="Core-Types-Unioning-typeUnioned">
            <body>&lt;p>&lt;code>Type&lt;/code> with interpretations partly determined by &lt;code>unioningType&lt;/code>, as described in &lt;code>Type::unioningType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Unioning-typeUnioned-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Unioning-typeUnioned-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Unioning-unioningType" name="unioningType" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-target" association="Core-Types-_packagedElement.30">
          <ownedComment xmi:id="Core-Types-Unioning-unioningType-_ownedComment.0" annotatedElement="Core-Types-Unioning-unioningType">
            <body>&lt;p>&lt;code>Type&lt;/code> that partly determines interpretations of &lt;code>typeUnioned&lt;/code>, as described in &lt;code>Type::unioningType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Unioning-unioningType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Unioning-unioningType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Core-Types-_packagedElement.38" name="" visibility="private" memberEnd="Core-Types-Type-ownedIntersecting Core-Types-Intersecting-typeIntersected"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Core-Types-Intersecting" name="Intersecting" visibility="public">
        <ownedComment xmi:id="Core-Types-Intersecting-_ownedComment.0" annotatedElement="Core-Types-Intersecting">
          <body>&lt;p>&lt;code>Intersecting&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its &lt;code>intersectingType&lt;/code> one of the &lt;code>intersectingTypes&lt;/code> of its &lt;code>typeIntersected&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Core-Types-Intersecting-_generalization.0" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Core-Types-Intersecting-typeIntersected" name="typeIntersected" visibility="public" type="Core-Types-Type" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Root-Elements-Relationship-owningRelatedElement" association="Core-Types-_packagedElement.38">
          <ownedComment xmi:id="Core-Types-Intersecting-typeIntersected-_ownedComment.0" annotatedElement="Core-Types-Intersecting-typeIntersected">
            <body>&lt;p>&lt;code>Type&lt;/code> with interpretations partly determined by &lt;code>intersectingType&lt;/code>, as described in &lt;code>Type::intersectingType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Intersecting-typeIntersected-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Intersecting-typeIntersected-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Core-Types-Intersecting-intersectingType" name="intersectingType" visibility="public" type="Core-Types-Type" redefinedProperty="Root-Elements-Relationship-target" association="Core-Types-_packagedElement.36">
          <ownedComment xmi:id="Core-Types-Intersecting-intersectingType-_ownedComment.0" annotatedElement="Core-Types-Intersecting-intersectingType">
            <body>&lt;p>&lt;code>Type&lt;/code> that partly determines interpretations of &lt;code>typeIntersected&lt;/code>, as described in &lt;code>Type::intersectingType&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Core-Types-Intersecting-intersectingType-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Core-Types-Intersecting-intersectingType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="Kernel" name="Kernel" visibility="public" URI="">
    <ownedComment xmi:id="Kernel-_ownedComment.0" annotatedElement="Kernel">
      <body>The Kernel layer completes the KerML metamodel.</body>
    </ownedComment>
    <packageImport xmi:id="Kernel-_packageImport.0" importedPackage="Core"/>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Expressions" name="Expressions" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-LiteralBoolean" name="LiteralBoolean" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-LiteralBoolean-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralBoolean">
          <body>&lt;p>&lt;code>LiteralBoolean&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides a &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have type &lt;code>&lt;em>Boolean&lt;/em>&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Kernel-Expressions-LiteralBoolean-_generalization.0" general="Kernel-Expressions-LiteralExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-LiteralBoolean-value" name="value" visibility="public">
          <ownedComment xmi:id="Kernel-Expressions-LiteralBoolean-value-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralBoolean-value">
            <body>&lt;p>The &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> value that is the result of evaluating this &lt;code>LiteralBoolean&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Expressions-LiteralBoolean-value-_ownedComment.1" annotatedElement="Kernel-Expressions-LiteralBoolean-value">
            <body>&lt;p>The Boolean value that is the result of evaluating this Expression.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-LiteralExpression" name="LiteralExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-LiteralExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralExpression">
          <body>&lt;p>A &lt;code>LiteralExpression&lt;/code> is an &lt;code>Expression&lt;/code> that provides a basic &lt;code>&lt;em>DataValue&lt;/em>&lt;/code> as a result.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-LiteralExpression-deriveLiteralExpressionIsModelLevelEvaluable" name="deriveLiteralExpressionIsModelLevelEvaluable" visibility="public" constrainedElement="Kernel-Expressions-LiteralExpression">
          <ownedComment xmi:id="Kernel-Expressions-LiteralExpression-deriveLiteralExpressionIsModelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralExpression-deriveLiteralExpressionIsModelLevelEvaluable">
            <body>&lt;p>A &lt;code>LiteralExpression&lt;/code> is always model-level evaluable.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-LiteralExpression-deriveLiteralExpressionIsModelLevelEvaluable-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isModelLevelEvaluable = true</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Expressions-LiteralExpression-checkLiteralExpressionSpecialization" name="checkLiteralExpressionSpecialization" visibility="public" constrainedElement="Kernel-Expressions-LiteralExpression">
          <ownedComment xmi:id="Kernel-Expressions-LiteralExpression-checkLiteralExpressionSpecialization-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralExpression-checkLiteralExpressionSpecialization">
            <body>&lt;p>A &lt;code>LiteralExpression&lt;/code> must directly or indirectly specialize the base &lt;code>LiteralExpression&lt;/code> &lt;code>&lt;em>Performances::literalEvaluations&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-LiteralExpression-checkLiteralExpressionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Performances::literalEvaluations&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-LiteralExpression-_generalization.0" general="Kernel-Functions-Expression"/>
        <ownedOperation xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-unnamed1" redefinedOperation="Kernel-Functions-Expression-modelLevelEvaluable">
          <ownedComment xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralExpression-modelLevelEvaluable">
            <body>&lt;p>A &lt;code>LiteralExpression&lt;/code> is always model-level evaluable.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>true</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-LiteralExpression-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Expressions-LiteralExpression-evaluate" name="evaluate" visibility="public" bodyCondition="Kernel-Expressions-LiteralExpression-evaluate-unnamed1" redefinedOperation="Kernel-Functions-Expression-evaluate">
          <ownedComment xmi:id="Kernel-Expressions-LiteralExpression-evaluate-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralExpression-evaluate">
            <body>&lt;p>The model-level value of a &lt;code>LiteralExpression&lt;/code> is itself.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-LiteralExpression-evaluate-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-LiteralExpression-evaluate-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>Sequence{self}</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-LiteralExpression-evaluate-target" name="target" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Expressions-LiteralExpression-evaluate-result" name="result" visibility="public" type="Root-Elements-Element" isOrdered="true" isUnique="false" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-LiteralExpression-evaluate-result-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-LiteralExpression-evaluate-result-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-LiteralRational" name="LiteralRational" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-LiteralRational-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralRational">
          <body>&lt;p>A &lt;code>LiteralRational&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides a &lt;code>&lt;em>Rational&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have the type &lt;code>&lt;em>Rational&lt;/em>&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Kernel-Expressions-LiteralRational-_generalization.0" general="Kernel-Expressions-LiteralExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-LiteralRational-value" name="value" visibility="public">
          <ownedComment xmi:id="Kernel-Expressions-LiteralRational-value-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralRational-value">
            <body>&lt;p>The value whose rational approximation is the result of evaluating this &lt;code>LiteralRational&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Expressions-LiteralRational-value-_ownedComment.1" annotatedElement="Kernel-Expressions-LiteralRational-value">
            <body>&lt;p>The Real value that is the result of evaluating this Expression.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-LiteralInfinity" name="LiteralInfinity" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-LiteralInfinity-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralInfinity">
          <body>&lt;p>A &lt;code>LiteralInfinity&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides the positive infinity value (&lt;code>*&lt;/code>). It's &lt;code>result&lt;/code> must have the type &lt;code>&lt;em>Positive&lt;/em>&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Kernel-Expressions-LiteralInfinity-_generalization.0" general="Kernel-Expressions-LiteralExpression"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-LiteralInteger" name="LiteralInteger" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-LiteralInteger-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralInteger">
          <body>&lt;p>A &lt;code>LiteralInteger&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides an &lt;code>&lt;em>Integer&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have the type &lt;code>&lt;em>Integer&lt;/em>&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Kernel-Expressions-LiteralInteger-_generalization.0" general="Kernel-Expressions-LiteralExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-LiteralInteger-value" name="value" visibility="public">
          <ownedComment xmi:id="Kernel-Expressions-LiteralInteger-value-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralInteger-value">
            <body>&lt;p>The &lt;code>&lt;em>Integer&lt;/em>&lt;/code> value that is the result of evaluating this &lt;code>LiteralInteger&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Expressions-LiteralInteger-value-_ownedComment.1" annotatedElement="Kernel-Expressions-LiteralInteger-value">
            <body>&lt;p>The Integer value that is the result of evaluating this Expression.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-NullExpression" name="NullExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-NullExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-NullExpression">
          <body>&lt;p>A &lt;code>NullExpression&lt;/code> is an &lt;code>Expression&lt;/code> that results in a null value.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-NullExpression-checkNullExpressionSpecialization" name="checkNullExpressionSpecialization" visibility="public" constrainedElement="Kernel-Expressions-NullExpression">
          <ownedComment xmi:id="Kernel-Expressions-NullExpression-checkNullExpressionSpecialization-_ownedComment.0" annotatedElement="Kernel-Expressions-NullExpression-checkNullExpressionSpecialization">
            <body>&lt;p>A &lt;code>NullExpression&lt;/code> must directly or indirectly specialize the base &lt;code>NullExpression&lt;/code> &lt;code>&lt;em>Performances::nullEvaluations&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-NullExpression-checkNullExpressionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Performances::nullEvaluations&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-NullExpression-_generalization.0" general="Kernel-Functions-Expression"/>
        <ownedOperation xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Kernel-Expressions-NullExpression-modelLevelEvaluable-unnamed1" redefinedOperation="Kernel-Functions-Expression-modelLevelEvaluable">
          <ownedComment xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Expressions-NullExpression-modelLevelEvaluable">
            <body>&lt;p>A &lt;code>NullExpression&lt;/code> is always model-level evaluable.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>true</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-NullExpression-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Expressions-NullExpression-evaluate" name="evaluate" visibility="public" bodyCondition="Kernel-Expressions-NullExpression-evaluate-unnamed1" redefinedOperation="Kernel-Functions-Expression-evaluate">
          <ownedComment xmi:id="Kernel-Expressions-NullExpression-evaluate-_ownedComment.0" annotatedElement="Kernel-Expressions-NullExpression-evaluate">
            <body>&lt;p>The model-level value of a &lt;code>NullExpression&lt;/code> is an empty sequence.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-NullExpression-evaluate-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-NullExpression-evaluate-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>Sequence{}</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-NullExpression-evaluate-target" name="target" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Expressions-NullExpression-evaluate-result" name="result" visibility="public" type="Root-Elements-Element" isOrdered="true" isUnique="false" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-NullExpression-evaluate-result-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-NullExpression-evaluate-result-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-LiteralString" name="LiteralString" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-LiteralString-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralString">
          <body>&lt;p>A &lt;code>LiteralString&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides a &lt;code>&lt;em>String&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have the type &lt;code>&lt;em>String&lt;/em>&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Kernel-Expressions-LiteralString-_generalization.0" general="Kernel-Expressions-LiteralExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-LiteralString-value" name="value" visibility="public">
          <ownedComment xmi:id="Kernel-Expressions-LiteralString-value-_ownedComment.0" annotatedElement="Kernel-Expressions-LiteralString-value">
            <body>&lt;p>The &lt;code>&lt;em>String&lt;/em>&lt;/code> value that is the result of evaluating this &lt;code>LiteralString&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Expressions-LiteralString-value-_ownedComment.1" annotatedElement="Kernel-Expressions-LiteralString-value">
            <body>&lt;p>The String value that is the result of evaluating this Expression.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Expressions-_packagedElement.7" name="" visibility="private" memberEnd="Kernel-Expressions-InvocationExpression-argument Kernel-Expressions-_packagedElement.7-invocation">
        <ownedEnd xmi:id="Kernel-Expressions-_packagedElement.7-invocation" name="invocation" visibility="public" type="Kernel-Expressions-InvocationExpression" isDerived="true" subsettedProperty="Core-Types-Conjugation-owningType" association="Kernel-Expressions-_packagedElement.7">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-_packagedElement.7-invocation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-_packagedElement.7-invocation-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-InvocationExpression" name="InvocationExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-InvocationExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-InvocationExpression">
          <body>&lt;p>An &lt;code>InvocationExpression&lt;/code> is an &lt;code>Expression&lt;/code> each of whose input &lt;code>parameters&lt;/code> are bound to the &lt;code>result&lt;/code> of an &lt;code>argument&lt;/code> Expression.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-InvocationExpression-checkInvocationExpressionConstructorBindingConnector" name="checkInvocationExpressionConstructorBindingConnector" visibility="public" constrainedElement="Kernel-Expressions-InvocationExpression">
          <ownedComment xmi:id="Kernel-Expressions-InvocationExpression-checkInvocationExpressionConstructorBindingConnector-_ownedComment.0" annotatedElement="Kernel-Expressions-InvocationExpression-checkInvocationExpressionConstructorBindingConnector">
            <body>&lt;p>If an &lt;code>InvocationExpression&lt;/code> does not have an &lt;code>ownedTyping&lt;/code> that is a &lt;code>Behavior&lt;/code> or an &lt;code>ownedSubsetting&lt;/code> of a &lt;code>Feature &lt;/code>that is typed by a &lt;code>Behavior&lt;/code>, then it must own a &lt;code>BindingConnector between itself and its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-InvocationExpression-checkInvocationExpressionConstructorBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not ownedTyping->exists(oclIsKindOf(Behavior)) and
not ownedSubsetting.subsettedFeature.type->exists(oclIsKindOf(Behavior)) implies
    ownedFeature.selectByKind(BindingConnector)->exists(
        relatedFeature->includes(self) and
        relatedFeature->includes(result))
            </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Expressions-InvocationExpression-checkInvocationExpressionDefaultValueBindingConnector" name="checkInvocationExpressionDefaultValueBindingConnector" visibility="public" constrainedElement="Kernel-Expressions-InvocationExpression">
          <ownedComment xmi:id="Kernel-Expressions-InvocationExpression-checkInvocationExpressionDefaultValueBindingConnector-_ownedComment.0" annotatedElement="Kernel-Expressions-InvocationExpression-checkInvocationExpressionDefaultValueBindingConnector">
            <body>&lt;p>An &lt;code>InvocationExpression&lt;/code> must own a &lt;code>BindingConnector&lt;/code> between the &lt;code>featureWithValue&lt;/code> and &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> of any &lt;code>FeatureValue&lt;/code> that is the effective default value for a &lt;code>Feature&lt;/code> of the invoked &lt;code>Type&lt;/code> of the &lt;code>InvocationExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-InvocationExpression-checkInvocationExpressionDefaultValueBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>TBD</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Expressions-InvocationExpression-deriveInvocationExpressionArgument" name="deriveInvocationExpressionArgument" visibility="public" constrainedElement="Kernel-Expressions-InvocationExpression">
          <ownedComment xmi:id="Kernel-Expressions-InvocationExpression-deriveInvocationExpressionArgument-_ownedComment.0" annotatedElement="Kernel-Expressions-InvocationExpression-deriveInvocationExpressionArgument">
            <body>&lt;p>The &lt;code>arguments&lt;/code> of an &lt;code>InvocationExpression&lt;/code> are the &lt;code>value&lt;/code> &lt;code>Expressions&lt;/code> of the &lt;code>FeatureValues&lt;/code> of its owned input &lt;code>parameters&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-InvocationExpression-deriveInvocationExpressionArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeature->
    select(direction = _'in').valuation->
    select(v | v &lt;> null).value</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-InvocationExpression-_generalization.0" general="Kernel-Functions-Expression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-InvocationExpression-argument" name="argument" visibility="public" type="Kernel-Functions-Expression" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Kernel-Expressions-_packagedElement.7">
          <ownedComment xmi:id="Kernel-Expressions-InvocationExpression-argument-_ownedComment.0" annotatedElement="Kernel-Expressions-InvocationExpression-argument">
            <body>&lt;p>The &lt;code>value&lt;/code> &lt;code>Expressions&lt;/code> of the &lt;code>FeatureValues&lt;/code> of the owned input &lt;code>parameters&lt;/code> of the &lt;code>InvocationExpression&lt;/code>.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-InvocationExpression-argument-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-InvocationExpression-argument-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-unnamed1" redefinedOperation="Kernel-Functions-Expression-modelLevelEvaluable">
          <ownedComment xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Expressions-InvocationExpression-modelLevelEvaluable">
            <body>&lt;p>An &lt;code>InvocationExpression&lt;/code> is model-level evaluable if all its &lt;code>argument&lt;/code> &lt;code>Expressions&lt;/code> are model-level evaluable and its &lt;code>function&lt;/code> is model-level evaluable.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>argument->forAll(modelLevelEvaluable(visited)) and 
    function.isModelLevelEvaluable</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-InvocationExpression-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Expressions-InvocationExpression-evaluate" name="evaluate" visibility="public" redefinedOperation="Kernel-Functions-Expression-evaluate">
          <ownedComment xmi:id="Kernel-Expressions-InvocationExpression-evaluate-_ownedComment.0" annotatedElement="Kernel-Expressions-InvocationExpression-evaluate">
            <body>&lt;p>Apply the &lt;code>Function&lt;/code> that is the &lt;code>type&lt;/code> of this &lt;code>InvocationExpression&lt;/code> to the argument values resulting from evaluating each of the &lt;code>argument&lt;/code> &lt;code>Expressions&lt;/code> on the given &lt;code>target&lt;/code>. If the application is not possible, then return an empty sequence.&lt;/p>
</body>
          </ownedComment>
          <ownedParameter xmi:id="Kernel-Expressions-InvocationExpression-evaluate-target" name="target" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Expressions-InvocationExpression-evaluate-result" name="result" visibility="public" type="Root-Elements-Element" isOrdered="true" isUnique="false" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-InvocationExpression-evaluate-result-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-InvocationExpression-evaluate-result-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-FeatureReferenceExpression" name="FeatureReferenceExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-FeatureReferenceExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureReferenceExpression">
          <body>&lt;p>A &lt;code>FeatureReferenceExpression&lt;/code> is an &lt;code>Expression&lt;/code> whose &lt;code>result&lt;/code> is bound to a &lt;code>referent&lt;/code> &lt;code>Feature&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-FeatureReferenceExpression-deriveFeatureReferenceExpressionReferent" name="deriveFeatureReferenceExpressionReferent" visibility="public" constrainedElement="Kernel-Expressions-FeatureReferenceExpression">
          <ownedComment xmi:id="Kernel-Expressions-FeatureReferenceExpression-deriveFeatureReferenceExpressionReferent-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureReferenceExpression-deriveFeatureReferenceExpressionReferent">
            <body>&lt;p>The &lt;code>targetFeature&lt;/code> of a &lt;code>FeatureChainExpression&lt;/code> is the &lt;code>memberElement&lt;/code> of its first &lt;code>ownedMembership&lt;/code> that is not a &lt;code>ParameterMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureReferenceExpression-deriveFeatureReferenceExpressionReferent-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>referent =
    let nonParameterMemberships : Sequence(Membership) = ownedMembership->
        reject(oclIsKindOf(ParameterMembership)) in
    if nonParameterMemberships->isEmpty() or
       not nonParameterMemberships->first().memberElement.oclIsKindOf(Feature)
    then null
    else nonParameterMemberships->first().memberElement.oclAsType(Feature)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Expressions-FeatureReferenceExpression-checkFeatureReferenceExpressionBindingConnector" name="checkFeatureReferenceExpressionBindingConnector" visibility="public" constrainedElement="Kernel-Expressions-FeatureReferenceExpression">
          <ownedComment xmi:id="Kernel-Expressions-FeatureReferenceExpression-checkFeatureReferenceExpressionBindingConnector-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureReferenceExpression-checkFeatureReferenceExpressionBindingConnector">
            <body>&lt;p>A &lt;code>FeatureReferenceExpression&lt;/code> must have an &lt;code>ownedMember&lt;/code> that is a &lt;code>BindingConnector&lt;/code> between the &lt;code>referent&lt;/code> and &lt;code>result&lt;/code> of the &lt;code>FeatureReferenceExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureReferenceExpression-checkFeatureReferenceExpressionBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMember->selectByKind(BindingConnector)->exists(b |
    b.relatedFeatures->includes(targetFeature) and
    b.relatedFeatures->includes(result))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-FeatureReferenceExpression-_generalization.0" general="Kernel-Functions-Expression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-FeatureReferenceExpression-referent" name="referent" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-member" association="Kernel-Expressions-_packagedElement.10">
          <ownedComment xmi:id="Kernel-Expressions-FeatureReferenceExpression-referent-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureReferenceExpression-referent">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is referenced by this &lt;code>FeatureReferenceExpression&lt;/code>, which is its first non-&lt;code>parameter&lt;/code> &lt;code>member&lt;/code>.&lt;p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-FeatureReferenceExpression-referent-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-FeatureReferenceExpression-referent-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-unnamed1" redefinedOperation="Kernel-Functions-Expression-modelLevelEvaluable">
          <ownedComment xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable">
            <body>&lt;p>A &lt;code>FeatureReferenceExpression&lt;/code> is model-level evaluable if it&amp;#39;s &lt;code>referent&lt;/code>&lt;/p>

&lt;ul>
	&lt;li>conforms to the self-reference feature &lt;code>&lt;em>Anything::self&lt;/em>&lt;/code>;&lt;/li>
	&lt;li>is an &lt;code>Expression&lt;/code> that is model-level evaluable;&lt;/li>
	&lt;li>has an &lt;code>owningType&lt;/code> that is a &lt;code>Metaclass&lt;/code> or &lt;code>MetadataFeature&lt;/code>; or&lt;/li>
	&lt;li>has no &lt;code>featuringTypes&lt;/code> and, if it has a &lt;code>FeatureValue&lt;/code>, the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> is model-level evaluable.&lt;/li>
&lt;/ul>
</body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>referent.conformsTo(&quot;Anything::self&quot;) or
visited->excludes(referent) and 
(referent.oclIsKindOf(Expression) and 
    referent.oclAsType(Expression).modelLevelEvaluable(visited->including(referent)) or
referent.owningType &lt;> null and 
    (referent.owningType.isOclKindOf(MetaClass) or 
    referent.owningType.isOclKindOf(MetadataFeature)) or
referent.featuringType->isEmpty() and
    (referent.valuation = null or 
    referent.valuation.modelLevelEvaluable(visited->including(referent))))</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-FeatureReferenceExpression-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate" name="evaluate" visibility="public" bodyCondition="Kernel-Expressions-FeatureReferenceExpression-evaluate-unnamed1" redefinedOperation="Kernel-Functions-Expression-evaluate">
          <ownedComment xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureReferenceExpression-evaluate">
            <body>&lt;p>First, determine a &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> for the &lt;code>referent&lt;/code>:&lt;/p>

&lt;ul>
	&lt;li>If the &lt;code>target&lt;/code> &lt;code>Element&lt;/code> is a Type that has a &lt;code>feature&lt;/code> that is the &lt;code>referent&lt;/code> or (directly or indirectly) redefines it, then the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> of the &lt;code>FeatureValue&lt;/code> for that &lt;code>feature&lt;/code> (if any).&lt;/li>
	&lt;li>Else, if the &lt;code>referent&lt;/code> has no &lt;code>featuringTypes&lt;/code>, the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> of the &lt;code>FeatureValue&lt;/code> for the &lt;code>referent&lt;/code> (if any).&lt;/li>
&lt;/ul>

&lt;p>Then:&lt;/p>

&lt;ul>
	&lt;li>If such a value &lt;code>Expression&lt;/code> exists, return the result of evaluating that &lt;code>Expression&lt;/code> on the &lt;code>target&lt;/code>.&lt;/li>
	&lt;li>Else, if the &lt;code>referent&lt;/code> is not an &lt;code>Expression&lt;/code>, return the &lt;code>referent&lt;/code>.&lt;/li>
	&lt;li>Else return the empty sequence.&lt;/li>
&lt;/ul>
</body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if not target.oclIsKindOf(Type) then Sequence{}
else
    let feature: Sequence(Feature) = 
        target.oclAsType(Type).feature->select(f |
            f.ownedRedefinition.redefinedFeature->
                includes(referent)) in
        if feature->notEmpty() then 
            feature.valuation.value.evaluate(target)
        else if referent.featuringType->isEmpty() 
            then referent
        else Sequence{} 
        endif endif
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate-target" name="target" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate-result" name="result" visibility="public" type="Root-Elements-Element" isOrdered="true" isUnique="false" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate-result-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-FeatureReferenceExpression-evaluate-result-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Expressions-_packagedElement.10" name="" visibility="private" memberEnd="Kernel-Expressions-FeatureReferenceExpression-referent Kernel-Expressions-_packagedElement.10-referenceExpression">
        <ownedEnd xmi:id="Kernel-Expressions-_packagedElement.10-referenceExpression" name="referenceExpression" visibility="public" type="Kernel-Expressions-FeatureReferenceExpression" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.5-namespace" association="Kernel-Expressions-_packagedElement.10">
          <ownedComment xmi:id="Kernel-Expressions-_packagedElement.10-referenceExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-_packagedElement.10-referenceExpression">
            <body>&lt;p>A FeatureReferenceExpression that has a certain &lt;code>referent&lt;/code> Feature.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-_packagedElement.10-referenceExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-_packagedElement.10-referenceExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-SelectExpression" name="SelectExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-SelectExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-SelectExpression">
          <body>&lt;p>A &lt;code>SelectExpression&lt;/code> is an &lt;code>OperatorExpression&lt;/code> whose operator is &lt;code>&quot;select&quot;&lt;/code>, which resolves to the &lt;code>Function&lt;/code> &lt;em>&lt;code>ControlFunctions::select&lt;/code>&lt;/em> from the Kernel Functions Library.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Kernel-Expressions-SelectExpression-_generalization.0" general="Kernel-Expressions-OperatorExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-SelectExpression-operator" name="operator" visibility="public" redefinedProperty="Kernel-Expressions-OperatorExpression-operator">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="Kernel-Expressions-SelectExpression-operator-_defaultValue" name="" visibility="public" value="select"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-OperatorExpression" name="OperatorExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-OperatorExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-OperatorExpression">
          <body>&lt;p>An &lt;code>OperatorExpression&lt;/code> is an &lt;code>InvocationExpression&lt;/code> whose &lt;code>function&lt;/code> is determined by resolving its &lt;code>operator&lt;/code> in the context of one of the standard packages from the Kernel Function Library.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-OperatorExpression-checkOperatorExpressionSpecialization" name="checkOperatorExpressionSpecialization" visibility="public" constrainedElement="Kernel-Expressions-OperatorExpression">
          <ownedComment xmi:id="Kernel-Expressions-OperatorExpression-checkOperatorExpressionSpecialization-_ownedComment.0" annotatedElement="Kernel-Expressions-OperatorExpression-checkOperatorExpressionSpecialization">
            <body>&lt;p>The &lt;code>function&lt;/code> of an &lt;code>OperatorExpression&lt;/code> must be the resolution of the &lt;code>operator&lt;/code> from one of the packages &lt;code>&lt;em>BaseFunctions&lt;/em>&lt;/code>, &lt;code>&lt;em>DataFunctions&lt;/em>&lt;/code>, or &lt;code>&lt;em>ControlFunctions&lt;/em>&lt;/code> from the Kernel Function Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-OperatorExpression-checkOperatorExpressionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let libFunctions : Sequence(Element) = 
    Sequence{&quot;BaseFunctions&quot;, &quot;DataFunctions&quot;, &quot;ControlFunctions&quot;}->
    collect(ns | resolveGlobal(ns + &quot;::'&quot; + operator + &quot;'&quot;)) in
libFunctions->includes(function)
    
</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-OperatorExpression-_generalization.0" general="Kernel-Expressions-InvocationExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-OperatorExpression-operator" name="operator" visibility="public">
          <ownedComment xmi:id="Kernel-Expressions-OperatorExpression-operator-_ownedComment.0" annotatedElement="Kernel-Expressions-OperatorExpression-operator">
            <body>&lt;p>An &lt;code>operator&lt;/code> symbol that names a corresponding &lt;code>Function&lt;/code> from one of the standard packages from the Kernel Function Library .&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-CollectExpression" name="CollectExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-CollectExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-CollectExpression">
          <body>&lt;p>A &lt;code>CollectExpression&lt;/code> is an &lt;code>OperatorExpression&lt;/code> whose &lt;code>operator&lt;/code> is &lt;code>&quot;collect&quot;&lt;/code>, which resolves to the &lt;code>Function&lt;/code> &lt;em>&lt;code>ControlFunctions::collect&lt;/code>&lt;/em> from the Kernel Functions Library.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-CollectExpression-validateCollectExpressionOperator" name="validateCollectExpressionOperator" visibility="public" constrainedElement="Kernel-Expressions-CollectExpression">
          <ownedComment xmi:id="Kernel-Expressions-CollectExpression-validateCollectExpressionOperator-_ownedComment.0" annotatedElement="Kernel-Expressions-CollectExpression-validateCollectExpressionOperator">
            <body>&lt;p>The &lt;code>operator&lt;/code> of a &lt;code>CollectExpression&lt;/code> must be &lt;code>'collect'&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-CollectExpression-validateCollectExpressionOperator-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>operator = 'collect'</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-CollectExpression-_generalization.0" general="Kernel-Expressions-OperatorExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-CollectExpression-operator" name="operator" visibility="public" redefinedProperty="Kernel-Expressions-OperatorExpression-operator">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="Kernel-Expressions-CollectExpression-operator-_defaultValue" name="" visibility="public" value="collect"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-FeatureChainExpression" name="FeatureChainExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-FeatureChainExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureChainExpression">
          <body>&lt;p>A &lt;code>FeatureChainExpression&lt;/code> is an &lt;code>OperatorExpression&lt;/code> whose operator is &lt;code>&quot;.&quot;&lt;/code>, which resolves to the code>Function&lt;/code> &lt;em>&lt;code>ControlFunctions::'.'&lt;/code>&lt;/em> from the Kernel Functions Library. It evaluates to the result of chaining the &lt;code>result&lt;/code> &lt;code>Feature&lt;/code> of its single &lt;code>argument&lt;/code> Expression with its &lt;code>targetFeature&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionTargetRedefinition" name="checkFeatureChainExpressionTargetRedefinition" visibility="public" constrainedElement="Kernel-Expressions-FeatureChainExpression">
          <ownedComment xmi:id="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionTargetRedefinition-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionTargetRedefinition">
            <body>&lt;p>The first &lt;code>ownedFeature&lt;/code> of the first owned input &lt;code>parameter&lt;/code> of a &lt;code>FeatureChainExpression&lt;/code> must redefine the &lt;code>Feature&lt;/code> &lt;code>&lt;em>ControlFunctions::'.'::source::target&lt;/em>&lt;/code> from the Kernel Functions Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionTargetRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let sourceParameter : Feature = sourceTargetFeature() in
sourceTargetFeature &lt;> null and
sourceTargetFeature.redefinesFromLibrary(&quot;ControlFunctions::'.'::source::target&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionSourceTargetRedefinition" name="checkFeatureChainExpressionSourceTargetRedefinition" visibility="public" constrainedElement="Kernel-Expressions-FeatureChainExpression">
          <ownedComment xmi:id="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionSourceTargetRedefinition-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionSourceTargetRedefinition">
            <body>&lt;p>The first &lt;code>ownedFeature&lt;/code> of the first owned input &lt;code>parameter&lt;/code> of a &lt;code>FeatureChainExpression&lt;/code> must redefine its &lt;code>targetFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureChainExpression-checkFeatureChainExpressionSourceTargetRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let sourceParameter : Feature = sourceTargetFeature() in
sourceTargetFeature &lt;> null and
sourceTargetFeature.redefines(targetFeature)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Expressions-FeatureChainExpression-deriveFeatureChainExpressionTargetFeature" name="deriveFeatureChainExpressionTargetFeature" visibility="public" constrainedElement="Kernel-Expressions-FeatureChainExpression">
          <ownedComment xmi:id="Kernel-Expressions-FeatureChainExpression-deriveFeatureChainExpressionTargetFeature-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureChainExpression-deriveFeatureChainExpressionTargetFeature">
            <body>&lt;p>The &lt;code>targetFeature&lt;/code> of a &lt;code>FeatureChainExpression&lt;/code> is the &lt;code>memberElement&lt;/code> of its first &lt;code>ownedMembership&lt;/code> that is not a &lt;code>ParameterMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureChainExpression-deriveFeatureChainExpressionTargetFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetFeature =
    let nonParameterMemberships : Sequence(Membership) = ownedMembership->
        reject(oclIsKindOf(ParameterMembership)) in
    if nonParameterMemberships->isEmpty() or
       not nonParameterMemberships->first().memberElement.oclIsKindOf(Feature)
    then null
    else nonParameterMemberships->first().memberElement.oclAsType(Feature)
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-FeatureChainExpression-_generalization.0" general="Kernel-Expressions-OperatorExpression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-FeatureChainExpression-operator" name="operator" visibility="public" redefinedProperty="Kernel-Expressions-OperatorExpression-operator">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="Kernel-Expressions-FeatureChainExpression-operator-_defaultValue" name="" visibility="public" value="."/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Expressions-FeatureChainExpression-targetFeature" name="targetFeature" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-member" association="Kernel-Expressions-_packagedElement.15">
          <ownedComment xmi:id="Kernel-Expressions-FeatureChainExpression-targetFeature-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureChainExpression-targetFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is accessed by this &lt;code>FeatureChainExpression&lt;code>, which is its first non-&lt;code>parameter&lt;/code> &lt;code>member&lt;/code>.&lt;p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-FeatureChainExpression-targetFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-FeatureChainExpression-targetFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature" name="sourceTargetFeature" visibility="public" bodyCondition="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature-unnamed1">
          <ownedComment xmi:id="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature-_ownedComment.0" annotatedElement="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature">
            <body>&lt;p>Return the first &lt;code>ownedFeature&lt;/code> of the first owned input &lt;code>parameter&lt;/code> of this &lt;code>FeatureChainExpression&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let inputParameters : Feature = ownedFeatures->
    select(direction = _'in') in
if inputParameters->isEmpty() or 
   inputParameters->first().ownedFeature->isEmpty()
then null
else inputParameters->first().ownedFeature->first()
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature-_ownedParameter.0" name="" visibility="public" type="Core-Features-Feature" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-FeatureChainExpression-sourceTargetFeature-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Expressions-_packagedElement.15" name="" visibility="private" memberEnd="Kernel-Expressions-FeatureChainExpression-targetFeature Kernel-Expressions-_packagedElement.15-chainExpression">
        <ownedEnd xmi:id="Kernel-Expressions-_packagedElement.15-chainExpression" name="chainExpression" visibility="public" type="Kernel-Expressions-FeatureChainExpression" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.5-namespace" association="Kernel-Expressions-_packagedElement.15">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-_packagedElement.15-chainExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-_packagedElement.15-chainExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Expressions-_packagedElement.16" name="" visibility="private" memberEnd="Kernel-Expressions-MetadataAccessExpression-referencedElement Kernel-Expressions-_packagedElement.16-accessExpression">
        <ownedEnd xmi:id="Kernel-Expressions-_packagedElement.16-accessExpression" name="accessExpression" visibility="public" type="Kernel-Expressions-MetadataAccessExpression" association="Kernel-Expressions-_packagedElement.16">
          <ownedComment xmi:id="Kernel-Expressions-_packagedElement.16-accessExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-_packagedElement.16-accessExpression">
            <body>&lt;p>The MetadataAccessExpressions having a certain Element as their &lt;code>referencedElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-_packagedElement.16-accessExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-_packagedElement.16-accessExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Expressions-MetadataAccessExpression" name="MetadataAccessExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Expressions-MetadataAccessExpression-_ownedComment.0" annotatedElement="Kernel-Expressions-MetadataAccessExpression">
          <body>&lt;p>A &lt;code>MetadataAccessExpression&lt;/code> is an &lt;code>Expression&lt;/code> whose &lt;code>result&lt;/code> is a sequence of instances of &lt;code>Metaclasses&lt;/code> representing all the &lt;code>MetadataFeature&lt;/code> annotations of the &lt;code>referencedElement&lt;/code>. In addition, the sequence includes an instance of the reflective &lt;code>Metaclass&lt;/code> corresponding to the MOF class of the &lt;code>referencedElement&lt;/code>, with values for all the abstract syntax properties of the &lt;code>referencedElement&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Expressions-MetadataAccessExpression-checkMetadataAccessExpressionSpecialization" name="checkMetadataAccessExpressionSpecialization" visibility="public" constrainedElement="Kernel-Expressions-MetadataAccessExpression">
          <ownedComment xmi:id="Kernel-Expressions-MetadataAccessExpression-checkMetadataAccessExpressionSpecialization-_ownedComment.0" annotatedElement="Kernel-Expressions-MetadataAccessExpression-checkMetadataAccessExpressionSpecialization">
            <body>&lt;p>A &lt;code>MetadataAccessExpression&lt;/code> must directly or indirectly specialize the base &lt;code>MetadataAccessExpression&lt;/code> &lt;code>&lt;em>Performances::metadataAccessEvaluations&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-MetadataAccessExpression-checkMetadataAccessExpressionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Performances::metadataAccessEvaluations&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Expressions-MetadataAccessExpression-_generalization.0" general="Kernel-Functions-Expression"/>
        <ownedAttribute xmi:id="Kernel-Expressions-MetadataAccessExpression-referencedElement" name="referencedElement" visibility="public" type="Root-Elements-Element" association="Kernel-Expressions-_packagedElement.16">
          <ownedComment xmi:id="Kernel-Expressions-MetadataAccessExpression-referencedElement-_ownedComment.0" annotatedElement="Kernel-Expressions-MetadataAccessExpression-referencedElement">
            <body>&lt;p> The &lt;code>Element&lt;/code> whose metadata is being accessed.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-MetadataAccessExpression-referencedElement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-MetadataAccessExpression-referencedElement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-unnamed1" redefinedOperation="Kernel-Functions-Expression-modelLevelEvaluable">
          <ownedComment xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable">
            <body>&lt;p>A &lt;code>MetadataAccessExpression&lt;/code> is always model-level evaluable.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>true</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-MetadataAccessExpression-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate" name="evaluate" visibility="public" bodyCondition="Kernel-Expressions-MetadataAccessExpression-evaluate-unnamed1" redefinedOperation="Kernel-Functions-Expression-evaluate">
          <ownedComment xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate-_ownedComment.0" annotatedElement="Kernel-Expressions-MetadataAccessExpression-evaluate">
            <body>&lt;p>Return the &lt;code>ownedElements&lt;/code> of the &lt;code>referencedElement&lt;/code> that are &lt;code>MetadataFeatures&lt;/code> and have the &lt;code>referencedElement&lt;/code> as an &lt;code>annotatedElement&lt;/code>, plus a &lt;code>MetadataFeature&lt;/code> whose &lt;code>annotatedElement&lt;/code> is the &lt;code>referencedElement&lt;/code>, whose &lt;code>metaclass&lt;/code> is the reflective &lt;code>Metaclass&lt;/code> corresponding to the MOF class of the &lt;code>referencedElement&lt;/code> and whose &lt;code>ownedFeatures&lt;/code> are bound to the values of the MOF properties of the &lt;code>referencedElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>referencedElement.ownedElement->
    select(oclIsKindOf(MetadataFeature) 
        and annotatedElement->includes(referencedElement))->
    including(metaclassFeature())</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate-target" name="target" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate-result" name="result" visibility="public" type="Root-Elements-Element" isOrdered="true" isUnique="false" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate-result-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Expressions-MetadataAccessExpression-evaluate-result-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Expressions-MetadataAccessExpression-metaclassFeature" name="metaclassFeature" visibility="public">
          <ownedComment xmi:id="Kernel-Expressions-MetadataAccessExpression-metaclassFeature-_ownedComment.0" annotatedElement="Kernel-Expressions-MetadataAccessExpression-metaclassFeature">
            <body>&lt;p>Return a &lt;code>MetadataFeature&lt;/code> whose &lt;code>annotatedElement&lt;/code> is the &lt;code>referencedElement&lt;/code>, whose &lt;code>metaclass&lt;/code> is the reflective &lt;code>Metaclass&lt;/code> corresponding to the MOF class of the &lt;code>referencedElement&lt;/code> and whose &lt;code>ownedFeatures&lt;/code> are bound to the MOF properties of the &lt;code>referencedElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedParameter xmi:id="Kernel-Expressions-MetadataAccessExpression-metaclassFeature-_ownedParameter.0" name="" visibility="public" type="Kernel-Metadata-MetadataFeature" direction="return"/>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Interactions" name="Interactions" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-_packagedElement.0" name="" visibility="private" memberEnd="Kernel-Interactions-ItemFlow-targetInputFeature Kernel-Interactions-_packagedElement.0-itemFlowToInput">
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.0-itemFlowToInput" name="itemFlowToInput" visibility="public" type="Kernel-Interactions-ItemFlow" isDerived="true" association="Kernel-Interactions-_packagedElement.0">
          <ownedComment xmi:id="Kernel-Interactions-_packagedElement.0-itemFlowToInput-_ownedComment.0" annotatedElement="Kernel-Interactions-_packagedElement.0-itemFlowToInput">
            <body>&lt;p>The ItemFlow that has a certain &lt;code>targetInputFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-_packagedElement.0-itemFlowToInput-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-_packagedElement.0-itemFlowToInput-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Interactions-ItemFlow" name="ItemFlow" visibility="public">
        <ownedComment xmi:id="Kernel-Interactions-ItemFlow-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow">
          <body>&lt;p>An &lt;code>ItemFlow&lt;/code> is a &lt;code>Step&lt;/code> that represents the transfer of objects or data values from one &lt;code>Feature&lt;/code> to another. &lt;code>ItemFlows&lt;/code> can take non-zero time to complete.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlow-checkItemFlowSpecialization" name="checkItemFlowSpecialization" visibility="public" constrainedElement="Kernel-Interactions-ItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-checkItemFlowSpecialization-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-checkItemFlowSpecialization">
            <body>&lt;p>An &lt;code>ItemFlow&lt;/code> must directly or indirectly specialize the &lt;code>Step&lt;/code> &lt;code>&lt;em>Transfers::transfers&lt;/em>&lt;/code> from the Kernel Semantic Library. In addition, if the &lt;code>ItemFlow&lt;/code> has &lt;code>ItemFlowEnds&lt;/code>, it must specialize &lt;code>&lt;em>Transfers::flowTransfers&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlow-checkItemFlowSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>if itemFlowEnds->isEmpty() then
    specializesFromLibrary(&quot;Transfers::transfers&quot;)
else
    specializesFromLibrary(&quot;Transfers::flowTransfers&quot;)
endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemType" name="deriveItemFlowItemType" visibility="public" constrainedElement="Kernel-Interactions-ItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemType-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-deriveItemFlowItemType">
            <body>&lt;p>The &lt;code>itemTypes&lt;/code> of an &lt;code>ItemFlow&lt;/code> are the &lt;code>types&lt;/code> of the &lt;code>itemFeature&lt;/code> of the &lt;code>ItemFlow&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>itemType =
    if itemFeature = null then Sequence{}
    else itemFeature.type
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowSourceOutputFeature" name="deriveItemFlowSourceOutputFeature" visibility="public" constrainedElement="Kernel-Interactions-ItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowSourceOutputFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-deriveItemFlowSourceOutputFeature">
            <body>&lt;p>The &lt;code>sourceOutputFeature&lt;/code> of a &lt;code>ItemFlow&lt;/code> is the first &lt;code>ownedFeature&lt;/code> of the first &lt;code>connectorEnd&lt;/code> of the &lt;code>ItemFlow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowSourceOutputFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceOutputFeature =
    if connectorEnd->isEmpty() or 
        connectorEnd.ownedFeature->isEmpty()
    then null
    else connectorEnd.ownedFeature->first()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowTargetInputFeature" name="deriveItemFlowTargetInputFeature" visibility="public" constrainedElement="Kernel-Interactions-ItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowTargetInputFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-deriveItemFlowTargetInputFeature">
            <body>&lt;p>The &lt;code>targetInputFeature&lt;/code> of a &lt;code>ItemFlow&lt;/code> is the first &lt;code>ownedFeature&lt;/code> of the second &lt;code>connectorEnd&lt;/code> of the &lt;code>ItemFlow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowTargetInputFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetInputFeature =
    if connectorEnd->size() &lt; 2 or 
        connectorEnd->at(2).ownedFeature->isEmpty()
    then null
    else connectorEnd->at(2).ownedFeature->first()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemFlowEnd" name="deriveItemFlowItemFlowEnd" visibility="public" constrainedElement="Kernel-Interactions-ItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemFlowEnd-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-deriveItemFlowItemFlowEnd">
            <body>&lt;p>The &lt;code>itemFlowEnds&lt;/code> of a &lt;code>ItemFlow&lt;/code> are all its &lt;code>connectorEnds&lt;/code> that are &lt;code>ItemFlowEnds&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemFlowEnd-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>itemFlowEnd = connectorEnd->selectByKind(ItemFlowEnd)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemFeature" name="deriveItemFlowItemFeature" visibility="public" constrainedElement="Kernel-Interactions-ItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-deriveItemFlowItemFeature">
            <body>&lt;p>The &lt;code>itemFeature&lt;/code> of an &lt;code>ItemFlow&lt;/code> is the single one of its &lt;code>ownedFeatures&lt;/code> that is an &lt;code>ItemFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlow-deriveItemFlowItemFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>itemFeature =
    let itemFeatures : Sequence(ItemFeature) = 
        ownedFeature->selectByKind(ItemFeature) in
    if itemFeatures->isEmpty() then null
    else itemFeatures->first()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlow-validateItemFlowItemFeature" name="validateItemFlowItemFeature" visibility="public" constrainedElement="Kernel-Interactions-ItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-validateItemFlowItemFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-validateItemFlowItemFeature">
            <body>&lt;p>An &lt;code>ItemFlow&lt;/code> must have at most one &lt;code>ownedFeature&lt;/code> that is an &lt;code>ItemFlow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlow-validateItemFlowItemFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeature->selectByKind(ItemFeature)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Interactions-ItemFlow-_generalization.0" general="Kernel-Connectors-Connector"/>
        <generalization xmi:id="Kernel-Interactions-ItemFlow-_generalization.1" general="Kernel-Behaviors-Step"/>
        <ownedAttribute xmi:id="Kernel-Interactions-ItemFlow-itemType" name="itemType" visibility="public" type="Core-Classifiers-Classifier" isOrdered="true" isUnique="false" isDerived="true" association="Kernel-Interactions-_packagedElement.2">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-itemType-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-itemType">
            <body>&lt;p>The type of values transferred, which is the &lt;code>type&lt;/code> of the &lt;code>itemFeature&lt;/code> of the &lt;code>ItemFlow&lt;/code>.&lt;/p>

</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-ItemFlow-itemType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-ItemFlow-itemType-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Interactions-ItemFlow-targetInputFeature" name="targetInputFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isUnique="false" isDerived="true" association="Kernel-Interactions-_packagedElement.0">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-targetInputFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-targetInputFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that receives the values carried by the &lt;code>ItemFlow&lt;/code>. It must be an owned &lt;code>output&lt;/code> of the target participant of the &lt;code>ItemFlow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-ItemFlow-targetInputFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-ItemFlow-targetInputFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Interactions-ItemFlow-sourceOutputFeature" name="sourceOutputFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isUnique="false" isDerived="true" association="Kernel-Interactions-_packagedElement.4">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-sourceOutputFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-sourceOutputFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that provides the items carried by the &lt;code>ItemFlow&lt;/code>. It must be an owned &lt;code>output&lt;/code> of the &lt;code>source&lt;/code> of the &lt;code>ItemFlow&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-ItemFlow-sourceOutputFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-ItemFlow-sourceOutputFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Interactions-ItemFlow-itemFlowEnd" name="itemFlowEnd" visibility="public" type="Kernel-Interactions-ItemFlowEnd" isOrdered="true" isDerived="true" subsettedProperty="Kernel-Connectors-Connector-connectorEnd" association="Kernel-Interactions-_packagedElement.7">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-itemFlowEnd-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-itemFlowEnd">
            <body>&lt;p>The &lt;code>connectorEnds&lt;/code> of this &lt;code>ItemFlow&lt;/code> that are &lt;code>ItemFlowEnds&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-ItemFlow-itemFlowEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-ItemFlow-itemFlowEnd-_upperValue" name="" visibility="public" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Interactions-ItemFlow-itemFeature" name="itemFeature" visibility="public" type="Kernel-Interactions-ItemFeature" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Kernel-Interactions-_packagedElement.8">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-itemFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-itemFeature">
            <body>&lt;p>The &lt;code>ownedFeature&lt;/code> of the &lt;code>ItemFlow&lt;/code> that is an &lt;code>ItemFeature&lt;/code> (if any).&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-ItemFlow-itemFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-ItemFlow-itemFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Interactions-ItemFlow-interaction" name="interaction" visibility="public" type="Kernel-Interactions-Interaction" isOrdered="true" isDerived="true" redefinedProperty="Kernel-Connectors-Connector-association Kernel-Behaviors-Step-behavior" association="Kernel-Interactions-_packagedElement.10">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlow-interaction-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlow-interaction">
            <body>&lt;p>The &lt;code>Interactions&lt;/code> that type this &lt;code>ItemFlow&lt;/code>. &lt;code>Interactions&lt;/code> are both &lt;code>Associations&lt;/code> and &lt;code>Behaviors&lt;/code>, which can type &lt;code>Connectors&lt;/code> and &lt;code>Steps&lt;/code>, respectively.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-ItemFlow-interaction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-ItemFlow-interaction-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-_packagedElement.2" name="" visibility="private" memberEnd="Kernel-Interactions-ItemFlow-itemType Kernel-Interactions-_packagedElement.2-itemFlowForType">
        <ownedComment xmi:id="Kernel-Interactions-_packagedElement.2-_ownedComment.0" annotatedElement="Kernel-Interactions-_packagedElement.2">
          <body>&lt;p>The ItemFlow that has a certain &lt;code>itemType&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.2-itemFlowForType" name="itemFlowForType" visibility="public" type="Kernel-Interactions-ItemFlow" isDerived="true" association="Kernel-Interactions-_packagedElement.2">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-_packagedElement.2-itemFlowForType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-_packagedElement.2-itemFlowForType-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Interactions-SuccessionItemFlow" name="SuccessionItemFlow" visibility="public">
        <ownedComment xmi:id="Kernel-Interactions-SuccessionItemFlow-_ownedComment.0" annotatedElement="Kernel-Interactions-SuccessionItemFlow">
          <body>&lt;p>A &lt;code>SuccessionItemFlow&lt;/code> is an &lt;code>ItemFlow&lt;/code> that also provides temporal ordering. It classifies &lt;code>&lt;em>Transfers&lt;/em>&lt;/code> that cannot start until the source &lt;code>&lt;em>Occurrence&lt;/em>&lt;/code> has completed and that must complete before the target &lt;code>&lt;em>Occurrence&lt;/em>&lt;/code> can start.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Interactions-SuccessionItemFlow-checkSuccessionItemFlowSpecialization" name="checkSuccessionItemFlowSpecialization" visibility="public" constrainedElement="Kernel-Interactions-SuccessionItemFlow">
          <ownedComment xmi:id="Kernel-Interactions-SuccessionItemFlow-checkSuccessionItemFlowSpecialization-_ownedComment.0" annotatedElement="Kernel-Interactions-SuccessionItemFlow-checkSuccessionItemFlowSpecialization">
            <body>&lt;p>A &lt;code>SuccessionItemFlow&lt;/code> must directly or indirectly specialize the &lt;code>Step&lt;/code> &lt;code>&lt;em>Transfers::flowTransfersBefore&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-SuccessionItemFlow-checkSuccessionItemFlowSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Transfers::flowTransfersBefore&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Interactions-SuccessionItemFlow-_generalization.0" general="Kernel-Connectors-Succession"/>
        <generalization xmi:id="Kernel-Interactions-SuccessionItemFlow-_generalization.1" general="Kernel-Interactions-ItemFlow"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-_packagedElement.4" name="" visibility="private" memberEnd="Kernel-Interactions-ItemFlow-sourceOutputFeature Kernel-Interactions-_packagedElement.4-itemFlowFromOutput">
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.4-itemFlowFromOutput" name="itemFlowFromOutput" visibility="public" type="Kernel-Interactions-ItemFlow" isDerived="true" association="Kernel-Interactions-_packagedElement.4">
          <ownedComment xmi:id="Kernel-Interactions-_packagedElement.4-itemFlowFromOutput-_ownedComment.0" annotatedElement="Kernel-Interactions-_packagedElement.4-itemFlowFromOutput">
            <body>&lt;p>The ItemFlow that has a certain &lt;code>sourceOutputFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-_packagedElement.4-itemFlowFromOutput-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-_packagedElement.4-itemFlowFromOutput-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Interactions-Interactions20TBD" name="Interactions TBD" visibility="public" URI="">
        <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-Interactions20TBD-_packagedElement.0" name="" visibility="private" memberEnd="Kernel-Interactions-Interactions20TBD-AtomicInteraction-itemType Kernel-Interactions-Interactions20TBD-_packagedElement.0-_ownedEnd.0">
          <ownedEnd xmi:id="Kernel-Interactions-Interactions20TBD-_packagedElement.0-_ownedEnd.0" name="" visibility="public" type="Kernel-Interactions-Interactions20TBD-AtomicInteraction" association="Kernel-Interactions-Interactions20TBD-_packagedElement.0"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Interactions-Interactions20TBD-AtomicInteraction" name="AtomicInteraction" visibility="public">
          <ownedAttribute xmi:id="Kernel-Interactions-Interactions20TBD-AtomicInteraction-itemType" name="itemType" visibility="public" type="Core-Classifiers-Classifier" association="Kernel-Interactions-Interactions20TBD-_packagedElement.0">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-Interactions20TBD-AtomicInteraction-itemType-_lowerValue" name="" visibility="public" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-Interactions20TBD-AtomicInteraction-itemType-_upperValue" name="" visibility="public" value="*"/>
          </ownedAttribute>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-_packagedElement.6" name="" visibility="private" memberEnd="Kernel-Interactions-_packagedElement.6-participantFeature Kernel-Interactions-_packagedElement.6-_ownedEnd.0" navigableOwnedEnd="Kernel-Interactions-_packagedElement.6-participantFeature">
        <generalization xmi:id="Kernel-Interactions-_packagedElement.6-_generalization.0" general="Kernel-Connectors-_packagedElement.3"/>
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.6-_ownedEnd.0" name="" visibility="public" type="Kernel-Interactions-Interaction" association="Kernel-Interactions-_packagedElement.6"/>
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.6-participantFeature" name="participantFeature" visibility="public" type="Core-Features-Feature" redefinedProperty="Kernel-Connectors-_packagedElement.3-participantFeature" subsettedProperty="Kernel-Behaviors-_packagedElement.5-involvesFeature" association="Kernel-Interactions-_packagedElement.6">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Interactions-_packagedElement.6-participantFeature-_lowerValue" name="" visibility="public" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Interactions-_packagedElement.6-participantFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-_packagedElement.7" name="" visibility="private" memberEnd="Kernel-Interactions-ItemFlow-itemFlowEnd Kernel-Interactions-_packagedElement.7-_ownedEnd.0">
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.7-_ownedEnd.0" name="" visibility="public" type="Kernel-Interactions-ItemFlow" association="Kernel-Interactions-_packagedElement.7"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-_packagedElement.8" name="" visibility="private" memberEnd="Kernel-Interactions-ItemFlow-itemFeature Kernel-Interactions-_packagedElement.8-_ownedEnd.0">
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.8-_ownedEnd.0" name="" visibility="public" type="Kernel-Interactions-ItemFlow" association="Kernel-Interactions-_packagedElement.8"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Interactions-Interaction" name="Interaction" visibility="public">
        <ownedComment xmi:id="Kernel-Interactions-Interaction-_ownedComment.0" annotatedElement="Kernel-Interactions-Interaction">
          <body>&lt;p>An &lt;code>Interaction&lt;/code> is a &lt;code>Behavior&lt;/code> that is also an &lt;code>Association&lt;/code>, providing a context for multiple objects that have behaviors that impact one another.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Kernel-Interactions-Interaction-_generalization.0" general="Kernel-Behaviors-Behavior"/>
        <generalization xmi:id="Kernel-Interactions-Interaction-_generalization.1" general="Kernel-Associations-Association"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Interactions-_packagedElement.10" name="" visibility="private" memberEnd="Kernel-Interactions-ItemFlow-interaction Kernel-Interactions-_packagedElement.10-_ownedEnd.0">
        <ownedEnd xmi:id="Kernel-Interactions-_packagedElement.10-_ownedEnd.0" name="" visibility="public" type="Kernel-Interactions-ItemFlow" association="Kernel-Interactions-_packagedElement.10"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Interactions-ItemFeature" name="ItemFeature" visibility="public">
        <ownedComment xmi:id="Kernel-Interactions-ItemFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFeature">
          <body>&lt;p>An &lt;code>ItemFeature&lt;/code> is the &lt;code>ownedFeature&lt;/code> of an &lt;code>ItemFlow&lt;/code> that identifies the things carried by the kinds of transfers that are instances of the &lt;code>ItemFlow&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Interactions-ItemFeature-checkItemFeatureRedefinition" name="checkItemFeatureRedefinition" visibility="public" constrainedElement="Kernel-Interactions-ItemFeature">
          <ownedComment xmi:id="Kernel-Interactions-ItemFeature-checkItemFeatureRedefinition-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFeature-checkItemFeatureRedefinition">
            <body>&lt;p>An &lt;code>ItemFeature&lt;/code> must redefine the &lt;code>Feature&lt;/code> &lt;code>&lt;em>Transfers::Transfer::item&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFeature-checkItemFeatureRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRedefinition.redefinedFeature->
    redefinesFromLibrary(&quot;Transfers::Transfer::item&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Interactions-ItemFeature-_generalization.0" general="Core-Features-Feature"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Interactions-ItemFlowEnd" name="ItemFlowEnd" visibility="public">
        <ownedComment xmi:id="Kernel-Interactions-ItemFlowEnd-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlowEnd">
          <body>&lt;p>An &lt;code>ItemFlowEnd&lt;/code> is a &lt;code>Feature&lt;/code> that is one of the &lt;code>connectorEnds&lt;/code> giving the &lt;code>&lt;em>source&lt;/em>&lt;/code> or &lt;code>&lt;em>target&lt;/em>&lt;/code> of an &lt;code>ItemFlow&lt;/code>. For &lt;code>ItemFlows&lt;/code> typed by &lt;code>&lt;em>FlowTransfer&lt;/em>&lt;/code> or its specializations, &lt;code>ItemFlowEnds&lt;/code> must have exactly one &lt;code>ownedFeature&lt;/code>, which redefines &lt;code>&lt;em>Transfer::source::sourceOutput&lt;/em>&lt;/code> or &lt;code>&lt;em>Transfer::target::targetInput&lt;/em>&lt;/code> and redefines the corresponding feature of the &lt;code>relatedElement&lt;/code> for its end.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndIsEnd" name="validateItemFlowEndIsEnd" visibility="public" constrainedElement="Kernel-Interactions-ItemFlowEnd">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndIsEnd-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndIsEnd">
            <body>&lt;p>An &lt;code>ItemFlowEnd&lt;/code> must be an end &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndIsEnd-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isEnd</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndNestedFeature" name="validateItemFlowEndNestedFeature" visibility="public" constrainedElement="Kernel-Interactions-ItemFlowEnd">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndNestedFeature-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndNestedFeature">
            <body>&lt;p>An &lt;code>ItemFlowEnd&lt;/code> must have exactly one &lt;code>ownedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndNestedFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeature->size() = 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndOwningType" name="validateItemFlowEndOwningType" visibility="public" constrainedElement="Kernel-Interactions-ItemFlowEnd">
          <ownedComment xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndOwningType-_ownedComment.0" annotatedElement="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of an &lt;code>ItemFlow&lt;/code> must be an &lt;code>ItemFlow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Interactions-ItemFlowEnd-validateItemFlowEndOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and owningType.oclIsKindOf(ItemFlow)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Interactions-ItemFlowEnd-_generalization.0" general="Core-Features-Feature"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Behaviors" name="Behaviors" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Behaviors-_packagedElement.0" name="" visibility="private" memberEnd="Kernel-Behaviors-Behavior-step Kernel-Behaviors-_packagedElement.0-featuringBehavior">
        <ownedEnd xmi:id="Kernel-Behaviors-_packagedElement.0-featuringBehavior" name="featuringBehavior" visibility="public" type="Kernel-Behaviors-Behavior" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Kernel-Behaviors-_packagedElement.0">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-_packagedElement.0-featuringBehavior-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-_packagedElement.0-featuringBehavior-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Behaviors-_packagedElement.1" name="" visibility="private" memberEnd="Kernel-Behaviors-Behavior-parameter Kernel-Behaviors-_packagedElement.1-parameteredBehavior">
        <ownedEnd xmi:id="Kernel-Behaviors-_packagedElement.1-parameteredBehavior" name="parameteredBehavior" visibility="public" type="Kernel-Behaviors-Behavior" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Kernel-Behaviors-_packagedElement.1">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-_packagedElement.1-parameteredBehavior-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-_packagedElement.1-parameteredBehavior-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Behaviors-Step" name="Step" visibility="public">
        <ownedComment xmi:id="Kernel-Behaviors-Step-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step">
          <body>&lt;p>A &lt;code>Step&lt;/code> is a &lt;code>Feature&lt;/code> that is typed by one or more &lt;code>Behaviors&lt;/code>. &lt;code>Steps&lt;/code> may be used by one &lt;code>Behavior&lt;/code> to coordinate the performance of other &lt;code>Behaviors&lt;/code>, supporting a steady refinement of behavioral descriptions. &lt;code>Steps&lt;/code> can be ordered in time and can be connected using &lt;code>ItemFlows&lt;/code> to specify things flowing between their &lt;code>parameters&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Behaviors-Step-checkStepSpecialization" name="checkStepSpecialization" visibility="public" constrainedElement="Kernel-Behaviors-Step">
          <ownedComment xmi:id="Kernel-Behaviors-Step-checkStepSpecialization-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step-checkStepSpecialization">
            <body>&lt;p>A Step must directly or indirectly specialize the base Step &lt;code>&lt;em>Performances::performances&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-Step-checkStepSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>allSupertypes()->includes(resolveGlobal(&quot;Performances::performances&quot;))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Behaviors-Step-checkStepEnclosedPerformanceSpecialization" name="checkStepEnclosedPerformanceSpecialization" visibility="public" constrainedElement="Kernel-Behaviors-Step">
          <ownedComment xmi:id="Kernel-Behaviors-Step-checkStepEnclosedPerformanceSpecialization-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step-checkStepEnclosedPerformanceSpecialization">
            <body>&lt;p>A&lt;code>Step&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>Behavior&lt;/code> or another &lt;code>Step&lt;/code> must directly or indirectly specialize the &lt;code>Step&lt;/code> &lt;code>&lt;em>Performances::Performance::enclosedPerformance&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-Step-checkStepEnclosedPerformanceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
    (owningType.oclIsKindOf(Behavior) or
     owningType.oclIsKindOf(Step)) implies
    specializesFromLibrary('Performances::Performance::enclosedPerformance')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Behaviors-Step-checkStepOwnedPerformanceSpecialization" name="checkStepOwnedPerformanceSpecialization" visibility="public" constrainedElement="Kernel-Behaviors-Step">
          <ownedComment xmi:id="Kernel-Behaviors-Step-checkStepOwnedPerformanceSpecialization-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step-checkStepOwnedPerformanceSpecialization">
            <body>&lt;p>A composite &lt;code>Step&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>Structure&lt;/code> or a &lt;code>Feature&lt;/code> typed by a &lt;code>Structure&lt;/code> must directly or indirectly specialize the &lt;code>Step&lt;/code> &lt;code>&lt;em>Objects::Object::ownedPerformance&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-Step-checkStepOwnedPerformanceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(Structure) or
 owningType.oclIsKindOf(Feature) and
 owningType.oclAsType(Feature).type->
    exists(oclIsKindOf(Structure)) implies
    specializesFromLibrary('Objects::Object::ownedPerformance')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Behaviors-Step-checkStepSubperformanceSpecialization" name="checkStepSubperformanceSpecialization" visibility="public" constrainedElement="Kernel-Behaviors-Step">
          <ownedComment xmi:id="Kernel-Behaviors-Step-checkStepSubperformanceSpecialization-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step-checkStepSubperformanceSpecialization">
            <body>&lt;p>A&lt;code>Step&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>Behavior&lt;/code> or another &lt;code>Step&lt;/code>, and which is composite, must directly or indirectly specialize the &lt;code>Step&lt;/code> &lt;code>&lt;em>Performances::Performance::subperformance&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-Step-checkStepSubperformanceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
    (owningType.oclIsKindOf(Behavior) or
     owningType.oclIsKindOf(Step)) and
    self.isComposite implies
    specializesFromLibrary('Performances::Performance::subperformance')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Behaviors-Step-deriveStepBehavior" name="deriveStepBehavior" visibility="public" constrainedElement="Kernel-Behaviors-Step">
          <ownedComment xmi:id="Kernel-Behaviors-Step-deriveStepBehavior-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step-deriveStepBehavior">
            <body>&lt;p>The &lt;code>behaviors&lt;/code> of a &lt;code>Step&lt;/code> are all its &lt;code>types&lt;/code> that are &lt;code>Behaviors&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-Step-deriveStepBehavior-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>behavior = type->selectByKind(Behavior)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Behaviors-Step-_generalization.0" general="Core-Features-Feature"/>
        <ownedAttribute xmi:id="Kernel-Behaviors-Step-behavior" name="behavior" visibility="public" type="Kernel-Behaviors-Behavior" isOrdered="true" isDerived="true" subsettedProperty="Core-Features-Feature-type" association="Kernel-Behaviors-_packagedElement.3">
          <ownedComment xmi:id="Kernel-Behaviors-Step-behavior-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step-behavior">
            <body>&lt;p>The &lt;code>Behaviors&lt;/code> that type this &lt;code>Step&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-Step-behavior-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-Step-behavior-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Behaviors-Step-parameter" name="parameter" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" redefinedProperty="Core-Types-Type-directedFeature" association="Kernel-Behaviors-_packagedElement.8">
          <ownedComment xmi:id="Kernel-Behaviors-Step-parameter-_ownedComment.0" annotatedElement="Kernel-Behaviors-Step-parameter">
            <body>&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>Step&lt;/code>, which are defined as its &lt;code>directedFeatures&lt;/code>, whose values are passed into and/or out of a performance of the &lt;code>Step&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-Step-parameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-Step-parameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Behaviors-_packagedElement.3" name="" visibility="private" memberEnd="Kernel-Behaviors-Step-behavior Kernel-Behaviors-_packagedElement.3-typedStep">
        <ownedEnd xmi:id="Kernel-Behaviors-_packagedElement.3-typedStep" name="typedStep" visibility="public" type="Kernel-Behaviors-Step" isDerived="true" subsettedProperty="Core-Features-_packagedElement.2-typedFeature" association="Kernel-Behaviors-_packagedElement.3">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-_packagedElement.3-typedStep-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-_packagedElement.3-typedStep-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Behaviors-Behavior" name="Behavior" visibility="public">
        <ownedComment xmi:id="Kernel-Behaviors-Behavior-_ownedComment.0" annotatedElement="Kernel-Behaviors-Behavior">
          <body>&lt;p>A &lt;code>Behavior &lt;/code>coordinates occurrences of other &lt;code>Behaviors&lt;/code>, as well as changes in objects. &lt;code>Behaviors&lt;/code> can be decomposed into &lt;code>Steps&lt;/code> and be characterized by &lt;code>parameters&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Behaviors-Behavior-checkBehaviorSpecialization" name="checkBehaviorSpecialization" visibility="public" constrainedElement="Kernel-Behaviors-Behavior">
          <ownedComment xmi:id="Kernel-Behaviors-Behavior-checkBehaviorSpecialization-_ownedComment.0" annotatedElement="Kernel-Behaviors-Behavior-checkBehaviorSpecialization">
            <body>&lt;p>A &lt;code>Behavior&lt;/code> must directly or indirectly specialize the base &lt;code>Behavior&lt;/code> &lt;code>&lt;em>Performances::Performance&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-Behavior-checkBehaviorSpecialization-_specification" name="" visibility="public">
            <language>English</language>
            <body>specializesFromLibrary(&quot;Performances::Performance&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Behaviors-Behavior-deriveBehaviorStep" name="deriveBehaviorStep" visibility="public" constrainedElement="Kernel-Behaviors-Behavior">
          <ownedComment xmi:id="Kernel-Behaviors-Behavior-deriveBehaviorStep-_ownedComment.0" annotatedElement="Kernel-Behaviors-Behavior-deriveBehaviorStep">
            <body>&lt;p>The &lt;code>steps&lt;/code> of a &lt;code>Behavior&lt;/code> are its &lt;code>features&lt;/code> that are &lt;code>Steps&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-Behavior-deriveBehaviorStep-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>step = feature->selectByKind(Step)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Behaviors-Behavior-_generalization.0" general="Kernel-Classes-Class"/>
        <ownedAttribute xmi:id="Kernel-Behaviors-Behavior-step" name="step" visibility="public" type="Kernel-Behaviors-Step" isDerived="true" subsettedProperty="Core-Types-Type-feature" association="Kernel-Behaviors-_packagedElement.0">
          <ownedComment xmi:id="Kernel-Behaviors-Behavior-step-_ownedComment.0" annotatedElement="Kernel-Behaviors-Behavior-step">
            <body>&lt;p>The &lt;code>Steps&lt;/code> that make up this &lt;code>Behavior&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-Behavior-step-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-Behavior-step-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Behaviors-Behavior-parameter" name="parameter" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" redefinedProperty="Core-Types-Type-directedFeature" association="Kernel-Behaviors-_packagedElement.1">
          <ownedComment xmi:id="Kernel-Behaviors-Behavior-parameter-_ownedComment.0" annotatedElement="Kernel-Behaviors-Behavior-parameter">
            <body>&lt;p>The parameters of this &lt;code>Behavior&lt;/code>, which are defined as its &lt;code>directedFeatures&lt;/code>, whose values are passed into and/or out of a performance of the &lt;code>Behavior&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-Behavior-parameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-Behavior-parameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Behaviors-_packagedElement.5" name="" visibility="private" memberEnd="Kernel-Behaviors-_packagedElement.5-involvesFeature Kernel-Behaviors-_packagedElement.5-_ownedEnd.0" navigableOwnedEnd="Kernel-Behaviors-_packagedElement.5-involvesFeature">
        <ownedEnd xmi:id="Kernel-Behaviors-_packagedElement.5-_ownedEnd.0" name="" visibility="public" type="Kernel-Behaviors-Behavior" association="Kernel-Behaviors-_packagedElement.5"/>
        <ownedEnd xmi:id="Kernel-Behaviors-_packagedElement.5-involvesFeature" name="involvesFeature" visibility="public" type="Core-Features-Feature" association="Kernel-Behaviors-_packagedElement.5">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-_packagedElement.5-involvesFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-_packagedElement.5-involvesFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Behaviors-ParameterMembership" name="ParameterMembership" visibility="public">
        <ownedComment xmi:id="Kernel-Behaviors-ParameterMembership-_ownedComment.0" annotatedElement="Kernel-Behaviors-ParameterMembership">
          <body>&lt;p>A &lt;code>ParameterMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> that identifies its &lt;code>memberFeature&lt;/code> as a parameter, which is always owned, and must have a &lt;code>direction&lt;/code>. A &lt;code>ParameterMembership&lt;/code> must be owned by a &lt;code>Behavior&lt;/code> or a &lt;code>Step&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Behaviors-ParameterMembership-validateParameterMembershipParameterHasDirection" name="validateParameterMembershipParameterHasDirection" visibility="public" constrainedElement="Kernel-Behaviors-ParameterMembership">
          <ownedComment xmi:id="Kernel-Behaviors-ParameterMembership-validateParameterMembershipParameterHasDirection-_ownedComment.0" annotatedElement="Kernel-Behaviors-ParameterMembership-validateParameterMembershipParameterHasDirection">
            <body>&lt;p>The &lt;code>ownedMemberParameter&lt;/code> of a &lt;code>ParameterMembership&lt;/code> must have a non-null &lt;code>direction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-ParameterMembership-validateParameterMembershipParameterHasDirection-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMemberParameter.direction &lt;> null</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Behaviors-ParameterMembership-validateParameterMembershipOwningType" name="validateParameterMembershipOwningType" visibility="public" constrainedElement="Kernel-Behaviors-ParameterMembership">
          <ownedComment xmi:id="Kernel-Behaviors-ParameterMembership-validateParameterMembershipOwningType-_ownedComment.0" annotatedElement="Kernel-Behaviors-ParameterMembership-validateParameterMembershipOwningType">
            <body>&lt;p>A &lt;code>ParameterMembership&lt;/code> must be owned by a &lt;code>Behavior&lt;/code> or a &lt;code>Step&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Behaviors-ParameterMembership-validateParameterMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(Behavior) or owningType.oclIsKindOf(Step)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Behaviors-ParameterMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Kernel-Behaviors-ParameterMembership-ownedMemberParameter" name="ownedMemberParameter" visibility="public" type="Core-Features-Feature" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Kernel-Behaviors-_packagedElement.7">
          <ownedComment xmi:id="Kernel-Behaviors-ParameterMembership-ownedMemberParameter-_ownedComment.0" annotatedElement="Kernel-Behaviors-ParameterMembership-ownedMemberParameter">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that is identified as a &lt;code>parameter&lt;/code> by this &lt;code>ParameterMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-ParameterMembership-ownedMemberParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-ParameterMembership-ownedMemberParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Behaviors-_packagedElement.7" name="" visibility="private" memberEnd="Kernel-Behaviors-ParameterMembership-ownedMemberParameter Kernel-Behaviors-_packagedElement.7-owningParameterMembership">
        <ownedEnd xmi:id="Kernel-Behaviors-_packagedElement.7-owningParameterMembership" name="owningParameterMembership" visibility="public" type="Kernel-Behaviors-ParameterMembership" isDerived="true" subsettedProperty="Core-Features-Feature-owningFeatureMembership" association="Kernel-Behaviors-_packagedElement.7">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-_packagedElement.7-owningParameterMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-_packagedElement.7-owningParameterMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Behaviors-_packagedElement.8" name="" visibility="private" memberEnd="Kernel-Behaviors-Step-parameter Kernel-Behaviors-_packagedElement.8-parameteredStep">
        <ownedEnd xmi:id="Kernel-Behaviors-_packagedElement.8-parameteredStep" name="parameteredStep" visibility="public" type="Kernel-Behaviors-Step" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Kernel-Behaviors-_packagedElement.8">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Behaviors-_packagedElement.8-parameteredStep-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Behaviors-_packagedElement.8-parameteredStep-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Connectors" name="Connectors" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Connectors-Connector" name="Connector" visibility="public">
        <ownedComment xmi:id="Kernel-Connectors-Connector-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector">
          <body>&lt;p>A &lt;code>Connector&lt;/code> is a usage of &lt;code>Associations&lt;/code>, with links restricted according to instances of the &lt;code>Type&lt;/code> in which they are used (domain of the &lt;code>Connector&lt;/code>). The &lt;code>associations&lt;/code> of the &lt;code>Connector&lt;/code> restrict what kinds of things might be linked. The &lt;code>Connector&lt;/code> further restricts these links to be between values of &lt;code>Features&lt;/code> on instances of its domain.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Connectors-Connector-deriveConnectorRelatedFeature" name="deriveConnectorRelatedFeature" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-deriveConnectorRelatedFeature-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-deriveConnectorRelatedFeature">
            <body>&lt;p>The &lt;code>relatedFeatures&lt;/code> of a &lt;code>Connector&lt;/code> are the referenced &lt;code>Features&lt;/code> of its &lt;code>connectorEnds&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-deriveConnectorRelatedFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>relatedFeature = connectorEnd.ownedReferenceSubsetting->
    select(s | s &lt;> null).subsettedFeature</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-checkConnectorTypeFeaturing" name="checkConnectorTypeFeaturing" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-checkConnectorTypeFeaturing-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-checkConnectorTypeFeaturing">
            <body>&lt;p>Each &lt;code>relatedFeature&lt;/code> of a Connector must have some &lt;code>featuringType&lt;/code> of the Connector as a direct or indirect &lt;code>featuringType&lt;/code> (where a Feature with no &lt;code>featuringType&lt;/code> is treated as if the Classifier &lt;em>Base::Anything&lt;/em> was its &lt;code>featuringType&lt;/code>).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-checkConnectorTypeFeaturing-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>relatedFeature->forAll(f | 
    if featuringType->isEmpty() then f.isFeaturedWithin(null)
    else featuringType->exists(t | f.isFeaturedWithin(t))
    endif)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-deriveConnectorSourceFeature" name="deriveConnectorSourceFeature" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-deriveConnectorSourceFeature-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-deriveConnectorSourceFeature">
            <body>&lt;p>The &lt;code>sourceFeature&lt;/code> of a &lt;code>Connector&lt;/code> is its first &lt;code>relatedFeature&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-deriveConnectorSourceFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceFeature = 
    if relatedFeature->isEmpty() then null 
    else relatedFeature->first() 
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-deriveConnectorTargetFeature" name="deriveConnectorTargetFeature" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-deriveConnectorTargetFeature-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-deriveConnectorTargetFeature">
            <body>&lt;p>The &lt;code>targetFeatures&lt;/code> of a Connector are the &lt;code>relatedFeatures&lt;/code> other than the &lt;code>sourceFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-deriveConnectorTargetFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetFeature =
    if relatedFeature->size() &lt; 2 then OrderedSet{}
    else 
        relatedFeature->
            subSequence(2, relatedFeature->size())->
            asOrderedSet()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-validateConnectorRelatedFeatures" name="validateConnectorRelatedFeatures" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-validateConnectorRelatedFeatures-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-validateConnectorRelatedFeatures">
            <body>&lt;p>If a &lt;code>Connector&lt;/code> is concrete (not abstract), then it must have at least two &lt;code>relatedFeatures&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-validateConnectorRelatedFeatures-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not isAbstract implies relatedFeature->size() >= 2</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-checkConnectorSpecialization" name="checkConnectorSpecialization" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-checkConnectorSpecialization-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-checkConnectorSpecialization">
            <body>&lt;p>A Connector must directly or indirectly specialize the base Connector &lt;code>&lt;em>Links::links&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-checkConnectorSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Links::links&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-checkConnectorObjectSpecialization" name="checkConnectorObjectSpecialization" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-checkConnectorObjectSpecialization-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-checkConnectorObjectSpecialization">
            <body>&lt;p>A Connector for an AssociationStructure must directly or indirectly specialize the base Connector &lt;code>&lt;em>Objects::linkObjects&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-checkConnectorObjectSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>association->exists(oclIsKindOf(AssociationStructure)) implies
    specializesFromLibrary(&quot;Objects::linkObjects&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-checkConnectorBinaryObjectSpecialization" name="checkConnectorBinaryObjectSpecialization" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-checkConnectorBinaryObjectSpecialization-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-checkConnectorBinaryObjectSpecialization">
            <body>&lt;p>A binary Connector for an AssociationStructure  must directly or indirectly specialize the base Connector &lt;code>&lt;em>Objects::binaryLinkObjects&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-checkConnectorBinaryObjectSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>connectorEnds->size() = 2 and
association->exists(oclIsKindOf(AssocationStructure)) implies
    specializesFromLibrary(&quot;Objects::binaryLinkObjects&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-checkConnectorBinarySpecialization" name="checkConnectorBinarySpecialization" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-checkConnectorBinarySpecialization-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-checkConnectorBinarySpecialization">
            <body>&lt;p>A binary Connector must directly or indirectly specialize the base Connector &lt;code>&lt;em>Links::binaryLinks&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-checkConnectorBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>connectorEnd->size() = 2 implies
    specializesFromLibrary('Links::binaryLinks')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Connector-validateConnectorBinarySpecialization" name="validateConnectorBinarySpecialization" visibility="public" constrainedElement="Kernel-Connectors-Connector">
          <ownedComment xmi:id="Kernel-Connectors-Connector-validateConnectorBinarySpecialization-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-validateConnectorBinarySpecialization">
            <body>&lt;p>If a &lt;code>Connector&lt;/code> has more than two &lt;code>connectorEnds&lt;/code>, then it must &lt;em>not&lt;/em> specialize, directly or indirectly, the &lt;code>Association&lt;/code> &lt;em>&lt;code>BinaryLink&lt;/code>&lt;/em> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Connector-validateConnectorBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>connectorEnds->size() > 2 implies
    not specializesFromLibrary(&quot;Links::BinaryLink&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Connectors-Connector-_generalization.0" general="Core-Features-Feature"/>
        <generalization xmi:id="Kernel-Connectors-Connector-_generalization.1" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Kernel-Connectors-Connector-relatedFeature" name="relatedFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isUnique="false" isDerived="true" redefinedProperty="Root-Elements-Relationship-relatedElement" association="Kernel-Connectors-_packagedElement.2">
          <ownedComment xmi:id="Kernel-Connectors-Connector-relatedFeature-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-relatedFeature">
            <body>&lt;p>The &lt;code>Features&lt;/code> that are related by this &lt;code>Connector&lt;/code> considered as a &lt;code>Relationship&lt;/code> and that restrict the links it identifies, given by the referenced &lt;code>Features&lt;/code> of the &lt;code>connectorEnds&lt;/code> of the &lt;code>Connector&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Connector-relatedFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Connector-relatedFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Connector-association" name="association" visibility="public" type="Kernel-Associations-Association" isOrdered="true" isDerived="true" redefinedProperty="Core-Features-Feature-type" association="Kernel-Connectors-_packagedElement.1">
          <ownedComment xmi:id="Kernel-Connectors-Connector-association-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-association">
            <body>&lt;p>The &lt;code>Associations&lt;/code> that type the &lt;code>Connector&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Connector-association-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Connector-association-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Connector-isDirected" name="isDirected" visibility="public">
          <ownedComment xmi:id="Kernel-Connectors-Connector-isDirected-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-isDirected">
            <body>&lt;p>For a binary &lt;code>Connector&lt;/code>, whether or not the &lt;code>Connector&lt;/code> should be considered to have a direction from &lt;code>sourceFeature&lt;/code> to &lt;code>targetFeature&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Kernel-Connectors-Connector-isDirected-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Connector-connectorEnd" name="connectorEnd" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" redefinedProperty="Core-Types-Type-endFeature" association="Kernel-Connectors-_packagedElement.5">
          <ownedComment xmi:id="Kernel-Connectors-Connector-connectorEnd-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-connectorEnd">
            <body>&lt;p>The &lt;code>endFeatures&lt;/code> of a &lt;code>Connector&lt;/code>, which redefine the &lt;code>endFeatures&lt;code> of the &lt;code>associations&lt;/code> of the &lt;code>Connector&lt;/code>. The &lt;code>connectorEnds&lt;/code> determine via &lt;code>ReferenceSubsetting&lt;/code> &lt;code>Relationships&lt;/code> which &lt;code>Features&lt;/code> are related by the &lt;code>Connector&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Connector-connectorEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Connector-connectorEnd-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Connector-sourceFeature" name="sourceFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Kernel-Connectors-Connector-relatedFeature" association="Kernel-Connectors-_packagedElement.11">
          <ownedComment xmi:id="Kernel-Connectors-Connector-sourceFeature-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-sourceFeature">
            <body>&lt;p>The source &lt;code>relatedFeature&lt;/code> for this &lt;code>Connector&lt;/code>. It is the first &lt;code>relatedFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Connector-sourceFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Connector-sourceFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Connector-targetFeature" name="targetFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" redefinedProperty="Root-Elements-Relationship-target" subsettedProperty="Kernel-Connectors-Connector-relatedFeature" association="Kernel-Connectors-_packagedElement.12">
          <ownedComment xmi:id="Kernel-Connectors-Connector-targetFeature-_ownedComment.0" annotatedElement="Kernel-Connectors-Connector-targetFeature">
            <body>p>The target &lt;code>relatedFeatures&lt;/code> for this &lt;code>Connector&lt;/code>. This includes all the &lt;code>relatedFeatures&lt;/code> other than the &lt;code>sourceFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Connector-targetFeature-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Connector-targetFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.1" name="" visibility="private" memberEnd="Kernel-Connectors-Connector-association Kernel-Connectors-_packagedElement.1-typedConnector">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.1-typedConnector" name="typedConnector" visibility="public" type="Kernel-Connectors-Connector" isDerived="true" subsettedProperty="Core-Features-_packagedElement.2-typedFeature" association="Kernel-Connectors-_packagedElement.1">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.1-typedConnector-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.1-typedConnector-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.2" name="" visibility="private" memberEnd="Kernel-Connectors-Connector-relatedFeature Kernel-Connectors-_packagedElement.2-connector">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.2-connector" name="connector" visibility="public" type="Kernel-Connectors-Connector" isDerived="true" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Kernel-Connectors-_packagedElement.2">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.2-connector-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.2-connector-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.3" name="" visibility="private" memberEnd="Kernel-Connectors-_packagedElement.3-participantFeature Kernel-Connectors-_packagedElement.3-_ownedEnd.0" navigableOwnedEnd="Kernel-Connectors-_packagedElement.3-participantFeature">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.3-_ownedEnd.0" name="" visibility="public" type="Kernel-Associations-Association" association="Kernel-Connectors-_packagedElement.3"/>
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.3-participantFeature" name="participantFeature" visibility="public" type="Core-Features-Feature" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Kernel-Connectors-_packagedElement.3">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.3-participantFeature-_lowerValue" name="" visibility="public" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.3-participantFeature-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Connectors-BindingConnector" name="BindingConnector" visibility="public">
        <ownedComment xmi:id="Kernel-Connectors-BindingConnector-_ownedComment.0" annotatedElement="Kernel-Connectors-BindingConnector">
          <body>&lt;p>A &lt;code>BindingConnector&lt;/code> is a binary &lt;code>Connector&lt;/code> that requires its &lt;code>relatedFeatures&lt;/code> to identify the same things (have the same values).&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Connectors-BindingConnector-checkBindingConnectorSpecialization" name="checkBindingConnectorSpecialization" visibility="public" constrainedElement="Kernel-Connectors-BindingConnector">
          <ownedComment xmi:id="Kernel-Connectors-BindingConnector-checkBindingConnectorSpecialization-_ownedComment.0" annotatedElement="Kernel-Connectors-BindingConnector-checkBindingConnectorSpecialization">
            <body>&lt;p>A BindingConnector must directly or indirectly specialize the base BindingConnector &lt;code>&lt;em>Links::selfLinks&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-BindingConnector-checkBindingConnectorSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Links::selfLinks&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-BindingConnector-validateBindingConnectorIsBinary" name="validateBindingConnectorIsBinary" visibility="public" constrainedElement="Kernel-Connectors-BindingConnector">
          <ownedComment xmi:id="Kernel-Connectors-BindingConnector-validateBindingConnectorIsBinary-_ownedComment.0" annotatedElement="Kernel-Connectors-BindingConnector-validateBindingConnectorIsBinary">
            <body>&lt;p>A &lt;code>BindingConnector&lt;/code> must be binary.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-BindingConnector-validateBindingConnectorIsBinary-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>relatedFeature->size() = 2</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Connectors-BindingConnector-_generalization.0" general="Kernel-Connectors-Connector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.5" name="" visibility="private" memberEnd="Kernel-Connectors-Connector-connectorEnd Kernel-Connectors-_packagedElement.5-featuringConnector">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.5-featuringConnector" name="featuringConnector" visibility="public" type="Kernel-Connectors-Connector" isDerived="true" subsettedProperty="Core-Types-_packagedElement.1-typeWithEndFeature" association="Kernel-Connectors-_packagedElement.5">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.5-featuringConnector-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.5-featuringConnector-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.6" name="" visibility="private" memberEnd="Kernel-Connectors-Succession-triggerStep Kernel-Connectors-_packagedElement.6-succession">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.6-succession" name="succession" visibility="public" type="Kernel-Connectors-Succession" association="Kernel-Connectors-_packagedElement.6">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.6-succession-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.6-succession-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.7" name="" visibility="private" memberEnd="Kernel-Connectors-Succession-transitionStep Kernel-Connectors-_packagedElement.7-succession">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.7-succession" name="succession" visibility="public" type="Kernel-Connectors-Succession" association="Kernel-Connectors-_packagedElement.7">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.7-succession-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.7-succession-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.8" name="" visibility="private" memberEnd="Kernel-Connectors-Succession-guardExpression Kernel-Connectors-_packagedElement.8-succession">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.8-succession" name="succession" visibility="public" type="Kernel-Connectors-Succession" association="Kernel-Connectors-_packagedElement.8">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.8-succession-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.8-succession-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.9" name="" visibility="private" memberEnd="Kernel-Connectors-Succession-effectStep Kernel-Connectors-_packagedElement.9-succession">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.9-succession" name="succession" visibility="public" type="Kernel-Connectors-Succession" association="Kernel-Connectors-_packagedElement.9">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.9-succession-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.9-succession-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Connectors-Succession" name="Succession" visibility="public">
        <ownedComment xmi:id="Kernel-Connectors-Succession-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession">
          <body>&lt;p>A &lt;code>Succession&lt;/code> is a binary &lt;code>Connector&lt;/code> that requires its &lt;code>relatedFeatures&lt;/code> to happen separately in time.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Connectors-Succession-checkSuccessionSpecialization" name="checkSuccessionSpecialization" visibility="public" constrainedElement="Kernel-Connectors-Succession">
          <ownedComment xmi:id="Kernel-Connectors-Succession-checkSuccessionSpecialization-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-checkSuccessionSpecialization">
            <body>&lt;p>A Succession must directly or indirectly specialize the Feature &lt;code>&lt;em>Occurrences::happensBeforeLinks&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Succession-checkSuccessionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Occurences::happensBeforeLinks&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Succession-deriveSuccessionTransitionStep" name="deriveSuccessionTransitionStep" visibility="public" constrainedElement="Kernel-Connectors-Succession">
          <ownedComment xmi:id="Kernel-Connectors-Succession-deriveSuccessionTransitionStep-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-deriveSuccessionTransitionStep">
            <body>&lt;p>If the &lt;code>owningNamespace&lt;/code> of a &lt;code>Succession&lt;/code> is a &lt;code>Step&lt;/code> that specializes &lt;em>&lt;code>TransitionPerformances::TransitionPerformance&lt;/code>&lt;/em>, then this is presumed to be the &lt;code>transitionStep&lt;/code> for the &lt;code>Succession&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Succession-deriveSuccessionTransitionStep-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>transitionStep =
    if owningNamespace.oclIsKindOf(Step) and 
        owningNamespace.oclAsType(Step).
            specializesFromLibrary('TransitionPerformances::TransitionPerformance') then
        owningNamespace.oclAsType(Step)
    else null
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Succession-deriveSuccessionTriggerStep" name="deriveSuccessionTriggerStep" visibility="public" constrainedElement="Kernel-Connectors-Succession">
          <ownedComment xmi:id="Kernel-Connectors-Succession-deriveSuccessionTriggerStep-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-deriveSuccessionTriggerStep">
            <body>&lt;p>The &lt;code>triggerStep&lt;/code> of a &lt;code>Succession&lt;/code> is the second &lt;code>ownedFeature&lt;/code> of its &lt;code>transitionStep&lt;/code>, which must be a &lt;code>Step&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Succession-deriveSuccessionTriggerStep-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>triggerStep =
    if transitionStep = null or 
       transitionStep.ownedFeature.size() &lt; 2 or
       not transitionStep.ownedFeature->at(2).oclIsKindOf(Step) 
    then Set{}
    else Set{transitionStep.ownedFeature->at(2).oclAsType(Step)}
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Succession-deriveSuccessionEffectStep" name="deriveSuccessionEffectStep" visibility="public" constrainedElement="Kernel-Connectors-Succession">
          <ownedComment xmi:id="Kernel-Connectors-Succession-deriveSuccessionEffectStep-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-deriveSuccessionEffectStep">
            <body>&lt;p>The &lt;code>effectStep&lt;/code> of a &lt;code>Succession&lt;/code> is the fourth &lt;code>ownedFeature&lt;/code> of its &lt;code>transitionStep&lt;/code>, which must be a &lt;code>Step&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Succession-deriveSuccessionEffectStep-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>effectStep =
    if transitionStep = null or 
       transitionStep.ownedFeature.size() &lt; 4 or
       not transitionStep.ownedFeature->at(4).oclIsKindOf(Step) 
    then Set{}
    else Set{transitionStep.ownedFeature->at(4).oclAsType(Step)}
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Connectors-Succession-deriveSuccessionGuardExpression" name="deriveSuccessionGuardExpression" visibility="public" constrainedElement="Kernel-Connectors-Succession">
          <ownedComment xmi:id="Kernel-Connectors-Succession-deriveSuccessionGuardExpression-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-deriveSuccessionGuardExpression">
            <body>&lt;p>The &lt;code>guardExpression&lt;/code> of a &lt;code>Succession&lt;/code> is the third &lt;code>ownedFeature&lt;/code> of its &lt;code>transitionStep&lt;/code>, which must be an &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Connectors-Succession-deriveSuccessionGuardExpression-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>guardExpression =
    if transitionStep = null or 
       transitionStep.ownedFeature.size() &lt; 3 or
       not transitionStep.ownedFeature->at(3).oclIsKindOf(Expression) 
    then Set{}
    else Set{transitionStep.ownedFeature->at(3).oclAsType(Expression)}
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Connectors-Succession-_generalization.0" general="Kernel-Connectors-Connector"/>
        <ownedAttribute xmi:id="Kernel-Connectors-Succession-transitionStep" name="transitionStep" visibility="public" type="Kernel-Behaviors-Step" isDerived="true" association="Kernel-Connectors-_packagedElement.7">
          <ownedComment xmi:id="Kernel-Connectors-Succession-transitionStep-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-transitionStep">
            <body>&lt;p>A &lt;code>Step&lt;/code> that is typed by the &lt;code>Behavior&lt;/code> &lt;code>&lt;em>TransitionPerformances::TransitionPerformance&lt;/em>&lt;/code> (from the Kernel Semantic Library) that has this &lt;code>Succession&lt;/code> as its &lt;em>&lt;code>transitionLink&lt;/code>&lt;/em>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Succession-transitionStep-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Succession-transitionStep-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Succession-triggerStep" name="triggerStep" visibility="public" type="Kernel-Behaviors-Step" isDerived="true" association="Kernel-Connectors-_packagedElement.6">
          <ownedComment xmi:id="Kernel-Connectors-Succession-triggerStep-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-triggerStep">
            <body>&lt;p>&lt;code>Steps&lt;/code> that map incoming events to the timing of occurrences of the &lt;code>transitionStep&lt;/code>. The values of &lt;code>triggerStep&lt;/code> subset the list of acceptable events to be received by a &lt;code>Behavior&lt;/code> or the object that performs it.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Succession-triggerStep-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Succession-triggerStep-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Succession-effectStep" name="effectStep" visibility="public" type="Kernel-Behaviors-Step" isDerived="true" association="Kernel-Connectors-_packagedElement.9">
          <ownedComment xmi:id="Kernel-Connectors-Succession-effectStep-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-effectStep">
            <body>&lt;p>&lt;code>Steps&lt;/code> that represent occurrences that are side effects of the &lt;code>transitionStep&lt;/code> occurring.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Succession-effectStep-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Succession-effectStep-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Connectors-Succession-guardExpression" name="guardExpression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Kernel-Connectors-_packagedElement.8">
          <ownedComment xmi:id="Kernel-Connectors-Succession-guardExpression-_ownedComment.0" annotatedElement="Kernel-Connectors-Succession-guardExpression">
            <body>&lt;p>&lt;code>Expressions&lt;/code> that must evaluate to true before the &lt;code>transitionStep&lt;/code> can occur.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-Succession-guardExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-Succession-guardExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.11" name="" visibility="private" memberEnd="Kernel-Connectors-Connector-sourceFeature Kernel-Connectors-_packagedElement.11-sourceConnector">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.11-sourceConnector" name="sourceConnector" visibility="public" type="Kernel-Connectors-Connector" isDerived="true" subsettedProperty="Kernel-Connectors-_packagedElement.2-connector Root-Elements-_packagedElement.5-sourceRelationship" association="Kernel-Connectors-_packagedElement.11">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.11-sourceConnector-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.11-sourceConnector-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Connectors-_packagedElement.12" name="" visibility="private" memberEnd="Kernel-Connectors-Connector-targetFeature Kernel-Connectors-_packagedElement.12-targetConnector">
        <ownedEnd xmi:id="Kernel-Connectors-_packagedElement.12-targetConnector" name="targetConnector" visibility="public" type="Kernel-Connectors-Connector" isDerived="true" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship Kernel-Connectors-_packagedElement.2-connector" association="Kernel-Connectors-_packagedElement.12">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Connectors-_packagedElement.12-targetConnector-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Connectors-_packagedElement.12-targetConnector-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Associations" name="Associations" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Associations-_packagedElement.0" name="" visibility="private" memberEnd="Kernel-Associations-Association-relatedType Kernel-Associations-_packagedElement.0-association">
        <ownedEnd xmi:id="Kernel-Associations-_packagedElement.0-association" name="association" visibility="public" type="Kernel-Associations-Association" isDerived="true" subsettedProperty="Root-Elements-_packagedElement.4-relationship" association="Kernel-Associations-_packagedElement.0">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-_packagedElement.0-association-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-_packagedElement.0-association-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Associations-_packagedElement.1" name="" visibility="private" memberEnd="Kernel-Associations-Association-associationEnd Kernel-Associations-_packagedElement.1-associationWithEnd">
        <ownedEnd xmi:id="Kernel-Associations-_packagedElement.1-associationWithEnd" name="associationWithEnd" visibility="public" type="Kernel-Associations-Association" isDerived="true" subsettedProperty="Core-Types-_packagedElement.1-typeWithEndFeature" association="Kernel-Associations-_packagedElement.1">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-_packagedElement.1-associationWithEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-_packagedElement.1-associationWithEnd-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Associations-Association" name="Association" visibility="public">
        <ownedComment xmi:id="Kernel-Associations-Association-_ownedComment.0" annotatedElement="Kernel-Associations-Association">
          <body>&lt;p>An &lt;code>Association&lt;/code> is a &lt;code>Relationship&lt;/code> and a &lt;code>Classifier&lt;/code> to enable classification of links between things (in the universe). The co-domains (&lt;code>types&lt;/code>) of the &lt;code>associationEnd&lt;/code> &lt;code>Features&lt;/code> are the &lt;code>relatedTypes&lt;/code>, as co-domain and participants (linked things) of an &lt;code>Association&lt;/code> identify each other.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Associations-Association-deriveAssociationRelatedType" name="deriveAssociationRelatedType" visibility="public" constrainedElement="Kernel-Associations-Association">
          <ownedComment xmi:id="Kernel-Associations-Association-deriveAssociationRelatedType-_ownedComment.0" annotatedElement="Kernel-Associations-Association-deriveAssociationRelatedType">
            <body>&lt;p>The &lt;code>relatedTypes&lt;/code> of an &lt;code>Association&lt;/code> are the &lt;code>types&lt;/code> of its &lt;code>associationEnds&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-deriveAssociationRelatedType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>relatedType = associationEnd.type</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-Association-checkAssociationSpecialization" name="checkAssociationSpecialization" visibility="public" constrainedElement="Kernel-Associations-Association">
          <ownedComment xmi:id="Kernel-Associations-Association-checkAssociationSpecialization-_ownedComment.0" annotatedElement="Kernel-Associations-Association-checkAssociationSpecialization">
            <body>&lt;p>An Association must directly or indirectly specialize the base Association &lt;code>&lt;em>Links::Link&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-checkAssociationSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Links::Link&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-Association-validateAssociationStructureIntersection" name="validateAssociationStructureIntersection" visibility="public" constrainedElement="Kernel-Associations-Association">
          <ownedComment xmi:id="Kernel-Associations-Association-validateAssociationStructureIntersection-_ownedComment.0" annotatedElement="Kernel-Associations-Association-validateAssociationStructureIntersection">
            <body>&lt;p>If an &lt;code>Association&lt;/code> is also a kind of &lt;code>Structure&lt;/code>, then it must be an &lt;code>AssociationStructure&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-validateAssociationStructureIntersection-_specification" name="" visibility="public">
            <language>English</language>
            <body>oclIsKindOf(Structure) = oclIsKindOf(AssociationStructure)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-Association-checkAssociationBinarySpecialization" name="checkAssociationBinarySpecialization" visibility="public" constrainedElement="Kernel-Associations-Association">
          <ownedComment xmi:id="Kernel-Associations-Association-checkAssociationBinarySpecialization-_ownedComment.0" annotatedElement="Kernel-Associations-Association-checkAssociationBinarySpecialization">
            <body>&lt;p>A binary Association must directly or indirectly specialize the base Association &lt;code>&lt;em>Links::binaryLink&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-checkAssociationBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedEndFeature->size() = 2 implies
    specializesFromLibrary(&quot;Links::BinaryLink)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-Association-validateAssociationRelatedTypes" name="validateAssociationRelatedTypes" visibility="public" constrainedElement="Kernel-Associations-Association">
          <ownedComment xmi:id="Kernel-Associations-Association-validateAssociationRelatedTypes-_ownedComment.0" annotatedElement="Kernel-Associations-Association-validateAssociationRelatedTypes">
            <body>&lt;p>If an Association is concrete (not abstract), then it must have at least two &lt;code>relatedTypes&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-validateAssociationRelatedTypes-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not isAbstract implies relatedType->size() >= 2</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-Association-validateAssociationBinarySpecialization" name="validateAssociationBinarySpecialization" visibility="public" constrainedElement="Kernel-Associations-Association">
          <ownedComment xmi:id="Kernel-Associations-Association-validateAssociationBinarySpecialization-_ownedComment.0" annotatedElement="Kernel-Associations-Association-validateAssociationBinarySpecialization">
            <body>&lt;p>If an &lt;code>Association&lt;/code> has more than two &lt;code>associationEnds&lt;/code>, then it must &lt;em>not&lt;/em> specialize, directly or indirectly, the &lt;code>Association&lt;/code> &lt;em>&lt;code>BinaryLink&lt;/code>&lt;/em> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-validateAssociationBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>associationEnds->size() > 2 implies
    not specializesFromLibrary(&quot;Links::BinaryLink&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-Association-deriveAssociationSourceType" name="deriveAssociationSourceType" visibility="public" constrainedElement="Kernel-Associations-Association">
          <ownedComment xmi:id="Kernel-Associations-Association-deriveAssociationSourceType-_ownedComment.0" annotatedElement="Kernel-Associations-Association-deriveAssociationSourceType">
            <body>&lt;p>The &lt;code>sourceType&lt;/code> of an &lt;code>Association&lt;/code> is its first &lt;code>relatedType&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-deriveAssociationSourceType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceType =
    if relatedType->isEmpty() then null
    else relatedType->first() endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-Association-deriveAssociationTargetType" name="deriveAssociationTargetType" visibility="public" constrainedElement="Kernel-Associations-Association">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-Association-deriveAssociationTargetType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetType =
    if relatedType->size() &lt; 2 then OrderedSet{}
    else 
        relatedType->
            subSequence(2, relatedType->size())->
            asOrderedSet() 
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Associations-Association-_generalization.0" general="Core-Classifiers-Classifier"/>
        <generalization xmi:id="Kernel-Associations-Association-_generalization.1" general="Root-Elements-Relationship"/>
        <ownedAttribute xmi:id="Kernel-Associations-Association-relatedType" name="relatedType" visibility="public" type="Core-Types-Type" isOrdered="true" isUnique="false" isDerived="true" redefinedProperty="Root-Elements-Relationship-relatedElement" association="Kernel-Associations-_packagedElement.0">
          <ownedComment xmi:id="Kernel-Associations-Association-relatedType-_ownedComment.0" annotatedElement="Kernel-Associations-Association-relatedType">
            <body>&lt;p>The &lt;code>types&lt;/code> of the &lt;code>associationEnds&lt;/code> of the &lt;code>Association&lt;/code>, which are the &lt;code>relatedElements&lt;/code> of the &lt;code>Association&lt;/code> considered as a &lt;code>Relationship&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-Association-relatedType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-Association-relatedType-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Associations-Association-sourceType" name="sourceType" visibility="public" type="Core-Types-Type" isDerived="true" redefinedProperty="Root-Elements-Relationship-source" subsettedProperty="Kernel-Associations-Association-relatedType" association="Kernel-Associations-_packagedElement.4">
          <ownedComment xmi:id="Kernel-Associations-Association-sourceType-_ownedComment.0" annotatedElement="Kernel-Associations-Association-sourceType">
            <body>&lt;p>The source &lt;code>relatedType&lt;/code> for this &lt;code>Association&lt;/code>. It is the first &lt;code>relatedType&lt;/code> of the &lt;code>Association&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-Association-sourceType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-Association-sourceType-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Associations-Association-targetType" name="targetType" visibility="public" type="Core-Types-Type" isDerived="true" redefinedProperty="Root-Elements-Relationship-target" subsettedProperty="Kernel-Associations-Association-relatedType" association="Kernel-Associations-_packagedElement.3">
          <ownedComment xmi:id="Kernel-Associations-Association-targetType-_ownedComment.0" annotatedElement="Kernel-Associations-Association-targetType">
            <body>&lt;p>The target &lt;code>relatedTypes&lt;/code> for this &lt;code>Association&lt;/code>. This includes all the &lt;code>relatedTypes&lt;/code> other than the &lt;code>sourceType&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-Association-targetType-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-Association-targetType-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Associations-Association-associationEnd" name="associationEnd" visibility="public" type="Core-Features-Feature" isDerived="true" redefinedProperty="Core-Types-Type-endFeature" association="Kernel-Associations-_packagedElement.1">
          <ownedComment xmi:id="Kernel-Associations-Association-associationEnd-_ownedComment.0" annotatedElement="Kernel-Associations-Association-associationEnd">
            <body>&lt;p>The &lt;code>features&lt;/code> of the &lt;code>Association&lt;/code> that identify the things that can be related by it. A concrete &lt;code>Association&lt;/code> must have at least two &lt;code>associationEnds&lt;/code>. When it has exactly two, the &lt;code>Association&lt;/code> is called a &lt;em>binary&lt;/em> &lt;code>Association&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Associations-Association-associationEnd-_ownedComment.1" annotatedElement="Kernel-Associations-Association-associationEnd">
            <body>&lt;p>The ends of the Association determine which elements are eligible to be related by instances of the Association.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-Association-associationEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-Association-associationEnd-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Associations-_packagedElement.3" name="" visibility="private" memberEnd="Kernel-Associations-Association-targetType Kernel-Associations-_packagedElement.3-targetAssociation">
        <ownedEnd xmi:id="Kernel-Associations-_packagedElement.3-targetAssociation" name="targetAssociation" visibility="public" type="Kernel-Associations-Association" isDerived="true" subsettedProperty="Kernel-Associations-_packagedElement.3-targetAssociation Kernel-Associations-_packagedElement.0-association" association="Kernel-Associations-_packagedElement.3">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-_packagedElement.3-targetAssociation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-_packagedElement.3-targetAssociation-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Associations-_packagedElement.4" name="" visibility="private" memberEnd="Kernel-Associations-Association-sourceType Kernel-Associations-_packagedElement.4-sourceAssociation">
        <ownedEnd xmi:id="Kernel-Associations-_packagedElement.4-sourceAssociation" name="sourceAssociation" visibility="public" type="Kernel-Associations-Association" isDerived="true" subsettedProperty="Kernel-Associations-_packagedElement.0-association Root-Elements-_packagedElement.5-sourceRelationship" association="Kernel-Associations-_packagedElement.4">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Associations-_packagedElement.4-sourceAssociation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Associations-_packagedElement.4-sourceAssociation-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Associations-AssociationStructure" name="AssociationStructure" visibility="public">
        <ownedComment xmi:id="Kernel-Associations-AssociationStructure-_ownedComment.0" annotatedElement="Kernel-Associations-AssociationStructure">
          <body>&lt;p>An &lt;code>AssociationStructure&lt;/code> is an &lt;code>Association&lt;/code> that is also a &lt;code>Structure&lt;/code>, classifying link objects that are both links and objects. As objects, link objects can be created and destroyed, and their non-end &lt;code>Features&lt;/code> can change over time. However, the values of the end &lt;code>Features&lt;/code> of a link object are fixed and cannot change over its lifetime.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Associations-AssociationStructure-checkAssociationStructureSpecialization" name="checkAssociationStructureSpecialization" visibility="public" constrainedElement="Kernel-Associations-AssociationStructure">
          <ownedComment xmi:id="Kernel-Associations-AssociationStructure-checkAssociationStructureSpecialization-_ownedComment.0" annotatedElement="Kernel-Associations-AssociationStructure-checkAssociationStructureSpecialization">
            <body>&lt;p>An AssociationStructure must directly or indirectly specialize the base AssociationStructure &lt;code>&lt;em>Objects::LinkObject&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-AssociationStructure-checkAssociationStructureSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Objects::ObjectLink&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Associations-AssociationStructure-checkAssociationStructureBinarySpecialization" name="checkAssociationStructureBinarySpecialization" visibility="public" constrainedElement="Kernel-Associations-AssociationStructure">
          <ownedComment xmi:id="Kernel-Associations-AssociationStructure-checkAssociationStructureBinarySpecialization-_ownedComment.0" annotatedElement="Kernel-Associations-AssociationStructure-checkAssociationStructureBinarySpecialization">
            <body>&lt;p>A binary AssociationStructure must directly or indirectly specialize the base AssociationStructure &lt;code>&lt;em>Objects::BinaryLinkObject&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Associations-AssociationStructure-checkAssociationStructureBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>endFeature->size() = 2 implies
    specializesFromLibrary(&quot;Objects::BinaryLinkObject&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Associations-AssociationStructure-_generalization.0" general="Kernel-Structures-Structure"/>
        <generalization xmi:id="Kernel-Associations-AssociationStructure-_generalization.1" general="Kernel-Associations-Association"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-DataTypes" name="DataTypes" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-DataTypes-DataType" name="DataType" visibility="public">
        <ownedComment xmi:id="Kernel-DataTypes-DataType-_ownedComment.0" annotatedElement="Kernel-DataTypes-DataType">
          <body>&lt;p>A &lt;code>DataType&lt;/code> is a &lt;code>Classifier&lt;/code> of things (in the universe) that can only be distinguished by how they are related to other things (via Features). This means multiple things classified by the same &lt;code>DataType&lt;/code>&lt;/p>

&lt;ul>
	&lt;li>Cannot be distinguished when they are related to other things in exactly the same way, even when they are intended to be about different things.&lt;/li>
	&lt;li>Can be distinguished when they are related to other things in different ways, even when they are intended to be about the same thing.&lt;/li>
&lt;/ul>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-DataTypes-DataType-checkDataTypeSpecialization" name="checkDataTypeSpecialization" visibility="public" constrainedElement="Kernel-DataTypes-DataType">
          <ownedComment xmi:id="Kernel-DataTypes-DataType-checkDataTypeSpecialization-_ownedComment.0" annotatedElement="Kernel-DataTypes-DataType-checkDataTypeSpecialization">
            <body>&lt;p>A &lt;code>DataType&lt;/code> must directly or indirectly specialize the base &lt;code>DataType&lt;/code> &lt;code>&lt;em>Base::DataValue&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-DataTypes-DataType-checkDataTypeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Base::DataValue')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-DataTypes-DataType-validateDatatypeSpecialization" name="validateDatatypeSpecialization" visibility="public" constrainedElement="Kernel-DataTypes-DataType">
          <ownedComment xmi:id="Kernel-DataTypes-DataType-validateDatatypeSpecialization-_ownedComment.0" annotatedElement="Kernel-DataTypes-DataType-validateDatatypeSpecialization">
            <body>&lt;p>A &lt;code>DataType&lt;/code> must not specialize a &lt;code>Class&lt;/code> or an &lt;code>Association&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-DataTypes-DataType-validateDatatypeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedSpecialization.general->
    forAll(not oclIsKindOf(Class) and 
           not oclIsKindOf(Association))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-DataTypes-DataType-_generalization.0" general="Core-Classifiers-Classifier"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-FeatureValues" name="FeatureValues" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-FeatureValues-FeatureValue" name="FeatureValue" visibility="public">
        <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-_ownedComment.0" annotatedElement="Kernel-FeatureValues-FeatureValue">
          <body>&lt;p>A &lt;code>FeatureValue&lt;/code> is a &lt;code>Membership&lt;/code> that identifies a particular member &lt;code>Expression&lt;/code> that provides the value of the &lt;code>Feature&lt;/code> that owns the &lt;code>FeatureValue&lt;/code>. The value is specified as either a bound value or an initial value, and as either a concrete or default value. A &lt;code>Feature&lt;/code> can have at most one &lt;code>FeatureValue&lt;/code>.&lt;/p>

&lt;p>The result of the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> is bound to the &lt;code>featureWithValue&lt;/code> using a &lt;code>BindingConnector&lt;/code>. If &lt;code>isInitial = false&lt;/code>, then the &lt;code>featuringType&lt;/code> of the &lt;code>BindingConnector&lt;/code> is the same as the &lt;code>featuringType&lt;/code> of the &lt;code>featureWithValue&lt;/code>. If &lt;code>isInitial = true&lt;/code>, then the &lt;code>featuringType&lt;/code> of the &lt;code>BindingConnector&lt;/code> is restricted to its &lt;code>startShot&lt;/code>.

&lt;p>If &lt;code>isDefault = false&lt;/code>, then the above semantics of the &lt;code>FeatureValue&lt;/code> are realized for the given &lt;code>featureWithValue&lt;/code>. Otherwise, the semantics are realized for any individual of the &lt;code>featuringType&lt;/code> of the &lt;code>featureWithValue&lt;/code>, unless another value is explicitly given for the &lt;code>featureWithValue&lt;/code> for that individual.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-FeatureValues-FeatureValue-checkFeatureValueBindingConnector" name="checkFeatureValueBindingConnector" visibility="public" constrainedElement="Kernel-FeatureValues-FeatureValue">
          <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-checkFeatureValueBindingConnector-_ownedComment.0" annotatedElement="Kernel-FeatureValues-FeatureValue-checkFeatureValueBindingConnector">
            <body>&lt;p>If &lt;code>isDefault = false&lt;/code>, then the &lt;code>featureWithValue&lt;/code> must have an &lt;code>ownedMember&lt;/code> that is a &lt;code>BindingConnector&lt;/code> whose &lt;code>relatedElements&lt;/code> are the &lt;code>featureWithValue&lt;/code> and the &lt;code>result&lt;/code> of the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code>. If &lt;code>isInitial = false&lt;/code>, then this &lt;code>BindingConnector&lt;/code> must have &lt;code>featuringTypes&lt;/code> that are the same as those of the &lt;code>featureWithValue&lt;/code>. If &lt;code>isInitial = true&lt;/code>, then the &lt;code>BindingConnector&lt;/code> must have &lt;code>&lt;em>that.startShot&lt;/em>&lt;code> as its &lt;code>featuringType&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-FeatureValues-FeatureValue-checkFeatureValueBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not isDefault implies
    featureWithValue.ownedMember->
        selectByKind(BindingConnector)->exists(b |
            b.relatedFeature->includes(featureWithValue) and
            b.relatedFeature->includes(value.result) and
            if not isInitial then 
                b.featuringType = featureWithValue.featuringType
            else 
                b.featuringType->exists(t |
                    t.oclIsKindOf(Feature) and
                    t.oclAsType(Feature).chainingFeature =
                        Sequence{
                            resolveGlobal(&quot;Base::things::that&quot;),
                            resolveGlobal(&quot;Occurrences::Occurrence::startShot&quot;)
                        }
                )
            endif)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-FeatureValues-FeatureValue-_generalization.0" general="Root-Namespaces-OwningMembership"/>
        <ownedAttribute xmi:id="Kernel-FeatureValues-FeatureValue-featureWithValue" name="featureWithValue" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Root-Namespaces-Membership-membershipOwningNamespace" association="Kernel-FeatureValues-_packagedElement.2">
          <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-featureWithValue-_ownedComment.0" annotatedElement="Kernel-FeatureValues-FeatureValue-featureWithValue">
            <body>&lt;p>The &lt;code>Feature&lt;/code> to be provided a value.&lt;/p>
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-featureWithValue-_ownedComment.1" annotatedElement="Kernel-FeatureValues-FeatureValue-featureWithValue">
            <body>&lt;p>The Feature to be provided a value.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-FeatureValues-FeatureValue-featureWithValue-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-FeatureValues-FeatureValue-featureWithValue-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-FeatureValues-FeatureValue-value" name="value" visibility="public" type="Kernel-Functions-Expression" aggregation="composite" isDerived="true" redefinedProperty="Root-Namespaces-OwningMembership-ownedMemberElement" association="Kernel-FeatureValues-_packagedElement.1">
          <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-value-_ownedComment.0" annotatedElement="Kernel-FeatureValues-FeatureValue-value">
            <body>&lt;p>The &lt;code>Expression&lt;/code> that provides the value of the &lt;code>featureWithValue&lt;/code> as its &lt;code>result&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-value-_ownedComment.1" annotatedElement="Kernel-FeatureValues-FeatureValue-value">
            <body>&lt;p>The Expression that provides the value as a result.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-FeatureValues-FeatureValue-value-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-FeatureValues-FeatureValue-value-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-FeatureValues-FeatureValue-isInitial" name="isInitial" visibility="public">
          <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-isInitial-_ownedComment.0" annotatedElement="Kernel-FeatureValues-FeatureValue-isInitial">
            <body>&lt;p>Whether this &lt;code>FeatureValue&lt;/code> specifies a bound value or an initial value for the &lt;code>featureWithValue&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Kernel-FeatureValues-FeatureValue-isInitial-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-FeatureValues-FeatureValue-isDefault" name="isDefault" visibility="public">
          <ownedComment xmi:id="Kernel-FeatureValues-FeatureValue-isDefault-_ownedComment.0" annotatedElement="Kernel-FeatureValues-FeatureValue-isDefault">
            <body>&lt;p>Whether this &lt;code>FeatureValue&lt;/code> is a concrete specification of the bound of initial value of the &lt;code>featureWithValue&lt;/code>, or just a default value that may be overridden.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Kernel-FeatureValues-FeatureValue-isDefault-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-FeatureValues-_packagedElement.1" name="" visibility="private" memberEnd="Kernel-FeatureValues-FeatureValue-value Kernel-FeatureValues-_packagedElement.1-expressedValuation">
        <ownedEnd xmi:id="Kernel-FeatureValues-_packagedElement.1-expressedValuation" name="expressedValuation" visibility="public" type="Kernel-FeatureValues-FeatureValue" isDerived="true" subsettedProperty="Root-Elements-Element-owningMembership" association="Kernel-FeatureValues-_packagedElement.1">
          <ownedComment xmi:id="Kernel-FeatureValues-_packagedElement.1-expressedValuation-_ownedComment.0" annotatedElement="Kernel-FeatureValues-_packagedElement.1-expressedValuation">
            <body>&lt;p>The FeatureValue that owns the &lt;code>value&lt;/code> Expression.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-FeatureValues-_packagedElement.1-expressedValuation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-FeatureValues-_packagedElement.1-expressedValuation-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-FeatureValues-_packagedElement.2" name="" visibility="private" memberEnd="Kernel-FeatureValues-FeatureValue-featureWithValue Kernel-FeatureValues-_packagedElement.2-valuation">
        <ownedEnd xmi:id="Kernel-FeatureValues-_packagedElement.2-valuation" name="valuation" visibility="public" type="Kernel-FeatureValues-FeatureValue" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMembership" association="Kernel-FeatureValues-_packagedElement.2">
          <ownedComment xmi:id="Kernel-FeatureValues-_packagedElement.2-valuation-_ownedComment.0" annotatedElement="Kernel-FeatureValues-_packagedElement.2-valuation">
            <body>&lt;p>The (at most one) &lt;code>ownedMembership&lt;/code> of this Feature that is the FeatureValue that provides the value of the Feature.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-FeatureValues-_packagedElement.2-valuation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-FeatureValues-_packagedElement.2-valuation-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Multiplicities" name="Multiplicities" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Multiplicities-_packagedElement.0" name="" visibility="private" memberEnd="Kernel-Multiplicities-MultiplicityRange-bound Kernel-Multiplicities-_packagedElement.0-multiplicity">
        <ownedEnd xmi:id="Kernel-Multiplicities-_packagedElement.0-multiplicity" name="multiplicity" visibility="public" type="Kernel-Multiplicities-MultiplicityRange" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Kernel-Multiplicities-_packagedElement.0">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-_packagedElement.0-multiplicity-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-_packagedElement.0-multiplicity-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Multiplicities-_packagedElement.1" name="" visibility="private" memberEnd="Kernel-Multiplicities-MultiplicityRange-lowerBound Kernel-Multiplicities-_packagedElement.1-multiplicity">
        <ownedEnd xmi:id="Kernel-Multiplicities-_packagedElement.1-multiplicity" name="multiplicity" visibility="public" type="Kernel-Multiplicities-MultiplicityRange" isDerived="true" subsettedProperty="Kernel-Multiplicities-_packagedElement.0-multiplicity" association="Kernel-Multiplicities-_packagedElement.1">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-_packagedElement.1-multiplicity-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-_packagedElement.1-multiplicity-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Multiplicities-_packagedElement.2" name="" visibility="private" memberEnd="Kernel-Multiplicities-MultiplicityRange-upperBound Kernel-Multiplicities-_packagedElement.2-multiplicity">
        <ownedEnd xmi:id="Kernel-Multiplicities-_packagedElement.2-multiplicity" name="multiplicity" visibility="public" type="Kernel-Multiplicities-MultiplicityRange" isDerived="true" subsettedProperty="Kernel-Multiplicities-_packagedElement.0-multiplicity" association="Kernel-Multiplicities-_packagedElement.2">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-_packagedElement.2-multiplicity-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-_packagedElement.2-multiplicity-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Multiplicities-MultiplicityRange" name="MultiplicityRange" visibility="public">
        <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange">
          <body>&lt;p>A &lt;code>MultiplicityRange&lt;/code> is a &lt;code>Multiplicity&lt;/code> whose value is defined to be the (inclusive) range of natural numbers given by the result of a &lt;code>lowerBound&lt;/code> &lt;code>Expression&lt;/code> and the result of an &lt;code>upperBound&lt;/code> &lt;code>Expression&lt;/code>. The result of these &lt;code>Expressions&lt;/code> shall be of type &lt;code>&lt;em>Natural&lt;/em>&lt;/code>. If the result of the &lt;code>upperBound&lt;/code> &lt;code>Expression&lt;/code> is the unbounded value &lt;code>*&lt;/code>, then the specified range includes all natural numbers greater than or equal to the &lt;code>lowerBound&lt;/code> value. If no &lt;code>lowerBound&lt;/code> &lt;code>Expression&lt;/code>, then the default is that the lower bound has the same value as the upper bound, except if the &lt;code>upperBound&lt;/code> evaluates to &lt;code>*&lt;/code>, in which case the default for the lower bound is 0.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Multiplicities-MultiplicityRange-checkMultiplicityRangeExpressionTypeFeaturing" name="checkMultiplicityRangeExpressionTypeFeaturing" visibility="public" constrainedElement="Kernel-Multiplicities-MultiplicityRange">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-checkMultiplicityRangeExpressionTypeFeaturing-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-checkMultiplicityRangeExpressionTypeFeaturing">
            <body>&lt;p>The &lt;code>bounds&lt;/code> of a &lt;code>MultiplicityRange&lt;code> must have the same &lt;code>featuringTypes&lt;/code> as the &lt;code>MultiplicityRange&lt;code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Multiplicities-MultiplicityRange-checkMultiplicityRangeExpressionTypeFeaturing-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>bound->forAll(b | b.featuringType = self.featuringType)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Multiplicities-MultiplicityRange-validateMultiplicityRangeBoundResultTypes" name="validateMultiplicityRangeBoundResultTypes" visibility="public" constrainedElement="Kernel-Multiplicities-MultiplicityRange">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-validateMultiplicityRangeBoundResultTypes-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-validateMultiplicityRangeBoundResultTypes">
            <body>&lt;p>The &lt;code>results&lt;/code> of the &lt;code>bound&lt;/code> &lt;code>Expression(s)&lt;/code> of a &lt;code>MultiplicityRange&lt;/code> must be typed by &lt;code>&lt;em>ScalarValues::Natural&lt;/em>&lt;/code> from the Kernel Data Types Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Multiplicities-MultiplicityRange-validateMultiplicityRangeBoundResultTypes-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>bound.result->forAll(specializesFromLibrary('ScalarValues::Natural'))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeLowerBound" name="deriveMultiplicityRangeLowerBound" visibility="public" constrainedElement="Kernel-Multiplicities-MultiplicityRange">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeLowerBound-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeLowerBound">
            <body>&lt;p>If a &lt;code>MultiplicityRange&lt;/code> has two &lt;code>ownedMembers&lt;/code>, then the &lt;code>lowerBound&lt;/code> is the first &lt;code>ownedMember&lt;/code>, otherwise it is &lt;code>null&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeLowerBound-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>lowerBound =
    let ownedMembers : Sequence(Element) = 
        ownedMembership->selectByKind(OwningMembership).ownedMember in
    if ownedMembers->size() &lt; 2 or 
        not ownedMembers->first().oclIsKindOf(Expression) then null
    else ownedMembers->first().oclAsType(Expression)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeUpperBound" name="deriveMultiplicityRangeUpperBound" visibility="public" constrainedElement="Kernel-Multiplicities-MultiplicityRange">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeUpperBound-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeUpperBound">
            <body>&lt;p>If a &lt;code>MultiplicityRange&lt;/code> has &lt;code>ownedMembers&lt;/code> when considered as a &lt;code>Feature&lt;/code>, then &lt;code>upperBound&lt;/code> is the last of those, which must be an &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Multiplicities-MultiplicityRange-deriveMultiplicityRangeUpperBound-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>upperBound =
    let ownedMembers : Sequence(Element) = 
        ownedMembership->selectByKind(OwningMembership).ownedMember in
    if ownedMembers->isEmpty() or 
       not ownedMembers->last().oclIsKindOf(Expression) 
    then null
    else ownedMembers->last().oclAsType(Expression)
    endif </body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Multiplicities-MultiplicityRange-_generalization.0" general="Core-Types-Multiplicity"/>
        <ownedAttribute xmi:id="Kernel-Multiplicities-MultiplicityRange-lowerBound" name="lowerBound" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Kernel-Multiplicities-MultiplicityRange-bound" association="Kernel-Multiplicities-_packagedElement.1">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-lowerBound-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-lowerBound">
            <body>&lt;p>The &lt;code>Expression&lt;/code> whose result provides the lower bound of the &lt;code>MultiplicityRange&lt;/code>. If no &lt;code>lowerBound&lt;/code> &lt;code>Expression&lt;/code> is given, then the lower bound shall have the same value as the upper bound, unless the upper bound is unbounded (&lt;code>*&lt;/code>), in which case the lower bound shall be 0.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-MultiplicityRange-lowerBound-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-MultiplicityRange-lowerBound-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Multiplicities-MultiplicityRange-upperBound" name="upperBound" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Kernel-Multiplicities-MultiplicityRange-bound" association="Kernel-Multiplicities-_packagedElement.2">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-upperBound-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-upperBound">
            <body>The &lt;code>Expression&lt;/code> whose result is the upper bound of the &lt;code>MultiplicityRange&lt;/code>.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-MultiplicityRange-upperBound-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-MultiplicityRange-upperBound-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Multiplicities-MultiplicityRange-bound" name="bound" visibility="public" type="Kernel-Functions-Expression" isOrdered="true" isDerived="true" isDerivedUnion="true" redefinedProperty="Root-Namespaces-Namespace-ownedMember" association="Kernel-Multiplicities-_packagedElement.0">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-bound-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-bound">
            <body>&lt;p>The owned &lt;code>Expressions&lt;/code> of the &lt;code>MultiplicityRange&lt;/code> whose results provide its bounds. These must be the only &lt;code>ownedMembers&lt;/code> of the &lt;code>MultiplicityRange&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-MultiplicityRange-bound-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-MultiplicityRange-bound-_upperValue" name="" visibility="public" value="2"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Multiplicities-MultiplicityRange-hasBounds" name="hasBounds" visibility="public" bodyCondition="Kernel-Multiplicities-MultiplicityRange-hasBounds-unnamed1">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-hasBounds-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-hasBounds">
            <body>&lt;p>Check whether this &lt;code>MultiplicityRange&lt;/code> represents the range bounded by the given values &lt;code>lower&lt;/code> and &lt;code>upper&lt;/code>, presuming the &lt;code>lowerBound&lt;/code> and &lt;code>upperBound&lt;/code> &lt;code>Expressions&lt;/code> are model-level evaluable.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Multiplicities-MultiplicityRange-hasBounds-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Multiplicities-MultiplicityRange-hasBounds-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>valueOf(upperBound) = upper and
let lowerValue: UnlimitedNatural = valueOf(lowerBound) in
(lowerValue = lower or
 lowerValue = null and 
    (lower = upper or 
     lower = 0 and upper = *))
 </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Multiplicities-MultiplicityRange-hasBounds-lower" name="lower" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Multiplicities-MultiplicityRange-hasBounds-upper" name="upper" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Multiplicities-MultiplicityRange-hasBounds-_ownedParameter.2" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf" name="valueOf" visibility="public" bodyCondition="Kernel-Multiplicities-MultiplicityRange-valueOf-unnamed1">
          <ownedComment xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-_ownedComment.0" annotatedElement="Kernel-Multiplicities-MultiplicityRange-valueOf">
            <body>&lt;p>Evaluate the given &lt;code>bound&lt;/code> &lt;code>Expression&lt;/code> (at model level) and return the result represented as a MOF &lt;code>UnlimitedNatural&lt;/code> value.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if bound = null or not bound.isModelLevelEvaluable then 
    null
else
    let boundEval: Sequence(Element) = bound.evaluate(owningType) in
    if boundEval->size() &lt;> 1 then null else
        let valueEval: Element = boundEval->at(1) in
        if valueEval.oclIsKindOf(LiteralInfinity) then *
        else if valueEval.oclIsKindOf(LiteralInteger) then
            let value : Integer = 
                valueEval.oclAsKindOf(LiteralInteger).value in
            if value >= 0 then value else null endif
        else null
        endif endif
    endif
endif </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-bound" name="bound" visibility="public" type="Kernel-Functions-Expression">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-bound-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-bound-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Multiplicities-MultiplicityRange-valueOf-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Functions" name="Functions" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Functions-Function" name="Function" visibility="public">
        <ownedComment xmi:id="Kernel-Functions-Function-_ownedComment.0" annotatedElement="Kernel-Functions-Function">
          <body>&lt;p>A &lt;code>Function&lt;/code> is a &lt;code>Behavior&lt;/code> that has an &lt;code>out&lt;/code> &lt;code>parameter&lt;/code> that is identified as its &lt;code>result&lt;/code>. A &lt;code>Function&lt;/code> represents the performance of a calculation that produces the values of its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code>. This calculation may be decomposed into &lt;code>Expressions&lt;/code? that are &lt;code>steps&lt;/code> of the &lt;code>Function&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Functions-Function-checkFunctionResultBindingConnector" name="checkFunctionResultBindingConnector" visibility="public" constrainedElement="Kernel-Functions-Function">
          <ownedComment xmi:id="Kernel-Functions-Function-checkFunctionResultBindingConnector-_ownedComment.0" annotatedElement="Kernel-Functions-Function-checkFunctionResultBindingConnector">
            <body>&lt;p>If a &lt;code>Function&lt;/code> has an &lt;code>Expression&lt;/code> owned via a &lt;code>ResultExpressionMembership&lt;/code>, then the owning &lt;code>Function&lt;/code> must also own a &lt;code>BindingConnector&lt;/code> between its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> and the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the result &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Function-checkFunctionResultBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMembership.selectByKind(ResultExpressionMembership)->
    forAll(mem | ownedFeature.selectByKind(BindingConnector)->
        exists(binding |
            binding.relatedFeature->includes(result) and
            binding.relatedFeature->includes(mem.ownedResultExpression.result)))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Function-checkFunctionSpecialization" name="checkFunctionSpecialization" visibility="public" constrainedElement="Kernel-Functions-Function">
          <ownedComment xmi:id="Kernel-Functions-Function-checkFunctionSpecialization-_ownedComment.0" annotatedElement="Kernel-Functions-Function-checkFunctionSpecialization">
            <body>&lt;p>A Function must directly or indirectly specialize the base Function &lt;code>&lt;em>Performances::Evaluation&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Function-checkFunctionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Performances::Evaluation&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Function-deriveFunctionResult" name="deriveFunctionResult" visibility="public" constrainedElement="Kernel-Functions-Function">
          <ownedComment xmi:id="Kernel-Functions-Function-deriveFunctionResult-_ownedComment.0" annotatedElement="Kernel-Functions-Function-deriveFunctionResult">
            <body>&lt;p>The &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of a &lt;code>Function&lt;/code> is its &lt;code>parameter&lt;/code> owned via a &lt;code>ReturnParameterMembership&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Function-deriveFunctionResult-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>result =
    let resultParams : Sequence(Feature) =
        ownedFeatureMemberships->
            selectByKind(ReturnParameterMembership).
            ownedParameterMember in
    if resultParams->notEmpty() then resultParams->first()
    else null
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Function-validateFunctionResultParameterMembership" name="validateFunctionResultParameterMembership" visibility="public" constrainedElement="Kernel-Functions-Function">
          <ownedComment xmi:id="Kernel-Functions-Function-validateFunctionResultParameterMembership-_ownedComment.0" annotatedElement="Kernel-Functions-Function-validateFunctionResultParameterMembership">
            <body>&lt;p>A &lt;code>Function&lt;/code> must own at most one &lt;code>ResultParameterMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Function-validateFunctionResultParameterMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeatureMembership->
    selectByKind(ReturnParameterMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Functions-Function-_generalization.0" general="Kernel-Behaviors-Behavior"/>
        <ownedAttribute xmi:id="Kernel-Functions-Function-expression" name="expression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-step" association="Kernel-Functions-_packagedElement.6">
          <ownedComment xmi:id="Kernel-Functions-Function-expression-_ownedComment.0" annotatedElement="Kernel-Functions-Function-expression">
            <body>&lt;p>The &lt;code>Expressions&lt;/code> that are &lt;code>steps&lt;/code> in the calculation of the &lt;code>result&lt;/code> of this &lt;code>Function&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Functions-Function-expression-_ownedComment.1" annotatedElement="Kernel-Functions-Function-expression">
            <body>&lt;p>The set of expressions that represent computational steps or parts of a system of equations within the Function.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-Function-expression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-Function-expression-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Functions-Function-result" name="result" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-parameter Core-Types-Type-output" association="Kernel-Functions-_packagedElement.2">
          <ownedComment xmi:id="Kernel-Functions-Function-result-_ownedComment.0" annotatedElement="Kernel-Functions-Function-result">
            <body>&lt;p>The &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>Function&lt;/code>, which is owned by the &lt;code>Function&lt;/code> via a &lt;code>ReturnParameterMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Functions-Function-result-_ownedComment.1" annotatedElement="Kernel-Functions-Function-result">
            <body>&lt;p>The object or value that is the result of evaluating the Function.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-Function-result-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-Function-result-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Functions-Function-isModelLevelEvaluable" name="isModelLevelEvaluable" visibility="public" isDerived="true">
          <ownedComment xmi:id="Kernel-Functions-Function-isModelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Functions-Function-isModelLevelEvaluable">
            <body>&lt;p>Whether this &lt;code>Function&lt;/code> can be used as the &lt;code>function&lt;/code> of a model-level evaluable &lt;code>InvocationExpression&lt;/code>. Certain &lt;code>Functions&lt;/code> from the Kernel Functions Library are considered to have &lt;code>isModelLevelEvaluable = true&lt;/code>. For all other &lt;code>Functions&lt;/code> it is &lt;code>false&lt;/code>.&lt;/p>

&lt;p> Note: See the specification of the KerML concrete syntax notation for &lt;code>Expressions&lt;/code> for an identification of which library &lt;code>Functions&lt;/code> are model-level evaluable.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Functions-Expression" name="Expression" visibility="public">
        <ownedComment xmi:id="Kernel-Functions-Expression-_ownedComment.0" annotatedElement="Kernel-Functions-Expression">
          <body>&lt;p>An &lt;code>Expression&lt;/code> is a &lt;code>Step&lt;/code> that is typed by a &lt;code>Function&lt;/code>. An &lt;code>Expression&lt;/code> that also has a &lt;code>Function&lt;/code> as its &lt;code>featuringType&lt;/code> is a computational step within that &lt;code>Function&lt;/code>. An &lt;code>Expression&lt;/code> always has a single &lt;code>result&lt;/code> parameter, which redefines the &lt;code>result&lt;/code> parameter of its defining &lt;code>function&lt;/code>. This allows &lt;code>Expressions&lt;/code> to be interconnected in tree structures, in which inputs to each &lt;code>Expression&lt;/code> in the tree are determined as the results of other &lt;code>Expression&lt;/code> in the tree.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Functions-Expression-deriveExpressionIsModelLevelEvaluable" name="deriveExpressionIsModelLevelEvaluable" visibility="public" constrainedElement="Kernel-Functions-Expression">
          <ownedComment xmi:id="Kernel-Functions-Expression-deriveExpressionIsModelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-deriveExpressionIsModelLevelEvaluable">
            <body>&lt;p>Whether an Expression &lt;code>isModelLevelEvaluable&lt;/code> is determined by the &lt;code>modelLevelEvaluable()&lt;/code> operation.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-deriveExpressionIsModelLevelEvaluable-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isModelLevelEvaluable = modelLevelEvaluable(Set(Element){})</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Expression-checkExpressionSpecialization" name="checkExpressionSpecialization" visibility="public" constrainedElement="Kernel-Functions-Expression">
          <ownedComment xmi:id="Kernel-Functions-Expression-checkExpressionSpecialization-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-checkExpressionSpecialization">
            <body>&lt;p>An Expression must directly or indirectly specialize the base Expression &lt;code>&lt;em>Performances::evaluations&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-checkExpressionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Performances::evaluations&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Expression-checkExpressionTypeFeaturing" name="checkExpressionTypeFeaturing" visibility="public" constrainedElement="Kernel-Functions-Expression">
          <ownedComment xmi:id="Kernel-Functions-Expression-checkExpressionTypeFeaturing-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-checkExpressionTypeFeaturing">
            <body>&lt;p>If this &lt;code>Expression&lt;/code> is owned by a &lt;code>FeatureValue&lt;/code>, then it must have the same &lt;code>featuringTypes&lt;/code> as the &lt;code>featureWithValue&lt;/code> of the &lt;code>FeatureValue&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-checkExpressionTypeFeaturing-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningMembership &lt;> null and 
owningMembership.oclIsKindOf(FeatureValue) implies
    let featureWithValue : Feature = 
        owningMembership.oclAsType(FeatureValue).featureWithValue in
    featuringType = featureWithValue.featuringType</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Expression-checkExpressionResultBindingConnector" name="checkExpressionResultBindingConnector" visibility="public" constrainedElement="Kernel-Functions-Expression">
          <ownedComment xmi:id="Kernel-Functions-Expression-checkExpressionResultBindingConnector-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-checkExpressionResultBindingConnector">
            <body>&lt;p>If an &lt;code>Expression&lt;/code> has an &lt;code>Expression&lt;/code> owned via a &lt;code>ResultExpressionMembership&lt;/code>, then the owning &lt;code>Expression&lt;/code> must also own a &lt;code>BindingConnector&lt;/code> between its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> and the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the result &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-checkExpressionResultBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMembership.selectByKind(ResultExpressionMembership)->
    forAll(mem | ownedFeature.selectByKind(BindingConnector)->
        exists(binding |
            binding.relatedFeature->includes(result) and
            binding.relatedFeature->includes(mem.ownedResultExpression.result)))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Expression-deriveExpressionResult" name="deriveExpressionResult" visibility="public" constrainedElement="Kernel-Functions-Expression">
          <ownedComment xmi:id="Kernel-Functions-Expression-deriveExpressionResult-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-deriveExpressionResult">
            <body>&lt;p>If an &lt;code>Expression&lt;/code> has a &lt;code>parameter&lt;/code> owned via a &lt;code>ReturnParameterMembership&lt;/code>, then that is its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code>. Otherwise, its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> is the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> inherited from its &lt;code>function&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-deriveExpressionResult-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>result =
    let resultParams : Sequence(Feature) =
        ownedFeatureMemberships->
            selectByKind(ReturnParameterMembership).
            ownedParameterMember in
    if resultParams->notEmpty() then resultParams->first()
    else if function &lt;> null then function.result
    else null
    endif endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-Expression-validateExpressionResultParameterMembership" name="validateExpressionResultParameterMembership" visibility="public" constrainedElement="Kernel-Functions-Expression">
          <ownedComment xmi:id="Kernel-Functions-Expression-validateExpressionResultParameterMembership-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-validateExpressionResultParameterMembership">
            <body>&lt;p>A &lt;code>Expression&lt;/code> must own at most one &lt;code>ResultParameterMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-validateExpressionResultParameterMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFeatureMembership->
    selectByKind(ReturnParameterMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Functions-Expression-_generalization.0" general="Kernel-Behaviors-Step"/>
        <ownedAttribute xmi:id="Kernel-Functions-Expression-function" name="function" visibility="public" type="Kernel-Functions-Function" isDerived="true" redefinedProperty="Kernel-Behaviors-Step-behavior" association="Kernel-Functions-_packagedElement.7">
          <ownedComment xmi:id="Kernel-Functions-Expression-function-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-function">
            <body>&lt;p>The &lt;code>Function&lt;/code> that types this &lt;code>Expression&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Functions-Expression-function-_ownedComment.1" annotatedElement="Kernel-Functions-Expression-function">
            <body>&lt;p>This is the Function that types the Expression.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-Expression-function-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-Expression-function-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Functions-Expression-result" name="result" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-parameter Core-Types-Type-output" association="Kernel-Functions-_packagedElement.12">
          <ownedComment xmi:id="Kernel-Functions-Expression-result-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-result">
            <body>&lt;p>&lt;p>An &lt;code>output&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>Expression&lt;/code> whose value is the result of the &lt;code>Expression&lt;/code>. The result of an &lt;code>Expression&lt;/code> is either inherited from its &lt;code>function&lt;/code> or it is related to the &lt;code>Expression&lt;/code> via a &lt;code>ReturnParameterMembership&lt;/code>, in which case it redefines the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of its &lt;code>function&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-Expression-result-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-Expression-result-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Kernel-Functions-Expression-isModelLevelEvaluable" name="isModelLevelEvaluable" visibility="public" isDerived="true">
          <ownedComment xmi:id="Kernel-Functions-Expression-isModelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-isModelLevelEvaluable">
            <body>&lt;p>Whether this &lt;code>Expression&lt;/code> meets the constraints necessary to be evaluated at &lt;em>model level&lt;/em>, that is, using metadata within the model.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Functions-Expression-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Kernel-Functions-Expression-modelLevelEvaluable-unnamed1">
          <ownedComment xmi:id="Kernel-Functions-Expression-modelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-modelLevelEvaluable">
            <body>&lt;p>Return whether this &lt;code>Expression&lt;/code> is model-level evaluable. The &lt;code>visited&lt;/code> parameter is used to track possible circular &lt;code>Feature&lt;/code> references. Such circular references are not allowed in model-level evaluable expressions.&lt;/p>

&lt;p>An &lt;code>Expression&lt;/code> that is not otherwise specialized is model-level evaluable if all of it has no &lt;code>ownedSpecialziations&lt;/code> and all its (non-implicit) &lt;code>features&lt;/code> are either &lt;code>in&lt;/code> parameters, the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> or a result &lt;code>Expression&lt;/code> owned via a &lt;code>ResultExpressionMembership&lt;/code>. The &lt;code>parameters&lt;/code>  must not have any &lt;code>ownedFeatures&lt;/code> or a &lt;code>FeatureValue&lt;/code>, and the result &lt;code>Expression&lt;/code> must be model-level evaluable.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Functions-Expression-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>ownedSpecialization->isEmpty() and
ownedFeature->forAll(f |
    (f.oclIsKindOf(Relationship) and 
        f.oclAsType(Relationship).isImplicit) or 
    (directionOf(f) = FeatureDirectionKind::_'in' or f = result) and 
        f.ownedFeature->isEmpty() f.valuation = null and  or
    f.owningFeatureMembership.oclIsKindOf(ResultExpressionMembership) and
        f.oclAsType(Expression).modelLevelEvaluable(visited)
    </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Functions-Expression-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-Expression-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-Expression-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Functions-Expression-modelLevelEvaluable-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Functions-Expression-evaluate" name="evaluate" visibility="public" bodyCondition="Kernel-Functions-Expression-evaluate-unnamed1" precondition="Kernel-Functions-Expression-evaluate-evaluatePre">
          <ownedComment xmi:id="Kernel-Functions-Expression-evaluate-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-evaluate">
            <body>&lt;p>If this &lt;code>Expression&lt;/code> &lt;code>isModelLevelEvaluable&lt;/code>, then evaluate it using the &lt;code>target&lt;/code> as the context &lt;code>Element&lt;/code> for resolving &lt;code>Feature&lt;/code> names and testing classification. The result is a collection of &lt;code>Elements&lt;/code>, which, for a fully evaluable &lt;code>Expression&lt;/code>, will be a &lt;code>LiteralExpression&lt;/code> or a &lt;code>Feature&lt;/code> that is not an &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Functions-Expression-evaluate-evaluatePre" name="evaluatePre" visibility="public" constrainedElement="Kernel-Functions-Expression-evaluate">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-evaluate-evaluatePre-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>isModelLevelEvaluable</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="Kernel-Functions-Expression-evaluate-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-evaluate-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let resultExprs : Sequence(Expression) =
    ownedFeatureMembership->
        selectByKind(ResultExpressionMembership).
        ownedResultExpression in
if resultExpr->isEmpty() then Sequence{}
else resultExprs->first().evaluate(target)
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Functions-Expression-evaluate-target" name="target" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Functions-Expression-evaluate-result" name="result" visibility="public" type="Root-Elements-Element" isOrdered="true" isUnique="false" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-Expression-evaluate-result-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-Expression-evaluate-result-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Functions-Expression-checkCondition" name="checkCondition" visibility="public" bodyCondition="Kernel-Functions-Expression-checkCondition-unnamed1">
          <ownedComment xmi:id="Kernel-Functions-Expression-checkCondition-_ownedComment.0" annotatedElement="Kernel-Functions-Expression-checkCondition">
            <body>&lt;p>Model-level evaluate this &lt;code>Expression&lt;/code> with the given &lt;code>target&lt;/code>t. If the result is a &lt;code>LiteralBoolean&lt;/code>, return its &lt;code>value&lt;/code>. Otherwise return &lt;code>false&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Functions-Expression-checkCondition-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Expression-checkCondition-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let results: Sequence(Element) = evaluate(target) in
    result->size() = 1 and
    results->first().oclIsKindOf(LiteralBoolean) and 
    results->first().oclAsType(LiteralBoolean).value</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Functions-Expression-checkCondition-target" name="target" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Functions-Expression-checkCondition-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Functions-_packagedElement.2" name="" visibility="private" memberEnd="Kernel-Functions-Function-result Kernel-Functions-_packagedElement.2-computingFunction">
        <ownedEnd xmi:id="Kernel-Functions-_packagedElement.2-computingFunction" name="computingFunction" visibility="public" type="Kernel-Functions-Function" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.1-parameteredBehavior" association="Kernel-Functions-_packagedElement.2">
          <ownedComment xmi:id="Kernel-Functions-_packagedElement.2-computingFunction-_ownedComment.0" annotatedElement="Kernel-Functions-_packagedElement.2-computingFunction">
            <body>&lt;p>The Functions that have a certain Feature its owned or inherited &lt;code>result&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-_packagedElement.2-computingFunction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-_packagedElement.2-computingFunction-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Functions-Invariant" name="Invariant" visibility="public">
        <ownedComment xmi:id="Kernel-Functions-Invariant-_ownedComment.0" annotatedElement="Kernel-Functions-Invariant">
          <body>&lt;p>An &lt;code>Invariant&lt;/code> is a &lt;code>BooleanExpression&lt;/code> that is asserted to have a specific &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> result value. If &lt;code>isNegated = false&lt;/code>, then the result is asserted to be true. If &lt;code>isNegated = true&lt;/code>, then the result is asserted to be false.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Functions-Invariant-checkInvariantSpecialization" name="checkInvariantSpecialization" visibility="public" constrainedElement="Kernel-Functions-Invariant">
          <ownedComment xmi:id="Kernel-Functions-Invariant-checkInvariantSpecialization-_ownedComment.0" annotatedElement="Kernel-Functions-Invariant-checkInvariantSpecialization">
            <body>&lt;p>An Invariant must directly or indirectly specialize either of the following BooleanExpressions from the Kernel Semantic Library: &lt;code>&lt;em>Performances::trueEvaluations&lt;/em>&lt;/code>, if &lt;code>isNegated = false&lt;/code>, or  &lt;code>&lt;em>Performances::falseEvaluations&lt;/em>&lt;/code>, if &lt;code>isNegated = true&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Invariant-checkInvariantSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>if isNegated then
    specializesFromLibrary(&quot;Performances::falseEvaluations&quot;)
else
    specializesFromLibrary(&quot;Performances::trueEvaluations&quot;)
endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Functions-Invariant-_generalization.0" general="Kernel-Functions-BooleanExpression"/>
        <ownedAttribute xmi:id="Kernel-Functions-Invariant-isNegated" name="isNegated" visibility="public">
          <ownedComment xmi:id="Kernel-Functions-Invariant-isNegated-_ownedComment.0" annotatedElement="Kernel-Functions-Invariant-isNegated">
            <body>&lt;p>Whether this &lt;code>Invariant&lt;/code> is asserted to be false rather than true.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Kernel-Functions-Invariant-isNegated-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Functions-Predicate" name="Predicate" visibility="public">
        <ownedComment xmi:id="Kernel-Functions-Predicate-_ownedComment.0" annotatedElement="Kernel-Functions-Predicate">
          <body>&lt;p>A &lt;code>Predicate&lt;/code> is a &lt;code>Function&lt;/code> whose &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> has type &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> and multiplicity &lt;code>1..1&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Functions-Predicate-checkPredicateSpecialization" name="checkPredicateSpecialization" visibility="public" constrainedElement="Kernel-Functions-Predicate">
          <ownedComment xmi:id="Kernel-Functions-Predicate-checkPredicateSpecialization-_ownedComment.0" annotatedElement="Kernel-Functions-Predicate-checkPredicateSpecialization">
            <body>&lt;p>A Predicate must directly or indirectly specialize the base Predicate &lt;code>&lt;em>Performances::BooleanEvaluation&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-Predicate-checkPredicateSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Performances::BooleanEvaluation&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Functions-Predicate-_generalization.0" general="Kernel-Functions-Function"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Functions-_packagedElement.5" name="" visibility="private" memberEnd="Kernel-Functions-BooleanExpression-predicate Kernel-Functions-_packagedElement.5-typedBooleanExpression">
        <ownedEnd xmi:id="Kernel-Functions-_packagedElement.5-typedBooleanExpression" name="typedBooleanExpression" visibility="public" type="Kernel-Functions-BooleanExpression" isDerived="true" subsettedProperty="Kernel-Functions-_packagedElement.7-typedExpression" association="Kernel-Functions-_packagedElement.5">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-_packagedElement.5-typedBooleanExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-_packagedElement.5-typedBooleanExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Functions-_packagedElement.6" name="" visibility="private" memberEnd="Kernel-Functions-Function-expression Kernel-Functions-_packagedElement.6-computedFunction">
        <ownedEnd xmi:id="Kernel-Functions-_packagedElement.6-computedFunction" name="computedFunction" visibility="public" type="Kernel-Functions-Function" subsettedProperty="Kernel-Behaviors-_packagedElement.0-featuringBehavior" association="Kernel-Functions-_packagedElement.6">
          <ownedComment xmi:id="Kernel-Functions-_packagedElement.6-computedFunction-_ownedComment.0" annotatedElement="Kernel-Functions-_packagedElement.6-computedFunction">
            <body>&lt;p>The Functions that hasve a certain &lt;code>expression&lt;/code> as a step.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-_packagedElement.6-computedFunction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-_packagedElement.6-computedFunction-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Functions-_packagedElement.7" name="" visibility="private" memberEnd="Kernel-Functions-Expression-function Kernel-Functions-_packagedElement.7-typedExpression">
        <ownedEnd xmi:id="Kernel-Functions-_packagedElement.7-typedExpression" name="typedExpression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.3-typedStep" association="Kernel-Functions-_packagedElement.7">
          <ownedComment xmi:id="Kernel-Functions-_packagedElement.7-typedExpression-_ownedComment.0" annotatedElement="Kernel-Functions-_packagedElement.7-typedExpression">
            <body>&lt;p>The Expressions that are typed by a certain &lt;code>function&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-_packagedElement.7-typedExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-_packagedElement.7-typedExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Functions-BooleanExpression" name="BooleanExpression" visibility="public">
        <ownedComment xmi:id="Kernel-Functions-BooleanExpression-_ownedComment.0" annotatedElement="Kernel-Functions-BooleanExpression">
          <body>&lt;p>A &lt;code>BooleanExpression&lt;/code> is a &lt;em>&lt;code>Boolean&lt;/code>&lt;/em>-valued &lt;code>Expression&lt;/code> whose type is a &lt;code>Predicate&lt;/code>. It represents a logical condition resulting from the evaluation of the &lt;code>Predicate&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Functions-BooleanExpression-checkBooleanExpressionSpecialization" name="checkBooleanExpressionSpecialization" visibility="public" constrainedElement="Kernel-Functions-BooleanExpression">
          <ownedComment xmi:id="Kernel-Functions-BooleanExpression-checkBooleanExpressionSpecialization-_ownedComment.0" annotatedElement="Kernel-Functions-BooleanExpression-checkBooleanExpressionSpecialization">
            <body>&lt;p>A BooleanExpression must directly or indirectly specialize the base BooleanExpression &lt;code>&lt;em>Performances::booleanEvaluations&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-BooleanExpression-checkBooleanExpressionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Performances::booleanEvaluations&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Functions-BooleanExpression-_generalization.0" general="Kernel-Functions-Expression"/>
        <ownedAttribute xmi:id="Kernel-Functions-BooleanExpression-predicate" name="predicate" visibility="public" type="Kernel-Functions-Predicate" isDerived="true" redefinedProperty="Kernel-Functions-Expression-function" association="Kernel-Functions-_packagedElement.5">
          <ownedComment xmi:id="Kernel-Functions-BooleanExpression-predicate-_ownedComment.0" annotatedElement="Kernel-Functions-BooleanExpression-predicate">
            <body>&lt;p>The &lt;code>Predicate&lt;/code> that types this &lt;code>BooleanExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedComment xmi:id="Kernel-Functions-BooleanExpression-predicate-_ownedComment.1" annotatedElement="Kernel-Functions-BooleanExpression-predicate">
            <body>&lt;p>The Predicate that types the Expression.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-BooleanExpression-predicate-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-BooleanExpression-predicate-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Functions-_packagedElement.9" name="" visibility="private" memberEnd="Kernel-Functions-ResultExpressionMembership-ownedResultExpression Kernel-Functions-_packagedElement.9-owningResultExpressionMembership">
        <ownedEnd xmi:id="Kernel-Functions-_packagedElement.9-owningResultExpressionMembership" name="owningResultExpressionMembership" visibility="public" type="Kernel-Functions-ResultExpressionMembership" isDerived="true" subsettedProperty="Core-Features-Feature-owningFeatureMembership" association="Kernel-Functions-_packagedElement.9">
          <ownedComment xmi:id="Kernel-Functions-_packagedElement.9-owningResultExpressionMembership-_ownedComment.0" annotatedElement="Kernel-Functions-_packagedElement.9-owningResultExpressionMembership">
            <body>&lt;p>The ResultExpressionMembership that owns the &lt;code>ownedResultExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-_packagedElement.9-owningResultExpressionMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-_packagedElement.9-owningResultExpressionMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Functions-ResultExpressionMembership" name="ResultExpressionMembership" visibility="public">
        <ownedComment xmi:id="Kernel-Functions-ResultExpressionMembership-_ownedComment.0" annotatedElement="Kernel-Functions-ResultExpressionMembership">
          <body>&lt;p>A &lt;code>ResultExpressionMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> that indicates that the &lt;code>ownedResultExpression&lt;/code> provides the result values for the &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code> that owns it. The owning &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code> must contain a &lt;code>BindingConnector&lt;/code> between the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>ownedResultExpression&lt;/code> and the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the owning &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Functions-ResultExpressionMembership-validateResultExpressionMembershipOwningType" name="validateResultExpressionMembershipOwningType" visibility="public" constrainedElement="Kernel-Functions-ResultExpressionMembership">
          <ownedComment xmi:id="Kernel-Functions-ResultExpressionMembership-validateResultExpressionMembershipOwningType-_ownedComment.0" annotatedElement="Kernel-Functions-ResultExpressionMembership-validateResultExpressionMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>ResultExpressionMembership&lt;/code> must be a &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-ResultExpressionMembership-validateResultExpressionMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(Function) or owningType.oclIsKindOf(Expression)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Functions-ResultExpressionMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Kernel-Functions-ResultExpressionMembership-ownedResultExpression" name="ownedResultExpression" visibility="public" type="Kernel-Functions-Expression" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Kernel-Functions-_packagedElement.9">
          <ownedComment xmi:id="Kernel-Functions-ResultExpressionMembership-ownedResultExpression-_ownedComment.0" annotatedElement="Kernel-Functions-ResultExpressionMembership-ownedResultExpression">
            <body>&lt;p>The &lt;code>Expression&lt;/code> that provides the result for the owner of the &lt;code>ResultExpressionMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-ResultExpressionMembership-ownedResultExpression-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-ResultExpressionMembership-ownedResultExpression-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Functions-ReturnParameterMembership" name="ReturnParameterMembership" visibility="public">
        <ownedComment xmi:id="Kernel-Functions-ReturnParameterMembership-_ownedComment.0" annotatedElement="Kernel-Functions-ReturnParameterMembership">
          <body>&lt;p>A &lt;code>ReturnParameterMembership&lt;/code> is a &lt;code>ParameterMembership&lt;/code> that indicates that the &lt;code>ownedMemberParameter&lt;/code> is the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of a &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>. The &lt;code>direction&lt;/code> of the &lt;code>ownedMemberParameter&lt;/code> must be &lt;code>out&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipOwningType" name="validateReturnParameterMembershipOwningType" visibility="public" constrainedElement="Kernel-Functions-ReturnParameterMembership">
          <ownedComment xmi:id="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipOwningType-_ownedComment.0" annotatedElement="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>ReturnParameterMembership&lt;/code> must be a &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(Function) or owningType.oclIsKindOf(Expression)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipParameterHasDirectionOut" name="validateReturnParameterMembershipParameterHasDirectionOut" visibility="public" constrainedElement="Kernel-Functions-ReturnParameterMembership">
          <ownedComment xmi:id="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipParameterHasDirectionOut-_ownedComment.0" annotatedElement="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipParameterHasDirectionOut">
            <body>&lt;p>The &lt;code>ownedMemberParameter&lt;/code> of a &lt;code>ReturnParameterMembership&lt;/code> must have a &lt;code>direction = out&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Functions-ReturnParameterMembership-validateReturnParameterMembershipParameterHasDirectionOut-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMemberParameter.direction = ParameterDirectionKind::out</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Functions-ReturnParameterMembership-_generalization.0" general="Kernel-Behaviors-ParameterMembership"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Functions-_packagedElement.12" name="" visibility="private" memberEnd="Kernel-Functions-Expression-result Kernel-Functions-_packagedElement.12-computingExpression">
        <ownedEnd xmi:id="Kernel-Functions-_packagedElement.12-computingExpression" name="computingExpression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.8-parameteredStep" association="Kernel-Functions-_packagedElement.12">
          <ownedComment xmi:id="Kernel-Functions-_packagedElement.12-computingExpression-_ownedComment.0" annotatedElement="Kernel-Functions-_packagedElement.12-computingExpression">
            <body>&lt;p>The Expressions that have a certain Feature its owned or inherited &lt;code>result&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Functions-_packagedElement.12-computingExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Functions-_packagedElement.12-computingExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Packages" name="Packages" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Packages-ElementFilterMembership" name="ElementFilterMembership" visibility="public">
        <ownedComment xmi:id="Kernel-Packages-ElementFilterMembership-_ownedComment.0" annotatedElement="Kernel-Packages-ElementFilterMembership">
          <body>&lt;p>&lt;code>ElementFilterMembership&lt;/code> is a &lt;code>Membership&lt;/code> between a &lt;code>Namespace&lt;/code> and a model-level evaluable &lt;code>&lt;em>Boolean&lt;/em>&lt;/code>-valued &lt;code>Expression&lt;/code>, asserting that imported &lt;code>members&lt;/code> of the &lt;code>Namespace&lt;/code> should be filtered using the &lt;code>condition&lt;/code> &lt;code>Expression&lt;/code>. A general &lt;code>Namespace&lt;/code> does not define any specific filtering behavior, but such behavior may be defined for various specialized kinds of &lt;code>Namespaces&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsModelLevelEvaluable" name="validatePackageElementFilterIsModelLevelEvaluable" visibility="public" constrainedElement="Kernel-Packages-ElementFilterMembership">
          <ownedComment xmi:id="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsModelLevelEvaluable-_ownedComment.0" annotatedElement="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsModelLevelEvaluable">
            <body>&lt;p>The &lt;code>condition&lt;/code> &lt;code>Expression&lt;/code> must be model-level evaluable.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsModelLevelEvaluable-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>condition.isModelLevelEvaluable</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsBoolean" name="validatePackageElementFilterIsBoolean" visibility="public" constrainedElement="Kernel-Packages-ElementFilterMembership">
          <ownedComment xmi:id="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsBoolean-_ownedComment.0" annotatedElement="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsBoolean">
            <body>&lt;p>The &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>condition&lt;/code> &lt;code>Expression&lt;/code> must directly or indirectly specialize &lt;code>&lt;em>ScalarValues::Boolean&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Packages-ElementFilterMembership-validatePackageElementFilterIsBoolean-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>condition.result.specializesFromLibrary('ScalarValues::Boolean')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Packages-ElementFilterMembership-_generalization.0" general="Root-Namespaces-OwningMembership"/>
        <ownedAttribute xmi:id="Kernel-Packages-ElementFilterMembership-condition" name="condition" visibility="public" type="Kernel-Functions-Expression" aggregation="composite" isDerived="true" redefinedProperty="Root-Namespaces-OwningMembership-ownedMemberElement" association="Kernel-Packages-_packagedElement.2">
          <ownedComment xmi:id="Kernel-Packages-ElementFilterMembership-condition-_ownedComment.0" annotatedElement="Kernel-Packages-ElementFilterMembership-condition">
            <body>&lt;p>The model-level evaluable &lt;code>Boolean&lt;/code>-valued &lt;code>Expression&lt;/code> used to filter the imported &lt;code>members&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code> of this &lt;code>ElementFilterMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Packages-ElementFilterMembership-condition-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Packages-ElementFilterMembership-condition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Packages-_packagedElement.1" name="" visibility="private" memberEnd="Kernel-Packages-Package-filterCondition Kernel-Packages-_packagedElement.1-conditionedPackage">
        <ownedEnd xmi:id="Kernel-Packages-_packagedElement.1-conditionedPackage" name="conditionedPackage" visibility="public" type="Kernel-Packages-Package" isDerived="true" subsettedProperty="Root-Elements-Element-owningNamespace" association="Kernel-Packages-_packagedElement.1">
          <ownedComment xmi:id="Kernel-Packages-_packagedElement.1-conditionedPackage-_ownedComment.0" annotatedElement="Kernel-Packages-_packagedElement.1-conditionedPackage">
            <body>&lt;p>The Package that has a certain Expression as a &lt;code>filterCondition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Packages-_packagedElement.1-conditionedPackage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Packages-_packagedElement.1-conditionedPackage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Packages-_packagedElement.2" name="" visibility="private" memberEnd="Kernel-Packages-ElementFilterMembership-condition Kernel-Packages-_packagedElement.2-owningFilter">
        <ownedEnd xmi:id="Kernel-Packages-_packagedElement.2-owningFilter" name="owningFilter" visibility="public" type="Kernel-Packages-ElementFilterMembership" isDerived="true" subsettedProperty="Root-Elements-Element-owningMembership" association="Kernel-Packages-_packagedElement.2">
          <ownedComment xmi:id="Kernel-Packages-_packagedElement.2-owningFilter-_ownedComment.0" annotatedElement="Kernel-Packages-_packagedElement.2-owningFilter">
            <body>&lt;p>The ElementFilterMembership that owns the &lt;code>condition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Packages-_packagedElement.2-owningFilter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Packages-_packagedElement.2-owningFilter-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Packages-Package" name="Package" visibility="public">
        <ownedComment xmi:id="Kernel-Packages-Package-_ownedComment.0" annotatedElement="Kernel-Packages-Package">
          <body>&lt;p>A &lt;code>Package&lt;/code> is a &lt;code>Namespace&lt;/code> used to group &lt;code>Elements&lt;/code>, without any instance-level semantics. It may have one or more model-level evaluable &lt;code>filterCondition&lt;/code> &lt;code>Expressions&lt;/code> used to filter its &lt;code>importedMemberships&lt;/code>. Any imported &lt;code>member&lt;/code> must meet all of the &lt;code>filterConditions&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Packages-Package-derivePackageFilterCondition" name="derivePackageFilterCondition" visibility="public" constrainedElement="Kernel-Packages-Package">
          <ownedComment xmi:id="Kernel-Packages-Package-derivePackageFilterCondition-_ownedComment.0" annotatedElement="Kernel-Packages-Package-derivePackageFilterCondition">
            <body>&lt;p>The &lt;code>filterConditions&lt;/code> of a &lt;code>Package&lt;/code> are the &lt;code>conditions&lt;/code> of its owned &lt;code>ElementFilterMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Packages-Package-derivePackageFilterCondition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>filterCondition = ownedMembership->
    selectByKind(ElementFilterMembership).condition</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Packages-Package-_generalization.0" general="Root-Namespaces-Namespace"/>
        <ownedAttribute xmi:id="Kernel-Packages-Package-filterCondition" name="filterCondition" visibility="public" type="Kernel-Functions-Expression" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Kernel-Packages-_packagedElement.1">
          <ownedComment xmi:id="Kernel-Packages-Package-filterCondition-_ownedComment.0" annotatedElement="Kernel-Packages-Package-filterCondition">
            <body>&lt;p>The model-level evaluable &lt;code>&lt;em>Boolean&lt;/em>&lt;/code>-valued &lt;code>Expression&lt;/code> used to filter the &lt;code>members&lt;/code> of this &lt;code>Package&lt;/code>, which are owned by the &lt;code>Package&lt;/code> are via &lt;code>ElementFilterMemberships&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Packages-Package-filterCondition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Packages-Package-filterCondition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Packages-Package-importedMemberships" name="importedMemberships" visibility="public" bodyCondition="Kernel-Packages-Package-importedMemberships-unnamed1" redefinedOperation="Root-Namespaces-Namespace-importedMemberships">
          <ownedComment xmi:id="Kernel-Packages-Package-importedMemberships-_ownedComment.0" annotatedElement="Kernel-Packages-Package-importedMemberships">
            <body>&lt;p>Exclude &lt;code>Elements&lt;/code> that do not meet all the &lt;code>filterConditions&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Packages-Package-importedMemberships-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Packages-Package-importedMemberships-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>self.oclAsType(Namespace).importedMemberships(excluded)->
    select(m | self.includeAsMember(m.memberElement))</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Packages-Package-importedMemberships-excluded" name="excluded" visibility="public" type="Root-Namespaces-Namespace">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Packages-Package-importedMemberships-excluded-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Packages-Package-importedMemberships-excluded-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Kernel-Packages-Package-importedMemberships-_ownedParameter.1" name="" visibility="public" type="Root-Namespaces-Membership" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Packages-Package-importedMemberships-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Packages-Package-importedMemberships-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Packages-Package-includeAsMember" name="includeAsMember" visibility="public" bodyCondition="Kernel-Packages-Package-includeAsMember-unnamed1">
          <ownedComment xmi:id="Kernel-Packages-Package-includeAsMember-_ownedComment.0" annotatedElement="Kernel-Packages-Package-includeAsMember">
            <body>&lt;p>Determine whether the given &lt;code>element&lt;/code> meets all the &lt;code>filterConditions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Packages-Package-includeAsMember-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Packages-Package-includeAsMember-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let metadataFeatures: Sequence(AnnotatingElement) = 
    element.ownedAnnotation.annotatingElement->
        selectByKind(MetadataFeature) in
    self.filterCondition->forAll(cond | 
        metadataFeatures->exists(elem | 
            cond.checkCondition(elem)))</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Packages-Package-includeAsMember-element" name="element" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Kernel-Packages-Package-includeAsMember-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Packages-LibraryPackage" name="LibraryPackage" visibility="public">
        <ownedComment xmi:id="Kernel-Packages-LibraryPackage-_ownedComment.0" annotatedElement="Kernel-Packages-LibraryPackage">
          <body>&lt;p>A &lt;code>LibraryPackage&lt;/code> is a &lt;code>Package&lt;/code> that is the container for a model library. A &lt;code>LibraryPackage&lt;/code> is itself a library &lt;code>Element&lt;/code> as are all &lt;code>Elements&lt;/code> that are directly or indirectly contained in it.&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Kernel-Packages-LibraryPackage-_generalization.0" general="Kernel-Packages-Package"/>
        <ownedAttribute xmi:id="Kernel-Packages-LibraryPackage-isStandard" name="isStandard" visibility="public">
          <ownedComment xmi:id="Kernel-Packages-LibraryPackage-isStandard-_ownedComment.0" annotatedElement="Kernel-Packages-LibraryPackage-isStandard">
            <body>&lt;p>Whether this &lt;code>LibraryPackage&lt;/code> contains a standard library model. This should only be set to true for &lt;code>LibraryPackages&lt;/code> in the standard Kernel Model Libraries or in normative model libraries for a language built on KerML.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Kernel-Packages-LibraryPackage-isStandard-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Packages-LibraryPackage-libraryNamespace" name="libraryNamespace" visibility="public" bodyCondition="Kernel-Packages-LibraryPackage-libraryNamespace-unnamed1" redefinedOperation="Root-Elements-Element-libraryNamespace">
          <ownedComment xmi:id="Kernel-Packages-LibraryPackage-libraryNamespace-_ownedComment.0" annotatedElement="Kernel-Packages-LibraryPackage-libraryNamespace">
            <body>&lt;p>The &lt;code>libraryNamespace&lt;/code> for a &lt;code>LibraryPackage&lt;/code> is itself.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Packages-LibraryPackage-libraryNamespace-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Packages-LibraryPackage-libraryNamespace-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>self</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Packages-LibraryPackage-libraryNamespace-_ownedParameter.0" name="" visibility="public" type="Root-Namespaces-Namespace" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Packages-LibraryPackage-libraryNamespace-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Packages-LibraryPackage-libraryNamespace-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Metadata" name="Metadata" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Kernel-Metadata-_packagedElement.0" name="" visibility="private" memberEnd="Kernel-Metadata-MetadataFeature-metaclass Kernel-Metadata-_packagedElement.0-typedMetadata">
        <ownedEnd xmi:id="Kernel-Metadata-_packagedElement.0-typedMetadata" name="typedMetadata" visibility="public" type="Kernel-Metadata-MetadataFeature" isDerived="true" subsettedProperty="Core-Features-_packagedElement.2-typedFeature" association="Kernel-Metadata-_packagedElement.0">
          <ownedComment xmi:id="Kernel-Metadata-_packagedElement.0-typedMetadata-_ownedComment.0" annotatedElement="Kernel-Metadata-_packagedElement.0-typedMetadata">
            <body>&lt;p>The MetadataFeatures whose &lt;code>type&lt;/code> is a certain Metaclass.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Metadata-_packagedElement.0-typedMetadata-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Metadata-_packagedElement.0-typedMetadata-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Metadata-MetadataFeature" name="MetadataFeature" visibility="public">
        <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature">
          <body>&lt;p>A &lt;code>MetadataFeature&lt;/code> is a &lt;code>Feature&lt;/code> that is an &lt;code>AnnotatingElement&lt;/code> used to annotate another &lt;code>Element&lt;/code> with metadata. It is typed by a &lt;code>Metaclass&lt;/code>. All its &lt;code>ownedFeatures&lt;/code> must redefine &lt;code>features&lt;/code> of its &lt;code>metaclass&lt;/code> and any feature bindings must be model-level evaluable.&lt;/p>

</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSpecialization" name="checkMetadataFeatureSpecialization" visibility="public" constrainedElement="Kernel-Metadata-MetadataFeature">
          <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSpecialization-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSpecialization">
            <body>&lt;p>A &lt;code>MetadataFeature&lt;/code> must directly or indirectly specialize the base &lt;code>MetadataFeature&lt;/code> &lt;code>&lt;em>Metaobjects::metaobjects&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Metaobjects::metaobjects&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSemanticSpecialization" name="checkMetadataFeatureSemanticSpecialization" visibility="public" constrainedElement="Kernel-Metadata-MetadataFeature">
          <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSemanticSpecialization-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSemanticSpecialization">
            <body>&lt;p>If this &lt;code>MetadataFeature&lt;/code> is an application of &lt;code>&lt;em>SemanticMetadata&lt;/em>&lt;/code>, then its &lt;code>annotatingElement&lt;/code> must be a &lt;code>Type&lt;/code>. The annotated &lt;code>Type&lt;/code> must then directly or indirectly specialize the specified value of the &lt;code>&lt;em>baseType&lt;/em>&lt;/code>, &lt;em>unless&lt;/em> the &lt;code>Type&lt;/code> is a &lt;code>Classifier&lt;/code> and the &lt;code>&lt;em>baseType&lt;/em>&lt;/code> represents a kind of &lt;code>Feature&lt;code>, in which case the &lt;code>Classifier&lt;/code> must directly or indirectly specialize each of the &lt;code>types&lt;/code> of the &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-MetadataFeature-checkMetadataFeatureSemanticSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSemantic() implies
    let annotatedTypes : Sequence(Type) = 
        annotatedElement->selectAsKind(Type) in
    let baseTypes : Sequence(MetadataFeature) = 
        evaluateFeature(resolveGlobal(
            'Metaobjects::SemanticMetadata::baseType').
            oclAsType(Feature))->
        selectAsKind(MetadataFeature) in
    annotatedTypes->notEmpty() and 
    baseTypes()->notEmpty() and 
    baseTypes()->first().isSyntactic() implies
        let annotatedType : Type = annotatedTypes->first() in
        let baseType : Element = baseTypes->first().syntaxElement() in
        if annotatedType.oclIsKindOf(Classifier) and 
            baseType.oclIsKindOf(Feature) then
            baseType.oclAsType(Feature).type->
                forAll(t | annotatedType.specializes(t))
        else if baseType.oclIsKindOf(Type) then
            annotatedType.specializes(baseType.oclAsType(Type))
        else
            true
        endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Metadata-MetadataFeature-_generalization.0" general="Root-Annotations-AnnotatingElement"/>
        <generalization xmi:id="Kernel-Metadata-MetadataFeature-_generalization.1" general="Core-Features-Feature"/>
        <ownedAttribute xmi:id="Kernel-Metadata-MetadataFeature-metaclass" name="metaclass" visibility="public" type="Kernel-Metadata-Metaclass" isDerived="true" redefinedProperty="Core-Features-Feature-type" association="Kernel-Metadata-_packagedElement.0">
          <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-metaclass-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature-metaclass">
            <body>&lt;p>The &lt;code>type&lt;/code> of this &lt;code>MetadataFeature&lt;/code>, which must be a &lt;code>Metaclass&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Metadata-MetadataFeature-metaclass-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Metadata-MetadataFeature-metaclass-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature" name="evaluateFeature" visibility="public" bodyCondition="Kernel-Metadata-MetadataFeature-evaluateFeature-unnamed1">
          <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature-evaluateFeature">
            <body>&lt;p>If the given &lt;code>baseFeature&lt;/code> is a &lt;code>feature&lt;/code> of this &lt;code>MetadataFeature&lt;/code>, or is directly or indirectly redefined by a &lt;code>feature&lt;/code>, then return the result of evaluating the appropriate (model-level evaluable) &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> for it (if any), with the MetadataFeature as the target.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let selectedFeatures : Sequence(Feature) = feature->
    select(closure(ownedRedefinition.redefinedFeature)->
           includes(baseFeature)) in
if selectedFeatures->isEmpty() then null
else
    let selectedFeature : Feature = selectedFeatures->first() in
    let featureValues : FeatureValue = selectedFeature->
        closure(ownedRedefinition.redefinedFeature).ownedMember->
        selectAsKind(FeatureValue) in
    if featureValues->isEmpty() then null
    else featureValues->first().value.evaluate(self)
    endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature-baseFeature" name="baseFeature" visibility="public" type="Core-Features-Feature"/>
          <ownedParameter xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature-_ownedParameter.1" name="" visibility="public" type="Root-Elements-Element" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Metadata-MetadataFeature-evaluateFeature-_ownedParameter.1-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Metadata-MetadataFeature-isSemantic" name="isSemantic" visibility="public" bodyCondition="Kernel-Metadata-MetadataFeature-isSemantic-unnamed1">
          <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-isSemantic-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature-isSemantic">
            <body>&lt;p>Check if this &lt;code>MetadataFeature&lt;/code> has a &lt;code>metaclass&lt;/code> which is a kind of &lt;code>&lt;em>SemanticMetadata&lt;/code>.&lt;p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Metadata-MetadataFeature-isSemantic-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-MetadataFeature-isSemantic-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>specializesFromLibrary('Metaobjects::SemanticMetadata')</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Metadata-MetadataFeature-isSemantic-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Metadata-MetadataFeature-isSyntactic" name="isSyntactic" visibility="public" bodyCondition="Kernel-Metadata-MetadataFeature-isSyntactic-unnamed1">
          <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-isSyntactic-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature-isSyntactic">
            <body>&lt;p>Check if this &lt;code>MetadataFeature&lt;/code> has a &lt;code>metaclass&lt;/code> that is a kind of &lt;code>&lt;em>KerML::Element&lt;em>&lt;/code> (that is, it is from the reflective abstract syntax model).&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Metadata-MetadataFeature-isSyntactic-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-MetadataFeature-isSyntactic-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>specializesFromLibrary('KerML::Element')</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Metadata-MetadataFeature-isSyntactic-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement" name="syntaxElement" visibility="public" bodyCondition="Kernel-Metadata-MetadataFeature-syntaxElement-unnamed1" precondition="Kernel-Metadata-MetadataFeature-syntaxElement-syntaxElement_pre">
          <ownedComment xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-_ownedComment.0" annotatedElement="Kernel-Metadata-MetadataFeature-syntaxElement">
            <body>&lt;p>If this &lt;code>MetadataFeature&lt;/code> reflectively represents a model element, then return the corresponding &lt;code>Element&lt;code> instance from the MOF abstract syntax representation of the model.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-syntaxElement_pre" name="syntaxElement_pre" visibility="public" constrainedElement="Kernel-Metadata-MetadataFeature-syntaxElement">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-syntaxElement_pre-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>isSyntactic()</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-unnamed1-_specification" name="" visibility="public">
              <language>English</language>
              <body>No OCL</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-_ownedParameter.0" name="" visibility="public" type="Root-Elements-Element" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Kernel-Metadata-MetadataFeature-syntaxElement-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Metadata-Metaclass" name="Metaclass" visibility="public">
        <ownedComment xmi:id="Kernel-Metadata-Metaclass-_ownedComment.0" annotatedElement="Kernel-Metadata-Metaclass">
          <body>&lt;p>A &lt;code>Metaclass&lt;/code> is a &lt;code>Structure&lt;/code> used to type &lt;code>MetadataFeatures&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Metadata-Metaclass-checkMetaclassSpecialization" name="checkMetaclassSpecialization" visibility="public" constrainedElement="Kernel-Metadata-Metaclass">
          <ownedComment xmi:id="Kernel-Metadata-Metaclass-checkMetaclassSpecialization-_ownedComment.0" annotatedElement="Kernel-Metadata-Metaclass-checkMetaclassSpecialization">
            <body>&lt;p>A &lt;code>Metaclass&lt;/code> must directly or indirectly specialize the base &lt;code>Metaclass&lt;/code> &lt;code>&lt;em>Metaobjects::Metaobject&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Metadata-Metaclass-checkMetaclassSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Metaobjects::Metaobject&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Metadata-Metaclass-_generalization.0" general="Kernel-Structures-Structure"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Structures" name="Structures" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Structures-Structure" name="Structure" visibility="public">
        <ownedComment xmi:id="Kernel-Structures-Structure-_ownedComment.0" annotatedElement="Kernel-Structures-Structure">
          <body>&lt;p>A &lt;code>Structure&lt;/code> is a &lt;code>Class&lt;/code> of objects in the modeled universe that are primarily structural in nature. While an object is not itself behavioral, it may be involved in and acted on by &lt;code>Behaviors&lt;/code>, and it may be the performer of some of them.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Structures-Structure-checkStructureSpecialization" name="checkStructureSpecialization" visibility="public" constrainedElement="Kernel-Structures-Structure">
          <ownedComment xmi:id="Kernel-Structures-Structure-checkStructureSpecialization-_ownedComment.0" annotatedElement="Kernel-Structures-Structure-checkStructureSpecialization">
            <body>&lt;p>A Structure must directly or indirectly specialize the base Structure &lt;code>&lt;em>Objects::Object&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Structures-Structure-checkStructureSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Objects::Object')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Structures-Structure-_generalization.0" general="Kernel-Classes-Class"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Kernel-Classes" name="Classes" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Kernel-Classes-Class" name="Class" visibility="public">
        <ownedComment xmi:id="Kernel-Classes-Class-_ownedComment.0" annotatedElement="Kernel-Classes-Class">
          <body>&lt;p>A &lt;code>Class&lt;/code> is a &lt;code>Classifier&lt;/code> of things (in the universe) that can be distinguished without regard to how they are related to other things (via &lt;code>Features&lt;/code>). This means multiple things classified by the same &lt;code>Class&lt;/code> can be distinguished, even when they are related other things in exactly the same way.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Kernel-Classes-Class-checkClassSpecialization" name="checkClassSpecialization" visibility="public" constrainedElement="Kernel-Classes-Class">
          <ownedComment xmi:id="Kernel-Classes-Class-checkClassSpecialization-_ownedComment.0" annotatedElement="Kernel-Classes-Class-checkClassSpecialization">
            <body>&lt;p>A &lt;code>Class&lt;/code> must directly or indirectly specialize the base &lt;code>Class&lt;/code> &lt;code>&lt;em>Occurrences::Occurrence&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Classes-Class-checkClassSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Occurrences::Occurrence')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Kernel-Classes-Class-validateClassSpecialization" name="validateClassSpecialization" visibility="public" constrainedElement="Kernel-Classes-Class">
          <ownedComment xmi:id="Kernel-Classes-Class-validateClassSpecialization-_ownedComment.0" annotatedElement="Kernel-Classes-Class-validateClassSpecialization">
            <body>&lt;p>A &lt;code>Class&lt;/code> must not specialize a &lt;code>DataType&lt;/code> and it can only specialize an &lt;code>Association&lt;/code> if it is an &lt;code>AssociationStructure&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Kernel-Classes-Class-validateClassSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedSpecialization.general->
    forAll(not oclIsKindOf(DataType)) and
not oclIsKindOf(AssociationStructure) implies
    ownedSpecialization.general->
        forAll(not oclIsKindOf(Association))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Kernel-Classes-Class-_generalization.0" general="Core-Classifiers-Classifier"/>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="Systems" name="Systems" visibility="public" URI="">
    <packageImport xmi:id="Systems-_packageImport.0" importedPackage="Kernel"/>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Ports" name="Ports" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Ports-PortUsage" name="PortUsage" visibility="public">
        <ownedComment xmi:id="Systems-Ports-PortUsage-_ownedComment.0" annotatedElement="Systems-Ports-PortUsage">
          <body>&lt;p>A &lt;code>PortUsage&lt;/code> is a usage of a &lt;code>PortDefinition&lt;/code>. A &lt;code>PortUsage&lt;code> itself as well as all its &lt;code>nestedUsages&lt;/code> must be referential (non-composite).&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Ports-PortUsage-validatePortUsageNestedUsagesNotComposite" name="validatePortUsageNestedUsagesNotComposite" visibility="public" constrainedElement="Systems-Ports-PortUsage">
          <ownedComment xmi:id="Systems-Ports-PortUsage-validatePortUsageNestedUsagesNotComposite-_ownedComment.0" annotatedElement="Systems-Ports-PortUsage-validatePortUsageNestedUsagesNotComposite">
            <body>&lt;p>The &lt;code>nestedUsages&lt;/code> of a &lt;code>PortUsage&lt;/code> that are not themselves &lt;code>PortUsages&lt;/code> must not be composite.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortUsage-validatePortUsageNestedUsagesNotComposite-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedUsage->
    reject(oclIsKindOf(PortUsage))->
    forAll(not isComposite)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Ports-PortUsage-checkPortUsageSpecialization" name="checkPortUsageSpecialization" visibility="public" constrainedElement="Systems-Ports-PortUsage">
          <ownedComment xmi:id="Systems-Ports-PortUsage-checkPortUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Ports-PortUsage-checkPortUsageSpecialization">
            <body>&lt;p>A &lt;code>PortUsage&lt;/code> must directly or indirectly specialize the &lt;code>PortUsage&lt;/code> &lt;em>&lt;code>Ports::ports&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortUsage-checkPortUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Ports::ports')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Ports-PortUsage-checkPortUsageSubportSpecialization" name="checkPortUsageSubportSpecialization" visibility="public" constrainedElement="Systems-Ports-PortUsage">
          <ownedComment xmi:id="Systems-Ports-PortUsage-checkPortUsageSubportSpecialization-_ownedComment.0" annotatedElement="Systems-Ports-PortUsage-checkPortUsageSubportSpecialization">
            <body>&lt;p>A composite &lt;code>PortUsage&lt;/code> with an &lt;code>owningType&lt;/code> that is a &lt;code>PortDefinition&lt;/code> or &lt;code>PortUsage&lt;/code> must directly or indirectly specialize the &lt;code>PortUsage&lt;/code> &lt;em>&lt;code>Ports::Port::subports&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortUsage-checkPortUsageSubportSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(PortDefinition) or
 owningType.oclIsKindOf(PortUsage)) implies
    specializesFromLibrary('Ports::Port::subports')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Ports-PortUsage-validatePortUsageIsReference" name="validatePortUsageIsReference" visibility="public" constrainedElement="Systems-Ports-PortUsage">
          <ownedComment xmi:id="Systems-Ports-PortUsage-validatePortUsageIsReference-_ownedComment.0" annotatedElement="Systems-Ports-PortUsage-validatePortUsageIsReference">
            <body>&lt;p>Unless a &lt;code>PortUsage&lt;/code> has an &lt;code>owningType&lt;/code> that is a &lt;code>PortDefinition&lt;/code> or a &lt;code>PortUsage&lt;/code>, it must be referential (non-composite).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortUsage-validatePortUsageIsReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType = null or
not owningType.oclIsKindOf(PortDefinition) and
not owningType.oclIsKindOf(PortUsage) implies
    isReference</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Ports-PortUsage-_generalization.0" general="Systems-Occurrences-OccurrenceUsage"/>
        <ownedAttribute xmi:id="Systems-Ports-PortUsage-portDefinition" name="portDefinition" visibility="public" type="Systems-Ports-PortDefinition" isOrdered="true" isDerived="true" redefinedProperty="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition" association="Systems-Ports-_packagedElement.1">
          <ownedComment xmi:id="Systems-Ports-PortUsage-portDefinition-_ownedComment.0" annotatedElement="Systems-Ports-PortUsage-portDefinition">
            <body>&lt;p>The &lt;code>occurrenceDefinitions&lt;/code> of this &lt;code>PortUsage&lt;/code>, which must all be &lt;code>PortDefinitions&lt;code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-PortUsage-portDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-PortUsage-portDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Ports-_packagedElement.1" name="" visibility="private" memberEnd="Systems-Ports-PortUsage-portDefinition Systems-Ports-_packagedElement.1-definedPort">
        <ownedEnd xmi:id="Systems-Ports-_packagedElement.1-definedPort" name="definedPort" visibility="public" type="Systems-Ports-PortUsage" isDerived="true" subsettedProperty="Systems-Occurrences-_packagedElement.7-definedOccurrence" association="Systems-Ports-_packagedElement.1">
          <ownedComment xmi:id="Systems-Ports-_packagedElement.1-definedPort-_ownedComment.0" annotatedElement="Systems-Ports-_packagedElement.1-definedPort">
            <body>&lt;p>The PortUsages that are typed by a certain PortDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-_packagedElement.1-definedPort-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-_packagedElement.1-definedPort-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Ports-PortDefinition" name="PortDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Ports-PortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-PortDefinition">
          <body>&lt;p>A &lt;code>PortDefinition&lt;/code> defines a point at which external entities can connect to and interact with a system or part of a system. Any &lt;code>ownedUsages&lt;/code> of a &lt;code>PortDefinition&lt;/code>, other than &lt;code>PortUsages&lt;/code>, must not be composite.&lt;/p>


</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Ports-PortDefinition-derivePortDefinitionConjugatedPortDefinition" name="derivePortDefinitionConjugatedPortDefinition" visibility="public" constrainedElement="Systems-Ports-PortDefinition">
          <ownedComment xmi:id="Systems-Ports-PortDefinition-derivePortDefinitionConjugatedPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-PortDefinition-derivePortDefinitionConjugatedPortDefinition">
            <body>&lt;p>The &lt;code>conjugatedPortDefinition&lt;/code> of a &lt;code>PortDefinition&lt;/code> is the &lt;code>ownedMember&lt;/code> that is a &lt;code>ConjugatedPortDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortDefinition-derivePortDefinitionConjugatedPortDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>conjugatedPortDefinition = 
let conjugatedPortDefinitions : OrderedSet(ConjugatedPortDefinition) =
    ownedMember->selectByKind(ConjugatedPortDefinition) in
if conjugatedPortDefinitions->isEmpty() then null
else conjugatedPortDefinitions->first()
endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Ports-PortDefinition-validatePortDefinitionOwnedUsagesNotComposite" name="validatePortDefinitionOwnedUsagesNotComposite" visibility="public" constrainedElement="Systems-Ports-PortDefinition">
          <ownedComment xmi:id="Systems-Ports-PortDefinition-validatePortDefinitionOwnedUsagesNotComposite-_ownedComment.0" annotatedElement="Systems-Ports-PortDefinition-validatePortDefinitionOwnedUsagesNotComposite">
            <body>&lt;p>The &lt;code>ownedUsages&lt;/code> of a &lt;code>PortDefinition&lt;/code> that are not &lt;code>PortUsages&lt;/code> must not be composite.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortDefinition-validatePortDefinitionOwnedUsagesNotComposite-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedUsage->
    reject(oclIsKindOf(PortUsage))->
    forAll(not isComposite)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Ports-PortDefinition-validatePortDefinitionConjugatedPortDefinition" name="validatePortDefinitionConjugatedPortDefinition" visibility="public" constrainedElement="Systems-Ports-PortDefinition">
          <ownedComment xmi:id="Systems-Ports-PortDefinition-validatePortDefinitionConjugatedPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-PortDefinition-validatePortDefinitionConjugatedPortDefinition">
            <body>&lt;p>Unless it is a &lt;code>ConjugatedPortDefinition&lt;/code>, a &lt;code>PortDefinition&lt;/code> must have exactly one &lt;code>ownedMember&lt;/code> that is a &lt;code>ConjugatedPortDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortDefinition-validatePortDefinitionConjugatedPortDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not oclIsKindOf(ConjugatedPortDefinition) implies
    ownedMember->
        selectByKind(ConjugatedPortDefinition)->
        size() = 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Ports-PortDefinition-checkPortDefinitionSpecialization" name="checkPortDefinitionSpecialization" visibility="public" constrainedElement="Systems-Ports-PortDefinition">
          <ownedComment xmi:id="Systems-Ports-PortDefinition-checkPortDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Ports-PortDefinition-checkPortDefinitionSpecialization">
            <body>&lt;p>A &lt;code>PortDefinition&lt;/code> must directly or indirectly specialize the &lt;code>PortDefinition&lt;/code> &lt;em>&lt;code>Ports::Port&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-PortDefinition-checkPortDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializeFromLibrary('Ports::Port')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Ports-PortDefinition-_generalization.0" general="Systems-Occurrences-OccurrenceDefinition"/>
        <generalization xmi:id="Systems-Ports-PortDefinition-_generalization.1" general="Kernel-Structures-Structure"/>
        <ownedAttribute xmi:id="Systems-Ports-PortDefinition-conjugatedPortDefinition" name="conjugatedPortDefinition" visibility="public" type="Systems-Ports-ConjugatedPortDefinition" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Systems-Ports-_packagedElement.3">
          <ownedComment xmi:id="Systems-Ports-PortDefinition-conjugatedPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-PortDefinition-conjugatedPortDefinition">
            <body>&lt;p>The &lt;codeConjugatedPortDefinition&lt;/code> that is conjugate to this &lt;code>PortDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-PortDefinition-conjugatedPortDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-PortDefinition-conjugatedPortDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Ports-_packagedElement.3" name="" visibility="private" memberEnd="Systems-Ports-PortDefinition-conjugatedPortDefinition Systems-Ports-ConjugatedPortDefinition-originalPortDefinition"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Ports-_packagedElement.4" name="" visibility="private" memberEnd="Systems-Ports-PortConjugation-originalPortDefinition Systems-Ports-_packagedElement.4-portConjugation">
        <ownedEnd xmi:id="Systems-Ports-_packagedElement.4-portConjugation" name="portConjugation" visibility="public" type="Systems-Ports-PortConjugation" subsettedProperty="Core-Types-_packagedElement.18-conjugation" association="Systems-Ports-_packagedElement.4">
          <ownedComment xmi:id="Systems-Ports-_packagedElement.4-portConjugation-_ownedComment.0" annotatedElement="Systems-Ports-_packagedElement.4-portConjugation">
            <body>&lt;p>The PortConjugation that relates a certain PortDefinition to its ConjugatedPortDefinition (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-_packagedElement.4-portConjugation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-_packagedElement.4-portConjugation-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Ports-ConjugatedPortDefinition" name="ConjugatedPortDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Ports-ConjugatedPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortDefinition">
          <body>&lt;p>A &lt;code>ConjugatedPortDefinition&lt;/code> is a &lt;code>PortDefinition&lt;/code> that is a &lt;code>PortDefinition&lt;/code> of its original &lt;code>PortDefinition&lt;/code>. That is, a &lt;code>ConjugatedPortDefinition&lt;/code> inherits all the &lt;code>features&lt;/code> of the original &lt;code>PortDefinition&lt;/code>, but input &lt;code>flows&lt;/code> of the original &lt;code>PortDefinition&lt;/code> become outputs on the &lt;code>ConjugatedPortDefinition&lt;/code> and output &lt;code>flows&lt;/code> of the original &lt;code>PortDefinition&lt;/code> become inputs on the &lt;code>ConjugatedPortDefinition&lt;/code>. Every &lt;code>PortDefinition&lt;/code> (that is not itself a &lt;code>&lt;code>ConjugatedPortDefinition&lt;/code>&lt;/code>) has exactly one corresponding &lt;code>ConjugatedPortDefinition&lt;/code>, whose effective name is the name of the &lt;code>originalPortDefinition&lt;/code>, with the character &lt;code>~&lt;/code> prepended.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionOriginalPortDefinition" name="validateConjugatedPortDefinitionOriginalPortDefinition" visibility="public" constrainedElement="Systems-Ports-ConjugatedPortDefinition">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionOriginalPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionOriginalPortDefinition">
            <body>&lt;p>The &lt;code>originalPortDefinition&lt;/code> of the &lt;code>ownedPortConjugator&lt;/code> of a &lt;code>ConjugatedPortDefinition&lt;/code> must be the &lt;code>originalPortDefinition&lt;/code> of the &lt;code>ConjugatedPortDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionOriginalPortDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedPortConjugator.originalPortDefinition = originalPortDefinition</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionConjugatedPortDefinitionIsEmpty" name="validateConjugatedPortDefinitionConjugatedPortDefinitionIsEmpty" visibility="public" constrainedElement="Systems-Ports-ConjugatedPortDefinition">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionConjugatedPortDefinitionIsEmpty-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionConjugatedPortDefinitionIsEmpty">
            <body>&lt;p>A &lt;code>ConjugatedPortDefinition&lt;/code> must not itself have a &lt;code>conjugatedPortDefinition&lt;/code>.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-ConjugatedPortDefinition-validateConjugatedPortDefinitionConjugatedPortDefinitionIsEmpty-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>conjugatedPortDefinition = null</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Ports-ConjugatedPortDefinition-_generalization.0" general="Systems-Ports-PortDefinition"/>
        <ownedAttribute xmi:id="Systems-Ports-ConjugatedPortDefinition-originalPortDefinition" name="originalPortDefinition" visibility="public" type="Systems-Ports-PortDefinition" isDerived="true" redefinedProperty="Root-Elements-Element-owningNamespace" association="Systems-Ports-_packagedElement.3">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortDefinition-originalPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortDefinition-originalPortDefinition">
            <body>&lt;p>The original &lt;code>PortDefinition&lt;/code> for this &lt;code>ConjugatedPortDefinition&lt;/code>, which is the &lt;code>owningNamespace&lt;/code> of the &lt;code>ConjugatedPortDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-ConjugatedPortDefinition-originalPortDefinition-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-ConjugatedPortDefinition-originalPortDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Ports-ConjugatedPortDefinition-ownedPortConjugator" name="ownedPortConjugator" visibility="public" type="Systems-Ports-PortConjugation" isDerived="true" redefinedProperty="Core-Types-Type-ownedConjugator" association="Systems-Ports-_packagedElement.7">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortDefinition-ownedPortConjugator-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortDefinition-ownedPortConjugator">
            <body>&lt;p>The &lt;code>PortConjugation&lt;/code> that is the &lt;code>ownedConjugator&lt;/code> of this &lt;code>ConjugatedPortDefinition&lt;/code>, linking it to its &lt;code>originalPortDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-ConjugatedPortDefinition-ownedPortConjugator-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-ConjugatedPortDefinition-ownedPortConjugator-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Ports-ConjugatedPortDefinition-effectiveName" name="effectiveName" visibility="public" bodyCondition="Systems-Ports-ConjugatedPortDefinition-effectiveName-unnamed1" redefinedOperation="Root-Elements-Element-effectiveName">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortDefinition-effectiveName-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortDefinition-effectiveName">
            <body>&lt;p>If the &lt;code>name&lt;/code> of the &lt;code>originalPortDefinition&lt;/code> is non-empty, then return that with the character &lt;code>~&lt;/code> prepended.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Ports-ConjugatedPortDefinition-effectiveName-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-ConjugatedPortDefinition-effectiveName-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let originalName : String = originalPortDefinition.name in
if originalName = null then null
else '~' + originalName
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Ports-ConjugatedPortDefinition-effectiveName-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-ConjugatedPortDefinition-effectiveName-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-ConjugatedPortDefinition-effectiveName-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Ports-PortConjugation" name="PortConjugation" visibility="public">
        <ownedComment xmi:id="Systems-Ports-PortConjugation-_ownedComment.0" annotatedElement="Systems-Ports-PortConjugation">
          <body>&lt;p>A &lt;code>PortConjugation&lt;/code> is a &lt;code>Conjugation&lt;/code> &lt;code>Relationship&lt;/code> between a &lt;code>PortDefinition&lt;/code> and its corresponding &lt;code>ConjugatedPortDefinition&lt;/code>. As a result of this &lt;code>Relationship&lt;/code>, the &lt;code>ConjugatedPortDefinition&lt;/code> inherits all the &lt;code>features&lt;/code> of the original &lt;code>PortDefinition&lt;/code>, but input &lt;code>flows&lt;/code> of the original &lt;code>PortDefinition&lt;/code> become outputs on the &lt;code>ConjugatedPortDefinition&lt;/code> and output &lt;code>flows&lt;/code> of the original &lt;code>PortDefinition&lt;/code> become inputs on the &lt;code>ConjugatedPortDefinition&lt;/code>.&lt;/code>&lt;/p>
</body>
        </ownedComment>
        <generalization xmi:id="Systems-Ports-PortConjugation-_generalization.0" general="Core-Types-Conjugation"/>
        <ownedAttribute xmi:id="Systems-Ports-PortConjugation-originalPortDefinition" name="originalPortDefinition" visibility="public" type="Systems-Ports-PortDefinition" redefinedProperty="Core-Types-Conjugation-originalType" association="Systems-Ports-_packagedElement.4">
          <ownedComment xmi:id="Systems-Ports-PortConjugation-originalPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-PortConjugation-originalPortDefinition">
            <body>&lt;p>The &lt;code>PortDefinition&lt;/code> being conjugated.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-PortConjugation-originalPortDefinition-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-PortConjugation-originalPortDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Ports-PortConjugation-conjugatedPortDefinition" name="conjugatedPortDefinition" visibility="public" type="Systems-Ports-ConjugatedPortDefinition" isDerived="true" redefinedProperty="Core-Types-Conjugation-owningType" association="Systems-Ports-_packagedElement.7">
          <ownedComment xmi:id="Systems-Ports-PortConjugation-conjugatedPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-PortConjugation-conjugatedPortDefinition">
            <body>&lt;p>The &lt;code>ConjugatedPortDefinition&lt;/code> that is conjugate to the &lt;code>originalPortDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-PortConjugation-conjugatedPortDefinition-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-PortConjugation-conjugatedPortDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Ports-_packagedElement.7" name="" visibility="private" memberEnd="Systems-Ports-PortConjugation-conjugatedPortDefinition Systems-Ports-ConjugatedPortDefinition-ownedPortConjugator"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Ports-ConjugatedPortTyping" name="ConjugatedPortTyping" visibility="public">
        <ownedComment xmi:id="Systems-Ports-ConjugatedPortTyping-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortTyping">
          <body>&lt;p>A &lt;code>ConjugatedPortTyping&lt;/code> is a &lt;code>FeatureTyping&lt;/code> whose &lt;code>type&lt;/code> is a &lt;code>ConjugatedPortDefinition&lt;/code>. (This relationship is intended to be an abstract-syntax marker for a special surface notation for conjugated typing of ports.)&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Ports-ConjugatedPortTyping-deriveConjugatedPortTypingPortDefinition" name="deriveConjugatedPortTypingPortDefinition" visibility="public" constrainedElement="Systems-Ports-ConjugatedPortTyping">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortTyping-deriveConjugatedPortTypingPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortTyping-deriveConjugatedPortTypingPortDefinition">
            <body>&lt;p>The &lt;code>portDefinition&lt;/code> of a &lt;code>ConjugatedPortTyping&lt;/code> is the &lt;code>originalPortDefinition&lt;/code> of the &lt;code>conjugatedPortDefinition&lt;/code> of the &lt;code>ConjugatedPortTyping&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Ports-ConjugatedPortTyping-deriveConjugatedPortTypingPortDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>portDefinition = conjugatedPortDefinition.originalPortDefinition</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Ports-ConjugatedPortTyping-_generalization.0" general="Core-Features-FeatureTyping"/>
        <ownedAttribute xmi:id="Systems-Ports-ConjugatedPortTyping-portDefinition" name="portDefinition" visibility="public" type="Systems-Ports-PortDefinition" isDerived="true" association="Systems-Ports-_packagedElement.10">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortTyping-portDefinition-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortTyping-portDefinition">
            <body>&lt;p>The &lt;code>originalPortDefinition&lt;/code> of the &lt;code>conjugatedPortDefinition&lt;/code> of this &lt;code>ConjugatedPortTyping&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-ConjugatedPortTyping-portDefinition-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-ConjugatedPortTyping-portDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Ports-ConjugatedPortTyping-conjugatedPortDefinition" name="conjugatedPortDefinition" visibility="public" type="Systems-Ports-ConjugatedPortDefinition" redefinedProperty="Core-Features-FeatureTyping-type" association="Systems-Ports-_packagedElement.9">
          <ownedComment xmi:id="Systems-Ports-ConjugatedPortTyping-conjugatedPortDefinition-_ownedComment.0" annotatedElement="Systems-Ports-ConjugatedPortTyping-conjugatedPortDefinition">
            <body>&lt;p>The &lt;code>type&lt;/code> of this &lt;code>ConjugatedPortTyping&lt;/code> considered as a &lt;code>FeatureTyping&lt;/code>, which must be a &lt;code>ConjugatedPortDefinition&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-ConjugatedPortTyping-conjugatedPortDefinition-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-ConjugatedPortTyping-conjugatedPortDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Ports-_packagedElement.9" name="" visibility="private" memberEnd="Systems-Ports-ConjugatedPortTyping-conjugatedPortDefinition Systems-Ports-_packagedElement.9-typingByConjugatedPort">
        <ownedEnd xmi:id="Systems-Ports-_packagedElement.9-typingByConjugatedPort" name="typingByConjugatedPort" visibility="public" type="Systems-Ports-ConjugatedPortTyping" subsettedProperty="Core-Features-_packagedElement.1-typingByType" association="Systems-Ports-_packagedElement.9">
          <ownedComment xmi:id="Systems-Ports-_packagedElement.9-typingByConjugatedPort-_ownedComment.0" annotatedElement="Systems-Ports-_packagedElement.9-typingByConjugatedPort">
            <body>&lt;p>The ConjugatedPortTypings whose &lt;code>conjugatedPortDefinition&lt;/code> a certain ConjugatedPortDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-_packagedElement.9-typingByConjugatedPort-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-_packagedElement.9-typingByConjugatedPort-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Ports-_packagedElement.10" name="" visibility="private" memberEnd="Systems-Ports-ConjugatedPortTyping-portDefinition Systems-Ports-_packagedElement.10-conjugatedPortTyping">
        <ownedEnd xmi:id="Systems-Ports-_packagedElement.10-conjugatedPortTyping" name="conjugatedPortTyping" visibility="public" type="Systems-Ports-ConjugatedPortTyping" isDerived="true" subsettedProperty="Root-Elements-_packagedElement.2-targetRelationship" association="Systems-Ports-_packagedElement.10">
          <ownedComment xmi:id="Systems-Ports-_packagedElement.10-conjugatedPortTyping-_ownedComment.0" annotatedElement="Systems-Ports-_packagedElement.10-conjugatedPortTyping">
            <body>&lt;p>The ConjugatedPortTypings whose &lt;code>portDefinition&lt;/code> is a certain PortDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Ports-_packagedElement.10-conjugatedPortTyping-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Ports-_packagedElement.10-conjugatedPortTyping-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Attributes" name="Attributes" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Attributes-AttributeDefinition" name="AttributeDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Attributes-AttributeDefinition-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeDefinition">
          <body>&lt;p>An &lt;code>AttributeDefinition&lt;/code> is a &lt;code>Definition&lt;/code> and a &lt;code>DataType&lt;/code> of information about a quality or characteristic of a system or part of a system that has no independent identity other than its value. All &lt;code>features&lt;/code> of an &lt;code>AttributeDefinition&lt;/code> must be referential (non-composite).&lt;/p>

&lt;p>As a &lt;code>DataType&lt;/code>, an &lt;code>AttributeDefinition&lt;/code> must specialize, directly or indirectly, the base &lt;code>DataType&lt;/code> &lt;code>&lt;em>Base::DataValue&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Attributes-AttributeDefinition-validateAttributeDefinitionFeatures" name="validateAttributeDefinitionFeatures" visibility="public" constrainedElement="Systems-Attributes-AttributeDefinition">
          <ownedComment xmi:id="Systems-Attributes-AttributeDefinition-validateAttributeDefinitionFeatures-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeDefinition-validateAttributeDefinitionFeatures">
            <body>&lt;p>All &lt;code>features&lt;/code> of an &lt;code>AttributeDefinition&lt;/code> must be non-composite.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Attributes-AttributeDefinition-validateAttributeDefinitionFeatures-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>feature->forAll(not isComposite)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Attributes-AttributeDefinition-_generalization.0" general="Kernel-DataTypes-DataType"/>
        <generalization xmi:id="Systems-Attributes-AttributeDefinition-_generalization.1" general="Systems-DefinitionAndUsage-Definition"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Attributes-_packagedElement.1" name="" visibility="private" memberEnd="Systems-Attributes-AttributeUsage-attributeDefinition Systems-Attributes-_packagedElement.1-definedAttribute">
        <ownedEnd xmi:id="Systems-Attributes-_packagedElement.1-definedAttribute" name="definedAttribute" visibility="public" type="Systems-Attributes-AttributeUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.38-definedUsage" association="Systems-Attributes-_packagedElement.1">
          <ownedComment xmi:id="Systems-Attributes-_packagedElement.1-definedAttribute-_ownedComment.0" annotatedElement="Systems-Attributes-_packagedElement.1-definedAttribute">
            <body>&lt;p>The AttributeUsages that are typed by a certain DataType.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Attributes-_packagedElement.1-definedAttribute-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Attributes-_packagedElement.1-definedAttribute-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Attributes-AttributeUsage" name="AttributeUsage" visibility="public">
        <ownedComment xmi:id="Systems-Attributes-AttributeUsage-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeUsage">
          <body>&lt;p>An &lt;code>AttributeUsage&lt;code> is a &lt;code>Usage&lt;/code> whose type is a &lt;code>DataType&lt;/code>. Nominally, if the type is an &lt;code>AttributeDefinition&lt;/code>, an &lt;code>AttributeUsage&lt;code> is a usage of a &lt;code>AttributeDefinition&lt;/code> to represent the value of some system quality or characteristic. However, other kinds of kernel &lt;code>DataTypes&lt;/code> are also allowed, to permit use of &lt;code>DataTypes&lt;/code> from the Kernel Model Libraries. An &lt;code>AttributeUsage&lt;code> itself as well as all its nested &lt;code>features&lt;/code> must be referential (non-composite).&lt;/p>

&lt;p>An &lt;code>AttributeUsage&lt;code> must specialize, directly or indirectly, the base &lt;code>Feature&lt;code> &lt;code>&lt;em>Base::dataValues&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Attributes-AttributeUsage-validateAttributeUsageIsReference" name="validateAttributeUsageIsReference" visibility="public" constrainedElement="Systems-Attributes-AttributeUsage">
          <ownedComment xmi:id="Systems-Attributes-AttributeUsage-validateAttributeUsageIsReference-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeUsage-validateAttributeUsageIsReference">
            <body>&lt;p>An &lt;code>AttributeUsage&lt;/code> is always referential.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Attributes-AttributeUsage-validateAttributeUsageIsReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isReference</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Attributes-AttributeUsage-validateAttributeUsageFeatures" name="validateAttributeUsageFeatures" visibility="public" constrainedElement="Systems-Attributes-AttributeUsage">
          <ownedComment xmi:id="Systems-Attributes-AttributeUsage-validateAttributeUsageFeatures-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeUsage-validateAttributeUsageFeatures">
            <body>&lt;p>All &lt;code>features&lt;/code> of an &lt;code>AttributeUsage&lt;/code> must be non-composite.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Attributes-AttributeUsage-validateAttributeUsageFeatures-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>feature->forAll(not isComposite)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Attributes-AttributeUsage-checkAttributeUsageSpecialization" name="checkAttributeUsageSpecialization" visibility="public" constrainedElement="Systems-Attributes-AttributeUsage">
          <ownedComment xmi:id="Systems-Attributes-AttributeUsage-checkAttributeUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeUsage-checkAttributeUsageSpecialization">
            <body>&lt;p>An &lt;code>AttributeUsage&lt;/code> must directly or indirectly specialize &lt;code>&lt;em>Base::dataValues&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Attributes-AttributeUsage-checkAttributeUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Base::dataValues&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Attributes-AttributeUsage-_generalization.0" general="Systems-DefinitionAndUsage-Usage"/>
        <ownedAttribute xmi:id="Systems-Attributes-AttributeUsage-attributeDefinition" name="attributeDefinition" visibility="public" type="Kernel-DataTypes-DataType" isOrdered="true" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-Usage-definition" association="Systems-Attributes-_packagedElement.1">
          <ownedComment xmi:id="Systems-Attributes-AttributeUsage-attributeDefinition-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeUsage-attributeDefinition">
            <body>&lt;p>The &lt;code>DataTypes&lt;/code> that are the types of this &lt;code>AttributeUsage&lt;/code>. Nominally, these are &lt;code>AttributeDefinitions&lt;/code>, but other kinds of kernel &lt;code>DataTypes&lt;/code> are also allowed, to permit use of &lt;code>DataTypes,/code> from the Kernel Model Libraries.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Attributes-AttributeUsage-attributeDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Attributes-AttributeUsage-attributeDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Attributes-AttributeUsage-isReference" name="isReference" visibility="public" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-Usage-isReference">
          <ownedComment xmi:id="Systems-Attributes-AttributeUsage-isReference-_ownedComment.0" annotatedElement="Systems-Attributes-AttributeUsage-isReference">
            <body>&lt;p>Always true for an &lt;code>AttributeUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-Attributes-AttributeUsage-isReference-_defaultValue" name="" visibility="public" value="true"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Actions" name="Actions" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.0" name="" visibility="private" memberEnd="Systems-Actions-PerformActionUsage-performedAction Systems-Actions-_packagedElement.0-performingAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.0-performingAction" name="performingAction" visibility="public" type="Systems-Actions-PerformActionUsage" isDerived="true" subsettedProperty="Systems-Occurrences-_packagedElement.4-referencingOccurrence" association="Systems-Actions-_packagedElement.0">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.0-performingAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.0-performingAction">
            <body>&lt;p>The PerformActionUsages that have a certain ActionUsage as their &lt;code>performedAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.0-performingAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.0-performingAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-AcceptActionUsage" name="AcceptActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage">
          <body>&lt;p>An &lt;code>AcceptActionUsage&lt;/code> is an &lt;code>ActionUsage&lt;/code> that specifies the acceptance of an &lt;em>&lt;code>incomingTransfer&lt;/code>&lt;/em> from the &lt;code>&lt;em>Occurrence&lt;/em>&lt;/code> given by the result of its &lt;code>receiverArgument&lt;/code> Expression. (If no &lt;code>receiverArgument&lt;/code> is provided, the default is the &lt;em>&lt;code>this&lt;/code>&lt;/em> context of the AcceptActionUsage.) The payload of the accepted &lt;em>&lt;code>Transfer&lt;/em>&lt;/code> is output on its &lt;code>payloadParameter&lt;/code>. Which &lt;em>&lt;code>Transfers&lt;/em>&lt;/code> may be accepted is determined by conformance to the typing and (potentially) binding of the &lt;code>payloadParameter&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-validateAcceptActionUsageParameters" name="validateAcceptActionUsageParameters" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-validateAcceptActionUsageParameters-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-validateAcceptActionUsageParameters">
            <body>&lt;p>An &lt;code>AcceptUsageAction&lt;/code> must have at least two input &lt;code>parameters&lt;/code>, corresponding to its &lt;em>&lt;code>payload&lt;/code>&lt;/em> and &lt;em>&lt;code>receiver&lt;/code>, respectively (even if they have no &lt;code>FeatureValue&lt;/code>). (Note that the &lt;code>payloadParameter&lt;/code> is an input as well as an output.)&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-validateAcceptActionUsageParameters-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>inputParameters()->size() >= 2</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsageReceiverArgument" name="deriveAcceptActionUsageReceiverArgument" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsageReceiverArgument-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsageReceiverArgument">
            <body>&lt;p>The &lt;code>receiverArgument&lt;/code> of an &lt;code>AcceptUsageAction&lt;/code> is its second argument &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsageReceiverArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>receiverArgument = argument(2)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadArgument" name="deriveAcceptActionUsagePayloadArgument" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadArgument-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadArgument">
            <body>&lt;p>The &lt;code>payloadArgument&lt;/code> of an &lt;code>AcceptUsageAction&lt;/code> is its first argument &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>payloadArgument = argument(1)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadParameter" name="deriveAcceptActionUsagePayloadParameter" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadParameter-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadParameter">
            <body>&lt;p>The &lt;code>payloadParameter&lt;/code> of an &lt;code>AcceptActionUsage&lt;code> is its first &lt;code>parameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-deriveAcceptActionUsagePayloadParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>payloadParameter = 
 if parameter->isEmpty() then null
 else parameter->first() endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSpecialization" name="checkAcceptActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSpecialization">
            <body>&lt;p>An &lt;code>AcceptActionUsage&lt;/code> that is not the &lt;code>triggerAction&lt;/code> of a &lt;code>TransitionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::acceptActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not isTriggerAction() implies
    specializesFromLibrary('Actions::acceptActions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSubactionSpecialization" name="checkAcceptActionUsageSubactionSpecialization" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSubactionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSubactionSpecialization">
            <body>&lt;p>A composite &lt;code>AcceptActionUsage&lt;/code> that is a subaction usage, but is &lt;em>not&lt;/em> the &lt;code>triggerAction&lt;/code> of a &lt;code>TransitionUsage&lt;/code>, must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::acceptSubactions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageSubactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubactionUsage() and not isTriggerAction() implies
    specializesFromLibrary('Actions::Action::acceptSubactions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageTriggerActionSpecialization" name="checkAcceptActionUsageTriggerActionSpecialization" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageTriggerActionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageTriggerActionSpecialization">
            <body>&lt;p>An &lt;code>AcceptActionUsage&lt;/code> that is the &lt;code>triggerAction&lt;/code> of &lt;code>TransitionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::TransitionAction::accepter&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageTriggerActionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isTriggerAction() implies
    specializesFromLibrary('Actions::TransitionAction::accepter')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageReceiverBindingConnector" name="checkAcceptActionUsageReceiverBindingConnector" visibility="public" constrainedElement="Systems-Actions-AcceptActionUsage">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageReceiverBindingConnector-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageReceiverBindingConnector">
            <body>&lt;p>If the &lt;code>payloadArgument&lt;/code> of an &lt;code>AcceptActionUsage&lt;/code> is a &lt;code>TriggerInvocationExpression&lt;/code>, then the &lt;code>AcceptActionusage&lt;/code> must have an &lt;code>ownedFeature&lt;/code> that is a &lt;code>BindingConnector&lt;/code> between its &lt;code>&lt;em>receiver&lt;/em>&lt;/code> &lt;code>parameter&lt;/code> and the &lt;code>&lt;em>receiver&lt;/em>&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>TriggerInvocationExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-checkAcceptActionUsageReceiverBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>payloadArgument &lt;> null and
payloadArgument.oclIsKindOf(TriggerInvocationExpression) implies
    let invocation : Expression =
        payloadArgument.oclAsType(Expression) in
    parameter->size() >= 2 and
    invocation.parameter->size() >= 2 and        
    ownedFeature->selectByKind(BindingConnector)->exists(b |
        b.relatedFeatures->includes(parameter->at(2)) and
        b.relatedFeatures->includes(invocation.parameter->at(2)))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-AcceptActionUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-AcceptActionUsage-receiverArgument" name="receiverArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.15">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-receiverArgument-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-receiverArgument">
            <body>&lt;p>An &lt;code>Expression&lt;code> whose &lt;code>result&lt;/code> is bound to the &lt;em>&lt;code>receiver&lt;/code>&lt;/em> input &lt;code>parameter&lt;/code> of this &lt;code>AcceptActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-AcceptActionUsage-receiverArgument-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-AcceptActionUsage-receiverArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-AcceptActionUsage-payloadParameter" name="payloadParameter" visibility="public" type="Systems-DefinitionAndUsage-ReferenceUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedReference Kernel-Behaviors-Step-parameter" association="Systems-Actions-_packagedElement.32">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-payloadParameter-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-payloadParameter">
            <body>&lt;p>The &lt;code>nestedReference&lt;/code> of this &lt;code>AcceptActionUsage&lt;/code> that redefines the &lt;code>payload&lt;/code> output &lt;code>parameter&lt;/code> of the base &lt;code>AcceptActionUsage&lt;/code> &lt;em>&lt;code>AcceptAction&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-AcceptActionUsage-payloadParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-AcceptActionUsage-payloadParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-AcceptActionUsage-payloadArgument" name="payloadArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.34">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-payloadArgument-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-payloadArgument">
            <body>&lt;p>An &lt;code>Expression&lt;code> whose &lt;code>result&lt;/code> is bound to the &lt;code>&lt;em>payload&lt;/em>&lt;/code> &lt;code>parameter &lt;/code> of this &lt;code>AcceptActionUsage&lt;/code>. If provided, the &lt;code>AcceptActionUsage&lt;/code> will only accept a &lt;code>&lt;em>Transfer&lt;/em>&lt;/code> with exactly this &lt;code>&lt;em>payload&lt;/em>&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-AcceptActionUsage-payloadArgument-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-AcceptActionUsage-payloadArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Actions-AcceptActionUsage-isTriggerAction" name="isTriggerAction" visibility="public" bodyCondition="Systems-Actions-AcceptActionUsage-isTriggerAction-unnamed1">
          <ownedComment xmi:id="Systems-Actions-AcceptActionUsage-isTriggerAction-_ownedComment.0" annotatedElement="Systems-Actions-AcceptActionUsage-isTriggerAction">
            <body>&lt;p>Check if this &lt;code>AcceptActionUsage&lt;/code> is the &lt;code>triggerAction&lt;/code> of a &lt;code>TransitionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Actions-AcceptActionUsage-isTriggerAction-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AcceptActionUsage-isTriggerAction-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>owningType &lt;> null and 
owningType.oclIsKindOf(TransitionUsage) and
owningType.oclAsType(TransitionUsage).triggerAction->includes(self)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Actions-AcceptActionUsage-isTriggerAction-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Actions-SendActionUsage-receiverArgument Systems-Actions-_packagedElement.2-sendActionUsage">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.2-sendActionUsage" name="sendActionUsage" visibility="public" type="Systems-Actions-SendActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.2">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.2-sendActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.2-sendActionUsage">
            <body>&lt;p>The &lt;code>SendActionUsage&lt;/code> that has a certain &lt;code>Expression&lt;code> as its &lt;code>receiverArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.2-sendActionUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.2-sendActionUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-SendActionUsage" name="SendActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-SendActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage">
          <body>&lt;p>A &lt;code>SendActionUsage&lt;/code> is an &lt;code>ActionUsage&lt;/code> that specifies the sending of a payload given by the result of its &lt;code>payloadArgument&lt;/code> &lt;code>Expression&lt;/code> via a &lt;em>&lt;code>MessageTransfer&lt;/code>&lt;/em> whose &lt;em>&lt;code>source&lt;/code>&lt;/em> is given by the result of the &lt;code>senderArgument&lt;/code> &lt;code>Expression&lt;/code> and whose &lt;code>target&lt;/code> is given by the result of the &lt;code>receiverArgument&lt;/code> &lt;code>Expression&lt;/code>. If no &lt;code>senderArgument&lt;/code> is provided, the default is the &lt;em>&lt;code>this&lt;/code>&lt;/em> context for the action. If no &lt;code>receiverArgument&lt;/code> is given, then the receiver is to be determined by, e.g., outgoing &lt;em>&lt;code>Connections&lt;/code>&lt;/em> from the sender.&lt;/p> 
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsageSenderArgument" name="deriveSendActionUsageSenderArgument" visibility="public" constrainedElement="Systems-Actions-SendActionUsage">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsageSenderArgument-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-deriveSendActionUsageSenderArgument">
            <body>&lt;p>The &lt;code>senderArgument&lt;/code> of a &lt;code>SendActionUsage&lt;/code> is its second argument &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsageSenderArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>senderArgument = argument(2)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsagePayloadArgument" name="deriveSendActionUsagePayloadArgument" visibility="public" constrainedElement="Systems-Actions-SendActionUsage">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsagePayloadArgument-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-deriveSendActionUsagePayloadArgument">
            <body>&lt;p>The &lt;code>payloadArgument&lt;/code> of a &lt;code>SendActionUsage&lt;/code> is its first argument &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsagePayloadArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>payloadArgument = argument(1)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-SendActionUsage-validateSendActionParameters" name="validateSendActionParameters" visibility="public" constrainedElement="Systems-Actions-SendActionUsage">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-validateSendActionParameters-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-validateSendActionParameters">
            <body>&lt;p>A &lt;code>SendActionUsage&lt;/code> must have at least three owned input &lt;code>parameters&lt;/code>, corresponding to its &lt;em>&lt;code>payload&lt;code>&lt;/em>, &lt;em>&lt;code>sender&lt;code>&lt;/em> and &lt;em>&lt;code>receiver&lt;code>&lt;/em>, respectively (whether or not they have &lt;code>FeatureValues&lt;/code>).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-SendActionUsage-validateSendActionParameters-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>inputParameters()->size() >= 3</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsageReceiverArgument" name="deriveSendActionUsageReceiverArgument" visibility="public" constrainedElement="Systems-Actions-SendActionUsage">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsageReceiverArgument-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-deriveSendActionUsageReceiverArgument">
            <body>&lt;p>The &lt;code>receiverArgument&lt;/code> of a &lt;code>SendActionUsage&lt;/code> is its third argument &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-SendActionUsage-deriveSendActionUsageReceiverArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>receiverArgument = argument(3)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-SendActionUsage-checkSendActionUsageSubactionSpecialization" name="checkSendActionUsageSubactionSpecialization" visibility="public" constrainedElement="Systems-Actions-SendActionUsage">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-checkSendActionUsageSubactionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-checkSendActionUsageSubactionSpecialization">
            <body>&lt;p>A composite &lt;code>SendActionUsage&lt;/code> that is a subaction must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::sendSubactions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-SendActionUsage-checkSendActionUsageSubactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubactionUsage() implies
    specializesFromLibrary('Actions::Action::acceptSubactions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-SendActionUsage-checkSendActionUsageSpecialization" name="checkSendActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-SendActionUsage">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-checkSendActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-checkSendActionUsageSpecialization">
            <body>&lt;p>A &lt;code>SendActionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::sendActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-SendActionUsage-checkSendActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Actions::sendActions&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-SendActionUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-SendActionUsage-receiverArgument" name="receiverArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.2">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-receiverArgument-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-receiverArgument">
            <body>&lt;p>An &lt;code>Expression&lt;/code> whose result is bound to the &lt;em>&lt;code>receiver&lt;/code>&lt;/em> input parameter of this &lt;code>SendActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-SendActionUsage-receiverArgument-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-SendActionUsage-receiverArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-SendActionUsage-payloadArgument" name="payloadArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.14">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-payloadArgument-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-payloadArgument">
            <body>&lt;p>An &lt;code>Expression&lt;/code> whose result is bound to the &lt;code>&lt;em>payload&lt;/em>&lt;/code> input parameter of this &lt;code>SendActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-SendActionUsage-payloadArgument-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-SendActionUsage-payloadArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-SendActionUsage-senderArgument" name="senderArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.36">
          <ownedComment xmi:id="Systems-Actions-SendActionUsage-senderArgument-_ownedComment.0" annotatedElement="Systems-Actions-SendActionUsage-senderArgument">
            <body>&lt;p>An &lt;code>Expression&lt;/code> whose result is bound to the &lt;em>&lt;code>sender&lt;/code>&lt;/em> input parameter of this &lt;code>SendActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-SendActionUsage-senderArgument-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-SendActionUsage-senderArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-PerformActionUsage" name="PerformActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-PerformActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-PerformActionUsage">
          <body>&lt;p>A &lt;code>PerformActionUsage&lt;/code> is an &lt;code>ActionUsage&lt;/code> that represents the performance of an &lt;code>ActionUsage&lt;/code>. Unless it is the &lt;code>PerformActionUsage&lt;/code> itself, the &lt;code>ActionUsage&lt;/code> to be performed is related to the &lt;code>PerformActionUsage&lt;/code> by a &lt;code>ReferenceSubsetting&lt;/code> relationship. A &lt;code>PerformActionUsage&lt;/code> is also an &lt;code>EventOccurrenceUsage&lt;/code>, with its &lt;code>performedAction&lt;/code> as the &lt;code>eventOccurrence&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-PerformActionUsage-validatePerformActionUsageReference" name="validatePerformActionUsageReference" visibility="public" constrainedElement="Systems-Actions-PerformActionUsage">
          <ownedComment xmi:id="Systems-Actions-PerformActionUsage-validatePerformActionUsageReference-_ownedComment.0" annotatedElement="Systems-Actions-PerformActionUsage-validatePerformActionUsageReference">
            <body>&lt;p>If a &lt;code>PerformActionUsage&lt;/code> has an &lt;code>ownedReferenceSubsetting&lt;/code>, then its &lt;code>referencedFeature&lt;/code> must be a &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-PerformActionUsage-validatePerformActionUsageReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedReferenceSubsetting &lt;> null implies
    ownedReferenceSubsetting.referencedFeature.oclIsKindOf(ActionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-PerformActionUsage-checkPerformActionUsageSpecialization" name="checkPerformActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-PerformActionUsage">
          <ownedComment xmi:id="Systems-Actions-PerformActionUsage-checkPerformActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-PerformActionUsage-checkPerformActionUsageSpecialization">
            <body>&lt;p>If a &lt;code>PerformActionUsage&lt;/code> has an &lt;code>owningType&lt;/code> that is a &lt;code>PartDefinition&lt;/code> or &lt;code>PartUsage&lt;/code>, then it must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;code>&lt;em>Parts::Part::performedActions&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-PerformActionUsage-checkPerformActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(PartDefinition) or
 owningType.oclIsKindOf(PartUsage)) implies
    specializesFromLibrary('Parts::Part::performedActions')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-PerformActionUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <generalization xmi:id="Systems-Actions-PerformActionUsage-_generalization.1" general="Systems-Occurrences-EventOccurrenceUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-PerformActionUsage-performedAction" name="performedAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" redefinedProperty="Systems-Occurrences-EventOccurrenceUsage-eventOccurrence" association="Systems-Actions-_packagedElement.0">
          <ownedComment xmi:id="Systems-Actions-PerformActionUsage-performedAction-_ownedComment.0" annotatedElement="Systems-Actions-PerformActionUsage-performedAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> to be performed by this &lt;code>PerformedActionUsage&lt;/code>. It is the &lt;code>eventOccurrence&lt;/code> of the &lt;code>PerformActionUsage&lt;/code> considered as an &lt;code>EventOccurrenceUsage&lt;/code>, which must be an &lt;code>ActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-PerformActionUsage-performedAction-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-PerformActionUsage-performedAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Actions-PerformActionUsage-namingFeature" name="namingFeature" visibility="public" bodyCondition="Systems-Actions-PerformActionUsage-namingFeature-unnamed1" redefinedOperation="Systems-DefinitionAndUsage-Usage-namingFeature">
          <ownedComment xmi:id="Systems-Actions-PerformActionUsage-namingFeature-_ownedComment.0" annotatedElement="Systems-Actions-PerformActionUsage-namingFeature">
            <body>&lt;p>The naming &lt;code>Feature&lt;/code> of a &lt;code>PerformActionUsage&lt;/code> is its &lt;code>performedAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Actions-PerformActionUsage-namingFeature-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-PerformActionUsage-namingFeature-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>exhibitedState</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Actions-PerformActionUsage-namingFeature-_ownedParameter.0" name="" visibility="public" type="Core-Features-Feature" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-PerformActionUsage-namingFeature-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-PerformActionUsage-namingFeature-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-ForkNode" name="ForkNode" visibility="public">
        <ownedComment xmi:id="Systems-Actions-ForkNode-_ownedComment.0" annotatedElement="Systems-Actions-ForkNode">
          <body>&lt;p>A &lt;code>ForkNode&lt;/code> is a &lt;code>ControlNode&lt;/code> that must be followed by successor &lt;code>Actions&lt;/code> as given by all its outgoing &lt;code>Successions&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-ForkNode-validateForkNodeIncomingSuccessions" name="validateForkNodeIncomingSuccessions" visibility="public" constrainedElement="Systems-Actions-ForkNode">
          <ownedComment xmi:id="Systems-Actions-ForkNode-validateForkNodeIncomingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-ForkNode-validateForkNodeIncomingSuccessions">
            <body>&lt;p>A &lt;code>ForkNode&lt;/code> may have at most one incoming &lt;code>Succession&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ForkNode-validateForkNodeIncomingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetConnector->selectByKind(Succession)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ForkNode-checkForkNodeSpecialization" name="checkForkNodeSpecialization" visibility="public" constrainedElement="Systems-Actions-ForkNode">
          <ownedComment xmi:id="Systems-Actions-ForkNode-checkForkNodeSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ForkNode-checkForkNodeSpecialization">
            <body>&lt;p>A &lt;code>ForkNode&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::forks&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ForkNode-checkForkNodeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Actions::Action::forks&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-ForkNode-_generalization.0" general="Systems-Actions-ControlNode"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-JoinNode" name="JoinNode" visibility="public">
        <ownedComment xmi:id="Systems-Actions-JoinNode-_ownedComment.0" annotatedElement="Systems-Actions-JoinNode">
          <body>&lt;p>A &lt;code>JoinNode&lt;/code> is a &lt;code>ControlNode&lt;/code> that waits for the completion of all the predecessor &lt;code>Actions&lt;/code> given by incoming &lt;code>Successions&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-JoinNode-validateJoinNodeOutgoingSuccessions" name="validateJoinNodeOutgoingSuccessions" visibility="public" constrainedElement="Systems-Actions-JoinNode">
          <ownedComment xmi:id="Systems-Actions-JoinNode-validateJoinNodeOutgoingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-JoinNode-validateJoinNodeOutgoingSuccessions">
            <body>&lt;p>A &lt;code>JoinNode&lt;/code> may have at most one outgoing &lt;code>Succession&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-JoinNode-validateJoinNodeOutgoingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceConnector->selectByKind(Succession)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-JoinNode-checkJoinNodeSpecialization" name="checkJoinNodeSpecialization" visibility="public" constrainedElement="Systems-Actions-JoinNode">
          <ownedComment xmi:id="Systems-Actions-JoinNode-checkJoinNodeSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-JoinNode-checkJoinNodeSpecialization">
            <body>&lt;p>A &lt;code>JoinNode&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::joins&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-JoinNode-checkJoinNodeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Actions::Action::join&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-JoinNode-_generalization.0" general="Systems-Actions-ControlNode"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-ControlNode" name="ControlNode" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Systems-Actions-ControlNode-_ownedComment.0" annotatedElement="Systems-Actions-ControlNode">
          <body>&lt;p>A &lt;code>ControlNode&lt;/code> is an &lt;code>ActionUsage&lt;/code> that does not have any inherent behavior but provides constraints on incoming and outgoing &lt;code>Successions&lt;/code> that are used to control other &lt;code>Actions&lt;/code>. A &lt;code>ControlNode&lt;/code> must be a composite owned &lt;code>usage&lt;/code> of an &lt;code>ActionDefinition&lt;/code> or &lt;code>ActionUsage&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-ControlNode-validateControlNodeOutgoingSuccessions" name="validateControlNodeOutgoingSuccessions" visibility="public" constrainedElement="Systems-Actions-ControlNode">
          <ownedComment xmi:id="Systems-Actions-ControlNode-validateControlNodeOutgoingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-ControlNode-validateControlNodeOutgoingSuccessions">
            <body>&lt;p>All outgoing &lt;code>Successions&lt;/code> from a &lt;code>ControlNode&lt;/code> must have a source &lt;code>multiplicity&lt;/code> of &lt;code>1..1&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ControlNode-validateControlNodeOutgoingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceConnector->selectByKind(Succession)->
    collect(connectorEnd->at(1).multiplicity)->
    forAll(sourceMult | 
        multiplicityHasBounds(sourceMult, 1, 1))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ControlNode-validateControlNodeOwningType" name="validateControlNodeOwningType" visibility="public" constrainedElement="Systems-Actions-ControlNode">
          <ownedComment xmi:id="Systems-Actions-ControlNode-validateControlNodeOwningType-_ownedComment.0" annotatedElement="Systems-Actions-ControlNode-validateControlNodeOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>ControlNode&lt;/code> must be an &lt;code>ActionDefinition&lt;/code> or &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ControlNode-validateControlNodeOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and 
(owningType.oclIsKindOf(ActionDefinition) or
 owningType.oclIsKindOf(ActionUsage))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ControlNode-validateControlNodeIncomingSuccessions" name="validateControlNodeIncomingSuccessions" visibility="public" constrainedElement="Systems-Actions-ControlNode">
          <ownedComment xmi:id="Systems-Actions-ControlNode-validateControlNodeIncomingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-ControlNode-validateControlNodeIncomingSuccessions">
            <body>&lt;p>All incoming &lt;code>Successions&lt;/code> to a &lt;code>ControlNode&lt;/code> must have a target &lt;code>multiplicity&lt;/code> of &lt;code>1..1&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ControlNode-validateControlNodeIncomingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetConnector->selectByKind(Succession)->
    collect(connectorEnd->at(2).multiplicity)->
    forAll(targetMult | 
        multiplicityHasBounds(targetMult, 1, 1))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ControlNode-checkControlNodeSpecialization" name="checkControlNodeSpecialization" visibility="public" constrainedElement="Systems-Actions-ControlNode">
          <ownedComment xmi:id="Systems-Actions-ControlNode-checkControlNodeSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ControlNode-checkControlNodeSpecialization">
            <body>&lt;p>A &lt;code>ControlNode&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::control&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ControlNode-checkControlNodeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Action::Action::controls')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-ControlNode-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedOperation xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds" name="multiplicityHasBounds" visibility="public" bodyCondition="Systems-Actions-ControlNode-multiplicityHasBounds-unnamed1">
          <ownedComment xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds-_ownedComment.0" annotatedElement="Systems-Actions-ControlNode-multiplicityHasBounds">
            <body>&lt;p>Check that the given &lt;code>Multiplicity&lt;/code> has &lt;code>lowerBound&lt;/code> and &lt;code>upperBound&lt;/code> expressions that are model-level evaluable to the given &lt;code>lower&lt;/code> and &lt;code>upper&lt;/code> values.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>mult &lt;> null and
if mult.oclIsKindOf(MultiplicityRange) then
    mult.oclAsType(MultiplicityRange).hasBounds(lower, upper)
else
    mult.allSuperTypes()->exists(
        oclisKindOf(MultiplicityRange) and
        oclAsType(MultiplicityRange).hasBounds(lower, upper)
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds-mult" name="mult" visibility="public" type="Core-Types-Multiplicity"/>
          <ownedParameter xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds-lower" name="lower" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds-upper" name="upper" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
          </ownedParameter>
          <ownedParameter xmi:id="Systems-Actions-ControlNode-multiplicityHasBounds-_ownedParameter.3" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-ActionUsage" name="ActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-ActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage">
          <body>&lt;p>An &lt;code>ActionUsage&lt;/code> is a &lt;code>Usage&lt;/code> that is also a &lt;code>Step&lt;/code>, and, so, is typed by a &lt;code>Behavior&lt;/code>. Nominally, if the type is an &lt;code>ActionDefinition&lt;/code>, an &lt;code>ActionUsage&lt;/code> is a &lt;code>Usage&lt;/code> of that &lt;code>ActionDefinition&lt;/code> within a system. However, other kinds of kernel &lt;code>Behaviors&lt;/code> are also allowed, to permit use of &lt;code>Behaviors&lt;/code> from the Kernel Model Libraries.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-ActionUsage-checkActionUsageSubactionSpecialization" name="checkActionUsageSubactionSpecialization" visibility="public" constrainedElement="Systems-Actions-ActionUsage">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-checkActionUsageSubactionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-checkActionUsageSubactionSpecialization">
            <body>&lt;p>A composite &lt;code>ActionUsage&lt;/code> that is a subaction usage must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::subactions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-checkActionUsageSubactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubactionUsage() implies
    specializesFromLibrary('Actions::Action::subactions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ActionUsage-checkActionUsageSpecialization" name="checkActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-ActionUsage">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-checkActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-checkActionUsageSpecialization">
            <body>&lt;p>An &lt;code>ActionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::actions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-checkActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Actions::actions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ActionUsage-checkActionUsageOwnedActionSpecialization" name="checkActionUsageOwnedActionSpecialization" visibility="public" constrainedElement="Systems-Actions-ActionUsage">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-checkActionUsageOwnedActionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-checkActionUsageOwnedActionSpecialization">
            <body>&lt;p>A composite &lt;code>ActionUsage&lt;/code> whose &lt;code>owningType&lt;/code> is  &lt;code>PartDefinition&lt;/code> or &lt;code>PartUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Parts::Part::ownedActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-checkActionUsageOwnedActionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(PartDefinition) or
 owningType.oclIsKindOf(PartUsage)) implies
    specializesFromLibrary('Parts::Part::ownedActions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ActionUsage-checkActionUsageStateActionRedefinition" name="checkActionUsageStateActionRedefinition" visibility="public" constrainedElement="Systems-Actions-ActionUsage">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-checkActionUsageStateActionRedefinition-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-checkActionUsageStateActionRedefinition">
            <body>&lt;p>An &lt;code>ActionUsage&lt;/code> that is the &lt;code>&lt;em>entry&lt;/em>&lt;/code>, &lt;code>&lt;em>do&lt;/em>&lt;/code>, or &lt;code>&lt;em>exit&lt;/em>&lt;/code> &lt;code>&lt;em>Action&lt;/em>&lt;/code> of a &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code> must redefine the &lt;code>entryAction&lt;/code>, &lt;code>doAction&lt;/code>, or &lt;code>exitAction&lt;/code> &lt;code>feature&lt;/code>, respectively, of the &lt;code>StateDefinition&lt;/code> &lt;code>&lt;em>States::StateAction&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-checkActionUsageStateActionRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningFeatureMembership &lt;> null and
owningFeatureMembership.oclIsKindOf(StateSubactionMembership) implies
    let kind : StateSubactionKind = 
        owningFeatureMembership.oclAsType(StateSubactionMembership).kind in
    if kind = StateSubactionKind::entry then
        redefinesFromLibrary('States::StateAction::entryAction')
    else if kind = StateSubactionKind::do then
        redefinesFromLibrary('States::StateAction::doAction')
    else
        redefinesFromLibrary('States::StateAction::exitAction')
    endif endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ActionUsage-checkActionUsageAnalysisActionSpecialization" name="checkActionUsageAnalysisActionSpecialization" visibility="public" constrainedElement="Systems-Actions-ActionUsage">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-checkActionUsageAnalysisActionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-checkActionUsageAnalysisActionSpecialization">
            <body>&lt;p>An &lt;code>ActionUsage&lt;/code> that is an &lt;code>analysisAction&lt;/code> of an &lt;code>AnalysisCaseDefinition&lt;/code> or and &lt;code>AnalysisCaseUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>AnalysisCases::AnalysisCase::analysisSteps&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-checkActionUsageAnalysisActionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
    (owningType.oclIsKindOf(AnalysisCaseDefinition) and
        owningType.oclAsType(AnalysisCaseDefinition).analysisAction->
            includes(self) or
     owningType.oclIsKindOf(AnalysisCaseUsage) and
        owningType.oclAsType(AnalysisCaseUsage).analysisAction->
            includes(self)) implies
    specializesFromLibrary('AnalysisCases::AnalysisCase::analysisSteps')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-ActionUsage-_generalization.0" general="Kernel-Behaviors-Step"/>
        <generalization xmi:id="Systems-Actions-ActionUsage-_generalization.1" general="Systems-Occurrences-OccurrenceUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-ActionUsage-actionDefinition" name="actionDefinition" visibility="public" type="Kernel-Behaviors-Behavior" isOrdered="true" isDerived="true" redefinedProperty="Kernel-Behaviors-Step-behavior Systems-Occurrences-OccurrenceUsage-occurrenceDefinition" association="Systems-Actions-_packagedElement.12">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-actionDefinition-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-actionDefinition">
            <body>&lt;p>The &lt;code>Behaviors&lt;/code> that are the &lt;code>types&lt;/code> of this &lt;code>ActionUsage&lt;/code>. Nominally, these would be &lt;code>ActionDefinitions&lt;code>, but other kinds of Kernel &lt;code>Behaviors&lt;/code> are also allowed, to permit use of &lt;code>Behaviors&lt;/code> from the Kernel Model Libraries.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-ActionUsage-actionDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-ActionUsage-actionDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Actions-ActionUsage-inputParameters" name="inputParameters" visibility="public" bodyCondition="Systems-Actions-ActionUsage-inputParameters-inputParametersBody">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-inputParameters-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-inputParameters">
            <body>&lt;p>Return the owned input &lt;code>parameters&lt;/code> of this &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Actions-ActionUsage-inputParameters-inputParametersBody" name="inputParametersBody" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-inputParameters-inputParametersBody-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>input->select(f | f.owner = self)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Actions-ActionUsage-inputParameters-_ownedParameter.0" name="" visibility="public" type="Core-Features-Feature" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-ActionUsage-inputParameters-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-ActionUsage-inputParameters-_ownedParameter.0-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Systems-Actions-ActionUsage-inputParameter" name="inputParameter" visibility="public" bodyCondition="Systems-Actions-ActionUsage-inputParameter-unnamed1">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-inputParameter-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-inputParameter">
            <body>&lt;p>Return the &lt;code>i&lt;code>-th owned input &lt;code>parameter&lt;/code> of the &lt;code>ActionUsage&lt;/code>. Return null if the &lt;code>ActionUsage&lt;/code> has less than &lt;code>i&lt;code> owned input &lt;code>parameters&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Actions-ActionUsage-inputParameter-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-inputParameter-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if inputParameters()->size() &lt; i then null
else inputParameters()->at(i)
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Actions-ActionUsage-inputParameter-i" name="i" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Systems-Actions-ActionUsage-inputParameter-_ownedParameter.1" name="" visibility="public" type="Core-Features-Feature" direction="return" isStream="true">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-ActionUsage-inputParameter-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-ActionUsage-inputParameter-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Systems-Actions-ActionUsage-argument" name="argument" visibility="public" bodyCondition="Systems-Actions-ActionUsage-argument-argumentBody">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-argument-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-argument">
            <body>&lt;p>Return the &lt;code>i&lt;code>-th argument &lt;code>Expression&lt;/code> of an &lt;code>ActionUsage&lt;/code>, defined as the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> of the &lt;code>FeatureValue&lt;/code> of the &lt;code>i&lt;code>-th owned input &lt;code>parameter&lt;/code> of the &lt;code>ActionUsage&lt;/code>. Return null if the &lt;code>ActionUsage&lt;/code> has less than &lt;code>i&lt;code> owned input &lt;code>parameters&lt;/code> or the &lt;code>i&lt;code>-th owned input &lt;code>parameter&lt;/code> has no &lt;code>FeatureValue&lt;/code>.&lt;/code></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Actions-ActionUsage-argument-argumentBody" name="argumentBody" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-argument-argumentBody-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if inputParameter(i) = null then null
else
    let featureValue : Sequence(FeatureValue) = inputParameter(i).
        ownedMembership->select(oclIsKindOf(FeatureValue)) in
    if featureValue->isEmpty() then null
    else featureValue->at(1).value
    endif
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Actions-ActionUsage-argument-i" name="i" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Systems-Actions-ActionUsage-argument-_ownedParameter.1" name="" visibility="public" type="Kernel-Functions-Expression" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-ActionUsage-argument-_ownedParameter.1-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-ActionUsage-argument-_ownedParameter.1-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Systems-Actions-ActionUsage-isSubactionUsage" name="isSubactionUsage" visibility="public" bodyCondition="Systems-Actions-ActionUsage-isSubactionUsage-unnamed1">
          <ownedComment xmi:id="Systems-Actions-ActionUsage-isSubactionUsage-_ownedComment.0" annotatedElement="Systems-Actions-ActionUsage-isSubactionUsage">
            <body>&lt;p>Check if this &lt;code>ActionUsage&lt;/code> is composite and has an &lt;code>owningType&lt;/code> that is an &lt;code>ActionDefinition&lt;/code> or &lt;code>ActionUsage&lt;/code> but is &lt;em>not&lt;/em> the &lt;code>entryAction&lt;/code> or &lt;code>exitAction&lt;/em>&lt;/code> of a &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code>. If so, then it represents an &lt;code>&lt;em>Action&lt;/em>&lt;/code> that is a &lt;code>&lt;em>subaction&lt;/em>&lt;/code> of another &lt;code>&lt;em>Action&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Actions-ActionUsage-isSubactionUsage-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionUsage-isSubactionUsage-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(ActionDefinition) or
 owningType.oclIsKindOf(ActionUsage)) and
(owningFeatureMembership.oclIsKindOf(StateSubactionMembership) implies
 owningFeatureMembership.oclAsType(StateSubactionMembership).kind = 
    StateSubactionKind::do)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Actions-ActionUsage-isSubactionUsage-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.9" name="" visibility="private" memberEnd="Systems-Actions-ActionDefinition-action Systems-Actions-_packagedElement.9-featuringActionDefinition">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.9-featuringActionDefinition" name="featuringActionDefinition" visibility="public" type="Systems-Actions-ActionDefinition" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.0-featuringBehavior Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition" association="Systems-Actions-_packagedElement.9">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.9-featuringActionDefinition-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.9-featuringActionDefinition">
            <body>&lt;p>The Activities that feature a certain ActionUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.9-featuringActionDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.9-featuringActionDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-DecisionNode" name="DecisionNode" visibility="public">
        <ownedComment xmi:id="Systems-Actions-DecisionNode-_ownedComment.0" annotatedElement="Systems-Actions-DecisionNode">
          <body>&lt;p>A &lt;code>DecisionNode&lt;/code> is a &lt;code>ControlNode&lt;/code> that makes a selection from its outgoing &lt;code>Successions&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-DecisionNode-validateDecisionNodeIncomingSuccessions" name="validateDecisionNodeIncomingSuccessions" visibility="public" constrainedElement="Systems-Actions-DecisionNode">
          <ownedComment xmi:id="Systems-Actions-DecisionNode-validateDecisionNodeIncomingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-DecisionNode-validateDecisionNodeIncomingSuccessions">
            <body>&lt;p>A &lt;code>DecisionNode&lt;code> may have at most one incoming &lt;code>Succession&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-DecisionNode-validateDecisionNodeIncomingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetConnector->selectByKind(Succession)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-DecisionNode-validateDecisionNodeOutgoingSuccessions" name="validateDecisionNodeOutgoingSuccessions" visibility="public" constrainedElement="Systems-Actions-DecisionNode">
          <ownedComment xmi:id="Systems-Actions-DecisionNode-validateDecisionNodeOutgoingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-DecisionNode-validateDecisionNodeOutgoingSuccessions">
            <body>&lt;p>All outgoing &lt;code>Successions&lt;/code> from a &lt;code>DecisionNode&lt;/code> must have a target &lt;code>multiplicity&lt;/code> of &lt;code>0..1&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-DecisionNode-validateDecisionNodeOutgoingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceConnector->selectAsKind(Succession)->
    collect(connectorEnd->at(2))->
    forAll(targetMult |
        multiplicityHasBounds(targetMult, 0, 1))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-DecisionNode-checkDecisionNodeSpecialization" name="checkDecisionNodeSpecialization" visibility="public" constrainedElement="Systems-Actions-DecisionNode">
          <ownedComment xmi:id="Systems-Actions-DecisionNode-checkDecisionNodeSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-DecisionNode-checkDecisionNodeSpecialization">
            <body>&lt;p>A &lt;code>DecisionNode&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::decisions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-DecisionNode-checkDecisionNodeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Actions::Action::decisions&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-DecisionNode-checkDecisionNodeOutgoingSuccessionSpecialization" name="checkDecisionNodeOutgoingSuccessionSpecialization" visibility="public" constrainedElement="Systems-Actions-DecisionNode">
          <ownedComment xmi:id="Systems-Actions-DecisionNode-checkDecisionNodeOutgoingSuccessionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-DecisionNode-checkDecisionNodeOutgoingSuccessionSpecialization">
            <body>&lt;p>All outgoing &lt;code>Successions&lt;code> from a &lt;code>DecisionNode&lt;/code> must subset the inherited &lt;em>&lt;code>outgoingHBLink&lt;/code>&lt;/em> &lt;code>feature&lt;/code> of the &lt;code>DecisionNode&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-DecisionNode-checkDecisionNodeOutgoingSuccessionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceConnector->selectByKind(Succession)->
    forAll(subsetsChain(this, 
        resolveGlobal(&quot;ControlPerformances::MergePerformance::outgoingHBLink&quot;)))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-DecisionNode-_generalization.0" general="Systems-Actions-ControlNode"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-MergeNode" name="MergeNode" visibility="public">
        <ownedComment xmi:id="Systems-Actions-MergeNode-_ownedComment.0" annotatedElement="Systems-Actions-MergeNode">
          <body>&lt;p>A &lt;code>MergeNode&lt;/code> is a &lt;code>ControlNode&lt;/code> that asserts the merging of its incoming &lt;code>Successions&lt;/code>. A &lt;code>MergeNode&lt;/code> may have at most one outgoing &lt;code>Successions&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-MergeNode-validateMergeNodeOutgoingSuccessions" name="validateMergeNodeOutgoingSuccessions" visibility="public" constrainedElement="Systems-Actions-MergeNode">
          <ownedComment xmi:id="Systems-Actions-MergeNode-validateMergeNodeOutgoingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-MergeNode-validateMergeNodeOutgoingSuccessions">
            <body>&lt;p>A &lt;code>MergeNode&lt;/code> may have at most one outgoing &lt;code>Succession&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-MergeNode-validateMergeNodeOutgoingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>sourceConnector->selectAsKind(Succession)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-MergeNode-validateMergeNodeIncomingSuccessions" name="validateMergeNodeIncomingSuccessions" visibility="public" constrainedElement="Systems-Actions-MergeNode">
          <ownedComment xmi:id="Systems-Actions-MergeNode-validateMergeNodeIncomingSuccessions-_ownedComment.0" annotatedElement="Systems-Actions-MergeNode-validateMergeNodeIncomingSuccessions">
            <body>&lt;p>All incoming &lt;code>Successions&lt;/code> to a &lt;code>MergeNode&lt;/code> must have a source &lt;code>multiplicity&lt;/code> of &lt;code>0..1&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-MergeNode-validateMergeNodeIncomingSuccessions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetConnector->selectByKind(Succession)->
    collect(connectorEnd->at(1))->
    forAll(sourceMult |
        multiplicityHasBounds(sourceMult, 0, 1))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-MergeNode-checkMergeNodeIncomingSuccessionSpecialization" name="checkMergeNodeIncomingSuccessionSpecialization" visibility="public" constrainedElement="Systems-Actions-MergeNode">
          <ownedComment xmi:id="Systems-Actions-MergeNode-checkMergeNodeIncomingSuccessionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-MergeNode-checkMergeNodeIncomingSuccessionSpecialization">
            <body>&lt;p>All incoming &lt;code>Successions&lt;code> to a &lt;code>MergeNode&lt;/code> must subset the inherited &lt;em>&lt;code>incomingHBLink&lt;/code>&lt;/em> &lt;code>feature&lt;/code> of the &lt;code>MergeNode&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-MergeNode-checkMergeNodeIncomingSuccessionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetConnector->selectByKind(Succession)->
    forAll(subsetsChain(this, 
        resolveGlobal(&quot;ControlPerformances::MergePerformance::incomingHBLink&quot;)))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-MergeNode-checkMergeNodeSpecialization" name="checkMergeNodeSpecialization" visibility="public" constrainedElement="Systems-Actions-MergeNode">
          <ownedComment xmi:id="Systems-Actions-MergeNode-checkMergeNodeSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-MergeNode-checkMergeNodeSpecialization">
            <body>&lt;p>A &lt;code>MergeNode&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::merges&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-MergeNode-checkMergeNodeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Actions::Action::merges&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-MergeNode-_generalization.0" general="Systems-Actions-ControlNode"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.12" name="" visibility="private" memberEnd="Systems-Actions-ActionUsage-actionDefinition Systems-Actions-_packagedElement.12-definedAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.12-definedAction" name="definedAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.3-typedStep Systems-Occurrences-_packagedElement.7-definedOccurrence" association="Systems-Actions-_packagedElement.12">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.12-definedAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.12-definedAction">
            <body>&lt;p>The ActionUsages being typed by a certain Behavior.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.12-definedAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.12-definedAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-ActionDefinition" name="ActionDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Actions-ActionDefinition-_ownedComment.0" annotatedElement="Systems-Actions-ActionDefinition">
          <body>&lt;p>An &lt;code>ActionDefinition&lt;/code> is a &lt;code>Definition&lt;/code> that is also a &lt;code>Behavior&lt;/code> that defines an &lt;em>&lt;code>Action&lt;/code>&lt;/em> performed by a system or part of a system.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-ActionDefinition-checkActionDefinitionSpecialization" name="checkActionDefinitionSpecialization" visibility="public" constrainedElement="Systems-Actions-ActionDefinition">
          <ownedComment xmi:id="Systems-Actions-ActionDefinition-checkActionDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ActionDefinition-checkActionDefinitionSpecialization">
            <body>&lt;p>An &lt;code>ActionDefinition&lt;/code> must directly or indirectly specialize the &lt;code>ActionDefinition&lt;/code> &lt;em>&lt;code>Actions::Action&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionDefinition-checkActionDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Actions::Action')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ActionDefinition-deriveActionDefinitionAction" name="deriveActionDefinitionAction" visibility="public" constrainedElement="Systems-Actions-ActionDefinition">
          <ownedComment xmi:id="Systems-Actions-ActionDefinition-deriveActionDefinitionAction-_ownedComment.0" annotatedElement="Systems-Actions-ActionDefinition-deriveActionDefinitionAction">
            <body>&lt;p> The &lt;code>actions&lt;/code> of a &lt;code>ActionDefinition&lt;/code> are those of its &lt;code>usages&lt;/code> that are &lt;code>ActionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ActionDefinition-deriveActionDefinitionAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>action = usage->selectByKind(ActionUsage)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-ActionDefinition-_generalization.0" general="Kernel-Behaviors-Behavior"/>
        <generalization xmi:id="Systems-Actions-ActionDefinition-_generalization.1" general="Systems-Occurrences-OccurrenceDefinition"/>
        <ownedAttribute xmi:id="Systems-Actions-ActionDefinition-action" name="action" visibility="public" type="Systems-Actions-ActionUsage" isOrdered="true" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-step Systems-DefinitionAndUsage-Definition-usage" association="Systems-Actions-_packagedElement.9">
          <ownedComment xmi:id="Systems-Actions-ActionDefinition-action-_ownedComment.0" annotatedElement="Systems-Actions-ActionDefinition-action">
            <body>&lt;p>The &lt;code>ActionUsages&lt;/code> that are &lt;code>steps&lt;/code> in this &lt;code>ActionDefinition&lt;/code>, which define the actions that specify the behavior of the &lt;code>ActionDefinition&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-ActionDefinition-action-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-ActionDefinition-action-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.14" name="" visibility="private" memberEnd="Systems-Actions-SendActionUsage-payloadArgument Systems-Actions-_packagedElement.14-sendingActionUsage">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.14-sendingActionUsage" name="sendingActionUsage" visibility="public" type="Systems-Actions-SendActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.14">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.14-sendingActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.14-sendingActionUsage">
            <body>&lt;p>The &lt;code>SendActionUsage&lt;/code> that has a certain &lt;code>Expression&lt;/code> as its &lt;code>itemsArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.14-sendingActionUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.14-sendingActionUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.15" name="" visibility="private" memberEnd="Systems-Actions-AcceptActionUsage-receiverArgument Systems-Actions-_packagedElement.15-acceptActionUsage">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.15-acceptActionUsage" name="acceptActionUsage" visibility="public" type="Systems-Actions-AcceptActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.15">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.15-acceptActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.15-acceptActionUsage">
            <body>&lt;p>The AcceptActionUsage that has a certain Expression as its &lt;code>receiverArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.15-acceptActionUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.15-acceptActionUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.16" name="" visibility="private" memberEnd="Systems-Actions-AssignmentActionUsage-referent Systems-Actions-_packagedElement.16-assignment">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.16-assignment" name="assignment" visibility="public" type="Systems-Actions-AssignmentActionUsage" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.5-namespace" association="Systems-Actions-_packagedElement.16">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.16-assignment-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.16-assignment">
            <body>&lt;p>The AssignmentActionUsages that gave a certain &lt;code>referent&lt;/code> Expression.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.16-assignment-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.16-assignment-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.17" name="" visibility="private" memberEnd="Systems-Actions-ForLoopActionUsage-seqArgument Systems-Actions-_packagedElement.17-forLoopAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.17-forLoopAction" name="forLoopAction" visibility="public" type="Systems-Actions-ForLoopActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.17">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.17-forLoopAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.17-forLoopAction">
            <body>&lt;p>The ForLoopActionUsage that has a certain Expression as its &lt;code>seqArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.17-forLoopAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.17-forLoopAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-IfActionUsage" name="IfActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-IfActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage">
          <body>&lt;p>An &lt;code>IfActionUsage&lt;/code> is an &lt;code>ActionUsage&lt;/code> that specifies that the &lt;code>thenAction&lt;/code> &lt;code>ActionUsage&lt;/code> should be performed if the result of the &lt;code>ifArgument&lt;/code> &lt;code>Expression&lt;/code> is true. It may also optionally specify an &lt;code>elseAction&lt;/code> &lt;code>ActionUsage&lt;/code> that is performed if the result of the &lt;code>ifArgument&lt;/code> is false.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageThenAction" name="deriveIfActionUsageThenAction" visibility="public" constrainedElement="Systems-Actions-IfActionUsage">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageThenAction-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-deriveIfActionUsageThenAction">
            <body>&lt;p>The &lt;code>thenAction&lt;/code> of an &lt;code>ifActionUsage&lt;/code> is its second &lt;code>parameter&lt;/code>, which must be an &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageThenAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>thenAction = 
    let parameter : Feature = inputParameter(2) in
    if parameter &lt;> null and parameter.oclIsKindOf(ActionUsage) then
        parameter.oclAsType(ActionUsage)
    else
        null
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-IfActionUsage-checkIfActionUsageSubactionSpecialization" name="checkIfActionUsageSubactionSpecialization" visibility="public" constrainedElement="Systems-Actions-IfActionUsage">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-checkIfActionUsageSubactionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-checkIfActionUsageSubactionSpecialization">
            <body>&lt;p>A composite &lt;code>IfActionUsage&lt;/code> that is a subaction usage must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::ifSubactions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-IfActionUsage-checkIfActionUsageSubactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubactionUsage() implies
    specializesFromLibrary('Actions::Action::ifSubactions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-IfActionUsage-checkIfActionUsageSpecialization" name="checkIfActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-IfActionUsage">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-checkIfActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-checkIfActionUsageSpecialization">
            <body>&lt;p>A &lt;code>IfActionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::ifThenActions&lt;/code>&lt;/em> from the Systems Model Library. If it has an &lt;code>elseAction&lt;/code>, then it must directly or indirectly specialize &lt;em>&lt;code>Actions::ifThenElseActions&lt;/code>&lt;/em>.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-IfActionUsage-checkIfActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>if elseAction = null then
    specifiesFromLibrary('Actions::ifThenActions')
else
    specifiesFromLibrary('Actions::ifThenElseActions')
endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageIfArgument" name="deriveIfActionUsageIfArgument" visibility="public" constrainedElement="Systems-Actions-IfActionUsage">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageIfArgument-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-deriveIfActionUsageIfArgument">
            <body>&lt;p>The &lt;code>ifArgument&lt;/code> of an &lt;code>ifActionUsage&lt;/code> is its first &lt;code>parameter&lt;/code>, which must be an &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageIfArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ifArgument = 
    let parameter : Feature = inputParameter(1) in
    if parameter &lt;> null and parameter.oclIsKindOf(Expression) then
        parameter.oclAsType(Expression)
    else
        null
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageElseAction" name="deriveIfActionUsageElseAction" visibility="public" constrainedElement="Systems-Actions-IfActionUsage">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageElseAction-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-deriveIfActionUsageElseAction">
            <body>&lt;p>The &lt;code>elseAction&lt;/code> of an &lt;code>ifActionUsage&lt;/code> is its third &lt;code>parameter&lt;/code>, if there is one, which must then be an &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-IfActionUsage-deriveIfActionUsageElseAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>elseAction = 
    let parameter : Feature = inputParameter(3) in
    if parameter &lt;> null and parameter.oclIsKindOf(ActionUsage) then
        parameter.oclAsType(ActionUsage)
    else
        null
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-IfActionUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-IfActionUsage-elseAction" name="elseAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.23">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-elseAction-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-elseAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> that is to be performed if the result of the &lt;code>ifArgument&lt;/code> is false. It is the (optional) third &lt;code>parameter&lt;/code> of the &lt;code>IfActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-IfActionUsage-elseAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-IfActionUsage-elseAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-IfActionUsage-thenAction" name="thenAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.25">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-thenAction-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-thenAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> that is to be performed if the result of the &lt;code>ifArgument&lt;/code> is true. It is the second &lt;code>parameter&lt;code> of the &lt;code>IfActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-IfActionUsage-thenAction-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-IfActionUsage-thenAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-IfActionUsage-ifArgument" name="ifArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.24">
          <ownedComment xmi:id="Systems-Actions-IfActionUsage-ifArgument-_ownedComment.0" annotatedElement="Systems-Actions-IfActionUsage-ifArgument">
            <body>&lt;p>The &lt;code>Expression&lt;/code> whose result determines whether the &lt;code>thenAction&lt;/code> or (optionally) the &lt;code>elseAction&lt;/code> is performed. It is the first &lt;code>parameter&lt;code> of the &lt;code>IfActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-IfActionUsage-ifArgument-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-IfActionUsage-ifArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.19" name="" visibility="private" memberEnd="Systems-Actions-AssignmentActionUsage-targetArgument Systems-Actions-_packagedElement.19-assignmentAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.19-assignmentAction" name="assignmentAction" visibility="public" type="Systems-Actions-AssignmentActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.19">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.19-assignmentAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.19-assignmentAction">
            <body>&lt;p>The AssignmentActionUsage that has a certain Expression as its &lt;code>targetArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.19-assignmentAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.19-assignmentAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.20" name="" visibility="private" memberEnd="Systems-Actions-WhileLoopActionUsage-untilArgument Systems-Actions-_packagedElement.20-untilLoopAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.20-untilLoopAction" name="untilLoopAction" visibility="public" type="Systems-Actions-WhileLoopActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.20">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.20-untilLoopAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.20-untilLoopAction">
            <body>&lt;p>The LoopActionUsage that has a certain Expression as its &lt;code>untilArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.20-untilLoopAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.20-untilLoopAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.21" name="" visibility="private" memberEnd="Systems-Actions-WhileLoopActionUsage-whileArgument Systems-Actions-_packagedElement.21-whileLoopAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.21-whileLoopAction" name="whileLoopAction" visibility="public" type="Systems-Actions-WhileLoopActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.21">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.21-whileLoopAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.21-whileLoopAction">
            <body>&lt;p>The LoopActionUsage that has a certain Expression as its &lt;code>whileArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.21-whileLoopAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.21-whileLoopAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.22" name="" visibility="private" memberEnd="Systems-Actions-LoopActionUsage-bodyAction Systems-Actions-_packagedElement.22-loopAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.22-loopAction" name="loopAction" visibility="public" type="Systems-Actions-LoopActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.22">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.22-loopAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.22-loopAction">
            <body>&lt;p>The LoopActionUsage that has a certain ActionUsage as its &lt;code>bodyAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.22-loopAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.22-loopAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.23" name="" visibility="private" memberEnd="Systems-Actions-IfActionUsage-elseAction Systems-Actions-_packagedElement.23-ifElseAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.23-ifElseAction" name="ifElseAction" visibility="public" type="Systems-Actions-IfActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.23">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.23-ifElseAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.23-ifElseAction">
            <body>&lt;p>The IfActionUsage that has a certain ActionUsage as its &lt;code>elseAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.23-ifElseAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.23-ifElseAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.24" name="" visibility="private" memberEnd="Systems-Actions-IfActionUsage-ifArgument Systems-Actions-_packagedElement.24-ifAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.24-ifAction" name="ifAction" visibility="public" type="Systems-Actions-IfActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.24">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.24-ifAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.24-ifAction">
            <body>&lt;p>The IfActionUsage that has a certain Expression as its &lt;code>ifArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.24-ifAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.24-ifAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.25" name="" visibility="private" memberEnd="Systems-Actions-IfActionUsage-thenAction Systems-Actions-_packagedElement.25-ifThenAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.25-ifThenAction" name="ifThenAction" visibility="public" type="Systems-Actions-IfActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.25">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.25-ifThenAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.25-ifThenAction">
            <body>&lt;p>The IfActionUsage that has a certain ActionUsage as its &lt;code>thenAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.25-ifThenAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.25-ifThenAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-LoopActionUsage" name="LoopActionUsage" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Systems-Actions-LoopActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-LoopActionUsage">
          <body>&lt;p>A &lt;code>LoopActionUsage&lt;/code> is an &lt;code>ActionUsage&lt;/code> that specifies that its &lt;code>bodyAction&lt;/code> should be performed repeatedly. Its subclasses &lt;code>WhileLoopActionUsage&lt;/code> and &lt;code>ForLoopActionUsage&lt;/code> provide different ways to determine how many times the &lt;code>bodyAction&lt;/code> should be performed.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-LoopActionUsage-deriveForLoopActionUsageBodyAction" name="deriveForLoopActionUsageBodyAction" visibility="public" constrainedElement="Systems-Actions-LoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-LoopActionUsage-deriveForLoopActionUsageBodyAction-_ownedComment.0" annotatedElement="Systems-Actions-LoopActionUsage-deriveForLoopActionUsageBodyAction">
            <body>&lt;p>The &lt;code>bodyAction&lt;/code> of a &lt;code>LoopActionUsage&lt;/code> is its second input &lt;code>parameter&lt;/code>, which must be an &lt;code>Action&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-LoopActionUsage-deriveForLoopActionUsageBodyAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>bodyAction =
    let parameter : Feature = inputParameter(2) in
    if parameter &lt;> null and parameter.oclIsKindOf(Action) then
        parameter.oclAsType(Action)
    else
        null
    endif
</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-LoopActionUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-LoopActionUsage-bodyAction" name="bodyAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.22">
          <ownedComment xmi:id="Systems-Actions-LoopActionUsage-bodyAction-_ownedComment.0" annotatedElement="Systems-Actions-LoopActionUsage-bodyAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> to be performed repeatedly by the &lt;code>LoopActionUsage&lt;/code>. It is the second &lt;code>parameter&lt;/code> of the &lt;code>LoopActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-LoopActionUsage-bodyAction-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-LoopActionUsage-bodyAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.27" name="" visibility="private" memberEnd="Systems-Actions-AssignmentActionUsage-valueExpression Systems-Actions-_packagedElement.27-assigningAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.27-assigningAction" name="assigningAction" visibility="public" type="Systems-Actions-AssignmentActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.27">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.27-assigningAction-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.27-assigningAction">
            <body>&lt;p>The AssignmentActionUsage that has a certain Expression as its &lt;code>valueArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.27-assigningAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.27-assigningAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-ForLoopActionUsage" name="ForLoopActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage">
          <body>&lt;p>A &lt;code>ForLoopActionUsage&lt;/code> is a &lt;code>LoopActionUsage&lt;/code> that specifies that its &lt;code>bodyClause&lt;/code> &lt;code>ActionUsage&lt;/code> should be performed once for each value, in order, from the sequence of values obtained as the result of the &lt;code>seqArgument&lt;/code> &lt;code>Expression&lt;/code>, with the &lt;code>loopVariable&lt;/code> set to the value for each iteration.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageSeqArgument" name="deriveForLoopActionUsageSeqArgument" visibility="public" constrainedElement="Systems-Actions-ForLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageSeqArgument-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageSeqArgument">
            <body>&lt;p>The &lt;code>seqArgument&lt;/code> of a &lt;code>ForLoopActionUsage&lt;/code> is its first input &lt;code>parameter&lt;/code>, which must be an &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageSeqArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>seqArgument =
    let parameter : Feature = inputParameter(1) in
    if parameter &lt;> null and parameter.oclIsKindOf(Expression) then
        parameter.oclAsType(Expression)
    else
        null
    endif
</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSubactionSpecialization" name="checkForLoopActionUsageSubactionSpecialization" visibility="public" constrainedElement="Systems-Actions-ForLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSubactionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSubactionSpecialization">
            <body>&lt;p>A composite &lt;code>ForLoopActionUsage&lt;/code> that is a subaction usage must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::forLoops&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSubactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubactionUsage() implies
    specializesFromLibrary('Actions::Action::forLoops')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageVarRedefinition" name="checkForLoopActionUsageVarRedefinition" visibility="public" constrainedElement="Systems-Actions-ForLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageVarRedefinition-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageVarRedefinition">
            <body>&lt;p>The &lt;code>loopVariable&lt;/code> of a &lt;code>ForLoopActionUsage&lt;/code> must redefine the &lt;code>ActionUsage&lt;/code> &lt;code>&lt;em>Actions::ForLoopAction::var&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageVarRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>loopVariable &lt;> null and
loopVariable.redefinesFromLibrary('Actions::ForLoopAction::var')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSpecialization" name="checkForLoopActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-ForLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSpecialization">
            <body>&lt;p>A &lt;code>ForLoopActionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::forLoopActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ForLoopActionUsage-checkForLoopActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Actions::forLoopActions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageLoopVariable" name="deriveForLoopActionUsageLoopVariable" visibility="public" constrainedElement="Systems-Actions-ForLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageLoopVariable-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageLoopVariable">
            <body>&lt;p>The &lt;code>loopVariable&lt;/code> of a &lt;code>ForLoopActionUsage&lt;/code> is its first &lt;code>ownedFeature&lt;/code>, which must be a &lt;code>ReferenceUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-ForLoopActionUsage-deriveForLoopActionUsageLoopVariable-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>loopVariable =
    if ownedFeature->isEmpty() or 
        not ownedFeature->first().oclIsKindOf(ReferenceUsage) then 
        null
    else 
        ownedFeature->first().oclAsType(ReferenceUsage)
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-ForLoopActionUsage-_generalization.0" general="Systems-Actions-LoopActionUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-ForLoopActionUsage-seqArgument" name="seqArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.17">
          <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-seqArgument-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage-seqArgument">
            <body>&lt;p>The &lt;code>Expression&lt;/code> whose result provides the sequence of values to which the &lt;code>loopVariable&lt;/code> is set for each iterative performance of the &lt;code>bodyAction&lt;/code>. It is the owned &lt;code>parameter&lt;/code> that redefines &lt;em>&lt;code>ForLoopAction::body&lt;/code>&lt;/em>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-ForLoopActionUsage-seqArgument-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-ForLoopActionUsage-seqArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-ForLoopActionUsage-loopVariable" name="loopVariable" visibility="public" type="Systems-DefinitionAndUsage-ReferenceUsage" isDerived="true" association="Systems-Actions-_packagedElement.31">
          <ownedComment xmi:id="Systems-Actions-ForLoopActionUsage-loopVariable-_ownedComment.0" annotatedElement="Systems-Actions-ForLoopActionUsage-loopVariable">
            <body>&lt;p>The &lt;code>ownedFeature&lt;/code> of this &lt;co>ForLoopActionUsage&lt;/code> that acts as the loop variable, which is assigned the successive values of the input sequence on each iteration. It is the &lt;code>ownedFeature&lt;/code> that redefines &lt;em>&lt;code>ForLoopAction::var&lt;/code>&lt;/em>.&lt;/p> </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-ForLoopActionUsage-loopVariable-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-ForLoopActionUsage-loopVariable-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-AssignmentActionUsage" name="AssignmentActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage">
          <body>&lt;p>An &lt;code>AssignmentActionUsage&lt;/code> is an &lt;code>ActionUsage&lt;/code> that is defined, directly or indirectly, by the &lt;code>ActionDefinition&lt;/code> &lt;em>&lt;code>AssignmentAction&lt;/code>&lt;/em> from the Systems Model Library. It specifies that the value of the &lt;code>referent&lt;/code> &lt;code>Feature&lt;/code>, relative to the target given by the result of the &lt;code>targetArgument&lt;/code> &lt;code>Expression&lt;/code>, should be set to the result of the &lt;code>valueExpression&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSpecialization" name="checkAssignmentActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSpecialization">
            <body>&lt;p>An &lt;code>AssignmentActionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::assignmentActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Actions::assignmentActions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageStartingAtRedefinition" name="checkAssignmentActionUsageStartingAtRedefinition" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageStartingAtRedefinition-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageStartingAtRedefinition">
            <body>&lt;p>The first &lt;code>ownedFeature&lt;/code> of the first &lt;code>parameter&lt;/code> of an &lt;code>AssignmentActionUsage&lt;/code> must redefine &lt;code>&lt;em>AssignmentAction::target::startingAt&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageStartingAtRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let targetParameter : Feature = inputParameter(1) in
targetParameter &lt;> null and
targetParameter.ownedFeature->notEmpty() and
targetParameter.ownedFeature->first().
    redefines('AssignmentAction::target::startingAt')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageValueExpression" name="deriveAssignmentActionUsageValueExpression" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageValueExpression-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageValueExpression">
            <body>&lt;p>The &lt;code>valueExpression&lt;/code> of a &lt;code>AssignmentActionUsage&lt;/code> is its second argument &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageValueExpression-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>valueExpression = argument(2)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentUsageTargetArgument" name="deriveAssignmentUsageTargetArgument" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentUsageTargetArgument-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-deriveAssignmentUsageTargetArgument">
            <body>&lt;p>The &lt;code>targetArgument&lt;/code> of a &lt;code>AssignmentActionUsage&lt;/code> is its first argument &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentUsageTargetArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>targetArgument = argument(1)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSubactionSpecialization" name="checkAssignmentActionUsageSubactionSpecialization" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSubactionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSubactionSpecialization">
            <body>&lt;p>A composite &lt;code>AssignmentActionUsage&lt;/code> that is a subaction usage must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::assignments&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageSubactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubactionUsage() implies
    specializesFromLibrary('Actions::Action::assignments')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageAccessedFeatureRedefinition" name="checkAssignmentActionUsageAccessedFeatureRedefinition" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageAccessedFeatureRedefinition-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageAccessedFeatureRedefinition">
            <body>&lt;p>The first &lt;code>ownedFeature&lt;/code> of the first &lt;code>ownedFeature&lt;/code> of the first &lt;code>parameter&lt;/code> of an &lt;code>AssignmentActionUsage&lt;/code> must redefine &lt;code>&lt;em>AssignmentAction::target::startingAt::accessedFeature&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageAccessedFeatureRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let targetParameter : Feature = inputParameter(1) in
targetParameter &lt;> null and
targetParameter.ownedFeature->notEmpty() and
targetParameter->first().ownedFeature->notEmpty() and
targetParameter->first().ownedFeature->first().
    redefines('AssigmentAction::target::startingAt::accessedFeature')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageReferentRedefinition" name="checkAssignmentActionUsageReferentRedefinition" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageReferentRedefinition-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageReferentRedefinition">
            <body>&lt;p>The first &lt;code>ownedFeature&lt;/code> of the first &lt;code>ownedFeature&lt;/code> of the first &lt;code>parameter&lt;/code> of an &lt;code>AssignmentActionUsage&lt;/code> must redefine the &lt;code>referent&lt;/code> of the &lt;code>AssignmentActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-checkAssignmentActionUsageReferentRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let targetParameter : Feature = inputParameter(1) in
targetParameter &lt;> null and
targetParameter.ownedFeature->notEmpty() and
targetParameter->first().ownedFeature->notEmpty() and
targetParameter->first().ownedFeature->first().redefines(referent)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageReferent" name="deriveAssignmentActionUsageReferent" visibility="public" constrainedElement="Systems-Actions-AssignmentActionUsage">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageReferent-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageReferent">
            <body>&lt;p>The &lt;code>referent&lt;/code> of an &lt;code>AssignmentActionUsage&lt;/code> is the first &lt;code>Feature&lt;/code> that is the &lt;code>memberElement&lt;/code> of a &lt;code>ownedMembership&lt;/code> that is not an &lt;code>OwningMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-AssignmentActionUsage-deriveAssignmentActionUsageReferent-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>referent =
    let unownedFeatures : Sequence(Feature) = ownedMembership->
        reject(oclIsKindOf(OwningMembership)).memberElement->
        selectByKind(Feature) in
    if unownedFeatures->isEmpty() then null
    else unownedFeatures->first().oclAsType(Feature)
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-AssignmentActionUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-AssignmentActionUsage-targetArgument" name="targetArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.19">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-targetArgument-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-targetArgument">
            <body>&lt;p>The &lt;code>Expression&lt;/code> whose value is an occurrence in the domain of the &lt;code>referent&lt;/code> &lt;code>Feature&lt;/code>, for which the value of the &lt;code>referent&lt;/code> will be set to the result of the &lt;code>valueExpression&lt;/code> by this &lt;code>AssignmentActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-AssignmentActionUsage-targetArgument-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-AssignmentActionUsage-targetArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-AssignmentActionUsage-valueExpression" name="valueExpression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.27">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-valueExpression-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-valueExpression">
            <body>&lt;p>The &lt;code>Expression&lt;/code> whose result is to be assigned to the &lt;code>referent&lt;/code> &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-AssignmentActionUsage-valueExpression-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-AssignmentActionUsage-valueExpression-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-AssignmentActionUsage-referent" name="referent" visibility="public" type="Core-Features-Feature" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-member" association="Systems-Actions-_packagedElement.16">
          <ownedComment xmi:id="Systems-Actions-AssignmentActionUsage-referent-_ownedComment.0" annotatedElement="Systems-Actions-AssignmentActionUsage-referent">
            <body>&lt;p>The &lt;code>Feature&lt;/code> whose value is to be set.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-AssignmentActionUsage-referent-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-AssignmentActionUsage-referent-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-WhileLoopActionUsage" name="WhileLoopActionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Actions-WhileLoopActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-WhileLoopActionUsage">
          <body>&lt;p>A &lt;code>WhileLoopActionUsage&lt;/code> is a &lt;code>LoopActionUsage&lt;/code> that specifies that the &lt;code>bodyClause&lt;/code> &lt;code>ActionUsage&lt;/code> should be performed repeatedly while the result of the &lt;code>whileArgument&lt;/code> &lt;code>Expression&lt;/code> is true or until the result of the &lt;code>untilArgument&lt;/code> &lt;code>Expression&lt;/code> (if provided) is true. The &lt;code>whileArgument&lt;/code> &lt;code>Expression&lt;/code> is evaluated before each (possible) performance of the &lt;code>bodyClause&lt;/code>, and the &lt;code>untilArgument&lt;/code> &lt;code>Expression&lt;/code> is evaluated after each performance of the &lt;code>bodyClause&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSubactionSpecialization" name="checkWhileLoopActionUsageSubactionSpecialization" visibility="public" constrainedElement="Systems-Actions-WhileLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSubactionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSubactionSpecialization">
            <body>&lt;p>A composite &lt;code>WhileLoopActionUsage&lt;/code> that is a subaction usage must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::whileLoops&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSubactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubactionUsage() implies
    specializesFromLibrary('Actions::Action::whileLoops')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageUntilArgument" name="deriveWhileLoopActionUsageUntilArgument" visibility="public" constrainedElement="Systems-Actions-WhileLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageUntilArgument-_ownedComment.0" annotatedElement="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageUntilArgument">
            <body>&lt;p>The &lt;code>whileArgument&lt;/code> of a &lt;code>WhileLoopActionUsage&lt;/code> is its third input &lt;code>parameter&lt;/code>, which, if it exists, must be an &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageUntilArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>untilArgument =
    let parameter : Feature = inputParameter(3) in
    if parameter &lt;> null and parameter.oclIsKindOf(Expression) then
        parameter.oclAsType(Expression)
    else
        null
    endif
</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSpecialization" name="checkWhileLoopActionUsageSpecialization" visibility="public" constrainedElement="Systems-Actions-WhileLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSpecialization">
            <body>&lt;p>A &lt;code>WhileLoopActionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::whileLoopActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-WhileLoopActionUsage-checkWhileLoopActionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Actions::whileLoopActions')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageWhileArgument" name="deriveWhileLoopActionUsageWhileArgument" visibility="public" constrainedElement="Systems-Actions-WhileLoopActionUsage">
          <ownedComment xmi:id="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageWhileArgument-_ownedComment.0" annotatedElement="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageWhileArgument">
            <body>&lt;p>The &lt;code>whileArgument&lt;/code> of a &lt;code>WhileLoopActionUsage&lt;/code> is its first input &lt;code>parameter&lt;/code>, which must be an &lt;code>Expression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-WhileLoopActionUsage-deriveWhileLoopActionUsageWhileArgument-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>whileArgument =
    let parameter : Feature = inputParameter(1) in
    if parameter &lt;> null and parameter.oclIsKindOf(Expression) then
        parameter.oclAsType(Expression)
    else
        null
    endif
</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-WhileLoopActionUsage-_generalization.0" general="Systems-Actions-LoopActionUsage"/>
        <ownedAttribute xmi:id="Systems-Actions-WhileLoopActionUsage-whileArgument" name="whileArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.21">
          <ownedComment xmi:id="Systems-Actions-WhileLoopActionUsage-whileArgument-_ownedComment.0" annotatedElement="Systems-Actions-WhileLoopActionUsage-whileArgument">
            <body>&lt;p>The &lt;code>Expression&lt;/code> whose result, if true, determines that the &lt;code>bodyAction&lt;/code> should continue to be performed. It is the first owned &lt;code>parameter&lt;/code> of the &lt;code>WhileLoopActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-WhileLoopActionUsage-whileArgument-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-WhileLoopActionUsage-whileArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Actions-WhileLoopActionUsage-untilArgument" name="untilArgument" visibility="public" type="Kernel-Functions-Expression" isDerived="true" association="Systems-Actions-_packagedElement.20">
          <ownedComment xmi:id="Systems-Actions-WhileLoopActionUsage-untilArgument-_ownedComment.0" annotatedElement="Systems-Actions-WhileLoopActionUsage-untilArgument">
            <body>&lt;p>The &lt;code>Expression&lt;/code> whose result, if false, determines that the &lt;code>bodyAction&lt;/code> should continue to be performed. It is the (optional) third owned &lt;code>parameter&lt;/code> of the &lt;code>WhileLoopActionUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-WhileLoopActionUsage-untilArgument-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-WhileLoopActionUsage-untilArgument-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.31" name="" visibility="private" memberEnd="Systems-Actions-ForLoopActionUsage-loopVariable Systems-Actions-_packagedElement.31-forLoopAction">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.31-forLoopAction" name="forLoopAction" visibility="public" type="Systems-Actions-ForLoopActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.31">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.31-forLoopAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.31-forLoopAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.32" name="" visibility="private" memberEnd="Systems-Actions-AcceptActionUsage-payloadParameter Systems-Actions-_packagedElement.32-owningAcceptActionUsage">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.32-owningAcceptActionUsage" name="owningAcceptActionUsage" visibility="public" type="Systems-Actions-AcceptActionUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.22-referenceOwningUsage" association="Systems-Actions-_packagedElement.32">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.32-owningAcceptActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.32-owningAcceptActionUsage">
            <body>&lt;p>The AcceptActionUsage that owns the &lt;code>payloadParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.32-owningAcceptActionUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.32-owningAcceptActionUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="Systems-Actions-TriggerKind" name="TriggerKind" visibility="public">
        <ownedComment xmi:id="Systems-Actions-TriggerKind-_ownedComment.0" annotatedElement="Systems-Actions-TriggerKind">
          <body>&lt;p>&lt;code>TriggerKind&lt;/code> enumerates the kinds of triggers that can be represented by a &lt;code>TriggerInvocationExpression&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedLiteral xmi:id="Systems-Actions-TriggerKind-when" name="when" visibility="public">
          <ownedComment xmi:id="Systems-Actions-TriggerKind-when-_ownedComment.0" annotatedElement="Systems-Actions-TriggerKind-when">
            <body>&lt;p>Indicates a &lt;em>change trigger&lt;/em>, corresponding to the &lt;em>&lt;code>TriggerWhen&lt;/code>&lt;/em> &lt;code>Function&lt;/code> from the &lt;em>&lt;code>Triggers&lt;/code>&lt;/em> model in the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-Actions-TriggerKind-at" name="at" visibility="public">
          <ownedComment xmi:id="Systems-Actions-TriggerKind-at-_ownedComment.0" annotatedElement="Systems-Actions-TriggerKind-at">
            <body>&lt;p>Indicates an &lt;em>absolute time trigger&lt;/em>, corresponding to the &lt;em>&lt;code>TriggerAt&lt;/code>&lt;/em> &lt;code>Function&lt;/code> from the &lt;em>&lt;code>Triggers&lt;/code>&lt;/em> model in the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-Actions-TriggerKind-after" name="after" visibility="public">
          <ownedComment xmi:id="Systems-Actions-TriggerKind-after-_ownedComment.0" annotatedElement="Systems-Actions-TriggerKind-after">
            <body>&lt;p>Indicates a &lt;em>relative time trigger&lt;/em>, corresponding to the &lt;em>&lt;code>TriggerAfter&lt;/code>&lt;/em> &lt;code>Function&lt;/code> from the &lt;em>&lt;code>Triggers&lt;/code>&lt;/em> model in the &lt;code>Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.34" name="" visibility="private" memberEnd="Systems-Actions-AcceptActionUsage-payloadArgument Systems-Actions-_packagedElement.34-acceptingActionUsage">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.34-acceptingActionUsage" name="acceptingActionUsage" visibility="public" type="Systems-Actions-AcceptActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.34">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.34-acceptingActionUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.34-acceptingActionUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Actions-TriggerInvocationExpression" name="TriggerInvocationExpression" visibility="public">
        <ownedComment xmi:id="Systems-Actions-TriggerInvocationExpression-_ownedComment.0" annotatedElement="Systems-Actions-TriggerInvocationExpression">
          <body>&lt;p>A &lt;code>TriggerInvocationExpression&lt;code> is an &lt;code>InvocationExpression&lt;/code> that invokes one of the trigger &lt;code>Functions&lt;/code> from the Kernel Semantic Library &lt;code>&lt;em>Triggers&lt;em>&lt;/code> package, as indicated by its &lt;code>kind&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Actions-TriggerInvocationExpression-checkTriggerInvocationExpressionSpecialization" name="checkTriggerInvocationExpressionSpecialization" visibility="public" constrainedElement="Systems-Actions-TriggerInvocationExpression">
          <ownedComment xmi:id="Systems-Actions-TriggerInvocationExpression-checkTriggerInvocationExpressionSpecialization-_ownedComment.0" annotatedElement="Systems-Actions-TriggerInvocationExpression-checkTriggerInvocationExpressionSpecialization">
            <body>&lt;p>A &lt;code>TriggerInvocationExpression&lt;/code> must directly or indirectly specialize one of the &lt;code>Functions&lt;/code> &lt;em>&lt;code>TriggerWhen&lt;/code>&lt;/em>, &lt;em>&lt;code>TriggerAt&lt;/code>&lt;/em> or &lt;em>&lt;code>TriggerAfter&lt;/code>&lt;/em>, from the Kernel Semantic Library Triggers package, depending on whether its &lt;code>kind&lt;/code> is &lt;code>when&lt;/code>, &lt;code>at&lt;/code> or &lt;code>after&lt;/code>, respectively.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Actions-TriggerInvocationExpression-checkTriggerInvocationExpressionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(
    if kind = TriggerKind::when then
        'Triggers::TriggerWhen'
    else if kind = TriggerKind::at then
        'Triggers::TriggerAt'
    else 
        'Triggers::TriggerAfter'
    endif endif
)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Actions-TriggerInvocationExpression-_generalization.0" general="Kernel-Expressions-InvocationExpression"/>
        <ownedAttribute xmi:id="Systems-Actions-TriggerInvocationExpression-kind" name="kind" visibility="public" type="Systems-Actions-TriggerKind">
          <ownedComment xmi:id="Systems-Actions-TriggerInvocationExpression-kind-_ownedComment.0" annotatedElement="Systems-Actions-TriggerInvocationExpression-kind">
            <body>&lt;p>Indicates which of the &lt;code>Functions&lt;/code> from the &lt;code>&lt;em>Triggers&lt;/em>&lt;/code> model in the Kernel Semantic Library is to be invoked by this &lt;code>TriggerInvocationExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Actions-_packagedElement.36" name="" visibility="private" memberEnd="Systems-Actions-SendActionUsage-senderArgument Systems-Actions-_packagedElement.36-senderActionUsage">
        <ownedEnd xmi:id="Systems-Actions-_packagedElement.36-senderActionUsage" name="senderActionUsage" visibility="public" type="Systems-Actions-SendActionUsage" isDerived="true" association="Systems-Actions-_packagedElement.36">
          <ownedComment xmi:id="Systems-Actions-_packagedElement.36-senderActionUsage-_ownedComment.0" annotatedElement="Systems-Actions-_packagedElement.36-senderActionUsage">
            <body>&lt;p>The &lt;code>SendActionUsage&lt;/code> that has a certain &lt;code>Expression&lt;/code> as its &lt;code>senderArgument&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Actions-_packagedElement.36-senderActionUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Actions-_packagedElement.36-senderActionUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-DefinitionAndUsage" name="DefinitionAndUsage" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.0" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-directedUsage Systems-DefinitionAndUsage-_packagedElement.0-definitionWithDirectedUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.0-definitionWithDirectedUsage" name="definitionWithDirectedUsage" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition Core-Types-_packagedElement.24-typeWithDirectedFeature" association="Systems-DefinitionAndUsage-_packagedElement.0">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.0-definitionWithDirectedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.0-definitionWithDirectedUsage">
            <body>&lt;p>The Definitions that have a certain Usage as a &lt;code>flow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.0-definitionWithDirectedUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.0-definitionWithDirectedUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.1" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-usage Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition" name="featuringDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Systems-DefinitionAndUsage-_packagedElement.1">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition">
            <body>&lt;p>The Definitions that feature a certain Usage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.2" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedPort Systems-DefinitionAndUsage-_packagedElement.2-portOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.2-portOwningUsage" name="portOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-DefinitionAndUsage-_packagedElement.2">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.2-portOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.2-portOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedPort&lt;/code> is nested (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.2-portOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.2-portOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-DefinitionAndUsage-Definition" name="Definition" visibility="public">
        <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition">
          <body>&lt;p>A &lt;code>Definition&lt;/code> is a &lt;code>Classifier&lt;/code> of &lt;code>Usages&lt;/code>. The actual kinds of &lt;code>Definition&lt;/code> that may appear in a model are given by the subclasses of &lt;code>Definition&lt;/code> (possibly as extended with user-defined &lt;em>&lt;code>SemanticMetadata&lt;/code>&lt;/em>).&lt;/p>

&lt;p>Normally, a &lt;code>Definition&lt;/code> has owned Usages that model &lt;code>features&lt;/code> of the thing being defined. A &lt;code>Definition&lt;/code> may also have other &lt;code>Definitions&lt;/code> nested in it, but this has no semantic significance, other than the nested scoping resulting from the &lt;code>Definition&lt;/code> being considered as a &lt;code>Namespace&lt;/code> for any nested &lt;code>Definitions&lt;/code>.&lt;/p>

&lt;p>However, if a &lt;code>Definition&lt;/code> has &lt;code>isVariation&lt;/code> = &lt;code>true&lt;/code>, then it represents a &lt;em>variation point&lt;/em> &lt;code>Definition&lt;/code>. In this case, all of its &lt;code>members&lt;/code> must be &lt;code>variant&lt;/code> &lt;code>Usages&lt;/code>, related to the &lt;code>Definition&lt;/code> by &lt;code>VariantMembership&lt;/code> &lt;code>Relationships&lt;/code>. Rather than being &lt;code>features&lt;/code> of the &lt;code>Definition&lt;/code>, &lt;code>variant&lt;/code> &lt;code>Usages&lt;/code> model different concrete alternatives that can be chosen to fill in for an abstract &lt;code>Usage&lt;/code> of the variation point &lt;code>Definition&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationMembership" name="validateDefinitionVariationMembership" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationMembership">
            <body>&lt;p>If a &lt;code>Definition&lt;/code> is a variation, then all its &lt;code>ownedMemberships&lt;/code> must be &lt;code>VariantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isVariation implies variantMembership = ownedMembership</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariant" name="deriveDefinitionVariant" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariant-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariant">
            <body>&lt;p>The &lt;code>variants&lt;/code> of a &lt;code>Definition&lt;/code> are the &lt;code>ownedVariantUsages&lt;/code> of its &lt;code>variantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariant-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>variant = variantMembership.ownedVariantUsage</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariantMembership" name="deriveDefinitionVariantMembership" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariantMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariantMembership">
            <body>&lt;p>The &lt;code>variantMemberships&lt;/code> of a &lt;code>Definition&lt;/code> are those &lt;code>ownedMemberships&lt;/code> that are &lt;code>VariantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionVariantMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>variantMembership = ownedMembership->selectByKind(VariantMembership)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionNonVariationMembership" name="validateDefinitionNonVariationMembership" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionNonVariationMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-validateDefinitionNonVariationMembership">
            <body>&lt;p>A &lt;code>Definition&lt;/code> that is not a variation must not have any &lt;code>variantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionNonVariationMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not isVariation implies variantMembership->isEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationSpecialization" name="validateDefinitionVariationSpecialization" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationSpecialization-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationSpecialization">
            <body>&lt;p>A variation &lt;code>Definition&lt;/code> may not specialize any other variation &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-validateDefinitionVariationSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isVariation implies
    not ownedSpecialization.specific->exists(isVariation)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionUsage" name="deriveDefinitionUsage" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionUsage">
            <body>&lt;p>The &lt;code>usages&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>features&lt;/code> that are &lt;code>Usages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionUsage-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>usage = feature->selectByKind(Usage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionDirectedUsage" name="deriveDefinitionDirectedUsage" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionDirectedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionDirectedUsage">
            <body>&lt;p>The &lt;code>directedUsages&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>directedFeatures&lt;/code> that are &lt;code>Usages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionDirectedUsage-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>directedUsage = directedFeature->selectByKind(Usage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUsage" name="deriveDefinitionOwnedUsage" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUsage">
            <body>&lt;p>The &lt;code>ownedUsages&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedFeatures&lt;/code> that are &lt;code>Usages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUsage-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedUsage = ownedFeature->selectByKind(Usage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAttribute" name="deriveDefinitionOwnedAttribute" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAttribute-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAttribute">
            <body>&lt;p>The &lt;code>ownedAttributes&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>AttributeUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAttribute-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedAttribute = ownedUsage->selectByKind(AttributeUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedReference" name="deriveDefinitionOwnedReference" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedReference">
            <body>&lt;p>The &lt;code>ownedReferences&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ReferenceUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedReference = ownedUsage->selectByKind(ReferenceUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedEnumeration" name="deriveDefinitionOwnedEnumeration" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedEnumeration-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedEnumeration">
            <body>&lt;p>The &lt;code>ownedEnumerations&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>EnumerationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedEnumeration-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedEnumeration = ownedUsage->selectByKind(EnumerationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedOccurrence" name="deriveDefinitionOwnedOccurrence" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedOccurrence-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedOccurrence">
            <body>&lt;p>The &lt;code>ownedOccurrences&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>OccurrenceUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedOccurrence-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedOccurrence = ownedUsage->selectByKind(OccurrenceUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedItem" name="deriveDefinitionOwnedItem" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedItem-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedItem">
            <body>&lt;p>The &lt;code>ownedItems&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ItemUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedItem-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedItem = ownedUsage->selectByKind(ItemUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPart" name="deriveDefinitionOwnedPart" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPart-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPart">
            <body>&lt;p>The &lt;code>ownedParts&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>PartUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPart-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedPart = ownedUsage->selectByKind(PartUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPort" name="deriveDefinitionOwnedPort" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPort-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPort">
            <body>&lt;p>The &lt;code>ownedPorts&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>PortUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedPort-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedPort = ownedUsage->selectByKind(PortUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConnection" name="deriveDefinitionOwnedConnection" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConnection-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConnection">
            <body>&lt;p>The &lt;code>ownedConnections&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ConnectorAsUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConnection-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedConnection = ownedUsage->selectByKind(ConnectorAsUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedFlow" name="deriveDefinitionOwnedFlow" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedFlow-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedFlow">
            <body>&lt;p>The &lt;code>ownedFlows&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>FlowConnectionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedFlow-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedFlow = ownedUsage->selectByKind(FlowUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedInterface" name="deriveDefinitionOwnedInterface" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedInterface-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedInterface">
            <body>&lt;p>The &lt;code>ownedInterfaces&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>InterfaceUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedInterface-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedInterface = ownedUsage->selectByKind(ReferenceUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAllocation" name="deriveDefinitionOwnedAllocation" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAllocation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAllocation">
            <body>&lt;p>The &lt;code>ownedAllocations&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>AllocationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAllocation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedAllocation = ownedUsage->selectByKind(AllocationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAction" name="deriveDefinitionOwnedAction" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAction-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAction">
            <body>&lt;p>The &lt;code>ownedActions&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ActionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedAction = ownedUsage->selectByKind(ActionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedState" name="deriveDefinitionOwnedState" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedState-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedState">
            <body>&lt;p>The &lt;code>ownedStates&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>StateUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedState-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedState = ownedUsage->selectByKind(StateUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedTransition" name="deriveDefinitionOwnedTransition" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedTransition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedTransition">
            <body>&lt;p>The &lt;code>ownedTransitions&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>TransitionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedTransition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedTransition = ownedUsage->selectByKind(TransitionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCalculation" name="deriveDefinitionOwnedCalculation" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCalculation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCalculation">
            <body>&lt;p>The &lt;code>ownedCalculations&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>CalculationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCalculation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedCalculation = ownedUsage->selectByKind(CalculationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConstraint" name="deriveDefinitionOwnedConstraint" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConstraint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConstraint">
            <body>&lt;p>The &lt;code>ownedConstraints&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ConstraintUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedConstraint = ownedUsage->selectByKind(ConstraintUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRequirement" name="deriveDefinitionOwnedRequirement" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRequirement-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRequirement">
            <body>&lt;p>The &lt;code>ownedRequirements&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>RequirementUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRequirement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRequirement = ownedUsage->selectByKind(RequirementUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConcern" name="deriveDefinitionOwnedConcern" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConcern-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConcern">
            <body>&lt;p>The &lt;code>ownedConcerns&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ConcernUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedConcern-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedConcern = ownedUsage->selectByKind(ConcernUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCase" name="deriveDefinitionOwnedCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCase">
            <body>&lt;p>The &lt;code>ownedCases&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>CaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedCase = ownedUsage->selectByKind(CaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAnalysisCase" name="deriveDefinitionOwnedAnalysisCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAnalysisCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAnalysisCase">
            <body>&lt;p>The &lt;code>ownedAnalysisCases&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>AnalysisCaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedAnalysisCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedAnalysisCase = ownedUsage->selectByKind(AnalysisCaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedVerificationCase" name="deriveDefinitionOwnedVerificationCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedVerificationCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedVerificationCase">
            <body>&lt;p>The &lt;code>ownedValidationCases&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ValidationCaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedVerificationCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedVerificationCase = ownedUsage->selectByKind(VerificationCaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUseCase" name="deriveDefinitionOwnedUseCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUseCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUseCase">
            <body>&lt;p>The &lt;code>ownedUseCases&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>UseCaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedUseCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedUseCase = ownedUsage->selectByKind(UseCaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedView" name="deriveDefinitionOwnedView" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedView-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedView">
            <body>&lt;p>The &lt;code>ownedViews&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ViewUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedView-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedView = ownedUsage->selectByKind(ViewUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedViewpoint" name="deriveDefinitionOwnedViewpoint" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedViewpoint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedViewpoint">
            <body>&lt;p>The &lt;code>ownedViewpoints&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ViewpointUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedViewpoint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedViewpoint = ownedUsage->selectByKind(ViewpointUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRendering" name="deriveDefinitionOwnedRendering" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRendering-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRendering">
            <body>&lt;p>The &lt;code>ownedRenderings&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>RenderingUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedRendering = ownedUsage->selectByKind(RenderingUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedMetadata" name="deriveDefinitionOwnedMetadata" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Definition">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedMetadata-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedMetadata">
            <body>&lt;p>The &lt;code>ownedMetadata&lt;/code> of a &lt;code>Definition&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>MetadataUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Definition-deriveDefinitionOwnedMetadata-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMetadata = ownedUsage->selectByKind(MetadataUsage)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-DefinitionAndUsage-Definition-_generalization.0" general="Core-Classifiers-Classifier"/>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-isVariation" name="isVariation" visibility="public">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-isVariation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-isVariation">
            <body>&lt;p>Whether this &lt;code>Definition&lt;/code> is for a variation point or not. If true, then all the &lt;code>memberships&lt;/code> of the &lt;code>Definition&lt;/code> must be &lt;code>VariantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-variant" name="variant" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Systems-DefinitionAndUsage-_packagedElement.29">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-variant-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-variant">
            <body>&lt;p>The &lt;code>Usages&lt;/code> which represent the variants of this &lt;code>Definition&lt;/code> as a variation point &lt;code>Definition&lt;/code>, if &lt;code>isVariation&lt;/code> = true. If &lt;code>isVariation = false&lt;/code>, the there must be no &lt;code>variants&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-variant-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-variant-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-variantMembership" name="variantMembership" visibility="public" type="Systems-DefinitionAndUsage-VariantMembership" aggregation="composite" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMembership" association="Systems-DefinitionAndUsage-_packagedElement.43">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-variantMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-variantMembership">
            <body>&lt;p>The &lt;code>ownedMemberships&lt;/code> of this &lt;code>Definition&lt;/code> that are &lt;code>VariantMemberships&lt;/code>. If &lt;code>isVariation&lt;/code> = true, then this must be all &lt;code>ownedMemberships&lt;/code> of the &lt;code>Definition&lt;/code>. If &lt;code>isVariation&lt;/code> = false, then &lt;code>variantMembership&lt;/code>must be empty.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-variantMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-variantMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-usage" name="usage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-feature" association="Systems-DefinitionAndUsage-_packagedElement.1">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-usage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-usage">
            <body>&lt;p>The &lt;code>Usages&lt;/code> that are &lt;code>features&lt;/code> of this &lt;code>Definition&lt;/code> (not necessarily owned).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-usage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-usage-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-directedUsage" name="directedUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-usage Core-Types-Type-directedFeature" association="Systems-DefinitionAndUsage-_packagedElement.0">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-directedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-directedUsage">
            <body>&lt;p>The &lt;code>usages&lt;/code> of this &lt;code>Definition&lt;/code> that are &lt;code>directedFeatures&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-directedUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-directedUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedUsage" name="ownedUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature Systems-DefinitionAndUsage-Definition-usage" association="Systems-DefinitionAndUsage-_packagedElement.7">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedUsage">
            <body>&lt;p>The &lt;code>Usages&lt;/code> that are &lt;code>ownedFeatures&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedReference" name="ownedReference" visibility="public" type="Systems-DefinitionAndUsage-ReferenceUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedUsage" association="Systems-DefinitionAndUsage-_packagedElement.30">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedReference">
            <body>&lt;p>The &lt;code>ReferenceUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedReference-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedReference-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedAttribute" name="ownedAttribute" visibility="public" type="Systems-Attributes-AttributeUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedUsage" association="Systems-DefinitionAndUsage-_packagedElement.37">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedAttribute-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedAttribute">
            <body>&lt;p>The &lt;code>AttributeUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAttribute-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAttribute-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedEnumeration" name="ownedEnumeration" visibility="public" type="Systems-Enumerations-EnumerationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedAttribute" association="Systems-DefinitionAndUsage-_packagedElement.52">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedEnumeration-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedEnumeration">
            <body>&lt;p>The &lt;code>EnumerationUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedEnumeration-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedEnumeration-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedOccurrence" name="ownedOccurrence" visibility="public" type="Systems-Occurrences-OccurrenceUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedUsage" association="Systems-DefinitionAndUsage-_packagedElement.58">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedOccurrence-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedOccurrence">
            <body>&lt;p>The &lt;code>OccurrenceUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedOccurrence-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedOccurrence-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedItem" name="ownedItem" visibility="public" type="Systems-Items-ItemUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedOccurrence" association="Systems-DefinitionAndUsage-_packagedElement.20">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedItem-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedItem">
            <body>&lt;p>The &lt;code>ItemUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedItem-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedItem-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedPart" name="ownedPart" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedItem" association="Systems-DefinitionAndUsage-_packagedElement.25">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedPart-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedPart">
            <body>&lt;p>The &lt;code>PartUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedPart-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedPart-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedPort" name="ownedPort" visibility="public" type="Systems-Ports-PortUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedUsage" association="Systems-DefinitionAndUsage-_packagedElement.6">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedPort-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedPort">
            <body>&lt;p>The &lt;code>PortUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedPort-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedPort-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedConnection" name="ownedConnection" visibility="public" type="Systems-Connections-ConnectorAsUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedPart" association="Systems-DefinitionAndUsage-_packagedElement.39">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedConnection-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedConnection">
            <body>&lt;p>The &lt;code>ConnectorAsUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>. Note that this list includes &lt;code>BindingConnectorAsUsages&lt;/code> and &lt;code>SuccessionAsUsages&lt;/code>, even though these are &lt;code>ConnectorAsUsages&lt;/code> but not &lt;code>ConnectionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedConnection-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedConnection-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedFlow" name="ownedFlow" visibility="public" type="Systems-Connections-FlowConnectionUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedConnection" association="Systems-DefinitionAndUsage-_packagedElement.62">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedFlow-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedFlow">
            <body>&lt;p>The &lt;code>FlowConnectionUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedFlow-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedFlow-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedInterface" name="ownedInterface" visibility="public" type="Systems-Interfaces-InterfaceUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedConnection" association="Systems-DefinitionAndUsage-_packagedElement.28">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedInterface-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedInterface">
            <body>&lt;p>The &lt;code>InterfaceUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedInterface-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedInterface-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedAllocation" name="ownedAllocation" visibility="public" type="Systems-Allocations-AllocationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedConnection" association="Systems-DefinitionAndUsage-_packagedElement.54">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedAllocation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedAllocation">
            <body>&lt;p>The &lt;code>AllocationUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAllocation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAllocation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedAction" name="ownedAction" visibility="public" type="Systems-Actions-ActionUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedOccurrence" association="Systems-DefinitionAndUsage-_packagedElement.32">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedAction-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedAction">
            <body>&lt;p>The &lt;code>ActionUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedState" name="ownedState" visibility="public" type="Systems-States-StateUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedAction" association="Systems-DefinitionAndUsage-_packagedElement.10">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedState-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedState">
            <body>&lt;p>The &lt;code>StateUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedState-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedState-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedTransition" name="ownedTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedUsage" association="Systems-DefinitionAndUsage-_packagedElement.13">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedTransition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedTransition">
            <body>&lt;p>The &lt;code>TransitionUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedTransition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedCalculation" name="ownedCalculation" visibility="public" type="Systems-Calculations-CalculationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedAction" association="Systems-Calculations-_packagedElement.4">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedCalculation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedCalculation">
            <body>&lt;p>The &lt;code>CalculationUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedCalculation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedCalculation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedConstraint" name="ownedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedOccurrence" association="Systems-DefinitionAndUsage-_packagedElement.14">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedConstraint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedConstraint">
            <body>&lt;p>The &lt;code>ConstraintUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedConstraint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedConstraint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedRequirement" name="ownedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedConstraint" association="Systems-DefinitionAndUsage-_packagedElement.16">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedRequirement-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedRequirement">
            <body>&lt;p>The &lt;code>RequirementUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedRequirement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedConcern" name="ownedConcern" visibility="public" type="Systems-Requirements-ConcernUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedRequirement" association="Systems-DefinitionAndUsage-_packagedElement.57">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedConcern-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedConcern">
            <body>&lt;p>The &lt;code>ConcernUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedConcern-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedConcern-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedCase" name="ownedCase" visibility="public" type="Systems-Cases-CaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedCalculation" association="Systems-DefinitionAndUsage-_packagedElement.40">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedCase">
            <body>&lt;p>The code>CaseUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedAnalysisCase" name="ownedAnalysisCase" visibility="public" type="Systems-AnalysisCases-AnalysisCaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedCase" association="Systems-DefinitionAndUsage-_packagedElement.23">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedAnalysisCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedAnalysisCase">
            <body>&lt;p>The &lt;code>AnalysisCaseUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAnalysisCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedAnalysisCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedVerificationCase" name="ownedVerificationCase" visibility="public" type="Systems-VerificationCases-VerificationCaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedCase" association="Systems-DefinitionAndUsage-_packagedElement.50">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedVerificationCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedVerificationCase">
            <body>&lt;p>The &lt;code>VerificationCaseUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedVerificationCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedVerificationCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedUseCase" name="ownedUseCase" visibility="public" type="Systems-UseCases-UseCaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedCase" association="Systems-DefinitionAndUsage-_packagedElement.63">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedUseCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedUseCase">
            <body>&lt;p>The &lt;code>UseCaseUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedUseCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedUseCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedView" name="ownedView" visibility="public" type="Systems-Views-ViewUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedPart" association="Systems-DefinitionAndUsage-_packagedElement.46">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedView-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedView">
            <body>&lt;p>The &lt;code>ViewUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedView-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedViewpoint" name="ownedViewpoint" visibility="public" type="Systems-Views-ViewpointUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedRequirement" association="Systems-DefinitionAndUsage-_packagedElement.48">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedViewpoint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedViewpoint">
            <body>&lt;p>The &lt;code>ViewpointUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedViewpoint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedViewpoint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedRendering" name="ownedRendering" visibility="public" type="Systems-Views-RenderingUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedPart" association="Systems-DefinitionAndUsage-_packagedElement.47">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedRendering-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedRendering">
            <body>&lt;p>The &lt;code>RenderingUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedRendering-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedRendering-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Definition-ownedMetadata" name="ownedMetadata" visibility="public" type="Systems-Metadata-MetadataUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedItem" association="Systems-DefinitionAndUsage-_packagedElement.65">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Definition-ownedMetadata-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Definition-ownedMetadata">
            <body>&lt;p>The &lt;code>MetadataUsages&lt;/code> that are &lt;code>ownedUsages&lt;/code> of this &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Definition-ownedMetadata-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Definition-ownedMetadata-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.4" name="" visibility="private" memberEnd="Systems-Items-ItemUsage-itemDefinition Systems-DefinitionAndUsage-_packagedElement.4-definedItem">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.4-definedItem" name="definedItem" visibility="public" type="Systems-Items-ItemUsage" isDerived="true" subsettedProperty="Systems-Occurrences-_packagedElement.7-definedOccurrence" association="Systems-DefinitionAndUsage-_packagedElement.4">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.4-definedItem-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.4-definedItem">
            <body>&lt;p>The ItemUsages being typed by a certain Structure.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.4-definedItem-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.4-definedItem-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.5" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedAction Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage" name="actionOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.5">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedAction&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.6" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedPort Systems-DefinitionAndUsage-_packagedElement.6-portOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.6-portOwningDefinition" name="portOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.6">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.6-portOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.6-portOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedPort&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.6-portOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.6-portOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.7" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedUsage Systems-DefinitionAndUsage-Usage-owningDefinition"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.8" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedUsage Systems-DefinitionAndUsage-Usage-owningUsage"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-DefinitionAndUsage-Usage" name="Usage" visibility="public">
        <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage">
          <body>&lt;p>A &lt;code>Usage&lt;/code> is a usage of a &lt;code>Definition&lt;/code>. A &lt;code>Usage&lt;/code> may only be an &lt;code>ownedFeature&lt;/code> of a &lt;code>Definition&lt;/code> or another &lt;code>Usage&lt;/code>.&lt;/p>

&lt;p>A &lt;code>Usage&lt;/code> may have &lt;code>nestedUsages&lt;/code> that model &lt;code>features&lt;/code> that apply in the context of the &lt;code>owningUsage&lt;/code>. A &lt;code>Usage&lt;/code> may also have &lt;code>Definitions&lt;/code> nested in it, but this has no semantic significance, other than the nested scoping resulting from the &lt;code>Usage&lt;/code> being considered as a &lt;code>Namespace&lt;/code> for any nested &lt;code>Definitions&lt;/code>.&lt;/p>

&lt;p>However, if a &lt;code>Usage&lt;/code> has &lt;code>isVariation = true&lt;/code>, then it represents a &lt;em>variation point&lt;/em> &lt;code>Usage&lt;/code>. In this case, all of its &lt;code>members&lt;/code> must be &lt;code>variant&lt;/code> &lt;code>Usages&lt;/code>, related to the &lt;code>Usage&lt;/code> by &lt;code>VariantMembership&lt;/code> &lt;code>Relationships&lt;/code>. Rather than being &lt;code>features&lt;/code> of the &lt;code>Usage&lt;/code>, &lt;code>variant&lt;/code> &lt;code>Usages&lt;/code> model different concrete alternatives that can be chosen to fill in for the variation point &lt;code>Usage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageVariant" name="deriveUsageVariant" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageVariant-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageVariant">
            <body>&lt;p>The &lt;code>variants&lt;/code> of a &lt;code>Usage&lt;/code> are the &lt;code>ownedVariantUsages&lt;/code> of its &lt;code>variantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageVariant-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>variant = variantMembership.ownedVariantUsage</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageVariantMembership" name="deriveUsageVariantMembership" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageVariantMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageVariantMembership">
            <body>&lt;p>The &lt;code>variantMemberships&lt;/code> of a &lt;code>Usage&lt;/code> are those &lt;code>ownedMemberships&lt;/code> that are &lt;code>VariantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageVariantMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>variantMembership = ownedMembership->selectByKind(VariantMembership)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageNonVariationMembership" name="validateUsageNonVariationMembership" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageNonVariationMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-validateUsageNonVariationMembership">
            <body>&lt;p>A &lt;code>Usage&lt;/code> that is not a variation must not have any &lt;code>variantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageNonVariationMembership-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>not isVariation implies variantMembership->isEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageVariationMembership" name="validateUsageVariationMembership" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageVariationMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-validateUsageVariationMembership">
            <body>&lt;p>If a &lt;code>Usage&lt;/code> is a variation, then all its &lt;code>ownedMemberships&lt;/code> must be &lt;code>VariantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageVariationMembership-_specification" name="" visibility="public">
            <language>English</language>
            <body>isVariation implies variantMembership = ownedMembership</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageIsReference" name="deriveUsageIsReference" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageIsReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageIsReference">
            <body>&lt;p>A &lt;code>Usage&lt;/code> is referential if it is not composite.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageIsReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isReference = not isComposite</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-checkUsageVariationUsageSpecialization" name="checkUsageVariationUsageSpecialization" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-checkUsageVariationUsageSpecialization-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-checkUsageVariationUsageSpecialization">
            <body>&lt;p>If a &lt;code>Usage&lt;/code> has an &lt;code>owningVariationUsage&lt;/code>, then it must directly or indirectly specialize that &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-checkUsageVariationUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningVariationUsage &lt;> null implies
    specializes(owningVariationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageVariationSpecialization" name="validateUsageVariationSpecialization" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageVariationSpecialization-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-validateUsageVariationSpecialization">
            <body>&lt;p>A variation &lt;code>Usage&lt;/code> may not specialize any variation &lt;code>Definition&lt;/code> or &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageVariationSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isVariation implies
    not ownedSpecialization.specific->exists(isVariation)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-checkUsageVariationDefinitionSpecialization" name="checkUsageVariationDefinitionSpecialization" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-checkUsageVariationDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-checkUsageVariationDefinitionSpecialization">
            <body>&lt;p>If a &lt;code>Usage&lt;/code> has an &lt;code>owningVariationDefinition&lt;/code>, then it must directly or indirectly specialize that &lt;code>Definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-checkUsageVariationDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningVariationDefinition &lt;> null implies
    specializes(owningVariationDefinition)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageDirectedUsage" name="deriveUsageDirectedUsage" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageDirectedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageDirectedUsage">
            <body>&lt;p>The &lt;code>directedUsages&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>directedFeatures&lt;/code> that are &lt;code>Usages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageDirectedUsage-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>directedUsage = directedFeature->selectByKind(Usage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAction" name="deriveUsageNestedAction" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAction-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAction">
            <body>&lt;p>The &lt;code>ownedActions&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ActionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedAction = nestedUsage->selectByKind(ActionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAllocation" name="deriveUsageNestedAllocation" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAllocation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAllocation">
            <body>&lt;p>The &lt;code>ownedAllocations&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>AllocationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAllocation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedAllocation = nestedUsage->selectByKind(AllocationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAnalysisCase" name="deriveUsageNestedAnalysisCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAnalysisCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAnalysisCase">
            <body>&lt;p>The &lt;code>ownedAnalysisCases&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>AnalysisCaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAnalysisCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedAnalysisCase = nestedUsage->selectByKind(AnalysisCaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAttribute" name="deriveUsageNestedAttribute" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAttribute-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAttribute">
            <body>&lt;p>The &lt;code>ownedAttributes&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>AttributeUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedAttribute-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedAttribute = nestedUsage->selectByKind(AttributeUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCalculation" name="deriveUsageNestedCalculation" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCalculation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCalculation">
            <body>&lt;p>The &lt;code>ownedCalculations&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>CalculationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCalculation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedCalculation = nestedUsage->selectByKind(CalculationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCase" name="deriveUsageNestedCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCase">
            <body>&lt;p>The &lt;code>ownedCases&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>CaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedCase = nestedUsage->selectByKind(CaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConcern" name="deriveUsageNestedConcern" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConcern-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConcern">
            <body>&lt;p>The &lt;code>ownedConcerns&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ConcernUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConcern-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedConcern = nestedUsage->selectByKind(ConcernUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConnection" name="deriveUsageNestedConnection" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConnection-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConnection">
            <body>&lt;p>The &lt;code>ownedConnections&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ConnectorAsUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConnection-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedConnection = nestedUsage->selectByKind(ConnectorAsUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConstraint" name="deriveUsageNestedConstraint" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConstraint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConstraint">
            <body>&lt;p>The &lt;code>ownedConstraints&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ConstraintUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedConstraint = nestedUsage->selectByKind(ConstraintUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedEnumeration" name="deriveUsageNestedEnumeration" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedEnumeration-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedEnumeration">
            <body>&lt;p>The &lt;code>ownedEnumerations&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>EnumerationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedEnumeration-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedNested = nestedUsage->selectByKind(EnumerationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedFlow" name="deriveUsageNestedFlow" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedFlow-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedFlow">
            <body>&lt;p>The &lt;code>ownedFlows&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>FlowConnectionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedFlow-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedFlow = nestedUsage->selectByKind(FlowUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedInterface" name="deriveUsageNestedInterface" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedInterface-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedInterface">
            <body>&lt;p>The &lt;code>ownedInterfaces&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>InterfaceUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedInterface-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedInterface = nestedUsage->selectByKind(ReferenceUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedItem" name="deriveUsageNestedItem" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedItem-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedItem">
            <body>&lt;p>The &lt;code>ownedItems&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ItemUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedItem-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedItem = nestedUsage->selectByKind(ItemUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedMetadata" name="deriveUsageNestedMetadata" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedMetadata-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedMetadata">
            <body>&lt;p>The &lt;code>ownedMetadata&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>MetadataUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedMetadata-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedMetadata = nestedUsage->selectByKind(MetadataUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedOccurrence" name="deriveUsageNestedOccurrence" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedOccurrence-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedOccurrence">
            <body>&lt;p>The &lt;code>ownedOccurrences&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>OccurrenceUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedOccurrence-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedOccurrence = nestedUsage->selectByKind(OccurrenceUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPart" name="deriveUsageNestedPart" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPart-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPart">
            <body>&lt;p>The &lt;code>ownedParts&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>PartUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPart-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedPart = nestedUsage->selectByKind(PartUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPort" name="deriveUsageNestedPort" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPort-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPort">
            <body>&lt;p>The &lt;code>ownedPorts&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>PortUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedPort-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedPort = nestedUsage->selectByKind(PortUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedReference" name="deriveUsageNestedReference" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedReference">
            <body>&lt;p>The &lt;code>ownedReferences&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ReferenceUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedReference = nestedUsage->selectByKind(ReferenceUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRendering" name="deriveUsageNestedRendering" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRendering-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRendering">
            <body>&lt;p>The &lt;code>ownedRenderings&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>RenderingUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedRendering = nestedUsage->selectByKind(RenderingUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRequirement" name="deriveUsageNestedRequirement" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRequirement-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRequirement">
            <body>&lt;p>The &lt;code>ownedRequirements&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>RequirementUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedRequirement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedRequirement = nestedUsage->selectByKind(RequirementUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedState" name="deriveUsageNestedState" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedState-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedState">
            <body>&lt;p>The &lt;code>ownedStates&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>StateUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedState-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedState = nestedUsage->selectByKind(StateUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedTransition" name="deriveUsageNestedTransition" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedTransition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedTransition">
            <body>&lt;p>The &lt;code>ownedTransitions&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>TransitionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedTransition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedTransition = nestedUsage->selectByKind(TransitionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUsage" name="deriveUsageNestedUsage" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUsage">
            <body>&lt;p>The &lt;code>ownedUsages&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedFeatures&lt;/code> that are &lt;code>Usages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUsage-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedUsage = ownedFeature->selectByKind(Usage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUseCase" name="deriveUsageNestedUseCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUseCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUseCase">
            <body>&lt;p>The &lt;code>ownedUseCases&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>UseCaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedUseCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedUseCase = nestedUsage->selectByKind(UseCaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedVerificationCase" name="deriveUsageNestedVerificationCase" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedVerificationCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedVerificationCase">
            <body>&lt;p>The &lt;code>ownedValidationCases&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ValidationCaseUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedVerificationCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedVerificationCase = nestedUsage->selectByKind(VerificationCaseUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedView" name="deriveUsageNestedView" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedView-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedView">
            <body>&lt;p>The &lt;code>ownedViews&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ViewUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedView-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedView = nestedUsage->selectByKind(ViewUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedViewpoint" name="deriveUsageNestedViewpoint" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedViewpoint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageNestedViewpoint">
            <body>&lt;p>The &lt;code>ownedViewpoints&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>ownedUsages&lt;/code> that are &lt;code>ViewpointUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageNestedViewpoint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>nestedViewpoint = nestedUsage->selectByKind(ViewpointUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageUsage" name="deriveUsageUsage" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-deriveUsageUsage">
            <body>&lt;p>The &lt;code>usages&lt;/code> of a &lt;code>Usage&lt;/code> are all its &lt;code>features&lt;/code> that are &lt;code>Usages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-deriveUsageUsage-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>usage = feature->selectByKind(Usage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageOwningType" name="validateUsageOwningType" visibility="public" constrainedElement="Systems-DefinitionAndUsage-Usage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageOwningType-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-validateUsageOwningType">
            <body>&lt;p>If a &lt;code>Usage&lt;/code> has an &lt;code>owningType&lt;/code>, it must be a &lt;code>Definition&lt;/code> or &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-validateUsageOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null implies
    (owningType.oclIsKindOf(Definition) or
     ownigType.oclIsKindOf(Usage))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-DefinitionAndUsage-Usage-_generalization.0" general="Core-Features-Feature"/>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-isReference" name="isReference" visibility="public" isDerived="true">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-isReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-isReference">
            <body>&lt;p>Whether this &lt;code>Usage&lt;/code> is a referential &lt;code>Usage&lt;/code>, that is, it has &lt;code>isComposite = false&lt;/code>.&lt;p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-isVariation" name="isVariation" visibility="public">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-isVariation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-isVariation">
            <body>&lt;p>Whether this &lt;code>Usage&lt;/code> is for a variation point or not. If true, then all the &lt;code>memberships&lt;/code> of the &lt;code>Usage&lt;/code> must be &lt;code>VariantMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-variant" name="variant" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Systems-DefinitionAndUsage-_packagedElement.35">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-variant-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-variant">
            <body>&lt;p>The &lt;code>Usages&lt;/code> which represent the variants of this &lt;code>Usage&lt;/code> as a variation point &lt;code>Usage&lt;/code>, if &lt;code>isVariation = true&lt;/code>. If &lt;code>isVariation = false&lt;/code>, then there must be no &lt;code>variants&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-variant-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-variant-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-variantMembership" name="variantMembership" visibility="public" type="Systems-DefinitionAndUsage-VariantMembership" aggregation="composite" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMembership" association="Systems-DefinitionAndUsage-_packagedElement.19">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-variantMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-variantMembership">
            <body>&lt;p>The &lt;code>ownedMemberships&lt;/code> of this &lt;code>Usage&lt;/code> that are &lt;code>VariantMemberships&lt;/code>. If &lt;code>isVariation = true&lt;/code>, then this must be all &lt;code>memberships&lt;/code> of the &lt;code>Usage&lt;/code>. If &lt;code>isVariation = false&lt;/code>, then &lt;code>variantMembership&lt;/code>must be empty.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-variantMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-variantMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-owningDefinition" name="owningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Core-Features-Feature-owningType Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition" association="Systems-DefinitionAndUsage-_packagedElement.7">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-owningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-owningDefinition">
            <body>&lt;p>The &lt;code>Definition&lt;/code> that owns this &lt;code>Usage&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-owningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-owningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-owningUsage" name="owningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-DefinitionAndUsage-_packagedElement.8">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-owningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-owningUsage">
            <body>&lt;p>The &lt;code>Usage&lt;/code> in which this &lt;code>Usage&lt;/code> is nested (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-owningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-owningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-definition" name="definition" visibility="public" type="Core-Classifiers-Classifier" isOrdered="true" isDerived="true" redefinedProperty="Core-Features-Feature-type" association="Systems-DefinitionAndUsage-_packagedElement.38">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-definition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-definition">
            <body>&lt;p>The &lt;code>Classifiers&lt;/code> that are the types of this &lt;code>Usage&lt;/code>. Nominally, these are &lt;code>Definitions&lt;/code>, but other kinds of Kernel &lt;code>Classifiers&lt;/code> are also allowed, to permit use of &lt;code>Classifiers&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-definition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-definition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-usage" name="usage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-feature" association="Systems-DefinitionAndUsage-_packagedElement.24">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-usage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-usage">
            <body>&lt;p>The &lt;code>Usages&lt;/code> that are &lt;code>features&lt;/code> of this &lt;code>Usage&lt;/code> (not necessarily owned).&lt;/p></body>
          </ownedComment>
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-usage-_ownedComment.1">
            <body></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-usage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-usage-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-directedUsage" name="directedUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-usage Core-Types-Type-directedFeature" association="Systems-DefinitionAndUsage-_packagedElement.26">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-directedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-directedUsage">
            <body>&lt;p>The &lt;code>usages&lt;/code> of this &lt;code>Usage&lt;/code> that are &lt;code>directedFeatures&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-directedUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-directedUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedUsage" name="nestedUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature Systems-DefinitionAndUsage-Usage-usage" association="Systems-DefinitionAndUsage-_packagedElement.8">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedUsage">
            <body>&lt;p>The &lt;code>Usages&lt;/code> that are &lt;code>ownedFeatures&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedReference" name="nestedReference" visibility="public" type="Systems-DefinitionAndUsage-ReferenceUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedUsage" association="Systems-DefinitionAndUsage-_packagedElement.22">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedReference">
            <body>&lt;p>The &lt;code>ReferenceUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedReference-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedReference-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedAttribute" name="nestedAttribute" visibility="public" type="Systems-Attributes-AttributeUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedUsage" association="Systems-DefinitionAndUsage-_packagedElement.36">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedAttribute-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedAttribute">
            <body>&lt;p>The code>AttributeUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAttribute-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAttribute-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedEnumeration" name="nestedEnumeration" visibility="public" type="Systems-Enumerations-EnumerationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedAttribute" association="Systems-DefinitionAndUsage-_packagedElement.53">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedEnumeration-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedEnumeration">
            <body>&lt;p>The code>EnumerationUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedEnumeration-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedEnumeration-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedOccurrence" name="nestedOccurrence" visibility="public" type="Systems-Occurrences-OccurrenceUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedUsage" association="Systems-DefinitionAndUsage-_packagedElement.59">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedOccurrence-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedOccurrence">
            <body>&lt;p>The &lt;code>OccurrenceUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedOccurrence-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedOccurrence-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedItem" name="nestedItem" visibility="public" type="Systems-Items-ItemUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedOccurrence" association="Systems-DefinitionAndUsage-_packagedElement.31">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedItem-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedItem">
            <body>&lt;p>The &lt;code>ItemUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedItem-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedItem-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedPart" name="nestedPart" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedItem" association="Systems-DefinitionAndUsage-_packagedElement.33">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedPart-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedPart">
            <body>&lt;p>The &lt;code>PartUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedPart-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedPart-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedPort" name="nestedPort" visibility="public" type="Systems-Ports-PortUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedUsage" association="Systems-DefinitionAndUsage-_packagedElement.2">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedPort-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedPort">
            <body>&lt;p>The &lt;code>PortUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedPort-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedPort-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedConnection" name="nestedConnection" visibility="public" type="Systems-Connections-ConnectorAsUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedPart" association="Systems-DefinitionAndUsage-_packagedElement.34">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedConnection-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedConnection">
            <body>&lt;p>The &lt;code>ConnectorAsUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>. Note that this list includes &lt;code>BindingConnectorAsUsages&lt;/code> and &lt;code>SuccessionAsUsages&lt;/code>, even though these are &lt;code>ConnectorAsUsages&lt;/code> but not &lt;code>ConnectionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedConnection-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedConnection-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedFlow" name="nestedFlow" visibility="public" type="Systems-Connections-FlowConnectionUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedConnection" association="Systems-DefinitionAndUsage-_packagedElement.60">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedFlow-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedFlow">
            <body>&lt;p>The code>FlowConnectionUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedFlow-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedFlow-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedInterface" name="nestedInterface" visibility="public" type="Systems-Interfaces-InterfaceUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedConnection" association="Systems-DefinitionAndUsage-_packagedElement.21">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedInterface-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedInterface">
            <body>&lt;p>The &lt;code>InterfaceUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedInterface-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedInterface-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedAllocation" name="nestedAllocation" visibility="public" type="Systems-Allocations-AllocationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedConnection" association="Systems-DefinitionAndUsage-_packagedElement.55">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedAllocation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedAllocation">
            <body>&lt;p>The &lt;code>AllocationUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAllocation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAllocation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedAction" name="nestedAction" visibility="public" type="Systems-Actions-ActionUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedOccurrence" association="Systems-DefinitionAndUsage-_packagedElement.5">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedAction-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedAction">
            <body>&lt;p>The &lt;code>ActionUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedState" name="nestedState" visibility="public" type="Systems-States-StateUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedAction" association="Systems-DefinitionAndUsage-_packagedElement.11">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedState-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedState">
            <body>&lt;p>The &lt;code>StateUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedState-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedState-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedTransition" name="nestedTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedUsage" association="Systems-DefinitionAndUsage-_packagedElement.15">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedTransition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedTransition">
            <body>&lt;p>The &lt;code>TransitionUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedTransition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedCalculation" name="nestedCalculation" visibility="public" type="Systems-Calculations-CalculationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedAction" association="Systems-Calculations-_packagedElement.5">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedCalculation-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedCalculation">
            <body>&lt;p>The &lt;code>CalculationUsage&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedCalculation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedCalculation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedConstraint" name="nestedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedOccurrence" association="Systems-DefinitionAndUsage-_packagedElement.12">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedConstraint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedConstraint">
            <body>&lt;p>The &lt;code>ConstraintUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedConstraint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedConstraint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedRequirement" name="nestedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedConstraint" association="Systems-DefinitionAndUsage-_packagedElement.17">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedRequirement-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedRequirement">
            <body>&lt;p>The &lt;code>RequirementUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedRequirement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedConcern" name="nestedConcern" visibility="public" type="Systems-Requirements-ConcernUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedRequirement" association="Systems-DefinitionAndUsage-_packagedElement.56">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedConcern-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedConcern">
            <body>&lt;p>The &lt;code>ConcernUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedConcern-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedConcern-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedCase" name="nestedCase" visibility="public" type="Systems-Cases-CaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedCalculation" association="Systems-Cases-_packagedElement.1">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedCase">
            <body>&lt;p>The &lt;code>CaseUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedAnalysisCase" name="nestedAnalysisCase" visibility="public" type="Systems-AnalysisCases-AnalysisCaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedCase" association="Systems-DefinitionAndUsage-_packagedElement.27">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedAnalysisCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedAnalysisCase">
            <body>&lt;p>The &lt;code>AnalysisCaseUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAnalysisCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedAnalysisCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedVerificationCase" name="nestedVerificationCase" visibility="public" type="Systems-VerificationCases-VerificationCaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedCase" association="Systems-DefinitionAndUsage-_packagedElement.44">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedVerificationCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedVerificationCase">
            <body>&lt;p>The &lt;code>VerificationCaseUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedVerificationCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedVerificationCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedUseCase" name="nestedUseCase" visibility="public" type="Systems-UseCases-UseCaseUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedCase" association="Systems-DefinitionAndUsage-_packagedElement.61">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedUseCase-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedUseCase">
            <body>&lt;p>The &lt;code>UseCaseUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedUseCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedUseCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedView" name="nestedView" visibility="public" type="Systems-Views-ViewUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedPart" association="Systems-DefinitionAndUsage-_packagedElement.51">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedView-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedView">
            <body>&lt;p>The &lt;code>ViewUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedView-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedViewpoint" name="nestedViewpoint" visibility="public" type="Systems-Views-ViewpointUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedRequirement" association="Systems-DefinitionAndUsage-_packagedElement.45">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedViewpoint-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedViewpoint">
            <body>&lt;p>The &lt;code>ViewpointUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedViewpoint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedViewpoint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedRendering" name="nestedRendering" visibility="public" type="Systems-Views-RenderingUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedPart" association="Systems-DefinitionAndUsage-_packagedElement.49">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedRendering-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedRendering">
            <body>&lt;p>The &lt;code>RenderingUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this &lt;code>Usage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedRendering-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedRendering-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-Usage-nestedMetadata" name="nestedMetadata" visibility="public" type="Systems-Metadata-MetadataUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedItem" association="Systems-DefinitionAndUsage-_packagedElement.64">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-nestedMetadata-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-nestedMetadata">
            <body>&lt;p>The &lt;code>MetadataUsages&lt;/code> that are &lt;code>nestedUsages&lt;/code> of this of this &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-nestedMetadata-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-nestedMetadata-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-DefinitionAndUsage-Usage-namingFeature" name="namingFeature" visibility="public" bodyCondition="Systems-DefinitionAndUsage-Usage-namingFeature-unnamed1" redefinedOperation="Core-Features-Feature-namingFeature">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-Usage-namingFeature-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-Usage-namingFeature">
            <body>&lt;p>If this &lt;code>Usage&lt;/code> is a variant, then its naming &lt;code>Feature&lt;/code> is the &lt;code>referencedFeature&lt;/code> of its &lt;code>ownedReferenceSubsetting&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-DefinitionAndUsage-Usage-namingFeature-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-Usage-namingFeature-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if not owningMembership.oclIsKindOf(VariantMembership) then
    self.oclAsType(Feature).namingFeature()
else if ownedReferenceSubsetting = null then null
else ownedReferenceSubsetting.referencedFeature
endif endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-DefinitionAndUsage-Usage-namingFeature-_ownedParameter.0" name="" visibility="public" type="Core-Features-Feature" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-Usage-namingFeature-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-Usage-namingFeature-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.10" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedState Systems-DefinitionAndUsage-_packagedElement.10-stateOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.10-stateOwningDefinition" name="stateOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.10">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.10-stateOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.10-stateOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedState&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.10-stateOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.10-stateOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.11" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedState Systems-DefinitionAndUsage-_packagedElement.11-stateOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.11-stateOwningUsage" name="stateOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.11">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.11-stateOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.11-stateOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedState&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.11-stateOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.11-stateOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.12" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedConstraint Systems-DefinitionAndUsage-_packagedElement.12-constraintOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.12-constraintOwningUsage" name="constraintOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.12">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.12-constraintOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.12-constraintOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedConstraint&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.12-constraintOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.12-constraintOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.13" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedTransition Systems-DefinitionAndUsage-_packagedElement.13-transitionOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.13-transitionOwningDefinition" name="transitionOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.13">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.13-transitionOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.13-transitionOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedTransition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.13-transitionOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.13-transitionOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.14" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedConstraint Systems-DefinitionAndUsage-_packagedElement.14-constraintOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.14-constraintOwningDefinition" name="constraintOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.14">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.14-constraintOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.14-constraintOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedConstraint&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.14-constraintOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.14-constraintOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.15" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedTransition Systems-DefinitionAndUsage-_packagedElement.15-transitionOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.15-transitionOwningUsage" name="transitionOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-DefinitionAndUsage-_packagedElement.15">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.15-transitionOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.15-transitionOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedTransition&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.15-transitionOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.15-transitionOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.16" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedRequirement Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition" name="requirementOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.14-constraintOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.16">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.17" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedRequirement Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage" name="requirementOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.12-constraintOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.17">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedRequirement&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-DefinitionAndUsage-ReferenceUsage" name="ReferenceUsage" visibility="public">
        <ownedComment xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-ReferenceUsage">
          <body>&lt;p>A &lt;code>ReferenceUsage&lt;/code> is a &lt;code>Usage&lt;/code> that specifies a non-compositional (&lt;code>isComposite = false&lt;/code>) reference to something. The &lt;code>definition&lt;/code> of a &lt;code>ReferenceUsage&lt;/code> can be any kind of &lt;code>Classifier&lt;/code>, with the default being the top-level &lt;code>Classifier&lt;/code> &lt;code>&lt;em>Base::Anything&lt;/em>&lt;/code> from the Kernel Semantic Library. This allows the specification of a generic reference without distinguishing if the thing referenced is an attribute value, item, action, etc.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-validateReferenceUsageIsReference" name="validateReferenceUsageIsReference" visibility="public" constrainedElement="Systems-DefinitionAndUsage-ReferenceUsage">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-validateReferenceUsageIsReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-ReferenceUsage-validateReferenceUsageIsReference">
            <body>&lt;p>A &lt;code>ReferenceUsage&lt;/code> is always referential.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-validateReferenceUsageIsReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isReference</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-_generalization.0" general="Systems-DefinitionAndUsage-Usage"/>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-isReference" name="isReference" visibility="public" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-Usage-isReference">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-isReference-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-ReferenceUsage-isReference">
            <body>&lt;p>Always &lt;code>true&lt;/code> for a &lt;code>ReferenceUsage&lt;/code>.&lt;/code></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-isReference-_defaultValue" name="" visibility="public" value="true"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature" name="namingFeature" visibility="public" bodyCondition="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature-unnamed1" redefinedOperation="Systems-DefinitionAndUsage-Usage-namingFeature">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature">
            <body>&lt;p>If this &lt;code>ReferenceUsage&lt;/code> is the &lt;em>&lt;code>payload&lt;/code>&lt;/em> &lt;code>parameter&lt;/code> of a &lt;code>TransitionUsage&lt;/code>, then its naming &lt;code>Feature&lt;/code> is the &lt;code>payloadParameter&lt;/code> of the &lt;code>triggerAction&lt;/code> of that &lt;code>TransitionUsage&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if owningType &lt;> null and owningType.oclIsKindOf(TransitionUsage) and
    owningType.oclAsType(TransitionUsage).inputParameter(2) = self then
    owningType.oclAsType(TransitionUsage).triggerPayloadParameter()
else self.oclAsType(Usage).namingFeature()
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature-_ownedParameter.0" name="" visibility="public" type="Core-Features-Feature" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-ReferenceUsage-namingFeature-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.19" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-variantMembership Systems-DefinitionAndUsage-_packagedElement.19-owningVariationUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.19-owningVariationUsage" name="owningVariationUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Root-Namespaces-Membership-membershipOwningNamespace" association="Systems-DefinitionAndUsage-_packagedElement.19">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.19-owningVariationUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.19-owningVariationUsage">
            <body>&lt;p>The owning Definition of this VariantMembership, which must have &lt;code>isVariation&lt;/code> = true.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.19-owningVariationUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.19-owningVariationUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.20" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedItem Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition" name="itemOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.20">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedItem&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.21" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedInterface Systems-DefinitionAndUsage-_packagedElement.21-interfaceOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.21-interfaceOwningUsage" name="interfaceOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.21">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.21-interfaceOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.21-interfaceOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedInterface&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.21-interfaceOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.21-interfaceOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.22" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedReference Systems-DefinitionAndUsage-_packagedElement.22-referenceOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.22-referenceOwningUsage" name="referenceOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-DefinitionAndUsage-_packagedElement.22">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.22-referenceOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.22-referenceOwningUsage">
            <body>&lt;p>The Usage that owns the &lt;code>nestedReference&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.22-referenceOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.22-referenceOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.23" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-_packagedElement.23-analysisCaseOwningDefinition Systems-DefinitionAndUsage-Definition-ownedAnalysisCase">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.23-analysisCaseOwningDefinition" name="analysisCaseOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.23">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.23-analysisCaseOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.23-analysisCaseOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedAnalysisCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.23-analysisCaseOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.23-analysisCaseOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.24" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage Systems-DefinitionAndUsage-Usage-usage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage" name="featuringUsage" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Systems-DefinitionAndUsage-_packagedElement.24">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage">
            <body>&lt;p>The Usages that feature a certain Usage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.25" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedPart Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition" name="partOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.25">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedPart&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.26" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-directedUsage Systems-DefinitionAndUsage-_packagedElement.26-_202FusageWithDirectedUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.26-_202FusageWithDirectedUsage" name=" /usageWithDirectedUsage" type="Systems-DefinitionAndUsage-Usage" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage Core-Types-_packagedElement.24-typeWithDirectedFeature" association="Systems-DefinitionAndUsage-_packagedElement.26">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.26-_202FusageWithDirectedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.26-_202FusageWithDirectedUsage">
            <body>&lt;p>The Usages that have a certain Usage as a &lt;code>flow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.26-_202FusageWithDirectedUsage-_ownedComment.1">
            <body></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.26-_202FusageWithDirectedUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.26-_202FusageWithDirectedUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.27" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-_packagedElement.27-analysisCaseOwningUsage Systems-DefinitionAndUsage-Usage-nestedAnalysisCase">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.27-analysisCaseOwningUsage" name="analysisCaseOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.27-analysisCaseOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.27">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.27-analysisCaseOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.27-analysisCaseOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedAnalysisCase&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.27-analysisCaseOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.27-analysisCaseOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.28" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedInterface Systems-DefinitionAndUsage-_packagedElement.28-interfaceOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.28-interfaceOwningDefinition" name="interfaceOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.28">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.28-interfaceOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.28-interfaceOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedInterface&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.28-interfaceOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.28-interfaceOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.29" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-variant Systems-DefinitionAndUsage-_packagedElement.29-owningVariationDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.29-owningVariationDefinition" name="owningVariationDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Root-Elements-Element-owningNamespace" association="Systems-DefinitionAndUsage-_packagedElement.29">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.29-owningVariationDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.29-owningVariationDefinition">
            <body>&lt;p>The variation point Definition that for which this Usage represents a variant, derived as the &lt;code>owningVariationDefinition&lt;/code> of the &lt;code>owningVariantMembership&lt;/code> of the Usage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.29-owningVariationDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.29-owningVariationDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.30" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedReference Systems-DefinitionAndUsage-_packagedElement.30-referenceOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.30-referenceOwningDefinition" name="referenceOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.30">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.30-referenceOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.30-referenceOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedReference&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.30-referenceOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.30-referenceOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.31" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedItem Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage" name="itemOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.31">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedItem&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.32" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedAction Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition" name="actionOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.32">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.33" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedPart Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage" name="partOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.33">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedPart&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.34" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedConnection Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage" name="connectionOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.34">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedUsage&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.35" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-variant Systems-DefinitionAndUsage-_packagedElement.35-owningVariationUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.35-owningVariationUsage" name="owningVariationUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Root-Elements-Element-owningNamespace" association="Systems-DefinitionAndUsage-_packagedElement.35">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.35-owningVariationUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.35-owningVariationUsage">
            <body>&lt;p>The variation point Usage that for which this Usage represents a variant, derived as the &lt;code>owningVariationUsage&lt;/code> of the &lt;code>owningVariantMembership&lt;/code> of the Usage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.35-owningVariationUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.35-owningVariationUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.36" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedAttribute Systems-DefinitionAndUsage-_packagedElement.36-attributeOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.36-attributeOwningUsage" name="attributeOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-DefinitionAndUsage-_packagedElement.36">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.36-attributeOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.36-attributeOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedAttribute&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.36-attributeOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.36-attributeOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.37" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedAttribute Systems-DefinitionAndUsage-_packagedElement.37-attributeOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.37-attributeOwningDefinition" name="attributeOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.37">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.37-attributeOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.37-attributeOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedAttribute&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.37-attributeOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.37-attributeOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.38" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-definition Systems-DefinitionAndUsage-_packagedElement.38-definedUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.38-definedUsage" name="definedUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Core-Features-_packagedElement.2-typedFeature" association="Systems-DefinitionAndUsage-_packagedElement.38">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.38-definedUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.38-definedUsage">
            <body>&lt;p>The Usages that have a certain Classifier as a &lt;code>definition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.38-definedUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.38-definedUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.39" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedConnection Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition" name="connectionOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.39">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedConnection&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.40" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition Systems-DefinitionAndUsage-Definition-ownedCase">
        <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.40-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.40">
          <body>&lt;p>The Definition that owns this CaseUsage (if any).&lt;/p></body>
        </ownedComment>
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition" name="caseOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-Calculations-_packagedElement.4-calculationOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.40">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-DefinitionAndUsage-VariantMembership" name="VariantMembership" visibility="public">
        <ownedComment xmi:id="Systems-DefinitionAndUsage-VariantMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-VariantMembership">
          <body>&lt;p>A &lt;code>VariantMembership&lt;/code> is a &lt;code>Membership&lt;/code> between a variation point &lt;code>Definition&lt;/code> or &lt;code>Usage&lt;/code> and a &lt;code>Usage&lt;/code> that represents a variant in the context of that variation. The &lt;code>membershipOwningNamespace&lt;/code> for the &lt;code>VariantMembership&lt;/code> must be either a Definition or a &lt;code>Usage&lt;/code> with &lt;code>isVariation = true&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-DefinitionAndUsage-VariantMembership-validateVariantMembershipOwningNamespace" name="validateVariantMembershipOwningNamespace" visibility="public" constrainedElement="Systems-DefinitionAndUsage-VariantMembership">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-VariantMembership-validateVariantMembershipOwningNamespace-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-VariantMembership-validateVariantMembershipOwningNamespace">
            <body>&lt;p>The &lt;code>membershipOwningNamespace&lt;/code> of a &lt;code>VariantMembership&lt;/code> must be a variation-point &lt;code>Definition&lt;/code> or &lt;code>Usage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-DefinitionAndUsage-VariantMembership-validateVariantMembershipOwningNamespace-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>membershipOwningNamespace.oclIsKindOf(Definition) and
    membershipOwningNamespace.oclAsType(Definition).isVariation or
membershipOwningNamespace.oclIsKindOf(Usage) and
    membershipOwningNamespace.oclAsType(Usage).isVariation
</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-DefinitionAndUsage-VariantMembership-_generalization.0" general="Root-Namespaces-OwningMembership"/>
        <ownedAttribute xmi:id="Systems-DefinitionAndUsage-VariantMembership-ownedVariantUsage" name="ownedVariantUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" aggregation="composite" isDerived="true" redefinedProperty="Root-Namespaces-OwningMembership-ownedMemberElement" association="Systems-DefinitionAndUsage-_packagedElement.42">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-VariantMembership-ownedVariantUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-VariantMembership-ownedVariantUsage">
            <body>&lt;p>The &lt;code>Usage&lt;/code> that represents a variant in the context of the &lt;code>owningVariationDefinition&lt;/code> or &lt;code>owningVariationUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-VariantMembership-ownedVariantUsage-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-VariantMembership-ownedVariantUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.42" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-VariantMembership-ownedVariantUsage Systems-DefinitionAndUsage-_packagedElement.42-owningVariantMembership">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.42-owningVariantMembership" name="owningVariantMembership" visibility="public" type="Systems-DefinitionAndUsage-VariantMembership" isDerived="true" subsettedProperty="Root-Elements-Element-owningMembership" association="Systems-DefinitionAndUsage-_packagedElement.42">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.42-owningVariantMembership-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.42-owningVariantMembership">
            <body>&lt;p>The VariantMembership that owns this Usage, if the Usage represents a variant in the context of some variation point Definition or Usage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.42-owningVariantMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.42-owningVariantMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.43" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-variantMembership Systems-DefinitionAndUsage-_packagedElement.43-owningVariationDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.43-owningVariationDefinition" name="owningVariationDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Root-Namespaces-Membership-membershipOwningNamespace" association="Systems-DefinitionAndUsage-_packagedElement.43">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.43-owningVariationDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.43-owningVariationDefinition">
            <body>&lt;p>The owning Definition of this VariantMembership, which must have &lt;code>isVariation&lt;/code> = true.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.43-owningVariationDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.43-owningVariationDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.44" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedVerificationCase Systems-DefinitionAndUsage-_packagedElement.44-verificationCaseOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.44-verificationCaseOwningUsage" name="verificationCaseOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-Cases-_packagedElement.1-caseOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.44">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.44-verificationCaseOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.44-verificationCaseOwningUsage">
            <body>&lt;p>The Usage that owns a certain &lt;code>nestedVerificationCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.44-verificationCaseOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.44-verificationCaseOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.45" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedViewpoint Systems-DefinitionAndUsage-_packagedElement.45-viewpointOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.45-viewpointOwningUsage" name="viewpointOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.45">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.45-viewpointOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.45-viewpointOwningUsage">
            <body>&lt;p>The Usage that owns a certain &lt;code>nestedViewpoint&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.45-viewpointOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.45-viewpointOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.46" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedView Systems-DefinitionAndUsage-_packagedElement.46-viewOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.46-viewOwningDefinition" name="viewOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.46">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.46-viewOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.46-viewOwningDefinition">
            <body>&lt;p>The Definition that owns a certain &lt;code>ownedView&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.46-viewOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.46-viewOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.47" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedRendering Systems-DefinitionAndUsage-_packagedElement.47-redenderingOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.47-redenderingOwningDefinition" name="redenderingOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.47">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.47-redenderingOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.47-redenderingOwningDefinition">
            <body>&lt;p>The Definition that owns a certain &lt;code>ownedRendering&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.47-redenderingOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.47-redenderingOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.48" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedViewpoint Systems-DefinitionAndUsage-_packagedElement.48-viewpointOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.48-viewpointOwningDefinition" name="viewpointOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.48">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.48-viewpointOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.48-viewpointOwningDefinition">
            <body>&lt;p>The Definition that owns a certain &lt;code>ownedViewpoint&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.48-viewpointOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.48-viewpointOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.49" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedRendering Systems-DefinitionAndUsage-_packagedElement.49-renderingOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.49-renderingOwningUsage" name="renderingOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.49">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.49-renderingOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.49-renderingOwningUsage">
            <body>&lt;p>The Usage that owns a certain &lt;code>nestedRendering&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.49-renderingOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.49-renderingOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.50" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedVerificationCase Systems-DefinitionAndUsage-_packagedElement.50-verificationCaseOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.50-verificationCaseOwningDefinition" name="verificationCaseOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.50">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.50-verificationCaseOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.50-verificationCaseOwningDefinition">
            <body>&lt;p>The Definition that owns a certain &lt;code>ownedVerificationCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.50-verificationCaseOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.50-verificationCaseOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.51" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedView Systems-DefinitionAndUsage-_packagedElement.51-viewOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.51-viewOwningUsage" name="viewOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.51">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.51-viewOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.51-viewOwningUsage">
            <body>&lt;p>The Usage that owns a certain &lt;code>nestedView&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.51-viewOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.51-viewOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.52" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedEnumeration Systems-DefinitionAndUsage-_packagedElement.52-enumerationOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.52-enumerationOwningDefinition" name="enumerationOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.37-attributeOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.52">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.52-enumerationOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.52-enumerationOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedEnumeration&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.52-enumerationOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.52-enumerationOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.53" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedEnumeration Systems-DefinitionAndUsage-_packagedElement.53-enumerationOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.53-enumerationOwningUsage" name="enumerationOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.36-attributeOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.53">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.53-enumerationOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.53-enumerationOwningUsage">
            <body>&lt;p>The Usage that owns the &lt;code>nestedEnumeration&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.53-enumerationOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.53-enumerationOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.54" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedAllocation Systems-DefinitionAndUsage-_packagedElement.54-allocationOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.54-allocationOwningDefinition" name="allocationOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.54">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.54-allocationOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.54-allocationOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedAllocation&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.54-allocationOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.54-allocationOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.55" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedAllocation Systems-DefinitionAndUsage-_packagedElement.55-allocationOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.55-allocationOwningUsage" name="allocationOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.55">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.55-allocationOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.55-allocationOwningUsage">
            <body>&lt;p>The Usage that owns the &lt;code>nestedAllocation&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.55-allocationOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.55-allocationOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.56" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedConcern Systems-DefinitionAndUsage-_packagedElement.56-concernOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.56-concernOwningUsage" name="concernOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.56">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.56-concernOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.56-concernOwningUsage">
            <body>&lt;p>The Usage that owns the &lt;code>nestedConcern&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.56-concernOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.56-concernOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.57" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedConcern Systems-DefinitionAndUsage-_packagedElement.57-concernOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.57-concernOwningDefinition" name="concernOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.16-requirementOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.57">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.57-concernOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.57-concernOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedConcern&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.57-concernOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.57-concernOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.58" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedOccurrence Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition" name="occurrenceOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.58">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedOccurrence&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.58-occurrenceOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.59" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedOccurrence Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage" name="occurrenceOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-DefinitionAndUsage-_packagedElement.59">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedOccurrence&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.59-occurrenceOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.60" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedFlow Systems-DefinitionAndUsage-_packagedElement.60-flowOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.60-flowOwningUsage" name="flowOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.34-connectionOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.60">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.60-flowOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.60-flowOwningUsage">
            <body>&lt;p>The Usage that owns the &lt;code>nestedFlow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.60-flowOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.60-flowOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.61" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedUseCase Systems-DefinitionAndUsage-_packagedElement.61-useCaseOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.61-useCaseOwningUsage" name="useCaseOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-Cases-_packagedElement.1-caseOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.61">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.61-useCaseOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.61-useCaseOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedUseCase&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.61-useCaseOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.61-useCaseOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.62" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedFlow Systems-DefinitionAndUsage-_packagedElement.62-flowOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.62-flowOwningDefinition" name="flowOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.39-connectionOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.62">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.62-flowOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.62-flowOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedFlow&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.62-flowOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.62-flowOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.63" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedUseCase Systems-DefinitionAndUsage-_packagedElement.63-useCaseOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.63-useCaseOwningDefinition" name="useCaseOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.40-caseOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.63">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.63-useCaseOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.63-useCaseOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedUseCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.63-useCaseOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.63-useCaseOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.64" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Usage-nestedMetadata Systems-DefinitionAndUsage-_packagedElement.64-metadataOwningUsage">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.64-metadataOwningUsage" name="metadataOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.31-itemOwningUsage" association="Systems-DefinitionAndUsage-_packagedElement.64">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.64-metadataOwningUsage-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.64-metadataOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedMetadata&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.64-metadataOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.64-metadataOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-DefinitionAndUsage-_packagedElement.65" name="" visibility="private" memberEnd="Systems-DefinitionAndUsage-Definition-ownedMetadata Systems-DefinitionAndUsage-_packagedElement.65-metadataOwningDefinition">
        <ownedEnd xmi:id="Systems-DefinitionAndUsage-_packagedElement.65-metadataOwningDefinition" name="metadataOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.20-itemOwningDefinition" association="Systems-DefinitionAndUsage-_packagedElement.65">
          <ownedComment xmi:id="Systems-DefinitionAndUsage-_packagedElement.65-metadataOwningDefinition-_ownedComment.0" annotatedElement="Systems-DefinitionAndUsage-_packagedElement.65-metadataOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedMetadata&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-DefinitionAndUsage-_packagedElement.65-metadataOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-DefinitionAndUsage-_packagedElement.65-metadataOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Parts" name="Parts" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Parts-PartDefinition" name="PartDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Parts-PartDefinition-_ownedComment.0" annotatedElement="Systems-Parts-PartDefinition">
          <body>&lt;p>A &lt;code>PartDefinition&lt;/code> is an &lt;code>ItemDefinition&lt;/code> of a &lt;code>Class&lt;/code> of systems or parts of systems. Note that all parts may be considered items for certain purposes, but not all items are parts that can perform actions within a system.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Parts-PartDefinition-checkPartDefinitionSpecialization" name="checkPartDefinitionSpecialization" visibility="public" constrainedElement="Systems-Parts-PartDefinition">
          <ownedComment xmi:id="Systems-Parts-PartDefinition-checkPartDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Parts-PartDefinition-checkPartDefinitionSpecialization">
            <body>&lt;/p>A &lt;code>PartDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>PartDefinition&lt;code> &lt;em>&lt;code>Parts::Part&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Parts-PartDefinition-checkPartDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Parts::Part&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Parts-PartDefinition-_generalization.0" general="Systems-Items-ItemDefinition"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Parts-PartUsage" name="PartUsage" visibility="public">
        <ownedComment xmi:id="Systems-Parts-PartUsage-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage">
          <body>&lt;p>A &lt;code>PartUsage&lt;/code> is a usage of a &lt;code>PartDefinition&lt;/code> to represent a system or a part of a system. At least one of the &lt;code>itemDefinitions&lt;/code> of the &lt;code>PartUsage&lt;/code> must be a &lt;code>PartDefinition&lt;/code>.&lt;/p>

&lt;p>A &lt;code>PartUsage&lt;/code> must subset, directly or indirectly, the base &lt;code>PartUsage&lt;/code> &lt;em>&lt;code>parts&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Parts-PartUsage-derivePartUsagePartDefinition" name="derivePartUsagePartDefinition" visibility="public" constrainedElement="Systems-Parts-PartUsage">
          <ownedComment xmi:id="Systems-Parts-PartUsage-derivePartUsagePartDefinition-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage-derivePartUsagePartDefinition">
            <body>&lt;p>The &lt;code>partDefinitions&lt;/code> of an &lt;code>PartUsage&lt;/code> are those &lt;code>itemDefinitions&lt;/code> that are &lt;code>PartDefinitions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Parts-PartUsage-derivePartUsagePartDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>itemDefinition->selectByKind(PartDefinition)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Parts-PartUsage-validatePartUsagePartDefinition" name="validatePartUsagePartDefinition" visibility="public" constrainedElement="Systems-Parts-PartUsage">
          <ownedComment xmi:id="Systems-Parts-PartUsage-validatePartUsagePartDefinition-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage-validatePartUsagePartDefinition">
            <body>&lt;p>At least one of the &lt;code>itemDefinitions&lt;/code> of a &lt;code>PartUsage&lt;/code> must be a &lt;code>PartDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Parts-PartUsage-validatePartUsagePartDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>partDefinition->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Parts-PartUsage-checkPartUsageSpecialization" name="checkPartUsageSpecialization" visibility="public" constrainedElement="Systems-Parts-PartUsage">
          <ownedComment xmi:id="Systems-Parts-PartUsage-checkPartUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage-checkPartUsageSpecialization">
            <body>&lt;p>A &lt;code>PartUsage&lt;/code> must directly or indirectly specialize the &lt;code>PartUsage&lt;/code> &lt;em>&lt;code>Parts::parts&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Parts-PartUsage-checkPartUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Parts::parts&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Parts-PartUsage-checkPartUsageSubpartSpecialization" name="checkPartUsageSubpartSpecialization" visibility="public" constrainedElement="Systems-Parts-PartUsage">
          <ownedComment xmi:id="Systems-Parts-PartUsage-checkPartUsageSubpartSpecialization-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage-checkPartUsageSubpartSpecialization">
            <body>&lt;p>A composite &lt;code>PartUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>ItemDefinition&lt;/code> or &lt;code>ItemUsage&lt;/code> must directly or indirectly specialize the  &lt;code>PartUsage&lt;/code> &lt;em>&lt;code>Items::Item::subparts&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Parts-PartUsage-checkPartUsageSubpartSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(ItemDefinition) or
 owningType.oclIsKindOf(ItemUsage)) implies
    specializesFromLibrary(&quot;Items::Item::subparts&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Parts-PartUsage-checkPartUsageActorSpecialization" name="checkPartUsageActorSpecialization" visibility="public" constrainedElement="Systems-Parts-PartUsage">
          <ownedComment xmi:id="Systems-Parts-PartUsage-checkPartUsageActorSpecialization-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage-checkPartUsageActorSpecialization">
            <body>&lt;p>If a &lt;code>PartUsage&lt;/code> is owned via an &lt;code>ActorMembership&lt;/code>, then it must directly or indirectly specialize either &lt;code>&lt;em>Requirements::RequirementCheck::actors&lt;/em>&lt;/code> (if its &lt;code>owningType&lt;/code> is a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;/code> or &lt;code>&lt;em>Cases::Case::actors&lt;/em>&lt;/code> (otherwise).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Parts-PartUsage-checkPartUsageActorSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningFeatureMembership &lt;> null and
owningFeatureMembership.oclIsKindOf(ActorMembership) implies
    if owningType.oclIsKindOf(RequirementDefinition) or 
       owningType.oclIsKindOf(RequirementUsage)
    then specializesFromLibrary('Requirements::RequirementCheck::actors')
    else specializesFromLibrary('Cases::Case::actors')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Parts-PartUsage-checkPartUsageStakeholderSpecialization" name="checkPartUsageStakeholderSpecialization" visibility="public" constrainedElement="Systems-Parts-PartUsage">
          <ownedComment xmi:id="Systems-Parts-PartUsage-checkPartUsageStakeholderSpecialization-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage-checkPartUsageStakeholderSpecialization">
            <body>&lt;p>If a &lt;code>PartUsage&lt;/code> is owned via a &lt;code>StakeholderMembership&lt;/code>, then it must directly or indirectly specialize either &lt;code>&lt;em>Requirements::RequirementCheck::stakeholders&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Parts-PartUsage-checkPartUsageStakeholderSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningFeatureMembership &lt;> null and
owningFeatureMembership.oclIsKindOf(StakeholderMembership) implies
    specializesFromLibrary('Requirements::RequirementCheck::stakeholders')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Parts-PartUsage-_generalization.0" general="Systems-Items-ItemUsage"/>
        <ownedAttribute xmi:id="Systems-Parts-PartUsage-partDefinition" name="partDefinition" visibility="public" type="Systems-Parts-PartDefinition" isOrdered="true" isDerived="true" subsettedProperty="Systems-Items-ItemUsage-itemDefinition" association="Systems-Parts-_packagedElement.2">
          <ownedComment xmi:id="Systems-Parts-PartUsage-partDefinition-_ownedComment.0" annotatedElement="Systems-Parts-PartUsage-partDefinition">
            <body>&lt;p>The &lt;code>itemDefinitions&lt;/code> of this PartUsage that are PartDefinitions.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Parts-PartUsage-partDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Parts-PartUsage-partDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Parts-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Parts-PartUsage-partDefinition Systems-Parts-_packagedElement.2-definedPart">
        <ownedEnd xmi:id="Systems-Parts-_packagedElement.2-definedPart" name="definedPart" visibility="public" type="Systems-Parts-PartUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.4-definedItem" association="Systems-Parts-_packagedElement.2">
          <ownedComment xmi:id="Systems-Parts-_packagedElement.2-definedPart-_ownedComment.0" annotatedElement="Systems-Parts-_packagedElement.2-definedPart">
            <body>&lt;p>The PartUsages typed by a certain PartDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Parts-_packagedElement.2-definedPart-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Parts-_packagedElement.2-definedPart-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Interfaces" name="Interfaces" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Interfaces-_packagedElement.0" name="" visibility="private" memberEnd="Systems-Interfaces-InterfaceDefinition-interfaceEnd Systems-Interfaces-_packagedElement.0-interfaceDefinitionWithEnd">
        <ownedEnd xmi:id="Systems-Interfaces-_packagedElement.0-interfaceDefinitionWithEnd" name="interfaceDefinitionWithEnd" visibility="public" type="Systems-Interfaces-InterfaceDefinition" isDerived="true" subsettedProperty="Systems-Connections-_packagedElement.0-connectionDefinitionWithEnd" association="Systems-Interfaces-_packagedElement.0">
          <ownedComment xmi:id="Systems-Interfaces-_packagedElement.0-interfaceDefinitionWithEnd-_ownedComment.0" annotatedElement="Systems-Interfaces-_packagedElement.0-interfaceDefinitionWithEnd">
            <body>&lt;p>The InterfaceDefinitions that have a certain PortUsage as an &lt;code>interfaceEnd&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Interfaces-_packagedElement.0-interfaceDefinitionWithEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Interfaces-_packagedElement.0-interfaceDefinitionWithEnd-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Interfaces-InterfaceUsage" name="InterfaceUsage" visibility="public">
        <ownedComment xmi:id="Systems-Interfaces-InterfaceUsage-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceUsage">
          <body>&lt;p>An &lt;code>InterfaceUsage&lt;/code> is a Usage of an &lt;code>InterfaceDefinition&lt;/code> to represent an interface connecting parts of a system through specific ports.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageBinarySpecialization" name="checkInterfaceUsageBinarySpecialization" visibility="public" constrainedElement="Systems-Interfaces-InterfaceUsage">
          <ownedComment xmi:id="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageBinarySpecialization-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageBinarySpecialization">
            <body>&lt;p>A binary &lt;code>InterfaceUsage&lt;/code> must directly or indirectly specialize the &lt;code>InterfaceUsage&lt;/code> &lt;em>&lt;code>Interfaces::binaryInterfaces&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedEndFeature->size() = 2 implies
    specializesFromLibrary(&quot;Interfaces::binaryInterfaces&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageSpecialization" name="checkInterfaceUsageSpecialization" visibility="public" constrainedElement="Systems-Interfaces-InterfaceUsage">
          <ownedComment xmi:id="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageSpecialization">
            <body>&lt;p>An &lt;code>InterfaceUsage&lt;/code> must directly or indirectly specialize the &lt;code>InterfaceUsage&lt;/code> &lt;em>&lt;code>Interfaces::interfaces&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Interfaces-InterfaceUsage-checkInterfaceUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Interfaces::interfaces&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Interfaces-InterfaceUsage-_generalization.0" general="Systems-Connections-ConnectionUsage"/>
        <ownedAttribute xmi:id="Systems-Interfaces-InterfaceUsage-interfaceDefinition" name="interfaceDefinition" visibility="public" type="Systems-Interfaces-InterfaceDefinition" isDerived="true" redefinedProperty="Systems-Connections-ConnectionUsage-connectionDefinition" association="Systems-Interfaces-_packagedElement.2">
          <ownedComment xmi:id="Systems-Interfaces-InterfaceUsage-interfaceDefinition-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceUsage-interfaceDefinition">
            <body>&lt;p>The &lt;code>InterfaceDefinitions&lt;/code> that type this &lt;code>InterfaceUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Interfaces-InterfaceUsage-interfaceDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Interfaces-InterfaceUsage-interfaceDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Interfaces-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Interfaces-InterfaceUsage-interfaceDefinition Systems-Interfaces-_packagedElement.2-definedInterface">
        <ownedEnd xmi:id="Systems-Interfaces-_packagedElement.2-definedInterface" name="definedInterface" visibility="public" type="Systems-Interfaces-InterfaceUsage" isDerived="true" subsettedProperty="Systems-Connections-_packagedElement.3-definedConnection" association="Systems-Interfaces-_packagedElement.2">
          <ownedComment xmi:id="Systems-Interfaces-_packagedElement.2-definedInterface-_ownedComment.0" annotatedElement="Systems-Interfaces-_packagedElement.2-definedInterface">
            <body>&lt;p>The InterfaceUsages typed by a certain InterfaceDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Interfaces-_packagedElement.2-definedInterface-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Interfaces-_packagedElement.2-definedInterface-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Interfaces-InterfaceDefinition" name="InterfaceDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Interfaces-InterfaceDefinition-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceDefinition">
          <body>&lt;p>An &lt;code>InterfaceDefinition&lt;/code> is a &lt;code>ConnectionDefinition&lt;/code> all of whose ends are &lt;code>PortUsages&lt;/code>, defining an interface between elements that interact through such ports.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionSpecialization" name="checkInterfaceDefinitionSpecialization" visibility="public" constrainedElement="Systems-Interfaces-InterfaceDefinition">
          <ownedComment xmi:id="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionSpecialization">
            <body>&lt;p>An &lt;code>InterfaceDefinition&lt;/code> must directly or indirectly specialize the &lt;code>InterfaceDefinition&lt;/code> &lt;em>&lt;code>Interfaces::Interface&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Interfaces::Interface&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionBinarySpecialization" name="checkInterfaceDefinitionBinarySpecialization" visibility="public" constrainedElement="Systems-Interfaces-InterfaceDefinition">
          <ownedComment xmi:id="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionBinarySpecialization-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionBinarySpecialization">
            <body>&lt;p>A binary &lt;code>InterfaceDefinition&lt;/code> must directly or indirectly specialize the &lt;code>InterfaceDefinition&lt;/code> &lt;em>&lt;code>Interfaces::BinaryInterface&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Interfaces-InterfaceDefinition-checkInterfaceDefinitionBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedEndFeature->size() = 2 implies
    specializesFromLibrary(&quot;Interfaces::BinaryInterface&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Interfaces-InterfaceDefinition-_generalization.0" general="Systems-Connections-ConnectionDefinition"/>
        <ownedAttribute xmi:id="Systems-Interfaces-InterfaceDefinition-interfaceEnd" name="interfaceEnd" visibility="public" type="Systems-Ports-PortUsage" isOrdered="true" isDerived="true" redefinedProperty="Systems-Connections-ConnectionDefinition-connectionEnd" association="Systems-Interfaces-_packagedElement.0">
          <ownedComment xmi:id="Systems-Interfaces-InterfaceDefinition-interfaceEnd-_ownedComment.0" annotatedElement="Systems-Interfaces-InterfaceDefinition-interfaceEnd">
            <body>&lt;p>The &lt;code>PortUsages&lt;/code> that are the &lt;code>connectionEnds&lt;/code> of this &lt;code>InterfaceDefinition&lt;/code>.

</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Interfaces-InterfaceDefinition-interfaceEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Interfaces-InterfaceDefinition-interfaceEnd-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-States" name="States" visibility="public" URI="">
      <ownedComment xmi:id="Systems-States-_ownedComment.0" annotatedElement="Systems-States">
        <body>

</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-States-StateUsage" name="StateUsage" visibility="public">
        <ownedComment xmi:id="Systems-States-StateUsage-_ownedComment.0" annotatedElement="Systems-States-StateUsage">
          <body>&lt;p>A &lt;code>StateUsage&lt;/code> is an &lt;code>ActionUsage&lt;/code> that is nominally the &lt;code>Usage&lt;/code> of a &lt;code>StateDefinition&lt;/code>. However, other kinds of kernel &lt;code>Behaviors&lt;/code> are also allowed as &lt;code>types&lt;/code>, to permit use of &lt;code>Behaviors&lt;/code from the Kernel Model Libraries.&lt;/p>

&lt;p>A &lt;code>StateUsage&lt;/code> may be related to up to three of its &lt;code>ownedFeatures&lt;/code> by &lt;code>StateSubactionMembership&lt;/code> &lt;code>Relationships&lt;code>, all of different &lt;code>kinds&lt;/code>, corresponding to the entry, do and exit actions of the &lt;code>StateUsage&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-States-StateUsage-validateStateUsageIsParallelGeneralization" name="validateStateUsageIsParallelGeneralization" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-validateStateUsageIsParallelGeneralization-_ownedComment.0" annotatedElement="Systems-States-StateUsage-validateStateUsageIsParallelGeneralization">
            <body>&lt;p>Every generalization of a StateUsage that is also a StateDefinition or a StateUsage must have the same value for &lt;code>isParallel&lt;/code> as this StateUsage.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-validateStateUsageIsParallelGeneralization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let general : Sequence(Type) = ownedGeneralization.general in
general->selectByKind(StateDefinition)->
    forAll(g | g.isParallel = isParallel) and
general->selectByKind(StateUsage)->
    forAll(g | g.parallel = isParallel)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-deriveStateUsageDoAction" name="deriveStateUsageDoAction" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-deriveStateUsageDoAction-_ownedComment.0" annotatedElement="Systems-States-StateUsage-deriveStateUsageDoAction">
            <body>&lt;p>The &lt;code>doAction&lt;/code> of a &lt;code>StateUsage&lt;/code> is the &lt;code>action&lt;/code> of the owned &lt;code>StateSubactionMembership&lt;/code> with &lt;code>kind = do&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-deriveStateUsageDoAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>doAction =
    let doMemberships : Sequence(StateSubactionMembership) =
        ownedMembership->
            selectByKind(StateSubactionMembership)->
            select(kind = StateSubactionKind::do) in
    if doMemberships->isEmpty() then null
    else doMemberships->at(1)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-deriveStateUsageEntryAction" name="deriveStateUsageEntryAction" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-deriveStateUsageEntryAction-_ownedComment.0" annotatedElement="Systems-States-StateUsage-deriveStateUsageEntryAction">
            <body>&lt;p>The &lt;code>entryAction&lt;/code> of a &lt;code>StateUsage&lt;/code> is the &lt;code>action&lt;/code> of the owned &lt;code>StateSubactionMembership&lt;/code> with &lt;code>kind = entry&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-deriveStateUsageEntryAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>entryAction =
    let entryMemberships : Sequence(StateSubactionMembership) =
        ownedMembership->
            selectByKind(StateSubactionMembership)->
            select(kind = StateSubactionKind::entry) in
    if entryMemberships->isEmpty() then null
    else entryMemberships->at(1)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-validateStateUsageParallelSubactions" name="validateStateUsageParallelSubactions" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-validateStateUsageParallelSubactions-_ownedComment.0" annotatedElement="Systems-States-StateUsage-validateStateUsageParallelSubactions">
            <body>&lt;p>If a &lt;code>StateUsage&lt;/code> is parallel, then its &lt;code>nestedActions&lt;/code> (which includes &lt;code>nestedStates&lt;/code>) must not have any &lt;code>incomingTransitions&lt;/code> or &lt;code>outgoingTransitions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-validateStateUsageParallelSubactions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isParallel implies
    nestedAction.incomingTransition->isEmpty() and
    nestedAction.outgoingTransition->isEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-checkStateUsageExclusiveStateSpecialization" name="checkStateUsageExclusiveStateSpecialization" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-checkStateUsageExclusiveStateSpecialization-_ownedComment.0" annotatedElement="Systems-States-StateUsage-checkStateUsageExclusiveStateSpecialization">
            <body>&lt;p>A &lt;code>StateUsage&lt;/code> that is a substate usage with a non-parallel owning &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code> must directly or indirectly specialize the &lt;code>StateUsage&lt;/code> &lt;em>&lt;code>States::State::exclusiveStates&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-checkStateUsageExclusiveStateSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubstateUsage(true) implies
    specializesFromLibrary('States::State::substates')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-deriveStateUsageExitAction" name="deriveStateUsageExitAction" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-deriveStateUsageExitAction-_ownedComment.0" annotatedElement="Systems-States-StateUsage-deriveStateUsageExitAction">
            <body>&lt;p>The &lt;code>exitAction&lt;/code> of a &lt;code>StateUsage&lt;/code> is the &lt;code>action&lt;/code> of the owned &lt;code>StateSubactionMembership&lt;/code> with &lt;code>kind = exit
&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-deriveStateUsageExitAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>exitAction =
    let exitMemberships : Sequence(StateSubactionMembership) =
        ownedMembership->
            selectByKind(StateSubactionMembership)->
            select(kind = StateSubactionKind::exit) in
    if exitMemberships->isEmpty() then null
    else exitMemberships->at(1)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-checkStateUsageSpecialization" name="checkStateUsageSpecialization" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-checkStateUsageSpecialization-_ownedComment.0" annotatedElement="Systems-States-StateUsage-checkStateUsageSpecialization">
            <body>&lt;p>A &lt;code>StateUsage&lt;/code> must directly or indirectly specialize the &lt;code>StateUsage&lt;/code> &lt;em>&lt;code>States::stateActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-checkStateUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('States::StateAction')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-validateStateUsageStateSubactionKind" name="validateStateUsageStateSubactionKind" visibility="public">
          <ownedComment xmi:id="Systems-States-StateUsage-validateStateUsageStateSubactionKind-_ownedComment.0" annotatedElement="Systems-States-StateUsage-validateStateUsageStateSubactionKind">
            <body>&lt;p>A &lt;code>StateUsage&lt;/code> must not have more than one owned &lt;code>StateSubactionMembership&lt;/code> of each &lt;code>kind&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-validateStateUsageStateSubactionKind-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMembership->
    selectByKind(StateSubactionMembership)->
    isUnique(kind)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateUsage-checkStateUsageSubstateSpecialization" name="checkStateUsageSubstateSpecialization" visibility="public" constrainedElement="Systems-States-StateUsage">
          <ownedComment xmi:id="Systems-States-StateUsage-checkStateUsageSubstateSpecialization-_ownedComment.0" annotatedElement="Systems-States-StateUsage-checkStateUsageSubstateSpecialization">
            <body>&lt;p>A &lt;code>StateUsage&lt;/code> that is a substate usage with a owning &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code> that is parallel must directly or indirectly specialize the &lt;code>StateUsage&lt;/code> &lt;em>&lt;code>States::State::substates&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-checkStateUsageSubstateSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSubstateUsage(false) implies
    specializesFromLibrary('States::State::substates')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-States-StateUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-States-StateUsage-stateDefinition" name="stateDefinition" visibility="public" type="Kernel-Behaviors-Behavior" isOrdered="true" isDerived="true" redefinedProperty="Systems-Actions-ActionUsage-actionDefinition" association="Systems-States-_packagedElement.5">
          <ownedComment xmi:id="Systems-States-StateUsage-stateDefinition-_ownedComment.0" annotatedElement="Systems-States-StateUsage-stateDefinition">
            <body>&lt;p>The &lt;code>Behaviors&lt;code> that are the &lt;code>types&lt;/code> of this &lt;code>StateUsage&lt;code>. Nominally, these would be &lt;code>StateDefinitions&lt;/code>, but kernel &lt;code>Behaviors&lt;/code> are also allowed, to permit use of &lt;code>Behaviors&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateUsage-stateDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateUsage-stateDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateUsage-entryAction" name="entryAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.19">
          <ownedComment xmi:id="Systems-States-StateUsage-entryAction-_ownedComment.0" annotatedElement="Systems-States-StateUsage-entryAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> of this &lt;code>StateUsage&lt;/code> to be performed on entry to the state defined by the &lt;code>StateDefinition&lt;/code>. It is the owned &lt;code>ActionUsage&lt;/code> related to the &lt;code>StateUsage&lt;/code> by a &lt;code>StateSubactionMembership&lt;/code>  with &lt;code>kind = entry&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateUsage-entryAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateUsage-entryAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateUsage-doAction" name="doAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.23">
          <ownedComment xmi:id="Systems-States-StateUsage-doAction-_ownedComment.0" annotatedElement="Systems-States-StateUsage-doAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> of this &lt;code>StateUsage&lt;/code> to be performed while in the state defined by the &lt;code>StateDefinition&lt;/code>. It is the owned &lt;code>ActionUsage&lt;/code> related to the &lt;code>StateUsage&lt;/code> by a &lt;code>StateSubactionMembership&lt;/code>  with &lt;code>kind = do&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateUsage-doAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateUsage-doAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateUsage-exitAction" name="exitAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.22">
          <ownedComment xmi:id="Systems-States-StateUsage-exitAction-_ownedComment.0" annotatedElement="Systems-States-StateUsage-exitAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> of this &lt;code>StateUsage&lt;/code> to be performed on exit to the state defined by the &lt;code>StateDefinition&lt;/code>. It is the owned &lt;code>ActionUsage&lt;/code> related to the &lt;code>StateUsage&lt;/code> by a &lt;code>StateSubactionMembership&lt;/code>  with &lt;code>kind = exit&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateUsage-exitAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateUsage-exitAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateUsage-isParallel" name="isParallel" visibility="public">
          <ownedComment xmi:id="Systems-States-StateUsage-isParallel-_ownedComment.0" annotatedElement="Systems-States-StateUsage-isParallel">
            <body>&lt;p>Whether the &lt;code>nestedStates&lt;/code> of this &lt;code>StateUsage&lt;/code> are to all be performed in parallel. If true, none of the &lt;code>nestedActions&lt;/code> (which include &lt;code>nestedStates&lt;/code>) may have any incoming or outgoing &lt;code>Transitions&lt;/code>. If false, only one &lt;code>nestedState&lt;/code> may be performed at a time.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-States-StateUsage-isParallel-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-States-StateUsage-isSubstateUsage" name="isSubstateUsage" visibility="public" bodyCondition="Systems-States-StateUsage-isSubstateUsage-unnamed1">
          <ownedComment xmi:id="Systems-States-StateUsage-isSubstateUsage-_ownedComment.0" annotatedElement="Systems-States-StateUsage-isSubstateUsage">
            <body>&lt;p>Check if this &lt;code>StateUsage&lt;/code> is composite and has an &lt;code>owningType&lt;/code> that is an &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code> with the given value of &lt;code>isParallel&lt;/code>, but is &lt;em>not&lt;/em> an &lt;code>entryAction&lt;/code> or &lt;code>exitAction&lt;/code>. If so, then it represents a &lt;code>&lt;em>StateAction&lt;/em>&lt;/code> that is a &lt;code>&lt;em>substate&lt;/em>&lt;/code> or &lt;code>&lt;em>exclusiveState&lt;/em>&lt;/code> (for &lt;code>isParallel = false&lt;/code>) of another &lt;code>&lt;em>StateAction&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-States-StateUsage-isSubstateUsage-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateUsage-isSubstateUsage-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>owningType &lt;> null and
(owningType.oclIsKindOf(StateDefinition) and
    owningType.oclAsType(StateDefinition).isParallel = isParallel or
 owningType.oclIsKindOf(StateUsage) and
    owningType.oclAsType(StateUsage).isParallel = isParallel) and
not owningFeatureMembership.oclIsKindOf(StateSubactionMembership)</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-States-StateUsage-isSubstateUsage-isParallel" name="isParallel" visibility="public">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Systems-States-StateUsage-isSubstateUsage-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.1" name="" visibility="private" memberEnd="Systems-States-StateDefinition-state Systems-States-_packagedElement.1-featuringStateDefinition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.1-featuringStateDefinition" name="featuringStateDefinition" visibility="public" type="Systems-States-StateDefinition" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.0-featuringBehavior" association="Systems-States-_packagedElement.1">
          <ownedComment xmi:id="Systems-States-_packagedElement.1-featuringStateDefinition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.1-featuringStateDefinition">
            <body>&lt;p>The StateDefinitions featuring a certain StateUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.1-featuringStateDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.1-featuringStateDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="Systems-States-StateSubactionKind" name="StateSubactionKind" visibility="public">
        <ownedComment xmi:id="Systems-States-StateSubactionKind-_ownedComment.0" annotatedElement="Systems-States-StateSubactionKind">
          <body>&lt;p>A &lt;code>StateSubactionKind&lt;/code> indicates whether the &lt;code>action&lt;/code> of a StateSubactionMembership is an entry, do or exit action.&lt;/p></body>
        </ownedComment>
        <ownedLiteral xmi:id="Systems-States-StateSubactionKind-entry" name="entry" visibility="public">
          <ownedComment xmi:id="Systems-States-StateSubactionKind-entry-_ownedComment.0" annotatedElement="Systems-States-StateSubactionKind-entry">
            <body>&lt;p>Indicates that the &lt;code>action&lt;/code> of a &lt;code>StateSubactionMembership&lt;/code> is an &lt;code>entryAction&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-States-StateSubactionKind-do" name="do" visibility="public">
          <ownedComment xmi:id="Systems-States-StateSubactionKind-do-_ownedComment.0" annotatedElement="Systems-States-StateSubactionKind-do">
            <body>&lt;p>Indicates that the &lt;code>action&lt;/code> of a &lt;code>StateSubactionMembership&lt;/code> is a &lt;code>doAction&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-States-StateSubactionKind-exit" name="exit" visibility="public">
          <ownedComment xmi:id="Systems-States-StateSubactionKind-exit-_ownedComment.0" annotatedElement="Systems-States-StateSubactionKind-exit">
            <body>&lt;p>Indicates that the &lt;code>action&lt;/code> of a &lt;code>StateSubactionMembership&lt;/code> is an &lt;code>exitAction&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-States-StateSubactionMembership" name="StateSubactionMembership" visibility="public">
        <ownedComment xmi:id="Systems-States-StateSubactionMembership-_ownedComment.0" annotatedElement="Systems-States-StateSubactionMembership">
          <body>&lt;p>A &lt;code>StateSubactionMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> for an entry, do or exit &lt;code>ActionUsage&lt;code> of a &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-States-StateSubactionMembership-validateStateSubactionMembershipOwningType" name="validateStateSubactionMembershipOwningType" visibility="public" constrainedElement="Systems-States-StateSubactionMembership">
          <ownedComment xmi:id="Systems-States-StateSubactionMembership-validateStateSubactionMembershipOwningType-_ownedComment.0" annotatedElement="Systems-States-StateSubactionMembership-validateStateSubactionMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>StateSubactionMembership&lt;/code> must be a &lt;code>StateDefinition&lt;/code> or a &lt;code>StateUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateSubactionMembership-validateStateSubactionMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(StateDefinition) or
owningType.oclIsKindOf(StateUsage)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-States-StateSubactionMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Systems-States-StateSubactionMembership-kind" name="kind" visibility="public" type="Systems-States-StateSubactionKind">
          <ownedComment xmi:id="Systems-States-StateSubactionMembership-kind-_ownedComment.0" annotatedElement="Systems-States-StateSubactionMembership-kind">
            <body>&lt;p>Whether this &lt;code>StateSubactionMembership&lt;/code> is for an &lt;code>entry&lt;code>, &lt;code>do&lt;/code> or &lt;code>exit&lt;/code> &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateSubactionMembership-action" name="action" visibility="public" type="Systems-Actions-ActionUsage" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Systems-States-_packagedElement.24">
          <ownedComment xmi:id="Systems-States-StateSubactionMembership-action-_ownedComment.0" annotatedElement="Systems-States-StateSubactionMembership-action">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> that is the &lt;code>ownedMemberFeature&lt;/code> of this &lt;code>StateSubactionMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateSubactionMembership-action-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateSubactionMembership-action-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-States-StateDefinition" name="StateDefinition" visibility="public">
        <ownedComment xmi:id="Systems-States-StateDefinition-_ownedComment.0" annotatedElement="Systems-States-StateDefinition">
          <body>&lt;p>A &lt;code>StateDefinition&lt;/code> is the &lt;code>Definition&lt;/code> of the &lt;/code>Behavior&lt;/code> of a system or part of a system in a certain state condition.&lt;/p>

&lt;p>A &lt;code>StateDefinition&lt;/code> may be related to up to three of its &lt;code>ownedFeatures&lt;/code> by &lt;code>StateBehaviorMembership&lt;/cod> &lt;code>Relationships&lt;/code>, all of different &lt;code>kinds&lt;/code>, corresponding to the entry, do and exit actions of the &lt;code>StateDefinition&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-States-StateDefinition-validateStateDefinitionIsParallelGeneralization" name="validateStateDefinitionIsParallelGeneralization" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-validateStateDefinitionIsParallelGeneralization-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-validateStateDefinitionIsParallelGeneralization">
            <body>&lt;p>Every generalization of a &lt;code>StateDefinition&lt;/code> that is also a &lt;code>StateDefinition&lt;/code> must have the same value for &lt;code>isParallel&lt;/code> as this &lt;code>StateDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-validateStateDefinitionIsParallelGeneralization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedGeneralization.general->selectByKind(StateDefinition)->
    forAll(g | g.isParallel = isParallel)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateDefinition-checkStateDefinitionSpecialization" name="checkStateDefinitionSpecialization" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-checkStateDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-checkStateDefinitionSpecialization">
            <body>&lt;p>A &lt;code>StateDefinition&lt;/code> must directly or indirectly specialize the &lt;code>StateDefinition&lt;/code> &lt;em>&lt;code>States::StateAction&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-checkStateDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('States::StateAction')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateDefinition-validateStateDefinitionStateSubactionKind" name="validateStateDefinitionStateSubactionKind" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-validateStateDefinitionStateSubactionKind-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-validateStateDefinitionStateSubactionKind">
            <body>&lt;p>A &lt;code>StateDefinition&lt;/code> must not have more than one owned &lt;code>StateSubactionMembership&lt;/code> of each &lt;code>kind&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-validateStateDefinitionStateSubactionKind-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMembership->
    selectByKind(StateSubactionMembership)->
    isUnique(kind)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateDefinition-deriveStateDefinitionState" name="deriveStateDefinitionState" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-deriveStateDefinitionState-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-deriveStateDefinitionState">
            <body>&lt;p>The &lt;code>states&lt;/code> of a &lt;code>StateDefinition&lt;/code> are those of its &lt;code>actions&lt;/code> that are &lt;code>StateUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-deriveStateDefinitionState-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>state = action->selectByKind(StateUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateDefinition-deriveStateDefinitionDoAction" name="deriveStateDefinitionDoAction" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-deriveStateDefinitionDoAction-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-deriveStateDefinitionDoAction">
            <body>&lt;p>The &lt;code>doAction&lt;/code> of a &lt;code>StateDefinition&lt;/code> is the &lt;code>action&lt;/code> of the owned &lt;code>StateSubactionMembership&lt;/code> with &lt;code>kind = do&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-deriveStateDefinitionDoAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>doAction =
    let doMemberships : Sequence(StateSubactionMembership) =
        ownedMembership->
            selectByKind(StateSubactionMembership)->
            select(kind = StateSubactionKind::do) in
    if doMemberships->isEmpty() then null
    else doMemberships->at(1)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateDefinition-deriveStateDefinitionEntryAction" name="deriveStateDefinitionEntryAction" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-deriveStateDefinitionEntryAction-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-deriveStateDefinitionEntryAction">
            <body>&lt;p>The &lt;code>entryAction&lt;/code> of a &lt;code>StateDefinition&lt;/code> is the &lt;code>action&lt;/code> of the owned &lt;code>StateSubactionMembership&lt;/code> with &lt;code>kind = entry&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-deriveStateDefinitionEntryAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>entryAction =
    let entryMemberships : Sequence(StateSubactionMembership) =
        ownedMembership->
            selectByKind(StateSubactionMembership)->
            select(kind = StateSubactionKind::entry) in
    if entryMemberships->isEmpty() then null
    else entryMemberships->at(1)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateDefinition-validateStateDefinitionParallelSubactions" name="validateStateDefinitionParallelSubactions" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-validateStateDefinitionParallelSubactions-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-validateStateDefinitionParallelSubactions">
            <body>&lt;p>If a &lt;code>StateDefinition&lt;/code> is parallel, then its &lt;code>ownedActions&lt;/code> (which includes its &lt;code>ownedStates&lt;/code>) must not have any &lt;code>incomingTransitions&lt;/code> or &lt;code>outgoingTransitions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-validateStateDefinitionParallelSubactions-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isParallel implies
    ownedAction.incomingTransition->isEmpty() and
    ownedAction.outgoingTransition->isEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-StateDefinition-deriveStateDefinitionExitAction" name="deriveStateDefinitionExitAction" visibility="public" constrainedElement="Systems-States-StateDefinition">
          <ownedComment xmi:id="Systems-States-StateDefinition-deriveStateDefinitionExitAction-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-deriveStateDefinitionExitAction">
            <body>&lt;p>The &lt;code>exitAction&lt;/code> of a &lt;code>StateDefinition&lt;/code> is the &lt;code>action&lt;/code> of the owned &lt;code>StateSubactionMembership&lt;/code> with &lt;code>kind = exit
&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-StateDefinition-deriveStateDefinitionExitAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>exitAction = 
    let exitMemberships : Sequence(StateSubactionMembership) =
        ownedMembership->
            selectByKind(StateSubactionMembership)->
            select(kind = StateSubactionKind::exit) in
    if exitMemberships->isEmpty() then null
    else exitMemberships->at(1)
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-States-StateDefinition-_generalization.0" general="Systems-Actions-ActionDefinition"/>
        <ownedAttribute xmi:id="Systems-States-StateDefinition-state" name="state" visibility="public" type="Systems-States-StateUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-Actions-ActionDefinition-action" association="Systems-States-_packagedElement.1">
          <ownedComment xmi:id="Systems-States-StateDefinition-state-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-state">
            <body>&lt;p>The &lt;code>StateUsages&lt;/code>, which are &lt;code>actions&lt;/code> in the &lt;code>StateDefinition&lt;/code>, that specify the discrete states in the behavior defined by the &lt;code>StateDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateDefinition-state-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateDefinition-state-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateDefinition-entryAction" name="entryAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.20">
          <ownedComment xmi:id="Systems-States-StateDefinition-entryAction-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-entryAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> of this &lt;code>StateDefinition&lt;/code> to be performed on entry to the state defined by the &lt;code>StateDefinition&lt;/code>. It is the owned &lt;code>ActionUsage&lt;/code> related to the &lt;code>StateDefinition&lt;/code> by a &lt;code>StateSubactionMembership&lt;/code>  with &lt;code>kind = entry&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateDefinition-entryAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateDefinition-entryAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateDefinition-doAction" name="doAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.18">
          <ownedComment xmi:id="Systems-States-StateDefinition-doAction-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-doAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> of this &lt;code>StateDefinition&lt;/code> to be performed while in the state defined by the &lt;code>StateDefinition&lt;/code>. It is the owned &lt;code>ActionUsage&lt;/code> related to the &lt;code>StateDefinition&lt;/code> by a &lt;code>StateSubactionMembership&lt;/code>  with &lt;code>kind = do&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateDefinition-doAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateDefinition-doAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateDefinition-exitAction" name="exitAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.17">
          <ownedComment xmi:id="Systems-States-StateDefinition-exitAction-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-exitAction">
            <body>&lt;p>The &lt;code>ActionUsage&lt;/code> of this &lt;code>StateDefinition&lt;/code> to be performed on exit to the state defined by the &lt;code>StateDefinition&lt;/code>. It is the owned &lt;code>ActionUsage&lt;/code> related to the &lt;code>StateDefinition&lt;/code> by a &lt;code>StateSubactionMembership&lt;/code>  with &lt;code>kind = exit&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-StateDefinition-exitAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-StateDefinition-exitAction-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-StateDefinition-isParallel" name="isParallel" visibility="public">
          <ownedComment xmi:id="Systems-States-StateDefinition-isParallel-_ownedComment.0" annotatedElement="Systems-States-StateDefinition-isParallel">
            <body>&lt;p>Whether the &lt;code>ownedStates&lt;/code> of this &lt;code>StateDefinition&lt;/code> are to all be performed in parallel. If true, none of the &lt;code>ownedActions&lt;/code> (which includes &lt;code>ownedStates&lt;/code>) may have any incoming or outgoing &lt;code>Transitions&lt;/code>. If false, only one &lt;code>ownedState&lt;/code> may be performed at a time.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-States-StateDefinition-isParallel-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.5" name="" visibility="private" memberEnd="Systems-States-StateUsage-stateDefinition Systems-States-_packagedElement.5-definedState">
        <ownedEnd xmi:id="Systems-States-_packagedElement.5-definedState" name="definedState" visibility="public" type="Systems-States-StateUsage" isDerived="true" subsettedProperty="Systems-Actions-_packagedElement.12-definedAction" association="Systems-States-_packagedElement.5">
          <ownedComment xmi:id="Systems-States-_packagedElement.5-definedState-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.5-definedState">
            <body>&lt;p>The Behaviors that are the types of this StateUsage. Nominally, these would be StateDefinition, but non-StateDefinition Behaviors are also allowed, to permit use of Behaviors from the Kernel Library.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.5-definedState-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.5-definedState-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-States-TransitionUsage" name="TransitionUsage" visibility="public">
        <ownedComment xmi:id="Systems-States-TransitionUsage-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage">
          <body>&lt;p>A &lt;code>TransitionUsage&lt;/code> is an &lt;code>ActionUsage&lt;code> representing a triggered transition between &lt;code>ActionUsages&lt;/code> or &lt;code>StateUsages&lt;/code>. When triggered by a &lt;code>triggerAction&lt;/code>, when its &lt;code>guardExpression&lt;/code> is true, the &lt;code>TransitionUsage&lt;/code> asserts that its &lt;code>source&lt;/code> is exited, then its &lt;code>effectAction&lt;/code> (if any) is performed, and then its &lt;code>target&lt;/code> is entered.&lt;/p>

&lt;p>A &lt;code>TransitionUsage&lt;code> can be related to some of its &lt;code>ownedFeatures&lt;/code> using &lt;code>TransitionFeatureMembership&lt;/code> &lt;code>Relationships&lt;/code>, corresponding to the &lt;code>triggerAction&lt;/code>, &lt;code>guardExpression&lt;/code> and &lt;code>effectAction&lt;/code> of the &lt;code>TransitionUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsageActionSpecialization" name="checkTransitionUsageActionSpecialization" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsageActionSpecialization-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsageActionSpecialization">
            <body>&lt;p>A composite &lt;code>TransitionUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>ActionDefinition&lt;/code> or &lt;code>ActionUsage&lt;/code>, but &lt;em>not&lt;/em> a &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code>, must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::Action::decisionTransitions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsageActionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(ActionDefinition) or 
 owningType.oclIsKindOf(ActionUsage)) and
not (owningType.oclIsKindOf(StateDefinition) or
     owningType.oclIsKindOf(StateUsage)) implies
    specializesFromLibrary(&quot;Actions::Action::decisionTransitionActions&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsageStateSpecialization" name="checkTransitionUsageStateSpecialization" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsageStateSpecialization-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsageStateSpecialization">
            <body>&lt;p>A composite &lt;code>TransitionUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>StateDefinition&lt;/code> or &lt;code>StateUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>States::State::stateTransitions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsageStateSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(StateDefinition) or
 owningType.oclIsKindOf(StateUsage)) implies
    specializesFromLibrary(&quot;States::State::stateTransitions&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSpecialization" name="checkTransitionUsageSpecialization" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsageSpecialization">
            <body>&lt;p>A &lt;code>TransitionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::transitions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Actions::actions::transitionActions&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageSource" name="deriveTransitionUsageSource" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageSource-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-deriveTransitionUsageSource">
            <body>&lt;p>The &lt;code>source&lt;/code> of a &lt;code>TransitionUsage&lt;/code> is given by the &lt;code>memberElement&lt;/code> of its first &lt;code>ownedMembership&lt;/code>, which must be an &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageSource-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>source =
    if ownedMembership->isEmpty() then null
    else
        let member : Element = 
            ownedMembership->at(1).memberElement in 
        if not member.oclIsKindOf(ActionUsage) then null
        else member.oclAsKindOf(ActionUsage)
        endif
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageTarget" name="deriveTransitionUsageTarget" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageTarget-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-deriveTransitionUsageTarget">
            <body>&lt;p>The &lt;code>target&lt;/code> of a &lt;code>TransitionUsage&lt;/code> is given by the &lt;code>targetFeature&lt;/code> of its &lt;code>succession&lt;/code>, which must be an &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageTarget-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>target =
    if succession.targetFeature->isEmpty() then null
    else
        let targetFeature : Feature = 
            succession.targetFeature->at(1) in
        if not targetFeature.oclIsKindOf(ActionUsage) then null
        else targetFeature.oclAsType(ActionUsage)
        endif
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageTriggerAction" name="deriveTransitionUsageTriggerAction" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageTriggerAction-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-deriveTransitionUsageTriggerAction">
            <body>&lt;p>The &lt;code>triggerActions&lt;/code> of a &lt;code>TransitionUsage&lt;/code> are the &lt;code>transitionFeatures&lt;/code> of the &lt;code>ownedFeatureMemberships&lt;/code> of the &lt;code>TransitionUsage&lt;/code> with &lt;code>kind = trigger&lt;/code>, which must all be &lt;code>AcceptActionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageTriggerAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>triggerAction = ownedFeatureMembership->
    selectByKind(TransitionFeatureMembership)->
    select(kind = TransitionFeatureKind::trigger).transitionFeature->
    selectByKind(AcceptActionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-validateTransitionUsageSuccession" name="validateTransitionUsageSuccession" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-validateTransitionUsageSuccession-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-validateTransitionUsageSuccession">
            <body>&lt;p>A &lt;code>TransitionUsage&lt;/code> must have an &lt;code>ownedMember&lt;/code> that is a &lt;code>Succession&lt;/code> with a &lt;code>ActionUsage&lt;/code> as its &lt;code>targetFeature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-validateTransitionUsageSuccession-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let successions : Sequence(Successions) = 
    ownedMember->selectByKind(Succession) in
successions->notEmpty() and
successions->at(1).targetFeature->
    forAll(oclIsKindOf(ActionUsage))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageGuardExpression" name="deriveTransitionUsageGuardExpression" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageGuardExpression-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-deriveTransitionUsageGuardExpression">
            <body>&lt;p>The &lt;code>triggerActions&lt;/code> of a &lt;code>TransitionUsage&lt;/code> are the &lt;code>transitionFeatures&lt;/code> of the &lt;code>ownedFeatureMemberships&lt;/code> of the &lt;code>TransitionUsage&lt;/code> with &lt;code>kind = trigger&lt;/code>, which must all be &lt;code>Expressions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageGuardExpression-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>guardExpression = ownedFeatureMembership->
    selectByKind(TransitionFeatureMembership)->
    select(kind = TransitionFeatureKind::trigger).transitionFeature->
    selectByKind(Expression)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsageTransitionFeatureSpecialization" name="checkTransitionUsageTransitionFeatureSpecialization" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsageTransitionFeatureSpecialization-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsageTransitionFeatureSpecialization">
            <body>&lt;p>The &lt;code>triggerActions&lt;/code>, &lt;code>guardExpressions&lt;/code>, and &lt;code>effectActions&lt;/code> of a &lt;code>TransitionUsage&lt;/code> must specialize, respectively, the &lt;em>&lt;code>accepter&lt;/code>&lt;/em>, &lt;em>&lt;code>guard&lt;/code>&lt;/em>, and &lt;em>&lt;code>effect&lt;/code>&lt;/em> &lt;code>features&lt;/code> of the &lt;code>ActionUsage&lt;/code> &lt;em>&lt;code>Actions::TransitionActions&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsageTransitionFeatureSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>triggerAction->forAll(specializesFromLibrary('Actions::TransitionAction::accepter') and
guardExpression->forAll(specializesFromLibrary('Actions::TransitionAction::guard') and
effectAction->forAll(specializesFromLibrary('Actions::TransitionAction::effect'))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageEffectAction" name="deriveTransitionUsageEffectAction" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageEffectAction-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-deriveTransitionUsageEffectAction">
            <body>&lt;p>The &lt;code>effectActions&lt;/code> of a &lt;code>TransitionUsage&lt;/code> are the &lt;code>transitionFeatures&lt;/code> of the &lt;code>ownedFeatureMemberships&lt;/code> of the &lt;code>TransitionUsage&lt;/code> with &lt;code>kind = effect&lt;/code>, which must all be &lt;code>ActionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageEffectAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>triggerAction = ownedFeatureMembership->
    selectByKind(TransitionFeatureMembership)->
    select(kind = TransitionFeatureKind::trigger).transitionFeatures->
    selectByKind(AcceptActionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSuccessionSourceSpecialization" name="checkTransitionUsageSuccessionSourceSpecialization" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSuccessionSourceSpecialization-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsageSuccessionSourceSpecialization">
            <body>&lt;p>The &lt;code>sourceFeature&lt;/code> of the &lt;code>succession&lt;/code> of a &lt;code>TransitionUsage&lt;/code> must be the &lt;code>source&lt;/code> of the &lt;code>TransitionUsage&lt;/code> (i.e., the first &lt;code>connectorEnd&lt;/code> of the &lt;code>succession&lt;/code> must have a &lt;code>ReferenceSubsetting&lt;/code> &lt;code>Relationship&lt;/code> with the &lt;code>source&lt;/code>).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSuccessionSourceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>succession.sourceFeature = source</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSourceBindingConnector" name="checkTransitionUsageSourceBindingConnector" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSourceBindingConnector-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsageSourceBindingConnector">
            <body>&lt;p>A &lt;code>TransitionUsage&lt;/code> must have an &lt;code>ownedMember&lt;/code> that is a &lt;code>BindingConnector&lt;/code> between its &lt;code>source&lt;/code> and its first input &lt;code>parameter&lt;/code> (which redefines &lt;code>&lt;em>Actions::TransitionAction::transitionLinkSource&lt;/em>&lt;/code>).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSourceBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMember->selectByKind(BindingConnector)->exists(b |
    b.relatedFeatures->includes(source) and
    b.relatedFeatures->includes(inputParameter(2)))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsagePayloadSpecialization" name="checkTransitionUsagePayloadSpecialization" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsagePayloadSpecialization-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsagePayloadSpecialization">
            <body>&lt;p>If a &lt;code>TransitionUsage&lt;code> has a &lt;code>triggerAction&lt;/code>, then the &lt;em>&lt;code>payload&lt;/code>&lt;/em> &lt;code>parameter&lt;/code> of the &lt;code>TransitionUsage&lt;code> subsets the &lt;code>Feature&lt;/code> chain of the &lt;code>triggerAction&lt;/code> and its &lt;code>payloadParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsagePayloadSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>triggerAction->notEmpty() implies
    let payloadParameter : Feature = inputParameter(2) in
    payloadParameter &lt;> null and
    payloadParameter.subsetsChain(triggerAction->at(1), triggerPayloadParameter())</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSuccessionBindingConnector" name="checkTransitionUsageSuccessionBindingConnector" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSuccessionBindingConnector-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-checkTransitionUsageSuccessionBindingConnector">
            <body>&lt;p>A &lt;code>TransitionUsage&lt;/code> must have an &lt;code>ownedMember&lt;/code> that is a &lt;code>BindingConnector&lt;/code> between its &lt;code>succession&lt;/code> and the inherited &lt;code>Feature&lt;/code> &lt;code>&lt;em>TransitionPerformances::TransitionPerformance::transitionLink&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-checkTransitionUsageSuccessionBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMember->selectByKind(BindingConnector)->exists(b |
    b.relatedFeatures->includes(succession) and
    b.relatedFeatures->includes(resolveGlobal(
        'TransitionPerformances::TransitionPerformance::transitionLink')))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-validateTransitionUsageParameters" name="validateTransitionUsageParameters" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-validateTransitionUsageParameters-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-validateTransitionUsageParameters">
            <body>&lt;p>A &lt;code>TransitionUsage&lt;/code> must have at least one owned input &lt;code>parameter&lt;/code> and, if it has a &lt;code>triggerAction&lt;/code>, it must have at least two.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-validateTransitionUsageParameters-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>if triggerAction->isEmpty() then
    inputParameters()->size() >= 1
else
    inputParameters()->size() >= 2
endif
    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageSuccession" name="deriveTransitionUsageSuccession" visibility="public" constrainedElement="Systems-States-TransitionUsage">
          <ownedComment xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageSuccession-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-deriveTransitionUsageSuccession">
            <body>&lt;p>The &lt;code>succession&lt;/code> of a &lt;code>TransitionUsage&lt;/code> is its first &lt;code>ownedMember&lt;/code> that is a &lt;code>Succession&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-deriveTransitionUsageSuccession-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>succession = ownedMember->selectByKind(Succession)->at(1)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-States-TransitionUsage-_generalization.0" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-States-TransitionUsage-source" name="source" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.16">
          <ownedComment xmi:id="Systems-States-TransitionUsage-source-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-source">
            <body>&lt;p>The source &lt;code>ActionUsage&lt;/code> of this &lt;code>TransitionUsage&lt;/code>, which becomes the &lt;code>source&lt;/code> of the &lt;code>succession&lt;/code> for the &lt;code>TransitionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionUsage-source-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionUsage-source-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-TransitionUsage-target" name="target" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" association="Systems-States-_packagedElement.13">
          <ownedComment xmi:id="Systems-States-TransitionUsage-target-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-target">
            <body>&lt;p>The target &lt;code>ActionUsage&lt;/code> of this &lt;code>TransitionUsage&lt;code>, which is the &lt;code>targetFeature&lt;/code> of the &lt;code>succession&lt;/code> for the &lt;code>TransitionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionUsage-target-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionUsage-target-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-TransitionUsage-triggerAction" name="triggerAction" visibility="public" type="Systems-Actions-AcceptActionUsage" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Systems-States-_packagedElement.14">
          <ownedComment xmi:id="Systems-States-TransitionUsage-triggerAction-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-triggerAction">
            <body>&lt;p>The &lt;code>AcceptActionUsages&lt;/code> that define the triggers of this &lt;code>TransitionUsage&lt;/code>, which are the &lt;code>ownedFeatures&lt;/code> of the &lt;code>TransitionUsage&lt;/code> related to it by &lt;code>TransitionFeatureMemberships&lt;/code> with &lt;code>kind = trigger&lt;/code>, which must all be &lt;code>AcceptActionUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionUsage-triggerAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionUsage-triggerAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-TransitionUsage-guardExpression" name="guardExpression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Systems-States-_packagedElement.15">
          <ownedComment xmi:id="Systems-States-TransitionUsage-guardExpression-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-guardExpression">
            <body>&lt;p>The &lt;code>Expressions&lt;/code> that define the guards of this &lt;code>TransitionUsage&lt;/code>, which are the &lt;code>ownedFeatures&lt;/code> of the &lt;code>TransitionUsage&lt;/code> related to it by &lt;code>TransitionFeatureMemberships&lt;/code> with &lt;code>kind = guard&lt;/code>, which must all be &lt;code>Expressions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionUsage-guardExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionUsage-guardExpression-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-TransitionUsage-effectAction" name="effectAction" visibility="public" type="Systems-Actions-ActionUsage" isDerived="true" subsettedProperty="Core-Types-Type-feature" association="Systems-States-_packagedElement.12">
          <ownedComment xmi:id="Systems-States-TransitionUsage-effectAction-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-effectAction">
            <body>&lt;p>The &lt;code>ActionUsages&lt;/code> that define the effects of this &lt;code>TransitionUsage&lt;/code>, which are the &lt;code>ownedFeatures&lt;/code> of the &lt;code>TransitionUsage&lt;/code> related to it by &lt;code>TransitionFeatureMemberships&lt;/code> with &lt;code>kind = effect&lt;/code>, which must all be &lt;code>Expressions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionUsage-effectAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionUsage-effectAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-TransitionUsage-succession" name="succession" visibility="public" type="Kernel-Connectors-Succession" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Systems-States-_packagedElement.11">
          <ownedComment xmi:id="Systems-States-TransitionUsage-succession-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-succession">
            <body>&lt;p>The &lt;code>Succession&lt;/code> that is the &lt;code>ownedFeature&lt;/code> of this &lt;code>TransitionUsage&lt;/code>, which, if the &lt;code>TransitionUsage&lt;/code> is triggered, asserts the temporal ordering of the &lt;code>source&lt;/code> and &lt;code>target&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionUsage-succession-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionUsage-succession-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-States-TransitionUsage-triggerPayloadParameter" name="triggerPayloadParameter" visibility="public" bodyCondition="Systems-States-TransitionUsage-triggerPayloadParameter-unnamed1">
          <ownedComment xmi:id="Systems-States-TransitionUsage-triggerPayloadParameter-_ownedComment.0" annotatedElement="Systems-States-TransitionUsage-triggerPayloadParameter">
            <body>&lt;p>Return the &lt;code>payloadParameter&lt;/code> of the &lt;code>triggerAction&lt;/code> of this &lt;code>TransitionUsage&lt;/code>, if it has one.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-States-TransitionUsage-triggerPayloadParameter-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionUsage-triggerPayloadParameter-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if triggerAction->isEmpty() then null
else triggerAction->first().payloadParameter
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-States-TransitionUsage-triggerPayloadParameter-_ownedParameter.0" name="" visibility="public" type="Systems-DefinitionAndUsage-ReferenceUsage" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionUsage-triggerPayloadParameter-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionUsage-triggerPayloadParameter-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-States-TransitionFeatureMembership" name="TransitionFeatureMembership" visibility="public">
        <ownedComment xmi:id="Systems-States-TransitionFeatureMembership-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureMembership">
          <body>&lt;p>A &lt;code>TransitionFeatureMembership&lt;/code> is a &lt;code>FeatureMembership&lt;code> for a trigger, guard or effect of a &lt;code>TransitionUsage&lt;/code>, whose &lt;code>transitionFeature&lt;/code> is a &lt;code>AcceptActionUsage&lt;/code>, &lt;em>&lt;code>Boolean&lt;/code>&lt;/em>-valued &lt;code>Expression&lt;/code> or &lt;code>ActionUsage&lt;/code>, depending on its &lt;code>kind&lt;/code>. &lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipTriggerAction" name="validateTransitionFeatureMembershipTriggerAction" visibility="public" constrainedElement="Systems-States-TransitionFeatureMembership">
          <ownedComment xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipTriggerAction-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipTriggerAction">
            <body>&lt;p>If the &lt;code>kind&lt;/code> of a &lt;code>TransitionUsage&lt;/code> is &lt;code>trigger&lt;/code>, then its &lt;code>transitionFeature&lt;/code> must be a kind of &lt;code>AcceptActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipTriggerAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>kind = TransitionFeatureKind::trigger implies
    transitionFeature.oclIsKindOf(AcceptActionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipOwningType" name="validateTransitionFeatureMembershipOwningType" visibility="public" constrainedElement="Systems-States-TransitionFeatureMembership">
          <ownedComment xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipOwningType-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>TransitionFeatureMembership&lt;/code> must be a &lt;code>TransitionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(TransitionUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipGuardExpression" name="validateTransitionFeatureMembershipGuardExpression" visibility="public" constrainedElement="Systems-States-TransitionFeatureMembership">
          <ownedComment xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipGuardExpression-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipGuardExpression">
            <body>&lt;p>If the &lt;code>kind&lt;/code> of a &lt;code>TransitionUsage&lt;/code> is &lt;code>guard&lt;/code>, then its &lt;code>transitionFeature&lt;/code> must be a kind of &lt;code>Expression&lt;/code> whose result is a &lt;em>&lt;code>Boolean&lt;/code>&lt;/em> value.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipGuardExpression-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>kind = TransitionFeatureKind::guard implies
    transitionFeature.oclIsKindOf(Expression) and
    let guard : Expression = transitionFeature.oclIsKindOf(Expression) in
    guard.result.specializesFromLibrary('ScalarValues::Boolean') and
    guard.result.multiplicity &lt;> null and
    guard.result.multiplicity.hasBounds(1,1)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipEffectAction" name="validateTransitionFeatureMembershipEffectAction" visibility="public" constrainedElement="Systems-States-TransitionFeatureMembership">
          <ownedComment xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipEffectAction-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipEffectAction">
            <body>&lt;p>If the &lt;code>kind&lt;/code> of a &lt;code>TransitionUsage&lt;/code> is &lt;code>effect&lt;/code>, then its &lt;code>transitionFeature&lt;/code> must be a kind of &lt;code>ActionUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-TransitionFeatureMembership-validateTransitionFeatureMembershipEffectAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>kind = TransitionFeatureKind::effect implies
    transitionFeature.oclIsKindOf(ActionUsage)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-States-TransitionFeatureMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Systems-States-TransitionFeatureMembership-kind" name="kind" visibility="public" type="Systems-States-TransitionFeatureKind">
          <ownedComment xmi:id="Systems-States-TransitionFeatureMembership-kind-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureMembership-kind">
            <body>&lt;p>Whether this &lt;code>TransitionFeatureMembership &lt;/code> is for a &lt;code>trigger&lt;/code>, &lt;code>guard&lt;/code> or &lt;code>effect&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-States-TransitionFeatureMembership-transitionFeature" name="transitionFeature" visibility="public" type="Kernel-Behaviors-Step" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Systems-States-_packagedElement.21">
          <ownedComment xmi:id="Systems-States-TransitionFeatureMembership-transitionFeature-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureMembership-transitionFeature">
            <body>&lt;p>The &lt;code>Step&lt;/code> that is the &lt;code>ownedMemberFeature&lt;/code> of this &lt;code>TransitionFeatureMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-TransitionFeatureMembership-transitionFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-TransitionFeatureMembership-transitionFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-States-ExhibitStateUsage" name="ExhibitStateUsage" visibility="public">
        <ownedComment xmi:id="Systems-States-ExhibitStateUsage-_ownedComment.0" annotatedElement="Systems-States-ExhibitStateUsage">
          <body>&lt;p>An &lt;code>ExhibitStateUsage&lt;/code> is a &lt;code>StateUsage&lt;/code> that represents the exhibiting of a &lt;code>StateUsage&lt;/code>. Unless it is the &lt;code>StateUsage&lt;/code> itself, the &lt;code>StateUsage&lt;/code> to be exhibited is related to the &lt;code>ExhibitStateUsage&lt;/code> by a &lt;code>ReferenceSubsetting&lt;/code> &lt;code>Relationship&lt;/code>. An &lt;code>ExhibitStateUsage&lt;/code> is also a &lt;code>PerformActionUsage&lt;/code>, with its &lt;code>exhibitedState&lt;/code> as the &lt;code>performedAction&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-States-ExhibitStateUsage-checkExhibitStateUsageSpecialization" name="checkExhibitStateUsageSpecialization" visibility="public" constrainedElement="Systems-States-ExhibitStateUsage">
          <ownedComment xmi:id="Systems-States-ExhibitStateUsage-checkExhibitStateUsageSpecialization-_ownedComment.0" annotatedElement="Systems-States-ExhibitStateUsage-checkExhibitStateUsageSpecialization">
            <body>&lt;p>If an &lt;code>ExhibitStateUsage&lt;/code> has an &lt;code>owningType&lt;/code> that is a &lt;code>PartDefinition&lt;/code> or &lt;code>PartUsage&lt;/code>, then it must directly or indirectly specialize the &lt;code>StateUsage&lt;/code> &lt;code>&lt;em>Parts::Part::exhibitedStates&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-States-ExhibitStateUsage-checkExhibitStateUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(PartDefinition) or
 owningType.oclIsKindOf(PartUsage)) implies
    specializesFromLibrary('Parts::Part::exhibitedStates')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-States-ExhibitStateUsage-_generalization.0" general="Systems-States-StateUsage"/>
        <generalization xmi:id="Systems-States-ExhibitStateUsage-_generalization.1" general="Systems-Actions-PerformActionUsage"/>
        <ownedAttribute xmi:id="Systems-States-ExhibitStateUsage-exhibitedState" name="exhibitedState" visibility="public" type="Systems-States-StateUsage" isDerived="true" redefinedProperty="Systems-Actions-PerformActionUsage-performedAction" association="Systems-States-_packagedElement.10">
          <ownedComment xmi:id="Systems-States-ExhibitStateUsage-exhibitedState-_ownedComment.0" annotatedElement="Systems-States-ExhibitStateUsage-exhibitedState">
            <body>&lt;p>The &lt;code>StateUsage&lt;/code> to be exhibited by the &lt;code>ExhibitStateUsage&lt;/code>. It is the &lt;code>performedAction&lt;/code> of the &lt;code>ExhibitStateUsage&lt;/code> considered as a &lt;code>PerformActionUsage&lt;/code>, which must be a &lt;code>StateUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-ExhibitStateUsage-exhibitedState-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-ExhibitStateUsage-exhibitedState-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="Systems-States-TransitionFeatureKind" name="TransitionFeatureKind" visibility="public">
        <ownedComment xmi:id="Systems-States-TransitionFeatureKind-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureKind">
          <body>&lt;p>A &lt;code>TransitionActionKind&lt;/code> indicates whether the &lt;code>transitionFeature&lt;/code> of a &lt;code>TransitionFeatureMembership&lt;/code> is a trigger, guard or effect.&lt;/p></body>
        </ownedComment>
        <ownedLiteral xmi:id="Systems-States-TransitionFeatureKind-trigger" name="trigger" visibility="public">
          <ownedComment xmi:id="Systems-States-TransitionFeatureKind-trigger-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureKind-trigger">
            <body>&lt;p>Indicates that the &lt;code>transitionFeature&lt;/code> of a &lt;code>TransitionFeatureMembership&lt;/code> is a &lt;code>triggerAction&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-States-TransitionFeatureKind-guard" name="guard" visibility="public">
          <ownedComment xmi:id="Systems-States-TransitionFeatureKind-guard-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureKind-guard">
            <body>&lt;p>Indicates that the &lt;code>transitionFeature&lt;/code> of a &lt;code>TransitionFeatureMembership&lt;/code> is a &lt;code>guardExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-States-TransitionFeatureKind-effect" name="effect" visibility="public">
          <ownedComment xmi:id="Systems-States-TransitionFeatureKind-effect-_ownedComment.0" annotatedElement="Systems-States-TransitionFeatureKind-effect">
            <body>&lt;p>Indicates that the &lt;code>transitionFeature&lt;/code> of a &lt;code>TransitionFeatureMembership&lt;/code> is an &lt;code>effectAction&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.10" name="" visibility="private" memberEnd="Systems-States-ExhibitStateUsage-exhibitedState Systems-States-_packagedElement.10-exhibitingState">
        <ownedEnd xmi:id="Systems-States-_packagedElement.10-exhibitingState" name="exhibitingState" visibility="public" type="Systems-States-ExhibitStateUsage" isDerived="true" subsettedProperty="Systems-Actions-_packagedElement.0-performingAction" association="Systems-States-_packagedElement.10">
          <ownedComment xmi:id="Systems-States-_packagedElement.10-exhibitingState-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.10-exhibitingState">
            <body>&lt;p>The ExhibitStateUsages that have a certain StateUsage as their &lt;tt>exhibitedState&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.10-exhibitingState-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.10-exhibitingState-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.11" name="" visibility="private" memberEnd="Systems-States-TransitionUsage-succession Systems-States-_packagedElement.11-linkedTransition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.11-linkedTransition" name="linkedTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" subsettedProperty="Root-Elements-Element-owningNamespace" association="Systems-States-_packagedElement.11">
          <ownedComment xmi:id="Systems-States-_packagedElement.11-linkedTransition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.11-linkedTransition">
            <body>&lt;p>The Transition that owns a certain Succession.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.11-linkedTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.11-linkedTransition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.12" name="" visibility="private" memberEnd="Systems-States-TransitionUsage-effectAction Systems-States-_packagedElement.12-activeTransition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.12-activeTransition" name="activeTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-States-_packagedElement.12">
          <ownedComment xmi:id="Systems-States-_packagedElement.12-activeTransition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.12-activeTransition">
            <body>&lt;p>The TransitionUsage that has a certain &lt;tt>effectAction&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.12-activeTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.12-activeTransition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.13" name="" visibility="private" memberEnd="Systems-States-TransitionUsage-target Systems-States-_packagedElement.13-incomingTransition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.13-incomingTransition" name="incomingTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" association="Systems-States-_packagedElement.13">
          <ownedComment xmi:id="Systems-States-_packagedElement.13-incomingTransition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.13-incomingTransition">
            <body>&lt;p>The TransitionUsage incoming to a certain target &lt;tt>ActionUsage&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.13-incomingTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.13-incomingTransition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.14" name="" visibility="private" memberEnd="Systems-States-TransitionUsage-triggerAction Systems-States-_packagedElement.14-triggeredTransition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.14-triggeredTransition" name="triggeredTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-States-_packagedElement.14">
          <ownedComment xmi:id="Systems-States-_packagedElement.14-triggeredTransition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.14-triggeredTransition">
            <body>&lt;p>The TransitionUsage that is triggered by a certain AcceptActionUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.14-triggeredTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.14-triggeredTransition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.15" name="" visibility="private" memberEnd="Systems-States-TransitionUsage-guardExpression Systems-States-_packagedElement.15-guardedTransition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.15-guardedTransition" name="guardedTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-States-_packagedElement.15">
          <ownedComment xmi:id="Systems-States-_packagedElement.15-guardedTransition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.15-guardedTransition">
            <body>&lt;p>The TransitionUsage that is guarded by a certain Expression.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.15-guardedTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.15-guardedTransition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.16" name="" visibility="private" memberEnd="Systems-States-TransitionUsage-source Systems-States-_packagedElement.16-outgoingTransition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.16-outgoingTransition" name="outgoingTransition" visibility="public" type="Systems-States-TransitionUsage" isDerived="true" association="Systems-States-_packagedElement.16">
          <ownedComment xmi:id="Systems-States-_packagedElement.16-outgoingTransition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.16-outgoingTransition">
            <body>&lt;p>The TransitionUsage outgoing from a certain source &lt;tt>ActionUsage&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.16-outgoingTransition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.16-outgoingTransition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.17" name="" visibility="private" memberEnd="Systems-States-StateDefinition-exitAction Systems-States-_packagedElement.17-exitedStateDefinition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.17-exitedStateDefinition" name="exitedStateDefinition" visibility="public" type="Systems-States-StateDefinition" isDerived="true" association="Systems-States-_packagedElement.17">
          <ownedComment xmi:id="Systems-States-_packagedElement.17-exitedStateDefinition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.17-exitedStateDefinition">
            <body>&lt;p>The StateDefinitions with a certain &lt;tt>exitAction&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.17-exitedStateDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.17-exitedStateDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.18" name="" visibility="private" memberEnd="Systems-States-StateDefinition-doAction Systems-States-_packagedElement.18-activeStateDefintion">
        <ownedEnd xmi:id="Systems-States-_packagedElement.18-activeStateDefintion" name="activeStateDefintion" visibility="public" type="Systems-States-StateDefinition" isDerived="true" association="Systems-States-_packagedElement.18">
          <ownedComment xmi:id="Systems-States-_packagedElement.18-activeStateDefintion-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.18-activeStateDefintion">
            <body>&lt;p>The StateDefinitions with a certain &lt;tt>doAction&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.18-activeStateDefintion-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.18-activeStateDefintion-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.19" name="" visibility="private" memberEnd="Systems-States-StateUsage-entryAction Systems-States-_packagedElement.19-enteredState">
        <ownedEnd xmi:id="Systems-States-_packagedElement.19-enteredState" name="enteredState" visibility="public" type="Systems-States-StateUsage" isDerived="true" association="Systems-States-_packagedElement.19">
          <ownedComment xmi:id="Systems-States-_packagedElement.19-enteredState-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.19-enteredState">
            <body>&lt;p>The StateUsages with a certain &lt;tt>entryAction&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.19-enteredState-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.19-enteredState-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.20" name="" visibility="private" memberEnd="Systems-States-StateDefinition-entryAction Systems-States-_packagedElement.20-enteredStateDefinition">
        <ownedEnd xmi:id="Systems-States-_packagedElement.20-enteredStateDefinition" name="enteredStateDefinition" visibility="public" type="Systems-States-StateDefinition" isDerived="true" association="Systems-States-_packagedElement.20">
          <ownedComment xmi:id="Systems-States-_packagedElement.20-enteredStateDefinition-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.20-enteredStateDefinition">
            <body>&lt;p>The StateDefinitions with a certain &lt;tt>entryAction&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.20-enteredStateDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.20-enteredStateDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.21" name="" visibility="private" memberEnd="Systems-States-TransitionFeatureMembership-transitionFeature Systems-States-_packagedElement.21-transitionFeatureMembership">
        <ownedEnd xmi:id="Systems-States-_packagedElement.21-transitionFeatureMembership" name="transitionFeatureMembership" visibility="public" type="Systems-States-TransitionFeatureMembership" isDerived="true" subsettedProperty="Core-Features-Feature-owningFeatureMembership" association="Systems-States-_packagedElement.21">
          <ownedComment xmi:id="Systems-States-_packagedElement.21-transitionFeatureMembership-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.21-transitionFeatureMembership">
            <body>&lt;p>The TransitionFeatureMembership that owns a certain Step (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.21-transitionFeatureMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.21-transitionFeatureMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.22" name="" visibility="private" memberEnd="Systems-States-StateUsage-exitAction Systems-States-_packagedElement.22-exitedState">
        <ownedEnd xmi:id="Systems-States-_packagedElement.22-exitedState" name="exitedState" visibility="public" type="Systems-States-StateUsage" isDerived="true" association="Systems-States-_packagedElement.22">
          <ownedComment xmi:id="Systems-States-_packagedElement.22-exitedState-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.22-exitedState">
            <body>&lt;p>The StateUsages with a certain &lt;tt>exitAction&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.22-exitedState-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.22-exitedState-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.23" name="" visibility="private" memberEnd="Systems-States-StateUsage-doAction Systems-States-_packagedElement.23-activeState">
        <ownedEnd xmi:id="Systems-States-_packagedElement.23-activeState" name="activeState" visibility="public" type="Systems-States-StateUsage" isDerived="true" association="Systems-States-_packagedElement.23">
          <ownedComment xmi:id="Systems-States-_packagedElement.23-activeState-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.23-activeState">
            <body>&lt;p>The StateUsages with a certain &lt;tt>doAction&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.23-activeState-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.23-activeState-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-States-_packagedElement.24" name="" visibility="private" memberEnd="Systems-States-StateSubactionMembership-action Systems-States-_packagedElement.24-stateSubactionMembership">
        <ownedEnd xmi:id="Systems-States-_packagedElement.24-stateSubactionMembership" name="stateSubactionMembership" visibility="public" type="Systems-States-StateSubactionMembership" isDerived="true" subsettedProperty="Core-Features-Feature-owningFeatureMembership" association="Systems-States-_packagedElement.24">
          <ownedComment xmi:id="Systems-States-_packagedElement.24-stateSubactionMembership-_ownedComment.0" annotatedElement="Systems-States-_packagedElement.24-stateSubactionMembership">
            <body>&lt;p>The StateSubactionMembership that is the owner of a certain ActionUsage (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-States-_packagedElement.24-stateSubactionMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-States-_packagedElement.24-stateSubactionMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Constraints" name="Constraints" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Constraints-ConstraintUsage" name="ConstraintUsage" visibility="public">
        <ownedComment xmi:id="Systems-Constraints-ConstraintUsage-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintUsage">
          <body>&lt;p>A &lt;code>ConstraintUsage&lt;/code> is an &lt;code>OccurrenceUsage&lt;/code> that is also a &lt;code>BooleanExpression&lt;code>, and, so, is typed by a &lt;code>Predicate&lt;/code>. Nominally, if the type is a &lt;code>ConstraintDefinition&lt;code>, a &lt;code>ConstraintUsage&lt;/code> is a &lt;code>Usage&lt;/code> of that &lt;code>ConstraintDefinition&lt;code>. However, other kinds of kernel &lt;code>Predicates&lt;/code> are also allowed, to permit use of &lt;code>Predicates&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageRequirementConstraintSpecialization" name="checkConstraintUsageRequirementConstraintSpecialization" visibility="public" constrainedElement="Systems-Constraints-ConstraintUsage">
          <ownedComment xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageRequirementConstraintSpecialization-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintUsage-checkConstraintUsageRequirementConstraintSpecialization">
            <body>&lt;p>A composite &lt;code>ConstraintUsage&lt;/code> whose &lt;code>owningType&lt;/code> is an &lt;code>ItemDefinition&lt;/code> or an &lt;code>ItemUsage&lt;/code> must directly or indirectly specialize the &lt;code>ConstraintUsage&lt;/code> &lt;code>&lt;em>Items::Item::checkedConstraints&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageRequirementConstraintSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningFeatureMembership &lt;> null and
owningFeatureMembership.oclIsKindOf(RequirementConstraintMembership) implies
    if owningFeatureMembership.oclAsType(RequirementConstraintMembership).kind = 
        RequirementConstraintKind::assumption then
        specializesFromLibrary('Requirements::RequirementCheck::assumptions')
    else
        specializesFromLibrary('Requirements::RequirementCheck::constraints')
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageSpecialization" name="checkConstraintUsageSpecialization" visibility="public" constrainedElement="Systems-Constraints-ConstraintUsage">
          <ownedComment xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintUsage-checkConstraintUsageSpecialization">
            <body>&lt;p>A &lt;code>ConstraintUsage&lt;/code> must directly or indirectly specialize the base &lt;code>ConstraintUsage&lt;/code> &lt;em>&lt;code>Constraints::constraintChecks&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Constraints::constraintChecks')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageCheckedConstraintSpecialization" name="checkConstraintUsageCheckedConstraintSpecialization" visibility="public" constrainedElement="Systems-Constraints-ConstraintUsage">
          <ownedComment xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageCheckedConstraintSpecialization-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintUsage-checkConstraintUsageCheckedConstraintSpecialization">
            <body>&lt;p>A &lt;code>ConstraintUsage&lt;/code> whose &lt;code>owningType&lt;/code> is an &lt;code>ItemDefinition&lt;/code> or &lt;code>ItemUsage&lt;/code> must directly or indirectly specialize the &lt;code>ConstraintUsage&lt;/code> &lt;em>&lt;code>Items::Item::checkedConstraints&lt;/code>&lt;/em>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Constraints-ConstraintUsage-checkConstraintUsageCheckedConstraintSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(ItemDefinition) or
 owningType.oclIsKindOf(ItemUsage)) implies
    specializesFromLibrary('Items::Item::checkedConstraints')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Constraints-ConstraintUsage-_generalization.0" general="Kernel-Functions-BooleanExpression"/>
        <generalization xmi:id="Systems-Constraints-ConstraintUsage-_generalization.1" general="Systems-Occurrences-OccurrenceUsage"/>
        <ownedAttribute xmi:id="Systems-Constraints-ConstraintUsage-constraintDefinition" name="constraintDefinition" visibility="public" type="Kernel-Functions-Predicate" isDerived="true" redefinedProperty="Kernel-Functions-BooleanExpression-predicate" association="Systems-Constraints-_packagedElement.2">
          <ownedComment xmi:id="Systems-Constraints-ConstraintUsage-constraintDefinition-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintUsage-constraintDefinition">
            <body>&lt;p>The (single) &lt;code>Predicate&lt;/code> that is the type of this &lt;code>ConstraintUsage&lt;/code>. Nominally, this will be a &lt;code>ConstraintDefinition&lt;/code>, but other kinds of &lt;code>Predicates&lt;/code> are also allowed, to permit use of &lt;code>Predicates&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Constraints-ConstraintUsage-constraintDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Constraints-ConstraintUsage-constraintDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Constraints-ConstraintUsage-namingFeature" name="namingFeature" visibility="public" bodyCondition="Systems-Constraints-ConstraintUsage-namingFeature-unnamed1" redefinedOperation="Systems-DefinitionAndUsage-Usage-namingFeature">
          <ownedComment xmi:id="Systems-Constraints-ConstraintUsage-namingFeature-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintUsage-namingFeature">
            <body>&lt;p>The naming &lt;code>Feature&lt;/code> of a &lt;code>ConstraintUsage&lt;/code> that is owned by a &lt;code>RequirementConstraintMembership&lt;/code> and has an &lt;code>ownedReferenceSubsetting&lt;/code> is the &lt;code>referencedFeature&lt;/code> of that &lt;code>ownedReferenceSubsetting&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Constraints-ConstraintUsage-namingFeature-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Constraints-ConstraintUsage-namingFeature-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>if ownedFeatureMembership &lt;> null and
ownedFeatureMembership.oclIsKindOf(RequirementConstraintMembership) and
ownedReferenceSubsetting &lt;> null then
    ownedReferenceSubsetting.referencedFeature
else
    self.oclAsType(OccurrenceUsage).namingFeature()
endif</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Constraints-ConstraintUsage-namingFeature-_ownedParameter.0" name="" visibility="public" type="Core-Features-Feature" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Constraints-ConstraintUsage-namingFeature-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Constraints-ConstraintUsage-namingFeature-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-unnamed1" redefinedOperation="Kernel-Functions-Expression-modelLevelEvaluable">
          <ownedComment xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintUsage-modelLevelEvaluable">
            <body>&lt;p>A &lt;code>ConstraintUsage&lt;/code> is not model-level evaluable.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>false</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Systems-Constraints-ConstraintUsage-modelLevelEvaluable-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Constraints-ConstraintDefinition" name="ConstraintDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Constraints-ConstraintDefinition-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintDefinition">
          <body>&lt;p>A &lt;code>ConstraintDefinition&lt;/code> is an &lt;code>OccurrenceDefinition&lt;/code> that is also a &lt;code>Predicate&lt;/code> that defines a constraint that may be asserted to hold on a system or part of a system.&lt;/p>

</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Constraints-ConstraintDefinition-checkConstraintDefinitionSpecialization" name="checkConstraintDefinitionSpecialization" visibility="public" constrainedElement="Systems-Constraints-ConstraintDefinition">
          <ownedComment xmi:id="Systems-Constraints-ConstraintDefinition-checkConstraintDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Constraints-ConstraintDefinition-checkConstraintDefinitionSpecialization">
            <body>&lt;p>A &lt;code>ConstraintDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>ConstraintDefinition&lt;/code> &lt;em>&lt;code>Constraints::ConstraintCheck&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Constraints-ConstraintDefinition-checkConstraintDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Constraints::ConstraintCheck')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Constraints-ConstraintDefinition-_generalization.0" general="Systems-Occurrences-OccurrenceDefinition"/>
        <generalization xmi:id="Systems-Constraints-ConstraintDefinition-_generalization.1" general="Kernel-Functions-Predicate"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Constraints-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Constraints-ConstraintUsage-constraintDefinition Systems-Constraints-_packagedElement.2-definedConstraint">
        <ownedEnd xmi:id="Systems-Constraints-_packagedElement.2-definedConstraint" name="definedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isDerived="true" subsettedProperty="Kernel-Functions-_packagedElement.5-typedBooleanExpression" association="Systems-Constraints-_packagedElement.2">
          <ownedComment xmi:id="Systems-Constraints-_packagedElement.2-definedConstraint-_ownedComment.0" annotatedElement="Systems-Constraints-_packagedElement.2-definedConstraint">
            <body>&lt;p>The ConstraintUsages typed by a certain Predicate.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Constraints-_packagedElement.2-definedConstraint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Constraints-_packagedElement.2-definedConstraint-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Constraints-_packagedElement.3" name="" visibility="private" memberEnd="Systems-Constraints-AssertConstraintUsage-assertedConstraint Systems-Constraints-_packagedElement.3-constraintAssertion">
        <ownedEnd xmi:id="Systems-Constraints-_packagedElement.3-constraintAssertion" name="constraintAssertion" visibility="public" type="Systems-Constraints-AssertConstraintUsage" isDerived="true" association="Systems-Constraints-_packagedElement.3">
          <ownedComment xmi:id="Systems-Constraints-_packagedElement.3-constraintAssertion-_ownedComment.0" annotatedElement="Systems-Constraints-_packagedElement.3-constraintAssertion">
            <body>&lt;p>The AssertConstraintUsages that have a certain ConstraintUsage as their &lt;tt>assertedConstraint&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Constraints-_packagedElement.3-constraintAssertion-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Constraints-_packagedElement.3-constraintAssertion-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Constraints-AssertConstraintUsage" name="AssertConstraintUsage" visibility="public">
        <ownedComment xmi:id="Systems-Constraints-AssertConstraintUsage-_ownedComment.0" annotatedElement="Systems-Constraints-AssertConstraintUsage">
          <body>&lt;p>An &lt;code>AssertConstraintUsage&lt;/code> is a &lt;code>ConstraintUsage&lt;/code> that is also an &lt;code>Invariant&lt;/code> and, so, is asserted to be true (by default). Unless it is the &lt;code>AssertConstraintUsage&lt;/code> itself, the asserted &lt;code>ConstraintUsage&lt;/code> is related to the &lt;code>AssertConstraintUsage&lt;/code> by a ReferenceSubsetting &lt;code>Relationship&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Constraints-AssertConstraintUsage-deriveAssertConstraintUsageAssertedConstraint" name="deriveAssertConstraintUsageAssertedConstraint" visibility="public" constrainedElement="Systems-Constraints-AssertConstraintUsage">
          <ownedComment xmi:id="Systems-Constraints-AssertConstraintUsage-deriveAssertConstraintUsageAssertedConstraint-_ownedComment.0" annotatedElement="Systems-Constraints-AssertConstraintUsage-deriveAssertConstraintUsageAssertedConstraint">
            <body>&lt;p>If an &lt;code>AssertConstraintUsage&lt;/code> has no &lt;code>ownedReferenceSubsetting&lt;/code>, then its &lt;code>assertedConstraint&lt;/code> is the &lt;code>AssertConstraintUsage&lt;/code> itself. Otherwise, the &lt;code>assertedConstraint&lt;/code> is the &lt;code>referencedFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code>, which must be a &lt;code>ConstraintUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Constraints-AssertConstraintUsage-deriveAssertConstraintUsageAssertedConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>assertedConstraint =
    if ownedReferenceSubsetting = null then self
    else ownedReferenceSubsetting.referencedFeature.oclAsType(ConstraintUsage)
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Constraints-AssertConstraintUsage-_generalization.0" general="Systems-Constraints-ConstraintUsage"/>
        <generalization xmi:id="Systems-Constraints-AssertConstraintUsage-_generalization.1" general="Kernel-Functions-Invariant"/>
        <ownedAttribute xmi:id="Systems-Constraints-AssertConstraintUsage-assertedConstraint" name="assertedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isDerived="true" association="Systems-Constraints-_packagedElement.3">
          <ownedComment xmi:id="Systems-Constraints-AssertConstraintUsage-assertedConstraint-_ownedComment.0" annotatedElement="Systems-Constraints-AssertConstraintUsage-assertedConstraint">
            <body>&lt;p>The &lt;code>ConstraintUsage&lt;/code> to be performed by the &lt;code>AssertConstraintUsage&lt;/code>. It is the &lt;code>referenceFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code> for the &lt;code>AssertConstraintUsage&lt;/code>, if there is one, and, otherwise, the &lt;code>AssertConstraintUsage&lt;/code> itself.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Constraints-AssertConstraintUsage-assertedConstraint-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Constraints-AssertConstraintUsage-assertedConstraint-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Requirements" name="Requirements" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.0" name="" visibility="private" memberEnd="Systems-Requirements-RequirementUsage-requiredConstraint Systems-Requirements-_packagedElement.0-requiringRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.0-requiringRequirement" name="requiringRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-Requirements-_packagedElement.0">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.0-requiringRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.0-requiringRequirement">
            <body>&lt;p>The RequirementUsage that has a certain ConstraintUsage as a &lt;code>requiredConstraint&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.0-requiringRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.0-requiringRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.1" name="" visibility="private" memberEnd="Systems-Requirements-RequirementUsage-assumedConstraint Systems-Requirements-_packagedElement.1-assumingRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.1-assumingRequirement" name="assumingRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-Requirements-_packagedElement.1">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.1-assumingRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.1-assumingRequirement">
            <body>&lt;p>The RequirementUsage that has a certain ConstraintUsage as an &lt;cod>assumedConstraint&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.1-assumingRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.1-assumingRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Requirements-SatisfyRequirementUsage-satisfiedRequirement Systems-Requirements-_packagedElement.2-requirementSatisfaction">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.2-requirementSatisfaction" name="requirementSatisfaction" visibility="public" type="Systems-Requirements-SatisfyRequirementUsage" isDerived="true" subsettedProperty="Systems-Constraints-_packagedElement.3-constraintAssertion" association="Systems-Requirements-_packagedElement.2">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.2-requirementSatisfaction-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.2-requirementSatisfaction">
            <body>&lt;p>The SatifyRequirementUsages that have a certain RequirementUsage as their &lt;tt>satisfiedRequirement&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.2-requirementSatisfaction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.2-requirementSatisfaction-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-RequirementDefinition" name="RequirementDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition">
          <body>&lt;p>A &lt;code>RequirementDefinition&lt;/code> is a &lt;code>ConstraintDefinition&lt;/code> that defines a requirement used in the context of a specification as a constraint that a valid solution must satisfy. The specification is relative to a specified subject, possibly in collaboration with one or more external actors.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionText" name="deriveRequirementDefinitionText" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionText-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionText">
            <body>&lt;p>The &lt;code>texts&lt;/code> of a&lt;code>RequirementDefinition&lt;/code> are the &lt;code>bodies&lt;/code> of the &lt;code>documentation&lt;/code> of the &lt;code>RequirementDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionText-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>text = documentation.body</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionAssumedConstraint" name="deriveRequirementDefinitionAssumedConstraint" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionAssumedConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionAssumedConstraint">
            <body>&lt;p>The &lt;code>assumedConstraints&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> are the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code> with &lt;code>kind = assumption&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionAssumedConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>assumedConstraint = ownedFeatureMembership->
    selectByKind(RequirementConstraintMembership)->
    select(kind = RequirementConstraintKind::assumption).
    ownedConstraint</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionRequiredConstraint" name="deriveRequirementDefinitionRequiredConstraint" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionRequiredConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionRequiredConstraint">
            <body>&lt;p>The &lt;code>requiredConstraints&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> are the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code> with &lt;code>kind = requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionRequiredConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>requiredConstraint = ownedFeatureMembership->
    selectByKind(RequirementConstraintMembership)->
    select(kind = RequirementConstraintKind::requirement).
    ownedConstraint</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionSubjectParameter" name="deriveRequirementDefinitionSubjectParameter" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionSubjectParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionSubjectParameter">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> is the &lt;code>ownedSubjectParameter&lt;/code> of its &lt;code>SubjectMembership&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionSubjectParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>subjectParameter =
    let subjects : OrderedSet(SubjectMembership) = 
        featureMembership->selectByKind(SubjectMembership) in
    if subjects->isEmpty() then null
    else subjects->first().ownedSubjectParameter
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionFramedConcern" name="deriveRequirementDefinitionFramedConcern" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionFramedConcern-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionFramedConcern">
            <body>&lt;p>The &lt;code>framedConcerns&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> are the &lt;code>ownedConcerns&lt;/code> of the &lt;code>FramedConcernMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionFramedConcern-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>framedConcern = featureMembership->
    selectByKind(FramedConcernMembership).
    ownedConcern</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionActorParameter" name="deriveRequirementDefinitionActorParameter" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionActorParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionActorParameter">
            <body>&lt;p>The &lt;code>actorParameters&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> are the &lt;code>ownedActorParameters&lt;/code> of the &lt;code>ActorMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionActorParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>actorParameter = featureMembership->
    selectByKind(ActorMembership).
    ownedActorParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionStakeholderParameter" name="deriveRequirementDefinitionStakeholderParameter" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionStakeholderParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionStakeholderParameter">
            <body>&lt;p>The &lt;code>stakeHolderParameters&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> are the &lt;code>ownedStakeholderParameters&lt;/code> of the &lt;code>StakeholderMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-deriveRequirementDefinitionStakeholderParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>stakeholderParameter = featureMembership->
    selectByKind(StakholderMembership).
    ownedStakeholderParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionOnlyOneSubject" name="validateRequirementDefinitionOnlyOneSubject" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionOnlyOneSubject-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionOnlyOneSubject">
            <body>&lt;p>A &lt;code>RequirementDefinition&lt;/code> must have at most one &lt;code>featureMembership&lt;/code> that is a &lt;code>SubjectMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionOnlyOneSubject-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership->	
    selectByKind(SubjectMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionSubjectParameterPosition" name="validateRequirementDefinitionSubjectParameterPosition" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionSubjectParameterPosition-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionSubjectParameterPosition">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> must be its first &lt;code>input&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-validateRequirementDefinitionSubjectParameterPosition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>input->notEmpty() and input->first() = subjectParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementDefinition-checkRequirementDefinition" name="checkRequirementDefinition" visibility="public" constrainedElement="Systems-Requirements-RequirementDefinition">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-checkRequirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-checkRequirementDefinition">
            <body>&lt;p>A &lt;code>RequirementDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>RequirementDefinition&lt;/code> &lt;code>&lt;em>Requirements::RequirementCheck&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementDefinition-checkRequirementDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Requirements::RequirementCheck')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-RequirementDefinition-_generalization.0" general="Systems-Constraints-ConstraintDefinition"/>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-reqId" name="reqId" visibility="public" redefinedProperty="Root-Elements-Element-declaredShortName">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-reqId-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-reqId">
            <body>&lt;p>An optional modeler-specified identifier for this &lt;code>RequirementDefinition&lt;/code> (used, e.g., to link it to an original requirement text in some source document), which is the &lt;code>declaredShortName&lt;/code> for the &lt;code>RequirementDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-reqId-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-reqId-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-text" name="text" visibility="public" isDerived="true">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-text-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-text">
            <body>&lt;p>An optional textual statement of the requirement represented by this &lt;code>RequirementDefinition&lt;/code>, derived from the &lt;code>bodies&lt;/code> of the &lt;code>documentation&lt;/code> of the &lt;code>RequirementDefinition&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-text-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-text-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-subjectParameter" name="subjectParameter" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-parameter Systems-DefinitionAndUsage-Definition-ownedUsage" association="Systems-Requirements-_packagedElement.13">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-subjectParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-subjectParameter">
            <body>&lt;p>The &lt;code>parameter&lt;/code> of this &lt;code>RequirementDefinition&lt;/code> that is owned via a &lt;code>SubjectMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-subjectParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-subjectParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-actorParameter" name="actorParameter" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedPart Kernel-Behaviors-Behavior-parameter" association="Systems-Requirements-_packagedElement.28">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-actorParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-actorParameter">
            <body>&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>RequirementDefinition&lt;/code> that are owned via &lt;code>ActorMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-actorParameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-actorParameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-stakeholderParameter" name="stakeholderParameter" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedPart Kernel-Behaviors-Behavior-parameter" association="Systems-Requirements-_packagedElement.31">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-stakeholderParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-stakeholderParameter">
            <body>&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>RequirementDefinition&lt;/code> that are owned via &lt;code>StakeholderMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-stakeholderParameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-stakeholderParameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-assumedConstraint" name="assumedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Systems-Requirements-_packagedElement.6">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-assumedConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-assumedConstraint">
            <body>&lt;p>The owned &lt;code>ConstraintUsages&lt;/code> that represent assumptions of this &lt;code>RequirementDefinition&lt;/code>, which are the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code> with &lt;code>kind = assumption&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-assumedConstraint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-assumedConstraint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-requiredConstraint" name="requiredConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Systems-Requirements-_packagedElement.9">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-requiredConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-requiredConstraint">
            <body>&lt;p>The owned &lt;code>ConstraintUsages&lt;/code> that represent requirements of this &lt;code>RequirementDefinition&lt;/code>, derived as the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code> with &lt;code>kind&lt;/code> = &lt;code>requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-requiredConstraint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-requiredConstraint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementDefinition-framedConcern" name="framedConcern" visibility="public" type="Systems-Requirements-ConcernUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-Requirements-RequirementDefinition-requiredConstraint" association="Systems-Requirements-_packagedElement.17">
          <ownedComment xmi:id="Systems-Requirements-RequirementDefinition-framedConcern-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementDefinition-framedConcern">
            <body>&lt;p>The &lt;code>ConcernUsages&lt;/code> framed by this &lt;code>RequirementDefinition&lt;/code>, which are the &lt;code>ownedConcerns&lt;/code> of all &lt;code>FramedConcernMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementDefinition-framedConcern-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementDefinition-framedConcern-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.4" name="" visibility="private" memberEnd="Systems-Requirements-SatisfyRequirementUsage-satisfyingFeature Systems-Requirements-_packagedElement.4-satisfiedRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.4-satisfiedRequirement" name="satisfiedRequirement" visibility="public" type="Systems-Requirements-SatisfyRequirementUsage" isDerived="true" association="Systems-Requirements-_packagedElement.4">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.4-satisfiedRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.4-satisfiedRequirement">
            <body>&lt;p>The SatisfyRequirementUsages that have a certain Feature as their &lt;tt>satisfyingFeature&lt;/tt>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.4-satisfiedRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.4-satisfiedRequirement-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.5" name="" visibility="private" memberEnd="Systems-Requirements-RequirementUsage-requirementDefinition Systems-Requirements-_packagedElement.5-definedRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.5-definedRequirement" name="definedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" subsettedProperty="Systems-Constraints-_packagedElement.2-definedConstraint" association="Systems-Requirements-_packagedElement.5">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.5-definedRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.5-definedRequirement">
            <body>&lt;p>The RequirementUsages typed by a certain RequirementDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.5-definedRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.5-definedRequirement-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.6" name="" visibility="private" memberEnd="Systems-Requirements-RequirementDefinition-assumedConstraint Systems-Requirements-_packagedElement.6-assumingRequirementDefinition">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.6-assumingRequirementDefinition" name="assumingRequirementDefinition" visibility="public" type="Systems-Requirements-RequirementDefinition" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-Requirements-_packagedElement.6">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.6-assumingRequirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.6-assumingRequirementDefinition">
            <body>&lt;p>The RequirementDefinition that has a certain ConstraintUsage as an &lt;code>assumedConstraint&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.6-assumingRequirementDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.6-assumingRequirementDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-SatisfyRequirementUsage" name="SatisfyRequirementUsage" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-SatisfyRequirementUsage-_ownedComment.0" annotatedElement="Systems-Requirements-SatisfyRequirementUsage">
          <body>&lt;p>A &lt;code>SatisfyRequirementUsage&lt;/code> is an &lt;code>AssertConstraintUsage&lt;/code> that asserts, by default, that a satisfied &lt;code>RequirementUsage&lt;/code> is true for a specific &lt;code>satisfyingFeature&lt;/code>, or, if &lt;code>isNegated = true&lt;/code>, that the &lt;code>RequirementUsage&lt;/code> is false. The satisfied &lt;code>RequirementUsage&lt;/code> is related to the &lt;code>SatisfyRequirementUsage&lt;/code> by a &lt;code>ReferenceSubsetting&lt;/code> &lt;code>Relationship&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-SatisfyRequirementUsage-deriveSatisfyRequirementUsageSatisfyingFeature" name="deriveSatisfyRequirementUsageSatisfyingFeature" visibility="public" constrainedElement="Systems-Requirements-SatisfyRequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-SatisfyRequirementUsage-deriveSatisfyRequirementUsageSatisfyingFeature-_ownedComment.0" annotatedElement="Systems-Requirements-SatisfyRequirementUsage-deriveSatisfyRequirementUsageSatisfyingFeature">
            <body>&lt;p>The &lt;code>satisfyingFeature&lt;/code> of a &lt;code>SatisfyRequirementUsage&lt;/code> is the &lt;code>Feature&lt;/code> to which the &lt;code>subjectParameter&lt;/code> is bound.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-SatisfyRequirementUsage-deriveSatisfyRequirementUsageSatisfyingFeature-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>satisfyingFeature =
    let bindings: BindingConnector = ownedMember->
        selectByKind(BindingConnector)->
        select(b | b.relatedElement->includes(subjectParameter)) in
    if bindings->isEmpty() or 
       bindings->first().relatedElement->exits(r | r &lt;> subjectParameter) 
    then null
    else bindings->first().relatedElement->any(r | r &lt;> subjectParameter)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-SatisfyRequirementUsage-checkSatisfyRequirementUsageBindingConnector" name="checkSatisfyRequirementUsageBindingConnector" visibility="public" constrainedElement="Systems-Requirements-SatisfyRequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-SatisfyRequirementUsage-checkSatisfyRequirementUsageBindingConnector-_ownedComment.0" annotatedElement="Systems-Requirements-SatisfyRequirementUsage-checkSatisfyRequirementUsageBindingConnector">
            <body>&lt;p>A &lt;code>SatisfyRequirementUsage&lt;/code> must exactly one &lt;code>ownedMember&lt;/code> that is a &lt;code>BindingConnector&lt;/code> between its &lt;code>subjectParameter&lt;/code> and some other &lt;code>Feature&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-SatisfyRequirementUsage-checkSatisfyRequirementUsageBindingConnector-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedMember->selectByKind(BindingConnector)->
    select(b |
        b.relatedElement->includes(subjectParameter) and
        b.relatedElement->exists(r | r &lt;> subjectParameter))->
    size() = 1</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-SatisfyRequirementUsage-_generalization.0" general="Systems-Requirements-RequirementUsage"/>
        <generalization xmi:id="Systems-Requirements-SatisfyRequirementUsage-_generalization.1" general="Systems-Constraints-AssertConstraintUsage"/>
        <ownedAttribute xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfiedRequirement" name="satisfiedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" redefinedProperty="Systems-Constraints-AssertConstraintUsage-assertedConstraint" association="Systems-Requirements-_packagedElement.2">
          <ownedComment xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfiedRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-SatisfyRequirementUsage-satisfiedRequirement">
            <body>&lt;p>The &lt;code>RequirementUsage&lt;/code> that is satisfied by the &lt;code>satisfyingSubject&lt;/code> of this &lt;code>SatisfyRequirementUsage&lt;/code>. It is the &lt;code>assertedConstraint&lt;/code> of the &lt;code>SatisfyRequirementUsage&lt;/code> considered as an &lt;code>AssertConstraintUsage&lt;/code>, which must be a &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfiedRequirement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfiedRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfyingFeature" name="satisfyingFeature" visibility="public" type="Core-Features-Feature" isDerived="true" association="Systems-Requirements-_packagedElement.4">
          <ownedComment xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfyingFeature-_ownedComment.0" annotatedElement="Systems-Requirements-SatisfyRequirementUsage-satisfyingFeature">
            <body>&lt;p>The &lt;code>Feature&lt;/code> that represents the actual subject that is asserted to satisfy the &lt;code>satisfiedRequirement&lt;/code>. The &lt;code>satisfyingFeature&lt;/code> is bound to the &lt;code>subjectParameter&lt;/code> of the &lt;code>SatisfyRequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfyingFeature-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-SatisfyRequirementUsage-satisfyingFeature-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-RequirementUsage" name="RequirementUsage" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-RequirementUsage-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage">
          <body>&lt;p>A &lt;code>RequirementUsage&lt;/code> is a &lt;code>Usage&lt;/code> of a &lt;code>RequirementDefinition&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageActorParameter" name="deriveRequirementUsageActorParameter" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageActorParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-deriveRequirementUsageActorParameter">
            <body>&lt;p>The &lt;code>actorParameters&lt;/code> of a &lt;code>RequirementUsage&lt;/code> are the &lt;code>ownedActorParameters&lt;/code> of the &lt;code>ActorMemberships&lt;/code> of the &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageActorParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>actorParameter = featureMembership->
    selectByKind(ActorMembership).
    ownedActorParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageAssumedConstraint" name="deriveRequirementUsageAssumedConstraint" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageAssumedConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-deriveRequirementUsageAssumedConstraint">
            <body>&lt;p>The &lt;code>assumedConstraints&lt;/code> of a &lt;code>RequirementUsage&lt;/code> are the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementDefinition&lt;/code> with &lt;code>kind = assumption&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageAssumedConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>assumedConstraint = ownedFeatureMembership->
    selectByKind(RequirementConstraintMembership)->
    select(kind = RequirementConstraintKind::assumption).
    ownedConstraint</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageFramedConcern" name="deriveRequirementUsageFramedConcern" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageFramedConcern-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-deriveRequirementUsageFramedConcern">
            <body>&lt;p>The &lt;code>framedConcerns&lt;/code> of a &lt;code>RequirementUsage&lt;/code> are the &lt;code>ownedConcerns&lt;/code> of the &lt;code>FramedConcernMemberships&lt;/code> of the &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageFramedConcern-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>framedConcern = featureMembership->
    selectByKind(FramedConcernMembership).
    ownedConcern</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageRequiredConstraint" name="deriveRequirementUsageRequiredConstraint" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageRequiredConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-deriveRequirementUsageRequiredConstraint">
            <body>&lt;p>The &lt;code>requiredConstraints&lt;/code> of a &lt;code>RequirementUsage&lt;/code> are the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementUsage&lt;/code> with &lt;code>kind = requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageRequiredConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>requiredConstraint = ownedFeatureMembership->
    selectByKind(RequirementConstraintMembership)->
    select(kind = RequirementConstraintKind::requirement).
    ownedConstraint</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageStakeholderParameter" name="deriveRequirementUsageStakeholderParameter" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageStakeholderParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-deriveRequirementUsageStakeholderParameter">
            <body>&lt;p>The &lt;code>stakeHolderParameters&lt;/code> of a &lt;code>RequirementUsage&lt;/code> are the &lt;code>ownedStakeholderParameters&lt;/code> of the &lt;code>StakeholderMemberships&lt;/code> of the &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageStakeholderParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>stakeholderParameter = featureMembership->
    selectByKind(AStakholderMembership).
    ownedStakeholderParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageSubjectParameter" name="deriveRequirementUsageSubjectParameter" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageSubjectParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-deriveRequirementUsageSubjectParameter">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>RequirementUsage&lt;/code> is the &lt;code>ownedSubjectParameter&lt;/code> of its &lt;code>SubjectMembership&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageSubjectParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>subjectParameter =
    let subjects : OrderedSet(SubjectMembership) = 
        featureMembership->selectByKind(SubjectMembership) in
    if subjects->isEmpty() then null
    else subjects->first().ownedSubjectParameter
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageText" name="deriveRequirementUsageText" visibility="public">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageText-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-deriveRequirementUsageText">
            <body>&lt;p>The &lt;code>texts&lt;/code> of a&lt;code>RequirementUsage&lt;/code> are the &lt;code>bodies&lt;/code> of the &lt;code>documentation&lt;/code> of the &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-deriveRequirementUsageText-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>text = documentation.body</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-validateRequirementUsageOnlyOneSubject" name="validateRequirementUsageOnlyOneSubject" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-validateRequirementUsageOnlyOneSubject-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-validateRequirementUsageOnlyOneSubject">
            <body>&lt;p>A &lt;code>RequirementDefinition&lt;/code> must have at most one &lt;code>featureMembership&lt;/code> that is a &lt;code>SubjectMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-validateRequirementUsageOnlyOneSubject-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership->
    selectByKind(SubjectMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-validateRequirementUsageSubjectParameterPosition" name="validateRequirementUsageSubjectParameterPosition" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-validateRequirementUsageSubjectParameterPosition-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-validateRequirementUsageSubjectParameterPosition">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>RequirementUsage&lt;/code> must be its first &lt;code>input&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-validateRequirementUsageSubjectParameterPosition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>input->notEmpty() and input->first() = subjectParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageSpecialization" name="checkRequirementUsageSpecialization" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-checkRequirementUsageSpecialization">
            <body>&lt;p>A &lt;code>RequirementUsage&lt;/code> must directly or indirectly specialize the base &lt;code>RequirementUsage&lt;/code> &lt;em>&lt;code>Requirements::requirementChecks&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Requirements::requirementChecks')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageSubrequirementSpecialization" name="checkRequirementUsageSubrequirementSpecialization" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageSubrequirementSpecialization-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-checkRequirementUsageSubrequirementSpecialization">
            <body>&lt;p>A composite &lt;code>RequirementUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>RequirementDefinition&lt;/code> or ,code>RequirementUsage&lt;/code> must directly or indirectly specialize the &lt;code>RequirementUsage&lt;/code> &lt;em>&lt;code>Requirements::RequirementCheck::subrequirements&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageSubrequirementSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
    (owningType.oclIsKindOf(RequirementDefinition) or
     owningType.oclIsKindOf(RequirementUsage)) implies
    specializesFromLibrary('Requirements::RequirementCheck::subrequirements')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageObjectiveSpecialization" name="checkRequirementUsageObjectiveSpecialization" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageObjectiveSpecialization-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-checkRequirementUsageObjectiveSpecialization">
            <body>&lt;p>A &lt;code>RequirementUsage&lt;/code> whose &lt;code>owningFeatureMembership&lt;/code> is a &lt;code>ObjectiveMembership&lt;/code> must directly or indirectly specialize the &lt;code>RequirementUsage&lt;/code> &lt;code>&lt;em>Cases::Case::obj&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageObjectiveSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningfeatureMembership &lt;> null and
owningfeatureMembership.oclIsKindOf(ObjectiveMembership) implies
    specializesFromLibrary('Cases::Case::obj')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageRequirementVerificationSpecialization" name="checkRequirementUsageRequirementVerificationSpecialization" visibility="public" constrainedElement="Systems-Requirements-RequirementUsage">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageRequirementVerificationSpecialization-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-checkRequirementUsageRequirementVerificationSpecialization">
            <body>&lt;p>A &lt;code>RequirementUsage&lt;/code> whose &lt;code>owningFeatureMembership&lt;/code> is a &lt;code>RequirementVerificationMembership&lt;/code> must directly or indirectly specialize the &lt;code>RequirementUsage&lt;/code> &lt;code>&lt;em>VerificationCases::VerificationCase::obj::requirementVerifications&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementUsage-checkRequirementUsageRequirementVerificationSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningFeatureMembership &lt;> null and
owningFeatureMembership.oclIsKindOf(RequirementVerificationMembership) implies
    specializesFromLibrary('VerificationCases::VerificationCase::obj::requirementVerifications')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-RequirementUsage-_generalization.0" general="Systems-Constraints-ConstraintUsage"/>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-requirementDefinition" name="requirementDefinition" visibility="public" type="Systems-Requirements-RequirementDefinition" isDerived="true" redefinedProperty="Systems-Constraints-ConstraintUsage-constraintDefinition" association="Systems-Requirements-_packagedElement.5">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-requirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-requirementDefinition">
            <body>&lt;p>The &lt;code>RequirementDefinition&lt;/code> that is the single &lt;code>definition&lt;/code> of this &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-requirementDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-requirementDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-reqId" name="reqId" visibility="public" redefinedProperty="Root-Elements-Element-declaredShortName">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-reqId-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-reqId">
            <body>&lt;p>An optional modeler-specified identifier for this &lt;code>RequirementUsage&lt;/code> (used, e.g., to link it to an original requirement text in some source document), which is the &lt;code>declaredShortName&lt;/code> for the &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-reqId-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-reqId-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-text" name="text" visibility="public" isDerived="true">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-text-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-text">
            <body>&lt;p>An optional textual statement of the requirement represented by this &lt;code>RequirementUsage&lt;/code>, derived from the &lt;code>bodies&lt;code> of the &lt;code>documentation&lt;/code> of the &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-text-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-text-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-requiredConstraint" name="requiredConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Systems-Requirements-_packagedElement.0">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-requiredConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-requiredConstraint">
            <body>&lt;p>The owned &lt;code>ConstraintUsages&lt;/code> that represent requirements of this &lt;code>RequirementUsage&lt;/code>, which are the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementUsage&lt;/code> with &lt;code>kind&lt;/code> = &lt;code>requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-requiredConstraint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-requiredConstraint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-assumedConstraint" name="assumedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isOrdered="true" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Systems-Requirements-_packagedElement.1">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-assumedConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-assumedConstraint">
            <body>&lt;p>The owned &lt;code>ConstraintUsages&lt;/code> that represent assumptions of this &lt;code>RequirementUsage&lt;/code>, derived as the &lt;code>ownedConstraints&lt;/code> of the &lt;code>RequirementConstraintMemberships&lt;/code> of the &lt;code>RequirementUsage&lt;/code> with &lt;code>kind&lt;/code> = &lt;code>assumption&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-assumedConstraint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-assumedConstraint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-subjectParameter" name="subjectParameter" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-parameter Systems-DefinitionAndUsage-Usage-nestedUsage" association="Systems-Requirements-_packagedElement.14">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-subjectParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-subjectParameter">
            <body>&lt;p>The &lt;code>parameter&lt;/code> of this &lt;code>RequirementUsage&lt;/code> that is owned via a &lt;code>SubjectMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-subjectParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-subjectParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-framedConcern" name="framedConcern" visibility="public" type="Systems-Requirements-ConcernUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-Requirements-RequirementUsage-requiredConstraint" association="Systems-Requirements-_packagedElement.25">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-framedConcern-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-framedConcern">
            <body>&lt;p>The &lt;code>ConcernUsages&lt;/code> framed by this &lt;code>RequirementUsage&lt;/code>, which are the &lt;code>ownedConcerns&lt;/code> of all &lt;code>FramedConcernMemberships&lt;/code> of the &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-framedConcern-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-framedConcern-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-actorParameter" name="actorParameter" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedPart Kernel-Behaviors-Step-parameter" association="Systems-Requirements-_packagedElement.27">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-actorParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-actorParameter">
            <body>&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>RequirementUsage&lt;/code> that are owned via &lt;code>ActorMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-actorParameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-actorParameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementUsage-stakeholderParameter" name="stakeholderParameter" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedPart Kernel-Behaviors-Step-parameter" association="Systems-Requirements-_packagedElement.26">
          <ownedComment xmi:id="Systems-Requirements-RequirementUsage-stakeholderParameter-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementUsage-stakeholderParameter">
            <body>&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>RequirementUsage&lt;/code> that are owned via &lt;code>StakeholderMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementUsage-stakeholderParameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementUsage-stakeholderParameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.9" name="" visibility="private" memberEnd="Systems-Requirements-RequirementDefinition-requiredConstraint Systems-Requirements-_packagedElement.9-requiringRequirementDefinition">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.9-requiringRequirementDefinition" name="requiringRequirementDefinition" visibility="public" type="Systems-Requirements-RequirementDefinition" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-Requirements-_packagedElement.9">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.9-requiringRequirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.9-requiringRequirementDefinition">
            <body>&lt;p>The RequirementDefinition that has a certain ConstraintUsage as a &lt;code>requiredConstraint&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.9-requiringRequirementDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.9-requiringRequirementDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.10" name="" visibility="private" memberEnd="Systems-Requirements-RequirementConstraintMembership-ownedConstraint Systems-Requirements-_packagedElement.10-requirementConstraintMembership">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.10-requirementConstraintMembership" name="requirementConstraintMembership" visibility="public" type="Systems-Requirements-RequirementConstraintMembership" isDerived="true" subsettedProperty="Core-Features-Feature-owningFeatureMembership" association="Systems-Requirements-_packagedElement.10">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.10-requirementConstraintMembership-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.10-requirementConstraintMembership">
            <body>&lt;p>The RequirementConstraintMembership that owns a certain ConstraintUsage as its &lt;code>ownedConstraint&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.10-requirementConstraintMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.10-requirementConstraintMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-RequirementConstraintMembership" name="RequirementConstraintMembership" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-RequirementConstraintMembership-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintMembership">
          <body>&lt;p>A &lt;code>RequirementConstraintMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> for an assumed or required &lt;code>ConstraintUsage&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-RequirementConstraintMembership-deriveRequirementConstraintMembershipReferencedConstraint" name="deriveRequirementConstraintMembershipReferencedConstraint" visibility="public" constrainedElement="Systems-Requirements-RequirementConstraintMembership">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintMembership-deriveRequirementConstraintMembershipReferencedConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintMembership-deriveRequirementConstraintMembershipReferencedConstraint">
            <body>&lt;p>The &lt;code>referencedConstraint&lt;/code> of a &lt;code>RequirementConstraintMembership&lt;/code> is the &lt;code>referencedFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code> of the &lt;code>ownedConstraint&lt;/code>, if there is one, and, otherwise, the &lt;code>ownedConstraint&lt;/code> itself.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementConstraintMembership-deriveRequirementConstraintMembershipReferencedConstraint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>referencedConstraint =
    let reference : ReferenceSubsetting = 
        ownedConstraint.ownedReferenceSubsetting in
    if reference = null then ownedConstraint
    else if not reference.referencedFeature.oclIsKindOf(ConstraintUsage) then null 
    else reference.referencedFeature.oclAsType(ConstraintUsage)
    endif endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipOwningType" name="validateRequirementConstraintMembershipOwningType" visibility="public" constrainedElement="Systems-Requirements-RequirementConstraintMembership">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipOwningType-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>RequirementConstraintMembership&lt;/code> must be a &lt;code>RequirementDefinition&lt;/code> or a &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(RequirementDefinition) or
owningType.oclIsKindOf(RequirementUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipIsComposite" name="validateRequirementConstraintMembershipIsComposite" visibility="public" constrainedElement="Systems-Requirements-RequirementConstraintMembership">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipIsComposite-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipIsComposite">
            <body>&lt;p>The &lt;code>ownedConstraint&lt;/code> of a &lt;code>RequirementConstraintMembership&lt;/code> must be composite.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-RequirementConstraintMembership-validateRequirementConstraintMembershipIsComposite-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedConstraint.isComposite</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-RequirementConstraintMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementConstraintMembership-kind" name="kind" visibility="public" type="Systems-Requirements-RequirementConstraintKind">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintMembership-kind-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintMembership-kind">
            <body>&lt;p>Whether the &lt;code>RequirementConstraintMembership&lt;/code> is for an assumed or required &lt;code>ConstraintUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementConstraintMembership-ownedConstraint" name="ownedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Systems-Requirements-_packagedElement.10">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintMembership-ownedConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintMembership-ownedConstraint">
            <body>&lt;p>The &lt;code>ConstraintUsage&lt;/code> that is the &lt;code>ownedMemberFeature&lt;/code> of this &lt;code>RequirementConstraintMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementConstraintMembership-ownedConstraint-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementConstraintMembership-ownedConstraint-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-RequirementConstraintMembership-referencedConstraint" name="referencedConstraint" visibility="public" type="Systems-Constraints-ConstraintUsage" isDerived="true" association="Systems-Requirements-_packagedElement.22">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintMembership-referencedConstraint-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintMembership-referencedConstraint">
            <body>&lt;p> The &lt;code>ConstraintUsage&lt;/code> that is referenced through this &lt;code>RequirementConstraintMembership&lt;/code>. It is the &lt;code>referencedFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code> of the &lt;code>ownedConstraint&lt;/code>, if there is one, and, otherwise, the &lt;code>ownedConstraint&lt;/code> itself.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-RequirementConstraintMembership-referencedConstraint-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-RequirementConstraintMembership-referencedConstraint-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="Systems-Requirements-RequirementConstraintKind" name="RequirementConstraintKind" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-RequirementConstraintKind-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintKind">
          <body>&lt;p>A &lt;code>RequirementConstraintKind&lt;/code> indicates whether a &lt;code>ConstraintUsage&lt;/code> is an assumption or a requirement in a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedLiteral xmi:id="Systems-Requirements-RequirementConstraintKind-assumption" name="assumption" visibility="public">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintKind-assumption-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintKind-assumption">
            <body>&lt;p>Indicates that a member &lt;code>ConstraintUsage&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;/code> represents an assumption.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-Requirements-RequirementConstraintKind-requirement" name="requirement" visibility="public">
          <ownedComment xmi:id="Systems-Requirements-RequirementConstraintKind-requirement-_ownedComment.0" annotatedElement="Systems-Requirements-RequirementConstraintKind-requirement">
            <body>&lt;p>Indicates that a member &lt;code>ConstraintUsage&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;/code>represents an requirement.&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.13" name="" visibility="private" memberEnd="Systems-Requirements-RequirementDefinition-subjectParameter Systems-Requirements-_packagedElement.13-subjectOwningRequirementDefinition">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.13-subjectOwningRequirementDefinition" name="subjectOwningRequirementDefinition" visibility="public" type="Systems-Requirements-RequirementDefinition" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.1-parameteredBehavior Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-Requirements-_packagedElement.13">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.13-subjectOwningRequirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.13-subjectOwningRequirementDefinition">
            <body>&lt;p>The RequirementDefinitions that have a certain Usage as their &lt;code>subjectParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.13-subjectOwningRequirementDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.13-subjectOwningRequirementDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.14" name="" visibility="private" memberEnd="Systems-Requirements-RequirementUsage-subjectParameter Systems-Requirements-_packagedElement.14-subjectOwningRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.14-subjectOwningRequirement" name="subjectOwningRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.8-parameteredStep Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-Requirements-_packagedElement.14">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.14-subjectOwningRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.14-subjectOwningRequirement">
            <body>&lt;p>The RequirementUsages that have a certain Usage as their &lt;code>subjectParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.14-subjectOwningRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.14-subjectOwningRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-SubjectMembership" name="SubjectMembership" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-SubjectMembership-_ownedComment.0" annotatedElement="Systems-Requirements-SubjectMembership">
          <body>&lt;p>A &lt;code>SubjectMembership&lt;/code> is a &lt;code>ParameterMembership&lt;/code> that indicates that its &lt;code>ownedSubjectParameter&lt;/code> is the subject of its &lt;code>owningType&lt;/code>. The &lt;code>owningType&lt;/code> of a &lt;code>SubjectMembership&lt;/code> must be a &lt;code>RequirementDefinition&lt;/code>, &lt;code>RequirementUsage&lt;/code>, &lt;code>CaseDefinition&lt;/code>, or &lt;code>CaseUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-SubjectMembership-validateSubjectMembershipOwningType" name="validateSubjectMembershipOwningType" visibility="public" constrainedElement="Systems-Requirements-SubjectMembership">
          <ownedComment xmi:id="Systems-Requirements-SubjectMembership-validateSubjectMembershipOwningType-_ownedComment.0" annotatedElement="Systems-Requirements-SubjectMembership-validateSubjectMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>SubjectMembership&lt;/code> must be a &lt;code>RequirementDefinition&lt;/code>, &lt;code>RequirementUsage&lt;/code>, &lt;code>CaseDefinition&lt;/code>, or &lt;code>CaseUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-SubjectMembership-validateSubjectMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsType(RequirementDefinition) or
owningType.oclIsType(RequiremenCaseRequirementDefinition) or
owningType.oclIsType(CaseDefinition) or
owningType.oclIsType(CaseUsage)
</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-SubjectMembership-_generalization.0" general="Kernel-Behaviors-ParameterMembership"/>
        <ownedAttribute xmi:id="Systems-Requirements-SubjectMembership-ownedSubjectParameter" name="ownedSubjectParameter" visibility="public" type="Systems-DefinitionAndUsage-Usage" aggregation="composite" isDerived="true" redefinedProperty="Kernel-Behaviors-ParameterMembership-ownedMemberParameter" association="Systems-Requirements-_packagedElement.16">
          <ownedComment xmi:id="Systems-Requirements-SubjectMembership-ownedSubjectParameter-_ownedComment.0" annotatedElement="Systems-Requirements-SubjectMembership-ownedSubjectParameter">
            <body>&lt;p>The &lt;code>Usage&lt;/code&lt; that is the &lt;code>ownedMemberParameter&lt;/code> of this &lt;code>SubjectMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-SubjectMembership-ownedSubjectParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-SubjectMembership-ownedSubjectParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.16" name="" visibility="private" memberEnd="Systems-Requirements-SubjectMembership-ownedSubjectParameter Systems-Requirements-_packagedElement.16-owningSubjectMembership">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.16-owningSubjectMembership" name="owningSubjectMembership" visibility="public" type="Systems-Requirements-SubjectMembership" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.7-owningParameterMembership" association="Systems-Requirements-_packagedElement.16">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.16-owningSubjectMembership-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.16-owningSubjectMembership">
            <body>&lt;p>The SubjectMembership that owns a particular Parameter as its &lt;code>ownedSubjectParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.16-owningSubjectMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.16-owningSubjectMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.17" name="" visibility="private" memberEnd="Systems-Requirements-RequirementDefinition-framedConcern Systems-Requirements-_packagedElement.17-framingRequirementDefinition">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.17-framingRequirementDefinition" name="framingRequirementDefinition" visibility="public" type="Systems-Requirements-RequirementDefinition" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.6-assumingRequirementDefinition" association="Systems-Requirements-_packagedElement.17">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.17-framingRequirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.17-framingRequirementDefinition">
            <body>&lt;p>The RequirementDefinition that addresses a certain &lt;code>addressedConcern&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.17-framingRequirementDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.17-framingRequirementDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.18" name="" visibility="private" memberEnd="Systems-Requirements-ConcernUsage-concernDefinition Systems-Requirements-_packagedElement.18-definedConcern">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.18-definedConcern" name="definedConcern" visibility="public" type="Systems-Requirements-ConcernUsage" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.5-definedRequirement" association="Systems-Requirements-_packagedElement.18">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.18-definedConcern-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.18-definedConcern">
            <body>&lt;p>The ConcernUsages that are typed by a certain &lt;code>concernDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.18-definedConcern-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.18-definedConcern-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.19" name="" visibility="private" memberEnd="Systems-Requirements-FramedConcernMembership-referencedConcern Systems-Requirements-_packagedElement.19-referencingConcernMembership">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.19-referencingConcernMembership" name="referencingConcernMembership" visibility="public" type="Systems-Requirements-FramedConcernMembership" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.22-referencingConstraintMembership" association="Systems-Requirements-_packagedElement.19">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.19-referencingConcernMembership-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.19-referencingConcernMembership">
            <body>&lt;p>The AddressedConcernMembership that has a certain ConcernUsage as its &lt;code>addressedConcern&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.19-referencingConcernMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.19-referencingConcernMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-FramedConcernMembership" name="FramedConcernMembership" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-FramedConcernMembership-_ownedComment.0" annotatedElement="Systems-Requirements-FramedConcernMembership">
          <body>&lt;p>A &lt;code>FramedConcernMembership&lt;/code> is a &lt;code>RequirementConstraintMembership&lt;/code> for a framed &lt;code>ConcernUsage&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-FramedConcernMembership-validateFramedConcernUsageConstraintKind" name="validateFramedConcernUsageConstraintKind" visibility="public" constrainedElement="Systems-Requirements-FramedConcernMembership">
          <ownedComment xmi:id="Systems-Requirements-FramedConcernMembership-validateFramedConcernUsageConstraintKind-_ownedComment.0" annotatedElement="Systems-Requirements-FramedConcernMembership-validateFramedConcernUsageConstraintKind">
            <body>&lt;p>A &lt;code>FramedConcernMembership&lt;/code> must have &lt;code>kind = requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-FramedConcernMembership-validateFramedConcernUsageConstraintKind-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>kind = RequirementConstraintKind::requirement</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-FramedConcernMembership-_generalization.0" general="Systems-Requirements-RequirementConstraintMembership"/>
        <ownedAttribute xmi:id="Systems-Requirements-FramedConcernMembership-kind" name="kind" visibility="public" type="Systems-Requirements-RequirementConstraintKind" redefinedProperty="Systems-Requirements-RequirementConstraintMembership-kind">
          <ownedComment xmi:id="Systems-Requirements-FramedConcernMembership-kind-_ownedComment.0" annotatedElement="Systems-Requirements-FramedConcernMembership-kind">
            <body>&lt;p>The &lt;code>kind&lt;/code> of an &lt;code>FramedConcernMembership&lt;/code> must be &lt;code>requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="Systems-Requirements-FramedConcernMembership-kind-_defaultValue" name="" visibility="public" instance="Systems-Requirements-RequirementConstraintKind-requirement"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-FramedConcernMembership-ownedConcern" name="ownedConcern" visibility="public" type="Systems-Requirements-ConcernUsage" aggregation="composite" isDerived="true" redefinedProperty="Systems-Requirements-RequirementConstraintMembership-ownedConstraint" association="Systems-Requirements-_packagedElement.23">
          <ownedComment xmi:id="Systems-Requirements-FramedConcernMembership-ownedConcern-_ownedComment.0" annotatedElement="Systems-Requirements-FramedConcernMembership-ownedConcern">
            <body>&lt;p>The &lt;code>ConcernUsage&lt;/code> that is the &lt;code>ownedConstraint&lt;/code> of this &lt;code>FramedConcernMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-FramedConcernMembership-ownedConcern-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-FramedConcernMembership-ownedConcern-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Requirements-FramedConcernMembership-referencedConcern" name="referencedConcern" visibility="public" type="Systems-Requirements-ConcernUsage" isDerived="true" redefinedProperty="Systems-Requirements-RequirementConstraintMembership-referencedConstraint" association="Systems-Requirements-_packagedElement.19">
          <ownedComment xmi:id="Systems-Requirements-FramedConcernMembership-referencedConcern-_ownedComment.0" annotatedElement="Systems-Requirements-FramedConcernMembership-referencedConcern">
            <body>&lt;p> The &lt;code>ConcernUsage&lt;/code> that is referenced through this &lt;code>FramedConcernMembership&lt;/code>. It is the &lt;code>referencedConstraint&lt;/code> of the &lt;code>FramedConcernMembership&lt;/code> considered as a &lt;code>RequirementConstraintMembership&lt;/code>, which must be a &lt;code>ConcernUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-FramedConcernMembership-referencedConcern-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-FramedConcernMembership-referencedConcern-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-ConcernDefinition" name="ConcernDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-ConcernDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-ConcernDefinition">
          <body>&lt;p>A &lt;code>ConcernDefinition&lt;/code> is a &lt;code>RequirementDefinition&lt;/code> that one or more stakeholders may be interested in having addressed. These stakeholders are identified by the &lt;code>ownedStakeholders&lt;/code>of the &lt;code>ConcernDefinition&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-ConcernDefinition-checkConcernDefinitionSpecialization" name="checkConcernDefinitionSpecialization" visibility="public" constrainedElement="Systems-Requirements-ConcernDefinition">
          <ownedComment xmi:id="Systems-Requirements-ConcernDefinition-checkConcernDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Requirements-ConcernDefinition-checkConcernDefinitionSpecialization">
            <body>&lt;p>A &lt;code>ConcernDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>ConcernDefinition&lt;/code> &lt;em>&lt;code>Requirements::ConcernCheck&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-ConcernDefinition-checkConcernDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Requirements::ConcernCheck')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-ConcernDefinition-_generalization.0" general="Systems-Requirements-RequirementDefinition"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.22" name="" visibility="private" memberEnd="Systems-Requirements-RequirementConstraintMembership-referencedConstraint Systems-Requirements-_packagedElement.22-referencingConstraintMembership">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.22-referencingConstraintMembership" name="referencingConstraintMembership" visibility="public" type="Systems-Requirements-RequirementConstraintMembership" isDerived="true" association="Systems-Requirements-_packagedElement.22">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.22-referencingConstraintMembership-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.22-referencingConstraintMembership">
            <body>&lt;p>The RequirementConstraintMembership that has a certain ConstraintUsage as its &lt;code>referencedConstraint&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.22-referencingConstraintMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.22-referencingConstraintMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.23" name="" visibility="private" memberEnd="Systems-Requirements-FramedConcernMembership-ownedConcern Systems-Requirements-_packagedElement.23-framedConstraintMembership">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.23-framedConstraintMembership" name="framedConstraintMembership" visibility="public" type="Systems-Requirements-FramedConcernMembership" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.10-requirementConstraintMembership" association="Systems-Requirements-_packagedElement.23">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.23-framedConstraintMembership-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.23-framedConstraintMembership">
            <body>&lt;p>The AddressedConcernMembership that owns a certain ConcernUsage as its &lt;code>ownedConcern&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.23-framedConstraintMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.23-framedConstraintMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-ConcernUsage" name="ConcernUsage" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-ConcernUsage-_ownedComment.0" annotatedElement="Systems-Requirements-ConcernUsage">
          <body>&lt;p>A &lt;code>ConcernUsage&lt;/code> is a &lt;code>Usage&lt;/code> of a &lt;code>ConcernDefinition&lt;/code>.&lt;/p>

 The &lt;code>ownedStakeholder&lt;/code> features of the ConcernUsage shall all subset the &lt;em>&lt;code>ConcernCheck::concernedStakeholders&lt;/code> &lt;/em>feature. If the ConcernUsage is an &lt;code>ownedFeature&lt;/code> of a StakeholderDefinition or StakeholderUsage, then the ConcernUsage shall have an &lt;code>ownedStakeholder&lt;/code> feature that is bound to the &lt;em>&lt;code>self&lt;/code>&lt;/em> feature of its owner.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-ConcernUsage-checkConcernUsageSpecialization" name="checkConcernUsageSpecialization" visibility="public" constrainedElement="Systems-Requirements-ConcernUsage">
          <ownedComment xmi:id="Systems-Requirements-ConcernUsage-checkConcernUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Requirements-ConcernUsage-checkConcernUsageSpecialization">
            <body>&lt;p>A &lt;code>ConcernUsage&lt;/code> must directly or indirectly specialize the base &lt;code>ConcernUsage&lt;/code> &lt;em>&lt;code>Requirements::concernChecks&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-ConcernUsage-checkConcernUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Requirements::concernChecks')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Requirements-ConcernUsage-checkConcernUsageFramedSpecialization" name="checkConcernUsageFramedSpecialization" visibility="public" constrainedElement="Systems-Requirements-ConcernUsage">
          <ownedComment xmi:id="Systems-Requirements-ConcernUsage-checkConcernUsageFramedSpecialization-_ownedComment.0" annotatedElement="Systems-Requirements-ConcernUsage-checkConcernUsageFramedSpecialization">
            <body>&lt;p>If a &lt;code>ConcernUsage&lt;/code> is owned via a &lt;code>FramedConcernMembership&lt;/code>, then it must directly or indirectly specialize the &lt;code>ConcernUsage&lt;/code> &lt;code>&lt;em>Requirements::RequirementCheck::concerns&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-ConcernUsage-checkConcernUsageFramedSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningFeatureMembership &lt;> null and
owningFeatureMembership.oclIsKindOf(FramedConcernMembership) implies
    specializesFromLibrary('Requirements::RequirementCheck::concerns')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-ConcernUsage-_generalization.0" general="Systems-Requirements-RequirementUsage"/>
        <ownedAttribute xmi:id="Systems-Requirements-ConcernUsage-concernDefinition" name="concernDefinition" visibility="public" type="Systems-Requirements-ConcernDefinition" isDerived="true" redefinedProperty="Systems-Requirements-RequirementUsage-requirementDefinition" association="Systems-Requirements-_packagedElement.18">
          <ownedComment xmi:id="Systems-Requirements-ConcernUsage-concernDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-ConcernUsage-concernDefinition">
            <body>&lt;p>The ConcernDefinition that is the single type of this ConcernUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-ConcernUsage-concernDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-ConcernUsage-concernDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.25" name="" visibility="private" memberEnd="Systems-Requirements-RequirementUsage-framedConcern Systems-Requirements-_packagedElement.25-framingRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.25-framingRequirement" name="framingRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.0-requiringRequirement" association="Systems-Requirements-_packagedElement.25">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.25-framingRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.25-framingRequirement">
            <body>&lt;p>The RequirementUsage that addresses a certain &lt;code>addressedConcern&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.25-framingRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.25-framingRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.26" name="" visibility="private" memberEnd="Systems-Requirements-RequirementUsage-stakeholderParameter Systems-Requirements-_packagedElement.26-stakholderOwningRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.26-stakholderOwningRequirement" name="stakholderOwningRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage Kernel-Behaviors-_packagedElement.8-parameteredStep" association="Systems-Requirements-_packagedElement.26">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.26-stakholderOwningRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.26-stakholderOwningRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.27" name="" visibility="private" memberEnd="Systems-Requirements-RequirementUsage-actorParameter Systems-Requirements-_packagedElement.27-actorOwningRequirement">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.27-actorOwningRequirement" name="actorOwningRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" subsettedProperty="Kernel-Behaviors-_packagedElement.8-parameteredStep Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage" association="Systems-Requirements-_packagedElement.27">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.27-actorOwningRequirement-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.27-actorOwningRequirement">
            <body>&lt;p>The RequirementUsages that have a certain PartUsage as an &lt;code>actorParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.27-actorOwningRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.27-actorOwningRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.28" name="" visibility="private" memberEnd="Systems-Requirements-RequirementDefinition-actorParameter Systems-Requirements-_packagedElement.28-actorOwningRequirementDefinition">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.28-actorOwningRequirementDefinition" name="actorOwningRequirementDefinition" visibility="public" type="Systems-Requirements-RequirementDefinition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition Kernel-Behaviors-_packagedElement.1-parameteredBehavior" association="Systems-Requirements-_packagedElement.28">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.28-actorOwningRequirementDefinition-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.28-actorOwningRequirementDefinition">
            <body>&lt;p>The RequirementDefinitions that have a certain PartUsage as an &lt;code>actorParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.28-actorOwningRequirementDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.28-actorOwningRequirementDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.29" name="" visibility="private" memberEnd="Systems-Requirements-StakeholderMembership-ownedStakeholderParameter Systems-Requirements-_packagedElement.29-owningStakeholderMembership">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.29-owningStakeholderMembership" name="owningStakeholderMembership" visibility="public" type="Systems-Requirements-StakeholderMembership" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.7-owningParameterMembership" association="Systems-Requirements-_packagedElement.29">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.29-owningStakeholderMembership-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.29-owningStakeholderMembership">
            <body>&lt;p>TheStakehplderMembership that has a certain PartUsage as its &lt;code>ownedStakeholderParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.29-owningStakeholderMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.29-owningStakeholderMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-StakeholderMembership" name="StakeholderMembership" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-StakeholderMembership-_ownedComment.0" annotatedElement="Systems-Requirements-StakeholderMembership">
          <body>&lt;p>A &lt;code>StakeholderMembership&lt;/code> is a &lt;code>ParameterMembership&lt;/code> that identifies a &lt;code>PartUsage&lt;/code> as a &lt;code>stakeholderParameter&lt;/code> of a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;/code>, which specifies a role played by an entity with concerns framed by the &lt;code>owningType&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-StakeholderMembership-validateStakeholderMembershipOwningType" name="validateStakeholderMembershipOwningType" visibility="public" constrainedElement="Systems-Requirements-StakeholderMembership">
          <ownedComment xmi:id="Systems-Requirements-StakeholderMembership-validateStakeholderMembershipOwningType-_ownedComment.0" annotatedElement="Systems-Requirements-StakeholderMembership-validateStakeholderMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>StakeholderMembership&lt;/code> must be a &lt;code>RequirementDefinition&lt;/code> or &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-StakeholderMembership-validateStakeholderMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(RequirementUsage) or
owningType.oclIsKindOf(RequirementDefinition)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-StakeholderMembership-_generalization.0" general="Kernel-Behaviors-ParameterMembership"/>
        <ownedAttribute xmi:id="Systems-Requirements-StakeholderMembership-ownedStakeholderParameter" name="ownedStakeholderParameter" visibility="public" type="Systems-Parts-PartUsage" aggregation="composite" isDerived="true" redefinedProperty="Kernel-Behaviors-ParameterMembership-ownedMemberParameter" association="Systems-Requirements-_packagedElement.29">
          <ownedComment xmi:id="Systems-Requirements-StakeholderMembership-ownedStakeholderParameter-_ownedComment.0" annotatedElement="Systems-Requirements-StakeholderMembership-ownedStakeholderParameter">
            <body>&lt;p>The &lt;code>PartUsage&lt;/code> specifying the stakeholder.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-StakeholderMembership-ownedStakeholderParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-StakeholderMembership-ownedStakeholderParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.31" name="" visibility="private" memberEnd="Systems-Requirements-RequirementDefinition-stakeholderParameter Systems-Requirements-_packagedElement.31-stakholderOwiningRequirementDefinition">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.31-stakholderOwiningRequirementDefinition" name="stakholderOwiningRequirementDefinition" visibility="public" type="Systems-Requirements-RequirementDefinition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage Kernel-Behaviors-_packagedElement.8-parameteredStep" association="Systems-Requirements-_packagedElement.31">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.31-stakholderOwiningRequirementDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.31-stakholderOwiningRequirementDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Requirements-_packagedElement.32" name="" visibility="private" memberEnd="Systems-Requirements-ActorMembership-ownedActorParameter Systems-Requirements-_packagedElement.32-owningActorMembership">
        <ownedEnd xmi:id="Systems-Requirements-_packagedElement.32-owningActorMembership" name="owningActorMembership" visibility="public" type="Systems-Requirements-ActorMembership" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.7-owningParameterMembership" association="Systems-Requirements-_packagedElement.32">
          <ownedComment xmi:id="Systems-Requirements-_packagedElement.32-owningActorMembership-_ownedComment.0" annotatedElement="Systems-Requirements-_packagedElement.32-owningActorMembership">
            <body>&lt;p>The ActorMembership that has a certain PartUsage as its &lt;code>ownedActorParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-_packagedElement.32-owningActorMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-_packagedElement.32-owningActorMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Requirements-ActorMembership" name="ActorMembership" visibility="public">
        <ownedComment xmi:id="Systems-Requirements-ActorMembership-_ownedComment.0" annotatedElement="Systems-Requirements-ActorMembership">
          <body>&lt;p>An &lt;code>ActorMembership&lt;/code> is a &lt;code>ParameterMembership&lt;/code> that identifies a &lt;code>PartUsage&lt;/code> as an &lt;em>actor&lt;/em> &lt;code>parameter&lt;/code>, which specifies a role played by an external entity in interaction with the &lt;code>owningType&lt;/code> of the &lt;code>ActorMembership&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Requirements-ActorMembership-validateActorMembershipOwningType" name="validateActorMembershipOwningType" visibility="public" constrainedElement="Systems-Requirements-ActorMembership">
          <ownedComment xmi:id="Systems-Requirements-ActorMembership-validateActorMembershipOwningType-_ownedComment.0" annotatedElement="Systems-Requirements-ActorMembership-validateActorMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of an &lt;code>ActorMembership&lt;/code> must be a &lt;code>RequirementDefinition&lt;/code>, &lt;code>RequirementUsage&lt;/code>, &lt;code>CaseDefinition&lt;/code>, or &lt;code>CaseUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Requirements-ActorMembership-validateActorMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(RequirementUsage) or
owningType.oclIsKindOf(RequirementDefinition) or
owningType.oclIsKindOf(CaseDefinition) or
owningType.oclIsKindOf(CaseUsage)
</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Requirements-ActorMembership-_generalization.0" general="Kernel-Behaviors-ParameterMembership"/>
        <ownedAttribute xmi:id="Systems-Requirements-ActorMembership-ownedActorParameter" name="ownedActorParameter" visibility="public" type="Systems-Parts-PartUsage" aggregation="composite" isDerived="true" redefinedProperty="Kernel-Behaviors-ParameterMembership-ownedMemberParameter" association="Systems-Requirements-_packagedElement.32">
          <ownedComment xmi:id="Systems-Requirements-ActorMembership-ownedActorParameter-_ownedComment.0" annotatedElement="Systems-Requirements-ActorMembership-ownedActorParameter">
            <body>&lt;p>The &lt;code>PartUsage&lt;/code> specifying the actor.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Requirements-ActorMembership-ownedActorParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Requirements-ActorMembership-ownedActorParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Calculations" name="Calculations" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Calculations-CalculationDefinition" name="CalculationDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Calculations-CalculationDefinition-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationDefinition">
          <body>&lt;p>A &lt;code>CalculationDefinition&lt;/code> is an &lt;coed>ActionDefinition&lt;/code> that also defines a &lt;code>Function&lt;/code> producing a &lt;code>result&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Calculations-CalculationDefinition-checkCalculationDefinitionSpecialization" name="checkCalculationDefinitionSpecialization" visibility="public" constrainedElement="Systems-Calculations-CalculationDefinition">
          <ownedComment xmi:id="Systems-Calculations-CalculationDefinition-checkCalculationDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationDefinition-checkCalculationDefinitionSpecialization">
            <body>&lt;p>A &lt;code>CalculationDefinition&lt;/code> must directly or indirectly specialize the &lt;code>CalculationDefinition&lt;/code> &lt;em>&lt;code>Calculations::Calculation&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Calculations-CalculationDefinition-checkCalculationDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Calculations::Calculation')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Calculations-CalculationDefinition-deriveCalculationUsageCalculation" name="deriveCalculationUsageCalculation" visibility="public" constrainedElement="Systems-Calculations-CalculationDefinition">
          <ownedComment xmi:id="Systems-Calculations-CalculationDefinition-deriveCalculationUsageCalculation-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationDefinition-deriveCalculationUsageCalculation">
            <body>&lt;p>The &lt;code>calculations&lt;/code> of a &lt;code>CalculationDefinition&lt;/code> are those of its &lt;code>actions&lt;/code> that are &lt;code>CalculationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Calculations-CalculationDefinition-deriveCalculationUsageCalculation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>calculation = action->selectByKind(CalculationUsage)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Calculations-CalculationDefinition-_generalization.0" general="Kernel-Functions-Function"/>
        <generalization xmi:id="Systems-Calculations-CalculationDefinition-_generalization.1" general="Systems-Actions-ActionDefinition"/>
        <ownedAttribute xmi:id="Systems-Calculations-CalculationDefinition-calculation" name="calculation" visibility="public" type="Systems-Calculations-CalculationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-Actions-ActionDefinition-action Kernel-Functions-Function-expression" association="Systems-Calculations-_packagedElement.3">
          <ownedComment xmi:id="Systems-Calculations-CalculationDefinition-calculation-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationDefinition-calculation">
            <body>&lt;p>The &lt;code>actions&lt;/code> of this &lt;code>CalculationDefinition&lt;/code> that are &lt;code>CalculationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Calculations-CalculationDefinition-calculation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Calculations-CalculationDefinition-calculation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Calculations-_packagedElement.1" name="" visibility="private" memberEnd="Systems-Calculations-CalculationUsage-calculationDefinition Systems-Calculations-_packagedElement.1-definedCalculation">
        <ownedEnd xmi:id="Systems-Calculations-_packagedElement.1-definedCalculation" name="definedCalculation" visibility="public" type="Systems-Calculations-CalculationUsage" isDerived="true" subsettedProperty="Kernel-Functions-_packagedElement.7-typedExpression Systems-Actions-_packagedElement.12-definedAction" association="Systems-Calculations-_packagedElement.1">
          <ownedComment xmi:id="Systems-Calculations-_packagedElement.1-definedCalculation-_ownedComment.0" annotatedElement="Systems-Calculations-_packagedElement.1-definedCalculation">
            <body>&lt;p>The CalculationUsage being typed by a certain Function.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Calculations-_packagedElement.1-definedCalculation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Calculations-_packagedElement.1-definedCalculation-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Calculations-CalculationUsage" name="CalculationUsage" visibility="public">
        <ownedComment xmi:id="Systems-Calculations-CalculationUsage-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationUsage">
          <body>&lt;p>A &lt;code>CalculationUsage&lt;/code> is an &lt;code>ActionUsage&lt;code> that is also an &lt;code>Expression&lt;/code>, and, so, is typed by a &lt;code>Function&lt;/code>. Nominally, if the &lt;code>type&lt;/code> is a &lt;code>CalculationDefinition&lt;/code>, a &lt;code>CalculationUsage&lt;/code> is a &lt;code>Usage&lt;/code> of that &lt;code>CalculationDefinition&lt;/code> within a system. However, other kinds of kernel &lt;code>Functions&lt;/code> are also allowed, to permit use of &lt;code>Functions&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Calculations-CalculationUsage-checkCalculationUsageSpecialization" name="checkCalculationUsageSpecialization" visibility="public" constrainedElement="Systems-Calculations-CalculationUsage">
          <ownedComment xmi:id="Systems-Calculations-CalculationUsage-checkCalculationUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationUsage-checkCalculationUsageSpecialization">
            <body>&lt;p>A &lt;code>CalculationUsage&lt;/code> must specialize directly or indirectly the &lt;code>CalculationUsage&lt;/code> &lt;em>&lt;code>Calculations::calculations&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Calculations-CalculationUsage-checkCalculationUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Calculations::calculations')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Calculations-CalculationUsage-checkCalculationUsageSubcalculationSpecialization" name="checkCalculationUsageSubcalculationSpecialization" visibility="public" constrainedElement="Systems-Calculations-CalculationUsage">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Calculations-CalculationUsage-checkCalculationUsageSubcalculationSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(CalculationDefinition) or
 owningType.oclIsKindOf(CalculationUsage)) implies
    specializesFromLibrary('Calculations::Calculation::subcalculations')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Calculations-CalculationUsage-_generalization.0" general="Kernel-Functions-Expression"/>
        <generalization xmi:id="Systems-Calculations-CalculationUsage-_generalization.1" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-Calculations-CalculationUsage-calculationDefinition" name="calculationDefinition" visibility="public" type="Kernel-Functions-Function" isOrdered="true" isDerived="true" redefinedProperty="Kernel-Functions-Expression-function Systems-Actions-ActionUsage-actionDefinition" association="Systems-Calculations-_packagedElement.1">
          <ownedComment xmi:id="Systems-Calculations-CalculationUsage-calculationDefinition-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationUsage-calculationDefinition">
            <body>&lt;p>The &lt;ode>Function&lt;/code> that is the &lt;code>type&lt;/code> of this &lt;code>CalculationUsage&lt;/code>. Nominally, this would be a &lt;code>CalculationDefinition&lt;/code>, but a kernel &lt;code>Function&lt;/code> is also allowed, to permit use of &lt;code>Functions&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Calculations-CalculationUsage-calculationDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Calculations-CalculationUsage-calculationDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable" name="modelLevelEvaluable" visibility="public" bodyCondition="Systems-Calculations-CalculationUsage-modelLevelEvaluable-unnamed1" redefinedOperation="Kernel-Functions-Expression-modelLevelEvaluable">
          <ownedComment xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable-_ownedComment.0" annotatedElement="Systems-Calculations-CalculationUsage-modelLevelEvaluable">
            <body>&lt;p>A &lt;code>CalculationUsage&lt;/code> is not model-level evaluable.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>false</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable-visited" name="visited" visibility="public" type="Core-Features-Feature">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable-visited-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable-visited-_upperValue" name="" visibility="public" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Systems-Calculations-CalculationUsage-modelLevelEvaluable-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Calculations-_packagedElement.3" name="" visibility="private" memberEnd="Systems-Calculations-CalculationDefinition-calculation Systems-Calculations-_packagedElement.3-featuringCalculationDefinition">
        <ownedEnd xmi:id="Systems-Calculations-_packagedElement.3-featuringCalculationDefinition" name="featuringCalculationDefinition" visibility="public" type="Systems-Calculations-CalculationDefinition" isDerived="true" subsettedProperty="Systems-Actions-_packagedElement.9-featuringActionDefinition Kernel-Functions-_packagedElement.6-computedFunction" association="Systems-Calculations-_packagedElement.3">
          <ownedComment xmi:id="Systems-Calculations-_packagedElement.3-featuringCalculationDefinition-_ownedComment.0" annotatedElement="Systems-Calculations-_packagedElement.3-featuringCalculationDefinition">
            <body>&lt;p>The CalculationDefinitions that feature a certain CalculationUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Calculations-_packagedElement.3-featuringCalculationDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Calculations-_packagedElement.3-featuringCalculationDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Calculations-_packagedElement.4" name="" visibility="private" memberEnd="Systems-Calculations-_packagedElement.4-calculationOwningDefinition Systems-DefinitionAndUsage-Definition-ownedCalculation">
        <ownedEnd xmi:id="Systems-Calculations-_packagedElement.4-calculationOwningDefinition" name="calculationOwningDefinition" visibility="public" type="Systems-DefinitionAndUsage-Definition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.32-actionOwningDefinition" association="Systems-Calculations-_packagedElement.4">
          <ownedComment xmi:id="Systems-Calculations-_packagedElement.4-calculationOwningDefinition-_ownedComment.0" annotatedElement="Systems-Calculations-_packagedElement.4-calculationOwningDefinition">
            <body>&lt;p>The Definition that owns the &lt;code>ownedCalculation&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Calculations-_packagedElement.4-calculationOwningDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Calculations-_packagedElement.4-calculationOwningDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Calculations-_packagedElement.5" name="" visibility="private" memberEnd="Systems-Calculations-_packagedElement.5-calculationOwningUsage Systems-DefinitionAndUsage-Usage-nestedCalculation">
        <ownedEnd xmi:id="Systems-Calculations-_packagedElement.5-calculationOwningUsage" name="calculationOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.5-actionOwningUsage" association="Systems-Calculations-_packagedElement.5">
          <ownedComment xmi:id="Systems-Calculations-_packagedElement.5-calculationOwningUsage-_ownedComment.0" annotatedElement="Systems-Calculations-_packagedElement.5-calculationOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedCalculation&lt;code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Calculations-_packagedElement.5-calculationOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Calculations-_packagedElement.5-calculationOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Connections" name="Connections" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Connections-_packagedElement.0" name="" visibility="private" memberEnd="Systems-Connections-ConnectionDefinition-connectionEnd Systems-Connections-_packagedElement.0-connectionDefinitionWithEnd">
        <ownedEnd xmi:id="Systems-Connections-_packagedElement.0-connectionDefinitionWithEnd" name="connectionDefinitionWithEnd" visibility="public" type="Systems-Connections-ConnectionDefinition" isDerived="true" redefinedProperty="Kernel-Associations-_packagedElement.1-associationWithEnd" association="Systems-Connections-_packagedElement.0">
          <ownedComment xmi:id="Systems-Connections-_packagedElement.0-connectionDefinitionWithEnd-_ownedComment.0" annotatedElement="Systems-Connections-_packagedElement.0-connectionDefinitionWithEnd">
            <body>&lt;p>The ConnectionDefinitions that have a certain Usage as an &lt;code>connectionEnd&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Connections-_packagedElement.0-connectionDefinitionWithEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Connections-_packagedElement.0-connectionDefinitionWithEnd-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-ConnectionDefinition" name="ConnectionDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Connections-ConnectionDefinition-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionDefinition">
          <body>&lt;p>A &lt;code>ConnectionDefinition&lt;/code> is a &lt;code>PartDefinition&lt;/code> that is also an &lt;code>AssociationStructure&lt;/code>. The end &lt;code>Features&lt;/code> of a &lt;code>ConnectionDefinition&lt;/code> must be &lt;code>Usages&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionSpecializations" name="checkConnectionDefinitionSpecializations" visibility="public" constrainedElement="Systems-Connections-ConnectionDefinition">
          <ownedComment xmi:id="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionSpecializations-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionSpecializations">
            <body>&lt;p>A &lt;code>ConnectionDefinition&lt;/code> must directly or indirectly specialize the &lt;code>ConnectionDefinition&lt;/code> &lt;em>&lt;code>Connections::Connection&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionSpecializations-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Connections::Connection&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionBinarySpecialization" name="checkConnectionDefinitionBinarySpecialization" visibility="public" constrainedElement="Systems-Connections-ConnectionDefinition">
          <ownedComment xmi:id="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionBinarySpecialization-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionBinarySpecialization">
            <body>&lt;p>A binary &lt;code>ConnectionDefinition&lt;/code> must directly or indirectly specialize the &lt;code>ConnectionDefinition&lt;/code> &lt;em>&lt;code>Connections::BinaryConnection&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Connections-ConnectionDefinition-checkConnectionDefinitionBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedEndFeature->size() = 2 implies
    specializesFromLibrary(&quot;Connections::BinaryConnections&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Connections-ConnectionDefinition-_generalization.0" general="Kernel-Associations-AssociationStructure"/>
        <generalization xmi:id="Systems-Connections-ConnectionDefinition-_generalization.1" general="Systems-Parts-PartDefinition"/>
        <ownedAttribute xmi:id="Systems-Connections-ConnectionDefinition-connectionEnd" name="connectionEnd" visibility="public" type="Systems-DefinitionAndUsage-Usage" isOrdered="true" isDerived="true" redefinedProperty="Kernel-Associations-Association-associationEnd" association="Systems-Connections-_packagedElement.0">
          <ownedComment xmi:id="Systems-Connections-ConnectionDefinition-connectionEnd-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionDefinition-connectionEnd">
            <body>&lt;p>The &lt;code>Usages&lt;/code> that define the things related by the &lt;code>ConnectionDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Connections-ConnectionDefinition-connectionEnd-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Connections-ConnectionDefinition-connectionEnd-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-ConnectionUsage" name="ConnectionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Connections-ConnectionUsage-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionUsage">
          <body>&lt;p>A &lt;code>ConnectionUsage&lt;/code> is a &lt;code>ConnectorAsUsage&lt;/code> that is also a &lt;code>PartUsage&lt;/code>. Nominally, if its type is a &lt;code>ConnectionDefinition&lt;/code>, then a &lt;code>ConnectionUsage&lt;/code> is a Usage of that &lt;code>ConnectionDefinition&lt;/code>, representing a connection between parts of a system. However, other kinds of kernel &lt;code>AssociationStructures&lt;/code> are also allowed, to permit use of &lt;code>AssociationStructures&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Connections-ConnectionUsage-checkConnectionUsageSpecialization" name="checkConnectionUsageSpecialization" visibility="public" constrainedElement="Systems-Connections-ConnectionUsage">
          <ownedComment xmi:id="Systems-Connections-ConnectionUsage-checkConnectionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionUsage-checkConnectionUsageSpecialization">
            <body>&lt;p>A &lt;code>ConnectionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ConnectionUsage&lt;/code> &lt;em>&lt;code>Connections::connections&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Connections-ConnectionUsage-checkConnectionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Connections::connections&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Connections-ConnectionUsage-checkConnectionUsageBinarySpecialization" name="checkConnectionUsageBinarySpecialization" visibility="public" constrainedElement="Systems-Connections-ConnectionUsage">
          <ownedComment xmi:id="Systems-Connections-ConnectionUsage-checkConnectionUsageBinarySpecialization-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionUsage-checkConnectionUsageBinarySpecialization">
            <body>&lt;p>A binary &lt;code>ConnectionUsage&lt;/code> must directly or indirectly specialize the &lt;code>ConnectionUsage&lt;/code> &lt;em>&lt;code>Connections::binaryConnections&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Connections-ConnectionUsage-checkConnectionUsageBinarySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedEndFeature->size() = 2 implies
    specializesFromLibrary(&quot;Connections::binaryConnections&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Connections-ConnectionUsage-_generalization.0" general="Systems-Connections-ConnectorAsUsage"/>
        <generalization xmi:id="Systems-Connections-ConnectionUsage-_generalization.1" general="Systems-Parts-PartUsage"/>
        <ownedAttribute xmi:id="Systems-Connections-ConnectionUsage-connectionDefinition" name="connectionDefinition" visibility="public" type="Kernel-Associations-AssociationStructure" isOrdered="true" isDerived="true" redefinedProperty="Kernel-Connectors-Connector-association" subsettedProperty="Systems-Items-ItemUsage-itemDefinition" association="Systems-Connections-_packagedElement.3">
          <ownedComment xmi:id="Systems-Connections-ConnectionUsage-connectionDefinition-_ownedComment.0" annotatedElement="Systems-Connections-ConnectionUsage-connectionDefinition">
            <body>&lt;p>The &lt;code>AssociationStructures&lt;/code> that are the types of this &lt;code>ConnectionUsage&lt;/code>. Nominally, these are , but other kinds of Kernel &lt;code>AssociationStructures&lt;/code> are also allowed, to permit use of &lt;code>AssociationStructures&lt;/code> from the Kernel Model Libraries&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Connections-ConnectionUsage-connectionDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Connections-ConnectionUsage-connectionDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Connections-_packagedElement.3" name="" visibility="private" memberEnd="Systems-Connections-ConnectionUsage-connectionDefinition Systems-Connections-_packagedElement.3-definedConnection">
        <ownedEnd xmi:id="Systems-Connections-_packagedElement.3-definedConnection" name="definedConnection" visibility="public" type="Systems-Connections-ConnectionUsage" isOrdered="true" isDerived="true" subsettedProperty="Kernel-Connectors-_packagedElement.1-typedConnector" association="Systems-Connections-_packagedElement.3">
          <ownedComment xmi:id="Systems-Connections-_packagedElement.3-definedConnection-_ownedComment.0" annotatedElement="Systems-Connections-_packagedElement.3-definedConnection">
            <body>&lt;p>The ConnectionUsages that have a certain AssociationStructure as their &lt;code>connectionDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Connections-_packagedElement.3-definedConnection-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Connections-_packagedElement.3-definedConnection-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-SuccessionFlowConnectionUsage" name="SuccessionFlowConnectionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Connections-SuccessionFlowConnectionUsage-_ownedComment.0" annotatedElement="Systems-Connections-SuccessionFlowConnectionUsage">
          <body>&lt;p>A &lt;code>SuccessionFlowConnectionUsage&lt;/code> is a &lt;code>FlowConnectionUsage&lt;/code> that is also a &lt;code>SuccessionItemFlow&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Connections-SuccessionFlowConnectionUsage-checkSuccessionFlowConnectionUsageSpecialization" name="checkSuccessionFlowConnectionUsageSpecialization" visibility="public" constrainedElement="Systems-Connections-SuccessionFlowConnectionUsage">
          <ownedComment xmi:id="Systems-Connections-SuccessionFlowConnectionUsage-checkSuccessionFlowConnectionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Connections-SuccessionFlowConnectionUsage-checkSuccessionFlowConnectionUsageSpecialization">
            <body>&lt;p>A &lt;code>SuccessionFlowConnectionUsage&lt;/code> must directly or indirectly specialize the base &lt;code>FlowConnectionUsage&lt;/code> &lt;em>&lt;code>Connections::successionFlowConnections&lt;/code> from the Systems Library model.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Connections-SuccessionFlowConnectionUsage-checkSuccessionFlowConnectionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Connections::successionFlowConnections&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Connections-SuccessionFlowConnectionUsage-_generalization.0" general="Kernel-Interactions-SuccessionItemFlow"/>
        <generalization xmi:id="Systems-Connections-SuccessionFlowConnectionUsage-_generalization.1" general="Systems-Connections-FlowConnectionUsage"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-FlowConnectionUsage" name="FlowConnectionUsage" visibility="public">
        <ownedComment xmi:id="Systems-Connections-FlowConnectionUsage-_ownedComment.0" annotatedElement="Systems-Connections-FlowConnectionUsage">
          <body>&lt;p>A &lt;code>FlowConnectionUsage&lt;/code> is a &lt;code>ConnectionUsage&lt;/code> that is also an &lt;code>ItemFlow&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Connections-FlowConnectionUsage-checkFlowConnectionUsageSpecialization" name="checkFlowConnectionUsageSpecialization" visibility="public" constrainedElement="Systems-Connections-FlowConnectionUsage">
          <ownedComment xmi:id="Systems-Connections-FlowConnectionUsage-checkFlowConnectionUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Connections-FlowConnectionUsage-checkFlowConnectionUsageSpecialization">
            <body>&lt;p>If a &lt;code>FlowConnectionUsage&lt;/code> has no &lt;code>itemFlowEnds&lt;/code>, then it must directly or indirectly specialize the base &lt;code>FlowConnectionUsage&lt;/code> &lt;em>&lt;code>Connections::messageConnections&lt;/code> from the Systems Library model. Otherwise, it must directly or indirectly spcialize the &lt;code>FlowConnectionUsage&lt;/code> &lt;em>&lt;code>Connections::flowConnections&lt;/code>. &lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Connections-FlowConnectionUsage-checkFlowConnectionUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>if itemFlowEnds->isEmpty() then
    specializesFromLibrary(&quot;Connections::messageConnections&quot;)
else
    specializesFromLibrary(&quot;Connections::flowConnections&quot;
endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Connections-FlowConnectionUsage-_generalization.0" general="Systems-Connections-ConnectionUsage"/>
        <generalization xmi:id="Systems-Connections-FlowConnectionUsage-_generalization.1" general="Kernel-Interactions-ItemFlow"/>
        <generalization xmi:id="Systems-Connections-FlowConnectionUsage-_generalization.2" general="Systems-Actions-ActionUsage"/>
        <ownedAttribute xmi:id="Systems-Connections-FlowConnectionUsage-flowConnectionDefinition" name="flowConnectionDefinition" visibility="public" type="Kernel-Interactions-Interaction" isOrdered="true" isDerived="true" redefinedProperty="Systems-Actions-ActionUsage-actionDefinition Systems-Connections-ConnectionUsage-connectionDefinition Kernel-Interactions-ItemFlow-interaction" association="Systems-Connections-_packagedElement.9">
          <ownedComment xmi:id="Systems-Connections-FlowConnectionUsage-flowConnectionDefinition-_ownedComment.0" annotatedElement="Systems-Connections-FlowConnectionUsage-flowConnectionDefinition">
            <body>&lt;p>The &lt;code>Interactions&lt;/code> that are the &lt;code>types&lt;/code> of this &lt;code>FlowConnectionUsage&lt;/code>. Nominally, these are &lt;code>FlowConnectionDefinitions&lt;/code>, but other kinds of Kernel &lt;code>Interactions&lt;/code> are also allowed, to permit use of Interactions from the Kernel Model Libraries.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Connections-FlowConnectionUsage-flowConnectionDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Connections-FlowConnectionUsage-flowConnectionDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-SuccessionAsUsage" name="SuccessionAsUsage" visibility="public">
        <ownedComment xmi:id="Systems-Connections-SuccessionAsUsage-_ownedComment.0" annotatedElement="Systems-Connections-SuccessionAsUsage">
          <body>&lt;p>A &lt;code>SuccessionAsUsage&lt;/code> is both a &lt;code>ConnectorAsUsage&lt;/code> and a &lt;code>Succession&lt;/code>.&lt;p></body>
        </ownedComment>
        <generalization xmi:id="Systems-Connections-SuccessionAsUsage-_generalization.0" general="Systems-Connections-ConnectorAsUsage"/>
        <generalization xmi:id="Systems-Connections-SuccessionAsUsage-_generalization.1" general="Kernel-Connectors-Succession"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-ConnectorAsUsage" name="ConnectorAsUsage" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Systems-Connections-ConnectorAsUsage-_ownedComment.0" annotatedElement="Systems-Connections-ConnectorAsUsage">
          <body>&lt;p>A &lt;code>ConnectorAsUsage&lt;/code> is both a &lt;code>Connector&lt;/code> and a &lt;code>Usage&lt;/code>. &lt;code>ConnectorAsUsage&lt;/code> cannot itself be instantiated in a SysML model, but it is the base class for the concrete classes &lt;code>BindingConnectorAsUsage&lt;/code>, &lt;code>SuccessionAsUsage&lt;/code> and &lt;code>ConnectionUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Systems-Connections-ConnectorAsUsage-_generalization.0" general="Systems-DefinitionAndUsage-Usage"/>
        <generalization xmi:id="Systems-Connections-ConnectorAsUsage-_generalization.1" general="Kernel-Connectors-Connector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-BindingConnectorAsUsage" name="BindingConnectorAsUsage" visibility="public">
        <ownedComment xmi:id="Systems-Connections-BindingConnectorAsUsage-_ownedComment.0" annotatedElement="Systems-Connections-BindingConnectorAsUsage">
          <body>&lt;p>A &lt;code>BindingConnectorAsUsage&lt;/code> is both a &lt;code>BindingConnector&lt;/code> and a &lt;code>ConnectorAsUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Systems-Connections-BindingConnectorAsUsage-_generalization.0" general="Kernel-Connectors-BindingConnector"/>
        <generalization xmi:id="Systems-Connections-BindingConnectorAsUsage-_generalization.1" general="Systems-Connections-ConnectorAsUsage"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Connections-_packagedElement.9" name="" visibility="private" memberEnd="Systems-Connections-FlowConnectionUsage-flowConnectionDefinition Systems-Connections-_packagedElement.9-definedFlowConnection">
        <ownedEnd xmi:id="Systems-Connections-_packagedElement.9-definedFlowConnection" name="definedFlowConnection" visibility="public" type="Systems-Connections-FlowConnectionUsage" isDerived="true" redefinedProperty="Systems-Connections-_packagedElement.3-definedConnection" association="Systems-Connections-_packagedElement.9">
          <ownedComment xmi:id="Systems-Connections-_packagedElement.9-definedFlowConnection-_ownedComment.0" annotatedElement="Systems-Connections-_packagedElement.9-definedFlowConnection">
            <body>&lt;p>The FlowConnectionUsages that have a certain Interaction as their &lt;code>flowConnectionDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Connections-_packagedElement.9-definedFlowConnection-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Connections-_packagedElement.9-definedFlowConnection-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Connections-FlowConnectionDefinition" name="FlowConnectionDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Connections-FlowConnectionDefinition-_ownedComment.0" annotatedElement="Systems-Connections-FlowConnectionDefinition">
          <body>&lt;p>A &lt;code>FlowConnectionDefinition&lt;/code> is a &lt;code>ConnectionDefinition&lt;/code> and &lt;code>ActionDefinition&lt;/code> that is also an &lt;code>Interaction&lt;/code> representing flows between &lt;code>Usages&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Connections-FlowConnectionDefinition-checkFlowConnectionDefinitionSpecialization" name="checkFlowConnectionDefinitionSpecialization" visibility="public" constrainedElement="Systems-Connections-FlowConnectionDefinition">
          <ownedComment xmi:id="Systems-Connections-FlowConnectionDefinition-checkFlowConnectionDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Connections-FlowConnectionDefinition-checkFlowConnectionDefinitionSpecialization">
            <body>&lt;p>A &lt;code>FlowConnectionDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>FlowConnectionDefinition&lt;/code> &lt;em>&lt;code>FlowConnectionDefinition&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Connections-FlowConnectionDefinition-checkFlowConnectionDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Connections::MessageConnection&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Connections-FlowConnectionDefinition-_generalization.0" general="Kernel-Interactions-Interaction"/>
        <generalization xmi:id="Systems-Connections-FlowConnectionDefinition-_generalization.1" general="Systems-Connections-ConnectionDefinition"/>
        <generalization xmi:id="Systems-Connections-FlowConnectionDefinition-_generalization.2" general="Systems-Actions-ActionDefinition"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Cases" name="Cases" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Cases-CaseUsage" name="CaseUsage" visibility="public">
        <ownedComment xmi:id="Systems-Cases-CaseUsage-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage">
          <body>&lt;p>A &lt;code>CaseUsage&lt;/code> is a &lt;code>Usage&lt;/code> of a &lt;code>CaseDefinition&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageObjectiveRequirement" name="deriveCaseUsageObjectiveRequirement" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageObjectiveRequirement-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-deriveCaseUsageObjectiveRequirement">
            <body>&lt;p>The &lt;code>objectiveRequirement&lt;/code> of a &lt;code>CaseUsage&lt;/code> is the &lt;code>RequirementUsage&lt;/code> it owns via an &lt;case>ObjectiveMembership&lt;/code>, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageObjectiveRequirement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>objectiveRequirement = 
    let objectives: OrderedSet(RequirementUsage) = 
        featureMembership->
            selectByKind(ObjectiveMembership).
            ownedRequirement in
    if objectives->isEmpty() then null
    else objectives->first().ownedObjectiveRequirement
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneObjective" name="validateCaseUsageOnlyOneObjective" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneObjective-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneObjective">
            <body>&lt;p>A &lt;code>CaseUsage&lt;/code> must have at most one &lt;code>featureMembership&lt;/code> that is a &lt;code>ObjectiveMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneObjective-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership->
    selectByKind(ObjectiveMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneSubject" name="validateCaseUsageOnlyOneSubject" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneSubject-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneSubject">
            <body>&lt;p>A &lt;code>CaseUsage&lt;/code> must have at most one &lt;code>featureMembership&lt;/code> that is a &lt;code>SubjectMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-validateCaseUsageOnlyOneSubject-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership->
	selectByKind(SubjectMembership)->
	size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageActorParameter" name="deriveCaseUsageActorParameter" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageActorParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-deriveCaseUsageActorParameter">
            <body>&lt;p>The &lt;code>actorParameters&lt;/code> of a &lt;code>CaseUsage&lt;/code> are the &lt;code>ownedActorParameters&lt;/code> of the &lt;code>ActorMemberships&lt;/code> of the &lt;code>CaseUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageActorParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>actorParameter = featureMembership->
    selectByKind(ActorMembership).
    ownedActorParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageSubjectParameter" name="deriveCaseUsageSubjectParameter" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageSubjectParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-deriveCaseUsageSubjectParameter">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>CaseUsage&lt;/code> is the &lt;code>ownedSubjectParameter&lt;/code> of its &lt;code>SubjectMembership&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-deriveCaseUsageSubjectParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>subjectParameter =
    let subjects : OrderedSet(SubjectMembership) = 
        featureMembership->selectByKind(SubjectMembership) in
    if subjects->isEmpty() then null
    else subjects->first().ownedSubjectParameter
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-validateCaseUsageSubjectParameterPosition" name="validateCaseUsageSubjectParameterPosition" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-validateCaseUsageSubjectParameterPosition-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-validateCaseUsageSubjectParameterPosition">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>CaseUsage&lt;/code> must be its first &lt;code>input&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-validateCaseUsageSubjectParameterPosition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>input->notEmpty() and input->first() = subjectParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-checkCaseUsageSpecialization" name="checkCaseUsageSpecialization" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-checkCaseUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-checkCaseUsageSpecialization">
            <body>&lt;p>A &lt;code>CaseUsage&lt;/code> must directly or indirectly specialize the base &lt;code>CaseUsage&lt;/code> &lt;em>&lt;code>Cases::cases&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-checkCaseUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializeFromLibrary('Cases::cases')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseUsage-checkCaseUsageSubcaseSpecialization" name="checkCaseUsageSubcaseSpecialization" visibility="public" constrainedElement="Systems-Cases-CaseUsage">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-checkCaseUsageSubcaseSpecialization-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-checkCaseUsageSubcaseSpecialization">
            <body>&lt;p>A composite &lt;code>CaseUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>CaseDefinition&lt;/code> or &lt;code>CaseUsage&lt;/code> must directly or indirectly specialize the &lt;code>CaseUsage&lt;/code> &lt;em>&lt;code>Cases::Case::subcases&lt;/code>&lt;/em>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseUsage-checkCaseUsageSubcaseSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and 
    (owningType.oclIsKindOf(CaseDefinition) or
     owningType.oclIsKindOf(CaseUsage)) implies
    specializesFromLibrary('Cases::Case::subcases')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Cases-CaseUsage-_generalization.0" general="Systems-Calculations-CalculationUsage"/>
        <ownedAttribute xmi:id="Systems-Cases-CaseUsage-objectiveRequirement" name="objectiveRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedRequirement" association="Systems-Cases-_packagedElement.5">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-objectiveRequirement-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-objectiveRequirement">
            <body>&lt;p>The &lt;code>ownedFeature&lt;/code> of this CaseUsage that is owned via an ObjectiveMembership, and that must redefine, directly or indirectly, the &lt;code>objective&lt;/code> RequirementUsage of the base CaseDefinition Case from the Systems model library.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-CaseUsage-objectiveRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-CaseUsage-objectiveRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Cases-CaseUsage-caseDefinition" name="caseDefinition" visibility="public" type="Systems-Cases-CaseDefinition" isDerived="true" redefinedProperty="Systems-Calculations-CalculationUsage-calculationDefinition" association="Systems-Cases-_packagedElement.2">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-caseDefinition-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-caseDefinition">
            <body>&lt;p>The CaseDefinition that is the type of this CaseUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-CaseUsage-caseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-CaseUsage-caseDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Cases-CaseUsage-subjectParameter" name="subjectParameter" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-parameter Systems-DefinitionAndUsage-Usage-nestedUsage" association="Systems-Cases-_packagedElement.9">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-subjectParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-subjectParameter">
            <body>&lt;p>The &lt;code>parameter&lt;/code> of this &lt;code>CaseUsage&lt;/code> that is owned via a SubjectMembership, which must redefine, directly or indirectly, the &lt;code>subject&lt;/code> parameter of the base &lt;code>CaseUsage&lt;/code> &lt;code>&lt;em>Case&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-CaseUsage-subjectParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-CaseUsage-subjectParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Cases-CaseUsage-actorParameter" name="actorParameter" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedPart Kernel-Behaviors-Step-parameter" association="Systems-Cases-_packagedElement.11">
          <ownedComment xmi:id="Systems-Cases-CaseUsage-actorParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseUsage-actorParameter">
            <body>&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>CaseUsage&lt;/code> that are owned via &lt;code>ActorMemberships&lt;/code>, which must subset, directly or indirectly, the &lt;code>PartUsage&lt;/code> &lt;em>&lt;code>actors&lt;/code>&lt;/em> of the base &lt;code>CaseUsage&lt;/code> &lt;em>Case&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-CaseUsage-actorParameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-CaseUsage-actorParameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.1" name="" visibility="private" memberEnd="Systems-Cases-_packagedElement.1-caseOwningUsage Systems-DefinitionAndUsage-Usage-nestedCase">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.1-caseOwningUsage" name="caseOwningUsage" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Systems-Calculations-_packagedElement.5-calculationOwningUsage" association="Systems-Cases-_packagedElement.1">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.1-caseOwningUsage-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.1-caseOwningUsage">
            <body>&lt;p>The Usage in which the &lt;code>nestedCase&lt;/code> is nested.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.1-caseOwningUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.1-caseOwningUsage-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Cases-_packagedElement.2-definedCase Systems-Cases-CaseUsage-caseDefinition">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.2-definedCase" name="definedCase" visibility="public" type="Systems-Cases-CaseUsage" isDerived="true" subsettedProperty="Systems-Calculations-_packagedElement.1-definedCalculation" association="Systems-Cases-_packagedElement.2">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.2-definedCase-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.2-definedCase">
            <body>&lt;p>The CaseUsages being typed by a certain CaseDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.2-definedCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.2-definedCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Cases-CaseDefinition" name="CaseDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Cases-CaseDefinition-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition">
          <body>&lt;p>A &lt;code>CaseDefinition&lt;/code> is a &lt;code>CalculationDefinition&lt;/code> for a process, often involving collecting evidence or data, relative to a subject, possibly involving the collaboration of one or more other actors, producing a result that meets an objective.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionObjectiveRequirement" name="deriveCaseDefinitionObjectiveRequirement" visibility="public" constrainedElement="Systems-Cases-CaseDefinition">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionObjectiveRequirement-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-deriveCaseDefinitionObjectiveRequirement">
            <body>&lt;p>The &lt;code>objectiveRequirement&lt;/code> of a &lt;code>CaseDefinition&lt;/code> is the &lt;code>ownedObjectiveRequirement&lt;/code> of its &lt;case>ObjectiveMembership&lt;/code>, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionObjectiveRequirement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>objectiveRequirement = 
    let objectives: OrderedSet(RequirementUsage) = 
        featureMembership->
            selectByKind(ObjectiveMembership).
            ownedRequirement in
    if objectives->isEmpty() then null
    else objectives->first().ownedObjectiveRequirement
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneObjective" name="validateCaseDefinitionOnlyOneObjective" visibility="public" constrainedElement="Systems-Cases-CaseDefinition">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneObjective-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneObjective">
            <body>&lt;p>A &lt;code>CaseDefinition&lt;/code> must have at most one &lt;code>featureMembership&lt;/code> that is a &lt;code>ObjectiveMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneObjective-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership->
    selectByKind(ObjectiveMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionSubjectParameter" name="deriveCaseDefinitionSubjectParameter" visibility="public" constrainedElement="Systems-Cases-CaseDefinition">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionSubjectParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-deriveCaseDefinitionSubjectParameter">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>CaseDefinition&lt;/code> is the &lt;code>ownedSubjectParameter&lt;/code> of its &lt;code>SubjectMembership&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionSubjectParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>subjectParameter =
    let subjectMems : OrderedSet(SubjectMembership) = 
        featureMembership->selectByKind(SubjectMembership) in
    if subjectMems->isEmpty() then null
    else subjectMems->first().ownedSubjectParameter
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionActorParameter" name="deriveCaseDefinitionActorParameter" visibility="public" constrainedElement="Systems-Cases-CaseDefinition">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionActorParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-deriveCaseDefinitionActorParameter">
            <body>&lt;p>The &lt;code>actorParameters&lt;/code> of a &lt;code>CaseDefinition&lt;/code> are the &lt;code>ownedActorParameters&lt;/code> of the &lt;code>ActorMemberships&lt;/code> of the &lt;code>CaseDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseDefinition-deriveCaseDefinitionActorParameter-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>actorParameter = featureMembership->
    selectByKind(ActorMembership).
    ownedActorParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneSubject" name="validateCaseDefinitionOnlyOneSubject" visibility="public" constrainedElement="Systems-Cases-CaseDefinition">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneSubject-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneSubject">
            <body>&lt;p>A &lt;code>CaseDefinition&lt;/code> must have at most one &lt;code>featureMembership&lt;/code> that is a &lt;code>SubjectMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionOnlyOneSubject-_specification" name="" visibility="public">
            <language>English</language>
            <body>featureMembership->selectByKind(SubjectMembership)->size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionSubjectParameterPosition" name="validateCaseDefinitionSubjectParameterPosition" visibility="public" constrainedElement="Systems-Cases-CaseDefinition">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionSubjectParameterPosition-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-validateCaseDefinitionSubjectParameterPosition">
            <body>&lt;p>The &lt;code>subjectParameter&lt;/code> of a &lt;code>CaaseDefinition&lt;/code> must be its first &lt;code>input&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseDefinition-validateCaseDefinitionSubjectParameterPosition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>input->notEmpty() and input->first() = subjectParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-CaseDefinition-checkCaseDefinitionSpecialization" name="checkCaseDefinitionSpecialization" visibility="public" constrainedElement="Systems-Cases-CaseDefinition">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-checkCaseDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-checkCaseDefinitionSpecialization">
            <body>&lt;p>A &lt;code>CaseDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>CaseDefinition&lt;/code> &lt;em>&lt;code>Cases::Case>&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-CaseDefinition-checkCaseDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Cases::Case')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Cases-CaseDefinition-_generalization.0" general="Systems-Calculations-CalculationDefinition"/>
        <ownedAttribute xmi:id="Systems-Cases-CaseDefinition-objectiveRequirement" name="objectiveRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedRequirement" association="Systems-Cases-_packagedElement.6">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-objectiveRequirement-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-objectiveRequirement">
            <body>&lt;p>The &lt;code>objectiveRequirement&lt;/code> of this &lt;code>CaseDefinition&lt;/code>, that is owned via an &lt;code>ObjectiveMembership&lt;/code>, and that must redefine, directly or indirectly, the &lt;code>objective&lt;/code> &lt;code>RequirementUsage&lt;code> of the base &lt;code>CaseDefinition&lt;/code> &lt;code>&lt;em>Case&lt;/em>&lt;/code> from the Systems Model lLibrary.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-CaseDefinition-objectiveRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-CaseDefinition-objectiveRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Cases-CaseDefinition-subjectParameter" name="subjectParameter" visibility="public" type="Systems-DefinitionAndUsage-Usage" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-parameter Systems-DefinitionAndUsage-Definition-ownedUsage" association="Systems-Cases-_packagedElement.8">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-subjectParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-subjectParameter">
            <body>&lt;p>The &lt;code>parameter&lt;/code> of this &lt;code>CaseDefinition&lt;/code> that is owned via a SubjectMembership, which must redefine, directly or indirectly, the &lt;code>subject&lt;/code> parameter of the base &lt;code>CaseDefinition&lt;/code> &lt;code>&lt;em>Case&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-CaseDefinition-subjectParameter-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-CaseDefinition-subjectParameter-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Cases-CaseDefinition-actorParameter" name="actorParameter" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" subsettedProperty="Kernel-Behaviors-Behavior-parameter Systems-DefinitionAndUsage-Definition-ownedPart" association="Systems-Cases-_packagedElement.10">
          <ownedComment xmi:id="Systems-Cases-CaseDefinition-actorParameter-_ownedComment.0" annotatedElement="Systems-Cases-CaseDefinition-actorParameter">
            <body>&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>CaseDefinition&lt;/code> that are owned via &lt;code>ActorMemberships&lt;/code>, which must subset, directly or indirectly, the &lt;code>PartUsage&lt;/code> &lt;em>&lt;code>actors&lt;/code>&lt;/em> of the base &lt;code>CaseDefinition&lt;/code> &lt;em>Case&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-CaseDefinition-actorParameter-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-CaseDefinition-actorParameter-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Cases-ObjectiveMembership" name="ObjectiveMembership" visibility="public">
        <ownedComment xmi:id="Systems-Cases-ObjectiveMembership-_ownedComment.0" annotatedElement="Systems-Cases-ObjectiveMembership">
          <body>&lt;p>An &lt;code>ObjectiveMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> that indicates that its &lt;code>ownedObjectiveRequirement&lt;/code> is the objective &lt;code>RequirementUsage &lt;code> for its &lt;code>owningType&lt;/code>, which must be a &lt;code>CaseDefinition&lt;/code> or &lt;code>CaseUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipOwningType" name="validateObjectiveMembershipOwningType" visibility="public" constrainedElement="Systems-Cases-ObjectiveMembership">
          <ownedComment xmi:id="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipOwningType-_ownedComment.0" annotatedElement="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of an &lt;code>ObjectiveMembership&lt;/code> must be a &lt;code>CaseDefinition&lt;/code> or &lt;code>CaseUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsType(CaseDefinition) or
owningType.oclIsType(CaseUsage)
</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipIsComposite" name="validateObjectiveMembershipIsComposite" visibility="public" constrainedElement="Systems-Cases-ObjectiveMembership">
          <ownedComment xmi:id="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipIsComposite-_ownedComment.0" annotatedElement="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipIsComposite">
            <body>&lt;p>The &lt;code>ownedObjectiveRequirement&lt;/code> of an &lt;code>ObjectiveMembership&lt;/code> must be composite.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Cases-ObjectiveMembership-validateObjectiveMembershipIsComposite-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedObjectiveRequirement.isComposite</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Cases-ObjectiveMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Systems-Cases-ObjectiveMembership-ownedObjectiveRequirement" name="ownedObjectiveRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Systems-Cases-_packagedElement.7">
          <ownedComment xmi:id="Systems-Cases-ObjectiveMembership-ownedObjectiveRequirement-_ownedComment.0" annotatedElement="Systems-Cases-ObjectiveMembership-ownedObjectiveRequirement">
            <body>&lt;p>The RequirementUsage that is the &lt;code>ownedMemberFeature&lt;/code> of this RequirementUsage.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-ObjectiveMembership-ownedObjectiveRequirement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-ObjectiveMembership-ownedObjectiveRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.5" name="" visibility="private" memberEnd="Systems-Cases-CaseUsage-objectiveRequirement Systems-Cases-_packagedElement.5-objectiveOwningCase">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.5-objectiveOwningCase" name="objectiveOwningCase" visibility="public" type="Systems-Cases-CaseUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.17-requirementOwningUsage" association="Systems-Cases-_packagedElement.5">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.5-objectiveOwningCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.5-objectiveOwningCase-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.6" name="" visibility="private" memberEnd="Systems-Cases-CaseDefinition-objectiveRequirement Systems-Cases-_packagedElement.6-objectiveOwningCaseDefinition">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.6-objectiveOwningCaseDefinition" name="objectiveOwningCaseDefinition" visibility="public" type="Systems-Cases-CaseDefinition" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-Cases-_packagedElement.6">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.6-objectiveOwningCaseDefinition-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.6-objectiveOwningCaseDefinition">
            <body>&lt;p>The CaseDefinitions that have a certain RequirementUsage as their &lt;code>objectiveRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.6-objectiveOwningCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.6-objectiveOwningCaseDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.7" name="" visibility="private" memberEnd="Systems-Cases-ObjectiveMembership-ownedObjectiveRequirement Systems-Cases-_packagedElement.7-owningObjectiveMembership">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.7-owningObjectiveMembership" name="owningObjectiveMembership" visibility="public" type="Systems-Cases-ObjectiveMembership" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.7-owningParameterMembership" association="Systems-Cases-_packagedElement.7">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.7-owningObjectiveMembership-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.7-owningObjectiveMembership">
            <body>&lt;p>The ObjectMembership that owns a particular RequirementUsage as its &lt;code>ownedObjectiveRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.7-owningObjectiveMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.7-owningObjectiveMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.8" name="" visibility="private" memberEnd="Systems-Cases-CaseDefinition-subjectParameter Systems-Cases-_packagedElement.8-subjectOwningCaseDefinition">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.8-subjectOwningCaseDefinition" name="subjectOwningCaseDefinition" visibility="public" type="Systems-Cases-CaseDefinition" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.1-parameteredBehavior Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-Cases-_packagedElement.8">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.8-subjectOwningCaseDefinition-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.8-subjectOwningCaseDefinition">
            <body>&lt;p>The CaseDefinitions that have a certain Usage as their &lt;code>subjectParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.8-subjectOwningCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.8-subjectOwningCaseDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.9" name="" visibility="private" memberEnd="Systems-Cases-CaseUsage-subjectParameter Systems-Cases-_packagedElement.9-subjectOwningCase">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.9-subjectOwningCase" name="subjectOwningCase" visibility="public" type="Systems-Cases-CaseUsage" subsettedProperty="Kernel-Behaviors-_packagedElement.8-parameteredStep Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-Cases-_packagedElement.9">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.9-subjectOwningCase-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.9-subjectOwningCase">
            <body>&lt;p>The CaseUsages that have a certain Usage as their &lt;code>subjectParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.9-subjectOwningCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.9-subjectOwningCase-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.10" name="" visibility="private" memberEnd="Systems-Cases-CaseDefinition-actorParameter Systems-Cases-_packagedElement.10-actorOwningCaseDefinition">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.10-actorOwningCaseDefinition" name="actorOwningCaseDefinition" visibility="public" type="Systems-Cases-CaseDefinition" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.25-partOwningDefinition Kernel-Behaviors-_packagedElement.1-parameteredBehavior" association="Systems-Cases-_packagedElement.10">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.10-actorOwningCaseDefinition-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.10-actorOwningCaseDefinition">
            <body>&lt;p>The CaseDefinitions that have a certain PartUsage as an &lt;code>actorParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.10-actorOwningCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.10-actorOwningCaseDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Cases-_packagedElement.11" name="" visibility="private" memberEnd="Systems-Cases-CaseUsage-actorParameter Systems-Cases-_packagedElement.11-actorOwningCase">
        <ownedEnd xmi:id="Systems-Cases-_packagedElement.11-actorOwningCase" name="actorOwningCase" visibility="public" type="Systems-Cases-CaseUsage" isDerived="true" subsettedProperty="Kernel-Behaviors-_packagedElement.8-parameteredStep Systems-DefinitionAndUsage-_packagedElement.33-partOwningUsage" association="Systems-Cases-_packagedElement.11">
          <ownedComment xmi:id="Systems-Cases-_packagedElement.11-actorOwningCase-_ownedComment.0" annotatedElement="Systems-Cases-_packagedElement.11-actorOwningCase">
            <body>&lt;p>The CaseUsages that have a certain PartUsage as an &lt;code>actorParameter&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Cases-_packagedElement.11-actorOwningCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Cases-_packagedElement.11-actorOwningCase-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-AnalysisCases" name="AnalysisCases" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-AnalysisCases-_packagedElement.0" name="" visibility="private" memberEnd="Systems-AnalysisCases-AnalysisCaseDefinition-resultExpression Systems-AnalysisCases-_packagedElement.0-analysisCaseDefintion">
        <ownedEnd xmi:id="Systems-AnalysisCases-_packagedElement.0-analysisCaseDefintion" name="analysisCaseDefintion" visibility="public" type="Systems-AnalysisCases-AnalysisCaseDefinition" isDerived="true" subsettedProperty="Core-Types-Specialization-owningType Kernel-Functions-_packagedElement.6-computedFunction" association="Systems-AnalysisCases-_packagedElement.0">
          <ownedComment xmi:id="Systems-AnalysisCases-_packagedElement.0-analysisCaseDefintion-_ownedComment.0" annotatedElement="Systems-AnalysisCases-_packagedElement.0-analysisCaseDefintion">
            <body>&lt;p>The AnalysisCaseDefinitions that have a certain Expression as their &lt;code>resultExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-_packagedElement.0-analysisCaseDefintion-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-_packagedElement.0-analysisCaseDefintion-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-AnalysisCases-_packagedElement.1" name="" visibility="private" memberEnd="Systems-AnalysisCases-AnalysisCaseDefinition-analysisAction Systems-AnalysisCases-_packagedElement.1-featuringAnalysisCaseDefinition">
        <ownedEnd xmi:id="Systems-AnalysisCases-_packagedElement.1-featuringAnalysisCaseDefinition" name="featuringAnalysisCaseDefinition" visibility="public" type="Systems-AnalysisCases-AnalysisCaseDefinition" isDerived="true" subsettedProperty="Systems-Actions-_packagedElement.9-featuringActionDefinition" association="Systems-AnalysisCases-_packagedElement.1">
          <ownedComment xmi:id="Systems-AnalysisCases-_packagedElement.1-featuringAnalysisCaseDefinition-_ownedComment.0" annotatedElement="Systems-AnalysisCases-_packagedElement.1-featuringAnalysisCaseDefinition">
            <body>&lt;p>The AnalysisCaseDefinitions that have a certain ActionUsage as an &lt;code>analysisAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-_packagedElement.1-featuringAnalysisCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-_packagedElement.1-featuringAnalysisCaseDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-AnalysisCases-_packagedElement.2" name="" visibility="private" memberEnd="Systems-AnalysisCases-AnalysisCaseUsage-analysisCaseDefinition Systems-AnalysisCases-_packagedElement.2-definedAnalysisCase">
        <ownedEnd xmi:id="Systems-AnalysisCases-_packagedElement.2-definedAnalysisCase" name="definedAnalysisCase" visibility="public" type="Systems-AnalysisCases-AnalysisCaseUsage" isOrdered="true" isDerived="true" redefinedProperty="Systems-Cases-_packagedElement.2-definedCase" association="Systems-AnalysisCases-_packagedElement.2">
          <ownedComment xmi:id="Systems-AnalysisCases-_packagedElement.2-definedAnalysisCase-_ownedComment.0" annotatedElement="Systems-AnalysisCases-_packagedElement.2-definedAnalysisCase">
            <body>&lt;p>The AnalysisCaseUsages being typed by a certain AnalysisCaseDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-_packagedElement.2-definedAnalysisCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-_packagedElement.2-definedAnalysisCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage" name="AnalysisCaseUsage" visibility="public">
        <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage">
          <body>&lt;p>An &lt;code>AnalysisCaseUsage&lt;/code> is a &lt;code>Usage&lt;/code> of an &lt;code>AnalysisCaseDefinition&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageAnalysisAction" name="deriveAnalysisCaseUsageAnalysisAction" visibility="public" constrainedElement="Systems-AnalysisCases-AnalysisCaseUsage">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageAnalysisAction-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageAnalysisAction">
            <body>&lt;p>The &lt;code>analysisActions&lt;/code> of a &lt;code>AnalysisCaseUsage&lt;/code> are all its &lt;code>actions&lt;/code> that directly or indirectly specialize &lt;code>&lt;em>AnalysisCases::AnalysisAction&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageAnalysisAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>analysisAction = usage->select(
    isComposite and
    specializes('AnalysisCases::AnalysisAction'))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageResultExpression" name="deriveAnalysisCaseUsageResultExpression" visibility="public" constrainedElement="Systems-AnalysisCases-AnalysisCaseUsage">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageResultExpression-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageResultExpression">
            <body>&lt;p>The &lt;code>resultExpression&lt;/code> of a &lt;code>AnalysisCaseUsage&lt;/code> is the &lt;code>ownedResultExpression&lt;/code> of its &lt;code>ResultExpressionMembership&lt;/code>, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-deriveAnalysisCaseUsageResultExpression-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>resultExpression =
    let results : OrderedSet(ResultExpressionMembership) =
        featureMembersip->
            selectByKind(ResultExpressionMembership) in
    if results->isEmpty() then null
    else results->first().ownedResultExpression
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSpecialization" name="checkAnalysisCaseUsageSpecialization" visibility="public" constrainedElement="Systems-AnalysisCases-AnalysisCaseUsage">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSpecialization-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSpecialization">
            <body>&lt;p>An &lt;code>AnalysisCaseUsage&lt;/code> must directly or indirectly specialize the base &lt;code>AnalysisCaseUsage&lt;/code> &lt;code>&lt;em>AnalysisCases::analysisCases&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('AnalysisCases::analysisCases')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSubAnalysisCaseSpecialization" name="checkAnalysisCaseUsageSubAnalysisCaseSpecialization" visibility="public" constrainedElement="Systems-AnalysisCases-AnalysisCaseUsage">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSubAnalysisCaseSpecialization-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSubAnalysisCaseSpecialization">
            <body>&lt;p>A composite &lt;code>AnalysisCaseUsage&lt;/code> whose &lt;code>owningType&lt;/code> is an &lt;code>AnalysisCaseDefinition&lt;/code> or &lt;code>AnalysisCaseUsage&lt;/code> must specialize the &lt;code>AnalysisCaseUsage&lt;/code> &lt;code>&lt;em>AnalysisCases::AnalysisCase::subAnalysisCases&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-checkAnalysisCaseUsageSubAnalysisCaseSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
    (owningType.oclIsKindOf(AnalysisCaseDefinition) or
     owningType.oclIsKindOf(AnalysisCaseUsage)) implies
    specializesFromLibrary('AnalysisCases::AnalysisCase::subAnalysisCases')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-_generalization.0" general="Systems-Cases-CaseUsage"/>
        <ownedAttribute xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisAction" name="analysisAction" visibility="public" type="Systems-Actions-ActionUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-usage" association="Systems-AnalysisCases-_packagedElement.6">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisAction-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage-analysisAction">
            <body>&lt;p>The composite &lt;code>usages&lt;/code> of the &lt;code>AnalysisCaseUsage&lt;/code> that are defined as &lt;code>AnalysisActions&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisCaseDefinition" name="analysisCaseDefinition" visibility="public" type="Systems-AnalysisCases-AnalysisCaseDefinition" isDerived="true" redefinedProperty="Systems-Cases-CaseUsage-caseDefinition" association="Systems-AnalysisCases-_packagedElement.2">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisCaseDefinition-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage-analysisCaseDefinition">
            <body>&lt;p>The &lt;code>AnalysisCaseDefinition&lt;/code> that is the &lt;code>definition&lt;/code> of this &lt;code>AnalysisCaseUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-analysisCaseDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-resultExpression" name="resultExpression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Core-Types-Type-ownedFeature" association="Systems-AnalysisCases-_packagedElement.4">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-resultExpression-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseUsage-resultExpression">
            <body>&lt;p>An &lt;code>Expression&lt;/code> used to compute the &lt;code>result&lt;/code> of the &lt;code>AnalysisCaseUsage&lt;/code>, owned via a &lt;code>ResultExpressionMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-resultExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-AnalysisCaseUsage-resultExpression-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-AnalysisCases-_packagedElement.4" name="" visibility="private" memberEnd="Systems-AnalysisCases-AnalysisCaseUsage-resultExpression Systems-AnalysisCases-_packagedElement.4-analysisCase">
        <ownedEnd xmi:id="Systems-AnalysisCases-_packagedElement.4-analysisCase" name="analysisCase" visibility="public" type="Systems-AnalysisCases-AnalysisCaseUsage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-AnalysisCases-_packagedElement.4">
          <ownedComment xmi:id="Systems-AnalysisCases-_packagedElement.4-analysisCase-_ownedComment.0" annotatedElement="Systems-AnalysisCases-_packagedElement.4-analysisCase">
            <body>&lt;p>The AnalysisCaseUsages that have a certain Expression as their &lt;code>resultExpression&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-_packagedElement.4-analysisCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-_packagedElement.4-analysisCase-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition" name="AnalysisCaseDefinition" visibility="public">
        <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseDefinition">
          <body>&lt;p>An &lt;code>AnalysisCaseDefinition&lt;/code> is a &lt;code>CaseDefinition&lt;/code> for the case of carrying out an analysis.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionAnalysisAction" name="deriveAnalysisCaseDefinitionAnalysisAction" visibility="public" constrainedElement="Systems-AnalysisCases-AnalysisCaseDefinition">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionAnalysisAction-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionAnalysisAction">
            <body>&lt;p>The &lt;code>analysisActions&lt;/code> of a &lt;code>AnalysisCaseDefinition&lt;/code> are all its &lt;code>actions&lt;/code> that directly or indirectly specialize &lt;code>&lt;em>AnalysisCases::AnalysisAction&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionAnalysisAction-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>analysisAction = action->select(
    isComposite and 
    specializes('AnalysisCases::AnalysisAction'))</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionResultExpression" name="deriveAnalysisCaseDefinitionResultExpression" visibility="public" constrainedElement="Systems-AnalysisCases-AnalysisCaseDefinition">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionResultExpression-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionResultExpression">
            <body>&lt;p>The &lt;code>resultExpression&lt;/code> of a &lt;code>AnalysisCaseDefinition&lt;/code> is the &lt;code>ownedResultExpression&lt;/code> of its &lt;code>ResultExpressionMembership&lt;/code>, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-deriveAnalysisCaseDefinitionResultExpression-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>resultExpression =
    let results : OrderedSet(ResultExpressionMembership) =
        featureMembersip->
            selectByKind(ResultExpressionMembership) in
    if results->isEmpty() then null
    else results->first().ownedResultExpression
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-checkAnalysisCaseDefinitionSpecialization" name="checkAnalysisCaseDefinitionSpecialization" visibility="public" constrainedElement="Systems-AnalysisCases-AnalysisCaseDefinition">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-checkAnalysisCaseDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseDefinition-checkAnalysisCaseDefinitionSpecialization">
            <body>&lt;p>An &lt;code>AnalysisCaseDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>AnalysisCaseDefinition&lt;/code> &lt;code>&lt;em>AnalysisCases::AnalysisCase&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-checkAnalysisCaseDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('AnalysisCases::AnalysisCase')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-_generalization.0" general="Systems-Cases-CaseDefinition"/>
        <ownedAttribute xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-analysisAction" name="analysisAction" visibility="public" type="Systems-Actions-ActionUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-Actions-ActionDefinition-action" association="Systems-AnalysisCases-_packagedElement.1">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-analysisAction-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseDefinition-analysisAction">
            <body>&lt;p>The composite &lt;code>actions&lt;/code> of the &lt;code>AnalysisCaseDefinition&lt;/code> that are defined as &lt;code>AnalysisActions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-analysisAction-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-analysisAction-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-resultExpression" name="resultExpression" visibility="public" type="Kernel-Functions-Expression" isDerived="true" subsettedProperty="Kernel-Functions-Function-expression Core-Types-Type-ownedFeature" association="Systems-AnalysisCases-_packagedElement.0">
          <ownedComment xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-resultExpression-_ownedComment.0" annotatedElement="Systems-AnalysisCases-AnalysisCaseDefinition-resultExpression">
            <body>&lt;p>An &lt;code>Expression&lt;/code> used to compute the &lt;code>result&lt;/code> of the &lt;code>AnalysisCaseDefinition&lt;/code>, owned via a &lt;code>ResultExpressionMembership&lt;/code>.&lt;/p>
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-resultExpression-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-AnalysisCaseDefinition-resultExpression-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-AnalysisCases-_packagedElement.6" name="" visibility="private" memberEnd="Systems-AnalysisCases-AnalysisCaseUsage-analysisAction Systems-AnalysisCases-_packagedElement.6-featuringAnalysisCase">
        <ownedEnd xmi:id="Systems-AnalysisCases-_packagedElement.6-featuringAnalysisCase" name="featuringAnalysisCase" visibility="public" type="Systems-AnalysisCases-AnalysisCaseUsage" isDerived="true" subsettedProperty="Core-Types-_packagedElement.12-typeWithFeature" association="Systems-AnalysisCases-_packagedElement.6">
          <ownedComment xmi:id="Systems-AnalysisCases-_packagedElement.6-featuringAnalysisCase-_ownedComment.0" annotatedElement="Systems-AnalysisCases-_packagedElement.6-featuringAnalysisCase">
            <body>&lt;p>The AnalysisCaseUsages that have a certain ActionUsage as an &lt;code>analysisAction&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-AnalysisCases-_packagedElement.6-featuringAnalysisCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-AnalysisCases-_packagedElement.6-featuringAnalysisCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Items" name="Items" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Items-ItemUsage" name="ItemUsage" visibility="public">
        <ownedComment xmi:id="Systems-Items-ItemUsage-_ownedComment.0" annotatedElement="Systems-Items-ItemUsage">
          <body>&lt;p>An &lt;code>ItemUsage&lt;/code> is a &lt;code>ItemUsage&lt;/code> whose &lt;code>definition&lt;/code> is a &lt;code>Structure&lt;/code>. Nominally, if the &lt;code>definition&lt;/code> is an &lt;code>ItemDefinition&lt;/code>, an &lt;code>ItemUsage&lt;/code> is a &lt;code>ItemUsage&lt;/code> of that &lt;code>ItemDefinition&lt;/code> within a system. However, other kinds of Kernel &lt;code>Structures&lt;/code> are also allowed, to permit use of &lt;code>Structures&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Items-ItemUsage-deriveItemUsageItemDefinition" name="deriveItemUsageItemDefinition" visibility="public" constrainedElement="Systems-Items-ItemUsage">
          <ownedComment xmi:id="Systems-Items-ItemUsage-deriveItemUsageItemDefinition-_ownedComment.0" annotatedElement="Systems-Items-ItemUsage-deriveItemUsageItemDefinition">
            <body>&lt;p>The &lt;code>itemDefinitions&lt;/code> of an &lt;code>ItemUsage&lt;/code> are those &lt;code>occurrenceDefinitions&lt;/code> that are &lt;code>ItemDefinitions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Items-ItemUsage-deriveItemUsageItemDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>itemDefinition = occurrenceDefinition->selectByKind(ItemDefinition)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Items-ItemUsage-checkItemUsageSpecialization" name="checkItemUsageSpecialization" visibility="public" constrainedElement="Systems-Items-ItemUsage">
          <ownedComment xmi:id="Systems-Items-ItemUsage-checkItemUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Items-ItemUsage-checkItemUsageSpecialization">
            <body>&lt;p>An &lt;code>ItemUsage&lt;/code> must directly or indirectly specialize the Systems Model Library &lt;code>ItemUsage&lt;/code> &lt;em>&lt;code>items&lt;/code>&lt;/em>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Items-ItemUsage-checkItemUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Items::items&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Items-ItemUsage-checkItemUsageSubitemSpecialization" name="checkItemUsageSubitemSpecialization" visibility="public" constrainedElement="Systems-Items-ItemUsage">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Items-ItemUsage-checkItemUsageSubitemSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(ItemDefinition) or
 owningType.oclIsKindOf(ItemUsage)) implies
    specializesFromLibrary(&quot;Items::Item::subitem&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Items-ItemUsage-_generalization.0" general="Systems-Occurrences-OccurrenceUsage"/>
        <ownedAttribute xmi:id="Systems-Items-ItemUsage-itemDefinition" name="itemDefinition" visibility="public" type="Kernel-Structures-Structure" isOrdered="true" isDerived="true" subsettedProperty="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition" association="Systems-DefinitionAndUsage-_packagedElement.4">
          <ownedComment xmi:id="Systems-Items-ItemUsage-itemDefinition-_ownedComment.0" annotatedElement="Systems-Items-ItemUsage-itemDefinition">
            <body>&lt;p>The Structures that are the &lt;code>definitions&lt;/code> of this ItemUsage. Nominally, these are ItemDefinitions, but other kinds of Kernel Structures are also allowed, to permit use of Structures from the Kernel Library.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Items-ItemUsage-itemDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Items-ItemUsage-itemDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Items-ItemDefinition" name="ItemDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Items-ItemDefinition-_ownedComment.0" annotatedElement="Systems-Items-ItemDefinition">
          <body>&lt;p>An &lt;code>ItemDefinition&lt;/code> is an &lt;code>OccurrenceDefinition&lt;/code> of the &lt;code>Structure&lt;/code> of things that may themselves be systems or parts of systems, but may also be things that are acted on by a system or parts of a system, but which do not necessarily perform actions themselves. This includes items that can be exchanged between parts of a system, such as water or electrical signals.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Items-ItemDefinition-checkItemDefinitionSpecialization" name="checkItemDefinitionSpecialization" visibility="public" constrainedElement="Systems-Items-ItemDefinition">
          <ownedComment xmi:id="Systems-Items-ItemDefinition-checkItemDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Items-ItemDefinition-checkItemDefinitionSpecialization">
            <body>&lt;p>An &lt;code>ItemDefinition&lt;/code> must directly or indirectly specialize the Systems Library Model &lt;code>ItemDefinition&lt;/code> &lt;em>&lt;code>Items::Item&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Items-ItemDefinition-checkItemDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Items::Item&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Items-ItemDefinition-_generalization.0" general="Kernel-Structures-Structure"/>
        <generalization xmi:id="Systems-Items-ItemDefinition-_generalization.1" general="Systems-Occurrences-OccurrenceDefinition"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Views" name="Views" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-ViewpointDefinition" name="ViewpointDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Views-ViewpointDefinition-_ownedComment.0" annotatedElement="Systems-Views-ViewpointDefinition">
          <body>&lt;p>A &lt;code>ViewpointDefinition&lt;/code> is a &lt;code>RequirementDefinition&lt;/code> that specifies one or more stakeholder concerns that are to be satisfied by creating a view of a model.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-ViewpointDefinition-deriveViewpointDefinitionViewpointStakeholder" name="deriveViewpointDefinitionViewpointStakeholder" visibility="public" constrainedElement="Systems-Views-ViewpointDefinition">
          <ownedComment xmi:id="Systems-Views-ViewpointDefinition-deriveViewpointDefinitionViewpointStakeholder-_ownedComment.0" annotatedElement="Systems-Views-ViewpointDefinition-deriveViewpointDefinitionViewpointStakeholder">
            <body>&lt;p>The &lt;code>viewpointStakeholders&lt;/code> of a &lt;code>ViewpointDefinition&lt;/code> are the &lt;code>ownedStakeholderParameters&lt;/code> of all &lt;code>featureMemberships&lt;/code> that are &lt;code>StakeholderMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewpointDefinition-deriveViewpointDefinitionViewpointStakeholder-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>viewpointStakeholder = framedConcern.featureMemberhsip->
    selectByKind(StakeholderMembership).
    ownedStakeholderParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewpointDefinition-checkViewpointDefinitionSpecialization" name="checkViewpointDefinitionSpecialization" visibility="public" constrainedElement="Systems-Views-ViewpointDefinition">
          <ownedComment xmi:id="Systems-Views-ViewpointDefinition-checkViewpointDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Views-ViewpointDefinition-checkViewpointDefinitionSpecialization">
            <body>&lt;p>A &lt;code>ViewpointDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>ViewpointDefinition&lt;/code> &lt;code>&lt;em>Views::Viewpoint&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewpointDefinition-checkViewpointDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Views::Viewpoint')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-ViewpointDefinition-_generalization.0" general="Systems-Requirements-RequirementDefinition"/>
        <ownedAttribute xmi:id="Systems-Views-ViewpointDefinition-viewpointStakeholder" name="viewpointStakeholder" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" association="Systems-Views-_packagedElement.20">
          <ownedComment xmi:id="Systems-Views-ViewpointDefinition-viewpointStakeholder-_ownedComment.0" annotatedElement="Systems-Views-ViewpointDefinition-viewpointStakeholder">
            <body>&lt;p>The &lt;code>PartUsages&lt;/code> that identify the stakeholders with concerns framed by this &lt;code>ViewpointDefinition&lt;/code>, which are the owned and inherited &lt;code>stakeholderParameters&lt;/code> of the &lt;code>framedConcerns&lt;/code> of this &lt;code>ViewpointDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewpointDefinition-viewpointStakeholder-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewpointDefinition-viewpointStakeholder-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.1" name="" visibility="private" memberEnd="Systems-Views-ViewUsage-exposedElement Systems-Views-_packagedElement.1-exposingView">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.1-exposingView" name="exposingView" visibility="public" type="Systems-Views-ViewUsage" isDerived="true" subsettedProperty="Root-Namespaces-_packagedElement.5-namespace" association="Systems-Views-_packagedElement.1">
          <ownedComment xmi:id="Systems-Views-_packagedElement.1-exposingView-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.1-exposingView">
            <body>&lt;p>A ViewUsage exposing a certain &lt;code>exposedElement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.1-exposingView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.1-exposingView-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Views-RenderingUsage-renderingDefinition Systems-Views-_packagedElement.2-definedRendering">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.2-definedRendering" name="definedRendering" visibility="public" type="Systems-Views-RenderingUsage" isDerived="true" subsettedProperty="Systems-Parts-_packagedElement.2-definedPart" association="Systems-Views-_packagedElement.2">
          <ownedComment xmi:id="Systems-Views-_packagedElement.2-definedRendering-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.2-definedRendering">
            <body>&lt;p>The RenderingUsages defined by a certain &lt;code>renderingDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.2-definedRendering-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.2-definedRendering-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-ViewUsage" name="ViewUsage" visibility="public">
        <ownedComment xmi:id="Systems-Views-ViewUsage-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage">
          <body>&lt;p>A &lt;code>ViewUsage&lt;/code> is a usage of a &lt;code>ViewDefinition&lt;/code> to specify the generation of a view of the &lt;code>members&lt;/code> of a collection of &lt;code>exposedNamespaces&lt;/code>. The &lt;code>ViewUsage&lt;/code> can satisfy more &lt;code>viewpoints&lt;/code> than its definition, and it can specialize the &lt;code>viewRendering&lt;/code> specified by its definition.&lt;p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-ViewUsage-deriveViewUsageExposedElement" name="deriveViewUsageExposedElement" visibility="public" constrainedElement="Systems-Views-ViewUsage">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-deriveViewUsageExposedElement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>exposedElement = ownedImport->selectByKind(Expose).
    importedMemberships(Set{}).memberElement->
    select(elm | includeAsExposed(elm))->
    asOrderedSet()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewUsage-deriveViewUsageSatisfiedViewpoint" name="deriveViewUsageSatisfiedViewpoint" visibility="public" constrainedElement="Systems-Views-ViewUsage">
          <ownedComment xmi:id="Systems-Views-ViewUsage-deriveViewUsageSatisfiedViewpoint-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-deriveViewUsageSatisfiedViewpoint">
            <body>&lt;p>The &lt;code>satisfiedViewpoints&lt;/code> of a &lt;code>ViewDefinition&lt;/code> are its &lt;code>ownedRequirements&lt;/code> that are composite &lt;code>ViewpointUsages&lt;/code>. </body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-deriveViewUsageSatisfiedViewpoint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>satisfiedViewpoint = ownedRequirement->
    selectByKind(ViewpointUsage)->
    select(isComposite)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewUsage-deriveViewUsageViewCondition" name="deriveViewUsageViewCondition" visibility="public" constrainedElement="Systems-Views-ViewUsage">
          <ownedComment xmi:id="Systems-Views-ViewUsage-deriveViewUsageViewCondition-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-deriveViewUsageViewCondition">
            <body>&lt;p>The &lt;code>viewConditions&lt;/code> of a &lt;code>ViewDefinition&lt;/code> are the &lt;code>conditions&lt;/code> of its owned &lt;code>ElementFilterMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-deriveViewUsageViewCondition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>viewCondition = featureMembership->
    selectByKind(ElementFilterMembership).
    condition</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewUsage-deriveViewUsageViewRendering" name="deriveViewUsageViewRendering" visibility="public" constrainedElement="Systems-Views-ViewUsage">
          <ownedComment xmi:id="Systems-Views-ViewUsage-deriveViewUsageViewRendering-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-deriveViewUsageViewRendering">
            <body>&lt;p>The &lt;code>viewRendering&lt;/code> of a &lt;code>ViewDefinition&lt;/code> is the &lt;code>referencedRendering&lt;/code> of its owned &lt;code>ViewRenderingMembership&lt;code>, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-deriveViewUsageViewRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>viewRendering =
    let renderings: OrderedSet(ViewRenderingMembership) =
        featureMembership->selectByKind(ViewRenderingMembership) in
    if renderings->isEmpty() then null
    else renderings->first().referencedRendering
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewUsage-validateViewUsageOnlyOneViewRendering" name="validateViewUsageOnlyOneViewRendering" visibility="public" constrainedElement="Systems-Views-ViewUsage">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-validateViewUsageOnlyOneViewRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership->
    selectByKind(ViewRenderingMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewUsage-checkViewUsageSpecialization" name="checkViewUsageSpecialization" visibility="public" constrainedElement="Systems-Views-ViewUsage">
          <ownedComment xmi:id="Systems-Views-ViewUsage-checkViewUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-checkViewUsageSpecialization">
            <body>&lt;p>A &lt;code>ViewUsage&lt;/code> must directly or indirectly specialize the base &lt;code>ViewUsage&lt;/code> &lt;code>&lt;em>Views::views&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-checkViewUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Views::views')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewUsage-checkViewUsageSubviewSpecialization" name="checkViewUsageSubviewSpecialization" visibility="public" constrainedElement="Systems-Views-ViewUsage">
          <ownedComment xmi:id="Systems-Views-ViewUsage-checkViewUsageSubviewSpecialization-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-checkViewUsageSubviewSpecialization">
            <body>&lt;p>A &lt;code>ViewUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>ViewDefinition&lt;/code> or &lt;code>ViewUsage&lt;/code> must specialize the &lt;code>ViewUsage&lt;/code> &lt;code>&lt;em>Views::View::subviews&lt;/em>&lt;/code> from the Systems Library Model.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-checkViewUsageSubviewSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(ViewDefinition) or
 owningType.oclIsKindOf(ViewUsage)) implies
    specializesFromLibrary('Views::View::subviews')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-ViewUsage-_generalization.0" general="Systems-Parts-PartUsage"/>
        <ownedAttribute xmi:id="Systems-Views-ViewUsage-viewDefinition" name="viewDefinition" visibility="public" type="Systems-Views-ViewDefinition" isDerived="true" redefinedProperty="Systems-Parts-PartUsage-partDefinition" association="Systems-Views-_packagedElement.12">
          <ownedComment xmi:id="Systems-Views-ViewUsage-viewDefinition-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-viewDefinition">
            <body>&lt;p>The &lt;code>ViewDefinition&lt;/code> that is the &lt;code>definition&lt;/code> of this &lt;code>ViewUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewUsage-viewDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewUsage-viewDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewUsage-satisfiedViewpoint" name="satisfiedViewpoint" visibility="public" type="Systems-Views-ViewpointUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-nestedRequirement" association="Systems-Views-_packagedElement.6">
          <ownedComment xmi:id="Systems-Views-ViewUsage-satisfiedViewpoint-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-satisfiedViewpoint">
            <body>&lt;p>The &lt;code>nestedRequirements&lt;/code> of this &lt;code>ViewUsage&lt;/code> that are &lt;code>ViewpointUsages&lt;/code> for (additional) viewpoints satisfied by the &lt;code>ViewUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewUsage-satisfiedViewpoint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewUsage-satisfiedViewpoint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewUsage-exposedElement" name="exposedElement" visibility="public" type="Root-Elements-Element" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-member" association="Systems-Views-_packagedElement.1">
          <ownedComment xmi:id="Systems-Views-ViewUsage-exposedElement-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-exposedElement">
            <body>&lt;p>The &lt;cod>Elements&lt;/code> that are exposed by this &lt;code>ViewUsage&lt;/code>, which are those &lt;code>memberElements&lt;/code> of the imported &lt;code>Memberships&lt;/code> from all the &lt;code>Expose&lt;/code> &lt;code>Relationships&lt;/code> that meet all the owned and inherited &lt;code>viewConditions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewUsage-exposedElement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewUsage-exposedElement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewUsage-viewRendering" name="viewRendering" visibility="public" type="Systems-Views-RenderingUsage" isDerived="true" association="Systems-Views-_packagedElement.4">
          <ownedComment xmi:id="Systems-Views-ViewUsage-viewRendering-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-viewRendering">
            <body>&lt;p>The &lt;code>RenderingUsage&lt;/code> to be used to render views defined by this &lt;code>ViewUsage&lt;/code>, which is the &lt;code>referencedRendering&lt;/code> of the &lt;code>ViewRenderingMembership&lt;/code> of the &lt;code>ViewUsage&lt;/code>.&lt;p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewUsage-viewRendering-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewUsage-viewRendering-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewUsage-viewCondition" name="viewCondition" visibility="public" type="Kernel-Functions-Expression" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Systems-Views-_packagedElement.18">
          <ownedComment xmi:id="Systems-Views-ViewUsage-viewCondition-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-viewCondition">
            <body>&lt;p>The &lt;code>Expressions&lt;/code> related to this &lt;code>ViewUsage&lt;/code> by &lt;code>ElementFilterMemberships&lt;/code>, which specify conditions on &lt;code>Elements&lt;/code> to be rendered in a view.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewUsage-viewCondition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewUsage-viewCondition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Views-ViewUsage-includeAsExposed" name="includeAsExposed" visibility="public" bodyCondition="Systems-Views-ViewUsage-includeAsExposed-unnamed1">
          <ownedComment xmi:id="Systems-Views-ViewUsage-includeAsExposed-_ownedComment.0" annotatedElement="Systems-Views-ViewUsage-includeAsExposed">
            <body>&lt;p>Determine whether the given &lt;code>element&lt;/code> meets all the owned and inherited &lt;code>viewConditions&lt;/code>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Views-ViewUsage-includeAsExposed-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewUsage-includeAsExposed-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>let metadataFeatures: Sequence(AnnotatingElement) = 
    element.ownedAnnotation.annotatingElement->
        select(oclIsKindOf(MetadataFeature)) in
self.membership->selectByKind(ElementFilterMembership).
    condition->forAll(cond | 
        metadataFeatures->exists(elem | 
            cond.checkCondition(elem)))</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Views-ViewUsage-includeAsExposed-element" name="element" visibility="public" type="Root-Elements-Element"/>
          <ownedParameter xmi:id="Systems-Views-ViewUsage-includeAsExposed-_ownedParameter.1" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.4" name="" visibility="private" memberEnd="Systems-Views-ViewUsage-viewRendering Systems-Views-_packagedElement.4-renderingOwningView">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.4-renderingOwningView" name="renderingOwningView" visibility="public" type="Systems-Views-ViewUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningUsage" association="Systems-Views-_packagedElement.4">
          <ownedComment xmi:id="Systems-Views-_packagedElement.4-renderingOwningView-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.4-renderingOwningView">
            <body>&lt;p>The ViewUsage that owns a certain &lt;code>rendering&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.4-renderingOwningView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.4-renderingOwningView-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.5" name="" visibility="private" memberEnd="Systems-Views-ViewDefinition-viewRendering Systems-Views-_packagedElement.5-renderingOwningViewDefinition">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.5-renderingOwningViewDefinition" name="renderingOwningViewDefinition" visibility="public" type="Systems-Views-ViewDefinition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-Views-_packagedElement.5">
          <ownedComment xmi:id="Systems-Views-_packagedElement.5-renderingOwningViewDefinition-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.5-renderingOwningViewDefinition">
            <body>&lt;p>The ViewDefinition that owns a certain &lt;code>rendering&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.5-renderingOwningViewDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.5-renderingOwningViewDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.6" name="" visibility="private" memberEnd="Systems-Views-ViewUsage-satisfiedViewpoint Systems-Views-_packagedElement.6-viewpointSatisfyingView">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.6-viewpointSatisfyingView" name="viewpointSatisfyingView" visibility="public" type="Systems-Views-ViewUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.24-featuringUsage" association="Systems-Views-_packagedElement.6">
          <ownedComment xmi:id="Systems-Views-_packagedElement.6-viewpointSatisfyingView-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.6-viewpointSatisfyingView">
            <body>p>The ViewUsage that owns a certain &lt;code>satisfiedViewpoint&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.6-viewpointSatisfyingView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.6-viewpointSatisfyingView-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.7" name="" visibility="private" memberEnd="Systems-Views-ViewDefinition-satisfiedViewpoint Systems-Views-_packagedElement.7-viewpointSatisfyingViewDefinition">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.7-viewpointSatisfyingViewDefinition" name="viewpointSatisfyingViewDefinition" visibility="public" type="Systems-Views-ViewDefinition" subsettedProperty="Systems-DefinitionAndUsage-Usage-owningDefinition" association="Systems-Views-_packagedElement.7">
          <ownedComment xmi:id="Systems-Views-_packagedElement.7-viewpointSatisfyingViewDefinition-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.7-viewpointSatisfyingViewDefinition">
            <body>&lt;p>The ViewDefinition that owns a certain &lt;code>satisfiedViewpoint&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.7-viewpointSatisfyingViewDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.7-viewpointSatisfyingViewDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.8" name="" visibility="private" memberEnd="Systems-Views-ViewDefinition-view Systems-Views-_packagedElement.8-featuringView">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.8-featuringView" name="featuringView" visibility="public" type="Systems-Views-ViewDefinition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition" association="Systems-Views-_packagedElement.8">
          <ownedComment xmi:id="Systems-Views-_packagedElement.8-featuringView-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.8-featuringView">
            <body>&lt;p>The ViewDefinitions that feature a certain ViewUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.8-featuringView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.8-featuringView-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-RenderingDefinition" name="RenderingDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Views-RenderingDefinition-_ownedComment.0" annotatedElement="Systems-Views-RenderingDefinition">
          <body>&lt;p>A &lt;code>RenderingDefinition&lt;/code> is a &lt;code>PartDefinition&lt;/code> that defines a specific rendering of the content of a model view (e.g., symbols, style, layout, etc.).&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-RenderingDefinition-deriveRenderingDefinitionRendering" name="deriveRenderingDefinitionRendering" visibility="public" constrainedElement="Systems-Views-RenderingDefinition">
          <ownedComment xmi:id="Systems-Views-RenderingDefinition-deriveRenderingDefinitionRendering-_ownedComment.0" annotatedElement="Systems-Views-RenderingDefinition-deriveRenderingDefinitionRendering">
            <body>&lt;p>The &lt;code>renderings&lt;/code> of a &lt;code>RenderingDefinition&lt;/code> are all its &lt;code>usages&lt;/code> that are &lt;code>RenderingUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-RenderingDefinition-deriveRenderingDefinitionRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>rendering = usages->selectByKind(RenderingUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-RenderingDefinition-checkRenderingDefinitionSpecialization" name="checkRenderingDefinitionSpecialization" visibility="public" constrainedElement="Systems-Views-RenderingDefinition">
          <ownedComment xmi:id="Systems-Views-RenderingDefinition-checkRenderingDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Views-RenderingDefinition-checkRenderingDefinitionSpecialization">
            <body>&lt;p>A &lt;code>RenderingDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>RenderingDefinition&lt;/code> &lt;code>&lt;em>Views::Rendering&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-RenderingDefinition-checkRenderingDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Views::Rendering')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-RenderingDefinition-_generalization.0" general="Systems-Parts-PartDefinition"/>
        <ownedAttribute xmi:id="Systems-Views-RenderingDefinition-rendering" name="rendering" visibility="public" type="Systems-Views-RenderingUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-usage" association="Systems-Views-_packagedElement.16">
          <ownedComment xmi:id="Systems-Views-RenderingDefinition-rendering-_ownedComment.0" annotatedElement="Systems-Views-RenderingDefinition-rendering">
            <body>&lt;p>The &lt;code>usages&lt;/code> of a &lt;code>RenderingDefinition&lt;/code> that are &lt;code>RenderingUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-RenderingDefinition-rendering-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-RenderingDefinition-rendering-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD" name="x View and Viewpoint TBD" visibility="public" URI="">
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup" name="PresentationElementGroup" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-_generalization.0" general="Kernel-Classes-Class"/>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-displayedElements" name="displayedElements" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition" aggregation="shared" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.6">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-displayedElements-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-displayedElements-_upperValue" name="" visibility="public" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-ownedFeatureMembership" name="ownedFeatureMembership" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership" isOrdered="true" aggregation="composite" redefinedProperty="Core-Types-Type-ownedFeatureMembership" subsettedProperty="Root-Namespaces-Namespace-ownedMembership" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.15">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-ownedFeatureMembership-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-ownedFeatureMembership-_upperValue" name="" visibility="public" value="*"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod" name="ViewpointMethod" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod-_generalization.0" general="Kernel-Functions-Function"/>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod-result" name="result" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement" isDerived="true" redefinedProperty="Kernel-Functions-Function-result" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.12">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod-result-_lowerValue" name="" visibility="public" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod-result-_upperValue" name="" visibility="public" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition" name="PresentationElementDefinition" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-_generalization.0" general="Kernel-Classes-Class"/>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-representedElement" name="representedElement" visibility="public" type="Root-Elements-Element" association="Systems-Views-x20View20and20Viewpoint20TBD-Presentation">
            <lowerValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-representedElement-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-representedElement-_upperValue" name="" visibility="public" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-adornment" name="adornment" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-AdornmentDefinition" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.11">
            <lowerValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-adornment-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-adornment-_upperValue" name="" visibility="public" value="*"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.3" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-ArtifactDefinition-ownedGroups Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.3-_ownedEnd.0">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.3-_ownedEnd.0" name="" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-ArtifactDefinition" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.3"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-AdornmentDefinition" name="AdornmentDefinition" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-AdornmentDefinition-_generalization.0" general="Core-Features-Feature"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ArtifactDefinition" name="ArtifactDefinition" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ArtifactDefinition-_generalization.0" general="Kernel-Classes-Class"/>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ArtifactDefinition-ownedGroups" name="ownedGroups" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup" aggregation="composite" isDerived="true" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.3">
            <lowerValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ArtifactDefinition-ownedGroups-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ArtifactDefinition-ownedGroups-_upperValue" name="" visibility="public" value="*"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.6" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-displayedElements Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.6-_ownedEnd.0">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.6-_ownedEnd.0" name="" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.6"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership" name="PresentationElementGroupMembership" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership-memberFeature" name="memberFeature" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.8">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership-memberFeature-_lowerValue" name="" visibility="public" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership-memberFeature-_upperValue" name="" visibility="public" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.8" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.8-_ownedEnd.0 Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership-memberFeature">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.8-_ownedEnd.0" name="" visibility="private" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroupMembership" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.8"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.9" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.9-_ownedEnd.0 Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement-type">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.9-_ownedEnd.0" name="" visibility="private" type="Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.9"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.10" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.10-_ownedEnd.0 Systems-Views-x20View20and20Viewpoint20TBD-ViewRootMembership-ownedMemberFeature">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.10-_ownedEnd.0" name="" visibility="private" type="Systems-Views-x20View20and20Viewpoint20TBD-ViewRootMembership" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.10"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.11" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-adornment Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.11-_ownedEnd.0">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.11-_ownedEnd.0" name="" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.11"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.12" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod-result Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.12-generatingMethod">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.12-generatingMethod" name="generatingMethod" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod" isDerived="true" redefinedProperty="Kernel-Functions-_packagedElement.2-computingFunction" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.12">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.12-generatingMethod-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.12-generatingMethod-_upperValue" name="" visibility="public" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement" name="GeneratedElement" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement-_generalization.0" general="Core-Features-Feature"/>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement-type" name="type" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition" isDerived="true" redefinedProperty="Core-Features-Feature-type" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.9">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement-type-_lowerValue" name="" visibility="public" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-GeneratedElement-type-_upperValue" name="" visibility="public" value="*"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:AssociationClass" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-Presentation" name="Presentation" visibility="public" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition-representedElement Systems-Views-x20View20and20Viewpoint20TBD-Presentation-presentingPE">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-Presentation-presentingPE" name="presentingPE" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementDefinition" association="Systems-Views-x20View20and20Viewpoint20TBD-Presentation">
            <lowerValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-Presentation-presentingPE-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-Presentation-presentingPE-_upperValue" name="" visibility="public" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.15" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.15-_ownedEnd.0 Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup-ownedFeatureMembership">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.15-_ownedEnd.0" name="" visibility="private" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.15"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewRootMembership" name="ViewRootMembership" visibility="public">
          <generalization xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewRootMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
          <ownedAttribute xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewRootMembership-ownedMemberFeature" name="ownedMemberFeature" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup" aggregation="composite" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.10">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewRootMembership-ownedMemberFeature-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-ViewRootMembership-ownedMemberFeature-_upperValue" name="" visibility="public" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17-method Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17-_ownedEnd.0" navigableOwnedEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17-method">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17-_ownedEnd.0" name="" visibility="public" type="Systems-Views-ViewpointUsage" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17"/>
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17-method" name="method" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-ViewpointMethod" aggregation="composite" isDerived="true" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17-method-_lowerValue" name="" visibility="public" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.17-method-_upperValue" name="" visibility="public" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18" name="" visibility="private" memberEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18-viewRoot Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18-_ownedEnd.0" navigableOwnedEnd="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18-viewRoot">
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18-_ownedEnd.0" name="" visibility="public" type="Systems-Views-ViewDefinition" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18"/>
          <ownedEnd xmi:id="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18-viewRoot" name="viewRoot" visibility="public" type="Systems-Views-x20View20and20Viewpoint20TBD-PresentationElementGroup" aggregation="composite" association="Systems-Views-x20View20and20Viewpoint20TBD-_packagedElement.18"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-ViewpointUsage" name="ViewpointUsage" visibility="public">
        <ownedComment xmi:id="Systems-Views-ViewpointUsage-_ownedComment.0" annotatedElement="Systems-Views-ViewpointUsage">
          <body>&lt;p>A &lt;code>ViewpointUsage&lt;code> is a &lt;code>Usage&lt;/code> of a &lt;code>ViewpointDefinition&lt;/code>.&lt;/p>

</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-ViewpointUsage-deriveViewpointUsageViewpointStakeholder" name="deriveViewpointUsageViewpointStakeholder" visibility="public" constrainedElement="Systems-Views-ViewpointUsage">
          <ownedComment xmi:id="Systems-Views-ViewpointUsage-deriveViewpointUsageViewpointStakeholder-_ownedComment.0" annotatedElement="Systems-Views-ViewpointUsage-deriveViewpointUsageViewpointStakeholder">
            <body>&lt;p>The &lt;code>viewpointStakeholders&lt;/code> of a &lt;code>&lt;code>ViewpointUsage&lt;code>&lt;/code> are the &lt;code>ownedStakeholderParameters&lt;/code> of all &lt;code>featureMemberships&lt;/code> that are &lt;code>StakeholderMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewpointUsage-deriveViewpointUsageViewpointStakeholder-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>viewpointStakeholder = framedConcern.featureMemberhsip->
    selectByKind(StakeholderMembership).
    ownedStakeholderParameter</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewpointUsage-checkViewpointUsageSpecialization" name="checkViewpointUsageSpecialization" visibility="public" constrainedElement="Systems-Views-ViewpointUsage">
          <ownedComment xmi:id="Systems-Views-ViewpointUsage-checkViewpointUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Views-ViewpointUsage-checkViewpointUsageSpecialization">
            <body>&lt;p>A &lt;code>ViewpointUsage&lt;code> must directly or indirectly specialize the base &lt;code>ViewpointUsage&lt;code> &lt;code>&lt;em>Views::viewpoints&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewpointUsage-checkViewpointUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Views::viewpoints')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewpointUsage-checkViewpointUsageViewpointSatisfactionSpecialization" name="checkViewpointUsageViewpointSatisfactionSpecialization" visibility="public" constrainedElement="Systems-Views-ViewpointUsage">
          <ownedComment xmi:id="Systems-Views-ViewpointUsage-checkViewpointUsageViewpointSatisfactionSpecialization-_ownedComment.0" annotatedElement="Systems-Views-ViewpointUsage-checkViewpointUsageViewpointSatisfactionSpecialization">
            <body>&lt;p>A composite &lt;code>ViewpointUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>ViewDefinition&lt;/code> or &lt;code>ViewUsage&lt;/code> must directly or indirectly specialize the &lt;code>ViewpointUsage&lt;/code> &lt;code>&lt;em>Views::View::viewpointSatisfactions&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewpointUsage-checkViewpointUsageViewpointSatisfactionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(ViewDefinition) or
 owningType.oclIsKindOf(ViewUsage)) implies
    specializesFromLibrary('Views::View::viewpointSatisfactions')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-ViewpointUsage-_generalization.0" general="Systems-Requirements-RequirementUsage"/>
        <ownedAttribute xmi:id="Systems-Views-ViewpointUsage-viewpointDefinition" name="viewpointDefinition" visibility="public" type="Systems-Views-ViewpointDefinition" isDerived="true" redefinedProperty="Systems-Requirements-RequirementUsage-requirementDefinition" association="Systems-Views-_packagedElement.13">
          <ownedComment xmi:id="Systems-Views-ViewpointUsage-viewpointDefinition-_ownedComment.0" annotatedElement="Systems-Views-ViewpointUsage-viewpointDefinition">
            <body>&lt;p>The &lt;code>ViewpointDefinition&lt;/code> that is the &lt;code>definition&lt;/code> of this &lt;code>ViewpointUsage&lt;code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewpointUsage-viewpointDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewpointUsage-viewpointDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewpointUsage-viewpointStakeholder" name="viewpointStakeholder" visibility="public" type="Systems-Parts-PartUsage" isOrdered="true" isDerived="true" association="Systems-Views-_packagedElement.23">
          <ownedComment xmi:id="Systems-Views-ViewpointUsage-viewpointStakeholder-_ownedComment.0" annotatedElement="Systems-Views-ViewpointUsage-viewpointStakeholder">
            <body>&lt;p>The &lt;code>PartUsages&lt;/code> that identify the stakeholders with concerns framed by this &lt;code>ViewpointUsage&lt;/code>, which are the owned and inherited &lt;code>stakeholderParameters&lt;/code> of the &lt;code>framedConcerns&lt;/code> of this &lt;code>ViewpointUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewpointUsage-viewpointStakeholder-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewpointUsage-viewpointStakeholder-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.12" name="" visibility="private" memberEnd="Systems-Views-ViewUsage-viewDefinition Systems-Views-_packagedElement.12-definedView">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.12-definedView" name="definedView" visibility="public" type="Systems-Views-ViewUsage" isDerived="true" subsettedProperty="Systems-Parts-_packagedElement.2-definedPart" association="Systems-Views-_packagedElement.12">
          <ownedComment xmi:id="Systems-Views-_packagedElement.12-definedView-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.12-definedView">
            <body>&lt;p>The ViewUsages that have a certain &lt;code>ViewDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.12-definedView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.12-definedView-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.13" name="" visibility="private" memberEnd="Systems-Views-ViewpointUsage-viewpointDefinition Systems-Views-_packagedElement.13-definedViewpoint">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.13-definedViewpoint" name="definedViewpoint" visibility="public" type="Systems-Views-ViewpointUsage" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.5-definedRequirement" association="Systems-Views-_packagedElement.13">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.13-definedViewpoint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.13-definedViewpoint-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-ViewDefinition" name="ViewDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Views-ViewDefinition-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition">
          <body>&lt;p>A &lt;code>ViewDefinition&lt;/code> is a &lt;code>PartDefinition&lt;/code> that specifies how a view artifact is constructed to satisfy a &lt;code>viewpoint&lt;/code>. It specifies a &lt;code>viewConditions&lt;/code> to define the model content to be presented and a &lt;code>viewRendering&lt;/code> to define how the model content is presented.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionView" name="deriveViewDefinitionView" visibility="public" constrainedElement="Systems-Views-ViewDefinition">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionView-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-deriveViewDefinitionView">
            <body>&lt;p>The &lt;code>views&lt;/code> of a &lt;code>ViewDefinition&lt;/code> are all its &lt;code>usages&lt;/code> that are &lt;code>ViewUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionView-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>view = usage->selectByKind(ViewUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionSatisfiedViewpoint" name="deriveViewDefinitionSatisfiedViewpoint" visibility="public" constrainedElement="Systems-Views-ViewDefinition">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionSatisfiedViewpoint-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-deriveViewDefinitionSatisfiedViewpoint">
            <body>&lt;p>The &lt;code>satisfiedViewpoints&lt;/code> of a &lt;code>ViewDefinition&lt;/code> are its &lt;code>ownedRequirements&lt;/code> that are composite &lt;code>ViewpointUsages&lt;/code>. </body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionSatisfiedViewpoint-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>satisfiedViewpoint = ownedRequirement->
    selectByKind(ViewpointUsage)->
    select(isComposite)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionViewRendering" name="deriveViewDefinitionViewRendering" visibility="public" constrainedElement="Systems-Views-ViewDefinition">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionViewRendering-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-deriveViewDefinitionViewRendering">
            <body>&lt;p>The &lt;code>viewRendering&lt;/code> of a &lt;code>ViewDefinition&lt;/code> is the &lt;code>referencedRendering&lt;/code> of its owned &lt;code>ViewRenderingMembership&lt;code>, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionViewRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>viewRendering =
    let renderings: OrderedSet(ViewRenderingMembership) =
        featureMembership->selectByKind(ViewRenderingMembership) in
    if renderings->isEmpty() then null
    else renderings->first().referencedRendering
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionViewCondition" name="deriveViewDefinitionViewCondition" visibility="public" constrainedElement="Systems-Views-ViewDefinition">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionViewCondition-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-deriveViewDefinitionViewCondition">
            <body>&lt;p>The &lt;code>viewConditions&lt;/code> of a &lt;code>ViewDefinition&lt;/code> are the &lt;code>conditions&lt;/code> of its owned &lt;code>ElementFilterMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewDefinition-deriveViewDefinitionViewCondition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>viewCondition = featureMembership->
    selectByKind(ElementFilterMembership).
    condition</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewDefinition-validateViewDefinitionOnlyOneViewRendering" name="validateViewDefinitionOnlyOneViewRendering" visibility="public" constrainedElement="Systems-Views-ViewDefinition">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewDefinition-validateViewDefinitionOnlyOneViewRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>featureMembership->
    selectByKind(ViewRenderingMembership)->
    size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewDefinition-checkViewDefinitionSpecialization" name="checkViewDefinitionSpecialization" visibility="public" constrainedElement="Systems-Views-ViewDefinition">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-checkViewDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-checkViewDefinitionSpecialization">
            <body>&lt;/p>A &lt;code>ViewDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>ViewDefinition&lt;/code> &lt;code>&lt;em>Views::View&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewDefinition-checkViewDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Views::View')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-ViewDefinition-_generalization.0" general="Systems-Parts-PartDefinition"/>
        <ownedAttribute xmi:id="Systems-Views-ViewDefinition-view" name="view" visibility="public" type="Systems-Views-ViewUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-usage" association="Systems-Views-_packagedElement.8">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-view-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-view">
            <body>&lt;p>The &lt;code>usages&lt;/code> of this &lt;code>ViewDefinition&lt;/code> that are &lt;code>ViewUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewDefinition-view-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewDefinition-view-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewDefinition-satisfiedViewpoint" name="satisfiedViewpoint" visibility="public" type="Systems-Views-ViewpointUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-ownedRequirement" association="Systems-Views-_packagedElement.7">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-satisfiedViewpoint-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-satisfiedViewpoint">
            <body>&lt;p>The composite &lt;code>ownedRequirements&lt;/code> of this &lt;code>ViewDefinition&lt;/code> that are &lt;code>ViewpointUsages&lt;/code> for viewpoints satisfied by the &lt;code>ViewDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewDefinition-satisfiedViewpoint-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewDefinition-satisfiedViewpoint-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewDefinition-viewRendering" name="viewRendering" visibility="public" type="Systems-Views-RenderingUsage" isDerived="true" association="Systems-Views-_packagedElement.5">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-viewRendering-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-viewRendering">
            <body>&lt;p>The &lt;code>RenderingUsage&lt;/code> to be used to render views defined by this &lt;code>ViewDefinition&lt;/code>, which is the &lt;code>referencedRendering&lt;/code> of the &lt;code>ViewRenderingMembership&lt;/code> of the &lt;code>ViewDefinition&lt;/code>.&lt;p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewDefinition-viewRendering-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewDefinition-viewRendering-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewDefinition-viewCondition" name="viewCondition" visibility="public" type="Kernel-Functions-Expression" isOrdered="true" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Systems-Views-_packagedElement.19">
          <ownedComment xmi:id="Systems-Views-ViewDefinition-viewCondition-_ownedComment.0" annotatedElement="Systems-Views-ViewDefinition-viewCondition">
            <body>&lt;p>The &lt;code>Expressions&lt;/code> related to this &lt;code>ViewDefinition&lt;/code> by &lt;code>ElementFilterMemberships&lt;/code>, which specify conditions on &lt;code>Elements&lt;/code> to be rendered in a view.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewDefinition-viewCondition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewDefinition-viewCondition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-Expose" name="Expose" visibility="public" isAbstract="true">
        <ownedComment xmi:id="Systems-Views-Expose-_ownedComment.0" annotatedElement="Systems-Views-Expose">
          <body>&lt;p>An &lt;code>Expose&lt;/code> is an &lt;code>Import&lt;/code> of &lt;code>Memberships&lt;/code> into a &lt;code>ViewUsage&lt;/code> that provide the &lt;code>Elements&lt;/code> to be included in a view. Visibility is always ignored for an &lt;code>Expose&lt;/code> (i.e., &lt;code>isImportAll = true&lt;/code>).&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-Expose-validateExposeIsImportAll" name="validateExposeIsImportAll" visibility="public" constrainedElement="Systems-Views-Expose">
          <ownedComment xmi:id="Systems-Views-Expose-validateExposeIsImportAll-_ownedComment.0" annotatedElement="Systems-Views-Expose-validateExposeIsImportAll">
            <body>&lt;p>An &lt;code>Expose&lt;/code> always imports all &lt;code>Elements&lt;/code>, regardless of visibility.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-Expose-validateExposeIsImportAll-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isImportAll</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-Expose-validateExposeOwningNamespace" name="validateExposeOwningNamespace" visibility="public" constrainedElement="Systems-Views-Expose">
          <ownedComment xmi:id="Systems-Views-Expose-validateExposeOwningNamespace-_ownedComment.0" annotatedElement="Systems-Views-Expose-validateExposeOwningNamespace">
            <body>&lt;p>The &lt;code>importOwningNamespace&lt;/code> of an &lt;code>Expose&lt;/code> must be a &lt;code>ViewUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-Expose-validateExposeOwningNamespace-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>importOwningNamespace.oclIsType(ViewUsage)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-Expose-_generalization.0" general="Root-Namespaces-Import"/>
        <ownedAttribute xmi:id="Systems-Views-Expose-isImportAll" name="isImportAll" visibility="public" redefinedProperty="Root-Namespaces-Import-isImportAll">
          <ownedComment xmi:id="Systems-Views-Expose-isImportAll-_ownedComment.0" annotatedElement="Systems-Views-Expose-isImportAll">
            <body>&lt;p>An &lt;code>Expose&lt;/code> always imports all &lt;code>Elements&lt;/code>, regardless of visibility (&lt;code>isImportAll = true&lt;/code>).&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-Views-Expose-isImportAll-_defaultValue" name="" visibility="public" value="true"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.16" name="" visibility="private" memberEnd="Systems-Views-RenderingDefinition-rendering Systems-Views-_packagedElement.16-featuringRenderingDefinition">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.16-featuringRenderingDefinition" name="featuringRenderingDefinition" visibility="public" type="Systems-Views-RenderingDefinition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition" association="Systems-Views-_packagedElement.16">
          <ownedComment xmi:id="Systems-Views-_packagedElement.16-featuringRenderingDefinition-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.16-featuringRenderingDefinition">
            <body>&lt;p>The RenderingDefinitions that feature a certain &lt;code>rendering&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.16-featuringRenderingDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.16-featuringRenderingDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-RenderingUsage" name="RenderingUsage" visibility="public">
        <ownedComment xmi:id="Systems-Views-RenderingUsage-_ownedComment.0" annotatedElement="Systems-Views-RenderingUsage">
          <body>&lt;p>A &lt;code>RenderingUsage&lt;/code> is the usage of a &lt;code>RenderingDefinition&lt;/code> to specify the rendering of a specific model view to produce a physical view artifact.&lt;/p>

</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageSpecialization" name="checkRenderingUsageSpecialization" visibility="public" constrainedElement="Systems-Views-RenderingUsage">
          <ownedComment xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Views-RenderingUsage-checkRenderingUsageSpecialization">
            <body>&lt;p>A &lt;code>RenderingUsage&lt;/code> must directly or indirectly specialize the base &lt;code>RenderingUsage&lt;/code> &lt;code>&lt;em>Views::renderings&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializeFromLibrary('Views::renderings')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageSubrenderingSpecialization" name="checkRenderingUsageSubrenderingSpecialization" visibility="public" constrainedElement="Systems-Views-RenderingUsage">
          <ownedComment xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageSubrenderingSpecialization-_ownedComment.0" annotatedElement="Systems-Views-RenderingUsage-checkRenderingUsageSubrenderingSpecialization">
            <body>&lt;p>A &lt;code>RenderingUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>RenderingDefinition&lt;/code> or &lt;code>RenderingUsage&lt;/code> must directly or indirectly specialize the &lt;code>RenderingUsage&lt;/code> &lt;code>&lt;em>Views::Rendering::subrenderings&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageSubrenderingSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(RenderingDefinition) or
 owningType.oclIsKindOf(RenderingUsage)) implies
    specializesFromLibrary('Views::Rendering::subrenderings')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageRedefinition" name="checkRenderingUsageRedefinition" visibility="public" constrainedElement="Systems-Views-RenderingUsage">
          <ownedComment xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageRedefinition-_ownedComment.0" annotatedElement="Systems-Views-RenderingUsage-checkRenderingUsageRedefinition">
            <body>&lt;p>A &lt;code>RenderingUsage&lt;/code> whose &lt;code>owningFeatureMembership&lt;/code> is a &lt;code>ViewRenderingMembership&lt;/code> must redefine the &lt;code>RenderingUsage&lt;/code> &lt;code>&lt;em>Views::View::viewRendering&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-RenderingUsage-checkRenderingUsageRedefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningFeatureMembership &lt;> null and
owningFeatureMembership.oclIsKindOf(ViewRenderingMembership) implies
    redefinesFromLibrary('Views::View::viewRendering')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-RenderingUsage-_generalization.0" general="Systems-Parts-PartUsage"/>
        <ownedAttribute xmi:id="Systems-Views-RenderingUsage-renderingDefinition" name="renderingDefinition" visibility="public" type="Systems-Views-RenderingDefinition" isDerived="true" redefinedProperty="Systems-Parts-PartUsage-partDefinition" association="Systems-Views-_packagedElement.2">
          <ownedComment xmi:id="Systems-Views-RenderingUsage-renderingDefinition-_ownedComment.0" annotatedElement="Systems-Views-RenderingUsage-renderingDefinition">
            <body>&lt;p>The &lt;code>RenderingDefinition&lt;/code> that is the &lt;code>definition&lt;/code> of this &lt;code>RenderingUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-RenderingUsage-renderingDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-RenderingUsage-renderingDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.18" name="" visibility="private" memberEnd="Systems-Views-ViewUsage-viewCondition Systems-Views-_packagedElement.18-owningView">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.18-owningView" name="owningView" visibility="public" type="Systems-Views-ViewUsage" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-Views-_packagedElement.18">
          <ownedComment xmi:id="Systems-Views-_packagedElement.18-owningView-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.18-owningView">
            <body>&lt;p>The ViewUsage that owns a certain &lt;code>viewCondition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.18-owningView-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.18-owningView-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.19" name="" visibility="private" memberEnd="Systems-Views-ViewDefinition-viewCondition Systems-Views-_packagedElement.19-owningViewDefinition">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.19-owningViewDefinition" name="owningViewDefinition" visibility="public" type="Systems-Views-ViewDefinition" isDerived="true" subsettedProperty="Core-Features-Feature-owningType" association="Systems-Views-_packagedElement.19">
          <ownedComment xmi:id="Systems-Views-_packagedElement.19-owningViewDefinition-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.19-owningViewDefinition">
            <body>&lt;p>The ViewDefinition that owns a certain &lt;code>viewCondition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.19-owningViewDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.19-owningViewDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.20" name="" visibility="private" memberEnd="Systems-Views-ViewpointDefinition-viewpointStakeholder Systems-Views-_packagedElement.20-viewpointDefinitionForStakeholder">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.20-viewpointDefinitionForStakeholder" name="viewpointDefinitionForStakeholder" visibility="public" type="Systems-Views-ViewpointDefinition" isDerived="true" association="Systems-Views-_packagedElement.20">
          <ownedComment xmi:id="Systems-Views-_packagedElement.20-viewpointDefinitionForStakeholder-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.20-viewpointDefinitionForStakeholder">
            <body>&lt;p>The ViewpointDefinition that has a certain &lt;code>viewpointStakeholder&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.20-viewpointDefinitionForStakeholder-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.20-viewpointDefinitionForStakeholder-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.21" name="" visibility="private" memberEnd="Systems-Views-ViewRenderingMembership-ownedRendering Systems-Views-_packagedElement.21-viewRenderingMembership">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.21-viewRenderingMembership" name="viewRenderingMembership" visibility="public" type="Systems-Views-ViewRenderingMembership" isDerived="true" association="Systems-Views-_packagedElement.21">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.21-viewRenderingMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.21-viewRenderingMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-ViewRenderingMembership" name="ViewRenderingMembership" visibility="public">
        <ownedComment xmi:id="Systems-Views-ViewRenderingMembership-_ownedComment.0" annotatedElement="Systems-Views-ViewRenderingMembership">
          <body>&lt;p>A &lt;code>ViewRenderingMembership&lt;/code> is a &lt;coed>FeatureMembership&lt;/code> that identifies the &lt;code>viewRendering&lt;/code> of a &lt;code>ViewDefinition&lt;/code> or &lt;code>ViewUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Views-ViewRenderingMembership-deriveVewRenderingMembershipReferencedRendering" name="deriveVewRenderingMembershipReferencedRendering" visibility="public" constrainedElement="Systems-Views-ViewRenderingMembership">
          <ownedComment xmi:id="Systems-Views-ViewRenderingMembership-deriveVewRenderingMembershipReferencedRendering-_ownedComment.0" annotatedElement="Systems-Views-ViewRenderingMembership-deriveVewRenderingMembershipReferencedRendering">
            <body>&lt;p>The &lt;code>referencedRendering&lt;/code> of a &lt;code>ViewRenderingMembership&lt;/code> is the &lt;code>referencedFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code> (which must be a &lt;code>RenderingUsage&lt;/code>) of the &lt;code>ownedRendering&lt;/code>, if there is one, and, otherwise, the &lt;code>ownedRendering&lt;/code> itself.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewRenderingMembership-deriveVewRenderingMembershipReferencedRendering-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>referencedRendering =
    let reference: ReferenceSubsetting = 
        ownedRendering.ownedReferenceSubsetting in
    if reference = null then ownedRendering
    else if not reference.referencedFeature.oclIsKindOf(RenderingUsage) then null
    else reference.referencedFeature.oclAsType(RenderingUsage)
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Views-ViewRenderingMembership-validateViewRenderingMembershipOwningType" name="validateViewRenderingMembershipOwningType" visibility="public" constrainedElement="Systems-Views-ViewRenderingMembership">
          <ownedComment xmi:id="Systems-Views-ViewRenderingMembership-validateViewRenderingMembershipOwningType-_ownedComment.0" annotatedElement="Systems-Views-ViewRenderingMembership-validateViewRenderingMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>ViewRenderingMembership&lt;/code> must be a &lt;code>ViewDefinition&lt;/code> or a &lt;code>ViewUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Views-ViewRenderingMembership-validateViewRenderingMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(ViewDefinition) or
owningType.oclIsKindOf(ViewUsage)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Views-ViewRenderingMembership-_generalization.0" general="Core-Types-FeatureMembership"/>
        <ownedAttribute xmi:id="Systems-Views-ViewRenderingMembership-ownedRendering" name="ownedRendering" visibility="public" type="Systems-Views-RenderingUsage" aggregation="composite" isDerived="true" redefinedProperty="Core-Types-FeatureMembership-ownedMemberFeature" association="Systems-Views-_packagedElement.21">
          <ownedComment xmi:id="Systems-Views-ViewRenderingMembership-ownedRendering-_ownedComment.0" annotatedElement="Systems-Views-ViewRenderingMembership-ownedRendering">
            <body>&lt;p>The owned &lt;code>RenderingUsage&lt;/code> that is either itself the &lt;code>referencedRendering&lt;/code> or subsets the &lt;code>referencedRendering&lt;/code>.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewRenderingMembership-ownedRendering-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewRenderingMembership-ownedRendering-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Views-ViewRenderingMembership-referencedRendering" name="referencedRendering" visibility="public" type="Systems-Views-RenderingUsage" isDerived="true" association="Systems-Views-_packagedElement.24">
          <ownedComment xmi:id="Systems-Views-ViewRenderingMembership-referencedRendering-_ownedComment.0" annotatedElement="Systems-Views-ViewRenderingMembership-referencedRendering">
            <body>&lt;p> The &lt;code>RenderingUsage&lt;/code> that is referenced through this &lt;code>ViewRenderingMembership&lt;/code>. It is the &lt;code>referencedFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code> for the &lt;code>ownedRendering&lt;/code>, if there is one, and, otherwise, the &lt;code>ownedRendering&lt;/code> itself.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-ViewRenderingMembership-referencedRendering-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-ViewRenderingMembership-referencedRendering-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.23" name="" visibility="private" memberEnd="Systems-Views-ViewpointUsage-viewpointStakeholder Systems-Views-_packagedElement.23-viewpointForStakeholder">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.23-viewpointForStakeholder" name="viewpointForStakeholder" visibility="public" type="Systems-Views-ViewpointUsage" isDerived="true" association="Systems-Views-_packagedElement.23">
          <ownedComment xmi:id="Systems-Views-_packagedElement.23-viewpointForStakeholder-_ownedComment.0" annotatedElement="Systems-Views-_packagedElement.23-viewpointForStakeholder">
            <body>&lt;p>The ViewpointUsage that has a certain &lt;code>viewpointStakeholder&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.23-viewpointForStakeholder-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.23-viewpointForStakeholder-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Views-_packagedElement.24" name="" visibility="private" memberEnd="Systems-Views-ViewRenderingMembership-referencedRendering Systems-Views-_packagedElement.24-referencingRenderingMembership">
        <ownedEnd xmi:id="Systems-Views-_packagedElement.24-referencingRenderingMembership" name="referencingRenderingMembership" visibility="public" type="Systems-Views-ViewRenderingMembership" isDerived="true" association="Systems-Views-_packagedElement.24">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Views-_packagedElement.24-referencingRenderingMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Views-_packagedElement.24-referencingRenderingMembership-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-NamespaceExpose" name="NamespaceExpose" visibility="public">
        <ownedComment xmi:id="Systems-Views-NamespaceExpose-_ownedComment.0" annotatedElement="Systems-Views-NamespaceExpose">
          <body>&lt;p>A &lt;code>NamespaceExpose&lt;/code> is an &lt;code>Expose&lt;/code> &lt;code>Relationship&lt;/code> that exposes the &lt;code>Memberships&lt;/code> of a specific &lt;code>importedNamespace&lt;/code> and, if &lt;code>isRecursive = true&lt;/code>, additional &lt;code>Memberships&lt;/code> recursively.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Systems-Views-NamespaceExpose-_generalization.0" general="Systems-Views-Expose"/>
        <generalization xmi:id="Systems-Views-NamespaceExpose-_generalization.1" general="Root-Namespaces-NamespaceImport"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Views-MembershipExpose" name="MembershipExpose" visibility="public">
        <ownedComment xmi:id="Systems-Views-MembershipExpose-_ownedComment.0" annotatedElement="Systems-Views-MembershipExpose">
          <body>&lt;p>A &lt;code>MembershipExpose&lt;/code> is an &lt;code>Expose&lt;/code> &lt;code.Relationship&lt;/code> that exposes a specific &lt;code>importedMembership&lt;/code> and, if &lt;code>isRecursive = true&lt;/code>, additional &lt;code>Memberships&lt;/code> recursively.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Systems-Views-MembershipExpose-_generalization.0" general="Root-Namespaces-MembershipImport"/>
        <generalization xmi:id="Systems-Views-MembershipExpose-_generalization.1" general="Systems-Views-Expose"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-VerificationCases" name="VerificationCases" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-VerificationCases-VerificationCaseDefinition" name="VerificationCaseDefinition" visibility="public">
        <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseDefinition-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseDefinition">
          <body>&lt;p>A &lt;code>VerificationCaseDefinition&lt;/code> is a &lt;code>CaseDefinition&lt;/code> for the purpose of verification of the subject of the case against its requirements.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-VerificationCases-VerificationCaseDefinition-deriveVerificationCaseDefinitionVerifiedRequirement" name="deriveVerificationCaseDefinitionVerifiedRequirement" visibility="public" constrainedElement="Systems-VerificationCases-VerificationCaseDefinition">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseDefinition-deriveVerificationCaseDefinitionVerifiedRequirement-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseDefinition-deriveVerificationCaseDefinitionVerifiedRequirement">
            <body>&lt;p>The &lt;code>verifiedRequirements&lt;/code> of a &lt;code>VerificationCaseDefinition&lt;/code> are the &lt;code>verifiedRequirements&lt;/code> of its &lt;code>RequirementVerificationMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-VerificationCases-VerificationCaseDefinition-deriveVerificationCaseDefinitionVerifiedRequirement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>verifiedRequirement =
    if objectiveRequirement = null then OrderedSet{}
    else 
        objectiveRequirement.featureMembership->
            selectByKind(RequirementVerificationMembership).
            verifiedRequirement->asOrderedSet()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-VerificationCases-VerificationCaseDefinition-checkVerificationCaseSpecialization" name="checkVerificationCaseSpecialization" visibility="public" constrainedElement="Systems-VerificationCases-VerificationCaseDefinition">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseDefinition-checkVerificationCaseSpecialization-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseDefinition-checkVerificationCaseSpecialization">
            <body>&lt;p>A &lt;code>VerificationCaseDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>VerificationCaseDefinition&lt;/code> &lt;em>&lt;code>VerificationCases::VerificationCase&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-VerificationCases-VerificationCaseDefinition-checkVerificationCaseSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('VerificationCases::VerificationCase')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-VerificationCases-VerificationCaseDefinition-_generalization.0" general="Systems-Cases-CaseDefinition"/>
        <ownedAttribute xmi:id="Systems-VerificationCases-VerificationCaseDefinition-verifiedRequirement" name="verifiedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isOrdered="true" isDerived="true" association="Systems-VerificationCases-_packagedElement.6">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseDefinition-verifiedRequirement-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseDefinition-verifiedRequirement">
            <body>&lt;p>The &lt;code>RequirementUsages&lt;/code> verified by this &lt;code>VerificationCaseDefinition&lt;/code>, which are the &lt;code>verifiedRequirements&lt;/code> of all &lt;code>RequirementVerificationMemberships&lt;/code> of the &lt;code>objectiveRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-VerificationCaseDefinition-verifiedRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-VerificationCaseDefinition-verifiedRequirement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-VerificationCases-_packagedElement.1" name="" visibility="private" memberEnd="Systems-VerificationCases-VerificationCaseUsage-verificationCaseDefinition Systems-VerificationCases-_packagedElement.1-definedVerificationCase">
        <ownedEnd xmi:id="Systems-VerificationCases-_packagedElement.1-definedVerificationCase" name="definedVerificationCase" visibility="public" type="Systems-VerificationCases-VerificationCaseUsage" isDerived="true" subsettedProperty="Systems-Cases-_packagedElement.2-definedCase" association="Systems-VerificationCases-_packagedElement.1">
          <ownedComment xmi:id="Systems-VerificationCases-_packagedElement.1-definedVerificationCase-_ownedComment.0" annotatedElement="Systems-VerificationCases-_packagedElement.1-definedVerificationCase">
            <body>&lt;p>The VerificationUsages that are defined by a certain &lt;code>verificationCaseDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-_packagedElement.1-definedVerificationCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-_packagedElement.1-definedVerificationCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-VerificationCases-VerificationCaseUsage" name="VerificationCaseUsage" visibility="public">
        <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseUsage-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseUsage">
          <body>&lt;p>A &lt;code>VerificationCaseUsage&lt;/code> is a &lt;/code>Usage&lt;/code> of a &lt;code>VerificationCaseDefinition&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-VerificationCases-VerificationCaseUsage-deriveVerificationCaseUsageVerifiedRequirement" name="deriveVerificationCaseUsageVerifiedRequirement" visibility="public" constrainedElement="Systems-VerificationCases-VerificationCaseUsage">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseUsage-deriveVerificationCaseUsageVerifiedRequirement-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseUsage-deriveVerificationCaseUsageVerifiedRequirement">
            <body>&lt;p>The &lt;code>verifiedRequirements&lt;/code> of a &lt;code>VerificationCaseUsage&lt;/code> are the &lt;code>verifiedRequirements&lt;/code> of its &lt;code>RequirementVerificationMemberships&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-VerificationCases-VerificationCaseUsage-deriveVerificationCaseUsageVerifiedRequirement-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>verifiedRequirement =
    if objectiveRequirement = null then OrderedSet{}
    else 
        objectiveRequirement.featureMembership->
            selectByKind(RequirementVerificationMembership).
            verifiedRequirement->asOrderedSet()
    endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSpecialization" name="checkVerificationCaseUsageSpecialization" visibility="public" constrainedElement="Systems-VerificationCases-VerificationCaseUsage">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSpecialization-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSpecialization">
            <body>&lt;p>A &lt;code>VerificationCaseUsage&lt;/code> must subset, directly or indirectly, the base &lt;code>VerificationCaseUsage&lt;/code> &lt;code>&lt;em>VerificationCases::verificationCases&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('VerificationCases::verificationCases')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSubVerificationCaseSpecialization" name="checkVerificationCaseUsageSubVerificationCaseSpecialization" visibility="public" constrainedElement="Systems-VerificationCases-VerificationCaseUsage">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSubVerificationCaseSpecialization-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSubVerificationCaseSpecialization">
            <body> If it is composite and owned by a &lt;code>VerificationCaseDefinition&lt;/code> or &lt;code>VerificationCaseUsage&lt;/code>, then it must specialize &lt;code>VerificationCaseUsage&lt;/code> &lt;code>&lt;em>VerificationCases::VerificationCase::subVerificationCases&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-VerificationCases-VerificationCaseUsage-checkVerificationCaseUsageSubVerificationCaseSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
    (owningType.oclIsKindOf(VerificationCaseDefinition) or
     owningType.oclIsKindOf(VerificationCaseUsage))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-VerificationCases-VerificationCaseUsage-_generalization.0" general="Systems-Cases-CaseUsage"/>
        <ownedAttribute xmi:id="Systems-VerificationCases-VerificationCaseUsage-verificationCaseDefinition" name="verificationCaseDefinition" visibility="public" type="Systems-VerificationCases-VerificationCaseDefinition" isDerived="true" subsettedProperty="Systems-Cases-CaseUsage-caseDefinition" association="Systems-VerificationCases-_packagedElement.1">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseUsage-verificationCaseDefinition-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseUsage-verificationCaseDefinition">
            <body>&lt;p>The &lt;code>VerificationCase&lt;/code> that is the &lt;code>definition&lt;/code> of this &lt;code>VerificationCaseUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-VerificationCaseUsage-verificationCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-VerificationCaseUsage-verificationCaseDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-VerificationCases-VerificationCaseUsage-verifiedRequirement" name="verifiedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isOrdered="true" isDerived="true" association="Systems-VerificationCases-_packagedElement.5">
          <ownedComment xmi:id="Systems-VerificationCases-VerificationCaseUsage-verifiedRequirement-_ownedComment.0" annotatedElement="Systems-VerificationCases-VerificationCaseUsage-verifiedRequirement">
            <body>&lt;p>The &lt;code>RequirementUsages&lt;/code> verified by this &lt;code>VerificationCaseUsage&lt;/code>, which are the &lt;code>verifiedRequirements&lt;/code> of all &lt;code>RequirementVerificationMemberships&lt;/code> of the &lt;code>objectiveRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-VerificationCaseUsage-verifiedRequirement-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-VerificationCaseUsage-verifiedRequirement-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-VerificationCases-_packagedElement.3" name="" visibility="private" memberEnd="Systems-VerificationCases-RequirementVerificationMembership-ownedRequirement Systems-VerificationCases-_packagedElement.3-requirementVerificationMembership">
        <ownedEnd xmi:id="Systems-VerificationCases-_packagedElement.3-requirementVerificationMembership" name="requirementVerificationMembership" visibility="public" type="Systems-VerificationCases-RequirementVerificationMembership" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.10-requirementConstraintMembership" association="Systems-VerificationCases-_packagedElement.3">
          <ownedComment xmi:id="Systems-VerificationCases-_packagedElement.3-requirementVerificationMembership-_ownedComment.0" annotatedElement="Systems-VerificationCases-_packagedElement.3-requirementVerificationMembership">
            <body>&lt;p>The RequirementVerificationMembership that owns a certain RequirementUsage as its &lt;code>ownedRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-_packagedElement.3-requirementVerificationMembership-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-_packagedElement.3-requirementVerificationMembership-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-VerificationCases-RequirementVerificationMembership" name="RequirementVerificationMembership" visibility="public">
        <ownedComment xmi:id="Systems-VerificationCases-RequirementVerificationMembership-_ownedComment.0" annotatedElement="Systems-VerificationCases-RequirementVerificationMembership">
          <body>&lt;p>A &lt;code>RequirementVerificationMembership&lt;/code> is a &lt;code>RequirementConstraintMembership &lt;/code> used in the objective of a &lt;code>VerificationCase&lt;/code> to identify a &lt;code>RequirementUsage&lt;/code> that is verified by the &lt;code>VerificationCase&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipKind" name="validateRequirementVerificationMembershipKind" visibility="public" constrainedElement="Systems-VerificationCases-RequirementVerificationMembership">
          <ownedComment xmi:id="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipKind-_ownedComment.0" annotatedElement="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipKind">
            <body>&lt;p>A &lt;code>RequirementVerificationMembership&lt;/code> must have &lt;code>kind = requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipKind-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>kind = RequirementConstraintKind::requirement</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipOwningType" name="validateRequirementVerificationMembershipOwningType" visibility="public" constrainedElement="Systems-VerificationCases-RequirementVerificationMembership">
          <ownedComment xmi:id="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipOwningType-_ownedComment.0" annotatedElement="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipOwningType">
            <body>&lt;p>The &lt;code>owningType&lt;/code> of a &lt;code>RequirementVerificationMembership&lt;/code> must a &lt;code>RequirementUsage&lt;/code> that is owned by an &lt;code>ObjectiveMembership&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-VerificationCases-RequirementVerificationMembership-validateRequirementVerificationMembershipOwningType-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType.oclIsKindOf(RequirementUsage) and
owningType.owningFeatureMembership &lt;> null and
owningType.owningFeatureMembership.oclIsKindOf(ObjectiveMembership)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-VerificationCases-RequirementVerificationMembership-_generalization.0" general="Systems-Requirements-RequirementConstraintMembership"/>
        <ownedAttribute xmi:id="Systems-VerificationCases-RequirementVerificationMembership-ownedRequirement" name="ownedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" aggregation="composite" isDerived="true" redefinedProperty="Systems-Requirements-RequirementConstraintMembership-ownedConstraint" association="Systems-VerificationCases-_packagedElement.3">
          <ownedComment xmi:id="Systems-VerificationCases-RequirementVerificationMembership-ownedRequirement-_ownedComment.0" annotatedElement="Systems-VerificationCases-RequirementVerificationMembership-ownedRequirement">
            <body>&lt;p>The owned &lt;code>RequirementUsage&lt;/code> that acts as the &lt;code>ownedConstraint&lt;/code> for this &lt;code>RequirementVerificationMembership&lt;/code>. This will either be the &lt;code>verifiedRequirement&lt;/code>, or it will subset the &lt;code>verifiedRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-RequirementVerificationMembership-ownedRequirement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-RequirementVerificationMembership-ownedRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-VerificationCases-RequirementVerificationMembership-kind" name="kind" visibility="public" type="Systems-Requirements-RequirementConstraintKind" redefinedProperty="Systems-Requirements-RequirementConstraintMembership-kind">
          <ownedComment xmi:id="Systems-VerificationCases-RequirementVerificationMembership-kind-_ownedComment.0" annotatedElement="Systems-VerificationCases-RequirementVerificationMembership-kind">
            <body>&lt;p>The &lt;code>kind&lt;/code> of a &lt;code>RequirementVerificationMembership&lt;/code> must be &lt;code>requirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="Systems-VerificationCases-RequirementVerificationMembership-kind-_defaultValue" name="" visibility="public" instance="Systems-Requirements-RequirementConstraintKind-requirement"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-VerificationCases-RequirementVerificationMembership-verifiedRequirement" name="verifiedRequirement" visibility="public" type="Systems-Requirements-RequirementUsage" isDerived="true" redefinedProperty="Systems-Requirements-RequirementConstraintMembership-referencedConstraint" association="Systems-VerificationCases-_packagedElement.7">
          <ownedComment xmi:id="Systems-VerificationCases-RequirementVerificationMembership-verifiedRequirement-_ownedComment.0" annotatedElement="Systems-VerificationCases-RequirementVerificationMembership-verifiedRequirement">
            <body>&lt;p> The &lt;code>RequirementUsage&lt;/code> that is identified as being verified. It is the &lt;code>referencedConstraint&lt;/code> of the &lt;code>RequirementVerificationMembership&lt;/code> considered as a &lt;code>RequirementConstraintMembership&lt;/code>, which must be a &lt;code>RequirementUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-RequirementVerificationMembership-verifiedRequirement-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-RequirementVerificationMembership-verifiedRequirement-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-VerificationCases-_packagedElement.5" name="" visibility="private" memberEnd="Systems-VerificationCases-VerificationCaseUsage-verifiedRequirement Systems-VerificationCases-_packagedElement.5-verifyingCase">
        <ownedEnd xmi:id="Systems-VerificationCases-_packagedElement.5-verifyingCase" name="verifyingCase" visibility="public" type="Systems-VerificationCases-VerificationCaseUsage" isDerived="true" association="Systems-VerificationCases-_packagedElement.5">
          <ownedComment xmi:id="Systems-VerificationCases-_packagedElement.5-verifyingCase-_ownedComment.0" annotatedElement="Systems-VerificationCases-_packagedElement.5-verifyingCase">
            <body>&lt;p>The VerificationCaseUsages that verify a certain &lt;code>verifiedRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-_packagedElement.5-verifyingCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-_packagedElement.5-verifyingCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-VerificationCases-_packagedElement.6" name="" visibility="private" memberEnd="Systems-VerificationCases-VerificationCaseDefinition-verifiedRequirement Systems-VerificationCases-_packagedElement.6-verifyingCaseDefinition">
        <ownedEnd xmi:id="Systems-VerificationCases-_packagedElement.6-verifyingCaseDefinition" name="verifyingCaseDefinition" visibility="public" type="Systems-VerificationCases-VerificationCaseDefinition" association="Systems-VerificationCases-_packagedElement.6">
          <ownedComment xmi:id="Systems-VerificationCases-_packagedElement.6-verifyingCaseDefinition-_ownedComment.0" annotatedElement="Systems-VerificationCases-_packagedElement.6-verifyingCaseDefinition">
            <body>&lt;p>The VerificationCaseDefinitions that verify a certain &lt;code>verifiedRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-_packagedElement.6-verifyingCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-_packagedElement.6-verifyingCaseDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-VerificationCases-_packagedElement.7" name="" visibility="private" memberEnd="Systems-VerificationCases-RequirementVerificationMembership-verifiedRequirement Systems-VerificationCases-_packagedElement.7-requirementVerification">
        <ownedEnd xmi:id="Systems-VerificationCases-_packagedElement.7-requirementVerification" name="requirementVerification" visibility="public" type="Systems-VerificationCases-RequirementVerificationMembership" isDerived="true" subsettedProperty="Systems-Requirements-_packagedElement.22-referencingConstraintMembership" association="Systems-VerificationCases-_packagedElement.7">
          <ownedComment xmi:id="Systems-VerificationCases-_packagedElement.7-requirementVerification-_ownedComment.0" annotatedElement="Systems-VerificationCases-_packagedElement.7-requirementVerification">
            <body>&lt;p>The RequirementVerificationMembership that has a certain RequirementUsage as its &lt;code>verifiedRequirement&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-VerificationCases-_packagedElement.7-requirementVerification-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-VerificationCases-_packagedElement.7-requirementVerification-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Enumerations" name="Enumerations" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Enumerations-EnumerationDefinition" name="EnumerationDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Enumerations-EnumerationDefinition-_ownedComment.0" annotatedElement="Systems-Enumerations-EnumerationDefinition">
          <body>&lt;p>An &lt;code>EnumerationDefinition&lt;/code> is an &lt;code>AttributeDefinition&lt;/code> all of whose instances are given by an explicit list of &lt;code>enumeratedValues&lt;/code>. This is realized by requiring that the &lt;code>EnumerationDefinition&lt;/code> have &lt;code>isVariation = true&lt;/code>, with the &lt;code>enumeratedValues&lt;/code> being its &lt;code>variants&lt;/code>.&lt;/p> </body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Enumerations-EnumerationDefinition-validateEnumerationDefinitionIsVariation" name="validateEnumerationDefinitionIsVariation" visibility="public" constrainedElement="Systems-Enumerations-EnumerationDefinition">
          <ownedComment xmi:id="Systems-Enumerations-EnumerationDefinition-validateEnumerationDefinitionIsVariation-_ownedComment.0" annotatedElement="Systems-Enumerations-EnumerationDefinition-validateEnumerationDefinitionIsVariation">
            <body>&lt;p>An &lt;code>EnumerationDefinition&lt;/code> must be a variation.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Enumerations-EnumerationDefinition-validateEnumerationDefinitionIsVariation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isVariation</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Enumerations-EnumerationDefinition-_generalization.0" general="Systems-Attributes-AttributeDefinition"/>
        <ownedAttribute xmi:id="Systems-Enumerations-EnumerationDefinition-enumeratedValue" name="enumeratedValue" visibility="public" type="Systems-Enumerations-EnumerationUsage" isOrdered="true" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-Definition-variant" association="Systems-Enumerations-_packagedElement.2">
          <ownedComment xmi:id="Systems-Enumerations-EnumerationDefinition-enumeratedValue-_ownedComment.0" annotatedElement="Systems-Enumerations-EnumerationDefinition-enumeratedValue">
            <body>&lt;p>&lt;code>EnumerationUsages&lt;/code> of this &lt;code>EnumerationDefinition&lt;/code>that have distinct, fixed values. Each &lt;code>enumeratedValue&lt;/code> specifies one of the allowed instances of the &lt;code>EnumerationDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Enumerations-EnumerationDefinition-enumeratedValue-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Enumerations-EnumerationDefinition-enumeratedValue-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Enumerations-EnumerationDefinition-isVariation" name="isVariation" visibility="public" redefinedProperty="Systems-DefinitionAndUsage-Definition-isVariation">
          <ownedComment xmi:id="Systems-Enumerations-EnumerationDefinition-isVariation-_ownedComment.0" annotatedElement="Systems-Enumerations-EnumerationDefinition-isVariation">
            <body>&lt;p>An EnumerationDefinition is considered semantically to be a variation whose allowed variants are its &lt;code>enumerationValues&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-Enumerations-EnumerationDefinition-isVariation-_defaultValue" name="" visibility="public" value="true"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Enumerations-EnumerationUsage" name="EnumerationUsage" visibility="public">
        <ownedComment xmi:id="Systems-Enumerations-EnumerationUsage-_ownedComment.0" annotatedElement="Systems-Enumerations-EnumerationUsage">
          <body>&lt;p>An &lt;code>EnumerationUsage&lt;/code> is an &lt;code>AttributeUsage&lt;/code> whose &lt;code>attributeDefinition&lt;/code> is an &lt;code>EnumerationDefinition&lt;/code>.&lt;/p></body>
        </ownedComment>
        <generalization xmi:id="Systems-Enumerations-EnumerationUsage-_generalization.0" general="Systems-Attributes-AttributeUsage"/>
        <ownedAttribute xmi:id="Systems-Enumerations-EnumerationUsage-enumerationDefinition" name="enumerationDefinition" visibility="public" type="Systems-Enumerations-EnumerationDefinition" isDerived="true" redefinedProperty="Systems-Attributes-AttributeUsage-attributeDefinition" association="Systems-Enumerations-_packagedElement.3">
          <ownedComment xmi:id="Systems-Enumerations-EnumerationUsage-enumerationDefinition-_ownedComment.0" annotatedElement="Systems-Enumerations-EnumerationUsage-enumerationDefinition">
            <body>&lt;p>The single EnumerationDefinition that is the type of this EnumerationUsage.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Enumerations-EnumerationUsage-enumerationDefinition-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Enumerations-EnumerationUsage-enumerationDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Enumerations-_packagedElement.2" name="" visibility="private" memberEnd="Systems-Enumerations-EnumerationDefinition-enumeratedValue Systems-Enumerations-_packagedElement.2-owningEnumerationDefinition">
        <ownedEnd xmi:id="Systems-Enumerations-_packagedElement.2-owningEnumerationDefinition" name="owningEnumerationDefinition" visibility="public" type="Systems-Enumerations-EnumerationDefinition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.29-owningVariationDefinition" association="Systems-Enumerations-_packagedElement.2">
          <ownedComment xmi:id="Systems-Enumerations-_packagedElement.2-owningEnumerationDefinition-_ownedComment.0" annotatedElement="Systems-Enumerations-_packagedElement.2-owningEnumerationDefinition">
            <body>&lt;p>The EnumerationDefinition that owns a certain &lt;code>enumeratedValue&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Enumerations-_packagedElement.2-owningEnumerationDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Enumerations-_packagedElement.2-owningEnumerationDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Enumerations-_packagedElement.3" name="" visibility="private" memberEnd="Systems-Enumerations-EnumerationUsage-enumerationDefinition Systems-Enumerations-_packagedElement.3-definedEnumeration">
        <ownedEnd xmi:id="Systems-Enumerations-_packagedElement.3-definedEnumeration" name="definedEnumeration" visibility="public" type="Systems-Enumerations-EnumerationUsage" isDerived="true" subsettedProperty="Systems-Attributes-_packagedElement.1-definedAttribute" association="Systems-Enumerations-_packagedElement.3">
          <ownedComment xmi:id="Systems-Enumerations-_packagedElement.3-definedEnumeration-_ownedComment.0" annotatedElement="Systems-Enumerations-_packagedElement.3-definedEnumeration">
            <body>&lt;p>The EnumerationUsages that are typed by a certain EnumerationDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Enumerations-_packagedElement.3-definedEnumeration-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Enumerations-_packagedElement.3-definedEnumeration-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Allocations" name="Allocations" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Allocations-_packagedElement.0" name="" visibility="private" memberEnd="Systems-Allocations-AllocationUsage-allocationDefinition Systems-Allocations-_packagedElement.0-definedAllocation">
        <ownedEnd xmi:id="Systems-Allocations-_packagedElement.0-definedAllocation" name="definedAllocation" visibility="public" type="Systems-Allocations-AllocationUsage" isDerived="true" subsettedProperty="Systems-Connections-_packagedElement.3-definedConnection" association="Systems-Allocations-_packagedElement.0">
          <ownedComment xmi:id="Systems-Allocations-_packagedElement.0-definedAllocation-_ownedComment.0" annotatedElement="Systems-Allocations-_packagedElement.0-definedAllocation">
            <body>&lt;p>The AllocationUsages that have a certain AllocationDefinition as their &lt;code>allocationDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Allocations-_packagedElement.0-definedAllocation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Allocations-_packagedElement.0-definedAllocation-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Allocations-AllocationDefinition" name="AllocationDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Allocations-AllocationDefinition-_ownedComment.0" annotatedElement="Systems-Allocations-AllocationDefinition">
          <body>&lt;p>An &lt;code>AllocationDefinition&lt;/code> is a &lt;code>ConnectionDefinition&lt;/code> that specifies that some or all of the responsibility to realize the intent of the &lt;code>source&lt;/code> is allocated to the &lt;code>target&lt;/code> instances. Such allocations define mappings across the various structures and hierarchies of a system model, perhaps as a precursor to more rigorous specifications and implementations. An &lt;code>AllocationDefinition&lt;/code> can itself be refined using nested &lt;code>allocations&lt;/code> that give a finer-grained decomposition of the containing allocation mapping.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Allocations-AllocationDefinition-deriveAllocationDefinitionAllocation" name="deriveAllocationDefinitionAllocation" visibility="public" constrainedElement="Systems-Allocations-AllocationDefinition">
          <ownedComment xmi:id="Systems-Allocations-AllocationDefinition-deriveAllocationDefinitionAllocation-_ownedComment.0" annotatedElement="Systems-Allocations-AllocationDefinition-deriveAllocationDefinitionAllocation">
            <body>&lt;p> The &lt;code>allocations&lt;/code> of an &lt;code>AllocationDefinition&lt;/code> are all its &lt;code>usages&lt;/code> that are &lt;code>AllocationUsages&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Allocations-AllocationDefinition-deriveAllocationDefinitionAllocation-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>allocation = usage->selectAsKind(AllocationUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Allocations-AllocationDefinition-checkAllocationDefinitionSpecialization" name="checkAllocationDefinitionSpecialization" visibility="public" constrainedElement="Systems-Allocations-AllocationDefinition">
          <ownedComment xmi:id="Systems-Allocations-AllocationDefinition-checkAllocationDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Allocations-AllocationDefinition-checkAllocationDefinitionSpecialization">
            <body>&lt;p>An &lt;code>AllocationDefinition&lt;/code> must directly or indirectly specialize the &lt;code>AllocationDefinition&lt;/code> &lt;em>&lt;code>Allocations::Allocation&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Allocations-AllocationDefinition-checkAllocationDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Allocations::Allocation&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Allocations-AllocationDefinition-_generalization.0" general="Systems-Connections-ConnectionDefinition"/>
        <ownedAttribute xmi:id="Systems-Allocations-AllocationDefinition-allocation" name="allocation" visibility="public" type="Systems-Allocations-AllocationUsage" isOrdered="true" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-Definition-usage" association="Systems-Allocations-_packagedElement.3">
          <ownedComment xmi:id="Systems-Allocations-AllocationDefinition-allocation-_ownedComment.0" annotatedElement="Systems-Allocations-AllocationDefinition-allocation">
            <body>&lt;p>The &lt;code>AllocationUsages&lt;/code> that refine the allocation mapping defined by this &lt;code>AllocationDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Allocations-AllocationDefinition-allocation-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Allocations-AllocationDefinition-allocation-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Allocations-AllocationUsage" name="AllocationUsage" visibility="public">
        <ownedComment xmi:id="Systems-Allocations-AllocationUsage-_ownedComment.0" annotatedElement="Systems-Allocations-AllocationUsage">
          <body>&lt;p>An &lt;code>AllocationUsage&lt;/code> is a usage of an &lt;code>AllocationDefinition&lt;/code> asserting the allocation of the &lt;code>source&lt;/code> feature to the &lt;code>target&lt;/code> feature.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Allocations-AllocationUsage-checkAllocationUsageSpecialization" name="checkAllocationUsageSpecialization" visibility="public">
          <ownedComment xmi:id="Systems-Allocations-AllocationUsage-checkAllocationUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Allocations-AllocationUsage-checkAllocationUsageSpecialization">
            <body>&lt;p>An &lt;code>AllocationUsage&lt;/code> must directly or indirectly specialize the &lt;code>AllocationUsage&lt;/code> &lt;em>&lt;code>Allocations::allocations&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Allocations-AllocationUsage-checkAllocationUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Allocations::allocations&quot;)</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Allocations-AllocationUsage-_generalization.0" general="Systems-Connections-ConnectionUsage"/>
        <ownedAttribute xmi:id="Systems-Allocations-AllocationUsage-allocationDefinition" name="allocationDefinition" visibility="public" type="Systems-Allocations-AllocationDefinition" isOrdered="true" isDerived="true" redefinedProperty="Systems-Connections-ConnectionUsage-connectionDefinition" association="Systems-Allocations-_packagedElement.0">
          <ownedComment xmi:id="Systems-Allocations-AllocationUsage-allocationDefinition-_ownedComment.0" annotatedElement="Systems-Allocations-AllocationUsage-allocationDefinition">
            <body>&lt;p>The &lt;code>AllocationDefinitions&lt;/code> that are the types of this &lt;code>AllocationUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Allocations-AllocationUsage-allocationDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Allocations-AllocationUsage-allocationDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Allocations-_packagedElement.3" name="" visibility="private" memberEnd="Systems-Allocations-AllocationDefinition-allocation Systems-Allocations-_packagedElement.3-featuringAllocationDefinition">
        <ownedEnd xmi:id="Systems-Allocations-_packagedElement.3-featuringAllocationDefinition" name="featuringAllocationDefinition" visibility="public" type="Systems-Allocations-AllocationDefinition" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.1-featuringDefinition" association="Systems-Allocations-_packagedElement.3">
          <ownedComment xmi:id="Systems-Allocations-_packagedElement.3-featuringAllocationDefinition-_ownedComment.0" annotatedElement="Systems-Allocations-_packagedElement.3-featuringAllocationDefinition">
            <body>&lt;p>The AllocationDefinitions that feature a certain &lt;code>allocation&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Allocations-_packagedElement.3-featuringAllocationDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Allocations-_packagedElement.3-featuringAllocationDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Occurrences" name="Occurrences" visibility="public" URI="">
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Occurrences-LifeClass" name="LifeClass" visibility="public">
        <ownedComment xmi:id="Systems-Occurrences-LifeClass-_ownedComment.0" annotatedElement="Systems-Occurrences-LifeClass">
          <body>&lt;p>A &lt;coed>LifeClass&lt;/code> is a &lt;code>Class&lt;/code> that specializes both the &lt;code>Class&lt;/code> &lt;code>&lt;em>Occurrences::Life&lt;/em>&lt;/code> from the Kernel Semantic Library and a single &lt;code>OccurrenceDefinition&lt;/code>, and has a multiplicity of 0..1. This constrains the &lt;code>OccurrenceDefinition&lt;/code> being specialized to have at most one instance that is a complete &lt;code>Life&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Occurrences-LifeClass-checkLifeClassLifeSpecialization" name="checkLifeClassLifeSpecialization" visibility="public" constrainedElement="Systems-Occurrences-LifeClass">
          <ownedComment xmi:id="Systems-Occurrences-LifeClass-checkLifeClassLifeSpecialization-_ownedComment.0" annotatedElement="Systems-Occurrences-LifeClass-checkLifeClassLifeSpecialization">
            <body>&lt;p>A &lt;code>LifeClass&lt;/code> must specialize the &lt;code>Class&lt;/code> &lt;code>&lt;em>Occurrences::Life&lt;/em>&lt;/code> from the Kernel Semantic Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-LifeClass-checkLifeClassLifeSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Occurrences::Life&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-LifeClass-checkLifeClassMultiplicitySpecialization" name="checkLifeClassMultiplicitySpecialization" visibility="public" constrainedElement="Systems-Occurrences-LifeClass">
          <ownedComment xmi:id="Systems-Occurrences-LifeClass-checkLifeClassMultiplicitySpecialization-_ownedComment.0" annotatedElement="Systems-Occurrences-LifeClass-checkLifeClassMultiplicitySpecialization">
            <body>&lt;p>The &lt;code>multiplicity&lt;/code> of a &lt;code>LifeClass&lt;/code> is &lt;em>&lt;code>exactlyOne&lt;/code>&lt;/em>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-LifeClass-checkLifeClassMultiplicitySpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>multiplicity &lt;> null and
multiplicity.specializesFromLibrary(&quot;Base::zeroOrOne&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-LifeClass-checkLifeClassOccurrenceSpecialization" name="checkLifeClassOccurrenceSpecialization" visibility="public" constrainedElement="Systems-Occurrences-LifeClass">
          <ownedComment xmi:id="Systems-Occurrences-LifeClass-checkLifeClassOccurrenceSpecialization-_ownedComment.0" annotatedElement="Systems-Occurrences-LifeClass-checkLifeClassOccurrenceSpecialization">
            <body>&lt;p>A &lt;code>LifeClass&lt;/code> must specialize its &lt;code>individualDefinition&lt;/code>.&lt;/code></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-LifeClass-checkLifeClassOccurrenceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializes(individualDefinition)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-LifeClass-validateLifeClassIsSufficient" name="validateLifeClassIsSufficient" visibility="public" constrainedElement="Systems-Occurrences-LifeClass">
          <ownedComment xmi:id="Systems-Occurrences-LifeClass-validateLifeClassIsSufficient-_ownedComment.0" annotatedElement="Systems-Occurrences-LifeClass-validateLifeClassIsSufficient">
            <body>&lt;p>A &lt;code>LifeClass&lt;/code> always has &lt;code>isSufficient = true&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-LifeClass-validateLifeClassIsSufficient-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isSufficient</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Occurrences-LifeClass-_generalization.0" general="Kernel-Classes-Class"/>
        <ownedAttribute xmi:id="Systems-Occurrences-LifeClass-isSufficient" name="isSufficient" visibility="public" redefinedProperty="Core-Types-Type-isSufficient">
          <ownedComment xmi:id="Systems-Occurrences-LifeClass-isSufficient-_ownedComment.0" annotatedElement="Systems-Occurrences-LifeClass-isSufficient">
            <body>&lt;p>Always true for a &lt;code>LifeClass&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-Occurrences-LifeClass-isSufficient-_defaultValue" name="" visibility="public" value="true"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Systems-Occurrences-LifeClass-effectiveName" name="effectiveName" visibility="public" bodyCondition="Systems-Occurrences-LifeClass-effectiveName-unnamed1" redefinedOperation="Root-Elements-Element-effectiveName">
          <ownedComment xmi:id="Systems-Occurrences-LifeClass-effectiveName-_ownedComment.0" annotatedElement="Systems-Occurrences-LifeClass-effectiveName">
            <body>&lt;p>The name of a &lt;code>LifeClass&lt;/code> is &lt;em>&lt;code>Life&lt;/code>&lt;em>.&lt;/p></body>
          </ownedComment>
          <ownedRule xmi:id="Systems-Occurrences-LifeClass-effectiveName-unnamed1" name="unnamed1" visibility="public">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-LifeClass-effectiveName-unnamed1-_specification" name="" visibility="public">
              <language>OCL2.0</language>
              <body>&quot;Life&quot;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="Systems-Occurrences-LifeClass-effectiveName-_ownedParameter.0" name="" visibility="public" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-LifeClass-effectiveName-_ownedParameter.0-_lowerValue" name="" visibility="public"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-LifeClass-effectiveName-_ownedParameter.0-_upperValue" name="" visibility="public" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Occurrences-_packagedElement.1" name="" visibility="private" memberEnd="Systems-Occurrences-OccurrenceUsage-individualDefinition Systems-Occurrences-_packagedElement.1-individualUsage">
        <ownedEnd xmi:id="Systems-Occurrences-_packagedElement.1-individualUsage" name="individualUsage" visibility="public" type="Systems-Occurrences-OccurrenceUsage" isDerived="true" association="Systems-Occurrences-_packagedElement.1">
          <ownedComment xmi:id="Systems-Occurrences-_packagedElement.1-individualUsage-_ownedComment.0" annotatedElement="Systems-Occurrences-_packagedElement.1-individualUsage">
            <body>&lt;p>The &lt;code>OccurrenceUsage&lt;/code> that has a certain &lt;code>individualDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-_packagedElement.1-individualUsage-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-_packagedElement.1-individualUsage-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="Systems-Occurrences-PortionKind" name="PortionKind" visibility="public">
        <ownedComment xmi:id="Systems-Occurrences-PortionKind-_ownedComment.0" annotatedElement="Systems-Occurrences-PortionKind">
          <body>&lt;p>&lt;code>PortionKind&lt;/code> is an enumeration of the specific kinds of &lt;code>&lt;em>Occurrence&lt;/em>&lt;/code> portions that can be represented by an &lt;code>OccurrenceUsage&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedLiteral xmi:id="Systems-Occurrences-PortionKind-timeslice" name="timeslice" visibility="public">
          <ownedComment xmi:id="Systems-Occurrences-PortionKind-timeslice-_ownedComment.0" annotatedElement="Systems-Occurrences-PortionKind-timeslice">
            <body>&lt;p>A time slice of an &lt;code>Occurrence&lt;/code> (a portion over time).&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
        <ownedLiteral xmi:id="Systems-Occurrences-PortionKind-snapshot" name="snapshot" visibility="public">
          <ownedComment xmi:id="Systems-Occurrences-PortionKind-snapshot-_ownedComment.0" annotatedElement="Systems-Occurrences-PortionKind-snapshot">
            <body>&lt;p>A snapshot of an &lt;code>Occurrence&lt;/code> (a time slice with zero duration).&lt;/p></body>
          </ownedComment>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Occurrences-OccurrenceUsage" name="OccurrenceUsage" visibility="public">
        <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage">
          <body>&lt;p>An &lt;code>OccurrenceUsage&lt;/code> is a &lt;code>Usage&lt;/code> whose &lt;code>types&lt;/code> are all &lt;code>Classes&lt;/code>. Nominally, if a &lt;code>type&lt;/code> is an &lt;code>OccurrenceDefinition&lt;/code>, an &lt;code>OccurrenceUsage&lt;/code> is a &lt;code>Usage&lt;/code> of that &lt;code>OccurrenceDefinition&lt;/code> within a system. However, other types of Kernel &lt;code>Classes&lt;/code> are also allowed, to permit use of &lt;code>Classes&lt;/code> from the Kernel Model Libraries.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceUsage-deriveOccurrenceUsageIndividualDefinition" name="deriveOccurrenceUsageIndividualDefinition" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-deriveOccurrenceUsageIndividualDefinition-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-deriveOccurrenceUsageIndividualDefinition">
            <body>&lt;p>The &lt;code>individualDefinition&lt;/code> of an &lt;code>OccurrenceUsage&lt;/code> is the &lt;code>occurrenceDefinition&lt;/code> that is an &lt;code>OccurrenceDefinition&lt;/code> with &lt;code>isIndividual = true&lt;/code>, if any.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceUsage-deriveOccurrenceUsageIndividualDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>individualDefinition =
    let individualDefinitions : OrderedSet(OccurrenceDefinition) = 
        occurrenceDefinition->
            selectByKind(OccurrenceDefinition)->
            select(isIndividual) in
    if individualDefinitions->isEmpty() then null
    else individualDefinitions->first() endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualUsage" name="validateOccurrenceUsageIndividualUsage" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualUsage-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualUsage">
            <body>&lt;p>If an &lt;code>OccurrenceUsage&lt;/code> has &lt;code>isIndividual = true&lt;/code>, then it must have an &lt;code>individualDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualUsage-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isIndividual implies individualDefinition &lt;> null</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSpecialization" name="checkOccurrenceUsageSpecialization" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSpecialization">
            <body>&lt;p>An &lt;code>OccurrenceUsage&lt;/code> must directly or indirectly specialize &lt;code>&lt;em>Occurrences::occurrences&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary(&quot;Occurrences::occurrences&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSuboccurrenceSpecialization" name="checkOccurrenceUsageSuboccurrenceSpecialization" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSuboccurrenceSpecialization-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSuboccurrenceSpecialization">
            <body>&lt;p>A composite &lt;code>OccurrenceUsage&lt;code>, whose &lt;code>ownedType&lt;/code> is a &lt;code>Class&lt;/code>, another &lt;code>OccurrenceUsage&lt;/code>, or any kind of &lt;code>Feature&lt;/code> typed by a &lt;code>Class&lt;code>, must directly or indirectly specialize &lt;em>&lt;code>Occurrences::Occurrence::suboccurrences&lt;/code>&lt;/em>.</body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageSuboccurrenceSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and
owningType &lt;> null and
(owningType.oclIsKindOf(Class) or
 owningType.oclIsKindOf(OccurrenceUsage) or
 owningType.oclIsKindOf(Feature) and
    owningType.oclAsType(Feature).type->
        exists(oclIsKind(Class))) implies
    specializesFromLibrary(&quot;Occurrences::Occurrence::suboccurrences&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualDefinition" name="validateOccurrenceUsageIndividualDefinition" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualDefinition-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualDefinition">
            <body>&lt;p>An &lt;code>OccurrenceUsage&lt;/code> must have at most one &lt;code>occurrenceDefinition&lt;/code> with &lt;code>isIndividual = true&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceUsage-validateOccurrenceUsageIndividualDefinition-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>occurrenceDefinition->select(isIndividual).size() &lt;= 1</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageFeatureTyping" name="checkOccurrenceUsageFeatureTyping" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageFeatureTyping-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageFeatureTyping">
            <body>&lt;p>If the &lt;code>portionKind&lt;/code> of an &lt;code>OccurrenceUsage&lt;/code> is not empty, then, for each &lt;code>occurrenceDefinition&lt;/code> of the &lt;code>OccurrenceUsage&lt;/code>, there must be a &lt;code>featuringType&lt;/code> of the &lt;code>OccurrenceUsage&lt;/code> which either is that &lt;code>OccurrenceUsage&lt;/code> or directly or indirectly specializes it.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceUsage-checkOccurrenceUsageFeatureTyping-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>portionKind &lt;> null implies
    occurrenceDefinition->forAll(occ | 
        featuringType->exists(specializes(occ)))</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Occurrences-OccurrenceUsage-_generalization.0" general="Systems-DefinitionAndUsage-Usage"/>
        <ownedAttribute xmi:id="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition" name="occurrenceDefinition" visibility="public" type="Kernel-Classes-Class" isOrdered="true" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-Usage-definition" association="Systems-Occurrences-_packagedElement.7">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition">
            <body>&lt;p>The &lt;code>Classes&lt;/code> that are the types of this &lt;code>OccurrenceUsage&lt;/code>. Nominally, these are &lt;code>OccurrenceDefinitions&lt;/code>, but other kinds of kernel &lt;code>Classes&lt;/code> are also allowed, to permit use of &lt;code>Classes&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Occurrences-OccurrenceUsage-individualDefinition" name="individualDefinition" visibility="public" type="Systems-Occurrences-OccurrenceDefinition" isDerived="true" subsettedProperty="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition" association="Systems-Occurrences-_packagedElement.1">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-individualDefinition-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-individualDefinition">
            <body>&lt;p>The at most one &lt;code>occurrenceDefinition&lt;/code> that has &lt;code>isIndividual = true&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-OccurrenceUsage-individualDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-OccurrenceUsage-individualDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Occurrences-OccurrenceUsage-isIndividual" name="isIndividual" visibility="public">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-isIndividual-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-isIndividual">
            <body>&lt;p>Whether this &lt;code>OccurrenceUsage&lt;/code> represents the usage of the specific individual (or portion of it) represented by its &lt;code>individualDefinition&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-Occurrences-OccurrenceUsage-isIndividual-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Occurrences-OccurrenceUsage-portionKind" name="portionKind" visibility="public" type="Systems-Occurrences-PortionKind">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceUsage-portionKind-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceUsage-portionKind">
            <body>&lt;p>The kind of (temporal) portion of the life of the &lt;code>occurrenceDefinition&lt;/code> represented by this &lt;code>OccurrenceUsage&lt;/code>, if it is so restricted.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-OccurrenceUsage-portionKind-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-OccurrenceUsage-portionKind-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Occurrences-_packagedElement.4" name="" visibility="private" memberEnd="Systems-Occurrences-EventOccurrenceUsage-eventOccurrence Systems-Occurrences-_packagedElement.4-referencingOccurrence">
        <ownedEnd xmi:id="Systems-Occurrences-_packagedElement.4-referencingOccurrence" name="referencingOccurrence" visibility="public" type="Systems-Occurrences-EventOccurrenceUsage" isDerived="true" association="Systems-Occurrences-_packagedElement.4">
          <ownedComment xmi:id="Systems-Occurrences-_packagedElement.4-referencingOccurrence-_ownedComment.0" annotatedElement="Systems-Occurrences-_packagedElement.4-referencingOccurrence">
            <body>&lt;p>The EventOccurrenceUsages that reference a certain &lt;code>eventOccurrence&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-_packagedElement.4-referencingOccurrence-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-_packagedElement.4-referencingOccurrence-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Occurrences-OccurrenceDefinition" name="OccurrenceDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Occurrences-OccurrenceDefinition-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceDefinition">
          <body>&lt;p>An &lt;code>OccurrenceDefinition&lt;/code> is a &lt;code>Definition&lt;/code> of a &lt;code>Class&lt;/code> of individuals that have an independent life over time and potentially an extent over space. This includes both structural things and behaviors that act on such structures.&lt;/p>

&lt;p>If &lt;code>isIndividual&lt;/code> is true, then the &lt;code>OccurrenceDefinition&lt;/code> is constrained to represent an individual thing. The instances of such an &lt;code>OccurrenceDefinition&lt;/code> include all spatial and temporal portions of the individual being represented, but only one of these can be the complete &lt;code>Life&lt;/code> of the individual. All other instances must be portions of the &amp;quot;maximal portion&amp;quot; that is single &lt;code>Life&lt;/code> instance, capturing the conception that all of the instances represent one individual with a single &amp;quot;identity&amp;quot;.&lt;/p>

&lt;p>An &lt;code>OccurrenceDefinition&lt;/code> must specialize, directly or indirectly, the base &lt;code>Class&lt;/code> &lt;code>&lt;em>Occurrence&lt;/em>&lt;/code> from the Kernel Semantic Library.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceDefinition-validateOccurrenceDefinitionLifeClass" name="validateOccurrenceDefinitionLifeClass" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceDefinition">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceDefinition-validateOccurrenceDefinitionLifeClass-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceDefinition-validateOccurrenceDefinitionLifeClass">
            <body>&lt;p>If an &lt;code>OccurrenceDefinition&lt;code> has &lt;code>isIndividual = true&lt;/code>, then it has exactly one &lt;code>ownedMember&lt;/code> that is a &lt;code>LifeClass&lt;/code>. Otherwise it has none.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceDefinition-validateOccurrenceDefinitionLifeClass-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>let n : Integer = ownedMember->selectByKind(LifeClass) in
if isIndividual then n = 1 else n = 0 endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-OccurrenceDefinition-deriveOccurrenceDefinitionLifeClass" name="deriveOccurrenceDefinitionLifeClass" visibility="public" constrainedElement="Systems-Occurrences-OccurrenceDefinition">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceDefinition-deriveOccurrenceDefinitionLifeClass-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceDefinition-deriveOccurrenceDefinitionLifeClass">
            <body>&lt;p>The &lt;code>lifeClass&lt;/code> of an &lt;code>OccurrenceDefinition&lt;/code> is its single &lt;code>ownedMember&lt;/code> that is a &lt;code>LifeClass&lt;/code> (if any).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-OccurrenceDefinition-deriveOccurrenceDefinitionLifeClass-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>lifeClass =
    let lifeClasses: OrderedSet(LifeClass) = 
        ownedMember->selectByKind(LifeClass) in
    if lifeClasses->isEmpty() then null
    else lifeClasses->first()
    endif</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Occurrences-OccurrenceDefinition-_generalization.0" general="Systems-DefinitionAndUsage-Definition"/>
        <generalization xmi:id="Systems-Occurrences-OccurrenceDefinition-_generalization.1" general="Kernel-Classes-Class"/>
        <ownedAttribute xmi:id="Systems-Occurrences-OccurrenceDefinition-lifeClass" name="lifeClass" visibility="public" type="Systems-Occurrences-LifeClass" isDerived="true" subsettedProperty="Root-Namespaces-Namespace-ownedMember" association="Systems-Occurrences-_packagedElement.6">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceDefinition-lifeClass-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceDefinition-lifeClass">
            <body>&lt;p>If &lt;code>isIndividual&lt;/code> is true, a &lt;code>LifeClass&lt;/code> that specializes this &lt;code>OccurrenceDefinition&lt;/code>, restricting it to represent an individual.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-OccurrenceDefinition-lifeClass-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-OccurrenceDefinition-lifeClass-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Occurrences-OccurrenceDefinition-isIndividual" name="isIndividual" visibility="public">
          <ownedComment xmi:id="Systems-Occurrences-OccurrenceDefinition-isIndividual-_ownedComment.0" annotatedElement="Systems-Occurrences-OccurrenceDefinition-isIndividual">
            <body>&lt;p>Whether this OccurrenceDefinition is constrained to represent single individual.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-Occurrences-OccurrenceDefinition-isIndividual-_defaultValue" name="" visibility="public"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Occurrences-_packagedElement.6" name="" visibility="private" memberEnd="Systems-Occurrences-OccurrenceDefinition-lifeClass Systems-Occurrences-_packagedElement.6-individualDefinition">
        <ownedEnd xmi:id="Systems-Occurrences-_packagedElement.6-individualDefinition" name="individualDefinition" visibility="public" type="Systems-Occurrences-OccurrenceDefinition" isDerived="true" subsettedProperty="Root-Elements-Element-owningNamespace" association="Systems-Occurrences-_packagedElement.6">
          <ownedComment xmi:id="Systems-Occurrences-_packagedElement.6-individualDefinition-_ownedComment.0" annotatedElement="Systems-Occurrences-_packagedElement.6-individualDefinition">
            <body>&lt;p>The OccurrenceDefinition that has a certain &lt;code>lifeClass&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-_packagedElement.6-individualDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-_packagedElement.6-individualDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Occurrences-_packagedElement.7" name="" visibility="private" memberEnd="Systems-Occurrences-OccurrenceUsage-occurrenceDefinition Systems-Occurrences-_packagedElement.7-definedOccurrence">
        <ownedEnd xmi:id="Systems-Occurrences-_packagedElement.7-definedOccurrence" name="definedOccurrence" visibility="public" type="Systems-Occurrences-OccurrenceUsage" isDerived="true" subsettedProperty="Systems-DefinitionAndUsage-_packagedElement.38-definedUsage" association="Systems-Occurrences-_packagedElement.7">
          <ownedComment xmi:id="Systems-Occurrences-_packagedElement.7-definedOccurrence-_ownedComment.0" annotatedElement="Systems-Occurrences-_packagedElement.7-definedOccurrence">
            <body>&lt;p>The &lt;code>OccurrenceUsages&lt;/code> being typed by a certain &lt;code>Class&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-_packagedElement.7-definedOccurrence-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-_packagedElement.7-definedOccurrence-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Occurrences-EventOccurrenceUsage" name="EventOccurrenceUsage" visibility="public">
        <ownedComment xmi:id="Systems-Occurrences-EventOccurrenceUsage-_ownedComment.0" annotatedElement="Systems-Occurrences-EventOccurrenceUsage">
          <body>&lt;p>An &lt;code>EventOccurrenceUsage&lt;/code> is an &lt;code>OccurrenceUsage&lt;/code> that represents another &lt;code>OccurrenceUsage&lt;code> occurring as a &lt;code>&lt;em>suboccurrence&lt;em>&lt;/code> of the containing occurrence of the &lt;code>EventOccurrenceUsage&lt;/code>. Unless it is the &lt;code>EventOccurrenceUsage&lt;/code> itself, the referenced &lt;code>OccurrenceUsage&lt;/code> is related to the &lt;code>EventOccurrenceUsage&lt;code> by a &lt;code>ReferenceSubsetting&lt;/code> &lt;code>Relationship&lt;/code>.&lt;/p>

&lt;p>If the &lt;code>EventOccurrenceUsage&lt;/code> is owned by an &lt;code>OccurrenceDefinition&lt;/code> or &lt;code>OccurrenceUsage&lt;/code>, then it also subsets the &lt;em>&lt;code>timeEnclosedOccurrences&lt;/code>&lt;/em> property of the &lt;code>Class&lt;/code> &lt;em>&lt;code>Occurrence&lt;/code>&lt;/em> from the Kernel Semantic Library model &lt;em>&lt;code>Occurrences&lt;/code>&lt;/em>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Occurrences-EventOccurrenceUsage-deriveEventOccurrenceUsageEventOccurrence" name="deriveEventOccurrenceUsageEventOccurrence" visibility="public" constrainedElement="Systems-Occurrences-EventOccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-EventOccurrenceUsage-deriveEventOccurrenceUsageEventOccurrence-_ownedComment.0" annotatedElement="Systems-Occurrences-EventOccurrenceUsage-deriveEventOccurrenceUsageEventOccurrence">
            <body>&lt;p>If an &lt;code>EventOccurrenceUsage&lt;/code> has no &lt;code>ownedReferenceSubsetting&lt;/code>, then its &lt;code>eventOccurrence&lt;/code> is the &lt;code>EventOccurrenceUsage&lt;/code> itself. Otherwise, the &lt;code>eventOccurrence&lt;/code> is the &lt;code>referencedFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code> (which must be an &lt;code>OccurrenceUsage&lt;/code>).&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-EventOccurrenceUsage-deriveEventOccurrenceUsageEventOccurrence-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>eventOccurrence =
    if ownedReferenceSubsetting = null then self
    else if ownedReferenceSubsetting.referencedFeature.oclIsKindOf(OccurrenceUsage) then 
        ownedReferenceSubsetting.referencedFeature.oclAsType(OccurrenceUsage)
    else null
    endif endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageReference" name="validateEventOccurrenceUsageReference" visibility="public" constrainedElement="Systems-Occurrences-EventOccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageReference-_ownedComment.0" annotatedElement="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageReference">
            <body>&lt;p>If an &lt;code>EventOccurrenceUsage&lt;/code> has an &lt;code>ownedReferenceSubsetting&lt;/code>, then its &lt;code>referencedFeature&lt;/code> must be an &lt;code>OccurrenceUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>ownedReferenceSubsetting &lt;> null implies
    ownedReferenceSubsetting.referencedFeature.oclIsKindOf(OccurrenceUsage)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-EventOccurrenceUsage-checkEventOccurrenceUsageSpecialization" name="checkEventOccurrenceUsageSpecialization" visibility="public" constrainedElement="Systems-Occurrences-EventOccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-EventOccurrenceUsage-checkEventOccurrenceUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Occurrences-EventOccurrenceUsage-checkEventOccurrenceUsageSpecialization">
            <body>&lt;p>If an &lt;code>EventOccurrenceUsage&lt;/code> has an &lt;code>owningType&lt;/code> that is an &lt;code>OccurrenceDefinition&lt;/code> or &lt;code>OccurrenceUsage&lt;/code>, then it must directly or indirectly specialize the &lt;code>Feature&lt;/code> &lt;code>&lt;em>Occurrences::Occurrence::timeEnclosedOccurrences&lt;/em>&lt;/code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-EventOccurrenceUsage-checkEventOccurrenceUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(OccurrenceDefinition) or
 owningType.oclIsKindOf(OccurrenceUsage)) implies
    specializesFromLibrary(&quot;Occurrences::Occurrence::timeEnclosedOccurrences&quot;)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageIsReference" name="validateEventOccurrenceUsageIsReference" visibility="public" constrainedElement="Systems-Occurrences-EventOccurrenceUsage">
          <ownedComment xmi:id="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageIsReference-_ownedComment.0" annotatedElement="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageIsReference">
            <body>&lt;p>An &lt;code>EventOccurrenceUsage&lt;/code> must be referential.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Occurrences-EventOccurrenceUsage-validateEventOccurrenceUsageIsReference-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isReference</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Occurrences-EventOccurrenceUsage-_generalization.0" general="Systems-Occurrences-OccurrenceUsage"/>
        <ownedAttribute xmi:id="Systems-Occurrences-EventOccurrenceUsage-eventOccurrence" name="eventOccurrence" visibility="public" type="Systems-Occurrences-OccurrenceUsage" isDerived="true" association="Systems-Occurrences-_packagedElement.4">
          <ownedComment xmi:id="Systems-Occurrences-EventOccurrenceUsage-eventOccurrence-_ownedComment.0" annotatedElement="Systems-Occurrences-EventOccurrenceUsage-eventOccurrence">
            <body>&lt;p>The &lt;code>OccurrenceUsage&lt;/code> referenced as an event by this &lt;code>EventOccurrenceUsage&lt;/code>. It is the &lt;code>referenceFeature&lt;/code> of the &lt;code>ownedReferenceSubsetting&lt;/code> for the &lt;code>EventOccurrenceUsage&lt;/code>, if there is one, and, otherwise, the &lt;code>EventOccurrenceUsage&lt;/code> itself.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Occurrences-EventOccurrenceUsage-eventOccurrence-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Occurrences-EventOccurrenceUsage-eventOccurrence-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-Occurrences-EventOccurrenceUsage-isReference" name="isReference" visibility="public" isDerived="true" redefinedProperty="Systems-DefinitionAndUsage-Usage-isReference">
          <ownedComment xmi:id="Systems-Occurrences-EventOccurrenceUsage-isReference-_ownedComment.0" annotatedElement="Systems-Occurrences-EventOccurrenceUsage-isReference">
            <body>&lt;p>Always true for an &lt;code>EventOccurrenceUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Systems-Occurrences-EventOccurrenceUsage-isReference-_defaultValue" name="" visibility="public" value="true"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-UseCases" name="UseCases" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-UseCases-_packagedElement.0" name="" visibility="private" memberEnd="Systems-UseCases-UseCaseDefinition-includedUseCase Systems-UseCases-_packagedElement.0-includingUseCaseDefinition">
        <ownedEnd xmi:id="Systems-UseCases-_packagedElement.0-includingUseCaseDefinition" name="includingUseCaseDefinition" visibility="public" type="Systems-UseCases-UseCaseDefinition" isDerived="true" association="Systems-UseCases-_packagedElement.0">
          <ownedComment xmi:id="Systems-UseCases-_packagedElement.0-includingUseCaseDefinition-_ownedComment.0" annotatedElement="Systems-UseCases-_packagedElement.0-includingUseCaseDefinition">
            <body>&lt;p>The UseCaseDefinition that includes a certain &lt;code>includedUseCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-_packagedElement.0-includingUseCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-_packagedElement.0-includingUseCaseDefinition-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-UseCases-_packagedElement.1" name="" visibility="private" memberEnd="Systems-UseCases-UseCaseUsage-includedUseCase Systems-UseCases-_packagedElement.1-includingUseCase">
        <ownedEnd xmi:id="Systems-UseCases-_packagedElement.1-includingUseCase" name="includingUseCase" visibility="public" type="Systems-UseCases-UseCaseUsage" isDerived="true" association="Systems-UseCases-_packagedElement.1">
          <ownedComment xmi:id="Systems-UseCases-_packagedElement.1-includingUseCase-_ownedComment.0" annotatedElement="Systems-UseCases-_packagedElement.1-includingUseCase">
            <body>&lt;p>The UseCaseUsage that includes a certain &lt;code>includedUseCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-_packagedElement.1-includingUseCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-_packagedElement.1-includingUseCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-UseCases-IncludeUseCaseUsage" name="IncludeUseCaseUsage" visibility="public">
        <ownedComment xmi:id="Systems-UseCases-IncludeUseCaseUsage-_ownedComment.0" annotatedElement="Systems-UseCases-IncludeUseCaseUsage">
          <body>&lt;p>An &lt;code>IncludeUseCaseUsage&lt;/code> is a &lt;code>UseCaseUsage&lt;/code> that represents the inclusion of a &lt;code>UseCaseUsage&lt;/code> by a &lt;code>UseCaseDefinition&lt;/code> or &lt;code>UseCaseUsage&lt;/code>. Unless it is the &lt;code>IncludeUseCaseUsage&lt;/code> itself, the &lt;code>UseCaseUsage&lt;/code> to be included is related to the &lt;code>includedUseCase&lt;/code> by a &lt;code>ReferenceSubsetting&lt;/code> &lt;code>Relationship&lt;/code>. An &lt;code>IncludeUseCaseUsage&lt;/code> is also a PerformActionUsage, with its &lt;code>useCaseIncluded&lt;/code> as the &lt;code>performedAction&lt;/code>.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-UseCases-IncludeUseCaseUsage-checkIncludeUseCaseSpecialization" name="checkIncludeUseCaseSpecialization" visibility="public" constrainedElement="Systems-UseCases-IncludeUseCaseUsage">
          <ownedComment xmi:id="Systems-UseCases-IncludeUseCaseUsage-checkIncludeUseCaseSpecialization-_ownedComment.0" annotatedElement="Systems-UseCases-IncludeUseCaseUsage-checkIncludeUseCaseSpecialization">
            <body>&lt;p>A &lt;code>IncludeUseCaseUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>UseCaseDefinition&lt;/code> or &lt;code>UseCaseUsage&lt;/code> must directly or indirectly specialize the &lt;code>UseCaseUsage&lt;/code> &lt;em>&lt;code>UseCases::UseCase::includedUseCases&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-UseCases-IncludeUseCaseUsage-checkIncludeUseCaseSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>owningType &lt;> null and
(owningType.oclIsKindOf(UseCaseDefinition) or
 owningType.oclIsKindOf(UseCaseUsage) implies
    specializesFromLibrary('UseCases::UseCase::includedUseCases')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-UseCases-IncludeUseCaseUsage-_generalization.0" general="Systems-UseCases-UseCaseUsage"/>
        <generalization xmi:id="Systems-UseCases-IncludeUseCaseUsage-_generalization.1" general="Systems-Actions-PerformActionUsage"/>
        <ownedAttribute xmi:id="Systems-UseCases-IncludeUseCaseUsage-useCaseIncluded" name="useCaseIncluded" visibility="public" type="Systems-UseCases-UseCaseUsage" isDerived="true" redefinedProperty="Systems-Actions-PerformActionUsage-performedAction" association="Systems-UseCases-_packagedElement.3">
          <ownedComment xmi:id="Systems-UseCases-IncludeUseCaseUsage-useCaseIncluded-_ownedComment.0" annotatedElement="Systems-UseCases-IncludeUseCaseUsage-useCaseIncluded">
            <body>&lt;p>The &lt;code>UseCaseUsage&lt;/code> to be included by this &lt;code>IncludeUseCaseUsage&lt;/code>. It is the &lt;code>performedAction&lt;/code> of the &lt;code>IncludeUseCaseUsage&lt;/code> considered as a &lt;code>PerformActionUsage&lt;/code>, which must be a &lt;code>UseCaseUsage&lt;/code>.&lt;/p> 
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-IncludeUseCaseUsage-useCaseIncluded-_lowerValue" name="" visibility="public" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-IncludeUseCaseUsage-useCaseIncluded-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-UseCases-_packagedElement.3" name="" visibility="private" memberEnd="Systems-UseCases-IncludeUseCaseUsage-useCaseIncluded Systems-UseCases-_packagedElement.3-useCaseInclusion">
        <ownedEnd xmi:id="Systems-UseCases-_packagedElement.3-useCaseInclusion" name="useCaseInclusion" visibility="public" type="Systems-UseCases-IncludeUseCaseUsage" isDerived="true" subsettedProperty="Systems-Actions-_packagedElement.0-performingAction" association="Systems-UseCases-_packagedElement.3">
          <ownedComment xmi:id="Systems-UseCases-_packagedElement.3-useCaseInclusion-_ownedComment.0" annotatedElement="Systems-UseCases-_packagedElement.3-useCaseInclusion">
            <body>&lt;p>The IncludeUseCaseUsages that have a certain UseCaseUsage as their &lt;code>includedUseCase&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-_packagedElement.3-useCaseInclusion-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-_packagedElement.3-useCaseInclusion-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-UseCases-_packagedElement.4" name="" visibility="private" memberEnd="Systems-UseCases-UseCaseUsage-useCaseDefinition Systems-UseCases-_packagedElement.4-definedUseCase">
        <ownedEnd xmi:id="Systems-UseCases-_packagedElement.4-definedUseCase" name="definedUseCase" visibility="public" type="Systems-UseCases-UseCaseUsage" isDerived="true" subsettedProperty="Systems-Cases-_packagedElement.2-definedCase" association="Systems-UseCases-_packagedElement.4">
          <ownedComment xmi:id="Systems-UseCases-_packagedElement.4-definedUseCase-_ownedComment.0" annotatedElement="Systems-UseCases-_packagedElement.4-definedUseCase">
            <body>&lt;p>The UseCaseUsages being typed by a certain UseCaseDefinition.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-_packagedElement.4-definedUseCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-_packagedElement.4-definedUseCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-UseCases-UseCaseUsage" name="UseCaseUsage" visibility="public">
        <ownedComment xmi:id="Systems-UseCases-UseCaseUsage-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseUsage">
          <body>&lt;p>A &lt;code>UseCaseUsage&lt;/code> is a &lt;code>Usage&lt;/code> of a &lt;code>UseCaseDefinition&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-UseCases-UseCaseUsage-deriveUseCaseUsageIncludedUseCase" name="deriveUseCaseUsageIncludedUseCase" visibility="public" constrainedElement="Systems-UseCases-UseCaseUsage">
          <ownedComment xmi:id="Systems-UseCases-UseCaseUsage-deriveUseCaseUsageIncludedUseCase-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseUsage-deriveUseCaseUsageIncludedUseCase">
            <body>&lt;p>The &lt;code>includedUseCases&lt;code> of a &lt;code>UseCaseUsage&lt;/code> are the &lt;code>useCaseIncludeds&lt;/code> of the &lt;code>IncludeUseCaseUsages&lt;/code> owned by the &lt;code>UseCaseUsage&lt;code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-UseCases-UseCaseUsage-deriveUseCaseUsageIncludedUseCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>includedUseCase = ownedUseCase->
    selectByKind(IncludeUseCaseUsage).
    useCaseIncluded</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSpecialization" name="checkUseCaseUsageSpecialization" visibility="public" constrainedElement="Systems-UseCases-UseCaseUsage">
          <ownedComment xmi:id="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSpecialization-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSpecialization">
            <body>&lt;p>A &lt;code>UseCaseUsage&lt;/code> must directly or indirectly specializes the base &lt;code>UseCaseUsage&lt;/code> &lt;em>&lt;code>UseCases::useCases&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('UseCases::useCases')</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSubUseCaseSpecialization" name="checkUseCaseUsageSubUseCaseSpecialization" visibility="public" constrainedElement="Systems-UseCases-UseCaseUsage">
          <ownedComment xmi:id="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSubUseCaseSpecialization-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSubUseCaseSpecialization">
            <body>&lt;p>A composite &lt;code>UseCaseUsage&lt;/code> whose &lt;code>owningType&lt;/code> is a &lt;code>UseCaseDefinition&lt;/code> or &lt;code>UseCaseUsage&lt;/code> must specialize the &lt;code>UseCaseUsage&lt;/code> &lt;em>&lt;code>UseCases::UseCase::subUseCases&lt;/code>&lt;/em> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-UseCases-UseCaseUsage-checkUseCaseUsageSubUseCaseSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>isComposite and owningType &lt;> null and
(owningType.oclIsKindOf(UseCaseDefinition) or
 owningType.oclIsKindOf(UseCaseUsage)) implies
    specializesFromLibrary('UseCases::UseCase::subUseCases')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-UseCases-UseCaseUsage-_generalization.0" general="Systems-Cases-CaseUsage"/>
        <ownedAttribute xmi:id="Systems-UseCases-UseCaseUsage-useCaseDefinition" name="useCaseDefinition" visibility="public" type="Systems-UseCases-UseCaseDefinition" isDerived="true" redefinedProperty="Systems-Cases-CaseUsage-caseDefinition" association="Systems-UseCases-_packagedElement.4">
          <ownedComment xmi:id="Systems-UseCases-UseCaseUsage-useCaseDefinition-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseUsage-useCaseDefinition">
            <body>&lt;p>The &lt;code>UseCaseDefinition&lt;/code> that is the &lt;code>definition&lt;/code> of this &lt;code>UseCaseUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-UseCaseUsage-useCaseDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-UseCaseUsage-useCaseDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Systems-UseCases-UseCaseUsage-includedUseCase" name="includedUseCase" visibility="public" type="Systems-UseCases-UseCaseUsage" isOrdered="true" isDerived="true" association="Systems-UseCases-_packagedElement.1">
          <ownedComment xmi:id="Systems-UseCases-UseCaseUsage-includedUseCase-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseUsage-includedUseCase">
            <body>&lt;p>The &lt;code>UseCaseUsages&lt;/code> that are included by this &lt;code>UseCaseUse&lt;/code>, which are the &lt;code>useCaseIncludeds&lt;/code> of the &lt;code>IncludeUseCaseUsages&lt;/code> owned by this &lt;code>UseCaseUsage&lt;code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-UseCaseUsage-includedUseCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-UseCaseUsage-includedUseCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-UseCases-UseCaseDefinition" name="UseCaseDefinition" visibility="public">
        <ownedComment xmi:id="Systems-UseCases-UseCaseDefinition-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseDefinition">
          <body>&lt;p>A &lt;code>UseCaseDefinition&lt;/code> is a &lt;code>CaseDefinition&lt;/code> that specifies a set of actions performed by its subject, in interaction with one or more actors external to the subject. The objective is to yield an observable result that is of value to one or more of the actors.&lt;/p>
</body>
        </ownedComment>
        <ownedRule xmi:id="Systems-UseCases-UseCaseDefinition-deriveUseCaseDefinitionIncludedUseCase" name="deriveUseCaseDefinitionIncludedUseCase" visibility="public" constrainedElement="Systems-UseCases-UseCaseDefinition">
          <ownedComment xmi:id="Systems-UseCases-UseCaseDefinition-deriveUseCaseDefinitionIncludedUseCase-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseDefinition-deriveUseCaseDefinitionIncludedUseCase">
            <body>&lt;p>The &lt;code>includedUseCases&lt;code> of a &lt;code>UseCaseDefinition&lt;/code> are the &lt;code>useCaseIncludeds&lt;/code> of the &lt;code>IncludeUseCaseUsages&lt;/code> owned by the &lt;code>UseCaseDefinition&lt;code>.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-UseCases-UseCaseDefinition-deriveUseCaseDefinitionIncludedUseCase-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>includedUseCase = ownedUseCase->
    selectByKind(IncludeUseCaseUsage).
    useCaseIncluded</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="Systems-UseCases-UseCaseDefinition-checkUseCaseDefinitionSpecialization" name="checkUseCaseDefinitionSpecialization" visibility="public" constrainedElement="Systems-UseCases-UseCaseDefinition">
          <ownedComment xmi:id="Systems-UseCases-UseCaseDefinition-checkUseCaseDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseDefinition-checkUseCaseDefinitionSpecialization">
            <body>&lt;p>A &lt;code>UseCaseDefinition&lt;/code> must directly or indirectly specializes the base &lt;code>UseCaseDefinition&lt;/code> &lt;code>&lt;em>UseCases::UseCase&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <ownedComment xmi:id="Systems-UseCases-UseCaseDefinition-checkUseCaseDefinitionSpecialization-_ownedComment.1" annotatedElement="Systems-UseCases-UseCaseDefinition-checkUseCaseDefinitionSpecialization">
            <body></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-UseCases-UseCaseDefinition-checkUseCaseDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('UseCases::UseCase')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-UseCases-UseCaseDefinition-_generalization.0" general="Systems-Cases-CaseDefinition"/>
        <ownedAttribute xmi:id="Systems-UseCases-UseCaseDefinition-includedUseCase" name="includedUseCase" visibility="public" type="Systems-UseCases-UseCaseUsage" isOrdered="true" isDerived="true" association="Systems-UseCases-_packagedElement.0">
          <ownedComment xmi:id="Systems-UseCases-UseCaseDefinition-includedUseCase-_ownedComment.0" annotatedElement="Systems-UseCases-UseCaseDefinition-includedUseCase">
            <body>&lt;p>The &lt;code>UseCaseUsages&lt;/code> that are included by this &lt;code>UseCaseDefinition&lt;/code>, which are the &lt;code>useCaseIncludeds&lt;/code> of the &lt;code>IncludeUseCaseUsages&lt;/code> owned by this &lt;code>UseCaseDefinition&lt;code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-UseCases-UseCaseDefinition-includedUseCase-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-UseCases-UseCaseDefinition-includedUseCase-_upperValue" name="" visibility="public" value="*"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Systems-Metadata" name="Metadata" visibility="public" URI="">
      <packagedElement xmi:type="uml:Association" xmi:id="Systems-Metadata-_packagedElement.0" name="" visibility="private" memberEnd="Systems-Metadata-MetadataUsage-metadataDefinition Systems-Metadata-_packagedElement.0-definedMetadata">
        <ownedEnd xmi:id="Systems-Metadata-_packagedElement.0-definedMetadata" name="definedMetadata" visibility="public" type="Systems-Metadata-MetadataUsage" isDerived="true" subsettedProperty="Kernel-Metadata-_packagedElement.0-typedMetadata Systems-DefinitionAndUsage-_packagedElement.4-definedItem" association="Systems-Metadata-_packagedElement.0">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Metadata-_packagedElement.0-definedMetadata-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Metadata-_packagedElement.0-definedMetadata-_upperValue" name="" visibility="public" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Metadata-MetadataDefinition" name="MetadataDefinition" visibility="public">
        <ownedComment xmi:id="Systems-Metadata-MetadataDefinition-_ownedComment.0" annotatedElement="Systems-Metadata-MetadataDefinition">
          <body>&lt;p>A &lt;code>MetadataDefinition&lt;/code> is an &lt;code>ItemDefinition&lt;/code> that is also a &lt;code>Metaclass&lt;/code>.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Metadata-MetadataDefinition-checkMetadataDefinitionSpecialization" name="checkMetadataDefinitionSpecialization" visibility="public" constrainedElement="Systems-Metadata-MetadataDefinition">
          <ownedComment xmi:id="Systems-Metadata-MetadataDefinition-checkMetadataDefinitionSpecialization-_ownedComment.0" annotatedElement="Systems-Metadata-MetadataDefinition-checkMetadataDefinitionSpecialization">
            <body>&lt;p>A &lt;code>MetadataDefinition&lt;/code> must directly or indirectly specialize the base &lt;code>MetadataDefinition&lt;/code> &lt;code>&lt;em>Metadata::MetadataItem&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Metadata-MetadataDefinition-checkMetadataDefinitionSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Metadata::MetadataItem')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Metadata-MetadataDefinition-_generalization.0" general="Systems-Items-ItemDefinition"/>
        <generalization xmi:id="Systems-Metadata-MetadataDefinition-_generalization.1" general="Kernel-Metadata-Metaclass"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Systems-Metadata-MetadataUsage" name="MetadataUsage" visibility="public">
        <ownedComment xmi:id="Systems-Metadata-MetadataUsage-_ownedComment.0" annotatedElement="Systems-Metadata-MetadataUsage">
          <body>&lt;p>A  &lt;code>MetadataUsage&lt;/code> is a &lt;code>Usage&lt;/code> and a &lt;code>MetadataFeature&lt;/code>, used to annotate other &lt;code>Elements&lt;/code> in a system model with metadata. As a &lt;code>MetadataFeature&lt;/code>, its type must be a &lt;code>Metaclass&lt;/code>, which will nominally be a &lt;code>MetadataDefinition&lt;/code>. However, any kernel &lt;code>Metaclass&lt;/code> is also allowed, to permit use of &lt;code>Metaclasses&lt;/code> from the Kernel Model Libraries.&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="Systems-Metadata-MetadataUsage-checkMetadataUsageSpecialization" name="checkMetadataUsageSpecialization" visibility="public" constrainedElement="Systems-Metadata-MetadataUsage">
          <ownedComment xmi:id="Systems-Metadata-MetadataUsage-checkMetadataUsageSpecialization-_ownedComment.0" annotatedElement="Systems-Metadata-MetadataUsage-checkMetadataUsageSpecialization">
            <body>&lt;p>A &lt;code>MetadataUsage&lt;/code> must directly or indirectly specialize the base &lt;code>MetadataUsage&lt;/code> &lt;code>&lt;em>Metadata::metadataItems&lt;/em>&lt;/code> from the Systems Model Library.&lt;/p></body>
          </ownedComment>
          <specification xmi:type="uml:OpaqueExpression" xmi:id="Systems-Metadata-MetadataUsage-checkMetadataUsageSpecialization-_specification" name="" visibility="public">
            <language>OCL2.0</language>
            <body>specializesFromLibrary('Metadata::metadataItems')</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="Systems-Metadata-MetadataUsage-_generalization.0" general="Systems-Items-ItemUsage"/>
        <generalization xmi:id="Systems-Metadata-MetadataUsage-_generalization.1" general="Kernel-Metadata-MetadataFeature"/>
        <ownedAttribute xmi:id="Systems-Metadata-MetadataUsage-metadataDefinition" name="metadataDefinition" visibility="public" type="Kernel-Metadata-Metaclass" isDerived="true" redefinedProperty="Systems-Items-ItemUsage-itemDefinition Kernel-Metadata-MetadataFeature-metaclass" association="Systems-Metadata-_packagedElement.0">
          <ownedComment xmi:id="Systems-Metadata-MetadataUsage-metadataDefinition-_ownedComment.0" annotatedElement="Systems-Metadata-MetadataUsage-metadataDefinition">
            <body>&lt;p>The &lt;code>MetadataDefinition&lt;/code> that is the &lt;code>definition&lt;/code> of this &lt;code>MetadataUsage&lt;/code>.&lt;/p></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Systems-Metadata-MetadataUsage-metadataDefinition-_lowerValue" name="" visibility="public"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Systems-Metadata-MetadataUsage-metadataDefinition-_upperValue" name="" visibility="public" value="1"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
  </packagedElement>
</uml:Model>
