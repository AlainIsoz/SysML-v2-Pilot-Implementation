/*
 * generated by Xtext 2.22.0
 */
grammar InternalKerML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.omg.kerml.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.omg.kerml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.kerml.xtext.services.KerMLGrammarAccess;

}

@parser::members {

 	private KerMLGrammarAccess grammarAccess;

    public InternalKerMLParser(TokenStream input, KerMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RootNamespace";
   	}

   	@Override
   	protected KerMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRootNamespace
entryRuleRootNamespace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootNamespaceRule()); }
	iv_ruleRootNamespace=ruleRootNamespace
	{ $current=$iv_ruleRootNamespace.current; }
	EOF;

// Rule RootNamespace
ruleRootNamespace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRootNamespaceAccess().getNamespaceAction_0(),
					$current);
			}
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRootNamespaceRule());
				}
				newCompositeNode(grammarAccess.getRootNamespaceAccess().getNamespaceBodyElementParserRuleCall_1());
			}
			this_NamespaceBodyElement_1=ruleNamespaceBodyElement[$current]
			{
				$current = $this_NamespaceBodyElement_1.current;
				afterParserOrEnumRuleCall();
			}
		)*
	)
;


// Rule Identification
ruleIdentification[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='id'
			{
				newLeafNode(otherlv_0, grammarAccess.getIdentificationAccess().getIdKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentificationAccess().getHumanIdNameParserRuleCall_0_1_0());
					}
					lv_humanId_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentificationRule());
						}
						set(
							$current,
							"humanId",
							lv_humanId_1_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_0_2_0());
					}
					lv_name_2_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentificationRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_3_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentificationRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='element'
		{
			newLeafNode(otherlv_0, grammarAccess.getElementAccess().getElementKeyword_0());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getElementRule());
				}
				newCompositeNode(grammarAccess.getElementAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getElementRule());
			}
			newCompositeNode(grammarAccess.getElementAccess().getElementBodyParserRuleCall_2());
		}
		this_ElementBody_2=ruleElementBody[$current]
		{
			$current = $this_ElementBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ElementBody
ruleElementBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getElementBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getElementBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementBodyRule());
					}
					newCompositeNode(grammarAccess.getElementBodyAccess().getOwnedElementParserRuleCall_1_1());
				}
				this_OwnedElement_2=ruleOwnedElement[$current]
				{
					$current = $this_OwnedElement_2.current;
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getElementBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;


// Rule OwnedElement
ruleOwnedElement[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedRelationship_compOwnedRelationshipParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=ruleOwnedRelationship
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedElementRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.OwnedRelationship");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedElementAccess().getDocumentation_compOwnedDocumentationParserRuleCall_1_0());
				}
				lv_documentation_comp_1_0=ruleOwnedDocumentation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedElementRule());
					}
					add(
						$current,
						"documentation_comp",
						lv_documentation_comp_1_0,
						"org.omg.kerml.xtext.KerML.OwnedDocumentation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedAnnotation_compOwnedTextualRepresentationAnnotationParserRuleCall_2_0());
				}
				lv_ownedAnnotation_comp_2_0=ruleOwnedTextualRepresentationAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedElementRule());
					}
					add(
						$current,
						"ownedAnnotation_comp",
						lv_ownedAnnotation_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedTextualRepresentationAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedAnnotation_compOwnedAnnotatingFeatureAnnotationParserRuleCall_3_0());
				}
				lv_ownedAnnotation_comp_3_0=ruleOwnedAnnotatingFeatureAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedElementRule());
					}
					add(
						$current,
						"ownedAnnotation_comp",
						lv_ownedAnnotation_comp_3_0,
						"org.omg.kerml.xtext.KerML.OwnedAnnotatingFeatureAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	iv_ruleRelationship=ruleRelationship
	{ $current=$iv_ruleRelationship.current; }
	EOF;

// Rule Relationship
ruleRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='relationship'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationshipAccess().getRelationshipKeyword_0());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipRule());
				}
				newCompositeNode(grammarAccess.getRelationshipAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getRelationshipRule());
			}
			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipRelatedElementsParserRuleCall_2());
		}
		this_RelationshipRelatedElements_2=ruleRelationshipRelatedElements[$current]
		{
			$current = $this_RelationshipRelatedElements_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getRelationshipRule());
			}
			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipBodyParserRuleCall_3());
		}
		this_RelationshipBody_3=ruleRelationshipBody[$current]
		{
			$current = $this_RelationshipBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOwnedRelationship
entryRuleOwnedRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedRelationshipRule()); }
	iv_ruleOwnedRelationship=ruleOwnedRelationship
	{ $current=$iv_ruleOwnedRelationship.current; }
	EOF;

// Rule OwnedRelationship
ruleOwnedRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='relationship'
		{
			newLeafNode(otherlv_0, grammarAccess.getOwnedRelationshipAccess().getRelationshipKeyword_0());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedRelationshipRule());
				}
				newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getOwnedRelationshipAccess().getToKeyword_2());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getOwnedRelationshipRule());
			}
			newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipTargetListParserRuleCall_3());
		}
		this_RelationshipTargetList_3=ruleRelationshipTargetList[$current]
		{
			$current = $this_RelationshipTargetList_3.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getOwnedRelationshipRule());
			}
			newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipBodyParserRuleCall_4());
		}
		this_RelationshipBody_4=ruleRelationshipBody[$current]
		{
			$current = $this_RelationshipBody_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule RelationshipRelatedElements
ruleRelationshipRelatedElements[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='from'
			{
				newLeafNode(otherlv_0, grammarAccess.getRelationshipRelatedElementsAccess().getFromKeyword_0_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
				}
				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipSourceListParserRuleCall_0_1());
			}
			this_RelationshipSourceList_1=ruleRelationshipSourceList[$current]
			{
				$current = $this_RelationshipSourceList_1.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_2='to'
				{
					newLeafNode(otherlv_2, grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_0_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
					}
					newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_0_2_1());
				}
				this_RelationshipTargetList_3=ruleRelationshipTargetList[$current]
				{
					$current = $this_RelationshipTargetList_3.current;
					afterParserOrEnumRuleCall();
				}
			)?
		)
		    |
		(
			otherlv_4='to'
			{
				newLeafNode(otherlv_4, grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_1_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
				}
				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_1_1());
			}
			this_RelationshipTargetList_5=ruleRelationshipTargetList[$current]
			{
				$current = $this_RelationshipTargetList_5.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule RelationshipSourceList
ruleRelationshipSourceList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getRelationshipSourceListRule());
			}
			newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_0());
		}
		this_RelationshipSource_0=ruleRelationshipSource[$current]
		{
			$current = $this_RelationshipSource_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRelationshipSourceListAccess().getCommaKeyword_1_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipSourceListRule());
				}
				newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_1_1());
			}
			this_RelationshipSource_2=ruleRelationshipSource[$current]
			{
				$current = $this_RelationshipSource_2.current;
				afterParserOrEnumRuleCall();
			}
		)*
	)
;


// Rule RelationshipSource
ruleRelationshipSource[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipSourceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getRelationshipSourceAccess().getSourceElementCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule RelationshipTargetList
ruleRelationshipTargetList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getRelationshipTargetListRule());
			}
			newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_0());
		}
		this_RelationshipTarget_0=ruleRelationshipTarget[$current]
		{
			$current = $this_RelationshipTarget_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRelationshipTargetListAccess().getCommaKeyword_1_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipTargetListRule());
				}
				newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_1_1());
			}
			this_RelationshipTarget_2=ruleRelationshipTarget[$current]
			{
				$current = $this_RelationshipTarget_2.current;
				afterParserOrEnumRuleCall();
			}
		)*
	)
;


// Rule RelationshipTarget
ruleRelationshipTarget[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRelationshipTargetRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getRelationshipTargetAccess().getTargetElementCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule RelationshipBody
ruleRelationshipBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationshipBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getRelationshipBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipBodyRule());
					}
					newCompositeNode(grammarAccess.getRelationshipBodyAccess().getRelationshipOwnedElementParserRuleCall_1_1());
				}
				this_RelationshipOwnedElement_2=ruleRelationshipOwnedElement[$current]
				{
					$current = $this_RelationshipOwnedElement_2.current;
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getRelationshipBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;


// Rule RelationshipOwnedElement
ruleRelationshipOwnedElement[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElement_compOwnedRelatedElementParserRuleCall_0_0());
				}
				lv_ownedRelatedElement_comp_0_0=ruleOwnedRelatedElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
					}
					add(
						$current,
						"ownedRelatedElement_comp",
						lv_ownedRelatedElement_comp_0_0,
						"org.omg.kerml.xtext.KerML.OwnedRelatedElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getDocumentation_compOwnedDocumentationParserRuleCall_1_0());
				}
				lv_documentation_comp_1_0=ruleOwnedDocumentation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
					}
					add(
						$current,
						"documentation_comp",
						lv_documentation_comp_1_0,
						"org.omg.kerml.xtext.KerML.OwnedDocumentation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedAnnotation_compOwnedTextualRepresentationAnnotationParserRuleCall_2_0());
				}
				lv_ownedAnnotation_comp_2_0=ruleOwnedTextualRepresentationAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
					}
					add(
						$current,
						"ownedAnnotation_comp",
						lv_ownedAnnotation_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedTextualRepresentationAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOwnedRelatedElement
entryRuleOwnedRelatedElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedRelatedElementRule()); }
	iv_ruleOwnedRelatedElement=ruleOwnedRelatedElement
	{ $current=$iv_ruleOwnedRelatedElement.current; }
	EOF;

// Rule OwnedRelatedElement
ruleOwnedRelatedElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='element'
			{
				newLeafNode(otherlv_0, grammarAccess.getOwnedRelatedElementAccess().getElementKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getHumanIdNameParserRuleCall_0_1_0());
					}
					lv_humanId_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOwnedRelatedElementRule());
						}
						set(
							$current,
							"humanId",
							lv_humanId_1_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedRelatedElementRule());
				}
				newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getElementBodyParserRuleCall_0_2());
			}
			this_ElementBody_2=ruleElementBody[$current]
			{
				$current = $this_ElementBody_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getOwnedRelatedRelationshipParserRuleCall_1());
		}
		this_OwnedRelatedRelationship_3=ruleOwnedRelatedRelationship
		{
			$current = $this_OwnedRelatedRelationship_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOwnedRelatedRelationship
entryRuleOwnedRelatedRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedRelatedRelationshipRule()); }
	iv_ruleOwnedRelatedRelationship=ruleOwnedRelatedRelationship
	{ $current=$iv_ruleOwnedRelatedRelationship.current; }
	EOF;

// Rule OwnedRelatedRelationship
ruleOwnedRelatedRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='relationship'
		{
			newLeafNode(otherlv_0, grammarAccess.getOwnedRelatedRelationshipAccess().getRelationshipKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedRelatedRelationshipAccess().getHumanIdNameParserRuleCall_1_0());
				}
				lv_humanId_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedRelatedRelationshipRule());
					}
					set(
						$current,
						"humanId",
						lv_humanId_1_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getOwnedRelatedRelationshipRule());
			}
			newCompositeNode(grammarAccess.getOwnedRelatedRelationshipAccess().getRelationshipBodyParserRuleCall_2());
		}
		this_RelationshipBody_2=ruleRelationshipBody[$current]
		{
			$current = $this_RelationshipBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	iv_ruleComment=ruleComment
	{ $current=$iv_ruleComment.current; }
	EOF;

// Rule Comment
ruleComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='comment'
				{
					newLeafNode(otherlv_0, grammarAccess.getCommentAccess().getCommentKeyword_0_0_0());
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCommentRule());
						}
						newCompositeNode(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_0_1());
					}
					this_Identification_1=ruleIdentification[$current]
					{
						$current = $this_Identification_1.current;
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_2='about'
				{
					newLeafNode(otherlv_2, grammarAccess.getCommentAccess().getAboutKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0());
						}
						lv_ownedRelationship_comp_3_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommentRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_3_0,
								"org.omg.kerml.xtext.KerML.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getCommentAccess().getCommaKeyword_0_0_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationship_compAnnotationParserRuleCall_0_0_4_1_0());
							}
							lv_ownedRelationship_comp_5_0=ruleAnnotation
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCommentRule());
								}
								add(
									$current,
									"ownedRelationship_comp",
									lv_ownedRelationship_comp_5_0,
									"org.omg.kerml.xtext.KerML.Annotation");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					otherlv_6='comment'
					{
						newLeafNode(otherlv_6, grammarAccess.getCommentAccess().getCommentKeyword_0_1_0_0());
					}
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCommentRule());
							}
							newCompositeNode(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_1_0_1());
						}
						this_Identification_7=ruleIdentification[$current]
						{
							$current = $this_Identification_7.current;
							afterParserOrEnumRuleCall();
						}
					)?
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0());
						}
						lv_ownedRelationship_comp_8_0=ruleEmptyAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommentRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_8_0,
								"org.omg.kerml.xtext.KerML.EmptyAnnotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				lv_body_9_0=RULE_REGULAR_COMMENT
				{
					newLeafNode(lv_body_9_0, grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommentRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_9_0,
						"org.omg.kerml.xtext.KerML.REGULAR_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAnnotationRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEmptyAnnotation
entryRuleEmptyAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyAnnotationRule()); }
	iv_ruleEmptyAnnotation=ruleEmptyAnnotation
	{ $current=$iv_ruleEmptyAnnotation.current; }
	EOF;

// Rule EmptyAnnotation
ruleEmptyAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getEmptyAnnotationAccess().getAnnotationAction(),
				$current);
		}
	)
;

// Entry rule entryRuleOwnedDocumentation
entryRuleOwnedDocumentation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedDocumentationRule()); }
	iv_ruleOwnedDocumentation=ruleOwnedDocumentation
	{ $current=$iv_ruleOwnedDocumentation.current; }
	EOF;

// Rule OwnedDocumentation
ruleOwnedDocumentation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOwnedDocumentationAccess().getDocumentingComment_compDocumentationCommentParserRuleCall_0());
			}
			lv_documentingComment_comp_0_0=ruleDocumentationComment
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOwnedDocumentationRule());
				}
				set(
					$current,
					"documentingComment_comp",
					lv_documentingComment_comp_0_0,
					"org.omg.kerml.xtext.KerML.DocumentationComment");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDocumentationComment
entryRuleDocumentationComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentationCommentRule()); }
	iv_ruleDocumentationComment=ruleDocumentationComment
	{ $current=$iv_ruleDocumentationComment.current; }
	EOF;

// Rule DocumentationComment
ruleDocumentationComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='doc'
		{
			newLeafNode(otherlv_0, grammarAccess.getDocumentationCommentAccess().getDocKeyword_0());
		}
		(
			otherlv_1='id'
			{
				newLeafNode(otherlv_1, grammarAccess.getDocumentationCommentAccess().getIdKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDocumentationCommentAccess().getHumanIdNameParserRuleCall_1_1_0());
					}
					lv_humanId_2_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocumentationCommentRule());
						}
						set(
							$current,
							"humanId",
							lv_humanId_2_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_body_3_0=RULE_REGULAR_COMMENT
				{
					newLeafNode(lv_body_3_0, grammarAccess.getDocumentationCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocumentationCommentRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_3_0,
						"org.omg.kerml.xtext.KerML.REGULAR_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRulePrefixDocumentation
entryRulePrefixDocumentation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixDocumentationRule()); }
	iv_rulePrefixDocumentation=rulePrefixDocumentation
	{ $current=$iv_rulePrefixDocumentation.current; }
	EOF;

// Rule PrefixDocumentation
rulePrefixDocumentation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrefixDocumentationAccess().getOwnedRelatedElement_compPrefixDocumentationCommentParserRuleCall_0());
			}
			lv_ownedRelatedElement_comp_0_0=rulePrefixDocumentationComment
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPrefixDocumentationRule());
				}
				add(
					$current,
					"ownedRelatedElement_comp",
					lv_ownedRelatedElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.PrefixDocumentationComment");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrefixDocumentationComment
entryRulePrefixDocumentationComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixDocumentationCommentRule()); }
	iv_rulePrefixDocumentationComment=rulePrefixDocumentationComment
	{ $current=$iv_rulePrefixDocumentationComment.current; }
	EOF;

// Rule PrefixDocumentationComment
rulePrefixDocumentationComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='doc'
			{
				newLeafNode(otherlv_0, grammarAccess.getPrefixDocumentationCommentAccess().getDocKeyword_0_0());
			}
			(
				otherlv_1='id'
				{
					newLeafNode(otherlv_1, grammarAccess.getPrefixDocumentationCommentAccess().getIdKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrefixDocumentationCommentAccess().getHumanIdNameParserRuleCall_0_1_1_0());
						}
						lv_humanId_2_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrefixDocumentationCommentRule());
							}
							set(
								$current,
								"humanId",
								lv_humanId_2_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
		(
			(
				lv_body_3_0=RULE_DOCUMENTATION_COMMENT
				{
					newLeafNode(lv_body_3_0, grammarAccess.getPrefixDocumentationCommentAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrefixDocumentationCommentRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_3_0,
						"org.omg.kerml.xtext.KerML.DOCUMENTATION_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleOwnedTextualRepresentationAnnotation
entryRuleOwnedTextualRepresentationAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedTextualRepresentationAnnotationRule()); }
	iv_ruleOwnedTextualRepresentationAnnotation=ruleOwnedTextualRepresentationAnnotation
	{ $current=$iv_ruleOwnedTextualRepresentationAnnotation.current; }
	EOF;

// Rule OwnedTextualRepresentationAnnotation
ruleOwnedTextualRepresentationAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOwnedTextualRepresentationAnnotationAccess().getOwnedRelatedElement_compOwnedTextualRepresentationParserRuleCall_0());
			}
			lv_ownedRelatedElement_comp_0_0=ruleOwnedTextualRepresentation
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOwnedTextualRepresentationAnnotationRule());
				}
				add(
					$current,
					"ownedRelatedElement_comp",
					lv_ownedRelatedElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.OwnedTextualRepresentation");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOwnedTextualRepresentation
entryRuleOwnedTextualRepresentation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedTextualRepresentationRule()); }
	iv_ruleOwnedTextualRepresentation=ruleOwnedTextualRepresentation
	{ $current=$iv_ruleOwnedTextualRepresentation.current; }
	EOF;

// Rule OwnedTextualRepresentation
ruleOwnedTextualRepresentation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='rep'
			{
				newLeafNode(otherlv_0, grammarAccess.getOwnedTextualRepresentationAccess().getRepKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOwnedTextualRepresentationAccess().getHumanIdNameParserRuleCall_0_1_0());
					}
					lv_humanId_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOwnedTextualRepresentationRule());
						}
						set(
							$current,
							"humanId",
							lv_humanId_1_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		otherlv_2='language'
		{
			newLeafNode(otherlv_2, grammarAccess.getOwnedTextualRepresentationAccess().getLanguageKeyword_1());
		}
		(
			(
				lv_language_3_0=RULE_STRING_VALUE
				{
					newLeafNode(lv_language_3_0, grammarAccess.getOwnedTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOwnedTextualRepresentationRule());
					}
					setWithLastConsumed(
						$current,
						"language",
						lv_language_3_0,
						"org.omg.kerml.xtext.KerML.STRING_VALUE");
				}
			)
		)
		(
			(
				lv_body_4_0=RULE_REGULAR_COMMENT
				{
					newLeafNode(lv_body_4_0, grammarAccess.getOwnedTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOwnedTextualRepresentationRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_4_0,
						"org.omg.kerml.xtext.KerML.REGULAR_COMMENT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedTextualRepresentationAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_4_0());
				}
				lv_ownedRelationship_comp_5_0=ruleEmptyAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedTextualRepresentationRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_5_0,
						"org.omg.kerml.xtext.KerML.EmptyAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTextualRepresentation
entryRuleTextualRepresentation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextualRepresentationRule()); }
	iv_ruleTextualRepresentation=ruleTextualRepresentation
	{ $current=$iv_ruleTextualRepresentation.current; }
	EOF;

// Rule TextualRepresentation
ruleTextualRepresentation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='rep'
				{
					newLeafNode(otherlv_0, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_0_0());
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTextualRepresentationRule());
						}
						newCompositeNode(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_0_1());
					}
					this_Identification_1=ruleIdentification[$current]
					{
						$current = $this_Identification_1.current;
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_2='about'
				{
					newLeafNode(otherlv_2, grammarAccess.getTextualRepresentationAccess().getAboutKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTextualRepresentationAccess().getOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0());
						}
						lv_ownedRelationship_comp_3_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTextualRepresentationRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_3_0,
								"org.omg.kerml.xtext.KerML.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					otherlv_4='rep'
					{
						newLeafNode(otherlv_4, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_1_0_0());
					}
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTextualRepresentationRule());
							}
							newCompositeNode(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_1_0_1());
						}
						this_Identification_5=ruleIdentification[$current]
						{
							$current = $this_Identification_5.current;
							afterParserOrEnumRuleCall();
						}
					)?
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getTextualRepresentationAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0());
						}
						lv_ownedRelationship_comp_6_0=ruleEmptyAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTextualRepresentationRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_6_0,
								"org.omg.kerml.xtext.KerML.EmptyAnnotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		otherlv_7='language'
		{
			newLeafNode(otherlv_7, grammarAccess.getTextualRepresentationAccess().getLanguageKeyword_1());
		}
		(
			(
				lv_language_8_0=RULE_STRING_VALUE
				{
					newLeafNode(lv_language_8_0, grammarAccess.getTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextualRepresentationRule());
					}
					setWithLastConsumed(
						$current,
						"language",
						lv_language_8_0,
						"org.omg.kerml.xtext.KerML.STRING_VALUE");
				}
			)
		)
		(
			(
				lv_body_9_0=RULE_REGULAR_COMMENT
				{
					newLeafNode(lv_body_9_0, grammarAccess.getTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextualRepresentationRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_9_0,
						"org.omg.kerml.xtext.KerML.REGULAR_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleOwnedAnnotatingFeatureAnnotation
entryRuleOwnedAnnotatingFeatureAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedAnnotatingFeatureAnnotationRule()); }
	iv_ruleOwnedAnnotatingFeatureAnnotation=ruleOwnedAnnotatingFeatureAnnotation
	{ $current=$iv_ruleOwnedAnnotatingFeatureAnnotation.current; }
	EOF;

// Rule OwnedAnnotatingFeatureAnnotation
ruleOwnedAnnotatingFeatureAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOwnedAnnotatingFeatureAnnotationAccess().getOwnedRelatedElement_compOwnedAnnotatingFeatureParserRuleCall_0());
			}
			lv_ownedRelatedElement_comp_0_0=ruleOwnedAnnotatingFeature
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOwnedAnnotatingFeatureAnnotationRule());
				}
				add(
					$current,
					"ownedRelatedElement_comp",
					lv_ownedRelatedElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.OwnedAnnotatingFeature");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOwnedAnnotatingFeature
entryRuleOwnedAnnotatingFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedAnnotatingFeatureRule()); }
	iv_ruleOwnedAnnotatingFeature=ruleOwnedAnnotatingFeature
	{ $current=$iv_ruleOwnedAnnotatingFeature.current; }
	EOF;

// Rule OwnedAnnotatingFeature
ruleOwnedAnnotatingFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getOwnedAnnotatingFeatureAccess().getMetadataKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOwnedAnnotatingFeatureAccess().getHumanIdNameParserRuleCall_1_0_0());
					}
					lv_humanId_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOwnedAnnotatingFeatureRule());
						}
						set(
							$current,
							"humanId",
							lv_humanId_1_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=':'
				{
					newLeafNode(otherlv_2, grammarAccess.getOwnedAnnotatingFeatureAccess().getColonKeyword_1_1_0());
				}
				    |
				(
					otherlv_3='typed'
					{
						newLeafNode(otherlv_3, grammarAccess.getOwnedAnnotatingFeatureAccess().getTypedKeyword_1_1_1_0());
					}
					otherlv_4='by'
					{
						newLeafNode(otherlv_4, grammarAccess.getOwnedAnnotatingFeatureAccess().getByKeyword_1_1_1_1());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationship_compMetadataTypingParserRuleCall_2_0());
				}
				lv_ownedRelationship_comp_5_0=rulemetadataTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedAnnotatingFeatureRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_5_0,
						"org.omg.kerml.xtext.KerML.metadataTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_3_0());
				}
				lv_ownedRelationship_comp_6_0=ruleEmptyAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOwnedAnnotatingFeatureRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_6_0,
						"org.omg.kerml.xtext.KerML.EmptyAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getOwnedAnnotatingFeatureRule());
			}
			newCompositeNode(grammarAccess.getOwnedAnnotatingFeatureAccess().getAnnotatingFeatureBodyParserRuleCall_4());
		}
		this_AnnotatingFeatureBody_7=ruleAnnotatingFeatureBody[$current]
		{
			$current = $this_AnnotatingFeatureBody_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnnotatingFeature
entryRuleAnnotatingFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotatingFeatureRule()); }
	iv_ruleAnnotatingFeature=ruleAnnotatingFeature
	{ $current=$iv_ruleAnnotatingFeature.current; }
	EOF;

// Rule AnnotatingFeature
ruleAnnotatingFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='@'
			{
				newLeafNode(otherlv_0, grammarAccess.getAnnotatingFeatureAccess().getCommercialAtKeyword_0_0());
			}
			    |
			otherlv_1='metadata'
			{
				newLeafNode(otherlv_1, grammarAccess.getAnnotatingFeatureAccess().getMetadataKeyword_0_1());
			}
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAnnotatingFeatureRule());
			}
			newCompositeNode(grammarAccess.getAnnotatingFeatureAccess().getAnnotatingFeatureDeclarationParserRuleCall_1());
		}
		this_AnnotatingFeatureDeclaration_2=ruleAnnotatingFeatureDeclaration[$current]
		{
			$current = $this_AnnotatingFeatureDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_3='about'
				{
					newLeafNode(otherlv_3, grammarAccess.getAnnotatingFeatureAccess().getAboutKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationship_compAnnotationParserRuleCall_2_0_1_0());
						}
						lv_ownedRelationship_comp_4_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAnnotatingFeatureRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_4_0,
								"org.omg.kerml.xtext.KerML.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getAnnotatingFeatureAccess().getCommaKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationship_compAnnotationParserRuleCall_2_0_2_1_0());
							}
							lv_ownedRelationship_comp_6_0=ruleAnnotation
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAnnotatingFeatureRule());
								}
								add(
									$current,
									"ownedRelationship_comp",
									lv_ownedRelationship_comp_6_0,
									"org.omg.kerml.xtext.KerML.Annotation");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_2_1_0());
					}
					lv_ownedRelationship_comp_7_0=ruleEmptyAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotatingFeatureRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_7_0,
							"org.omg.kerml.xtext.KerML.EmptyAnnotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAnnotatingFeatureRule());
			}
			newCompositeNode(grammarAccess.getAnnotatingFeatureAccess().getAnnotatingFeatureBodyParserRuleCall_3());
		}
		this_AnnotatingFeatureBody_8=ruleAnnotatingFeatureBody[$current]
		{
			$current = $this_AnnotatingFeatureBody_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule AnnotatingFeatureDeclaration
ruleAnnotatingFeatureDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAnnotatingFeatureDeclarationRule());
				}
				newCompositeNode(grammarAccess.getAnnotatingFeatureDeclarationAccess().getIdentificationParserRuleCall_0_0());
			}
			this_Identification_0=ruleIdentification[$current]
			{
				$current = $this_Identification_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_1=':'
				{
					newLeafNode(otherlv_1, grammarAccess.getAnnotatingFeatureDeclarationAccess().getColonKeyword_0_1_0());
				}
				    |
				(
					otherlv_2='typed'
					{
						newLeafNode(otherlv_2, grammarAccess.getAnnotatingFeatureDeclarationAccess().getTypedKeyword_0_1_1_0());
					}
					otherlv_3='by'
					{
						newLeafNode(otherlv_3, grammarAccess.getAnnotatingFeatureDeclarationAccess().getByKeyword_0_1_1_1());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatingFeatureDeclarationAccess().getOwnedRelationship_compMetadataTypingParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_4_0=rulemetadataTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatingFeatureDeclarationRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_4_0,
						"org.omg.kerml.xtext.KerML.metadataTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulemetadataTyping
entryRulemetadataTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataTypingRule()); }
	iv_rulemetadataTyping=rulemetadataTyping
	{ $current=$iv_rulemetadataTyping.current; }
	EOF;

// Rule metadataTyping
rulemetadataTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMetadataTypingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getMetadataTypingAccess().getTypeDataTypeCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule AnnotatingFeatureBody
ruleAnnotatingFeatureBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotatingFeatureBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getAnnotatingFeatureBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotatingFeatureBodyAccess().getOwnedFeatureMembership_compMetadataFeatureMemberParserRuleCall_1_1_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleMetadataFeatureMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotatingFeatureBodyRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.MetadataFeatureMember");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getAnnotatingFeatureBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleMetadataFeatureMember
entryRuleMetadataFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataFeatureMemberRule()); }
	iv_ruleMetadataFeatureMember=ruleMetadataFeatureMember
	{ $current=$iv_ruleMetadataFeatureMember.current; }
	EOF;

// Rule MetadataFeatureMember
ruleMetadataFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMetadataFeatureMemberAccess().getOwnedMemberFeature_compMetadataFeatureParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleMetadataFeature
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMetadataFeatureMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.MetadataFeature");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMetadataFeature
entryRuleMetadataFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataFeatureRule()); }
	iv_ruleMetadataFeature=ruleMetadataFeature
	{ $current=$iv_ruleMetadataFeature.current; }
	EOF;

// Rule MetadataFeature
ruleMetadataFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='feature'
			{
				newLeafNode(otherlv_0, grammarAccess.getMetadataFeatureAccess().getFeatureKeyword_0());
			}
		)?
		(
			otherlv_1=':>>'
			{
				newLeafNode(otherlv_1, grammarAccess.getMetadataFeatureAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_0());
			}
			    |
			otherlv_2='redefines'
			{
				newLeafNode(otherlv_2, grammarAccess.getMetadataFeatureAccess().getRedefinesKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataFeatureAccess().getOwnedRelationship_compOwnedRedefinitionParserRuleCall_2_0());
				}
				lv_ownedRelationship_comp_3_0=ruleOwnedRedefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_3_0,
						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getMetadataFeatureAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataFeatureAccess().getMetadataFeatureValue_compMetadataFeatureValueParserRuleCall_4_0());
				}
				lv_metadataFeatureValue_comp_5_0=ruleMetadataFeatureValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
					}
					set(
						$current,
						"metadataFeatureValue_comp",
						lv_metadataFeatureValue_comp_5_0,
						"org.omg.kerml.xtext.KerML.MetadataFeatureValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getMetadataFeatureAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleMetadataFeatureValue
entryRuleMetadataFeatureValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataFeatureValueRule()); }
	iv_ruleMetadataFeatureValue=ruleMetadataFeatureValue
	{ $current=$iv_ruleMetadataFeatureValue.current; }
	EOF;

// Rule MetadataFeatureValue
ruleMetadataFeatureValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMetadataFeatureValueAccess().getMetadataValue_compMetadataExpressionParserRuleCall_0());
			}
			lv_metadataValue_comp_0_0=ruleMetadataExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMetadataFeatureValueRule());
				}
				set(
					$current,
					"metadataValue_comp",
					lv_metadataValue_comp_0_0,
					"org.omg.kerml.xtext.KerML.MetadataExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNamespace
entryRuleNamespace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); }
	iv_ruleNamespace=ruleNamespace
	{ $current=$iv_ruleNamespace.current; }
	EOF;

// Rule Namespace
ruleNamespace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getNamespaceRule());
			}
			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceDeclarationParserRuleCall_0());
		}
		this_NamespaceDeclaration_0=ruleNamespaceDeclaration[$current]
		{
			$current = $this_NamespaceDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getNamespaceRule());
			}
			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceBodyParserRuleCall_1());
		}
		this_NamespaceBody_1=ruleNamespaceBody[$current]
		{
			$current = $this_NamespaceBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule NamespaceDeclaration
ruleNamespaceDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='namespace'
		{
			newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
				}
				newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule NamespaceBody
ruleNamespaceBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getNamespaceBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0());
						}
						lv_documentation_comp_2_0=ruleOwnedDocumentation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
							}
							add(
								$current,
								"documentation_comp",
								lv_documentation_comp_2_0,
								"org.omg.kerml.xtext.KerML.OwnedDocumentation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedMembership_compNamespaceMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedMembership_comp_3_0=ruleNamespaceMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.NamespaceMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedImport_compImportParserRuleCall_1_1_2_0());
						}
						lv_ownedImport_comp_4_0=ruleImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
							}
							add(
								$current,
								"ownedImport_comp",
								lv_ownedImport_comp_4_0,
								"org.omg.kerml.xtext.KerML.Import");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;


// Rule NamespaceBodyElement
ruleNamespaceBodyElement[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getDocumentation_compOwnedDocumentationParserRuleCall_0_0());
				}
				lv_documentation_comp_0_0=ruleOwnedDocumentation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
					}
					add(
						$current,
						"documentation_comp",
						lv_documentation_comp_0_0,
						"org.omg.kerml.xtext.KerML.OwnedDocumentation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedMembership_compNamespaceMemberParserRuleCall_1_0());
				}
				lv_ownedMembership_comp_1_0=ruleNamespaceMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
					}
					add(
						$current,
						"ownedMembership_comp",
						lv_ownedMembership_comp_1_0,
						"org.omg.kerml.xtext.KerML.NamespaceMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedImport_compImportParserRuleCall_2_0());
				}
				lv_ownedImport_comp_2_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
					}
					add(
						$current,
						"ownedImport_comp",
						lv_ownedImport_comp_2_0,
						"org.omg.kerml.xtext.KerML.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNamespaceMember
entryRuleNamespaceMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceMemberRule()); }
	iv_ruleNamespaceMember=ruleNamespaceMember
	{ $current=$iv_ruleNamespaceMember.current; }
	EOF;

// Rule NamespaceMember
ruleNamespaceMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceMemberAccess().getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=rulePrefixDocumentation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceMemberRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.PrefixDocumentation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceMemberAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0());
				}
				lv_visibility_1_0=ruleBasicVisibilityIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceMemberRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.omg.kerml.xtext.KerML.BasicVisibilityIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNamespaceMemberRule());
				}
				newCompositeNode(grammarAccess.getNamespaceMemberAccess().getNonFeatureNamespaceMemberParserRuleCall_2_0());
			}
			this_NonFeatureNamespaceMember_2=ruleNonFeatureNamespaceMember[$current]
			{
				$current = $this_NonFeatureNamespaceMember_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNamespaceMemberRule());
				}
				newCompositeNode(grammarAccess.getNamespaceMemberAccess().getFeatureNamespaceMemberParserRuleCall_2_1());
			}
			this_FeatureNamespaceMember_3=ruleFeatureNamespaceMember[$current]
			{
				$current = $this_FeatureNamespaceMember_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule NonFeatureNamespaceMember
ruleNonFeatureNamespaceMember[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNonFeatureNamespaceMemberAccess().getOwnedMemberElement_compNonFeatureElementParserRuleCall_0_0());
				}
				lv_ownedMemberElement_comp_0_0=ruleNonFeatureElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonFeatureNamespaceMemberRule());
					}
					set(
						$current,
						"ownedMemberElement_comp",
						lv_ownedMemberElement_comp_0_0,
						"org.omg.kerml.xtext.KerML.NonFeatureElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				otherlv_1='alias'
				{
					newLeafNode(otherlv_1, grammarAccess.getNonFeatureNamespaceMemberAccess().getAliasKeyword_1_0_0());
				}
				    |
				otherlv_2='import'
				{
					newLeafNode(otherlv_2, grammarAccess.getNonFeatureNamespaceMemberAccess().getImportKeyword_1_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNonFeatureNamespaceMemberRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberElementElementCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4='as'
				{
					newLeafNode(otherlv_4, grammarAccess.getNonFeatureNamespaceMemberAccess().getAsKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberNameNameParserRuleCall_1_2_1_0());
						}
						lv_memberName_5_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNonFeatureNamespaceMemberRule());
							}
							set(
								$current,
								"memberName",
								lv_memberName_5_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getNonFeatureNamespaceMemberAccess().getSemicolonKeyword_1_3());
			}
		)
	)
;


// Rule FeatureNamespaceMember
ruleFeatureNamespaceMember[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFeatureNamespaceMemberAccess().getOwnedMemberElement_compFeatureElementParserRuleCall_0());
			}
			lv_ownedMemberElement_comp_0_0=ruleFeatureElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFeatureNamespaceMemberRule());
				}
				set(
					$current,
					"ownedMemberElement_comp",
					lv_ownedMemberElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.FeatureElement");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=rulePrefixDocumentation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.PrefixDocumentation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0());
				}
				lv_visibility_1_0=ruleBasicVisibilityIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.omg.kerml.xtext.KerML.BasicVisibilityIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='import'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getImportKeyword_2());
		}
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceNamespaceCrossReference_3_0_0_0());
						}
						ruleName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='::'
					{
						newLeafNode(otherlv_4, grammarAccess.getImportAccess().getColonColonKeyword_3_0_1_0());
					}
					    |
					otherlv_5='.'
					{
						newLeafNode(otherlv_5, grammarAccess.getImportAccess().getFullStopKeyword_3_0_1_1());
					}
				)
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceNamespaceCrossReference_3_1_0_0());
						}
						ruleColonQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='::'
				{
					newLeafNode(otherlv_7, grammarAccess.getImportAccess().getColonColonKeyword_3_1_1());
				}
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceNamespaceCrossReference_3_2_0_0());
						}
						ruleDotQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9='.'
				{
					newLeafNode(otherlv_9, grammarAccess.getImportAccess().getFullStopKeyword_3_2_1());
				}
			)
		)
		(
			otherlv_10='*'
			{
				newLeafNode(otherlv_10, grammarAccess.getImportAccess().getAsteriskKeyword_4_0());
			}
			    |
			(
				(
					lv_isRecursive_11_0='**'
					{
						newLeafNode(lv_isRecursive_11_0, grammarAccess.getImportAccess().getIsRecursiveAsteriskAsteriskKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportRule());
						}
						setWithLastConsumed($current, "isRecursive", lv_isRecursive_11_0 != null, "**");
					}
				)
			)
		)
		otherlv_12=';'
		{
			newLeafNode(otherlv_12, grammarAccess.getImportAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleNonFeatureElement
entryRuleNonFeatureElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonFeatureElementRule()); }
	iv_ruleNonFeatureElement=ruleNonFeatureElement
	{ $current=$iv_ruleNonFeatureElement.current; }
	EOF;

// Rule NonFeatureElement
ruleNonFeatureElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getElementParserRuleCall_0());
		}
		this_Element_0=ruleElement
		{
			$current = $this_Element_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRelationshipParserRuleCall_1());
		}
		this_Relationship_1=ruleRelationship
		{
			$current = $this_Relationship_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getCommentParserRuleCall_2());
		}
		this_Comment_2=ruleComment
		{
			$current = $this_Comment_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTextualRepresentationParserRuleCall_3());
		}
		this_TextualRepresentation_3=ruleTextualRepresentation
		{
			$current = $this_TextualRepresentation_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAnnotatingFeatureParserRuleCall_4());
		}
		this_AnnotatingFeature_4=ruleAnnotatingFeature
		{
			$current = $this_AnnotatingFeature_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getNamespaceParserRuleCall_5());
		}
		this_Namespace_5=ruleNamespace
		{
			$current = $this_Namespace_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPackageParserRuleCall_6());
		}
		this_Package_6=rulePackage
		{
			$current = $this_Package_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeParserRuleCall_7());
		}
		this_Type_7=ruleType
		{
			$current = $this_Type_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassifierParserRuleCall_8());
		}
		this_Classifier_8=ruleClassifier
		{
			$current = $this_Classifier_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassParserRuleCall_9());
		}
		this_Class_9=ruleClass
		{
			$current = $this_Class_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getDataTypeParserRuleCall_10());
		}
		this_DataType_10=ruleDataType
		{
			$current = $this_DataType_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAssociationParserRuleCall_11());
		}
		this_Association_11=ruleAssociation
		{
			$current = $this_Association_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getInteractionParserRuleCall_12());
		}
		this_Interaction_12=ruleInteraction
		{
			$current = $this_Interaction_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getBehaviorParserRuleCall_13());
		}
		this_Behavior_13=ruleBehavior
		{
			$current = $this_Behavior_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFunctionParserRuleCall_14());
		}
		this_Function_14=ruleFunction
		{
			$current = $this_Function_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPredicateParserRuleCall_15());
		}
		this_Predicate_15=rulePredicate
		{
			$current = $this_Predicate_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getGeneralizationParserRuleCall_16());
		}
		this_Generalization_16=ruleGeneralization
		{
			$current = $this_Generalization_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getConjugationParserRuleCall_17());
		}
		this_Conjugation_17=ruleConjugation
		{
			$current = $this_Conjugation_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFeatureTypingParserRuleCall_18());
		}
		this_FeatureTyping_18=ruleFeatureTyping
		{
			$current = $this_FeatureTyping_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSuperclassingParserRuleCall_19());
		}
		this_Superclassing_19=ruleSuperclassing
		{
			$current = $this_Superclassing_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSubsettingParserRuleCall_20());
		}
		this_Subsetting_20=ruleSubsetting
		{
			$current = $this_Subsetting_20.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRedefinitionParserRuleCall_21());
		}
		this_Redefinition_21=ruleRedefinition
		{
			$current = $this_Redefinition_21.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeFeaturingParserRuleCall_22());
		}
		this_TypeFeaturing_22=ruleTypeFeaturing
		{
			$current = $this_TypeFeaturing_22.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeatureElement
entryRuleFeatureElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureElementRule()); }
	iv_ruleFeatureElement=ruleFeatureElement
	{ $current=$iv_ruleFeatureElement.current; }
	EOF;

// Rule FeatureElement
ruleFeatureElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getFeatureParserRuleCall_0());
		}
		this_Feature_0=ruleFeature
		{
			$current = $this_Feature_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getStepParserRuleCall_1());
		}
		this_Step_1=ruleStep
		{
			$current = $this_Step_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getExpressionParserRuleCall_2());
		}
		this_Expression_2=ruleExpression
		{
			$current = $this_Expression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getBooleanExpressionParserRuleCall_3());
		}
		this_BooleanExpression_3=ruleBooleanExpression
		{
			$current = $this_BooleanExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getInvariantParserRuleCall_4());
		}
		this_Invariant_4=ruleInvariant
		{
			$current = $this_Invariant_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getConnectorParserRuleCall_5());
		}
		this_Connector_5=ruleConnector
		{
			$current = $this_Connector_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getBindingConnectorParserRuleCall_6());
		}
		this_BindingConnector_6=ruleBindingConnector
		{
			$current = $this_BindingConnector_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionParserRuleCall_7());
		}
		this_Succession_7=ruleSuccession
		{
			$current = $this_Succession_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getItemFlowParserRuleCall_8());
		}
		this_ItemFlow_8=ruleItemFlow
		{
			$current = $this_ItemFlow_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionItemFlowParserRuleCall_9());
		}
		this_SuccessionItemFlow_9=ruleSuccessionItemFlow
		{
			$current = $this_SuccessionItemFlow_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPackageRule());
			}
			newCompositeNode(grammarAccess.getPackageAccess().getPackageDeclarationParserRuleCall_0());
		}
		this_PackageDeclaration_0=rulePackageDeclaration[$current]
		{
			$current = $this_PackageDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPackageRule());
			}
			newCompositeNode(grammarAccess.getPackageAccess().getNamespaceBodyParserRuleCall_1());
		}
		this_NamespaceBody_1=ruleNamespaceBody[$current]
		{
			$current = $this_NamespaceBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule PackageDeclaration
rulePackageDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPackageDeclarationRule());
				}
				newCompositeNode(grammarAccess.getPackageDeclarationAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getTypeKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getTypeRule());
			}
			newCompositeNode(grammarAccess.getTypeAccess().getTypeDeclarationParserRuleCall_2());
		}
		this_TypeDeclaration_2=ruleTypeDeclaration[$current]
		{
			$current = $this_TypeDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getTypeRule());
			}
			newCompositeNode(grammarAccess.getTypeAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule TypeDeclaration
ruleTypeDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", lv_isSufficient_0_0 != null, "all");
				}
			)
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeDeclarationRule());
				}
				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getOwnedMembership_compMultiplicityMemberParserRuleCall_2_0());
				}
				lv_ownedMembership_comp_2_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
					}
					add(
						$current,
						"ownedMembership_comp",
						lv_ownedMembership_comp_2_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeDeclarationRule());
				}
				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getSpecializationPartParserRuleCall_3_0());
			}
			this_SpecializationPart_3=ruleSpecializationPart[$current]
			{
				$current = $this_SpecializationPart_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeDeclarationRule());
				}
				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getConjugationPartParserRuleCall_3_1());
			}
			this_ConjugationPart_4=ruleConjugationPart[$current]
			{
				$current = $this_ConjugationPart_4.current;
				afterParserOrEnumRuleCall();
			}
		)+
	)
;


// Rule SpecializationPart
ruleSpecializationPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':>'
			{
				newLeafNode(otherlv_0, grammarAccess.getSpecializationPartAccess().getColonGreaterThanSignKeyword_0_0());
			}
			    |
			otherlv_1='specializes'
			{
				newLeafNode(otherlv_1, grammarAccess.getSpecializationPartAccess().getSpecializesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationship_compOwnedGeneralizationParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleOwnedGeneralization
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedGeneralization");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSpecializationPartAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationship_compOwnedGeneralizationParserRuleCall_2_1_0());
					}
					lv_ownedRelationship_comp_4_0=ruleOwnedGeneralization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_4_0,
							"org.omg.kerml.xtext.KerML.OwnedGeneralization");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule ConjugationPart
ruleConjugationPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='~'
			{
				newLeafNode(otherlv_0, grammarAccess.getConjugationPartAccess().getTildeKeyword_0_0());
			}
			    |
			otherlv_1='conjugates'
			{
				newLeafNode(otherlv_1, grammarAccess.getConjugationPartAccess().getConjugatesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConjugationPartAccess().getOwnedRelationship_compOwnedConjugationParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleOwnedConjugation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConjugationPartRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedConjugation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultiplicityMember
entryRuleMultiplicityMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityMemberRule()); }
	iv_ruleMultiplicityMember=ruleMultiplicityMember
	{ $current=$iv_ruleMultiplicityMember.current; }
	EOF;

// Rule MultiplicityMember
ruleMultiplicityMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMultiplicityMemberAccess().getOwnedMemberElement_compMultiplicityParserRuleCall_0());
			}
			lv_ownedMemberElement_comp_0_0=ruleMultiplicity
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMultiplicityMemberRule());
				}
				set(
					$current,
					"ownedMemberElement_comp",
					lv_ownedMemberElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.Multiplicity");
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule TypeBody
ruleTypeBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeBodyAccess().getDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0());
						}
						lv_documentation_comp_2_0=ruleOwnedDocumentation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeBodyRule());
							}
							add(
								$current,
								"documentation_comp",
								lv_documentation_comp_2_0,
								"org.omg.kerml.xtext.KerML.OwnedDocumentation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedMembership_comp_3_0=ruleNonFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.NonFeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_2_0());
						}
						lv_ownedFeatureMembership_comp_4_0=ruleFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_4_0,
								"org.omg.kerml.xtext.KerML.FeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedImport_compImportParserRuleCall_1_1_3_0());
						}
						lv_ownedImport_comp_5_0=ruleImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeBodyRule());
							}
							add(
								$current,
								"ownedImport_comp",
								lv_ownedImport_comp_5_0,
								"org.omg.kerml.xtext.KerML.Import");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleNonFeatureTypeMember
entryRuleNonFeatureTypeMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonFeatureTypeMemberRule()); }
	iv_ruleNonFeatureTypeMember=ruleNonFeatureTypeMember
	{ $current=$iv_ruleNonFeatureTypeMember.current; }
	EOF;

// Rule NonFeatureTypeMember
ruleNonFeatureTypeMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getNonFeatureTypeMemberRule());
			}
			newCompositeNode(grammarAccess.getNonFeatureTypeMemberAccess().getTypeMemberPrefixParserRuleCall_0());
		}
		this_TypeMemberPrefix_0=ruleTypeMemberPrefix[$current]
		{
			$current = $this_TypeMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getNonFeatureTypeMemberRule());
			}
			newCompositeNode(grammarAccess.getNonFeatureTypeMemberAccess().getNonFeatureNamespaceMemberParserRuleCall_1());
		}
		this_NonFeatureNamespaceMember_1=ruleNonFeatureNamespaceMember[$current]
		{
			$current = $this_NonFeatureNamespaceMember_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeatureTypeMember
entryRuleFeatureTypeMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureTypeMemberRule()); }
	iv_ruleFeatureTypeMember=ruleFeatureTypeMember
	{ $current=$iv_ruleFeatureTypeMember.current; }
	EOF;

// Rule FeatureTypeMember
ruleFeatureTypeMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureTypeMemberAccess().getFeatureMemberParserRuleCall_0());
		}
		this_FeatureMember_0=ruleFeatureMember
		{
			$current = $this_FeatureMember_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureTypeMemberAccess().getEndFeatureMemberParserRuleCall_1());
		}
		this_EndFeatureMember_1=ruleEndFeatureMember
		{
			$current = $this_EndFeatureMember_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule TypeMemberPrefix
ruleTypeMemberPrefix[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=rulePrefixDocumentation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeMemberPrefixRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.PrefixDocumentation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_1_0());
				}
				lv_visibility_1_0=ruleVisibilityIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeMemberPrefixRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.omg.kerml.xtext.KerML.VisibilityIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleGeneralization
entryRuleGeneralization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralizationRule()); }
	iv_ruleGeneralization=ruleGeneralization
	{ $current=$iv_ruleGeneralization.current; }
	EOF;

// Rule Generalization
ruleGeneralization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='generalization'
			{
				newLeafNode(otherlv_0, grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0_0());
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationRule());
					}
					newCompositeNode(grammarAccess.getGeneralizationAccess().getIdentificationParserRuleCall_0_1());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
		)?
		otherlv_2='subtype'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneralizationAccess().getSubtypeKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationAccess().getSpecificTypeCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':>'
			{
				newLeafNode(otherlv_4, grammarAccess.getGeneralizationAccess().getColonGreaterThanSignKeyword_3_0());
			}
			    |
			otherlv_5='specializes'
			{
				newLeafNode(otherlv_5, grammarAccess.getGeneralizationAccess().getSpecializesKeyword_3_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationAccess().getGeneralTypeCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getGeneralizationAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOwnedGeneralization
entryRuleOwnedGeneralization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedGeneralizationRule()); }
	iv_ruleOwnedGeneralization=ruleOwnedGeneralization
	{ $current=$iv_ruleOwnedGeneralization.current; }
	EOF;

// Rule OwnedGeneralization
ruleOwnedGeneralization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedGeneralizationRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getOwnedGeneralizationAccess().getGeneralTypeCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConjugation
entryRuleConjugation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConjugationRule()); }
	iv_ruleConjugation=ruleConjugation
	{ $current=$iv_ruleConjugation.current; }
	EOF;

// Rule Conjugation
ruleConjugation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='conjugation'
		{
			newLeafNode(otherlv_0, grammarAccess.getConjugationAccess().getConjugationKeyword_0());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConjugationRule());
				}
				newCompositeNode(grammarAccess.getConjugationAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getConjugationAccess().getTypeKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConjugationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConjugationAccess().getConjugatedTypeTypeCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='~'
			{
				newLeafNode(otherlv_4, grammarAccess.getConjugationAccess().getTildeKeyword_4_0());
			}
			    |
			otherlv_5='conjugates'
			{
				newLeafNode(otherlv_5, grammarAccess.getConjugationAccess().getConjugatesKeyword_4_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConjugationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConjugationAccess().getOriginalTypeTypeCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getConjugationAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleOwnedConjugation
entryRuleOwnedConjugation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedConjugationRule()); }
	iv_ruleOwnedConjugation=ruleOwnedConjugation
	{ $current=$iv_ruleOwnedConjugation.current; }
	EOF;

// Rule OwnedConjugation
ruleOwnedConjugation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedConjugationRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFeatureMember
entryRuleFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureMemberRule()); }
	iv_ruleFeatureMember=ruleFeatureMember
	{ $current=$iv_ruleFeatureMember.current; }
	EOF;

// Rule FeatureMember
ruleFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureMemberRule());
			}
			newCompositeNode(grammarAccess.getFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0());
		}
		this_TypeMemberPrefix_0=ruleTypeMemberPrefix[$current]
		{
			$current = $this_TypeMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureMemberRule());
			}
			newCompositeNode(grammarAccess.getFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1());
		}
		this_FeatureMemberFlags_1=ruleFeatureMemberFlags[$current]
		{
			$current = $this_FeatureMemberFlags_1.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedMemberFeature_compFeatureElementParserRuleCall_2_0_0());
					}
					lv_ownedMemberFeature_comp_2_0=ruleFeatureElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_2_0,
							"org.omg.kerml.xtext.KerML.FeatureElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					otherlv_3='feature'
					{
						newLeafNode(otherlv_3, grammarAccess.getFeatureMemberAccess().getFeatureKeyword_2_1_0());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberNameNameParserRuleCall_2_1_1_0());
						}
						lv_memberName_4_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFeatureMemberRule());
							}
							set(
								$current,
								"memberName",
								lv_memberName_4_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_5='is'
				{
					newLeafNode(otherlv_5, grammarAccess.getFeatureMemberAccess().getIsKeyword_2_1_2());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFeatureMemberRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getFeatureMemberAccess().getMemberFeatureFeatureCrossReference_2_1_3_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getFeatureMemberAccess().getSemicolonKeyword_2_1_4());
				}
			)
		)
	)
;

// Entry rule entryRuleEndFeatureMember
entryRuleEndFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndFeatureMemberRule()); }
	iv_ruleEndFeatureMember=ruleEndFeatureMember
	{ $current=$iv_ruleEndFeatureMember.current; }
	EOF;

// Rule EndFeatureMember
ruleEndFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getEndFeatureMemberRule());
			}
			newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0());
		}
		this_TypeMemberPrefix_0=ruleTypeMemberPrefix[$current]
		{
			$current = $this_TypeMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1='end'
		{
			newLeafNode(otherlv_1, grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getEndFeatureMemberRule());
			}
			newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_2());
		}
		this_FeatureMemberFlags_2=ruleFeatureMemberFlags[$current]
		{
			$current = $this_FeatureMemberFlags_2.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getOwnedMemberFeature_compFeatureElementParserRuleCall_3_0());
				}
				lv_ownedMemberFeature_comp_3_0=ruleFeatureElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEndFeatureMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_3_0,
						"org.omg.kerml.xtext.KerML.FeatureElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule FeatureMemberFlags
ruleFeatureMemberFlags[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureMemberFlagsAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
				}
				lv_direction_0_0=ruleFeatureDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureMemberFlagsRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"org.omg.kerml.xtext.KerML.FeatureDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					lv_isComposite_1_0='composite'
					{
						newLeafNode(lv_isComposite_1_0, grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureMemberFlagsRule());
						}
						setWithLastConsumed($current, "isComposite", lv_isComposite_1_0 != null, "composite");
					}
				)
			)
			    |
			(
				(
					lv_isPortion_2_0='portion'
					{
						newLeafNode(lv_isPortion_2_0, grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureMemberFlagsRule());
						}
						setWithLastConsumed($current, "isPortion", lv_isPortion_2_0 != null, "portion");
					}
				)
			)
		)?
		(
			(
				lv_isPort_3_0='port'
				{
					newLeafNode(lv_isPort_3_0, grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureMemberFlagsRule());
					}
					setWithLastConsumed($current, "isPort", lv_isPort_3_0 != null, "port");
				}
			)
		)?
	)
;

// Entry rule entryRuleClassifier
entryRuleClassifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRule()); }
	iv_ruleClassifier=ruleClassifier
	{ $current=$iv_ruleClassifier.current; }
	EOF;

// Rule Classifier
ruleClassifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassifierAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='classifier'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassifierAccess().getClassifierKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierRule());
			}
			newCompositeNode(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_2());
		}
		this_ClassifierDeclaration_2=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierRule());
			}
			newCompositeNode(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ClassifierDeclaration
ruleClassifierDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", lv_isSufficient_0_0 != null, "all");
				}
			)
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassifierDeclarationRule());
				}
				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getIdentificationParserRuleCall_1());
			}
			this_Identification_1=ruleIdentification[$current]
			{
				$current = $this_Identification_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getOwnedMembership_compMultiplicityMemberParserRuleCall_2_0());
				}
				lv_ownedMembership_comp_2_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierDeclarationRule());
					}
					add(
						$current,
						"ownedMembership_comp",
						lv_ownedMembership_comp_2_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassifierDeclarationRule());
				}
				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getSuperclassingPartParserRuleCall_3_0());
			}
			this_SuperclassingPart_3=ruleSuperclassingPart[$current]
			{
				$current = $this_SuperclassingPart_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassifierDeclarationRule());
				}
				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getClassifierConjugationPartParserRuleCall_3_1());
			}
			this_ClassifierConjugationPart_4=ruleClassifierConjugationPart[$current]
			{
				$current = $this_ClassifierConjugationPart_4.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule SuperclassingPart
ruleSuperclassingPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':>'
			{
				newLeafNode(otherlv_0, grammarAccess.getSuperclassingPartAccess().getColonGreaterThanSignKeyword_0_0());
			}
			    |
			otherlv_1='specializes'
			{
				newLeafNode(otherlv_1, grammarAccess.getSuperclassingPartAccess().getSpecializesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationship_compOwnedSuperclassingParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleOwnedSuperclassing
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedSuperclassing");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSuperclassingPartAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationship_compOwnedSuperclassingParserRuleCall_2_1_0());
					}
					lv_ownedRelationship_comp_4_0=ruleOwnedSuperclassing
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_4_0,
							"org.omg.kerml.xtext.KerML.OwnedSuperclassing");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule ClassifierConjugationPart
ruleClassifierConjugationPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='~'
			{
				newLeafNode(otherlv_0, grammarAccess.getClassifierConjugationPartAccess().getTildeKeyword_0_0());
			}
			    |
			otherlv_1='conjugates'
			{
				newLeafNode(otherlv_1, grammarAccess.getClassifierConjugationPartAccess().getConjugatesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationship_compClassifierConjugationParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleClassifierConjugation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierConjugationPartRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.ClassifierConjugation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSuperclassing
entryRuleSuperclassing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuperclassingRule()); }
	iv_ruleSuperclassing=ruleSuperclassing
	{ $current=$iv_ruleSuperclassing.current; }
	EOF;

// Rule Superclassing
ruleSuperclassing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='generalization'
			{
				newLeafNode(otherlv_0, grammarAccess.getSuperclassingAccess().getGeneralizationKeyword_0_0());
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSuperclassingRule());
					}
					newCompositeNode(grammarAccess.getSuperclassingAccess().getIdentificationParserRuleCall_0_1());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
		)?
		otherlv_2='subclass'
		{
			newLeafNode(otherlv_2, grammarAccess.getSuperclassingAccess().getSubclassKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSuperclassingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSuperclassingAccess().getSubclassClassifierCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':>'
			{
				newLeafNode(otherlv_4, grammarAccess.getSuperclassingAccess().getColonGreaterThanSignKeyword_3_0());
			}
			    |
			otherlv_5='specializes'
			{
				newLeafNode(otherlv_5, grammarAccess.getSuperclassingAccess().getSpecializesKeyword_3_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSuperclassingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSuperclassingAccess().getSuperclassClassifierCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSuperclassingAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOwnedSuperclassing
entryRuleOwnedSuperclassing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedSuperclassingRule()); }
	iv_ruleOwnedSuperclassing=ruleOwnedSuperclassing
	{ $current=$iv_ruleOwnedSuperclassing.current; }
	EOF;

// Rule OwnedSuperclassing
ruleOwnedSuperclassing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedSuperclassingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getOwnedSuperclassingAccess().getSuperclassClassifierCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleClassifierConjugation
entryRuleClassifierConjugation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierConjugationRule()); }
	iv_ruleClassifierConjugation=ruleClassifierConjugation
	{ $current=$iv_ruleClassifierConjugation.current; }
	EOF;

// Rule ClassifierConjugation
ruleClassifierConjugation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassifierConjugationRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFeatureAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		(
			(
				(
					otherlv_1='feature'
					{
						newLeafNode(otherlv_1, grammarAccess.getFeatureAccess().getFeatureKeyword_1_0_0());
					}
				)?
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureRule());
					}
					newCompositeNode(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_1_0_1());
				}
				this_FeatureDeclaration_2=ruleFeatureDeclaration[$current]
				{
					$current = $this_FeatureDeclaration_2.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			otherlv_3='feature'
			{
				newLeafNode(otherlv_3, grammarAccess.getFeatureAccess().getFeatureKeyword_1_1());
			}
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureRule());
				}
				newCompositeNode(grammarAccess.getFeatureAccess().getValuePartParserRuleCall_2());
			}
			this_ValuePart_4=ruleValuePart[$current]
			{
				$current = $this_ValuePart_4.current;
				afterParserOrEnumRuleCall();
			}
		)?
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureRule());
			}
			newCompositeNode(grammarAccess.getFeatureAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_5=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule FeatureDeclaration
ruleFeatureDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", lv_isSufficient_0_0 != null, "all");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
					}
					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getIdentificationParserRuleCall_1_0_0());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
						}
						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_0_1_0());
					}
					this_FeatureSpecializationPart_2=ruleFeatureSpecializationPart[$current]
					{
						$current = $this_FeatureSpecializationPart_2.current;
						afterParserOrEnumRuleCall();
					}
					    |
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
						}
						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1());
					}
					this_FeatureConjugationPart_3=ruleFeatureConjugationPart[$current]
					{
						$current = $this_FeatureConjugationPart_3.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
				}
				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_1());
			}
			this_FeatureSpecializationPart_4=ruleFeatureSpecializationPart[$current]
			{
				$current = $this_FeatureSpecializationPart_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
				}
				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_2());
			}
			this_FeatureConjugationPart_5=ruleFeatureConjugationPart[$current]
			{
				$current = $this_FeatureConjugationPart_5.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
				}
				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getTypeFeaturingPartParserRuleCall_2());
			}
			this_TypeFeaturingPart_6=ruleTypeFeaturingPart[$current]
			{
				$current = $this_TypeFeaturingPart_6.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule TypeFeaturingPart
ruleTypeFeaturingPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='featured'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingPartAccess().getFeaturedKeyword_0());
		}
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeFeaturingPartAccess().getByKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationship_compOwnedTypeFeaturingParserRuleCall_2_0());
				}
				lv_ownedRelationship_comp_2_0=ruleOwnedTypeFeaturing
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeFeaturingPartAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationship_compOwnedTypeFeaturingParserRuleCall_3_1_0());
					}
					lv_ownedRelationship_comp_4_0=ruleOwnedTypeFeaturing
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_4_0,
							"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule FeatureSpecializationPart
ruleFeatureSpecializationPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines')=>
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0());
				}
				this_FeatureSpecialization_0=ruleFeatureSpecialization[$current]
				{
					$current = $this_FeatureSpecialization_0.current;
					afterParserOrEnumRuleCall();
				}
			)+
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1());
				}
				this_MultiplicityPart_1=ruleMultiplicityPart[$current]
				{
					$current = $this_MultiplicityPart_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_2());
				}
				this_FeatureSpecialization_2=ruleFeatureSpecialization[$current]
				{
					$current = $this_FeatureSpecialization_2.current;
					afterParserOrEnumRuleCall();
				}
			)*
		)
		    |
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
				}
				newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0());
			}
			this_MultiplicityPart_3=ruleMultiplicityPart[$current]
			{
				$current = $this_MultiplicityPart_3.current;
				afterParserOrEnumRuleCall();
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_1_1());
				}
				this_FeatureSpecialization_4=ruleFeatureSpecialization[$current]
				{
					$current = $this_FeatureSpecialization_4.current;
					afterParserOrEnumRuleCall();
				}
			)*
		)
	)
;


// Rule MultiplicityPart
ruleMultiplicityPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedMembership_compMultiplicityMemberParserRuleCall_0_0());
				}
				lv_ownedMembership_comp_0_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
					}
					add(
						$current,
						"ownedMembership_comp",
						lv_ownedMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						lv_isOrdered_1_0='ordered'
						{
							newLeafNode(lv_isOrdered_1_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicityPartRule());
							}
							setWithLastConsumed($current, "isOrdered", lv_isOrdered_1_0 != null, "ordered");
						}
					)
				)
				(
					(
						lv_isNonunique_2_0='nonunique'
						{
							newLeafNode(lv_isNonunique_2_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicityPartRule());
							}
							setWithLastConsumed($current, "isNonunique", lv_isNonunique_2_0 != null, "nonunique");
						}
					)
				)?
			)
			    |
			(
				(
					(
						lv_isNonunique_3_0='nonunique'
						{
							newLeafNode(lv_isNonunique_3_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicityPartRule());
							}
							setWithLastConsumed($current, "isNonunique", lv_isNonunique_3_0 != null, "nonunique");
						}
					)
				)
				(
					(
						lv_isOrdered_4_0='ordered'
						{
							newLeafNode(lv_isOrdered_4_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicityPartRule());
							}
							setWithLastConsumed($current, "isOrdered", lv_isOrdered_4_0 != null, "ordered");
						}
					)
				)?
			)
		)?
	)
;


// Rule FeatureSpecialization
ruleFeatureSpecialization[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureSpecializationRule());
			}
			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getTypingsParserRuleCall_0());
		}
		this_Typings_0=ruleTypings[$current]
		{
			$current = $this_Typings_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureSpecializationRule());
			}
			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getSubsettingsParserRuleCall_1());
		}
		this_Subsettings_1=ruleSubsettings[$current]
		{
			$current = $this_Subsettings_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureSpecializationRule());
			}
			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getRedefinitionsParserRuleCall_2());
		}
		this_Redefinitions_2=ruleRedefinitions[$current]
		{
			$current = $this_Redefinitions_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule Typings
ruleTypings[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getTypingsRule());
			}
			newCompositeNode(grammarAccess.getTypingsAccess().getTypedByParserRuleCall_0());
		}
		this_TypedBy_0=ruleTypedBy[$current]
		{
			$current = $this_TypedBy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getTypingsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypingsAccess().getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0());
					}
					lv_ownedRelationship_comp_2_0=ruleOwnedFeatureTyping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypingsRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_2_0,
							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule TypedBy
ruleTypedBy[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':'
			{
				newLeafNode(otherlv_0, grammarAccess.getTypedByAccess().getColonKeyword_0_0());
			}
			    |
			(
				otherlv_1='typed'
				{
					newLeafNode(otherlv_1, grammarAccess.getTypedByAccess().getTypedKeyword_0_1_0());
				}
				otherlv_2='by'
				{
					newLeafNode(otherlv_2, grammarAccess.getTypedByAccess().getByKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedByAccess().getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_3_0=ruleOwnedFeatureTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedByRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_3_0,
						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule Subsettings
ruleSubsettings[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSubsettingsRule());
			}
			newCompositeNode(grammarAccess.getSubsettingsAccess().getSubsetsParserRuleCall_0());
		}
		this_Subsets_0=ruleSubsets[$current]
		{
			$current = $this_Subsets_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getSubsettingsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubsettingsAccess().getOwnedRelationship_compOwnedSubsettingParserRuleCall_1_1_0());
					}
					lv_ownedRelationship_comp_2_0=ruleOwnedSubsetting
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubsettingsRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_2_0,
							"org.omg.kerml.xtext.KerML.OwnedSubsetting");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Subsets
ruleSubsets[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':>'
			{
				newLeafNode(otherlv_0, grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0());
			}
			    |
			otherlv_1='subsets'
			{
				newLeafNode(otherlv_1, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubsetsAccess().getOwnedRelationship_compOwnedSubsettingParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleOwnedSubsetting
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubsetsRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedSubsetting");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule Redefinitions
ruleRedefinitions[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getRedefinitionsRule());
			}
			newCompositeNode(grammarAccess.getRedefinitionsAccess().getRedefinesParserRuleCall_0());
		}
		this_Redefines_0=ruleRedefines[$current]
		{
			$current = $this_Redefines_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRedefinitionsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRedefinitionsAccess().getOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_1_0());
					}
					lv_ownedRelationship_comp_2_0=ruleOwnedRedefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRedefinitionsRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_2_0,
							"org.omg.kerml.xtext.KerML.OwnedRedefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Redefines
ruleRedefines[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':>>'
			{
				newLeafNode(otherlv_0, grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0());
			}
			    |
			otherlv_1='redefines'
			{
				newLeafNode(otherlv_1, grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRedefinesAccess().getOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleOwnedRedefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRedefinesRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeFeaturing
entryRuleTypeFeaturing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeFeaturingRule()); }
	iv_ruleTypeFeaturing=ruleTypeFeaturing
	{ $current=$iv_ruleTypeFeaturing.current; }
	EOF;

// Rule TypeFeaturing
ruleTypeFeaturing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='featuring'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingAccess().getFeaturingKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeFeaturingRule());
					}
					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getIdentificationParserRuleCall_1_0());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
			otherlv_2='of'
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeFeaturingAccess().getOfKeyword_1_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeFeaturingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='by'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeFeaturingAccess().getByKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeFeaturingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeFeaturingAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOwnedTypeFeaturing
entryRuleOwnedTypeFeaturing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedTypeFeaturingRule()); }
	iv_ruleOwnedTypeFeaturing=ruleOwnedTypeFeaturing
	{ $current=$iv_ruleOwnedTypeFeaturing.current; }
	EOF;

// Rule OwnedTypeFeaturing
ruleOwnedTypeFeaturing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedTypeFeaturingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFeatureTyping
entryRuleFeatureTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureTypingRule()); }
	iv_ruleFeatureTyping=ruleFeatureTyping
	{ $current=$iv_ruleFeatureTyping.current; }
	EOF;

// Rule FeatureTyping
ruleFeatureTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='generalization'
			{
				newLeafNode(otherlv_0, grammarAccess.getFeatureTypingAccess().getGeneralizationKeyword_0_0());
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureTypingRule());
					}
					newCompositeNode(grammarAccess.getFeatureTypingAccess().getIdentificationParserRuleCall_0_1());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
		)?
		otherlv_2='typing'
		{
			newLeafNode(otherlv_2, grammarAccess.getFeatureTypingAccess().getTypingKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureTypingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getFeatureTypingAccess().getColonKeyword_3_0());
			}
			    |
			(
				otherlv_5='typed'
				{
					newLeafNode(otherlv_5, grammarAccess.getFeatureTypingAccess().getTypedKeyword_3_1_0());
				}
				otherlv_6='by'
				{
					newLeafNode(otherlv_6, grammarAccess.getFeatureTypingAccess().getByKeyword_3_1_1());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureTypingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFeatureTypingAccess().getTypeFeatureCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getFeatureTypingAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOwnedFeatureTyping
entryRuleOwnedFeatureTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedFeatureTypingRule()); }
	iv_ruleOwnedFeatureTyping=ruleOwnedFeatureTyping
	{ $current=$iv_ruleOwnedFeatureTyping.current; }
	EOF;

// Rule OwnedFeatureTyping
ruleOwnedFeatureTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedFeatureTypingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getOwnedFeatureTypingAccess().getTypeTypeCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSubsetting
entryRuleSubsetting returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubsettingRule()); }
	iv_ruleSubsetting=ruleSubsetting
	{ $current=$iv_ruleSubsetting.current; }
	EOF;

// Rule Subsetting
ruleSubsetting returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='generalization'
			{
				newLeafNode(otherlv_0, grammarAccess.getSubsettingAccess().getGeneralizationKeyword_0_0());
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubsettingRule());
					}
					newCompositeNode(grammarAccess.getSubsettingAccess().getIdentificationParserRuleCall_0_1());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
		)?
		otherlv_2='subset'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubsettingAccess().getSubsetKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubsettingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':>'
			{
				newLeafNode(otherlv_4, grammarAccess.getSubsettingAccess().getColonGreaterThanSignKeyword_3_0());
			}
			    |
			otherlv_5='subsets'
			{
				newLeafNode(otherlv_5, grammarAccess.getSubsettingAccess().getSubsetsKeyword_3_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubsettingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSubsettingAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOwnedSubsetting
entryRuleOwnedSubsetting returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedSubsettingRule()); }
	iv_ruleOwnedSubsetting=ruleOwnedSubsetting
	{ $current=$iv_ruleOwnedSubsetting.current; }
	EOF;

// Rule OwnedSubsetting
ruleOwnedSubsetting returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedSubsettingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRedefinition
entryRuleRedefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRedefinitionRule()); }
	iv_ruleRedefinition=ruleRedefinition
	{ $current=$iv_ruleRedefinition.current; }
	EOF;

// Rule Redefinition
ruleRedefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='generalization'
			{
				newLeafNode(otherlv_0, grammarAccess.getRedefinitionAccess().getGeneralizationKeyword_0_0());
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRedefinitionRule());
					}
					newCompositeNode(grammarAccess.getRedefinitionAccess().getIdentificationParserRuleCall_0_1());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
		)?
		otherlv_2='redefinition'
		{
			newLeafNode(otherlv_2, grammarAccess.getRedefinitionAccess().getRedefinitionKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRedefinitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':>>'
			{
				newLeafNode(otherlv_4, grammarAccess.getRedefinitionAccess().getColonGreaterThanSignGreaterThanSignKeyword_3_0());
			}
			    |
			otherlv_5='redefines'
			{
				newLeafNode(otherlv_5, grammarAccess.getRedefinitionAccess().getRedefinesKeyword_3_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRedefinitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getRedefinitionAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOwnedRedefinition
entryRuleOwnedRedefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedRedefinitionRule()); }
	iv_ruleOwnedRedefinition=ruleOwnedRedefinition
	{ $current=$iv_ruleOwnedRedefinition.current; }
	EOF;

// Rule OwnedRedefinition
ruleOwnedRedefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOwnedRedefinitionRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule FeatureConjugationPart
ruleFeatureConjugationPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='~'
			{
				newLeafNode(otherlv_0, grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0());
			}
			    |
			otherlv_1='conjugates'
			{
				newLeafNode(otherlv_1, grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationship_compFeatureConjugationParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleFeatureConjugation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureConjugationPartRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.FeatureConjugation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFeatureConjugation
entryRuleFeatureConjugation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureConjugationRule()); }
	iv_ruleFeatureConjugation=ruleFeatureConjugation
	{ $current=$iv_ruleFeatureConjugation.current; }
	EOF;

// Rule FeatureConjugation
ruleFeatureConjugation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureConjugationRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule ValuePart
ruleValuePart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getValuePartAccess().getEqualsSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValuePartAccess().getOwnedMembership_compFeatureValueParserRuleCall_1_0());
				}
				lv_ownedMembership_comp_1_0=ruleFeatureValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValuePartRule());
					}
					add(
						$current,
						"ownedMembership_comp",
						lv_ownedMembership_comp_1_0,
						"org.omg.kerml.xtext.KerML.FeatureValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFeatureValue
entryRuleFeatureValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureValueRule()); }
	iv_ruleFeatureValue=ruleFeatureValue
	{ $current=$iv_ruleFeatureValue.current; }
	EOF;

// Rule FeatureValue
ruleFeatureValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFeatureValueAccess().getValue_compOwnedExpressionParserRuleCall_0());
			}
			lv_value_comp_0_0=ruleOwnedExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFeatureValueRule());
				}
				set(
					$current,
					"value_comp",
					lv_value_comp_0_0,
					"org.omg.kerml.xtext.KerML.OwnedExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityRule()); }
	iv_ruleMultiplicity=ruleMultiplicity
	{ $current=$iv_ruleMultiplicity.current; }
	EOF;

// Rule Multiplicity
ruleMultiplicity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicityAccess().getOwnedMembership_compLiteralIntegerMemberParserRuleCall_1_0_0());
					}
					lv_ownedMembership_comp_1_0=ruleLiteralIntegerMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicityRule());
						}
						add(
							$current,
							"ownedMembership_comp",
							lv_ownedMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.LiteralIntegerMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='..'
			{
				newLeafNode(otherlv_2, grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicityAccess().getOwnedMembership_compLiteralUnlimitedNaturalMemberParserRuleCall_2_0());
				}
				lv_ownedMembership_comp_3_0=ruleLiteralUnlimitedNaturalMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicityRule());
					}
					add(
						$current,
						"ownedMembership_comp",
						lv_ownedMembership_comp_3_0,
						"org.omg.kerml.xtext.KerML.LiteralUnlimitedNaturalMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleLiteralIntegerMember
entryRuleLiteralIntegerMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralIntegerMemberRule()); }
	iv_ruleLiteralIntegerMember=ruleLiteralIntegerMember
	{ $current=$iv_ruleLiteralIntegerMember.current; }
	EOF;

// Rule LiteralIntegerMember
ruleLiteralIntegerMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralIntegerMemberAccess().getOwnedMemberElement_compLiteralIntegerParserRuleCall_0());
			}
			lv_ownedMemberElement_comp_0_0=ruleLiteralInteger
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLiteralIntegerMemberRule());
				}
				set(
					$current,
					"ownedMemberElement_comp",
					lv_ownedMemberElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.LiteralInteger");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLiteralUnlimitedNaturalMember
entryRuleLiteralUnlimitedNaturalMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralUnlimitedNaturalMemberRule()); }
	iv_ruleLiteralUnlimitedNaturalMember=ruleLiteralUnlimitedNaturalMember
	{ $current=$iv_ruleLiteralUnlimitedNaturalMember.current; }
	EOF;

// Rule LiteralUnlimitedNaturalMember
ruleLiteralUnlimitedNaturalMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralUnlimitedNaturalMemberAccess().getOwnedMemberElement_compLiteralUnlimitedNaturalParserRuleCall_0());
			}
			lv_ownedMemberElement_comp_0_0=ruleLiteralUnlimitedNatural
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLiteralUnlimitedNaturalMemberRule());
				}
				set(
					$current,
					"ownedMemberElement_comp",
					lv_ownedMemberElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.LiteralUnlimitedNatural");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getDataTypeAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='datatype'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getDatatypeKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeRule());
			}
			newCompositeNode(grammarAccess.getDataTypeAccess().getClassifierDeclarationParserRuleCall_2());
		}
		this_ClassifierDeclaration_2=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeRule());
			}
			newCompositeNode(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	iv_ruleClass=ruleClass
	{ $current=$iv_ruleClass.current; }
	EOF;

// Rule Class
ruleClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='class'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassAccess().getClassKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassRule());
			}
			newCompositeNode(grammarAccess.getClassAccess().getClassifierDeclarationParserRuleCall_2());
		}
		this_ClassifierDeclaration_2=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassRule());
			}
			newCompositeNode(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssociation
entryRuleAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationRule()); }
	iv_ruleAssociation=ruleAssociation
	{ $current=$iv_ruleAssociation.current; }
	EOF;

// Rule Association
ruleAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='assoc'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssociationAccess().getAssocKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationRule());
			}
			newCompositeNode(grammarAccess.getAssociationAccess().getClassifierDeclarationParserRuleCall_2());
		}
		this_ClassifierDeclaration_2=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationRule());
			}
			newCompositeNode(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConnector
entryRuleConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorRule()); }
	iv_ruleConnector=ruleConnector
	{ $current=$iv_ruleConnector.current; }
	EOF;

// Rule Connector
ruleConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getConnectorAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='connector'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectorAccess().getConnectorKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getConnectorRule());
			}
			newCompositeNode(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_2());
		}
		this_ConnectorDeclaration_2=ruleConnectorDeclaration[$current]
		{
			$current = $this_ConnectorDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getConnectorRule());
			}
			newCompositeNode(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ConnectorDeclaration
ruleConnectorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getConnectorDeclarationRule());
			}
			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getBinaryConnectorDeclarationParserRuleCall_0());
		}
		this_BinaryConnectorDeclaration_0=ruleBinaryConnectorDeclaration[$current]
		{
			$current = $this_BinaryConnectorDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getConnectorDeclarationRule());
			}
			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getNaryConnectorDeclarationParserRuleCall_1());
		}
		this_NaryConnectorDeclaration_1=ruleNaryConnectorDeclaration[$current]
		{
			$current = $this_NaryConnectorDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule BinaryConnectorDeclaration
ruleBinaryConnectorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
					}
					this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
					{
						$current = $this_FeatureDeclaration_0.current;
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_1='from'
				{
					newLeafNode(otherlv_1, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						lv_isSufficient_2_0='all'
						{
							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
							}
							setWithLastConsumed($current, "isSufficient", lv_isSufficient_2_0 != null, "all");
						}
					)
				)
				(
					otherlv_3='from'
					{
						newLeafNode(otherlv_3, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_1_1());
					}
				)?
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_4_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_4_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getBinaryConnectorDeclarationAccess().getToKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_6_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_6_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule NaryConnectorDeclaration
ruleNaryConnectorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNaryConnectorDeclarationRule());
				}
				newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
			}
			this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
			{
				$current = $this_FeatureDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getNaryConnectorDeclarationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0());
				}
				lv_ownedFeatureMembership_comp_2_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_2_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_4_0());
				}
				lv_ownedFeatureMembership_comp_4_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_4_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_5_1_0());
					}
					lv_ownedFeatureMembership_comp_6_0=ruleConnectorEndMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_6_0,
							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getNaryConnectorDeclarationAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleConnectorEndMember
entryRuleConnectorEndMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorEndMemberRule()); }
	iv_ruleConnectorEndMember=ruleConnectorEndMember
	{ $current=$iv_ruleConnectorEndMember.current; }
	EOF;

// Rule ConnectorEndMember
ruleConnectorEndMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getMemberNameNameParserRuleCall_0_0_0());
					}
					lv_memberName_0_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
						}
						set(
							$current,
							"memberName",
							lv_memberName_0_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='=>'
			{
				newLeafNode(otherlv_1, grammarAccess.getConnectorEndMemberAccess().getEqualsSignGreaterThanSignKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getOwnedMemberFeature_compConnectorEndParserRuleCall_1_0());
				}
				lv_ownedMemberFeature_comp_2_0=ruleConnectorEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_2_0,
						"org.omg.kerml.xtext.KerML.ConnectorEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConnectorEnd
entryRuleConnectorEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorEndRule()); }
	iv_ruleConnectorEnd=ruleConnectorEnd
	{ $current=$iv_ruleConnectorEnd.current; }
	EOF;

// Rule ConnectorEnd
ruleConnectorEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=ruleOwnedSubsetting
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorEndRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.OwnedSubsetting");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedMembership_compMultiplicityMemberParserRuleCall_1_0());
				}
				lv_ownedMembership_comp_1_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorEndRule());
					}
					add(
						$current,
						"ownedMembership_comp",
						lv_ownedMembership_comp_1_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleBindingConnector
entryRuleBindingConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingConnectorRule()); }
	iv_ruleBindingConnector=ruleBindingConnector
	{ $current=$iv_ruleBindingConnector.current; }
	EOF;

// Rule BindingConnector
ruleBindingConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getBindingConnectorAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingConnectorRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='binding'
		{
			newLeafNode(otherlv_1, grammarAccess.getBindingConnectorAccess().getBindingKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBindingConnectorRule());
			}
			newCompositeNode(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_2());
		}
		this_BindingConnectorDeclaration_2=ruleBindingConnectorDeclaration[$current]
		{
			$current = $this_BindingConnectorDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBindingConnectorRule());
			}
			newCompositeNode(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule BindingConnectorDeclaration
ruleBindingConnectorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
					}
					this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
					{
						$current = $this_FeatureDeclaration_0.current;
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_1='of'
				{
					newLeafNode(otherlv_1, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						lv_isSufficient_2_0='all'
						{
							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
							}
							setWithLastConsumed($current, "isSufficient", lv_isSufficient_2_0 != null, "all");
						}
					)
				)
				(
					otherlv_3='of'
					{
						newLeafNode(otherlv_3, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1());
					}
				)?
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_4_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_4_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_6_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_6_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSuccession
entryRuleSuccession returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuccessionRule()); }
	iv_ruleSuccession=ruleSuccession
	{ $current=$iv_ruleSuccession.current; }
	EOF;

// Rule Succession
ruleSuccession returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getSuccessionAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSuccessionRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='succession'
		{
			newLeafNode(otherlv_1, grammarAccess.getSuccessionAccess().getSuccessionKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionRule());
			}
			newCompositeNode(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_2());
		}
		this_SuccessionDeclaration_2=ruleSuccessionDeclaration[$current]
		{
			$current = $this_SuccessionDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionRule());
			}
			newCompositeNode(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule SuccessionDeclaration
ruleSuccessionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
					}
					this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
					{
						$current = $this_FeatureDeclaration_0.current;
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_1='first'
				{
					newLeafNode(otherlv_1, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						lv_isSufficient_2_0='all'
						{
							newLeafNode(lv_isSufficient_2_0, grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
							}
							setWithLastConsumed($current, "isSufficient", lv_isSufficient_2_0 != null, "all");
						}
					)
				)
				(
					otherlv_3='first'
					{
						newLeafNode(otherlv_3, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1());
					}
				)?
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_4_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_4_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='then'
		{
			newLeafNode(otherlv_5, grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_6_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_6_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBehavior
entryRuleBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorRule()); }
	iv_ruleBehavior=ruleBehavior
	{ $current=$iv_ruleBehavior.current; }
	EOF;

// Rule Behavior
ruleBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getBehaviorAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBehaviorRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='behavior'
		{
			newLeafNode(otherlv_1, grammarAccess.getBehaviorAccess().getBehaviorKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorRule());
			}
			newCompositeNode(grammarAccess.getBehaviorAccess().getBehaviorDeclarationParserRuleCall_2());
		}
		this_BehaviorDeclaration_2=ruleBehaviorDeclaration[$current]
		{
			$current = $this_BehaviorDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorRule());
			}
			newCompositeNode(grammarAccess.getBehaviorAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule BehaviorDeclaration
ruleBehaviorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorDeclarationRule());
			}
			newCompositeNode(grammarAccess.getBehaviorDeclarationAccess().getClassifierDeclarationParserRuleCall_0());
		}
		this_ClassifierDeclaration_0=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBehaviorDeclarationRule());
				}
				newCompositeNode(grammarAccess.getBehaviorDeclarationAccess().getParameterListParserRuleCall_1());
			}
			this_ParameterList_1=ruleParameterList[$current]
			{
				$current = $this_ParameterList_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule ParameterList
ruleParameterList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0());
					}
					lv_ownedFeatureMembership_comp_1_0=ruleParameterMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.ParameterMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleParameterMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterListRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.ParameterMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleParameterMember
entryRuleParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterMemberRule()); }
	iv_ruleParameterMember=ruleParameterMember
	{ $current=$iv_ruleParameterMember.current; }
	EOF;

// Rule ParameterMember
ruleParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
				}
				lv_direction_0_0=ruleFeatureDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterMemberRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"org.omg.kerml.xtext.KerML.FeatureDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_1_0());
				}
				lv_ownedMemberParameter_comp_1_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterMemberRule());
					}
					set(
						$current,
						"ownedMemberParameter_comp",
						lv_ownedMemberParameter_comp_1_0,
						"org.omg.kerml.xtext.KerML.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='feature'
				{
					newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getFeatureKeyword_0_0());
				}
			)?
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterRule());
				}
				newCompositeNode(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_0_1());
			}
			this_ParameterDeclaration_1=ruleParameterDeclaration[$current]
			{
				$current = $this_ParameterDeclaration_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getParameterAccess().getStepAction_1_0(),
						$current);
				}
			)
			otherlv_3='step'
			{
				newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getStepKeyword_1_1());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterRule());
				}
				newCompositeNode(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_1_2());
			}
			this_ParameterDeclaration_4=ruleParameterDeclaration[$current]
			{
				$current = $this_ParameterDeclaration_4.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getParameterAccess().getExpressionAction_2_0(),
						$current);
				}
			)
			otherlv_6='expr'
			{
				newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getExprKeyword_2_1());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterRule());
				}
				newCompositeNode(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_2_2());
			}
			this_ParameterDeclaration_7=ruleParameterDeclaration[$current]
			{
				$current = $this_ParameterDeclaration_7.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getParameterAccess().getBooleanExpressionAction_3_0(),
						$current);
				}
			)
			otherlv_9='bool'
			{
				newLeafNode(otherlv_9, grammarAccess.getParameterAccess().getBoolKeyword_3_1());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterRule());
				}
				newCompositeNode(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_3_2());
			}
			this_ParameterDeclaration_10=ruleParameterDeclaration[$current]
			{
				$current = $this_ParameterDeclaration_10.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule ParameterDeclaration
ruleParameterDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getParameterDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", lv_isSufficient_0_0 != null, "all");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterDeclarationRule());
					}
					newCompositeNode(grammarAccess.getParameterDeclarationAccess().getIdentificationParserRuleCall_1_0_0());
				}
				this_Identification_1=ruleIdentification[$current]
				{
					$current = $this_Identification_1.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterDeclarationRule());
						}
						newCompositeNode(grammarAccess.getParameterDeclarationAccess().getParameterSpecializationPartParserRuleCall_1_0_1());
					}
					this_ParameterSpecializationPart_2=ruleParameterSpecializationPart[$current]
					{
						$current = $this_ParameterSpecializationPart_2.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterDeclarationRule());
				}
				newCompositeNode(grammarAccess.getParameterDeclarationAccess().getParameterSpecializationPartParserRuleCall_1_1());
			}
			this_ParameterSpecializationPart_3=ruleParameterSpecializationPart[$current]
			{
				$current = $this_ParameterSpecializationPart_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule ParameterSpecializationPart
ruleParameterSpecializationPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines')=>
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_0());
				}
				this_ParameterSpecialization_0=ruleParameterSpecialization[$current]
				{
					$current = $this_ParameterSpecialization_0.current;
					afterParserOrEnumRuleCall();
				}
			)+
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getParameterSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1());
				}
				this_MultiplicityPart_1=ruleMultiplicityPart[$current]
				{
					$current = $this_MultiplicityPart_1.current;
					afterParserOrEnumRuleCall();
				}
			)?
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_2());
				}
				this_ParameterSpecialization_2=ruleParameterSpecialization[$current]
				{
					$current = $this_ParameterSpecialization_2.current;
					afterParserOrEnumRuleCall();
				}
			)*
		)
		    |
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterSpecializationPartRule());
				}
				newCompositeNode(grammarAccess.getParameterSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0());
			}
			this_MultiplicityPart_3=ruleMultiplicityPart[$current]
			{
				$current = $this_MultiplicityPart_3.current;
				afterParserOrEnumRuleCall();
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterSpecializationPartRule());
					}
					newCompositeNode(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_1_1());
				}
				this_ParameterSpecialization_4=ruleParameterSpecialization[$current]
				{
					$current = $this_ParameterSpecialization_4.current;
					afterParserOrEnumRuleCall();
				}
			)*
		)
	)
;


// Rule ParameterSpecialization
ruleParameterSpecialization[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getParameterSpecializationRule());
			}
			newCompositeNode(grammarAccess.getParameterSpecializationAccess().getTypedByParserRuleCall_0());
		}
		this_TypedBy_0=ruleTypedBy[$current]
		{
			$current = $this_TypedBy_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getParameterSpecializationRule());
			}
			newCompositeNode(grammarAccess.getParameterSpecializationAccess().getSubsetsParserRuleCall_1());
		}
		this_Subsets_1=ruleSubsets[$current]
		{
			$current = $this_Subsets_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getParameterSpecializationRule());
			}
			newCompositeNode(grammarAccess.getParameterSpecializationAccess().getRedefinesParserRuleCall_2());
		}
		this_Redefines_2=ruleRedefines[$current]
		{
			$current = $this_Redefines_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getStepAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='step'
		{
			newLeafNode(otherlv_1, grammarAccess.getStepAccess().getStepKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getStepRule());
			}
			newCompositeNode(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_2());
		}
		this_StepDeclaration_2=ruleStepDeclaration[$current]
		{
			$current = $this_StepDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getStepRule());
			}
			newCompositeNode(grammarAccess.getStepAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule StepDeclaration
ruleStepDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStepDeclarationRule());
				}
				newCompositeNode(grammarAccess.getStepDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
			}
			this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
			{
				$current = $this_FeatureDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStepDeclarationRule());
				}
				newCompositeNode(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_0());
			}
			this_ValuePart_1=ruleValuePart[$current]
			{
				$current = $this_ValuePart_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStepDeclarationRule());
				}
				newCompositeNode(grammarAccess.getStepDeclarationAccess().getStepParameterListParserRuleCall_1_1());
			}
			this_StepParameterList_2=ruleStepParameterList[$current]
			{
				$current = $this_StepParameterList_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule StepParameterList
ruleStepParameterList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getStepParameterListAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStepParameterListAccess().getOwnedFeatureMembership_compStepParameterMemberParserRuleCall_1_0_0());
					}
					lv_ownedFeatureMembership_comp_1_0=ruleStepParameterMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepParameterListRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.StepParameterMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getStepParameterListAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStepParameterListAccess().getOwnedFeatureMembership_compStepParameterMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleStepParameterMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStepParameterListRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.StepParameterMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getStepParameterListAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleStepParameterMember
entryRuleStepParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepParameterMemberRule()); }
	iv_ruleStepParameterMember=ruleStepParameterMember
	{ $current=$iv_ruleStepParameterMember.current; }
	EOF;

// Rule StepParameterMember
ruleStepParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStepParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
				}
				lv_direction_0_0=ruleFeatureDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepParameterMemberRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"org.omg.kerml.xtext.KerML.FeatureDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStepParameterMemberAccess().getOwnedMemberParameter_compStepParameterParserRuleCall_1_0());
				}
				lv_ownedMemberParameter_comp_1_0=ruleStepParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepParameterMemberRule());
					}
					set(
						$current,
						"ownedMemberParameter_comp",
						lv_ownedMemberParameter_comp_1_0,
						"org.omg.kerml.xtext.KerML.StepParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStepParameter
entryRuleStepParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepParameterRule()); }
	iv_ruleStepParameter=ruleStepParameter
	{ $current=$iv_ruleStepParameter.current; }
	EOF;

// Rule StepParameter
ruleStepParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStepParameterAccess().getParameterParserRuleCall_0());
		}
		this_Parameter_0=ruleParameter
		{
			$current = $this_Parameter_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStepParameterRule());
				}
				newCompositeNode(grammarAccess.getStepParameterAccess().getValuePartParserRuleCall_1());
			}
			this_ValuePart_1=ruleValuePart[$current]
			{
				$current = $this_ValuePart_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFunctionAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='function'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionRule());
			}
			newCompositeNode(grammarAccess.getFunctionAccess().getFunctionDeclarationParserRuleCall_2());
		}
		this_FunctionDeclaration_2=ruleFunctionDeclaration[$current]
		{
			$current = $this_FunctionDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionRule());
			}
			newCompositeNode(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_3());
		}
		this_FunctionBody_3=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule FunctionDeclaration
ruleFunctionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
			}
			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getClassifierDeclarationParserRuleCall_0());
		}
		this_ClassifierDeclaration_0=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
			}
			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getParameterPartParserRuleCall_1());
		}
		this_ParameterPart_1=ruleParameterPart[$current]
		{
			$current = $this_ParameterPart_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ParameterPart
ruleParameterPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterPartRule());
				}
				newCompositeNode(grammarAccess.getParameterPartAccess().getParameterListParserRuleCall_0_0());
			}
			this_ParameterList_0=ruleParameterList[$current]
			{
				$current = $this_ParameterList_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterPartRule());
					}
					newCompositeNode(grammarAccess.getParameterPartAccess().getReturnParameterPartParserRuleCall_0_1_0());
				}
				this_ReturnParameterPart_1=ruleReturnParameterPart[$current]
				{
					$current = $this_ReturnParameterPart_1.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterPartRule());
					}
					newCompositeNode(grammarAccess.getParameterPartAccess().getEmptyReturnParameterPartParserRuleCall_0_1_1());
				}
				this_EmptyReturnParameterPart_2=ruleEmptyReturnParameterPart[$current]
				{
					$current = $this_EmptyReturnParameterPart_2.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getParameterPartRule());
			}
			newCompositeNode(grammarAccess.getParameterPartAccess().getEmptyReturnParameterPartParserRuleCall_1());
		}
		this_EmptyReturnParameterPart_3=ruleEmptyReturnParameterPart[$current]
		{
			$current = $this_EmptyReturnParameterPart_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ReturnParameterPart
ruleReturnParameterPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReturnParameterPartAccess().getOwnedFeatureMembership_compReturnParameterMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleReturnParameterMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReturnParameterPartRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.ReturnParameterMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleReturnParameterMember
entryRuleReturnParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnParameterMemberRule()); }
	iv_ruleReturnParameterMember=ruleReturnParameterMember
	{ $current=$iv_ruleReturnParameterMember.current; }
	EOF;

// Rule ReturnParameterMember
ruleReturnParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReturnParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_0());
			}
			lv_ownedMemberParameter_comp_0_0=ruleParameter
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReturnParameterMemberRule());
				}
				set(
					$current,
					"ownedMemberParameter_comp",
					lv_ownedMemberParameter_comp_0_0,
					"org.omg.kerml.xtext.KerML.Parameter");
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule EmptyReturnParameterPart
ruleEmptyReturnParameterPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedFeatureMembership_compEmptyReturnParameterMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleEmptyReturnParameterMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEmptyReturnParameterPartRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.EmptyReturnParameterMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEmptyReturnParameterMember
entryRuleEmptyReturnParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyReturnParameterMemberRule()); }
	iv_ruleEmptyReturnParameterMember=ruleEmptyReturnParameterMember
	{ $current=$iv_ruleEmptyReturnParameterMember.current; }
	EOF;

// Rule EmptyReturnParameterMember
ruleEmptyReturnParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedMemberFeature_compEmptyParameterParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleEmptyParameter
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEmptyReturnParameterMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.EmptyParameter");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEmptyParameter
entryRuleEmptyParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyParameterRule()); }
	iv_ruleEmptyParameter=ruleEmptyParameter
	{ $current=$iv_ruleEmptyParameter.current; }
	EOF;

// Rule EmptyParameter
ruleEmptyParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getEmptyParameterAccess().getFeatureAction(),
				$current);
		}
	)
;


// Rule FunctionBody
ruleFunctionBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionBodyAccess().getDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0());
						}
						lv_documentation_comp_2_0=ruleOwnedDocumentation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
							}
							add(
								$current,
								"documentation_comp",
								lv_documentation_comp_2_0,
								"org.omg.kerml.xtext.KerML.OwnedDocumentation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedMembership_comp_3_0=ruleNonFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.NonFeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_2_0());
						}
						lv_ownedFeatureMembership_comp_4_0=ruleFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_4_0,
								"org.omg.kerml.xtext.KerML.FeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedRelationship_compImportParserRuleCall_1_1_3_0());
						}
						lv_ownedRelationship_comp_5_0=ruleImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_5_0,
								"org.omg.kerml.xtext.KerML.Import");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_1_2_0());
					}
					lv_ownedFeatureMembership_comp_6_0=ruleResultExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_6_0,
							"org.omg.kerml.xtext.KerML.ResultExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleResultExpressionMember
entryRuleResultExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultExpressionMemberRule()); }
	iv_ruleResultExpressionMember=ruleResultExpressionMember
	{ $current=$iv_ruleResultExpressionMember.current; }
	EOF;

// Rule ResultExpressionMember
ruleResultExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getResultExpressionMemberRule());
			}
			newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getTypeMemberPrefixParserRuleCall_0());
		}
		this_TypeMemberPrefix_0=ruleTypeMemberPrefix[$current]
		{
			$current = $this_TypeMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getOwnedResultExpression_compOwnedExpressionParserRuleCall_1_0());
				}
				lv_ownedResultExpression_comp_1_0=ruleOwnedExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultExpressionMemberRule());
					}
					set(
						$current,
						"ownedResultExpression_comp",
						lv_ownedResultExpression_comp_1_0,
						"org.omg.kerml.xtext.KerML.OwnedExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getExpressionAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='expr'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getExprKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getExpressionRule());
			}
			newCompositeNode(grammarAccess.getExpressionAccess().getExpressionDeclarationParserRuleCall_2());
		}
		this_ExpressionDeclaration_2=ruleExpressionDeclaration[$current]
		{
			$current = $this_ExpressionDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getExpressionRule());
			}
			newCompositeNode(grammarAccess.getExpressionAccess().getFunctionBodyParserRuleCall_3());
		}
		this_FunctionBody_3=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ExpressionDeclaration
ruleExpressionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
				}
				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
			}
			this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
			{
				$current = $this_FeatureDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
				}
				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_0());
			}
			this_ValuePart_1=ruleValuePart[$current]
			{
				$current = $this_ValuePart_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
					}
					newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getStepParameterListParserRuleCall_1_1_0());
				}
				this_StepParameterList_2=ruleStepParameterList[$current]
				{
					$current = $this_StepParameterList_2.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_1_1_0());
					}
					this_ReturnParameterPart_3=ruleReturnParameterPart[$current]
					{
						$current = $this_ReturnParameterPart_3.current;
						afterParserOrEnumRuleCall();
					}
					    |
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_1_1_1());
					}
					this_EmptyReturnParameterPart_4=ruleEmptyReturnParameterPart[$current]
					{
						$current = $this_EmptyReturnParameterPart_4.current;
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getPredicateAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='predicate'
		{
			newLeafNode(otherlv_1, grammarAccess.getPredicateAccess().getPredicateKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateRule());
			}
			newCompositeNode(grammarAccess.getPredicateAccess().getPredicateDeclarationParserRuleCall_2());
		}
		this_PredicateDeclaration_2=rulePredicateDeclaration[$current]
		{
			$current = $this_PredicateDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateRule());
			}
			newCompositeNode(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_3());
		}
		this_FunctionBody_3=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule PredicateDeclaration
rulePredicateDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
			}
			newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getClassifierDeclarationParserRuleCall_0());
		}
		this_ClassifierDeclaration_0=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
			}
			newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getParameterPartParserRuleCall_1());
		}
		this_ParameterPart_1=ruleParameterPart[$current]
		{
			$current = $this_ParameterPart_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getBooleanExpressionAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpressionRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='bool'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanExpressionAccess().getBoolKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBooleanExpressionRule());
			}
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionDeclarationParserRuleCall_2());
		}
		this_ExpressionDeclaration_2=ruleExpressionDeclaration[$current]
		{
			$current = $this_ExpressionDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBooleanExpressionRule());
			}
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_3());
		}
		this_FunctionBody_3=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInvariant
entryRuleInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantRule()); }
	iv_ruleInvariant=ruleInvariant
	{ $current=$iv_ruleInvariant.current; }
	EOF;

// Rule Invariant
ruleInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getInvariantAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvariantRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='inv'
		{
			newLeafNode(otherlv_1, grammarAccess.getInvariantAccess().getInvKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInvariantRule());
			}
			newCompositeNode(grammarAccess.getInvariantAccess().getExpressionDeclarationParserRuleCall_2());
		}
		this_ExpressionDeclaration_2=ruleExpressionDeclaration[$current]
		{
			$current = $this_ExpressionDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInvariantRule());
			}
			newCompositeNode(grammarAccess.getInvariantAccess().getInvariantPartParserRuleCall_3());
		}
		this_InvariantPart_3=ruleInvariantPart[$current]
		{
			$current = $this_InvariantPart_3.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInvariantRule());
			}
			newCompositeNode(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_4());
		}
		this_FunctionBody_4=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule InvariantPart
ruleInvariantPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInvariantPartAccess().getOwnedFeatureMembership_compTrueLiteralMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleTrueLiteralMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInvariantPartRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.TrueLiteralMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTrueLiteralMember
entryRuleTrueLiteralMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueLiteralMemberRule()); }
	iv_ruleTrueLiteralMember=ruleTrueLiteralMember
	{ $current=$iv_ruleTrueLiteralMember.current; }
	EOF;

// Rule TrueLiteralMember
ruleTrueLiteralMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTrueLiteralMemberAccess().getOwnedMemberFeature_compTrueLiteralExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleTrueLiteralExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTrueLiteralMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.TrueLiteralExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTrueLiteralExpression
entryRuleTrueLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueLiteralExpressionRule()); }
	iv_ruleTrueLiteralExpression=ruleTrueLiteralExpression
	{ $current=$iv_ruleTrueLiteralExpression.current; }
	EOF;

// Rule TrueLiteralExpression
ruleTrueLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getTrueLiteralExpressionAccess().getLiteralBooleanAction(),
				$current);
		}
	)
;

// Entry rule entryRuleInteraction
entryRuleInteraction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteractionRule()); }
	iv_ruleInteraction=ruleInteraction
	{ $current=$iv_ruleInteraction.current; }
	EOF;

// Rule Interaction
ruleInteraction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getInteractionAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInteractionRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='interaction'
		{
			newLeafNode(otherlv_1, grammarAccess.getInteractionAccess().getInteractionKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionRule());
			}
			newCompositeNode(grammarAccess.getInteractionAccess().getBehaviorDeclarationParserRuleCall_2());
		}
		this_BehaviorDeclaration_2=ruleBehaviorDeclaration[$current]
		{
			$current = $this_BehaviorDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionRule());
			}
			newCompositeNode(grammarAccess.getInteractionAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleItemFlow
entryRuleItemFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowRule()); }
	iv_ruleItemFlow=ruleItemFlow
	{ $current=$iv_ruleItemFlow.current; }
	EOF;

// Rule ItemFlow
ruleItemFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getItemFlowAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemFlowRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='stream'
		{
			newLeafNode(otherlv_1, grammarAccess.getItemFlowAccess().getStreamKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getItemFlowRule());
			}
			newCompositeNode(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_2());
		}
		this_ItemFlowDeclaration_2=ruleItemFlowDeclaration[$current]
		{
			$current = $this_ItemFlowDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getItemFlowRule());
			}
			newCompositeNode(grammarAccess.getItemFlowAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSuccessionItemFlow
entryRuleSuccessionItemFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuccessionItemFlowRule()); }
	iv_ruleSuccessionItemFlow=ruleSuccessionItemFlow
	{ $current=$iv_ruleSuccessionItemFlow.current; }
	EOF;

// Rule SuccessionItemFlow
ruleSuccessionItemFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getSuccessionItemFlowAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='flow'
		{
			newLeafNode(otherlv_1, grammarAccess.getSuccessionItemFlowAccess().getFlowKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
			}
			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_2());
		}
		this_ItemFlowDeclaration_2=ruleItemFlowDeclaration[$current]
		{
			$current = $this_ItemFlowDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
			}
			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getTypeBodyParserRuleCall_3());
		}
		this_TypeBody_3=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ItemFlowDeclaration
ruleItemFlowDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
						}
						newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
					}
					this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
					{
						$current = $this_FeatureDeclaration_0.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					(
						otherlv_1='of'
						{
							newLeafNode(otherlv_1, grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_1_0_1_0());
								}
								lv_ownedFeatureMembership_comp_2_0=ruleItemFeatureMember
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
									}
									add(
										$current,
										"ownedFeatureMembership_comp",
										lv_ownedFeatureMembership_comp_2_0,
										"org.omg.kerml.xtext.KerML.ItemFeatureMember");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0());
							}
							lv_ownedFeatureMembership_comp_3_0=ruleEmptyItemFeatureMember
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
								}
								add(
									$current,
									"ownedFeatureMembership_comp",
									lv_ownedFeatureMembership_comp_3_0,
									"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_4='from'
				{
					newLeafNode(otherlv_4, grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2());
				}
			)
			    |
			(
				(
					(
						lv_isSufficient_5_0='all'
						{
							newLeafNode(lv_isSufficient_5_0, grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
							}
							setWithLastConsumed($current, "isSufficient", lv_isSufficient_5_0 != null, "all");
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_1_0());
						}
						lv_ownedFeatureMembership_comp_6_0=ruleEmptyItemFeatureMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_6_0,
								"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_7_0=ruleItemFlowEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_7_0,
						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='to'
		{
			newLeafNode(otherlv_8, grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_9_0=ruleItemFlowEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_9_0,
						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleItemFeatureMember
entryRuleItemFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFeatureMemberRule()); }
	iv_ruleItemFeatureMember=ruleItemFeatureMember
	{ $current=$iv_ruleItemFeatureMember.current; }
	EOF;

// Rule ItemFeatureMember
ruleItemFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getItemFeatureMemberAccess().getMemberNameNameParserRuleCall_0_0_0());
					}
					lv_memberName_0_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemFeatureMemberRule());
						}
						set(
							$current,
							"memberName",
							lv_memberName_0_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getItemFeatureMemberAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFeatureMemberAccess().getOwnedMemberFeature_compItemFeatureParserRuleCall_1_0());
				}
				lv_ownedMemberFeature_comp_2_0=ruleItemFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFeatureMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_2_0,
						"org.omg.kerml.xtext.KerML.ItemFeature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleItemFeature
entryRuleItemFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFeatureRule()); }
	iv_ruleItemFeature=ruleItemFeature
	{ $current=$iv_ruleItemFeature.current; }
	EOF;

// Rule ItemFeature
ruleItemFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0_0());
					}
					lv_ownedRelationship_comp_0_0=ruleOwnedFeatureTyping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemFeatureRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_0_0,
							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedMembership_compMultiplicityMemberParserRuleCall_0_1_0());
					}
					lv_ownedMembership_comp_1_0=ruleMultiplicityMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemFeatureRule());
						}
						add(
							$current,
							"ownedMembership_comp",
							lv_ownedMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.MultiplicityMember");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedMembership_compMultiplicityMemberParserRuleCall_1_0_0());
					}
					lv_ownedMembership_comp_2_0=ruleMultiplicityMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemFeatureRule());
						}
						add(
							$current,
							"ownedMembership_comp",
							lv_ownedMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.MultiplicityMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0());
					}
					lv_ownedRelationship_comp_3_0=ruleOwnedFeatureTyping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemFeatureRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_3_0,
							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleEmptyItemFeatureMember
entryRuleEmptyItemFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyItemFeatureMemberRule()); }
	iv_ruleEmptyItemFeatureMember=ruleEmptyItemFeatureMember
	{ $current=$iv_ruleEmptyItemFeatureMember.current; }
	EOF;

// Rule EmptyItemFeatureMember
ruleEmptyItemFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleEmptyItemFeature
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEmptyItemFeatureMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.EmptyItemFeature");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEmptyItemFeature
entryRuleEmptyItemFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyItemFeatureRule()); }
	iv_ruleEmptyItemFeature=ruleEmptyItemFeature
	{ $current=$iv_ruleEmptyItemFeature.current; }
	EOF;

// Rule EmptyItemFeature
ruleEmptyItemFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getEmptyItemFeatureAccess().getItemFeatureAction(),
				$current);
		}
	)
;

// Entry rule entryRuleItemFlowEndMember
entryRuleItemFlowEndMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowEndMemberRule()); }
	iv_ruleItemFlowEndMember=ruleItemFlowEndMember
	{ $current=$iv_ruleItemFlowEndMember.current; }
	EOF;

// Rule ItemFlowEndMember
ruleItemFlowEndMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowEndMemberAccess().getOwnedMemberFeature_compItemFlowEndParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleItemFlowEnd
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowEndMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.ItemFlowEnd");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleItemFlowEnd
entryRuleItemFlowEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowEndRule()); }
	iv_ruleItemFlowEnd=ruleItemFlowEnd
	{ $current=$iv_ruleItemFlowEnd.current; }
	EOF;

// Rule ItemFlowEnd
ruleItemFlowEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleItemFlowFeatureMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.ItemFlowFeatureMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleItemFlowFeatureMember
entryRuleItemFlowFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowFeatureMemberRule()); }
	iv_ruleItemFlowFeatureMember=ruleItemFlowFeatureMember
	{ $current=$iv_ruleItemFlowFeatureMember.current; }
	EOF;

// Rule ItemFlowFeatureMember
ruleItemFlowFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleItemFlowFeature
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowFeatureMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.ItemFlowFeature");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleItemFlowFeature
entryRuleItemFlowFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowFeatureRule()); }
	iv_ruleItemFlowFeature=ruleItemFlowFeature
	{ $current=$iv_ruleItemFlowFeature.current; }
	EOF;

// Rule ItemFlowFeature
ruleItemFlowFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationship_compOwnedRedefinitionParserRuleCall_0());
			}
			lv_ownedRelationship_comp_0_0=ruleOwnedRedefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowFeatureRule());
				}
				add(
					$current,
					"ownedRelationship_comp",
					lv_ownedRelationship_comp_0_0,
					"org.omg.kerml.xtext.KerML.OwnedRedefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOwnedExpressionMember
entryRuleOwnedExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedExpressionMemberRule()); }
	iv_ruleOwnedExpressionMember=ruleOwnedExpressionMember
	{ $current=$iv_ruleOwnedExpressionMember.current; }
	EOF;

// Rule OwnedExpressionMember
ruleOwnedExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOwnedExpressionMemberAccess().getOwnedMemberFeature_compOwnedExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleOwnedExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOwnedExpressionMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.OwnedExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOwnedExpression
entryRuleOwnedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOwnedExpressionRule()); }
	iv_ruleOwnedExpression=ruleOwnedExpression
	{ $current=$iv_ruleOwnedExpression.current; }
	EOF;

// Rule OwnedExpression
ruleOwnedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getOwnedExpressionAccess().getConditionalExpressionParserRuleCall());
	}
	this_ConditionalExpression_0=ruleConditionalExpression
	{
		$current = $this_ConditionalExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	iv_ruleConditionalExpression=ruleConditionalExpression
	{ $current=$iv_ruleConditionalExpression.current; }
	EOF;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0());
		}
		this_NullCoalescingExpression_0=ruleNullCoalescingExpression
		{
			$current = $this_NullCoalescingExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getConditionalExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalTestOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleConditionalTestOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ConditionalTestOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperand_compOwnedExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleOwnedExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.OwnedExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperand_compConditionalExpressionParserRuleCall_1_4_0());
					}
					lv_operand_comp_5_0=ruleConditionalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_5_0,
							"org.omg.kerml.xtext.KerML.ConditionalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConditionalTestOperator
entryRuleConditionalTestOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionalTestOperatorRule()); }
	iv_ruleConditionalTestOperator=ruleConditionalTestOperator
	{ $current=$iv_ruleConditionalTestOperator.current.getText(); }
	EOF;

// Rule ConditionalTestOperator
ruleConditionalTestOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='?'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getConditionalTestOperatorAccess().getQuestionMarkKeyword());
	}
;

// Entry rule entryRuleNullCoalescingExpression
entryRuleNullCoalescingExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullCoalescingExpressionRule()); }
	iv_ruleNullCoalescingExpression=ruleNullCoalescingExpression
	{ $current=$iv_ruleNullCoalescingExpression.current; }
	EOF;

// Rule NullCoalescingExpression
ruleNullCoalescingExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getConditionalOrExpressionParserRuleCall_0());
		}
		this_ConditionalOrExpression_0=ruleConditionalOrExpression
		{
			$current = $this_ConditionalOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleNullCoalescingOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.NullCoalescingOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperand_compConditionalOrExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleConditionalOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.ConditionalOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNullCoalescingOperator
entryRuleNullCoalescingOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNullCoalescingOperatorRule()); }
	iv_ruleNullCoalescingOperator=ruleNullCoalescingOperator
	{ $current=$iv_ruleNullCoalescingOperator.current.getText(); }
	EOF;

// Rule NullCoalescingOperator
ruleNullCoalescingOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='??'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword());
	}
;

// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalOrExpressionRule()); }
	iv_ruleConditionalOrExpression=ruleConditionalOrExpression
	{ $current=$iv_ruleConditionalOrExpression.current; }
	EOF;

// Rule ConditionalOrExpression
ruleConditionalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0());
		}
		this_ConditionalAndExpression_0=ruleConditionalAndExpression
		{
			$current = $this_ConditionalAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getConditionalOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleConditionalOrOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ConditionalOrOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperand_compConditionalAndExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleConditionalAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.ConditionalAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalOrOperator
entryRuleConditionalOrOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionalOrOperatorRule()); }
	iv_ruleConditionalOrOperator=ruleConditionalOrOperator
	{ $current=$iv_ruleConditionalOrOperator.current.getText(); }
	EOF;

// Rule ConditionalOrOperator
ruleConditionalOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='||'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getConditionalOrOperatorAccess().getVerticalLineVerticalLineKeyword());
	}
;

// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalAndExpressionRule()); }
	iv_ruleConditionalAndExpression=ruleConditionalAndExpression
	{ $current=$iv_ruleConditionalAndExpression.current; }
	EOF;

// Rule ConditionalAndExpression
ruleConditionalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOrExpressionParserRuleCall_0());
		}
		this_OrExpression_0=ruleOrExpression
		{
			$current = $this_OrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getConditionalAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleConditionalAndOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ConditionalAndOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperand_compOrExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalAndOperator
entryRuleConditionalAndOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionalAndOperatorRule()); }
	iv_ruleConditionalAndOperator=ruleConditionalAndOperator
	{ $current=$iv_ruleConditionalAndOperator.current.getText(); }
	EOF;

// Rule ConditionalAndOperator
ruleConditionalAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getConditionalAndOperatorAccess().getAmpersandAmpersandKeyword());
	}
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
		}
		this_XorExpression_0=ruleXorExpression
		{
			$current = $this_XorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleOrOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.OrOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOperand_compXorExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleXorExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.XorExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOrOperator
entryRuleOrOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOrOperatorRule()); }
	iv_ruleOrOperator=ruleOrOperator
	{ $current=$iv_ruleOrOperator.current.getText(); }
	EOF;

// Rule OrOperator
ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='|'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOrOperatorAccess().getVerticalLineKeyword());
	}
;

// Entry rule entryRuleXorExpression
entryRuleXorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXorExpressionRule()); }
	iv_ruleXorExpression=ruleXorExpression
	{ $current=$iv_ruleXorExpression.current; }
	EOF;

// Rule XorExpression
ruleXorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getXorExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleXorOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXorExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.XorOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperand_compAndExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXorExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleXorOperator
entryRuleXorOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXorOperatorRule()); }
	iv_ruleXorOperator=ruleXorOperator
	{ $current=$iv_ruleXorOperator.current.getText(); }
	EOF;

// Rule XorOperator
ruleXorOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='^'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword());
	}
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleAndOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.AndOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperand_compEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndOperator
entryRuleAndOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAndOperatorRule()); }
	iv_ruleAndOperator=ruleAndOperator
	{ $current=$iv_ruleAndOperator.current.getText(); }
	EOF;

// Rule AndOperator
ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getAmpersandKeyword());
	}
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0());
		}
		this_ClassificationExpression_0=ruleClassificationExpression
		{
			$current = $this_ClassificationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleEqualityOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.EqualityOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperand_compClassificationExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleClassificationExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.ClassificationExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEqualityOperatorRule()); }
	iv_ruleEqualityOperator=ruleEqualityOperator
	{ $current=$iv_ruleEqualityOperator.current.getText(); }
	EOF;

// Rule EqualityOperator
ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
		}
	)
;

// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassificationExpressionRule()); }
	iv_ruleClassificationExpression=ruleClassificationExpression
	{ $current=$iv_ruleClassificationExpression.current; }
	EOF;

// Rule ClassificationExpression
ruleClassificationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleClassificationOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ClassificationOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0());
					}
					lv_ownedFeatureMembership_comp_3_0=ruleTypeReferenceMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_3_0,
							"org.omg.kerml.xtext.KerML.TypeReferenceMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleClassificationOperator
entryRuleClassificationOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getClassificationOperatorRule()); }
	iv_ruleClassificationOperator=ruleClassificationOperator
	{ $current=$iv_ruleClassificationOperator.current.getText(); }
	EOF;

// Rule ClassificationOperator
ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='instanceof'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0());
		}
		    |
		kw='hastype'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1());
		}
		    |
		kw='istype'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getIstypeKeyword_2());
		}
	)
;

// Entry rule entryRuleTypeReferenceMember
entryRuleTypeReferenceMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceMemberRule()); }
	iv_ruleTypeReferenceMember=ruleTypeReferenceMember
	{ $current=$iv_ruleTypeReferenceMember.current; }
	EOF;

// Rule TypeReferenceMember
ruleTypeReferenceMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeReferenceMemberAccess().getOwnedMemberFeature_compTypeReferenceParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleTypeReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeReferenceMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.TypeReference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeReferenceAccess().getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0());
			}
			lv_ownedRelationship_comp_0_0=ruleOwnedFeatureTyping
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
				}
				add(
					$current,
					"ownedRelationship_comp",
					lv_ownedRelationship_comp_0_0,
					"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0());
		}
		this_AdditiveExpression_0=ruleAdditiveExpression
		{
			$current = $this_AdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleRelationalOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.RelationalOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperand_compAdditiveExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.AdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelationalOperatorRule()); }
	iv_ruleRelationalOperator=ruleRelationalOperator
	{ $current=$iv_ruleRelationalOperator.current.getText(); }
	EOF;

// Rule RelationalOperator
ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3());
		}
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleAdditiveOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.AdditiveOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperand_compMultiplicativeExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveOperator
entryRuleAdditiveOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveOperatorRule()); }
	iv_ruleAdditiveOperator=ruleAdditiveOperator
	{ $current=$iv_ruleAdditiveOperator.current.getText(); }
	EOF;

// Rule AdditiveOperator
ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0());
		}
		this_ExponentiationExpression_0=ruleExponentiationExpression
		{
			$current = $this_ExponentiationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleMultiplicativeOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.MultiplicativeOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperand_compExponentiationExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleExponentiationExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.ExponentiationExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeOperator
entryRuleMultiplicativeOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeOperatorRule()); }
	iv_ruleMultiplicativeOperator=ruleMultiplicativeOperator
	{ $current=$iv_ruleMultiplicativeOperator.current.getText(); }
	EOF;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1());
		}
	)
;

// Entry rule entryRuleExponentiationExpression
entryRuleExponentiationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExponentiationExpressionRule()); }
	iv_ruleExponentiationExpression=ruleExponentiationExpression
	{ $current=$iv_ruleExponentiationExpression.current; }
	EOF;

// Rule ExponentiationExpression
ruleExponentiationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getUnitsExpressionParserRuleCall_0());
		}
		this_UnitsExpression_0=ruleUnitsExpression
		{
			$current = $this_UnitsExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleExponentiationOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ExponentiationOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperand_compUnitsExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleUnitsExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.UnitsExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExponentiationOperator
entryRuleExponentiationOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExponentiationOperatorRule()); }
	iv_ruleExponentiationOperator=ruleExponentiationOperator
	{ $current=$iv_ruleExponentiationOperator.current.getText(); }
	EOF;

// Rule ExponentiationOperator
ruleExponentiationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='**'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword());
	}
;

// Entry rule entryRuleUnitsExpression
entryRuleUnitsExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitsExpressionRule()); }
	iv_ruleUnitsExpression=ruleUnitsExpression
	{ $current=$iv_ruleUnitsExpression.current; }
	EOF;

// Rule UnitsExpression
ruleUnitsExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitsExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getUnitsExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0='@'
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitsExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "@");
					}
				)
			)
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getUnitsExpressionAccess().getLeftSquareBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitsExpressionAccess().getOperand_compOwnedExpressionParserRuleCall_1_3_0());
					}
					lv_operand_comp_4_0=ruleOwnedExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitsExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_4_0,
							"org.omg.kerml.xtext.KerML.OwnedExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getUnitsExpressionAccess().getRightSquareBracketKeyword_1_4());
			}
		)?
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleUnaryOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"org.omg.kerml.xtext.KerML.UnaryOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperand_compExtentExpressionParserRuleCall_0_2_0());
					}
					lv_operand_comp_2_0=ruleExtentExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_2_0,
							"org.omg.kerml.xtext.KerML.ExtentExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExtentExpressionParserRuleCall_1());
		}
		this_ExtentExpression_3=ruleExtentExpression
		{
			$current = $this_ExtentExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperatorRule()); }
	iv_ruleUnaryOperator=ruleUnaryOperator
	{ $current=$iv_ruleUnaryOperator.current.getText(); }
	EOF;

// Rule UnaryOperator
ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2());
		}
		    |
		kw='~'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getTildeKeyword_3());
		}
	)
;

// Entry rule entryRuleExtentExpression
entryRuleExtentExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtentExpressionRule()); }
	iv_ruleExtentExpression=ruleExtentExpression
	{ $current=$iv_ruleExtentExpression.current; }
	EOF;

// Rule ExtentExpression
ruleExtentExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExtentExpressionAccess().getOperatorExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_operator_1_0='all'
					{
						newLeafNode(lv_operator_1_0, grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtentExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_0, "all");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExtentExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_2_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleTypeReferenceMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtentExpressionRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.TypeReferenceMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExtentExpressionAccess().getSequenceExpressionParserRuleCall_1());
		}
		this_SequenceExpression_3=ruleSequenceExpression
		{
			$current = $this_SequenceExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSequenceExpression
entryRuleSequenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceExpressionRule()); }
	iv_ruleSequenceExpression=ruleSequenceExpression
	{ $current=$iv_ruleSequenceExpression.current; }
	EOF;

// Rule SequenceExpression
ruleSequenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSequenceExpressionAccess().getSequenceConstructionExpressionParserRuleCall_0_0());
			}
			this_SequenceConstructionExpression_0=ruleSequenceConstructionExpression
			{
				$current = $this_SequenceConstructionExpression_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getSequenceExpressionAccess().getBaseExpressionParserRuleCall_0_1());
			}
			this_BaseExpression_1=ruleBaseExpression
			{
				$current = $this_BaseExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getSequenceExpressionAccess().getOperatorExpressionOperand_compAction_1_0_0(),
							$current);
					}
				)
				(
					(
						lv_operator_3_0='['
						{
							newLeafNode(lv_operator_3_0, grammarAccess.getSequenceExpressionAccess().getOperatorLeftSquareBracketKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSequenceExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_3_0, "[");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOperand_compOwnedExpressionParserRuleCall_1_0_2_0());
						}
						lv_operand_comp_4_0=ruleOwnedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSequenceExpressionRule());
							}
							add(
								$current,
								"operand_comp",
								lv_operand_comp_4_0,
								"org.omg.kerml.xtext.KerML.OwnedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=']'
				{
					newLeafNode(otherlv_5, grammarAccess.getSequenceExpressionAccess().getRightSquareBracketKeyword_1_0_3());
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getSequenceExpressionAccess().getOperatorExpressionOperand_compAction_1_1_0(),
							$current);
					}
				)
				otherlv_7='->'
				{
					newLeafNode(otherlv_7, grammarAccess.getSequenceExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOperatorNameParserRuleCall_1_1_2_0());
						}
						lv_operator_8_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSequenceExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_8_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_1_1_3_0());
						}
						lv_ownedFeatureMembership_comp_9_0=ruleBodyExpressionMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSequenceExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_9_0,
								"org.omg.kerml.xtext.KerML.BodyExpressionMember");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
		)*
	)
;

// Entry rule entryRuleBodyExpressionMember
entryRuleBodyExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyExpressionMemberRule()); }
	iv_ruleBodyExpressionMember=ruleBodyExpressionMember
	{ $current=$iv_ruleBodyExpressionMember.current; }
	EOF;

// Rule BodyExpressionMember
ruleBodyExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBodyExpressionMemberAccess().getOwnedMemberFeature_compBodyExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleBodyExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBodyExpressionMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.BodyExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBodyExpression
entryRuleBodyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyExpressionRule()); }
	iv_ruleBodyExpression=ruleBodyExpression
	{ $current=$iv_ruleBodyExpression.current; }
	EOF;

// Rule BodyExpression
ruleBodyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
					(
						ruleBodyParameterMember
					)
				)
				(
					(
						ruleBodyParameterMember
					)
				)*
				'('
				(
					(
						ruleResultExpressionMember
					)
				)
				')'
			)
			)=>
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0());
						}
						lv_ownedFeatureMembership_comp_0_0=ruleBodyParameterMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_0_0,
								"org.omg.kerml.xtext.KerML.BodyParameterMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0());
						}
						lv_ownedFeatureMembership_comp_1_0=ruleBodyParameterMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_1_0,
								"org.omg.kerml.xtext.KerML.BodyParameterMember");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getBodyExpressionAccess().getLeftParenthesisKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_0_0_3_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleResultExpressionMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.ResultExpressionMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getBodyExpressionAccess().getRightParenthesisKeyword_0_0_4());
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationship_compExpressionTypingParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_5_0=ruleExpressionTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_5_0,
						"org.omg.kerml.xtext.KerML.ExpressionTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBodyParameterMember
entryRuleBodyParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyParameterMemberRule()); }
	iv_ruleBodyParameterMember=ruleBodyParameterMember
	{ $current=$iv_ruleBodyParameterMember.current; }
	EOF;

// Rule BodyParameterMember
ruleBodyParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyParameterMemberAccess().getMemberNameNameParserRuleCall_0_0());
				}
				lv_memberName_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyParameterMemberRule());
					}
					set(
						$current,
						"memberName",
						lv_memberName_0_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyParameterMemberAccess().getOwnedMemberParameter_compBodyParameterParserRuleCall_1_0());
				}
				lv_ownedMemberParameter_comp_1_0=ruleBodyParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyParameterMemberRule());
					}
					set(
						$current,
						"ownedMemberParameter_comp",
						lv_ownedMemberParameter_comp_1_0,
						"org.omg.kerml.xtext.KerML.BodyParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBodyParameter
entryRuleBodyParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyParameterRule()); }
	iv_ruleBodyParameter=ruleBodyParameter
	{ $current=$iv_ruleBodyParameter.current; }
	EOF;

// Rule BodyParameter
ruleBodyParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyParameterAccess().getFeatureAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBodyParameterRule());
					}
					newCompositeNode(grammarAccess.getBodyParameterAccess().getTypedByParserRuleCall_1_0_0());
				}
				this_TypedBy_1=ruleTypedBy[$current]
				{
					$current = $this_TypedBy_1.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBodyParameterRule());
						}
						newCompositeNode(grammarAccess.getBodyParameterAccess().getMultiplicityPartParserRuleCall_1_0_1());
					}
					this_MultiplicityPart_2=ruleMultiplicityPart[$current]
					{
						$current = $this_MultiplicityPart_2.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBodyParameterRule());
					}
					newCompositeNode(grammarAccess.getBodyParameterAccess().getMultiplicityPartParserRuleCall_1_1_0());
				}
				this_MultiplicityPart_3=ruleMultiplicityPart[$current]
				{
					$current = $this_MultiplicityPart_3.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBodyParameterRule());
						}
						newCompositeNode(grammarAccess.getBodyParameterAccess().getTypedByParserRuleCall_1_1_1());
					}
					this_TypedBy_4=ruleTypedBy[$current]
					{
						$current = $this_TypedBy_4.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
		)?
	)
;

// Entry rule entryRuleExpressionTyping
entryRuleExpressionTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionTypingRule()); }
	iv_ruleExpressionTyping=ruleExpressionTyping
	{ $current=$iv_ruleExpressionTyping.current; }
	EOF;

// Rule ExpressionTyping
ruleExpressionTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionTypingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getExpressionTypingAccess().getTypeFunctionCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSequenceConstructionExpression
entryRuleSequenceConstructionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceConstructionExpressionRule()); }
	iv_ruleSequenceConstructionExpression=ruleSequenceConstructionExpression
	{ $current=$iv_ruleSequenceConstructionExpression.current; }
	EOF;

// Rule SequenceConstructionExpression
ruleSequenceConstructionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSequenceConstructionExpressionAccess().getNullExpressionAction_0_0(),
						$current);
				}
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_1());
			}
			otherlv_2='}'
			{
				newLeafNode(otherlv_2, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getOwnedExpressionParserRuleCall_1_1());
			}
			this_OwnedExpression_4=ruleOwnedExpression
			{
				$current = $this_OwnedExpression_4.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					(
						{
							$current = forceCreateModelElementAndAdd(
								grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_0_0(),
								$current);
						}
					)
					(
						(
							lv_operator_6_0=','
							{
								newLeafNode(lv_operator_6_0, grammarAccess.getSequenceConstructionExpressionAccess().getOperatorCommaKeyword_1_2_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSequenceConstructionExpressionRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_6_0, ",");
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0_2_0());
							}
							lv_operand_comp_7_0=ruleSequenceElementList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
								}
								add(
									$current,
									"operand_comp",
									lv_operand_comp_7_0,
									"org.omg.kerml.xtext.KerML.SequenceElementList");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndAdd(
								grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_1_0(),
								$current);
						}
					)
					(
						(
							lv_operator_9_0='..'
							{
								newLeafNode(lv_operator_9_0, grammarAccess.getSequenceConstructionExpressionAccess().getOperatorFullStopFullStopKeyword_1_2_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSequenceConstructionExpressionRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_9_0, "..");
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compOwnedExpressionParserRuleCall_1_2_1_2_0());
							}
							lv_operand_comp_10_0=ruleOwnedExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
								}
								add(
									$current,
									"operand_comp",
									lv_operand_comp_10_0,
									"org.omg.kerml.xtext.KerML.OwnedExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleSequenceElementList
entryRuleSequenceElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceElementListRule()); }
	iv_ruleSequenceElementList=ruleSequenceElementList
	{ $current=$iv_ruleSequenceElementList.current; }
	EOF;

// Rule SequenceElementList
ruleSequenceElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSequenceElementListAccess().getOwnedExpressionParserRuleCall_0());
		}
		this_OwnedExpression_0=ruleOwnedExpression
		{
			$current = $this_OwnedExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getSequenceElementListAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0=','
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getSequenceElementListAccess().getOperatorCommaKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSequenceElementListRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, ",");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceElementListAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleSequenceElementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceElementListRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.SequenceElementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleBaseExpression
entryRuleBaseExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseExpressionRule()); }
	iv_ruleBaseExpression=ruleBaseExpression
	{ $current=$iv_ruleBaseExpression.current; }
	EOF;

// Rule BaseExpression
ruleBaseExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0());
		}
		this_NullExpression_0=ruleNullExpression
		{
			$current = $this_NullExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1());
		}
		this_LiteralExpression_1=ruleLiteralExpression
		{
			$current = $this_LiteralExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2());
		}
		this_FeatureReferenceExpression_2=ruleFeatureReferenceExpression
		{
			$current = $this_FeatureReferenceExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_3());
		}
		this_InvocationExpression_3=ruleInvocationExpression
		{
			$current = $this_InvocationExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getExtentExpression_DeprecatedParserRuleCall_4());
		}
		this_ExtentExpression_Deprecated_4=ruleExtentExpression_Deprecated
		{
			$current = $this_ExtentExpression_Deprecated_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_5_0());
			}
			{
				newCompositeNode(grammarAccess.getBaseExpressionAccess().getOwnedExpressionParserRuleCall_5_1());
			}
			this_OwnedExpression_6=ruleOwnedExpression
			{
				$current = $this_OwnedExpression_6.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_5_2());
			}
		)
	)
;

// Entry rule entryRuleFeatureReferenceExpression
entryRuleFeatureReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureReferenceExpressionRule()); }
	iv_ruleFeatureReferenceExpression=ruleFeatureReferenceExpression
	{ $current=$iv_ruleFeatureReferenceExpression.current; }
	EOF;

// Rule FeatureReferenceExpression
ruleFeatureReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleFeatureReferenceMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFeatureReferenceExpressionRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.FeatureReferenceMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFeatureReferenceMember
entryRuleFeatureReferenceMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureReferenceMemberRule()); }
	iv_ruleFeatureReferenceMember=ruleFeatureReferenceMember
	{ $current=$iv_ruleFeatureReferenceMember.current; }
	EOF;

// Rule FeatureReferenceMember
ruleFeatureReferenceMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFeatureReferenceMemberAccess().getOwnedMemberFeature_compFeatureReferenceParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleFeatureReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFeatureReferenceMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.FeatureReference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFeatureReference
entryRuleFeatureReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureReferenceRule()); }
	iv_ruleFeatureReference=ruleFeatureReference
	{ $current=$iv_ruleFeatureReference.current; }
	EOF;

// Rule FeatureReference
ruleFeatureReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFeatureReferenceAccess().getOwnedRelationship_compOwnedSubsettingParserRuleCall_0());
			}
			lv_ownedRelationship_comp_0_0=ruleOwnedSubsetting
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFeatureReferenceRule());
				}
				add(
					$current,
					"ownedRelationship_comp",
					lv_ownedRelationship_comp_0_0,
					"org.omg.kerml.xtext.KerML.OwnedSubsetting");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInvocationExpression
entryRuleInvocationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvocationExpressionRule()); }
	iv_ruleInvocationExpression=ruleInvocationExpression
	{ $current=$iv_ruleInvocationExpression.current; }
	EOF;

// Rule InvocationExpression
ruleInvocationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInvocationExpressionAccess().getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=ruleOwnedFeatureTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvocationExpressionRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getInvocationExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInvocationExpressionRule());
				}
				newCompositeNode(grammarAccess.getInvocationExpressionAccess().getArgumentListParserRuleCall_2());
			}
			this_ArgumentList_2=ruleArgumentList[$current]
			{
				$current = $this_ArgumentList_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getInvocationExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;


// Rule ArgumentList
ruleArgumentList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getArgumentListRule());
			}
			newCompositeNode(grammarAccess.getArgumentListAccess().getPositionalArgumentListParserRuleCall_0());
		}
		this_PositionalArgumentList_0=rulePositionalArgumentList[$current]
		{
			$current = $this_PositionalArgumentList_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getArgumentListRule());
			}
			newCompositeNode(grammarAccess.getArgumentListAccess().getNamedArgumentListParserRuleCall_1());
		}
		this_NamedArgumentList_1=ruleNamedArgumentList[$current]
		{
			$current = $this_NamedArgumentList_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule PositionalArgumentList
rulePositionalArgumentList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleOwnedExpressionMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.OwnedExpressionMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getPositionalArgumentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_1_1_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleOwnedExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.OwnedExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule NamedArgumentList
ruleNamedArgumentList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleNamedExpressionMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.NamedExpressionMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getNamedArgumentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleNamedExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.NamedExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNamedExpressionMember
entryRuleNamedExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedExpressionMemberRule()); }
	iv_ruleNamedExpressionMember=ruleNamedExpressionMember
	{ $current=$iv_ruleNamedExpressionMember.current; }
	EOF;

// Rule NamedExpressionMember
ruleNamedExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0());
				}
				lv_memberName_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedExpressionMemberRule());
					}
					set(
						$current,
						"memberName",
						lv_memberName_0_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='=>'
		{
			newLeafNode(otherlv_1, grammarAccess.getNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedExpressionMemberAccess().getOwnedMemberFeature_compOwnedExpressionParserRuleCall_2_0());
				}
				lv_ownedMemberFeature_comp_2_0=ruleOwnedExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedExpressionMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_2_0,
						"org.omg.kerml.xtext.KerML.OwnedExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExtentExpression_Deprecated
entryRuleExtentExpression_Deprecated returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtentExpression_DeprecatedRule()); }
	iv_ruleExtentExpression_Deprecated=ruleExtentExpression_Deprecated
	{ $current=$iv_ruleExtentExpression_Deprecated.current; }
	EOF;

// Rule ExtentExpression_Deprecated
ruleExtentExpression_Deprecated returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExtentExpression_DeprecatedAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleTypeReferenceMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtentExpression_DeprecatedRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.TypeReferenceMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getExtentExpression_DeprecatedAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_operator_2_0='allInstances'
				{
					newLeafNode(lv_operator_2_0, grammarAccess.getExtentExpression_DeprecatedAccess().getOperatorAllInstancesKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtentExpression_DeprecatedRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_2_0, "allInstances");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getExtentExpression_DeprecatedAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getExtentExpression_DeprecatedAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMetadataExpressionMember
entryRuleMetadataExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataExpressionMemberRule()); }
	iv_ruleMetadataExpressionMember=ruleMetadataExpressionMember
	{ $current=$iv_ruleMetadataExpressionMember.current; }
	EOF;

// Rule MetadataExpressionMember
ruleMetadataExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMetadataExpressionMemberAccess().getOwnedMemberFeature_compMetadataExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleMetadataExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMetadataExpressionMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.MetadataExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMetadataExpression
entryRuleMetadataExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataExpressionRule()); }
	iv_ruleMetadataExpression=ruleMetadataExpression
	{ $current=$iv_ruleMetadataExpression.current; }
	EOF;

// Rule MetadataExpression
ruleMetadataExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMetadataExpressionAccess().getNullExpressionParserRuleCall_0());
		}
		this_NullExpression_0=ruleNullExpression
		{
			$current = $this_NullExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMetadataExpressionAccess().getLiteralExpressionParserRuleCall_1());
		}
		this_LiteralExpression_1=ruleLiteralExpression
		{
			$current = $this_LiteralExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMetadataExpressionAccess().getMetadataReferenceExpressionParserRuleCall_2());
		}
		this_MetadataReferenceExpression_2=ruleMetadataReferenceExpression
		{
			$current = $this_MetadataReferenceExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMetadataExpressionAccess().getMetadataOperationExpressionParserRuleCall_3());
		}
		this_MetadataOperationExpression_3=ruleMetadataOperationExpression
		{
			$current = $this_MetadataOperationExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getMetadataExpressionAccess().getLeftParenthesisKeyword_4_0());
			}
			{
				newCompositeNode(grammarAccess.getMetadataExpressionAccess().getMetadataExpressionParserRuleCall_4_1());
			}
			this_MetadataExpression_5=ruleMetadataExpression
			{
				$current = $this_MetadataExpression_5.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getMetadataExpressionAccess().getRightParenthesisKeyword_4_2());
			}
		)
	)
;

// Entry rule entryRuleMetadataReferenceExpression
entryRuleMetadataReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataReferenceExpressionRule()); }
	iv_ruleMetadataReferenceExpression=ruleMetadataReferenceExpression
	{ $current=$iv_ruleMetadataReferenceExpression.current; }
	EOF;

// Rule MetadataReferenceExpression
ruleMetadataReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMetadataReferenceExpressionAccess().getOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleFeatureReferenceMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMetadataReferenceExpressionRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.FeatureReferenceMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMetadataOperationExpression
entryRuleMetadataOperationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataOperationExpressionRule()); }
	iv_ruleMetadataOperationExpression=ruleMetadataOperationExpression
	{ $current=$iv_ruleMetadataOperationExpression.current; }
	EOF;

// Rule MetadataOperationExpression
ruleMetadataOperationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataOperationExpressionAccess().getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=ruleOwnedFeatureTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataOperationExpressionRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMetadataOperationExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMetadataOperationExpressionRule());
				}
				newCompositeNode(grammarAccess.getMetadataOperationExpressionAccess().getMetadataArgumentListParserRuleCall_2());
			}
			this_MetadataArgumentList_2=ruleMetadataArgumentList[$current]
			{
				$current = $this_MetadataArgumentList_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getMetadataOperationExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;


// Rule MetadataArgumentList
ruleMetadataArgumentList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getMetadataArgumentListRule());
			}
			newCompositeNode(grammarAccess.getMetadataArgumentListAccess().getMetadataPositionalArgumentListParserRuleCall_0());
		}
		this_MetadataPositionalArgumentList_0=ruleMetadataPositionalArgumentList[$current]
		{
			$current = $this_MetadataPositionalArgumentList_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getMetadataArgumentListRule());
			}
			newCompositeNode(grammarAccess.getMetadataArgumentListAccess().getMetadataNamedArgumentListParserRuleCall_1());
		}
		this_MetadataNamedArgumentList_1=ruleMetadataNamedArgumentList[$current]
		{
			$current = $this_MetadataNamedArgumentList_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule MetadataPositionalArgumentList
ruleMetadataPositionalArgumentList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataPositionalArgumentListAccess().getOwnedFeatureMembership_compMetadataExpressionMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleMetadataExpressionMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataPositionalArgumentListRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.MetadataExpressionMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getMetadataPositionalArgumentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMetadataPositionalArgumentListAccess().getOwnedFeatureMembership_compMetadataExpressionMemberParserRuleCall_1_1_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleMetadataExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMetadataPositionalArgumentListRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.MetadataExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule MetadataNamedArgumentList
ruleMetadataNamedArgumentList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataNamedArgumentListAccess().getOwnedFeatureMembership_compMetadataNamedExpressionMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleMetadataNamedExpressionMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataNamedArgumentListRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.MetadataNamedExpressionMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getMetadataNamedArgumentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMetadataNamedArgumentListAccess().getOwnedFeatureMembership_compMetadataNamedExpressionMemberParserRuleCall_1_1_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleMetadataNamedExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMetadataNamedArgumentListRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.MetadataNamedExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMetadataNamedExpressionMember
entryRuleMetadataNamedExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataNamedExpressionMemberRule()); }
	iv_ruleMetadataNamedExpressionMember=ruleMetadataNamedExpressionMember
	{ $current=$iv_ruleMetadataNamedExpressionMember.current; }
	EOF;

// Rule MetadataNamedExpressionMember
ruleMetadataNamedExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0());
				}
				lv_memberName_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataNamedExpressionMemberRule());
					}
					set(
						$current,
						"memberName",
						lv_memberName_0_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='=>'
		{
			newLeafNode(otherlv_1, grammarAccess.getMetadataNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataNamedExpressionMemberAccess().getOwnedMemberFeature_compMetadataExpressionParserRuleCall_2_0());
				}
				lv_ownedMemberFeature_comp_2_0=ruleMetadataExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataNamedExpressionMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_2_0,
						"org.omg.kerml.xtext.KerML.MetadataExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNullExpression
entryRuleNullExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullExpressionRule()); }
	iv_ruleNullExpression=ruleNullExpression
	{ $current=$iv_ruleNullExpression.current; }
	EOF;

// Rule NullExpression
ruleNullExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNullExpressionAccess().getNullExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	iv_ruleLiteralExpression=ruleLiteralExpression
	{ $current=$iv_ruleLiteralExpression.current; }
	EOF;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralBooleanParserRuleCall_0());
		}
		this_LiteralBoolean_0=ruleLiteralBoolean
		{
			$current = $this_LiteralBoolean_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralStringParserRuleCall_1());
		}
		this_LiteralString_1=ruleLiteralString
		{
			$current = $this_LiteralString_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralIntegerParserRuleCall_2());
		}
		this_LiteralInteger_2=ruleLiteralInteger
		{
			$current = $this_LiteralInteger_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralRealParserRuleCall_3());
		}
		this_LiteralReal_3=ruleLiteralReal
		{
			$current = $this_LiteralReal_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralUnboundedParserRuleCall_4());
		}
		this_LiteralUnbounded_4=ruleLiteralUnbounded
		{
			$current = $this_LiteralUnbounded_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteralBoolean
entryRuleLiteralBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralBooleanRule()); }
	iv_ruleLiteralBoolean=ruleLiteralBoolean
	{ $current=$iv_ruleLiteralBoolean.current; }
	EOF;

// Rule LiteralBoolean
ruleLiteralBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralBooleanAccess().getValueBooleanValueParserRuleCall_0());
			}
			lv_value_0_0=ruleBooleanValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLiteralBooleanRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.BooleanValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current.getText(); }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleLiteralString
entryRuleLiteralString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralStringRule()); }
	iv_ruleLiteralString=ruleLiteralString
	{ $current=$iv_ruleLiteralString.current; }
	EOF;

// Rule LiteralString
ruleLiteralString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING_VALUE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLiteralStringAccess().getValueSTRING_VALUETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLiteralStringRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.STRING_VALUE");
			}
		)
	)
;

// Entry rule entryRuleLiteralInteger
entryRuleLiteralInteger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralIntegerRule()); }
	iv_ruleLiteralInteger=ruleLiteralInteger
	{ $current=$iv_ruleLiteralInteger.current; }
	EOF;

// Rule LiteralInteger
ruleLiteralInteger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DECIMAL_VALUE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLiteralIntegerAccess().getValueDECIMAL_VALUETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLiteralIntegerRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.DECIMAL_VALUE");
			}
		)
	)
;

// Entry rule entryRuleLiteralReal
entryRuleLiteralReal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRealRule()); }
	iv_ruleLiteralReal=ruleLiteralReal
	{ $current=$iv_ruleLiteralReal.current; }
	EOF;

// Rule LiteralReal
ruleLiteralReal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralRealAccess().getValueRealValueParserRuleCall_0());
			}
			lv_value_0_0=ruleRealValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLiteralRealRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.RealValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRealValue
entryRuleRealValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRealValueRule()); }
	iv_ruleRealValue=ruleRealValue
	{ $current=$iv_ruleRealValue.current.getText(); }
	EOF;

// Rule RealValue
ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				this_DECIMAL_VALUE_0=RULE_DECIMAL_VALUE
				{
					$current.merge(this_DECIMAL_VALUE_0);
				}
				{
					newLeafNode(this_DECIMAL_VALUE_0, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0());
				}
			)?
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getRealValueAccess().getFullStopKeyword_0_1());
			}
			(
				this_DECIMAL_VALUE_2=RULE_DECIMAL_VALUE
				{
					$current.merge(this_DECIMAL_VALUE_2);
				}
				{
					newLeafNode(this_DECIMAL_VALUE_2, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0());
				}
				    |
				this_EXP_VALUE_3=RULE_EXP_VALUE
				{
					$current.merge(this_EXP_VALUE_3);
				}
				{
					newLeafNode(this_EXP_VALUE_3, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1());
				}
			)
		)
		    |
		this_EXP_VALUE_4=RULE_EXP_VALUE
		{
			$current.merge(this_EXP_VALUE_4);
		}
		{
			newLeafNode(this_EXP_VALUE_4, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleLiteralUnbounded
entryRuleLiteralUnbounded returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralUnboundedRule()); }
	iv_ruleLiteralUnbounded=ruleLiteralUnbounded
	{ $current=$iv_ruleLiteralUnbounded.current; }
	EOF;

// Rule LiteralUnbounded
ruleLiteralUnbounded returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLiteralUnboundedAccess().getLiteralUnboundedAction_0(),
					$current);
			}
		)
		otherlv_1='*'
		{
			newLeafNode(otherlv_1, grammarAccess.getLiteralUnboundedAccess().getAsteriskKeyword_1());
		}
	)
;

// Entry rule entryRuleLiteralUnlimitedNatural
entryRuleLiteralUnlimitedNatural returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralUnlimitedNaturalRule()); }
	iv_ruleLiteralUnlimitedNatural=ruleLiteralUnlimitedNatural
	{ $current=$iv_ruleLiteralUnlimitedNatural.current; }
	EOF;

// Rule LiteralUnlimitedNatural
ruleLiteralUnlimitedNatural returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralUnlimitedNaturalAccess().getLiteralIntegerParserRuleCall_0());
		}
		this_LiteralInteger_0=ruleLiteralInteger
		{
			$current = $this_LiteralInteger_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralUnlimitedNaturalAccess().getLiteralUnboundedParserRuleCall_1());
		}
		this_LiteralUnbounded_1=ruleLiteralUnbounded
		{
			$current = $this_LiteralUnbounded_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleName
entryRuleName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current.getText(); }
	EOF;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_UNRESTRICTED_NAME_1=RULE_UNRESTRICTED_NAME
		{
			$current.merge(this_UNRESTRICTED_NAME_1);
		}
		{
			newLeafNode(this_UNRESTRICTED_NAME_1, grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getColonQualifiedNameParserRuleCall_1());
		}
		this_ColonQualifiedName_1=ruleColonQualifiedName
		{
			$current.merge(this_ColonQualifiedName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getDotQualifiedNameParserRuleCall_2());
		}
		this_DotQualifiedName_2=ruleDotQualifiedName
		{
			$current.merge(this_DotQualifiedName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleColonQualifiedName
entryRuleColonQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getColonQualifiedNameRule()); }
	iv_ruleColonQualifiedName=ruleColonQualifiedName
	{ $current=$iv_ruleColonQualifiedName.current.getText(); }
	EOF;

// Rule ColonQualifiedName
ruleColonQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='::'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getColonQualifiedNameAccess().getColonColonKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_1_1());
			}
			this_Name_2=ruleName
			{
				$current.merge(this_Name_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)+
	)
;

// Entry rule entryRuleDotQualifiedName
entryRuleDotQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDotQualifiedNameRule()); }
	iv_ruleDotQualifiedName=ruleDotQualifiedName
	{ $current=$iv_ruleDotQualifiedName.current.getText(); }
	EOF;

// Rule DotQualifiedName
ruleDotQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDotQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_1_1());
			}
			this_Name_2=ruleName
			{
				$current.merge(this_Name_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)+
	)
;

// Rule BasicVisibilityIndicator
ruleBasicVisibilityIndicator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getBasicVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='private'
			{
				$current = grammarAccess.getBasicVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule VisibilityIndicator
ruleVisibilityIndicator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='private'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='protected'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='packaged'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule FeatureDirection
ruleFeatureDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='inout'
			{
				$current = grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DECIMAL_VALUE : '0'..'9' ('0'..'9')*;

RULE_EXP_VALUE : RULE_DECIMAL_VALUE ('e'|'E') ('+'|'-')? RULE_DECIMAL_VALUE;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_UNRESTRICTED_NAME : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_STRING_VALUE : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_REGULAR_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_DOCUMENTATION_COMMENT : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_NOTE : '//*' ( options {greedy=false;} : . )*'*/';

RULE_SL_NOTE : '//' (~(('\n'|'\r')) ~(('\n'|'\r'))*)? ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
