/*
 * generated by Xtext 2.20.0
 */
grammar InternalKerML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.omg.kerml.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.omg.kerml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.kerml.xtext.services.KerMLGrammarAccess;

}

@parser::members {

 	private KerMLGrammarAccess grammarAccess;

    public InternalKerMLParser(TokenStream input, KerMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Unit";
   	}

   	@Override
   	protected KerMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitAccess().getAnonymousPackageParserRuleCall_0());
		}
		this_AnonymousPackage_0=ruleAnonymousPackage
		{
			$current = $this_AnonymousPackage_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getPackageUnitParserRuleCall_1());
		}
		this_PackageUnit_1=rulePackageUnit
		{
			$current = $this_PackageUnit_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getClassifierUnitDefinitionParserRuleCall_2());
		}
		this_ClassifierUnitDefinition_2=ruleClassifierUnitDefinition
		{
			$current = $this_ClassifierUnitDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getClassUnitParserRuleCall_3());
		}
		this_ClassUnit_3=ruleClassUnit
		{
			$current = $this_ClassUnit_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getDataTypeUnitParserRuleCall_4());
		}
		this_DataTypeUnit_4=ruleDataTypeUnit
		{
			$current = $this_DataTypeUnit_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getAssociationUnitParserRuleCall_5());
		}
		this_AssociationUnit_5=ruleAssociationUnit
		{
			$current = $this_AssociationUnit_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getInteractionUnitParserRuleCall_6());
		}
		this_InteractionUnit_6=ruleInteractionUnit
		{
			$current = $this_InteractionUnit_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getBehaviorUnitParserRuleCall_7());
		}
		this_BehaviorUnit_7=ruleBehaviorUnit
		{
			$current = $this_BehaviorUnit_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getFunctionUnitParserRuleCall_8());
		}
		this_FunctionUnit_8=ruleFunctionUnit
		{
			$current = $this_FunctionUnit_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getPredicateUnitParserRuleCall_9());
		}
		this_PredicateUnit_9=rulePredicateUnit
		{
			$current = $this_PredicateUnit_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitAccess().getFeatureUnitParserRuleCall_10());
		}
		this_FeatureUnit_10=ruleFeatureUnit
		{
			$current = $this_FeatureUnit_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnonymousPackage
entryRuleAnonymousPackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnonymousPackageRule()); }
	iv_ruleAnonymousPackage=ruleAnonymousPackage
	{ $current=$iv_ruleAnonymousPackage.current; }
	EOF;

// Rule AnonymousPackage
ruleAnonymousPackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		if ($current==null) {
			$current = createModelElement(grammarAccess.getAnonymousPackageRule());
		}
		newCompositeNode(grammarAccess.getAnonymousPackageAccess().getPackageBodyParserRuleCall());
	}
	this_PackageBody_0=rulePackageBody[$current]
	{
		$current = $this_PackageBody_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePackageUnit
entryRulePackageUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageUnitRule()); }
	iv_rulePackageUnit=rulePackageUnit
	{ $current=$iv_rulePackageUnit.current; }
	EOF;

// Rule PackageUnit
rulePackageUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPackageUnitRule());
			}
			newCompositeNode(grammarAccess.getPackageUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPackageUnitRule());
			}
			newCompositeNode(grammarAccess.getPackageUnitAccess().getPackageDefinitionParserRuleCall_1());
		}
		this_PackageDefinition_1=rulePackageDefinition[$current]
		{
			$current = $this_PackageDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClassifierUnitDefinition
entryRuleClassifierUnitDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierUnitDefinitionRule()); }
	iv_ruleClassifierUnitDefinition=ruleClassifierUnitDefinition
	{ $current=$iv_ruleClassifierUnitDefinition.current; }
	EOF;

// Rule ClassifierUnitDefinition
ruleClassifierUnitDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierUnitDefinitionRule());
			}
			newCompositeNode(grammarAccess.getClassifierUnitDefinitionAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierUnitDefinitionRule());
			}
			newCompositeNode(grammarAccess.getClassifierUnitDefinitionAccess().getClassifierDeclarationParserRuleCall_1());
		}
		this_ClassifierDeclaration_1=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierUnitDefinitionRule());
			}
			newCompositeNode(grammarAccess.getClassifierUnitDefinitionAccess().getTypeBodyParserRuleCall_2());
		}
		this_TypeBody_2=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClassUnit
entryRuleClassUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassUnitRule()); }
	iv_ruleClassUnit=ruleClassUnit
	{ $current=$iv_ruleClassUnit.current; }
	EOF;

// Rule ClassUnit
ruleClassUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassUnitRule());
			}
			newCompositeNode(grammarAccess.getClassUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassUnitRule());
			}
			newCompositeNode(grammarAccess.getClassUnitAccess().getClassDeclarationParserRuleCall_1());
		}
		this_ClassDeclaration_1=ruleClassDeclaration[$current]
		{
			$current = $this_ClassDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassUnitRule());
			}
			newCompositeNode(grammarAccess.getClassUnitAccess().getTypeBodyParserRuleCall_2());
		}
		this_TypeBody_2=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataTypeUnit
entryRuleDataTypeUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeUnitRule()); }
	iv_ruleDataTypeUnit=ruleDataTypeUnit
	{ $current=$iv_ruleDataTypeUnit.current; }
	EOF;

// Rule DataTypeUnit
ruleDataTypeUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeUnitRule());
			}
			newCompositeNode(grammarAccess.getDataTypeUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeUnitRule());
			}
			newCompositeNode(grammarAccess.getDataTypeUnitAccess().getDataTypeDeclarationParserRuleCall_1());
		}
		this_DataTypeDeclaration_1=ruleDataTypeDeclaration[$current]
		{
			$current = $this_DataTypeDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeUnitRule());
			}
			newCompositeNode(grammarAccess.getDataTypeUnitAccess().getTypeBodyParserRuleCall_2());
		}
		this_TypeBody_2=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssociationUnit
entryRuleAssociationUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationUnitRule()); }
	iv_ruleAssociationUnit=ruleAssociationUnit
	{ $current=$iv_ruleAssociationUnit.current; }
	EOF;

// Rule AssociationUnit
ruleAssociationUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationUnitRule());
			}
			newCompositeNode(grammarAccess.getAssociationUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationUnitRule());
			}
			newCompositeNode(grammarAccess.getAssociationUnitAccess().getAssociationDeclarationParserRuleCall_1());
		}
		this_AssociationDeclaration_1=ruleAssociationDeclaration[$current]
		{
			$current = $this_AssociationDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationUnitRule());
			}
			newCompositeNode(grammarAccess.getAssociationUnitAccess().getTypeBodyParserRuleCall_2());
		}
		this_TypeBody_2=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInteractionUnit
entryRuleInteractionUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteractionUnitRule()); }
	iv_ruleInteractionUnit=ruleInteractionUnit
	{ $current=$iv_ruleInteractionUnit.current; }
	EOF;

// Rule InteractionUnit
ruleInteractionUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionUnitRule());
			}
			newCompositeNode(grammarAccess.getInteractionUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionUnitRule());
			}
			newCompositeNode(grammarAccess.getInteractionUnitAccess().getInteractionDeclarationParserRuleCall_1());
		}
		this_InteractionDeclaration_1=ruleInteractionDeclaration[$current]
		{
			$current = $this_InteractionDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionUnitRule());
			}
			newCompositeNode(grammarAccess.getInteractionUnitAccess().getTypeBodyParserRuleCall_2());
		}
		this_TypeBody_2=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBehaviorUnit
entryRuleBehaviorUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorUnitRule()); }
	iv_ruleBehaviorUnit=ruleBehaviorUnit
	{ $current=$iv_ruleBehaviorUnit.current; }
	EOF;

// Rule BehaviorUnit
ruleBehaviorUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorUnitRule());
			}
			newCompositeNode(grammarAccess.getBehaviorUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorUnitRule());
			}
			newCompositeNode(grammarAccess.getBehaviorUnitAccess().getBehaviorDeclarationParserRuleCall_1());
		}
		this_BehaviorDeclaration_1=ruleBehaviorDeclaration[$current]
		{
			$current = $this_BehaviorDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorUnitRule());
			}
			newCompositeNode(grammarAccess.getBehaviorUnitAccess().getBehaviorBodyParserRuleCall_2());
		}
		this_BehaviorBody_2=ruleBehaviorBody[$current]
		{
			$current = $this_BehaviorBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionUnit
entryRuleFunctionUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionUnitRule()); }
	iv_ruleFunctionUnit=ruleFunctionUnit
	{ $current=$iv_ruleFunctionUnit.current; }
	EOF;

// Rule FunctionUnit
ruleFunctionUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionUnitRule());
			}
			newCompositeNode(grammarAccess.getFunctionUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionUnitRule());
			}
			newCompositeNode(grammarAccess.getFunctionUnitAccess().getFunctionDeclarationParserRuleCall_1());
		}
		this_FunctionDeclaration_1=ruleFunctionDeclaration[$current]
		{
			$current = $this_FunctionDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionUnitRule());
			}
			newCompositeNode(grammarAccess.getFunctionUnitAccess().getFunctionBodyParserRuleCall_2());
		}
		this_FunctionBody_2=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePredicateUnit
entryRulePredicateUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateUnitRule()); }
	iv_rulePredicateUnit=rulePredicateUnit
	{ $current=$iv_rulePredicateUnit.current; }
	EOF;

// Rule PredicateUnit
rulePredicateUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateUnitRule());
			}
			newCompositeNode(grammarAccess.getPredicateUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateUnitRule());
			}
			newCompositeNode(grammarAccess.getPredicateUnitAccess().getPredicateDeclarationParserRuleCall_1());
		}
		this_PredicateDeclaration_1=rulePredicateDeclaration[$current]
		{
			$current = $this_PredicateDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateUnitRule());
			}
			newCompositeNode(grammarAccess.getPredicateUnitAccess().getFunctionBodyParserRuleCall_2());
		}
		this_FunctionBody_2=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeatureUnit
entryRuleFeatureUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureUnitRule()); }
	iv_ruleFeatureUnit=ruleFeatureUnit
	{ $current=$iv_ruleFeatureUnit.current; }
	EOF;

// Rule FeatureUnit
ruleFeatureUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureUnitRule());
			}
			newCompositeNode(grammarAccess.getFeatureUnitAccess().getUnitPrefixParserRuleCall_0());
		}
		this_UnitPrefix_0=ruleUnitPrefix[$current]
		{
			$current = $this_UnitPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureUnitRule());
			}
			newCompositeNode(grammarAccess.getFeatureUnitAccess().getFeatureDefinitionParserRuleCall_1());
		}
		this_FeatureDefinition_1=ruleFeatureDefinition[$current]
		{
			$current = $this_FeatureDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule UnitPrefix
ruleUnitPrefix[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitPrefixAccess().getOwnedImport_compPackageImportParserRuleCall_0_0_0());
					}
					lv_ownedImport_comp_0_0=rulePackageImport
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitPrefixRule());
						}
						add(
							$current,
							"ownedImport_comp",
							lv_ownedImport_comp_0_0,
							"org.omg.kerml.xtext.KerML.PackageImport");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitPrefixAccess().getOwnedMembership_compElementAliasParserRuleCall_0_1_0());
					}
					lv_ownedMembership_comp_1_0=ruleElementAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitPrefixRule());
						}
						add(
							$current,
							"ownedMembership_comp",
							lv_ownedMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.ElementAlias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitPrefixAccess().getOwnedRelationship_compUnitAnnotationParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleUnitAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitPrefixRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.UnitAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	iv_ruleComment=ruleComment
	{ $current=$iv_ruleComment.current; }
	EOF;

// Rule Comment
ruleComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='comment'
				{
					newLeafNode(otherlv_0, grammarAccess.getCommentAccess().getCommentKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommentAccess().getNameNameParserRuleCall_0_0_1_0());
						}
						lv_name_1_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommentRule());
							}
							set(
								$current,
								"name",
								lv_name_1_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationship_compAnnotationParserRuleCall_0_0_2_0());
						}
						lv_ownedRelationship_comp_2_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommentRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_2_0,
								"org.omg.kerml.xtext.KerML.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_0());
					}
					lv_ownedRelationship_comp_3_0=ruleEmptyAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommentRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_3_0,
							"org.omg.kerml.xtext.KerML.EmptyAnnotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_body_4_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_body_4_0, grammarAccess.getCommentAccess().getBodyML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommentRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_4_0,
						"org.omg.kerml.xtext.KerML.ML_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAnnotationAccess().getAnnotationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='about'
			{
				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getAboutKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAnnotationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEmptyAnnotation
entryRuleEmptyAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyAnnotationRule()); }
	iv_ruleEmptyAnnotation=ruleEmptyAnnotation
	{ $current=$iv_ruleEmptyAnnotation.current; }
	EOF;

// Rule EmptyAnnotation
ruleEmptyAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getEmptyAnnotationAccess().getAnnotationAction(),
				$current);
		}
	)
;

// Entry rule entryRulePrefixAnnotation
entryRulePrefixAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixAnnotationRule()); }
	iv_rulePrefixAnnotation=rulePrefixAnnotation
	{ $current=$iv_rulePrefixAnnotation.current; }
	EOF;

// Rule PrefixAnnotation
rulePrefixAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrefixAnnotationAccess().getOwnedRelatedElement_compDocumentationParserRuleCall_0());
			}
			lv_ownedRelatedElement_comp_0_0=ruleDocumentation
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPrefixAnnotationRule());
				}
				add(
					$current,
					"ownedRelatedElement_comp",
					lv_ownedRelatedElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.Documentation");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDocumentation
entryRuleDocumentation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentationRule()); }
	iv_ruleDocumentation=ruleDocumentation
	{ $current=$iv_ruleDocumentation.current; }
	EOF;

// Rule Documentation
ruleDocumentation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='comment'
			{
				newLeafNode(otherlv_0, grammarAccess.getDocumentationAccess().getCommentKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDocumentationAccess().getNameNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocumentationRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		(
			(
				lv_body_2_0=RULE_DOCUMENTATION_COMMENT
				{
					newLeafNode(lv_body_2_0, grammarAccess.getDocumentationAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocumentationRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_2_0,
						"org.omg.kerml.xtext.KerML.DOCUMENTATION_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleUnitAnnotation
entryRuleUnitAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitAnnotationRule()); }
	iv_ruleUnitAnnotation=ruleUnitAnnotation
	{ $current=$iv_ruleUnitAnnotation.current; }
	EOF;

// Rule UnitAnnotation
ruleUnitAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUnitAnnotationAccess().getOwnedRelatedElement_compUnitDocumentationParserRuleCall_0());
			}
			lv_ownedRelatedElement_comp_0_0=ruleUnitDocumentation
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getUnitAnnotationRule());
				}
				add(
					$current,
					"ownedRelatedElement_comp",
					lv_ownedRelatedElement_comp_0_0,
					"org.omg.kerml.xtext.KerML.UnitDocumentation");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleUnitDocumentation
entryRuleUnitDocumentation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitDocumentationRule()); }
	iv_ruleUnitDocumentation=ruleUnitDocumentation
	{ $current=$iv_ruleUnitDocumentation.current; }
	EOF;

// Rule UnitDocumentation
ruleUnitDocumentation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='comment'
			{
				newLeafNode(otherlv_0, grammarAccess.getUnitDocumentationAccess().getCommentKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitDocumentationAccess().getNameNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitDocumentationRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		(
			(
				(
					lv_body_2_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_body_2_1, grammarAccess.getUnitDocumentationAccess().getBodyML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitDocumentationRule());
						}
						setWithLastConsumed(
							$current,
							"body",
							lv_body_2_1,
							"org.omg.kerml.xtext.KerML.ML_COMMENT");
					}
					    |
					lv_body_2_2=RULE_DOCUMENTATION_COMMENT
					{
						newLeafNode(lv_body_2_2, grammarAccess.getUnitDocumentationAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitDocumentationRule());
						}
						setWithLastConsumed(
							$current,
							"body",
							lv_body_2_2,
							"org.omg.kerml.xtext.KerML.DOCUMENTATION_COMMENT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulePackageImport
entryRulePackageImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageImportRule()); }
	iv_rulePackageImport=rulePackageImport
	{ $current=$iv_rulePackageImport.current; }
	EOF;

// Rule PackageImport
rulePackageImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageImportAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=rulePrefixAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageImportRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.PrefixAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageImportAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0());
				}
				lv_visibility_1_0=rulePackageElementVisibilityIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageImportRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.omg.kerml.xtext.KerML.PackageElementVisibilityIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='import'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageImportAccess().getImportKeyword_2());
		}
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPackageImportRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_0_0_0());
						}
						ruleName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='::'
					{
						newLeafNode(otherlv_4, grammarAccess.getPackageImportAccess().getColonColonKeyword_3_0_1_0());
					}
					    |
					otherlv_5='.'
					{
						newLeafNode(otherlv_5, grammarAccess.getPackageImportAccess().getFullStopKeyword_3_0_1_1());
					}
				)
				otherlv_6='*'
				{
					newLeafNode(otherlv_6, grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_0_2());
				}
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPackageImportRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_1_0_0());
						}
						ruleColonQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8='::'
				{
					newLeafNode(otherlv_8, grammarAccess.getPackageImportAccess().getColonColonKeyword_3_1_1());
				}
				otherlv_9='*'
				{
					newLeafNode(otherlv_9, grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_1_2());
				}
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPackageImportRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_2_0_0());
						}
						ruleDotQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_11='.'
				{
					newLeafNode(otherlv_11, grammarAccess.getPackageImportAccess().getFullStopKeyword_3_2_1());
				}
				otherlv_12='*'
				{
					newLeafNode(otherlv_12, grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_2_2());
				}
			)
		)
		otherlv_13=';'
		{
			newLeafNode(otherlv_13, grammarAccess.getPackageImportAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleElementAlias
entryRuleElementAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementAliasRule()); }
	iv_ruleElementAlias=ruleElementAlias
	{ $current=$iv_ruleElementAlias.current; }
	EOF;

// Rule ElementAlias
ruleElementAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getElementAliasRule());
			}
			newCompositeNode(grammarAccess.getElementAliasAccess().getPackageMemberPrefixParserRuleCall_0());
		}
		this_PackageMemberPrefix_0=rulePackageMemberPrefix[$current]
		{
			$current = $this_PackageMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='alias'
			{
				newLeafNode(otherlv_1, grammarAccess.getElementAliasAccess().getAliasKeyword_1_0());
			}
			    |
			otherlv_2='import'
			{
				newLeafNode(otherlv_2, grammarAccess.getElementAliasAccess().getImportKeyword_1_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementAliasRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getElementAliasAccess().getMemberElementElementCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='as'
			{
				newLeafNode(otherlv_4, grammarAccess.getElementAliasAccess().getAsKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAliasAccess().getMemberNameNameParserRuleCall_3_1_0());
					}
					lv_memberName_5_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementAliasRule());
						}
						set(
							$current,
							"memberName",
							lv_memberName_5_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getElementAliasAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		if ($current==null) {
			$current = createModelElement(grammarAccess.getPackageRule());
		}
		newCompositeNode(grammarAccess.getPackageAccess().getPackageDefinitionParserRuleCall());
	}
	this_PackageDefinition_0=rulePackageDefinition[$current]
	{
		$current = $this_PackageDefinition_0.current;
		afterParserOrEnumRuleCall();
	}
;


// Rule PackageDefinition
rulePackageDefinition[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDefinitionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPackageDefinitionRule());
			}
			newCompositeNode(grammarAccess.getPackageDefinitionAccess().getPackageBodyParserRuleCall_2());
		}
		this_PackageBody_2=rulePackageBody[$current]
		{
			$current = $this_PackageBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule PackageBody
rulePackageBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedMembership_compPackageMemberParserRuleCall_1_0_0());
					}
					lv_ownedMembership_comp_1_0=rulePackageMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageBodyRule());
						}
						add(
							$current,
							"ownedMembership_comp",
							lv_ownedMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.PackageMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_0());
					}
					lv_ownedImport_comp_2_0=rulePackageImport
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageBodyRule());
						}
						add(
							$current,
							"ownedImport_comp",
							lv_ownedImport_comp_2_0,
							"org.omg.kerml.xtext.KerML.PackageImport");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleNonFeature
entryRuleNonFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonFeatureRule()); }
	iv_ruleNonFeature=ruleNonFeature
	{ $current=$iv_ruleNonFeature.current; }
	EOF;

// Rule NonFeature
ruleNonFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getPackageParserRuleCall_0());
		}
		this_Package_0=rulePackage
		{
			$current = $this_Package_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getClassifierParserRuleCall_1());
		}
		this_Classifier_1=ruleClassifier
		{
			$current = $this_Classifier_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getClassParserRuleCall_2());
		}
		this_Class_2=ruleClass
		{
			$current = $this_Class_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getDataTypeParserRuleCall_3());
		}
		this_DataType_3=ruleDataType
		{
			$current = $this_DataType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getAssociationParserRuleCall_4());
		}
		this_Association_4=ruleAssociation
		{
			$current = $this_Association_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getInteractionParserRuleCall_5());
		}
		this_Interaction_5=ruleInteraction
		{
			$current = $this_Interaction_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getBehaviorParserRuleCall_6());
		}
		this_Behavior_6=ruleBehavior
		{
			$current = $this_Behavior_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getFunctionParserRuleCall_7());
		}
		this_Function_7=ruleFunction
		{
			$current = $this_Function_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getPredicateParserRuleCall_8());
		}
		this_Predicate_8=rulePredicate
		{
			$current = $this_Predicate_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonFeatureAccess().getCommentParserRuleCall_9());
		}
		this_Comment_9=ruleComment
		{
			$current = $this_Comment_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePackageMember
entryRulePackageMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageMemberRule()); }
	iv_rulePackageMember=rulePackageMember
	{ $current=$iv_rulePackageMember.current; }
	EOF;

// Rule PackageMember
rulePackageMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPackageMemberRule());
			}
			newCompositeNode(grammarAccess.getPackageMemberAccess().getPackageMemberPrefixParserRuleCall_0());
		}
		this_PackageMemberPrefix_0=rulePackageMemberPrefix[$current]
		{
			$current = $this_PackageMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPackageMemberRule());
				}
				newCompositeNode(grammarAccess.getPackageMemberAccess().getNonFeatureMemberElementParserRuleCall_1_0());
			}
			this_NonFeatureMemberElement_1=ruleNonFeatureMemberElement[$current]
			{
				$current = $this_NonFeatureMemberElement_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPackageMemberRule());
				}
				newCompositeNode(grammarAccess.getPackageMemberAccess().getPackageFeatureMemberElementParserRuleCall_1_1());
			}
			this_PackageFeatureMemberElement_2=rulePackageFeatureMemberElement[$current]
			{
				$current = $this_PackageFeatureMemberElement_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule PackageMemberPrefix
rulePackageMemberPrefix[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageMemberPrefixAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=rulePrefixAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageMemberPrefixRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.PrefixAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageMemberPrefixAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0());
				}
				lv_visibility_1_0=rulePackageElementVisibilityIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageMemberPrefixRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.omg.kerml.xtext.KerML.PackageElementVisibilityIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;


// Rule NonFeatureMemberElement
ruleNonFeatureMemberElement[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getOwnedMemberElement_compNonFeatureParserRuleCall_0_0());
				}
				lv_ownedMemberElement_comp_0_0=ruleNonFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
					}
					set(
						$current,
						"ownedMemberElement_comp",
						lv_ownedMemberElement_comp_0_0,
						"org.omg.kerml.xtext.KerML.NonFeature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				otherlv_1='alias'
				{
					newLeafNode(otherlv_1, grammarAccess.getNonFeatureMemberElementAccess().getAliasKeyword_1_0_0());
				}
				    |
				otherlv_2='import'
				{
					newLeafNode(otherlv_2, grammarAccess.getNonFeatureMemberElementAccess().getImportKeyword_1_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNonFeatureMemberElementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementElementCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4='as'
				{
					newLeafNode(otherlv_4, grammarAccess.getNonFeatureMemberElementAccess().getAsKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_1_2_1_0());
						}
						lv_memberName_5_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNonFeatureMemberElementRule());
							}
							set(
								$current,
								"memberName",
								lv_memberName_5_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_1_3());
			}
		)
	)
;


// Rule PackageFeatureMemberElement
rulePackageFeatureMemberElement[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='feature'
				{
					newLeafNode(otherlv_0, grammarAccess.getPackageFeatureMemberElementAccess().getFeatureKeyword_0_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compFeatureParserRuleCall_0_1_0());
					}
					lv_ownedMemberElement_comp_1_0=ruleFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_1_0,
							"org.omg.kerml.xtext.KerML.Feature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='abstract'
			{
				newLeafNode(otherlv_2, grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_1_0());
			}
			(
				otherlv_3='feature'
				{
					newLeafNode(otherlv_3, grammarAccess.getPackageFeatureMemberElementAccess().getFeatureKeyword_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractFeatureParserRuleCall_1_2_0());
					}
					lv_ownedMemberElement_comp_4_0=ruleAbstractFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_4_0,
							"org.omg.kerml.xtext.KerML.AbstractFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_5='step'
			{
				newLeafNode(otherlv_5, grammarAccess.getPackageFeatureMemberElementAccess().getStepKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compStepParserRuleCall_2_1_0());
					}
					lv_ownedMemberElement_comp_6_0=ruleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_6_0,
							"org.omg.kerml.xtext.KerML.Step");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_7='abstract'
			{
				newLeafNode(otherlv_7, grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_3_0());
			}
			otherlv_8='step'
			{
				newLeafNode(otherlv_8, grammarAccess.getPackageFeatureMemberElementAccess().getStepKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractStepParserRuleCall_3_2_0());
					}
					lv_ownedMemberElement_comp_9_0=ruleAbstractStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_9_0,
							"org.omg.kerml.xtext.KerML.AbstractStep");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_10='expr'
			{
				newLeafNode(otherlv_10, grammarAccess.getPackageFeatureMemberElementAccess().getExprKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compBlockExpressionParserRuleCall_4_1_0());
					}
					lv_ownedMemberElement_comp_11_0=ruleBlockExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_11_0,
							"org.omg.kerml.xtext.KerML.BlockExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_12='abstract'
			{
				newLeafNode(otherlv_12, grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_5_0());
			}
			otherlv_13='expr'
			{
				newLeafNode(otherlv_13, grammarAccess.getPackageFeatureMemberElementAccess().getExprKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractBlockExpressionParserRuleCall_5_2_0());
					}
					lv_ownedMemberElement_comp_14_0=ruleAbstractBlockExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_14_0,
							"org.omg.kerml.xtext.KerML.AbstractBlockExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_15='bool'
			{
				newLeafNode(otherlv_15, grammarAccess.getPackageFeatureMemberElementAccess().getBoolKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compBooleanExpressionParserRuleCall_6_1_0());
					}
					lv_ownedMemberElement_comp_16_0=ruleBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_16_0,
							"org.omg.kerml.xtext.KerML.BooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_17='abstract'
			{
				newLeafNode(otherlv_17, grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_7_0());
			}
			otherlv_18='bool'
			{
				newLeafNode(otherlv_18, grammarAccess.getPackageFeatureMemberElementAccess().getBoolKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractBooleanExpressionParserRuleCall_7_2_0());
					}
					lv_ownedMemberElement_comp_19_0=ruleAbstractBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_19_0,
							"org.omg.kerml.xtext.KerML.AbstractBooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_20='inv'
			{
				newLeafNode(otherlv_20, grammarAccess.getPackageFeatureMemberElementAccess().getInvKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compInvariantParserRuleCall_8_1_0());
					}
					lv_ownedMemberElement_comp_21_0=ruleInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_21_0,
							"org.omg.kerml.xtext.KerML.Invariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_22='abstract'
			{
				newLeafNode(otherlv_22, grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_9_0());
			}
			otherlv_23='inv'
			{
				newLeafNode(otherlv_23, grammarAccess.getPackageFeatureMemberElementAccess().getInvKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractInvariantParserRuleCall_9_2_0());
					}
					lv_ownedMemberElement_comp_24_0=ruleAbstractInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberElement_comp",
							lv_ownedMemberElement_comp_24_0,
							"org.omg.kerml.xtext.KerML.AbstractInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule TypeBody
ruleTypeBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_0_0());
						}
						lv_ownedMembership_comp_2_0=ruleNonFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_2_0,
								"org.omg.kerml.xtext.KerML.NonFeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.FeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_2_0());
						}
						lv_ownedImport_comp_4_0=rulePackageImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeBodyRule());
							}
							add(
								$current,
								"ownedImport_comp",
								lv_ownedImport_comp_4_0,
								"org.omg.kerml.xtext.KerML.PackageImport");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;


// Rule AbstractTypeBody
ruleAbstractTypeBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0=';'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAbstractTypeBodyAccess().getIsAbstractSemicolonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbstractTypeBodyRule());
					}
					setWithLastConsumed($current, "isAbstract", true, ";");
				}
			)
		)
		    |
		(
			(
				(
					lv_isAbstract_1_0='{'
					{
						newLeafNode(lv_isAbstract_1_0, grammarAccess.getAbstractTypeBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAbstractTypeBodyRule());
						}
						setWithLastConsumed($current, "isAbstract", true, "{");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractTypeBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_0_0());
						}
						lv_ownedMembership_comp_2_0=ruleNonFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractTypeBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_2_0,
								"org.omg.kerml.xtext.KerML.NonFeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractTypeBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleFeatureTypeMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractTypeBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.FeatureTypeMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractTypeBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_2_0());
						}
						lv_ownedImport_comp_4_0=rulePackageImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractTypeBodyRule());
							}
							add(
								$current,
								"ownedImport_comp",
								lv_ownedImport_comp_4_0,
								"org.omg.kerml.xtext.KerML.PackageImport");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getAbstractTypeBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleNonFeatureTypeMember
entryRuleNonFeatureTypeMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonFeatureTypeMemberRule()); }
	iv_ruleNonFeatureTypeMember=ruleNonFeatureTypeMember
	{ $current=$iv_ruleNonFeatureTypeMember.current; }
	EOF;

// Rule NonFeatureTypeMember
ruleNonFeatureTypeMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getNonFeatureTypeMemberRule());
			}
			newCompositeNode(grammarAccess.getNonFeatureTypeMemberAccess().getTypeMemberPrefixParserRuleCall_0());
		}
		this_TypeMemberPrefix_0=ruleTypeMemberPrefix[$current]
		{
			$current = $this_TypeMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getNonFeatureTypeMemberRule());
			}
			newCompositeNode(grammarAccess.getNonFeatureTypeMemberAccess().getNonFeatureMemberElementParserRuleCall_1());
		}
		this_NonFeatureMemberElement_1=ruleNonFeatureMemberElement[$current]
		{
			$current = $this_NonFeatureMemberElement_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeatureTypeMember
entryRuleFeatureTypeMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureTypeMemberRule()); }
	iv_ruleFeatureTypeMember=ruleFeatureTypeMember
	{ $current=$iv_ruleFeatureTypeMember.current; }
	EOF;

// Rule FeatureTypeMember
ruleFeatureTypeMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureTypeMemberAccess().getFeatureMemberParserRuleCall_0());
		}
		this_FeatureMember_0=ruleFeatureMember
		{
			$current = $this_FeatureMember_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureTypeMemberAccess().getEndFeatureMemberParserRuleCall_1());
		}
		this_EndFeatureMember_1=ruleEndFeatureMember
		{
			$current = $this_EndFeatureMember_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeatureMember
entryRuleFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureMemberRule()); }
	iv_ruleFeatureMember=ruleFeatureMember
	{ $current=$iv_ruleFeatureMember.current; }
	EOF;

// Rule FeatureMember
ruleFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureMemberRule());
			}
			newCompositeNode(grammarAccess.getFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0());
		}
		this_TypeMemberPrefix_0=ruleTypeMemberPrefix[$current]
		{
			$current = $this_TypeMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_0_0());
				}
				this_FeatureMemberFlags_1=ruleFeatureMemberFlags[$current]
				{
					$current = $this_FeatureMemberFlags_1.current;
					afterParserOrEnumRuleCall();
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getFeatureMemberAccess().getFeatureMemberElementParserRuleCall_1_0_1());
				}
				this_FeatureMemberElement_2=ruleFeatureMemberElement[$current]
				{
					$current = $this_FeatureMemberElement_2.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_3='abstract'
				{
					newLeafNode(otherlv_3, grammarAccess.getFeatureMemberAccess().getAbstractKeyword_1_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_1_1());
				}
				this_FeatureMemberFlags_4=ruleFeatureMemberFlags[$current]
				{
					$current = $this_FeatureMemberFlags_4.current;
					afterParserOrEnumRuleCall();
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getFeatureMemberAccess().getAbstractFeatureMemberElementParserRuleCall_1_1_2());
				}
				this_AbstractFeatureMemberElement_5=ruleAbstractFeatureMemberElement[$current]
				{
					$current = $this_AbstractFeatureMemberElement_5.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEndFeatureMember
entryRuleEndFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndFeatureMemberRule()); }
	iv_ruleEndFeatureMember=ruleEndFeatureMember
	{ $current=$iv_ruleEndFeatureMember.current; }
	EOF;

// Rule EndFeatureMember
ruleEndFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getEndFeatureMemberRule());
			}
			newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0());
		}
		this_TypeMemberPrefix_0=ruleTypeMemberPrefix[$current]
		{
			$current = $this_TypeMemberPrefix_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='end'
				{
					newLeafNode(otherlv_1, grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_0_1());
				}
				this_FeatureMemberFlags_2=ruleFeatureMemberFlags[$current]
				{
					$current = $this_FeatureMemberFlags_2.current;
					afterParserOrEnumRuleCall();
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberElementParserRuleCall_1_0_2());
				}
				this_FeatureMemberElement_3=ruleFeatureMemberElement[$current]
				{
					$current = $this_FeatureMemberElement_3.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_4='abstract'
				{
					newLeafNode(otherlv_4, grammarAccess.getEndFeatureMemberAccess().getAbstractKeyword_1_1_0());
				}
				otherlv_5='end'
				{
					newLeafNode(otherlv_5, grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1_1_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_1_2());
				}
				this_FeatureMemberFlags_6=ruleFeatureMemberFlags[$current]
				{
					$current = $this_FeatureMemberFlags_6.current;
					afterParserOrEnumRuleCall();
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndFeatureMemberRule());
					}
					newCompositeNode(grammarAccess.getEndFeatureMemberAccess().getAbstractFeatureMemberElementParserRuleCall_1_1_3());
				}
				this_AbstractFeatureMemberElement_7=ruleAbstractFeatureMemberElement[$current]
				{
					$current = $this_AbstractFeatureMemberElement_7.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule FeatureMemberElement
ruleFeatureMemberElement[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='feature'
				{
					newLeafNode(otherlv_0, grammarAccess.getFeatureMemberElementAccess().getFeatureKeyword_0_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_0_1_0());
					}
					lv_direction_1_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_1_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compFeatureParserRuleCall_0_2_0());
					}
					lv_ownedMemberFeature_comp_2_0=ruleFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_2_0,
							"org.omg.kerml.xtext.KerML.Feature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				otherlv_3='feature'
				{
					newLeafNode(otherlv_3, grammarAccess.getFeatureMemberElementAccess().getFeatureKeyword_1_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_0());
					}
					lv_direction_4_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_4_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getMemberNameNameParserRuleCall_1_2_0());
					}
					lv_memberName_5_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"memberName",
							lv_memberName_5_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_6='is'
			{
				newLeafNode(otherlv_6, grammarAccess.getFeatureMemberElementAccess().getIsKeyword_1_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureMemberElementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getMemberFeatureFeatureCrossReference_1_4_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getFeatureMemberElementAccess().getSemicolonKeyword_1_5());
			}
		)
		    |
		(
			otherlv_9='connector'
			{
				newLeafNode(otherlv_9, grammarAccess.getFeatureMemberElementAccess().getConnectorKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_2_1_0());
					}
					lv_direction_10_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_10_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compConnectorParserRuleCall_2_2_0());
					}
					lv_ownedMemberFeature_comp_11_0=ruleConnector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_11_0,
							"org.omg.kerml.xtext.KerML.Connector");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_12='binding'
			{
				newLeafNode(otherlv_12, grammarAccess.getFeatureMemberElementAccess().getBindingKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_3_1_0());
					}
					lv_direction_13_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_13_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBindingConnectorParserRuleCall_3_2_0());
					}
					lv_ownedMemberFeature_comp_14_0=ruleBindingConnector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_14_0,
							"org.omg.kerml.xtext.KerML.BindingConnector");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_15='step'
			{
				newLeafNode(otherlv_15, grammarAccess.getFeatureMemberElementAccess().getStepKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_4_1_0());
					}
					lv_direction_16_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_16_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compStepParserRuleCall_4_2_0());
					}
					lv_ownedMemberFeature_comp_17_0=ruleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_17_0,
							"org.omg.kerml.xtext.KerML.Step");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_18='expr'
			{
				newLeafNode(otherlv_18, grammarAccess.getFeatureMemberElementAccess().getExprKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_5_1_0());
					}
					lv_direction_19_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_19_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBlockExpressionParserRuleCall_5_2_0());
					}
					lv_ownedMemberFeature_comp_20_0=ruleBlockExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_20_0,
							"org.omg.kerml.xtext.KerML.BlockExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_21='bool'
			{
				newLeafNode(otherlv_21, grammarAccess.getFeatureMemberElementAccess().getBoolKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_6_1_0());
					}
					lv_direction_22_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_22_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBooleanExpressionParserRuleCall_6_2_0());
					}
					lv_ownedMemberFeature_comp_23_0=ruleBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_23_0,
							"org.omg.kerml.xtext.KerML.BooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_24='inv'
			{
				newLeafNode(otherlv_24, grammarAccess.getFeatureMemberElementAccess().getInvKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_7_1_0());
					}
					lv_direction_25_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_25_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compInvariantParserRuleCall_7_2_0());
					}
					lv_ownedMemberFeature_comp_26_0=ruleInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_26_0,
							"org.omg.kerml.xtext.KerML.Invariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_27='succession'
			{
				newLeafNode(otherlv_27, grammarAccess.getFeatureMemberElementAccess().getSuccessionKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_8_1_0());
					}
					lv_direction_28_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_28_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compSuccessionParserRuleCall_8_2_0());
					}
					lv_ownedMemberFeature_comp_29_0=ruleSuccession
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_29_0,
							"org.omg.kerml.xtext.KerML.Succession");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_30='stream'
			{
				newLeafNode(otherlv_30, grammarAccess.getFeatureMemberElementAccess().getStreamKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_9_1_0());
					}
					lv_direction_31_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_31_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compItemFlowParserRuleCall_9_2_0());
					}
					lv_ownedMemberFeature_comp_32_0=ruleItemFlow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_32_0,
							"org.omg.kerml.xtext.KerML.ItemFlow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_33='flow'
			{
				newLeafNode(otherlv_33, grammarAccess.getFeatureMemberElementAccess().getFlowKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_10_1_0());
					}
					lv_direction_34_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_34_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compSuccessionItemFlowParserRuleCall_10_2_0());
					}
					lv_ownedMemberFeature_comp_35_0=ruleSuccessionItemFlow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_35_0,
							"org.omg.kerml.xtext.KerML.SuccessionItemFlow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule AbstractFeatureMemberElement
ruleAbstractFeatureMemberElement[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='feature'
			{
				newLeafNode(otherlv_0, grammarAccess.getAbstractFeatureMemberElementAccess().getFeatureKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_0_1_0());
					}
					lv_direction_1_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_1_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractFeatureParserRuleCall_0_2_0());
					}
					lv_ownedMemberFeature_comp_2_0=ruleAbstractFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_2_0,
							"org.omg.kerml.xtext.KerML.AbstractFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_3='connector'
			{
				newLeafNode(otherlv_3, grammarAccess.getAbstractFeatureMemberElementAccess().getConnectorKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_0());
					}
					lv_direction_4_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_4_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractConnectorParserRuleCall_1_2_0());
					}
					lv_ownedMemberFeature_comp_5_0=ruleAbstractConnector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_5_0,
							"org.omg.kerml.xtext.KerML.AbstractConnector");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_6='binding'
			{
				newLeafNode(otherlv_6, grammarAccess.getAbstractFeatureMemberElementAccess().getBindingKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_2_1_0());
					}
					lv_direction_7_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_7_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBindingConnectorParserRuleCall_2_2_0());
					}
					lv_ownedMemberFeature_comp_8_0=ruleAbstractBindingConnector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_8_0,
							"org.omg.kerml.xtext.KerML.AbstractBindingConnector");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_9='step'
			{
				newLeafNode(otherlv_9, grammarAccess.getAbstractFeatureMemberElementAccess().getStepKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_3_1_0());
					}
					lv_direction_10_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_10_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractStepParserRuleCall_3_2_0());
					}
					lv_ownedMemberFeature_comp_11_0=ruleAbstractStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_11_0,
							"org.omg.kerml.xtext.KerML.AbstractStep");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_12='expr'
			{
				newLeafNode(otherlv_12, grammarAccess.getAbstractFeatureMemberElementAccess().getExprKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_4_1_0());
					}
					lv_direction_13_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_13_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBlockExpressionParserRuleCall_4_2_0());
					}
					lv_ownedMemberFeature_comp_14_0=ruleAbstractBlockExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_14_0,
							"org.omg.kerml.xtext.KerML.AbstractBlockExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_15='bool'
			{
				newLeafNode(otherlv_15, grammarAccess.getAbstractFeatureMemberElementAccess().getBoolKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_5_1_0());
					}
					lv_direction_16_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_16_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBooleanExpressionParserRuleCall_5_2_0());
					}
					lv_ownedMemberFeature_comp_17_0=ruleAbstractBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_17_0,
							"org.omg.kerml.xtext.KerML.AbstractBooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_18='inv'
			{
				newLeafNode(otherlv_18, grammarAccess.getAbstractFeatureMemberElementAccess().getInvKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_6_1_0());
					}
					lv_direction_19_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_19_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractInvariantParserRuleCall_6_2_0());
					}
					lv_ownedMemberFeature_comp_20_0=ruleAbstractInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_20_0,
							"org.omg.kerml.xtext.KerML.AbstractInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_21='succession'
			{
				newLeafNode(otherlv_21, grammarAccess.getAbstractFeatureMemberElementAccess().getSuccessionKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_7_1_0());
					}
					lv_direction_22_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_22_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractSuccessionParserRuleCall_7_2_0());
					}
					lv_ownedMemberFeature_comp_23_0=ruleAbstractSuccession
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_23_0,
							"org.omg.kerml.xtext.KerML.AbstractSuccession");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_24='stream'
			{
				newLeafNode(otherlv_24, grammarAccess.getAbstractFeatureMemberElementAccess().getStreamKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_8_1_0());
					}
					lv_direction_25_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_25_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractItemFlowParserRuleCall_8_2_0());
					}
					lv_ownedMemberFeature_comp_26_0=ruleAbstractItemFlow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_26_0,
							"org.omg.kerml.xtext.KerML.AbstractItemFlow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_27='flow'
			{
				newLeafNode(otherlv_27, grammarAccess.getAbstractFeatureMemberElementAccess().getFlowKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_9_1_0());
					}
					lv_direction_28_0=ruleFeatureDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"direction",
							lv_direction_28_0,
							"org.omg.kerml.xtext.KerML.FeatureDirection");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractSuccessionItemFlowParserRuleCall_9_2_0());
					}
					lv_ownedMemberFeature_comp_29_0=ruleAbstractSuccessionItemFlow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFeatureMemberElementRule());
						}
						set(
							$current,
							"ownedMemberFeature_comp",
							lv_ownedMemberFeature_comp_29_0,
							"org.omg.kerml.xtext.KerML.AbstractSuccessionItemFlow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule FeatureMemberFlags
ruleFeatureMemberFlags[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_isComposite_0_0='composite'
					{
						newLeafNode(lv_isComposite_0_0, grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureMemberFlagsRule());
						}
						setWithLastConsumed($current, "isComposite", true, "composite");
					}
				)
			)
			    |
			(
				(
					lv_isPortion_1_0='portion'
					{
						newLeafNode(lv_isPortion_1_0, grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureMemberFlagsRule());
						}
						setWithLastConsumed($current, "isPortion", true, "portion");
					}
				)
			)
		)?
		(
			(
				lv_isPort_2_0='port'
				{
					newLeafNode(lv_isPort_2_0, grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureMemberFlagsRule());
					}
					setWithLastConsumed($current, "isPort", true, "port");
				}
			)
		)?
	)
;


// Rule TypeMemberPrefix
ruleTypeMemberPrefix[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=rulePrefixAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeMemberPrefixRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.PrefixAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_1_0());
				}
				lv_visibility_1_0=ruleVisibilityIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeMemberPrefixRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.omg.kerml.xtext.KerML.VisibilityIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleClassifier
entryRuleClassifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRule()); }
	iv_ruleClassifier=ruleClassifier
	{ $current=$iv_ruleClassifier.current; }
	EOF;

// Rule Classifier
ruleClassifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierRule());
			}
			newCompositeNode(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_0());
		}
		this_ClassifierDeclaration_0=ruleClassifierDeclaration[$current]
		{
			$current = $this_ClassifierDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierRule());
			}
			newCompositeNode(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ClassifierDeclaration
ruleClassifierDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassifierDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='classifier'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassifierDeclarationAccess().getClassifierKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassifierDeclarationRule());
			}
			newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2());
		}
		this_ClassifierDeclarationCompletion_2=ruleClassifierDeclarationCompletion[$current]
		{
			$current = $this_ClassifierDeclarationCompletion_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ClassifierDeclarationCompletion
ruleClassifierDeclarationCompletion[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getClassifierDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierDeclarationCompletionRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierDeclarationCompletionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierDeclarationCompletionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassifierDeclarationCompletionRule());
				}
				newCompositeNode(grammarAccess.getClassifierDeclarationCompletionAccess().getSpecializationOrConjugationParserRuleCall_2());
			}
			this_SpecializationOrConjugation_2=ruleSpecializationOrConjugation[$current]
			{
				$current = $this_SpecializationOrConjugation_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierDeclarationCompletionAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_3_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierDeclarationCompletionRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_3_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;


// Rule SpecializationOrConjugation
ruleSpecializationOrConjugation[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=':>'
				{
					newLeafNode(otherlv_0, grammarAccess.getSpecializationOrConjugationAccess().getColonGreaterThanSignKeyword_0_0_0());
				}
				    |
				otherlv_1='specializes'
				{
					newLeafNode(otherlv_1, grammarAccess.getSpecializationOrConjugationAccess().getSpecializesKeyword_0_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compSuperclassingParserRuleCall_0_1_0());
					}
					lv_ownedRelationship_comp_2_0=ruleSuperclassing
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpecializationOrConjugationRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_2_0,
							"org.omg.kerml.xtext.KerML.Superclassing");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getSpecializationOrConjugationAccess().getCommaKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compSuperclassingParserRuleCall_0_2_1_0());
						}
						lv_ownedRelationship_comp_4_0=ruleSuperclassing
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSpecializationOrConjugationRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_4_0,
								"org.omg.kerml.xtext.KerML.Superclassing");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				otherlv_5='~'
				{
					newLeafNode(otherlv_5, grammarAccess.getSpecializationOrConjugationAccess().getTildeKeyword_1_0_0());
				}
				    |
				otherlv_6='conjugates'
				{
					newLeafNode(otherlv_6, grammarAccess.getSpecializationOrConjugationAccess().getConjugatesKeyword_1_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compConjugationParserRuleCall_1_1_0());
					}
					lv_ownedRelationship_comp_7_0=ruleConjugation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpecializationOrConjugationRule());
						}
						add(
							$current,
							"ownedRelationship_comp",
							lv_ownedRelationship_comp_7_0,
							"org.omg.kerml.xtext.KerML.Conjugation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSuperclassing
entryRuleSuperclassing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuperclassingRule()); }
	iv_ruleSuperclassing=ruleSuperclassing
	{ $current=$iv_ruleSuperclassing.current; }
	EOF;

// Rule Superclassing
ruleSuperclassing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSuperclassingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSuperclassingAccess().getSuperclassClassifierCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConjugation
entryRuleConjugation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConjugationRule()); }
	iv_ruleConjugation=ruleConjugation
	{ $current=$iv_ruleConjugation.current; }
	EOF;

// Rule Conjugation
ruleConjugation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConjugationRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getConjugationAccess().getOriginalTypeClassifierCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	iv_ruleClass=ruleClass
	{ $current=$iv_ruleClass.current; }
	EOF;

// Rule Class
ruleClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassRule());
			}
			newCompositeNode(grammarAccess.getClassAccess().getClassDeclarationParserRuleCall_0());
		}
		this_ClassDeclaration_0=ruleClassDeclaration[$current]
		{
			$current = $this_ClassDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassRule());
			}
			newCompositeNode(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ClassDeclaration
ruleClassDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='class'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassDeclarationAccess().getClassKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getClassDeclarationRule());
			}
			newCompositeNode(grammarAccess.getClassDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2());
		}
		this_ClassifierDeclarationCompletion_2=ruleClassifierDeclarationCompletion[$current]
		{
			$current = $this_ClassifierDeclarationCompletion_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeRule());
			}
			newCompositeNode(grammarAccess.getDataTypeAccess().getDataTypeDeclarationParserRuleCall_0());
		}
		this_DataTypeDeclaration_0=ruleDataTypeDeclaration[$current]
		{
			$current = $this_DataTypeDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeRule());
			}
			newCompositeNode(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule DataTypeDeclaration
ruleDataTypeDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='datatype'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDataTypeDeclarationRule());
			}
			newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2());
		}
		this_ClassifierDeclarationCompletion_2=ruleClassifierDeclarationCompletion[$current]
		{
			$current = $this_ClassifierDeclarationCompletion_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssociation
entryRuleAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationRule()); }
	iv_ruleAssociation=ruleAssociation
	{ $current=$iv_ruleAssociation.current; }
	EOF;

// Rule Association
ruleAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationRule());
			}
			newCompositeNode(grammarAccess.getAssociationAccess().getAssociationDeclarationParserRuleCall_0());
		}
		this_AssociationDeclaration_0=ruleAssociationDeclaration[$current]
		{
			$current = $this_AssociationDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationRule());
			}
			newCompositeNode(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule AssociationDeclaration
ruleAssociationDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='assoc'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAssociationDeclarationRule());
			}
			newCompositeNode(grammarAccess.getAssociationDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2());
		}
		this_ClassifierDeclarationCompletion_2=ruleClassifierDeclarationCompletion[$current]
		{
			$current = $this_ClassifierDeclarationCompletion_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBehavior
entryRuleBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorRule()); }
	iv_ruleBehavior=ruleBehavior
	{ $current=$iv_ruleBehavior.current; }
	EOF;

// Rule Behavior
ruleBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorRule());
			}
			newCompositeNode(grammarAccess.getBehaviorAccess().getBehaviorDeclarationParserRuleCall_0());
		}
		this_BehaviorDeclaration_0=ruleBehaviorDeclaration[$current]
		{
			$current = $this_BehaviorDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorRule());
			}
			newCompositeNode(grammarAccess.getBehaviorAccess().getBehaviorBodyParserRuleCall_1());
		}
		this_BehaviorBody_1=ruleBehaviorBody[$current]
		{
			$current = $this_BehaviorBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule BehaviorDeclaration
ruleBehaviorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBehaviorDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='behavior'
		{
			newLeafNode(otherlv_1, grammarAccess.getBehaviorDeclarationAccess().getBehaviorKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBehaviorDeclarationRule());
			}
			newCompositeNode(grammarAccess.getBehaviorDeclarationAccess().getBehaviorDeclarationCompletionParserRuleCall_2());
		}
		this_BehaviorDeclarationCompletion_2=ruleBehaviorDeclarationCompletion[$current]
		{
			$current = $this_BehaviorDeclarationCompletion_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule BehaviorDeclarationCompletion
ruleBehaviorDeclarationCompletion[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getBehaviorDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBehaviorDeclarationCompletionRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorDeclarationCompletionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorDeclarationCompletionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBehaviorDeclarationCompletionRule());
				}
				newCompositeNode(grammarAccess.getBehaviorDeclarationCompletionAccess().getParameterListParserRuleCall_2());
			}
			this_ParameterList_2=ruleParameterList[$current]
			{
				$current = $this_ParameterList_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBehaviorDeclarationCompletionRule());
				}
				newCompositeNode(grammarAccess.getBehaviorDeclarationCompletionAccess().getSpecializationOrConjugationParserRuleCall_3());
			}
			this_SpecializationOrConjugation_3=ruleSpecializationOrConjugation[$current]
			{
				$current = $this_SpecializationOrConjugation_3.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule ParameterList
ruleParameterList[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0());
					}
					lv_ownedFeatureMembership_comp_1_0=ruleParameterMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.ParameterMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleParameterMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterListRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.ParameterMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2());
		}
	)
;


// Rule BehaviorBody
ruleBehaviorBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getBehaviorBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getBehaviorBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBehaviorBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0());
						}
						lv_ownedMembership_comp_2_0=ruleNonFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBehaviorBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_2_0,
								"org.omg.kerml.xtext.KerML.NonFeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBehaviorBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBehaviorBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.FeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBehaviorBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0());
						}
						lv_ownedRelationship_comp_4_0=rulePackageImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBehaviorBodyRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_4_0,
								"org.omg.kerml.xtext.KerML.PackageImport");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;


// Rule AbstractBehaviorBody
ruleAbstractBehaviorBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0=';'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractSemicolonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbstractBehaviorBodyRule());
					}
					setWithLastConsumed($current, "isAbstract", true, ";");
				}
			)
		)
		    |
		(
			(
				(
					lv_isAbstract_1_0='{'
					{
						newLeafNode(lv_isAbstract_1_0, grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAbstractBehaviorBodyRule());
						}
						setWithLastConsumed($current, "isAbstract", true, "{");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0());
						}
						lv_ownedMembership_comp_2_0=ruleNonFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractBehaviorBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_2_0,
								"org.omg.kerml.xtext.KerML.NonFeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractBehaviorBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.FeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0());
						}
						lv_ownedRelationship_comp_4_0=rulePackageImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractBehaviorBodyRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_4_0,
								"org.omg.kerml.xtext.KerML.PackageImport");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getAbstractBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleParameterMember
entryRuleParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterMemberRule()); }
	iv_ruleParameterMember=ruleParameterMember
	{ $current=$iv_ruleParameterMember.current; }
	EOF;

// Rule ParameterMember
ruleParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
				}
				lv_direction_0_0=ruleFeatureDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterMemberRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"org.omg.kerml.xtext.KerML.FeatureDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterMemberAccess().getMemberNameNameParserRuleCall_1_0());
				}
				lv_memberName_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterMemberRule());
					}
					set(
						$current,
						"memberName",
						lv_memberName_1_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_2_0());
				}
				lv_ownedMemberParameter_comp_2_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterMemberRule());
					}
					set(
						$current,
						"ownedMemberParameter_comp",
						lv_ownedMemberParameter_comp_2_0,
						"org.omg.kerml.xtext.KerML.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNonFeatureBehaviorMember
entryRuleNonFeatureBehaviorMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonFeatureBehaviorMemberRule()); }
	iv_ruleNonFeatureBehaviorMember=ruleNonFeatureBehaviorMember
	{ $current=$iv_ruleNonFeatureBehaviorMember.current; }
	EOF;

// Rule NonFeatureBehaviorMember
ruleNonFeatureBehaviorMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getNonFeatureBehaviorMemberAccess().getNonFeatureTypeMemberParserRuleCall());
	}
	this_NonFeatureTypeMember_0=ruleNonFeatureTypeMember
	{
		$current = $this_NonFeatureTypeMember_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFeatureBehaviorMember
entryRuleFeatureBehaviorMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureBehaviorMemberRule()); }
	iv_ruleFeatureBehaviorMember=ruleFeatureBehaviorMember
	{ $current=$iv_ruleFeatureBehaviorMember.current; }
	EOF;

// Rule FeatureBehaviorMember
ruleFeatureBehaviorMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFeatureBehaviorMemberAccess().getFeatureTypeMemberParserRuleCall());
	}
	this_FeatureTypeMember_0=ruleFeatureTypeMember
	{
		$current = $this_FeatureTypeMember_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionRule());
			}
			newCompositeNode(grammarAccess.getFunctionAccess().getFunctionDeclarationParserRuleCall_0());
		}
		this_FunctionDeclaration_0=ruleFunctionDeclaration[$current]
		{
			$current = $this_FunctionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionRule());
			}
			newCompositeNode(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_1());
		}
		this_FunctionBody_1=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule FunctionDeclaration
ruleFunctionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFunctionDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='function'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_1());
		}
		(
			(
				lv_isSufficient_2_0='all'
				{
					newLeafNode(lv_isSufficient_2_0, grammarAccess.getFunctionDeclarationAccess().getIsSufficientAllKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getNameNameParserRuleCall_3_0());
				}
				lv_name_3_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
				}
				newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getParameterListParserRuleCall_4());
			}
			this_ParameterList_4=ruleParameterList[$current]
			{
				$current = $this_ParameterList_4.current;
				afterParserOrEnumRuleCall();
			}
		)?
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
			}
			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getReturnParameterPartParserRuleCall_5());
		}
		this_ReturnParameterPart_5=ruleReturnParameterPart[$current]
		{
			$current = $this_ReturnParameterPart_5.current;
			afterParserOrEnumRuleCall();
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
				}
				newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSpecializationOrConjugationParserRuleCall_6());
			}
			this_SpecializationOrConjugation_6=ruleSpecializationOrConjugation[$current]
			{
				$current = $this_SpecializationOrConjugation_6.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule ReturnParameterPart
ruleReturnParameterPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReturnParameterPartAccess().getOwnedFeatureMembership_compReturnParameterMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleReturnParameterMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReturnParameterPartRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.ReturnParameterMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule FunctionBody
ruleFunctionBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0());
						}
						lv_ownedMembership_comp_2_0=ruleNonFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_2_0,
								"org.omg.kerml.xtext.KerML.NonFeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.FeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0());
						}
						lv_ownedRelationship_comp_4_0=rulePackageImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_4_0,
								"org.omg.kerml.xtext.KerML.PackageImport");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_2_0());
					}
					lv_ownedFeatureMembership_comp_5_0=ruleExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_5_0,
							"org.omg.kerml.xtext.KerML.ExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;


// Rule AbstractFunctionBody
ruleAbstractFunctionBody[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0=';'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractSemicolonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbstractFunctionBodyRule());
					}
					setWithLastConsumed($current, "isAbstract", true, ";");
				}
			)
		)
		    |
		(
			(
				(
					lv_isAbstract_1_0='{'
					{
						newLeafNode(lv_isAbstract_1_0, grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAbstractFunctionBodyRule());
						}
						setWithLastConsumed($current, "isAbstract", true, "{");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractFunctionBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0());
						}
						lv_ownedMembership_comp_2_0=ruleNonFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractFunctionBodyRule());
							}
							add(
								$current,
								"ownedMembership_comp",
								lv_ownedMembership_comp_2_0,
								"org.omg.kerml.xtext.KerML.NonFeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleFeatureBehaviorMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractFunctionBodyRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.FeatureBehaviorMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractFunctionBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0());
						}
						lv_ownedRelationship_comp_4_0=rulePackageImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractFunctionBodyRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_4_0,
								"org.omg.kerml.xtext.KerML.PackageImport");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_2_0());
					}
					lv_ownedFeatureMembership_comp_5_0=ruleExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractFunctionBodyRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_5_0,
							"org.omg.kerml.xtext.KerML.ExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getAbstractFunctionBodyAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleReturnParameterMember
entryRuleReturnParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnParameterMemberRule()); }
	iv_ruleReturnParameterMember=ruleReturnParameterMember
	{ $current=$iv_ruleReturnParameterMember.current; }
	EOF;

// Rule ReturnParameterMember
ruleReturnParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnParameterMemberAccess().getMemberNameNameParserRuleCall_0_0());
				}
				lv_memberName_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnParameterMemberRule());
					}
					set(
						$current,
						"memberName",
						lv_memberName_0_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_1_0());
				}
				lv_ownedMemberParameter_comp_1_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnParameterMemberRule());
					}
					set(
						$current,
						"ownedMemberParameter_comp",
						lv_ownedMemberParameter_comp_1_0,
						"org.omg.kerml.xtext.KerML.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionMember
entryRuleExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionMemberRule()); }
	iv_ruleExpressionMember=ruleExpressionMember
	{ $current=$iv_ruleExpressionMember.current; }
	EOF;

// Rule ExpressionMember
ruleExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionMemberAccess().getOwnedMemberFeature_compExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpressionMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateRule());
			}
			newCompositeNode(grammarAccess.getPredicateAccess().getPredicateDeclarationParserRuleCall_0());
		}
		this_PredicateDeclaration_0=rulePredicateDeclaration[$current]
		{
			$current = $this_PredicateDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getPredicateRule());
			}
			newCompositeNode(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_1());
		}
		this_FunctionBody_1=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule PredicateDeclaration
rulePredicateDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getPredicateDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='predicate'
		{
			newLeafNode(otherlv_1, grammarAccess.getPredicateDeclarationAccess().getPredicateKeyword_1());
		}
		(
			(
				lv_isSufficient_2_0='all'
				{
					newLeafNode(lv_isSufficient_2_0, grammarAccess.getPredicateDeclarationAccess().getIsSufficientAllKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getNameNameParserRuleCall_3_0());
				}
				lv_name_3_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPredicateDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(ruleParameterList[null])=>
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
						}
						newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getParameterListParserRuleCall_4_0_0());
					}
					this_ParameterList_4=ruleParameterList[$current]
					{
						$current = $this_ParameterList_4.current;
						afterParserOrEnumRuleCall();
					}
				)
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
					}
					newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getReturnParameterPartParserRuleCall_4_0_1());
				}
				this_ReturnParameterPart_5=ruleReturnParameterPart[$current]
				{
					$current = $this_ReturnParameterPart_5.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
						}
						newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getParameterListParserRuleCall_4_1_0());
					}
					this_ParameterList_6=ruleParameterList[$current]
					{
						$current = $this_ParameterList_6.current;
						afterParserOrEnumRuleCall();
					}
				)?
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
					}
					newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_4_1_1());
				}
				this_EmptyReturnParameterPart_7=ruleEmptyReturnParameterPart[$current]
				{
					$current = $this_EmptyReturnParameterPart_7.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPredicateDeclarationRule());
				}
				newCompositeNode(grammarAccess.getPredicateDeclarationAccess().getSpecializationOrConjugationParserRuleCall_5());
			}
			this_SpecializationOrConjugation_8=ruleSpecializationOrConjugation[$current]
			{
				$current = $this_SpecializationOrConjugation_8.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;


// Rule EmptyReturnParameterPart
ruleEmptyReturnParameterPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedFeatureMembership_compEmptyReturnParameterMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleEmptyReturnParameterMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEmptyReturnParameterPartRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.EmptyReturnParameterMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEmptyParameter
entryRuleEmptyParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyParameterRule()); }
	iv_ruleEmptyParameter=ruleEmptyParameter
	{ $current=$iv_ruleEmptyParameter.current; }
	EOF;

// Rule EmptyParameter
ruleEmptyParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getEmptyParameterAccess().getParameterAction(),
				$current);
		}
	)
;

// Entry rule entryRuleEmptyReturnParameterMember
entryRuleEmptyReturnParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyReturnParameterMemberRule()); }
	iv_ruleEmptyReturnParameterMember=ruleEmptyReturnParameterMember
	{ $current=$iv_ruleEmptyReturnParameterMember.current; }
	EOF;

// Rule EmptyReturnParameterMember
ruleEmptyReturnParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedMemberFeature_compEmptyParameterParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleEmptyParameter
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEmptyReturnParameterMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.EmptyParameter");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInteraction
entryRuleInteraction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteractionRule()); }
	iv_ruleInteraction=ruleInteraction
	{ $current=$iv_ruleInteraction.current; }
	EOF;

// Rule Interaction
ruleInteraction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionRule());
			}
			newCompositeNode(grammarAccess.getInteractionAccess().getInteractionDeclarationParserRuleCall_0());
		}
		this_InteractionDeclaration_0=ruleInteractionDeclaration[$current]
		{
			$current = $this_InteractionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionRule());
			}
			newCompositeNode(grammarAccess.getInteractionAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule InteractionDeclaration
ruleInteractionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getInteractionDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInteractionDeclarationRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='interaction'
		{
			newLeafNode(otherlv_1, grammarAccess.getInteractionDeclarationAccess().getInteractionKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInteractionDeclarationRule());
			}
			newCompositeNode(grammarAccess.getInteractionDeclarationAccess().getBehaviorDeclarationCompletionParserRuleCall_2());
		}
		this_BehaviorDeclarationCompletion_2=ruleBehaviorDeclarationCompletion[$current]
		{
			$current = $this_BehaviorDeclarationCompletion_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureRule());
			}
			newCompositeNode(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_0());
		}
		this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
		{
			$current = $this_FeatureDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureRule());
			}
			newCompositeNode(grammarAccess.getFeatureAccess().getFeatureCompletionParserRuleCall_1());
		}
		this_FeatureCompletion_1=ruleFeatureCompletion[$current]
		{
			$current = $this_FeatureCompletion_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractFeature
entryRuleAbstractFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractFeatureRule()); }
	iv_ruleAbstractFeature=ruleAbstractFeature
	{ $current=$iv_ruleAbstractFeature.current; }
	EOF;

// Rule AbstractFeature
ruleAbstractFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractFeatureRule());
			}
			newCompositeNode(grammarAccess.getAbstractFeatureAccess().getFeatureDeclarationParserRuleCall_0());
		}
		this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
		{
			$current = $this_FeatureDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractFeatureRule());
			}
			newCompositeNode(grammarAccess.getAbstractFeatureAccess().getAbstractFeatureCompletionParserRuleCall_1());
		}
		this_AbstractFeatureCompletion_1=ruleAbstractFeatureCompletion[$current]
		{
			$current = $this_AbstractFeatureCompletion_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule FeatureDefinition
ruleFeatureDefinition[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFeatureDefinitionAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureDefinitionRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "abstract");
				}
			)
		)?
		otherlv_1='feature'
		{
			newLeafNode(otherlv_1, grammarAccess.getFeatureDefinitionAccess().getFeatureKeyword_1());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureDefinitionRule());
			}
			newCompositeNode(grammarAccess.getFeatureDefinitionAccess().getFeatureDeclarationParserRuleCall_2());
		}
		this_FeatureDeclaration_2=ruleFeatureDeclaration[$current]
		{
			$current = $this_FeatureDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureDefinitionRule());
			}
			newCompositeNode(grammarAccess.getFeatureDefinitionAccess().getFeatureCompletionParserRuleCall_3());
		}
		this_FeatureCompletion_3=ruleFeatureCompletion[$current]
		{
			$current = $this_FeatureCompletion_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule FeatureDeclaration
ruleFeatureDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getNameNameParserRuleCall_1_0_0_0());
						}
						lv_name_1_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFeatureDeclarationRule());
							}
							set(
								$current,
								"name",
								lv_name_1_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
								}
								newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_0_1_0_0());
							}
							this_TypePart_2=ruleTypePart[$current]
							{
								$current = $this_TypePart_2.current;
								afterParserOrEnumRuleCall();
							}
						)?
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
							}
							newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_0_1_0_1());
						}
						this_SubsettingPart_3=ruleSubsettingPart[$current]
						{
							$current = $this_SubsettingPart_3.current;
							afterParserOrEnumRuleCall();
						}
					)
					    |
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
						}
						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1());
					}
					this_FeatureConjugationPart_4=ruleFeatureConjugationPart[$current]
					{
						$current = $this_FeatureConjugationPart_4.current;
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
					}
					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_1_0());
				}
				this_TypePart_5=ruleTypePart[$current]
				{
					$current = $this_TypePart_5.current;
					afterParserOrEnumRuleCall();
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
					}
					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_1_1());
				}
				this_SubsettingPart_6=ruleSubsettingPart[$current]
				{
					$current = $this_SubsettingPart_6.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					otherlv_7=':>>'
					{
						newLeafNode(otherlv_7, grammarAccess.getFeatureDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0());
					}
					    |
					otherlv_8='redefines'
					{
						newLeafNode(otherlv_8, grammarAccess.getFeatureDeclarationAccess().getRedefinesKeyword_1_2_0_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0());
						}
						lv_ownedRelationship_comp_9_0=ruleRedefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFeatureDeclarationRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_9_0,
								"org.omg.kerml.xtext.KerML.Redefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
						}
						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_2_2());
					}
					this_TypePart_10=ruleTypePart[$current]
					{
						$current = $this_TypePart_10.current;
						afterParserOrEnumRuleCall();
					}
				)?
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureDeclarationRule());
					}
					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3());
				}
				this_SubsettingPart_11=ruleSubsettingPart[$current]
				{
					$current = $this_SubsettingPart_11.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule FeatureConjugationPart
ruleFeatureConjugationPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='~'
			{
				newLeafNode(otherlv_0, grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0());
			}
			    |
			otherlv_1='conjugates'
			{
				newLeafNode(otherlv_1, grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationship_compFeatureConjugationParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleFeatureConjugation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureConjugationPartRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.FeatureConjugation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFeatureConjugation
entryRuleFeatureConjugation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureConjugationRule()); }
	iv_ruleFeatureConjugation=ruleFeatureConjugation
	{ $current=$iv_ruleFeatureConjugation.current; }
	EOF;

// Rule FeatureConjugation
ruleFeatureConjugation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureConjugationRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule FeatureCompletion
ruleFeatureCompletion[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureCompletionRule());
				}
				newCompositeNode(grammarAccess.getFeatureCompletionAccess().getValuePartParserRuleCall_0());
			}
			this_ValuePart_0=ruleValuePart[$current]
			{
				$current = $this_ValuePart_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getFeatureCompletionRule());
			}
			newCompositeNode(grammarAccess.getFeatureCompletionAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule AbstractFeatureCompletion
ruleAbstractFeatureCompletion[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAbstractFeatureCompletionRule());
				}
				newCompositeNode(grammarAccess.getAbstractFeatureCompletionAccess().getValuePartParserRuleCall_0());
			}
			this_ValuePart_0=ruleValuePart[$current]
			{
				$current = $this_ValuePart_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractFeatureCompletionRule());
			}
			newCompositeNode(grammarAccess.getAbstractFeatureCompletionAccess().getAbstractTypeBodyParserRuleCall_1());
		}
		this_AbstractTypeBody_1=ruleAbstractTypeBody[$current]
		{
			$current = $this_AbstractTypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ValuePart
ruleValuePart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getValuePartAccess().getEqualsSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValuePartAccess().getOwnedFeatureMembership_compFeatureValueParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_1_0=ruleFeatureValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValuePartRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_1_0,
						"org.omg.kerml.xtext.KerML.FeatureValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFeatureValue
entryRuleFeatureValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureValueRule()); }
	iv_ruleFeatureValue=ruleFeatureValue
	{ $current=$iv_ruleFeatureValue.current; }
	EOF;

// Rule FeatureValue
ruleFeatureValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFeatureValueAccess().getValue_compExpressionParserRuleCall_0());
			}
			lv_value_comp_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFeatureValueRule());
				}
				set(
					$current,
					"value_comp",
					lv_value_comp_0_0,
					"org.omg.kerml.xtext.KerML.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule TypePart
ruleTypePart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':'
			{
				newLeafNode(otherlv_0, grammarAccess.getTypePartAccess().getColonKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTypePartAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_0());
						}
						lv_ownedRelationship_comp_1_0=ruleFeatureTyping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypePartRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_1_0,
								"org.omg.kerml.xtext.KerML.FeatureTyping");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				otherlv_2='any'
				{
					newLeafNode(otherlv_2, grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1());
				}
			)
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypePartRule());
					}
					newCompositeNode(grammarAccess.getTypePartAccess().getMultiplicityPartParserRuleCall_0_2());
				}
				this_MultiplicityPart_3=ruleMultiplicityPart[$current]
				{
					$current = $this_MultiplicityPart_3.current;
					afterParserOrEnumRuleCall();
				}
			)?
		)
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getTypePartRule());
			}
			newCompositeNode(grammarAccess.getTypePartAccess().getMultiplicityPartParserRuleCall_1());
		}
		this_MultiplicityPart_4=ruleMultiplicityPart[$current]
		{
			$current = $this_MultiplicityPart_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeatureTyping
entryRuleFeatureTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureTypingRule()); }
	iv_ruleFeatureTyping=ruleFeatureTyping
	{ $current=$iv_ruleFeatureTyping.current; }
	EOF;

// Rule FeatureTyping
ruleFeatureTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureTypingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getFeatureTypingAccess().getTypeTypeCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule MultiplicityPart
ruleMultiplicityPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									lv_isOrdered_2_0='ordered'
									{
										newLeafNode(lv_isOrdered_2_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getMultiplicityPartRule());
										}
										setWithLastConsumed($current, "isOrdered", true, "ordered");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									lv_isNonunique_3_0='nonunique'
									{
										newLeafNode(lv_isNonunique_3_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getMultiplicityPartRule());
										}
										setWithLastConsumed($current, "isNonunique", true, "nonunique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityRule()); }
	iv_ruleMultiplicity=ruleMultiplicity
	{ $current=$iv_ruleMultiplicity.current; }
	EOF;

// Rule Multiplicity
ruleMultiplicity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compNaturalLiteralMemberParserRuleCall_1_0_0());
					}
					lv_ownedFeatureMembership_comp_1_0=ruleNaturalLiteralMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicityRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_1_0,
							"org.omg.kerml.xtext.KerML.NaturalLiteralMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='..'
			{
				newLeafNode(otherlv_2, grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compUnlimitedNaturalLiteralMemberParserRuleCall_2_0());
				}
				lv_ownedFeatureMembership_comp_3_0=ruleUnlimitedNaturalLiteralMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicityRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_3_0,
						"org.omg.kerml.xtext.KerML.UnlimitedNaturalLiteralMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3());
		}
	)
;


// Rule SubsettingPart
ruleSubsettingPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSubsettingPartRule());
				}
				newCompositeNode(grammarAccess.getSubsettingPartAccess().getSubsetsParserRuleCall_0_0());
			}
			this_Subsets_0=ruleSubsets[$current]
			{
				$current = $this_Subsets_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getSubsettingPartAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compSubsetParserRuleCall_0_1_1_0());
						}
						lv_ownedRelationship_comp_2_0=ruleSubset
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubsettingPartRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_2_0,
								"org.omg.kerml.xtext.KerML.Subset");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSubsettingPartRule());
				}
				newCompositeNode(grammarAccess.getSubsettingPartAccess().getRedefinesParserRuleCall_1_0());
			}
			this_Redefines_3=ruleRedefines[$current]
			{
				$current = $this_Redefines_3.current;
				afterParserOrEnumRuleCall();
			}
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getSubsettingPartAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_1_1_0());
						}
						lv_ownedRelationship_comp_5_0=ruleRedefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubsettingPartRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_5_0,
								"org.omg.kerml.xtext.KerML.Redefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)*
;


// Rule Subsets
ruleSubsets[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':>'
			{
				newLeafNode(otherlv_0, grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0());
			}
			    |
			otherlv_1='subsets'
			{
				newLeafNode(otherlv_1, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubsetsAccess().getOwnedRelationship_compSubsetParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleSubset
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubsetsRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.Subset");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSubset
entryRuleSubset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubsetRule()); }
	iv_ruleSubset=ruleSubset
	{ $current=$iv_ruleSubset.current; }
	EOF;

// Rule Subset
ruleSubset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSubsetRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSubsetAccess().getSubsettedFeatureFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;


// Rule Redefines
ruleRedefines[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=':>>'
			{
				newLeafNode(otherlv_0, grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0());
			}
			    |
			otherlv_1='redefines'
			{
				newLeafNode(otherlv_1, grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRedefinesAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_2_0=ruleRedefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRedefinesRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_2_0,
						"org.omg.kerml.xtext.KerML.Redefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRedefinition
entryRuleRedefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRedefinitionRule()); }
	iv_ruleRedefinition=ruleRedefinition
	{ $current=$iv_ruleRedefinition.current; }
	EOF;

// Rule Redefinition
ruleRedefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRedefinitionRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMultiplicityMember
entryRuleMultiplicityMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityMemberRule()); }
	iv_ruleMultiplicityMember=ruleMultiplicityMember
	{ $current=$iv_ruleMultiplicityMember.current; }
	EOF;

// Rule MultiplicityMember
ruleMultiplicityMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMultiplicityMemberAccess().getOwnedMemberFeature_compMultiplicityParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleMultiplicity
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMultiplicityMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.Multiplicity");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNaturalLiteralMember
entryRuleNaturalLiteralMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNaturalLiteralMemberRule()); }
	iv_ruleNaturalLiteralMember=ruleNaturalLiteralMember
	{ $current=$iv_ruleNaturalLiteralMember.current; }
	EOF;

// Rule NaturalLiteralMember
ruleNaturalLiteralMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNaturalLiteralMemberAccess().getOwnedMemberFeature_compNaturalLiteralExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleNaturalLiteralExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNaturalLiteralMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.NaturalLiteralExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleUnlimitedNaturalLiteralMember
entryRuleUnlimitedNaturalLiteralMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralMemberRule()); }
	iv_ruleUnlimitedNaturalLiteralMember=ruleUnlimitedNaturalLiteralMember
	{ $current=$iv_ruleUnlimitedNaturalLiteralMember.current; }
	EOF;

// Rule UnlimitedNaturalLiteralMember
ruleUnlimitedNaturalLiteralMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralMemberAccess().getOwnedMemberFeature_compUnlimitedNaturalLiteralExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleUnlimitedNaturalLiteralExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getUnlimitedNaturalLiteralMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.UnlimitedNaturalLiteralExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConnector
entryRuleConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorRule()); }
	iv_ruleConnector=ruleConnector
	{ $current=$iv_ruleConnector.current; }
	EOF;

// Rule Connector
ruleConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getConnectorRule());
			}
			newCompositeNode(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_0());
		}
		this_ConnectorDeclaration_0=ruleConnectorDeclaration[$current]
		{
			$current = $this_ConnectorDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getConnectorRule());
			}
			newCompositeNode(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractConnector
entryRuleAbstractConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractConnectorRule()); }
	iv_ruleAbstractConnector=ruleAbstractConnector
	{ $current=$iv_ruleAbstractConnector.current; }
	EOF;

// Rule AbstractConnector
ruleAbstractConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractConnectorRule());
			}
			newCompositeNode(grammarAccess.getAbstractConnectorAccess().getConnectorDeclarationParserRuleCall_0());
		}
		this_ConnectorDeclaration_0=ruleConnectorDeclaration[$current]
		{
			$current = $this_ConnectorDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractConnectorRule());
			}
			newCompositeNode(grammarAccess.getAbstractConnectorAccess().getAbstractTypeBodyParserRuleCall_1());
		}
		this_AbstractTypeBody_1=ruleAbstractTypeBody[$current]
		{
			$current = $this_AbstractTypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ConnectorDeclaration
ruleConnectorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConnectorDeclarationRule());
							}
							newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0_0());
						}
						this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
						{
							$current = $this_FeatureDeclaration_0.current;
							afterParserOrEnumRuleCall();
						}
					)?
					otherlv_1='from'
					{
						newLeafNode(otherlv_1, grammarAccess.getConnectorDeclarationAccess().getFromKeyword_0_0_0_1());
					}
				)
				    |
				(
					(
						(
							lv_isSufficient_2_0='all'
							{
								newLeafNode(lv_isSufficient_2_0, grammarAccess.getConnectorDeclarationAccess().getIsSufficientAllKeyword_0_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConnectorDeclarationRule());
								}
								setWithLastConsumed($current, "isSufficient", true, "all");
							}
						)
					)
					(
						otherlv_3='from'
						{
							newLeafNode(otherlv_3, grammarAccess.getConnectorDeclarationAccess().getFromKeyword_0_0_1_1());
						}
					)?
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_1_0());
					}
					lv_ownedFeatureMembership_comp_4_0=ruleConnectorEndMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_4_0,
							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='to'
			{
				newLeafNode(otherlv_5, grammarAccess.getConnectorDeclarationAccess().getToKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_3_0());
					}
					lv_ownedFeatureMembership_comp_6_0=ruleConnectorEndMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_6_0,
							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConnectorDeclarationRule());
				}
				newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_1_0());
			}
			this_FeatureDeclaration_7=ruleFeatureDeclaration[$current]
			{
				$current = $this_FeatureDeclaration_7.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getConnectorDeclarationAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_2_0());
					}
					lv_ownedFeatureMembership_comp_9_0=ruleConnectorEndMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_9_0,
							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_4_0());
					}
					lv_ownedFeatureMembership_comp_11_0=ruleConnectorEndMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_11_0,
							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_5_1_0());
						}
						lv_ownedFeatureMembership_comp_13_0=ruleConnectorEndMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConnectorDeclarationRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_13_0,
								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getConnectorDeclarationAccess().getRightParenthesisKeyword_1_6());
			}
		)
	)
;

// Entry rule entryRuleConnectorEnd
entryRuleConnectorEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorEndRule()); }
	iv_ruleConnectorEnd=ruleConnectorEnd
	{ $current=$iv_ruleConnectorEnd.current; }
	EOF;

// Rule ConnectorEnd
ruleConnectorEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationship_compSubsetParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=ruleSubset
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorEndRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.Subset");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_1_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorEndRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_1_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleConnectorEndMember
entryRuleConnectorEndMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorEndMemberRule()); }
	iv_ruleConnectorEndMember=ruleConnectorEndMember
	{ $current=$iv_ruleConnectorEndMember.current; }
	EOF;

// Rule ConnectorEndMember
ruleConnectorEndMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getMemberNameNameParserRuleCall_0_0_0());
					}
					lv_memberName_0_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
						}
						set(
							$current,
							"memberName",
							lv_memberName_0_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='=>'
			{
				newLeafNode(otherlv_1, grammarAccess.getConnectorEndMemberAccess().getEqualsSignGreaterThanSignKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getOwnedMemberFeature_compConnectorEndParserRuleCall_1_0());
				}
				lv_ownedMemberFeature_comp_2_0=ruleConnectorEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_2_0,
						"org.omg.kerml.xtext.KerML.ConnectorEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBindingConnector
entryRuleBindingConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingConnectorRule()); }
	iv_ruleBindingConnector=ruleBindingConnector
	{ $current=$iv_ruleBindingConnector.current; }
	EOF;

// Rule BindingConnector
ruleBindingConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBindingConnectorRule());
			}
			newCompositeNode(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_0());
		}
		this_BindingConnectorDeclaration_0=ruleBindingConnectorDeclaration[$current]
		{
			$current = $this_BindingConnectorDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBindingConnectorRule());
			}
			newCompositeNode(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractBindingConnector
entryRuleAbstractBindingConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractBindingConnectorRule()); }
	iv_ruleAbstractBindingConnector=ruleAbstractBindingConnector
	{ $current=$iv_ruleAbstractBindingConnector.current; }
	EOF;

// Rule AbstractBindingConnector
ruleAbstractBindingConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractBindingConnectorRule());
			}
			newCompositeNode(grammarAccess.getAbstractBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_0());
		}
		this_BindingConnectorDeclaration_0=ruleBindingConnectorDeclaration[$current]
		{
			$current = $this_BindingConnectorDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractBindingConnectorRule());
			}
			newCompositeNode(grammarAccess.getAbstractBindingConnectorAccess().getAbstractTypeBodyParserRuleCall_1());
		}
		this_AbstractTypeBody_1=ruleAbstractTypeBody[$current]
		{
			$current = $this_AbstractTypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule BindingConnectorDeclaration
ruleBindingConnectorDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
					}
					this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
					{
						$current = $this_FeatureDeclaration_0.current;
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_1='of'
				{
					newLeafNode(otherlv_1, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						lv_isSufficient_2_0='all'
						{
							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
							}
							setWithLastConsumed($current, "isSufficient", true, "all");
						}
					)
				)
				(
					otherlv_3='of'
					{
						newLeafNode(otherlv_3, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1());
					}
				)?
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_4_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_4_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_6_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_6_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSuccession
entryRuleSuccession returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuccessionRule()); }
	iv_ruleSuccession=ruleSuccession
	{ $current=$iv_ruleSuccession.current; }
	EOF;

// Rule Succession
ruleSuccession returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionRule());
			}
			newCompositeNode(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_0());
		}
		this_SuccessionDeclaration_0=ruleSuccessionDeclaration[$current]
		{
			$current = $this_SuccessionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionRule());
			}
			newCompositeNode(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractSuccession
entryRuleAbstractSuccession returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractSuccessionRule()); }
	iv_ruleAbstractSuccession=ruleAbstractSuccession
	{ $current=$iv_ruleAbstractSuccession.current; }
	EOF;

// Rule AbstractSuccession
ruleAbstractSuccession returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractSuccessionRule());
			}
			newCompositeNode(grammarAccess.getAbstractSuccessionAccess().getSuccessionDeclarationParserRuleCall_0());
		}
		this_SuccessionDeclaration_0=ruleSuccessionDeclaration[$current]
		{
			$current = $this_SuccessionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractSuccessionRule());
			}
			newCompositeNode(grammarAccess.getAbstractSuccessionAccess().getAbstractTypeBodyParserRuleCall_1());
		}
		this_AbstractTypeBody_1=ruleAbstractTypeBody[$current]
		{
			$current = $this_AbstractTypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule SuccessionDeclaration
ruleSuccessionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
					}
					this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
					{
						$current = $this_FeatureDeclaration_0.current;
						afterParserOrEnumRuleCall();
					}
				)?
				otherlv_1='first'
				{
					newLeafNode(otherlv_1, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						lv_isSufficient_2_0='all'
						{
							newLeafNode(lv_isSufficient_2_0, grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
							}
							setWithLastConsumed($current, "isSufficient", true, "all");
						}
					)
				)
				(
					otherlv_3='first'
					{
						newLeafNode(otherlv_3, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1());
					}
				)?
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_4_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_4_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='then'
		{
			newLeafNode(otherlv_5, grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_6_0=ruleConnectorEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_6_0,
						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleItemFlow
entryRuleItemFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowRule()); }
	iv_ruleItemFlow=ruleItemFlow
	{ $current=$iv_ruleItemFlow.current; }
	EOF;

// Rule ItemFlow
ruleItemFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getItemFlowRule());
			}
			newCompositeNode(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_0());
		}
		this_ItemFlowDeclaration_0=ruleItemFlowDeclaration[$current]
		{
			$current = $this_ItemFlowDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getItemFlowRule());
			}
			newCompositeNode(grammarAccess.getItemFlowAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractItemFlow
entryRuleAbstractItemFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractItemFlowRule()); }
	iv_ruleAbstractItemFlow=ruleAbstractItemFlow
	{ $current=$iv_ruleAbstractItemFlow.current; }
	EOF;

// Rule AbstractItemFlow
ruleAbstractItemFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractItemFlowRule());
			}
			newCompositeNode(grammarAccess.getAbstractItemFlowAccess().getItemFlowDeclarationParserRuleCall_0());
		}
		this_ItemFlowDeclaration_0=ruleItemFlowDeclaration[$current]
		{
			$current = $this_ItemFlowDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractItemFlowRule());
			}
			newCompositeNode(grammarAccess.getAbstractItemFlowAccess().getAbstractTypeBodyParserRuleCall_1());
		}
		this_AbstractTypeBody_1=ruleAbstractTypeBody[$current]
		{
			$current = $this_AbstractTypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSuccessionItemFlow
entryRuleSuccessionItemFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuccessionItemFlowRule()); }
	iv_ruleSuccessionItemFlow=ruleSuccessionItemFlow
	{ $current=$iv_ruleSuccessionItemFlow.current; }
	EOF;

// Rule SuccessionItemFlow
ruleSuccessionItemFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
			}
			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_0());
		}
		this_ItemFlowDeclaration_0=ruleItemFlowDeclaration[$current]
		{
			$current = $this_ItemFlowDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
			}
			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getTypeBodyParserRuleCall_1());
		}
		this_TypeBody_1=ruleTypeBody[$current]
		{
			$current = $this_TypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractSuccessionItemFlow
entryRuleAbstractSuccessionItemFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractSuccessionItemFlowRule()); }
	iv_ruleAbstractSuccessionItemFlow=ruleAbstractSuccessionItemFlow
	{ $current=$iv_ruleAbstractSuccessionItemFlow.current; }
	EOF;

// Rule AbstractSuccessionItemFlow
ruleAbstractSuccessionItemFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractSuccessionItemFlowRule());
			}
			newCompositeNode(grammarAccess.getAbstractSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_0());
		}
		this_ItemFlowDeclaration_0=ruleItemFlowDeclaration[$current]
		{
			$current = $this_ItemFlowDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractSuccessionItemFlowRule());
			}
			newCompositeNode(grammarAccess.getAbstractSuccessionItemFlowAccess().getAbstractTypeBodyParserRuleCall_1());
		}
		this_AbstractTypeBody_1=ruleAbstractTypeBody[$current]
		{
			$current = $this_AbstractTypeBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ItemFlowDeclaration
ruleItemFlowDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
					}
					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
				}
				this_FeatureDeclaration_0=ruleFeatureDeclaration[$current]
				{
					$current = $this_FeatureDeclaration_0.current;
					afterParserOrEnumRuleCall();
				}
				(
					(
						otherlv_1='of'
						{
							newLeafNode(otherlv_1, grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_1_0_1_0());
								}
								lv_ownedFeatureMembership_comp_2_0=ruleItemFeatureMember
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
									}
									add(
										$current,
										"ownedFeatureMembership_comp",
										lv_ownedFeatureMembership_comp_2_0,
										"org.omg.kerml.xtext.KerML.ItemFeatureMember");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0());
							}
							lv_ownedFeatureMembership_comp_3_0=ruleEmptyItemFeatureMember
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
								}
								add(
									$current,
									"ownedFeatureMembership_comp",
									lv_ownedFeatureMembership_comp_3_0,
									"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_4='from'
				{
					newLeafNode(otherlv_4, grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2());
				}
			)
			    |
			(
				(
					(
						lv_isSufficient_5_0='all'
						{
							newLeafNode(lv_isSufficient_5_0, grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
							}
							setWithLastConsumed($current, "isSufficient", true, "all");
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_1_0());
						}
						lv_ownedFeatureMembership_comp_6_0=ruleEmptyItemFeatureMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_6_0,
								"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7='from'
					{
						newLeafNode(otherlv_7, grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_1_2());
					}
				)?
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_8_0=ruleItemFlowEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_8_0,
						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='to'
		{
			newLeafNode(otherlv_9, grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0());
				}
				lv_ownedFeatureMembership_comp_10_0=ruleItemFlowEndMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_10_0,
						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleItemFeatureTyping
entryRuleItemFeatureTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFeatureTypingRule()); }
	iv_ruleItemFeatureTyping=ruleItemFeatureTyping
	{ $current=$iv_ruleItemFeatureTyping.current; }
	EOF;

// Rule ItemFeatureTyping
ruleItemFeatureTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFeatureTypingAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=ruleFeatureTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFeatureTypingRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.FeatureTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFeatureTypingAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_1_0=ruleMultiplicityMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFeatureTypingRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_1_0,
						"org.omg.kerml.xtext.KerML.MultiplicityMember");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEmptyItemFeature
entryRuleEmptyItemFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyItemFeatureRule()); }
	iv_ruleEmptyItemFeature=ruleEmptyItemFeature
	{ $current=$iv_ruleEmptyItemFeature.current; }
	EOF;

// Rule EmptyItemFeature
ruleEmptyItemFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getEmptyItemFeatureAccess().getItemFeatureAction(),
				$current);
		}
	)
;

// Entry rule entryRuleItemFlowEnd
entryRuleItemFlowEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowEndRule()); }
	iv_ruleItemFlowEnd=ruleItemFlowEnd
	{ $current=$iv_ruleItemFlowEnd.current; }
	EOF;

// Rule ItemFlowEnd
ruleItemFlowEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleItemFlowFeatureMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.ItemFlowFeatureMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleItemFlowFeature
entryRuleItemFlowFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowFeatureRule()); }
	iv_ruleItemFlowFeature=ruleItemFlowFeature
	{ $current=$iv_ruleItemFlowFeature.current; }
	EOF;

// Rule ItemFlowFeature
ruleItemFlowFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationship_compRedefinitionParserRuleCall_0());
			}
			lv_ownedRelationship_comp_0_0=ruleRedefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowFeatureRule());
				}
				add(
					$current,
					"ownedRelationship_comp",
					lv_ownedRelationship_comp_0_0,
					"org.omg.kerml.xtext.KerML.Redefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleItemFeatureMember
entryRuleItemFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFeatureMemberRule()); }
	iv_ruleItemFeatureMember=ruleItemFeatureMember
	{ $current=$iv_ruleItemFeatureMember.current; }
	EOF;

// Rule ItemFeatureMember
ruleItemFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getItemFeatureMemberAccess().getMemberNameNameParserRuleCall_0_0_0());
					}
					lv_memberName_0_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemFeatureMemberRule());
						}
						set(
							$current,
							"memberName",
							lv_memberName_0_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getItemFeatureMemberAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getItemFeatureMemberAccess().getOwnedMemberFeature_compItemFeatureTypingParserRuleCall_1_0());
				}
				lv_ownedMemberFeature_comp_2_0=ruleItemFeatureTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemFeatureMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_2_0,
						"org.omg.kerml.xtext.KerML.ItemFeatureTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleItemFlowEndMember
entryRuleItemFlowEndMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowEndMemberRule()); }
	iv_ruleItemFlowEndMember=ruleItemFlowEndMember
	{ $current=$iv_ruleItemFlowEndMember.current; }
	EOF;

// Rule ItemFlowEndMember
ruleItemFlowEndMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowEndMemberAccess().getOwnedMemberFeature_compItemFlowEndParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleItemFlowEnd
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowEndMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.ItemFlowEnd");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleItemFlowFeatureMember
entryRuleItemFlowFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemFlowFeatureMemberRule()); }
	iv_ruleItemFlowFeatureMember=ruleItemFlowFeatureMember
	{ $current=$iv_ruleItemFlowFeatureMember.current; }
	EOF;

// Rule ItemFlowFeatureMember
ruleItemFlowFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleItemFlowFeature
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getItemFlowFeatureMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.ItemFlowFeature");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEmptyItemFeatureMember
entryRuleEmptyItemFeatureMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyItemFeatureMemberRule()); }
	iv_ruleEmptyItemFeatureMember=ruleEmptyItemFeatureMember
	{ $current=$iv_ruleEmptyItemFeatureMember.current; }
	EOF;

// Rule EmptyItemFeatureMember
ruleEmptyItemFeatureMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleEmptyItemFeature
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEmptyItemFeatureMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.EmptyItemFeature");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterRule());
				}
				newCompositeNode(grammarAccess.getParameterAccess().getTypePartParserRuleCall_1());
			}
			this_TypePart_1=ruleTypePart[$current]
			{
				$current = $this_TypePart_1.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getStepRule());
			}
			newCompositeNode(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_0());
		}
		this_StepDeclaration_0=ruleStepDeclaration[$current]
		{
			$current = $this_StepDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getStepRule());
			}
			newCompositeNode(grammarAccess.getStepAccess().getBehaviorBodyParserRuleCall_1());
		}
		this_BehaviorBody_1=ruleBehaviorBody[$current]
		{
			$current = $this_BehaviorBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractStep
entryRuleAbstractStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractStepRule()); }
	iv_ruleAbstractStep=ruleAbstractStep
	{ $current=$iv_ruleAbstractStep.current; }
	EOF;

// Rule AbstractStep
ruleAbstractStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractStepRule());
			}
			newCompositeNode(grammarAccess.getAbstractStepAccess().getStepDeclarationParserRuleCall_0());
		}
		this_StepDeclaration_0=ruleStepDeclaration[$current]
		{
			$current = $this_StepDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractStepRule());
			}
			newCompositeNode(grammarAccess.getAbstractStepAccess().getAbstractBehaviorBodyParserRuleCall_1());
		}
		this_AbstractBehaviorBody_1=ruleAbstractBehaviorBody[$current]
		{
			$current = $this_AbstractBehaviorBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule StepDeclaration
ruleStepDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getStepDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStepDeclarationAccess().getNameNameParserRuleCall_1_0_0_0());
						}
						lv_name_1_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStepDeclarationRule());
							}
							set(
								$current,
								"name",
								lv_name_1_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_0_1());
					}
					this_TypePart_2=ruleTypePart[$current]
					{
						$current = $this_TypePart_2.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_0_2());
					}
					this_ParameterList_3=ruleParameterList[$current]
					{
						$current = $this_ParameterList_3.current;
						afterParserOrEnumRuleCall();
					}
				)?
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepDeclarationRule());
					}
					newCompositeNode(grammarAccess.getStepDeclarationAccess().getSubsettingPartParserRuleCall_1_0_3());
				}
				this_SubsettingPart_4=ruleSubsettingPart[$current]
				{
					$current = $this_SubsettingPart_4.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_0_4());
					}
					this_ValuePart_5=ruleValuePart[$current]
					{
						$current = $this_ValuePart_5.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_1_0());
					}
					this_TypePart_6=ruleTypePart[$current]
					{
						$current = $this_TypePart_6.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_1_1());
					}
					this_ParameterList_7=ruleParameterList[$current]
					{
						$current = $this_ParameterList_7.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_1_2());
					}
					this_ValuePart_8=ruleValuePart[$current]
					{
						$current = $this_ValuePart_8.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				(
					otherlv_9=':>>'
					{
						newLeafNode(otherlv_9, grammarAccess.getStepDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0());
					}
					    |
					otherlv_10='redefines'
					{
						newLeafNode(otherlv_10, grammarAccess.getStepDeclarationAccess().getRedefinesKeyword_1_2_0_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStepDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0());
						}
						lv_ownedRelationship_comp_11_0=ruleRedefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStepDeclarationRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_11_0,
								"org.omg.kerml.xtext.KerML.Redefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_2_2());
					}
					this_TypePart_12=ruleTypePart[$current]
					{
						$current = $this_TypePart_12.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_2_3());
					}
					this_ParameterList_13=ruleParameterList[$current]
					{
						$current = $this_ParameterList_13.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStepDeclarationRule());
						}
						newCompositeNode(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_2_4());
					}
					this_ValuePart_14=ruleValuePart[$current]
					{
						$current = $this_ValuePart_14.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleInvariant
entryRuleInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantRule()); }
	iv_ruleInvariant=ruleInvariant
	{ $current=$iv_ruleInvariant.current; }
	EOF;

// Rule Invariant
ruleInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInvariantRule());
			}
			newCompositeNode(grammarAccess.getInvariantAccess().getBooleanExpressionDeclarationParserRuleCall_0());
		}
		this_BooleanExpressionDeclaration_0=ruleBooleanExpressionDeclaration[$current]
		{
			$current = $this_BooleanExpressionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInvariantRule());
			}
			newCompositeNode(grammarAccess.getInvariantAccess().getInvariantPartParserRuleCall_1());
		}
		this_InvariantPart_1=ruleInvariantPart[$current]
		{
			$current = $this_InvariantPart_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getInvariantRule());
			}
			newCompositeNode(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_2());
		}
		this_FunctionBody_2=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractInvariant
entryRuleAbstractInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractInvariantRule()); }
	iv_ruleAbstractInvariant=ruleAbstractInvariant
	{ $current=$iv_ruleAbstractInvariant.current; }
	EOF;

// Rule AbstractInvariant
ruleAbstractInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractInvariantRule());
			}
			newCompositeNode(grammarAccess.getAbstractInvariantAccess().getBooleanExpressionDeclarationParserRuleCall_0());
		}
		this_BooleanExpressionDeclaration_0=ruleBooleanExpressionDeclaration[$current]
		{
			$current = $this_BooleanExpressionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractInvariantRule());
			}
			newCompositeNode(grammarAccess.getAbstractInvariantAccess().getInvariantPartParserRuleCall_1());
		}
		this_InvariantPart_1=ruleInvariantPart[$current]
		{
			$current = $this_InvariantPart_1.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractInvariantRule());
			}
			newCompositeNode(grammarAccess.getAbstractInvariantAccess().getAbstractFunctionBodyParserRuleCall_2());
		}
		this_AbstractFunctionBody_2=ruleAbstractFunctionBody[$current]
		{
			$current = $this_AbstractFunctionBody_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule InvariantPart
ruleInvariantPart[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInvariantPartAccess().getOwnedFeatureMembership_compTrueLiteralMemberParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleTrueLiteralMember
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInvariantPartRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.TrueLiteralMember");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTrueLiteralExpression
entryRuleTrueLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueLiteralExpressionRule()); }
	iv_ruleTrueLiteralExpression=ruleTrueLiteralExpression
	{ $current=$iv_ruleTrueLiteralExpression.current; }
	EOF;

// Rule TrueLiteralExpression
ruleTrueLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getTrueLiteralExpressionAccess().getLiteralBooleanAction(),
				$current);
		}
	)
;

// Entry rule entryRuleTrueLiteralMember
entryRuleTrueLiteralMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueLiteralMemberRule()); }
	iv_ruleTrueLiteralMember=ruleTrueLiteralMember
	{ $current=$iv_ruleTrueLiteralMember.current; }
	EOF;

// Rule TrueLiteralMember
ruleTrueLiteralMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTrueLiteralMemberAccess().getOwnedMemberFeature_compTrueLiteralExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleTrueLiteralExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTrueLiteralMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.TrueLiteralExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBlockExpression
entryRuleBlockExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockExpressionRule()); }
	iv_ruleBlockExpression=ruleBlockExpression
	{ $current=$iv_ruleBlockExpression.current; }
	EOF;

// Rule BlockExpression
ruleBlockExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBlockExpressionRule());
			}
			newCompositeNode(grammarAccess.getBlockExpressionAccess().getExpressionDeclarationParserRuleCall_0());
		}
		this_ExpressionDeclaration_0=ruleExpressionDeclaration[$current]
		{
			$current = $this_ExpressionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBlockExpressionRule());
			}
			newCompositeNode(grammarAccess.getBlockExpressionAccess().getFunctionBodyParserRuleCall_1());
		}
		this_FunctionBody_1=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractBlockExpression
entryRuleAbstractBlockExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractBlockExpressionRule()); }
	iv_ruleAbstractBlockExpression=ruleAbstractBlockExpression
	{ $current=$iv_ruleAbstractBlockExpression.current; }
	EOF;

// Rule AbstractBlockExpression
ruleAbstractBlockExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractBlockExpressionRule());
			}
			newCompositeNode(grammarAccess.getAbstractBlockExpressionAccess().getExpressionDeclarationParserRuleCall_0());
		}
		this_ExpressionDeclaration_0=ruleExpressionDeclaration[$current]
		{
			$current = $this_ExpressionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractBlockExpressionRule());
			}
			newCompositeNode(grammarAccess.getAbstractBlockExpressionAccess().getAbstractFunctionBodyParserRuleCall_1());
		}
		this_AbstractFunctionBody_1=ruleAbstractFunctionBody[$current]
		{
			$current = $this_AbstractFunctionBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ExpressionDeclaration
ruleExpressionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getNameNameParserRuleCall_1_0_0_0());
						}
						lv_name_1_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionDeclarationRule());
							}
							set(
								$current,
								"name",
								lv_name_1_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_0_1());
					}
					this_TypePart_2=ruleTypePart[$current]
					{
						$current = $this_TypePart_2.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_0_2_0());
					}
					this_ParameterList_3=ruleParameterList[$current]
					{
						$current = $this_ParameterList_3.current;
						afterParserOrEnumRuleCall();
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_0_2_1());
					}
					this_ReturnParameterPart_4=ruleReturnParameterPart[$current]
					{
						$current = $this_ReturnParameterPart_4.current;
						afterParserOrEnumRuleCall();
					}
				)?
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
					}
					newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_0_3());
				}
				this_SubsettingPart_5=ruleSubsettingPart[$current]
				{
					$current = $this_SubsettingPart_5.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_0_4());
					}
					this_ValuePart_6=ruleValuePart[$current]
					{
						$current = $this_ValuePart_6.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_1_0());
					}
					this_TypePart_7=ruleTypePart[$current]
					{
						$current = $this_TypePart_7.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_1_1_0());
					}
					this_ParameterList_8=ruleParameterList[$current]
					{
						$current = $this_ParameterList_8.current;
						afterParserOrEnumRuleCall();
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_1_1_1());
					}
					this_ReturnParameterPart_9=ruleReturnParameterPart[$current]
					{
						$current = $this_ReturnParameterPart_9.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_1_2());
					}
					this_ValuePart_10=ruleValuePart[$current]
					{
						$current = $this_ValuePart_10.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				(
					otherlv_11=':>>'
					{
						newLeafNode(otherlv_11, grammarAccess.getExpressionDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0());
					}
					    |
					otherlv_12='redefines'
					{
						newLeafNode(otherlv_12, grammarAccess.getExpressionDeclarationAccess().getRedefinesKeyword_1_2_0_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0());
						}
						lv_ownedRelationship_comp_13_0=ruleRedefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionDeclarationRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_13_0,
								"org.omg.kerml.xtext.KerML.Redefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_2_2());
					}
					this_TypePart_14=ruleTypePart[$current]
					{
						$current = $this_TypePart_14.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_2_3_0());
					}
					this_ParameterList_15=ruleParameterList[$current]
					{
						$current = $this_ParameterList_15.current;
						afterParserOrEnumRuleCall();
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_2_3_1());
					}
					this_ReturnParameterPart_16=ruleReturnParameterPart[$current]
					{
						$current = $this_ReturnParameterPart_16.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_2_4());
					}
					this_ValuePart_17=ruleValuePart[$current]
					{
						$current = $this_ValuePart_17.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBooleanExpressionRule());
			}
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getBooleanExpressionDeclarationParserRuleCall_0());
		}
		this_BooleanExpressionDeclaration_0=ruleBooleanExpressionDeclaration[$current]
		{
			$current = $this_BooleanExpressionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getBooleanExpressionRule());
			}
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_1());
		}
		this_FunctionBody_1=ruleFunctionBody[$current]
		{
			$current = $this_FunctionBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractBooleanExpression
entryRuleAbstractBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractBooleanExpressionRule()); }
	iv_ruleAbstractBooleanExpression=ruleAbstractBooleanExpression
	{ $current=$iv_ruleAbstractBooleanExpression.current; }
	EOF;

// Rule AbstractBooleanExpression
ruleAbstractBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractBooleanExpressionRule());
			}
			newCompositeNode(grammarAccess.getAbstractBooleanExpressionAccess().getBooleanExpressionDeclarationParserRuleCall_0());
		}
		this_BooleanExpressionDeclaration_0=ruleBooleanExpressionDeclaration[$current]
		{
			$current = $this_BooleanExpressionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getAbstractBooleanExpressionRule());
			}
			newCompositeNode(grammarAccess.getAbstractBooleanExpressionAccess().getAbstractFunctionBodyParserRuleCall_1());
		}
		this_AbstractFunctionBody_1=ruleAbstractFunctionBody[$current]
		{
			$current = $this_AbstractFunctionBody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule BooleanExpressionDeclaration
ruleBooleanExpressionDeclaration[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isSufficient_0_0='all'
				{
					newLeafNode(lv_isSufficient_0_0, grammarAccess.getBooleanExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
					}
					setWithLastConsumed($current, "isSufficient", true, "all");
				}
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getNameNameParserRuleCall_1_0_0_0());
						}
						lv_name_1_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBooleanExpressionDeclarationRule());
							}
							set(
								$current,
								"name",
								lv_name_1_0,
								"org.omg.kerml.xtext.KerML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_0_1());
					}
					this_TypePart_2=ruleTypePart[$current]
					{
						$current = $this_TypePart_2.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_0_2());
					}
					this_ParameterList_3=ruleParameterList[$current]
					{
						$current = $this_ParameterList_3.current;
						afterParserOrEnumRuleCall();
					}
				)?
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
					}
					newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_0_3());
				}
				this_EmptyReturnParameterPart_4=ruleEmptyReturnParameterPart[$current]
				{
					$current = $this_EmptyReturnParameterPart_4.current;
					afterParserOrEnumRuleCall();
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
					}
					newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_0_4());
				}
				this_SubsettingPart_5=ruleSubsettingPart[$current]
				{
					$current = $this_SubsettingPart_5.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_0_5());
					}
					this_ValuePart_6=ruleValuePart[$current]
					{
						$current = $this_ValuePart_6.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_1_0());
					}
					this_TypePart_7=ruleTypePart[$current]
					{
						$current = $this_TypePart_7.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_1_1_0());
					}
					this_ParameterList_8=ruleParameterList[$current]
					{
						$current = $this_ParameterList_8.current;
						afterParserOrEnumRuleCall();
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_1_1_1());
					}
					this_EmptyReturnParameterPart_9=ruleEmptyReturnParameterPart[$current]
					{
						$current = $this_EmptyReturnParameterPart_9.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_1_2());
					}
					this_ValuePart_10=ruleValuePart[$current]
					{
						$current = $this_ValuePart_10.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				(
					otherlv_11=':>>'
					{
						newLeafNode(otherlv_11, grammarAccess.getBooleanExpressionDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0());
					}
					    |
					otherlv_12='redefines'
					{
						newLeafNode(otherlv_12, grammarAccess.getBooleanExpressionDeclarationAccess().getRedefinesKeyword_1_2_0_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0());
						}
						lv_ownedRelationship_comp_13_0=ruleRedefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBooleanExpressionDeclarationRule());
							}
							add(
								$current,
								"ownedRelationship_comp",
								lv_ownedRelationship_comp_13_0,
								"org.omg.kerml.xtext.KerML.Redefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_2_2());
					}
					this_TypePart_14=ruleTypePart[$current]
					{
						$current = $this_TypePart_14.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_2_3());
					}
					this_ParameterList_15=ruleParameterList[$current]
					{
						$current = $this_ParameterList_15.current;
						afterParserOrEnumRuleCall();
					}
				)?
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
					}
					newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_2_4());
				}
				this_EmptyReturnParameterPart_16=ruleEmptyReturnParameterPart[$current]
				{
					$current = $this_EmptyReturnParameterPart_16.current;
					afterParserOrEnumRuleCall();
				}
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanExpressionDeclarationRule());
						}
						newCompositeNode(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_2_5());
					}
					this_ValuePart_17=ruleValuePart[$current]
					{
						$current = $this_ValuePart_17.current;
						afterParserOrEnumRuleCall();
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_0());
		}
		this_ConditionalExpression_0=ruleConditionalExpression
		{
			$current = $this_ConditionalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getQueryPathExpressionParserRuleCall_1());
		}
		this_QueryPathExpression_1=ruleQueryPathExpression
		{
			$current = $this_QueryPathExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	iv_ruleConditionalExpression=ruleConditionalExpression
	{ $current=$iv_ruleConditionalExpression.current; }
	EOF;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0());
		}
		this_NullCoalescingExpression_0=ruleNullCoalescingExpression
		{
			$current = $this_NullCoalescingExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getConditionalExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalTestOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleConditionalTestOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ConditionalTestOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperand_compConditionalExpressionParserRuleCall_1_4_0());
					}
					lv_operand_comp_5_0=ruleConditionalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_5_0,
							"org.omg.kerml.xtext.KerML.ConditionalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConditionalTestOperator
entryRuleConditionalTestOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionalTestOperatorRule()); }
	iv_ruleConditionalTestOperator=ruleConditionalTestOperator
	{ $current=$iv_ruleConditionalTestOperator.current.getText(); }
	EOF;

// Rule ConditionalTestOperator
ruleConditionalTestOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='?'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getConditionalTestOperatorAccess().getQuestionMarkKeyword());
	}
;

// Entry rule entryRuleNullCoalescingExpression
entryRuleNullCoalescingExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullCoalescingExpressionRule()); }
	iv_ruleNullCoalescingExpression=ruleNullCoalescingExpression
	{ $current=$iv_ruleNullCoalescingExpression.current; }
	EOF;

// Rule NullCoalescingExpression
ruleNullCoalescingExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getConditionalOrExpressionParserRuleCall_0());
		}
		this_ConditionalOrExpression_0=ruleConditionalOrExpression
		{
			$current = $this_ConditionalOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleNullCoalescingOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.NullCoalescingOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperand_compConditionalOrExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleConditionalOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.ConditionalOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNullCoalescingOperator
entryRuleNullCoalescingOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNullCoalescingOperatorRule()); }
	iv_ruleNullCoalescingOperator=ruleNullCoalescingOperator
	{ $current=$iv_ruleNullCoalescingOperator.current.getText(); }
	EOF;

// Rule NullCoalescingOperator
ruleNullCoalescingOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='??'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword());
	}
;

// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalOrExpressionRule()); }
	iv_ruleConditionalOrExpression=ruleConditionalOrExpression
	{ $current=$iv_ruleConditionalOrExpression.current; }
	EOF;

// Rule ConditionalOrExpression
ruleConditionalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0());
		}
		this_ConditionalAndExpression_0=ruleConditionalAndExpression
		{
			$current = $this_ConditionalAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getConditionalOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleConditionalOrOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ConditionalOrOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperand_compConditionalAndExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleConditionalAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.ConditionalAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalOrOperator
entryRuleConditionalOrOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionalOrOperatorRule()); }
	iv_ruleConditionalOrOperator=ruleConditionalOrOperator
	{ $current=$iv_ruleConditionalOrOperator.current.getText(); }
	EOF;

// Rule ConditionalOrOperator
ruleConditionalOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='||'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getConditionalOrOperatorAccess().getVerticalLineVerticalLineKeyword());
	}
;

// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalAndExpressionRule()); }
	iv_ruleConditionalAndExpression=ruleConditionalAndExpression
	{ $current=$iv_ruleConditionalAndExpression.current; }
	EOF;

// Rule ConditionalAndExpression
ruleConditionalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOrExpressionParserRuleCall_0());
		}
		this_OrExpression_0=ruleOrExpression
		{
			$current = $this_OrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getConditionalAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleConditionalAndOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ConditionalAndOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperand_compOrExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalAndOperator
entryRuleConditionalAndOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionalAndOperatorRule()); }
	iv_ruleConditionalAndOperator=ruleConditionalAndOperator
	{ $current=$iv_ruleConditionalAndOperator.current.getText(); }
	EOF;

// Rule ConditionalAndOperator
ruleConditionalAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getConditionalAndOperatorAccess().getAmpersandAmpersandKeyword());
	}
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
		}
		this_XorExpression_0=ruleXorExpression
		{
			$current = $this_XorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleOrOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.OrOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOperand_compXorExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleXorExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.XorExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOrOperator
entryRuleOrOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOrOperatorRule()); }
	iv_ruleOrOperator=ruleOrOperator
	{ $current=$iv_ruleOrOperator.current.getText(); }
	EOF;

// Rule OrOperator
ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='|'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOrOperatorAccess().getVerticalLineKeyword());
	}
;

// Entry rule entryRuleXorExpression
entryRuleXorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXorExpressionRule()); }
	iv_ruleXorExpression=ruleXorExpression
	{ $current=$iv_ruleXorExpression.current; }
	EOF;

// Rule XorExpression
ruleXorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getXorExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleXorOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXorExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.XorOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperand_compAndExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXorExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleXorOperator
entryRuleXorOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXorOperatorRule()); }
	iv_ruleXorOperator=ruleXorOperator
	{ $current=$iv_ruleXorOperator.current.getText(); }
	EOF;

// Rule XorOperator
ruleXorOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='^'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword());
	}
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleAndOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.AndOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperand_compEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndOperator
entryRuleAndOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAndOperatorRule()); }
	iv_ruleAndOperator=ruleAndOperator
	{ $current=$iv_ruleAndOperator.current.getText(); }
	EOF;

// Rule AndOperator
ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getAmpersandKeyword());
	}
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0());
		}
		this_ClassificationExpression_0=ruleClassificationExpression
		{
			$current = $this_ClassificationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleEqualityOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.EqualityOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperand_compClassificationExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleClassificationExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.ClassificationExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEqualityOperatorRule()); }
	iv_ruleEqualityOperator=ruleEqualityOperator
	{ $current=$iv_ruleEqualityOperator.current.getText(); }
	EOF;

// Rule EqualityOperator
ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
		}
	)
;

// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassificationExpressionRule()); }
	iv_ruleClassificationExpression=ruleClassificationExpression
	{ $current=$iv_ruleClassificationExpression.current; }
	EOF;

// Rule ClassificationExpression
ruleClassificationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleClassificationOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.ClassificationOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0());
					}
					lv_ownedFeatureMembership_comp_3_0=ruleTypeReferenceMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_3_0,
							"org.omg.kerml.xtext.KerML.TypeReferenceMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleClassificationOperator
entryRuleClassificationOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getClassificationOperatorRule()); }
	iv_ruleClassificationOperator=ruleClassificationOperator
	{ $current=$iv_ruleClassificationOperator.current.getText(); }
	EOF;

// Rule ClassificationOperator
ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='instanceof'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0());
		}
		    |
		kw='hastype'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1());
		}
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0());
		}
		this_AdditiveExpression_0=ruleAdditiveExpression
		{
			$current = $this_AdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleRelationalOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.RelationalOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperand_compAdditiveExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.AdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelationalOperatorRule()); }
	iv_ruleRelationalOperator=ruleRelationalOperator
	{ $current=$iv_ruleRelationalOperator.current.getText(); }
	EOF;

// Rule RelationalOperator
ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3());
		}
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleAdditiveOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.AdditiveOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperand_compMultiplicativeExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveOperator
entryRuleAdditiveOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveOperatorRule()); }
	iv_ruleAdditiveOperator=ruleAdditiveOperator
	{ $current=$iv_ruleAdditiveOperator.current.getText(); }
	EOF;

// Rule AdditiveOperator
ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnitsExpressionParserRuleCall_0());
		}
		this_UnitsExpression_0=ruleUnitsExpression
		{
			$current = $this_UnitsExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleMultiplicativeOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.MultiplicativeOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperand_compUnitsExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleUnitsExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.UnitsExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeOperator
entryRuleMultiplicativeOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeOperatorRule()); }
	iv_ruleMultiplicativeOperator=ruleMultiplicativeOperator
	{ $current=$iv_ruleMultiplicativeOperator.current.getText(); }
	EOF;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1());
		}
		    |
		kw='**'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskAsteriskKeyword_2());
		}
	)
;

// Entry rule entryRuleUnitsExpression
entryRuleUnitsExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitsExpressionRule()); }
	iv_ruleUnitsExpression=ruleUnitsExpression
	{ $current=$iv_ruleUnitsExpression.current; }
	EOF;

// Rule UnitsExpression
ruleUnitsExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitsExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getUnitsExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0='@'
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitsExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "@");
					}
				)
			)
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getUnitsExpressionAccess().getLeftSquareBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitsExpressionAccess().getOperand_compExpressionParserRuleCall_1_3_0());
					}
					lv_operand_comp_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitsExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_4_0,
							"org.omg.kerml.xtext.KerML.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getUnitsExpressionAccess().getRightSquareBracketKeyword_1_4());
			}
		)?
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getSequenceAccessExpressionParserRuleCall_0());
		}
		this_SequenceAccessExpression_0=ruleSequenceAccessExpression
		{
			$current = $this_SequenceAccessExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleUnaryOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.omg.kerml.xtext.KerML.UnaryOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperand_compSequenceAccessExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleSequenceAccessExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.SequenceAccessExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperatorRule()); }
	iv_ruleUnaryOperator=ruleUnaryOperator
	{ $current=$iv_ruleUnaryOperator.current.getText(); }
	EOF;

// Rule UnaryOperator
ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2());
		}
		    |
		kw='~'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getTildeKeyword_3());
		}
	)
;

// Entry rule entryRuleSequenceAccessExpression
entryRuleSequenceAccessExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceAccessExpressionRule()); }
	iv_ruleSequenceAccessExpression=ruleSequenceAccessExpression
	{ $current=$iv_ruleSequenceAccessExpression.current; }
	EOF;

// Rule SequenceAccessExpression
ruleSequenceAccessExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSequenceAccessExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getSequenceAccessExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0='['
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getSequenceAccessExpressionAccess().getOperatorLeftSquareBracketKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSequenceAccessExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "[");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceAccessExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceAccessExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getSequenceAccessExpressionAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0());
		}
		this_BaseExpression_0=ruleBaseExpression
		{
			$current = $this_BaseExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperatorNameParserRuleCall_1_2_0());
					}
					lv_operator_3_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_3_0,
							"org.omg.kerml.xtext.KerML.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedFeatureMembership_compBodyMemberParserRuleCall_1_3_0());
					}
					lv_ownedFeatureMembership_comp_4_0=ruleBodyMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_4_0,
							"org.omg.kerml.xtext.KerML.BodyMember");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
	)
;

// Entry rule entryRuleBodyExpression
entryRuleBodyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyExpressionRule()); }
	iv_ruleBodyExpression=ruleBodyExpression
	{ $current=$iv_ruleBodyExpression.current; }
	EOF;

// Rule BodyExpression
ruleBodyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
					(
						ruleBodyParameterMember
					)
				)
				(
					(
						ruleBodyParameterMember
					)
				)*
				'('
				(
					(
						ruleExpressionMember
					)
				)
				')'
			)
			)=>
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0());
						}
						lv_ownedFeatureMembership_comp_0_0=ruleBodyParameterMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_0_0,
								"org.omg.kerml.xtext.KerML.BodyParameterMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0());
						}
						lv_ownedFeatureMembership_comp_1_0=ruleBodyParameterMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_1_0,
								"org.omg.kerml.xtext.KerML.BodyParameterMember");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getBodyExpressionAccess().getLeftParenthesisKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0_3_0());
						}
						lv_ownedFeatureMembership_comp_3_0=ruleExpressionMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_3_0,
								"org.omg.kerml.xtext.KerML.ExpressionMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getBodyExpressionAccess().getRightParenthesisKeyword_0_0_4());
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationship_compExpressionTypingParserRuleCall_1_0());
				}
				lv_ownedRelationship_comp_5_0=ruleExpressionTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_5_0,
						"org.omg.kerml.xtext.KerML.ExpressionTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionTyping
entryRuleExpressionTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionTypingRule()); }
	iv_ruleExpressionTyping=ruleExpressionTyping
	{ $current=$iv_ruleExpressionTyping.current; }
	EOF;

// Rule ExpressionTyping
ruleExpressionTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpressionTypingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getExpressionTypingAccess().getTypeFunctionCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBaseExpression
entryRuleBaseExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseExpressionRule()); }
	iv_ruleBaseExpression=ruleBaseExpression
	{ $current=$iv_ruleBaseExpression.current; }
	EOF;

// Rule BaseExpression
ruleBaseExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0());
		}
		this_NullExpression_0=ruleNullExpression
		{
			$current = $this_NullExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1());
		}
		this_LiteralExpression_1=ruleLiteralExpression
		{
			$current = $this_LiteralExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2());
		}
		this_FeatureReferenceExpression_2=ruleFeatureReferenceExpression
		{
			$current = $this_FeatureReferenceExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_3());
		}
		this_InvocationExpression_3=ruleInvocationExpression
		{
			$current = $this_InvocationExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getClassExtentExpressionParserRuleCall_4());
		}
		this_ClassExtentExpression_4=ruleClassExtentExpression
		{
			$current = $this_ClassExtentExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getSequenceConstructionExpressionParserRuleCall_5());
		}
		this_SequenceConstructionExpression_5=ruleSequenceConstructionExpression
		{
			$current = $this_SequenceConstructionExpression_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0());
			}
			{
				newCompositeNode(grammarAccess.getBaseExpressionAccess().getExpressionParserRuleCall_6_1());
			}
			this_Expression_7=ruleExpression
			{
				$current = $this_Expression_7.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_6_2());
			}
		)
	)
;

// Entry rule entryRuleFeatureReferenceExpression
entryRuleFeatureReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureReferenceExpressionRule()); }
	iv_ruleFeatureReferenceExpression=ruleFeatureReferenceExpression
	{ $current=$iv_ruleFeatureReferenceExpression.current; }
	EOF;

// Rule FeatureReferenceExpression
ruleFeatureReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleFeatureReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFeatureReferenceExpressionRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.FeatureReference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInvocationExpression
entryRuleInvocationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvocationExpressionRule()); }
	iv_ruleInvocationExpression=ruleInvocationExpression
	{ $current=$iv_ruleInvocationExpression.current; }
	EOF;

// Rule InvocationExpression
ruleInvocationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInvocationExpressionAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_0());
				}
				lv_ownedRelationship_comp_0_0=ruleFeatureTyping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvocationExpressionRule());
					}
					add(
						$current,
						"ownedRelationship_comp",
						lv_ownedRelationship_comp_0_0,
						"org.omg.kerml.xtext.KerML.FeatureTyping");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getInvocationExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInvocationExpressionRule());
				}
				newCompositeNode(grammarAccess.getInvocationExpressionAccess().getTupleParserRuleCall_2());
			}
			this_Tuple_2=ruleTuple[$current]
			{
				$current = $this_Tuple_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getInvocationExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;


// Rule Tuple
ruleTuple[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getTupleRule());
			}
			newCompositeNode(grammarAccess.getTupleAccess().getPositionalTupleParserRuleCall_0());
		}
		this_PositionalTuple_0=rulePositionalTuple[$current]
		{
			$current = $this_PositionalTuple_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getTupleRule());
			}
			newCompositeNode(grammarAccess.getTupleAccess().getNamedTupleParserRuleCall_1());
		}
		this_NamedTuple_1=ruleNamedTuple[$current]
		{
			$current = $this_NamedTuple_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule PositionalTuple
rulePositionalTuple[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleExpressionMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPositionalTupleRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.ExpressionMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getPositionalTupleAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_1_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPositionalTupleRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.ExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule NamedTuple
ruleNamedTuple[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleNamedExpressionMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedTupleRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.NamedExpressionMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getNamedTupleAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0());
					}
					lv_ownedFeatureMembership_comp_2_0=ruleNamedExpressionMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamedTupleRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_2_0,
							"org.omg.kerml.xtext.KerML.NamedExpressionMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleClassExtentExpression
entryRuleClassExtentExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassExtentExpressionRule()); }
	iv_ruleClassExtentExpression=ruleClassExtentExpression
	{ $current=$iv_ruleClassExtentExpression.current; }
	EOF;

// Rule ClassExtentExpression
ruleClassExtentExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassExtentExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0());
				}
				lv_ownedFeatureMembership_comp_0_0=ruleTypeReferenceMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassExtentExpressionRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_0_0,
						"org.omg.kerml.xtext.KerML.TypeReferenceMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassExtentExpressionAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_operator_2_0='allInstances'
				{
					newLeafNode(lv_operator_2_0, grammarAccess.getClassExtentExpressionAccess().getOperatorAllInstancesKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassExtentExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_2_0, "allInstances");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getClassExtentExpressionAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getClassExtentExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeReferenceAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0());
			}
			lv_ownedRelationship_comp_0_0=ruleFeatureTyping
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
				}
				add(
					$current,
					"ownedRelationship_comp",
					lv_ownedRelationship_comp_0_0,
					"org.omg.kerml.xtext.KerML.FeatureTyping");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSequenceConstructionExpression
entryRuleSequenceConstructionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceConstructionExpressionRule()); }
	iv_ruleSequenceConstructionExpression=ruleSequenceConstructionExpression
	{ $current=$iv_ruleSequenceConstructionExpression.current; }
	EOF;

// Rule SequenceConstructionExpression
ruleSequenceConstructionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSequenceConstructionExpressionAccess().getNullExpressionAction_0_0(),
						$current);
				}
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_1());
			}
			otherlv_2='}'
			{
				newLeafNode(otherlv_2, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getExpressionParserRuleCall_1_1());
			}
			this_Expression_4=ruleExpression
			{
				$current = $this_Expression_4.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					(
						{
							$current = forceCreateModelElementAndAdd(
								grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_0_0(),
								$current);
						}
					)
					(
						(
							lv_operator_6_0=','
							{
								newLeafNode(lv_operator_6_0, grammarAccess.getSequenceConstructionExpressionAccess().getOperatorCommaKeyword_1_2_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSequenceConstructionExpressionRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_6_0, ",");
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0_2_0());
							}
							lv_operand_comp_7_0=ruleSequenceElementList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
								}
								add(
									$current,
									"operand_comp",
									lv_operand_comp_7_0,
									"org.omg.kerml.xtext.KerML.SequenceElementList");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndAdd(
								grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_1_0(),
								$current);
						}
					)
					(
						(
							lv_operator_9_0='..'
							{
								newLeafNode(lv_operator_9_0, grammarAccess.getSequenceConstructionExpressionAccess().getOperatorFullStopFullStopKeyword_1_2_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSequenceConstructionExpressionRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_9_0, "..");
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_1_2_0());
							}
							lv_operand_comp_10_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
								}
								add(
									$current,
									"operand_comp",
									lv_operand_comp_10_0,
									"org.omg.kerml.xtext.KerML.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleSequenceElementList
entryRuleSequenceElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceElementListRule()); }
	iv_ruleSequenceElementList=ruleSequenceElementList
	{ $current=$iv_ruleSequenceElementList.current; }
	EOF;

// Rule SequenceElementList
ruleSequenceElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSequenceElementListAccess().getExpressionParserRuleCall_0());
		}
		this_Expression_0=ruleExpression
		{
			$current = $this_Expression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getSequenceElementListAccess().getOperatorExpressionOperand_compAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operator_2_0=','
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getSequenceElementListAccess().getOperatorCommaKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSequenceElementListRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, ",");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceElementListAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0());
					}
					lv_operand_comp_3_0=ruleSequenceElementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceElementListRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_3_0,
							"org.omg.kerml.xtext.KerML.SequenceElementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNullExpression
entryRuleNullExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullExpressionRule()); }
	iv_ruleNullExpression=ruleNullExpression
	{ $current=$iv_ruleNullExpression.current; }
	EOF;

// Rule NullExpression
ruleNullExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNullExpressionAccess().getNullExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	iv_ruleLiteralExpression=ruleLiteralExpression
	{ $current=$iv_ruleLiteralExpression.current; }
	EOF;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0());
		}
		this_BooleanLiteralExpression_0=ruleBooleanLiteralExpression
		{
			$current = $this_BooleanLiteralExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_1());
		}
		this_StringLiteralExpression_1=ruleStringLiteralExpression
		{
			$current = $this_StringLiteralExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getRealLiteralExpressionParserRuleCall_2());
		}
		this_RealLiteralExpression_2=ruleRealLiteralExpression
		{
			$current = $this_RealLiteralExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getUnlimitedNaturalLiteralExpressionParserRuleCall_3());
		}
		this_UnlimitedNaturalLiteralExpression_3=ruleUnlimitedNaturalLiteralExpression
		{
			$current = $this_UnlimitedNaturalLiteralExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanLiteralExpression
entryRuleBooleanLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralExpressionRule()); }
	iv_ruleBooleanLiteralExpression=ruleBooleanLiteralExpression
	{ $current=$iv_ruleBooleanLiteralExpression.current; }
	EOF;

// Rule BooleanLiteralExpression
ruleBooleanLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanLiteralExpressionAccess().getValueBooleanValueParserRuleCall_0());
			}
			lv_value_0_0=ruleBooleanValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanLiteralExpressionRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.BooleanValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current.getText(); }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleStringLiteralExpression
entryRuleStringLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralExpressionRule()); }
	iv_ruleStringLiteralExpression=ruleStringLiteralExpression
	{ $current=$iv_ruleStringLiteralExpression.current; }
	EOF;

// Rule StringLiteralExpression
ruleStringLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING_VALUE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralExpressionAccess().getValueSTRING_VALUETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.STRING_VALUE");
			}
		)
	)
;

// Entry rule entryRuleRealLiteralExpression
entryRuleRealLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealLiteralExpressionRule()); }
	iv_ruleRealLiteralExpression=ruleRealLiteralExpression
	{ $current=$iv_ruleRealLiteralExpression.current; }
	EOF;

// Rule RealLiteralExpression
ruleRealLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRealLiteralExpressionAccess().getValueRealValueParserRuleCall_0());
			}
			lv_value_0_0=ruleRealValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRealLiteralExpressionRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.RealValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRealValue
entryRuleRealValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRealValueRule()); }
	iv_ruleRealValue=ruleRealValue
	{ $current=$iv_ruleRealValue.current.getText(); }
	EOF;

// Rule RealValue
ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				this_DECIMAL_VALUE_0=RULE_DECIMAL_VALUE
				{
					$current.merge(this_DECIMAL_VALUE_0);
				}
				{
					newLeafNode(this_DECIMAL_VALUE_0, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0());
				}
			)?
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getRealValueAccess().getFullStopKeyword_0_1());
			}
			(
				this_DECIMAL_VALUE_2=RULE_DECIMAL_VALUE
				{
					$current.merge(this_DECIMAL_VALUE_2);
				}
				{
					newLeafNode(this_DECIMAL_VALUE_2, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0());
				}
				    |
				this_EXP_VALUE_3=RULE_EXP_VALUE
				{
					$current.merge(this_EXP_VALUE_3);
				}
				{
					newLeafNode(this_EXP_VALUE_3, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1());
				}
			)
		)
		    |
		this_EXP_VALUE_4=RULE_EXP_VALUE
		{
			$current.merge(this_EXP_VALUE_4);
		}
		{
			newLeafNode(this_EXP_VALUE_4, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleNaturalLiteralExpression
entryRuleNaturalLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNaturalLiteralExpressionRule()); }
	iv_ruleNaturalLiteralExpression=ruleNaturalLiteralExpression
	{ $current=$iv_ruleNaturalLiteralExpression.current; }
	EOF;

// Rule NaturalLiteralExpression
ruleNaturalLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DECIMAL_VALUE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNaturalLiteralExpressionAccess().getValueDECIMAL_VALUETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNaturalLiteralExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.omg.kerml.xtext.KerML.DECIMAL_VALUE");
			}
		)
	)
;

// Entry rule entryRuleUnlimitedNaturalLiteralExpression
entryRuleUnlimitedNaturalLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpressionRule()); }
	iv_ruleUnlimitedNaturalLiteralExpression=ruleUnlimitedNaturalLiteralExpression
	{ $current=$iv_ruleUnlimitedNaturalLiteralExpression.current; }
	EOF;

// Rule UnlimitedNaturalLiteralExpression
ruleUnlimitedNaturalLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_0());
		}
		this_NaturalLiteralExpression_0=ruleNaturalLiteralExpression
		{
			$current = $this_NaturalLiteralExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getLiteralUnboundedAction_1_0(),
						$current);
				}
			)
			otherlv_2='*'
			{
				newLeafNode(otherlv_2, grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAsteriskKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleFeatureReference
entryRuleFeatureReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureReferenceRule()); }
	iv_ruleFeatureReference=ruleFeatureReference
	{ $current=$iv_ruleFeatureReference.current; }
	EOF;

// Rule FeatureReference
ruleFeatureReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureReferenceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getFeatureReferenceAccess().getMemberFeatureFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypeReferenceMember
entryRuleTypeReferenceMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceMemberRule()); }
	iv_ruleTypeReferenceMember=ruleTypeReferenceMember
	{ $current=$iv_ruleTypeReferenceMember.current; }
	EOF;

// Rule TypeReferenceMember
ruleTypeReferenceMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeReferenceMemberAccess().getOwnedMemberFeature_compTypeReferenceParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleTypeReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeReferenceMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.TypeReference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNamedExpressionMember
entryRuleNamedExpressionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedExpressionMemberRule()); }
	iv_ruleNamedExpressionMember=ruleNamedExpressionMember
	{ $current=$iv_ruleNamedExpressionMember.current; }
	EOF;

// Rule NamedExpressionMember
ruleNamedExpressionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0());
				}
				lv_memberName_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedExpressionMemberRule());
					}
					set(
						$current,
						"memberName",
						lv_memberName_0_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='=>'
		{
			newLeafNode(otherlv_1, grammarAccess.getNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedExpressionMemberAccess().getOwnedMemberFeature_compExpressionParserRuleCall_2_0());
				}
				lv_ownedMemberFeature_comp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedExpressionMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_2_0,
						"org.omg.kerml.xtext.KerML.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBodyMember
entryRuleBodyMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyMemberRule()); }
	iv_ruleBodyMember=ruleBodyMember
	{ $current=$iv_ruleBodyMember.current; }
	EOF;

// Rule BodyMember
ruleBodyMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBodyMemberAccess().getOwnedMemberFeature_compBodyExpressionParserRuleCall_0());
			}
			lv_ownedMemberFeature_comp_0_0=ruleBodyExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBodyMemberRule());
				}
				set(
					$current,
					"ownedMemberFeature_comp",
					lv_ownedMemberFeature_comp_0_0,
					"org.omg.kerml.xtext.KerML.BodyExpression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBodyParameterMember
entryRuleBodyParameterMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyParameterMemberRule()); }
	iv_ruleBodyParameterMember=ruleBodyParameterMember
	{ $current=$iv_ruleBodyParameterMember.current; }
	EOF;

// Rule BodyParameterMember
ruleBodyParameterMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyParameterMemberAccess().getMemberNameNameParserRuleCall_0_0());
				}
				lv_memberName_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyParameterMemberRule());
					}
					set(
						$current,
						"memberName",
						lv_memberName_0_0,
						"org.omg.kerml.xtext.KerML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyParameterMemberAccess().getOwnedMemberFeature_compParameterParserRuleCall_1_0());
				}
				lv_ownedMemberFeature_comp_1_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyParameterMemberRule());
					}
					set(
						$current,
						"ownedMemberFeature_comp",
						lv_ownedMemberFeature_comp_1_0,
						"org.omg.kerml.xtext.KerML.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQueryPathExpression
entryRuleQueryPathExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryPathExpressionRule()); }
	iv_ruleQueryPathExpression=ruleQueryPathExpression
	{ $current=$iv_ruleQueryPathExpression.current; }
	EOF;

// Rule QueryPathExpression
ruleQueryPathExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getQueryHeadExpressionParserRuleCall_0());
		}
		this_QueryHeadExpression_0=ruleQueryHeadExpression
		{
			$current = $this_QueryHeadExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getQueryPathExpressionAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getQueryPathExpressionAccess().getQueryQualifierExpressionOperand_compAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOwnedFeatureMembership_compBodyMemberParserRuleCall_1_2_0());
					}
					lv_ownedFeatureMembership_comp_3_0=ruleBodyMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryPathExpressionRule());
						}
						add(
							$current,
							"ownedFeatureMembership_comp",
							lv_ownedFeatureMembership_comp_3_0,
							"org.omg.kerml.xtext.KerML.BodyMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getQueryPathExpressionAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
		(
			otherlv_5='/'
			{
				newLeafNode(otherlv_5, grammarAccess.getQueryPathExpressionAccess().getSolidusKeyword_2_0());
			}
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getQueryPathExpressionAccess().getQueryPathStepExpressionOperand_compAction_2_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOperand_compQueryNameExpressionParserRuleCall_2_2_0());
					}
					lv_operand_comp_7_0=ruleQueryNameExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryPathExpressionRule());
						}
						add(
							$current,
							"operand_comp",
							lv_operand_comp_7_0,
							"org.omg.kerml.xtext.KerML.QueryNameExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8='['
				{
					newLeafNode(otherlv_8, grammarAccess.getQueryPathExpressionAccess().getLeftSquareBracketKeyword_2_3_0());
				}
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getQueryPathExpressionAccess().getQueryQualifierExpressionOperand_compAction_2_3_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getQueryPathExpressionAccess().getOwnedFeatureMembership_compBodyMemberParserRuleCall_2_3_2_0());
						}
						lv_ownedFeatureMembership_comp_10_0=ruleBodyMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQueryPathExpressionRule());
							}
							add(
								$current,
								"ownedFeatureMembership_comp",
								lv_ownedFeatureMembership_comp_10_0,
								"org.omg.kerml.xtext.KerML.BodyMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_11=']'
				{
					newLeafNode(otherlv_11, grammarAccess.getQueryPathExpressionAccess().getRightSquareBracketKeyword_2_3_3());
				}
			)?
		)*
	)
;

// Entry rule entryRuleQueryNameExpression
entryRuleQueryNameExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryNameExpressionRule()); }
	iv_ruleQueryNameExpression=ruleQueryNameExpression
	{ $current=$iv_ruleQueryNameExpression.current; }
	EOF;

// Rule QueryNameExpression
ruleQueryNameExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQueryNameExpressionAccess().getOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0());
			}
			lv_ownedFeatureMembership_comp_0_0=ruleFeatureReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQueryNameExpressionRule());
				}
				add(
					$current,
					"ownedFeatureMembership_comp",
					lv_ownedFeatureMembership_comp_0_0,
					"org.omg.kerml.xtext.KerML.FeatureReference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleQueryHeadExpression
entryRuleQueryHeadExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryHeadExpressionRule()); }
	iv_ruleQueryHeadExpression=ruleQueryHeadExpression
	{ $current=$iv_ruleQueryHeadExpression.current; }
	EOF;

// Rule QueryHeadExpression
ruleQueryHeadExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='./'
		{
			newLeafNode(otherlv_0, grammarAccess.getQueryHeadExpressionAccess().getFullStopSolidusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryHeadExpressionAccess().getOwnedFeatureMembership_compFeatureReferenceParserRuleCall_1_0());
				}
				lv_ownedFeatureMembership_comp_1_0=ruleFeatureReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryHeadExpressionRule());
					}
					add(
						$current,
						"ownedFeatureMembership_comp",
						lv_ownedFeatureMembership_comp_1_0,
						"org.omg.kerml.xtext.KerML.FeatureReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleName
entryRuleName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current.getText(); }
	EOF;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_UNRESTRICTED_NAME_1=RULE_UNRESTRICTED_NAME
		{
			$current.merge(this_UNRESTRICTED_NAME_1);
		}
		{
			newLeafNode(this_UNRESTRICTED_NAME_1, grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getColonQualifiedNameParserRuleCall_1());
		}
		this_ColonQualifiedName_1=ruleColonQualifiedName
		{
			$current.merge(this_ColonQualifiedName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getDotQualifiedNameParserRuleCall_2());
		}
		this_DotQualifiedName_2=ruleDotQualifiedName
		{
			$current.merge(this_DotQualifiedName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleColonQualifiedName
entryRuleColonQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getColonQualifiedNameRule()); }
	iv_ruleColonQualifiedName=ruleColonQualifiedName
	{ $current=$iv_ruleColonQualifiedName.current.getText(); }
	EOF;

// Rule ColonQualifiedName
ruleColonQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='::'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getColonQualifiedNameAccess().getColonColonKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_1_1());
			}
			this_Name_2=ruleName
			{
				$current.merge(this_Name_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)+
	)
;

// Entry rule entryRuleDotQualifiedName
entryRuleDotQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDotQualifiedNameRule()); }
	iv_ruleDotQualifiedName=ruleDotQualifiedName
	{ $current=$iv_ruleDotQualifiedName.current.getText(); }
	EOF;

// Rule DotQualifiedName
ruleDotQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDotQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_1_1());
			}
			this_Name_2=ruleName
			{
				$current.merge(this_Name_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)+
	)
;

// Rule PackageElementVisibilityIndicator
rulePackageElementVisibilityIndicator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getPackageElementVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPackageElementVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='private'
			{
				$current = grammarAccess.getPackageElementVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPackageElementVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule VisibilityIndicator
ruleVisibilityIndicator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='private'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='protected'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='packaged'
			{
				$current = grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule FeatureDirection
ruleFeatureDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='inout'
			{
				$current = grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DECIMAL_VALUE : '0'..'9' ('0'..'9')*;

RULE_EXP_VALUE : RULE_DECIMAL_VALUE ('e'|'E') ('+'|'-')? RULE_DECIMAL_VALUE;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_UNRESTRICTED_NAME : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_STRING_VALUE : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_DOCUMENTATION_COMMENT : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_NOTE : '//*' ( options {greedy=false;} : . )*'*/';

RULE_SL_NOTE : '//' (~(('\n'|'\r')) ~(('\n'|'\r'))*)? ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
