package org.omg.kerml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.kerml.xtext.services.KerMLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKerMLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_REGULAR_COMMENT", "RULE_PREFIX_COMMENT", "RULE_STRING_VALUE", "RULE_DECIMAL_VALUE", "RULE_EXP_VALUE", "RULE_ID", "RULE_UNRESTRICTED_NAME", "RULE_ML_NOTE", "RULE_SL_NOTE", "RULE_WS", "'<'", "'>'", "'element'", "';'", "'{'", "'}'", "'relationship'", "'to'", "'from'", "','", "'comment'", "'about'", "'doc'", "'rep'", "'language'", "'namespace'", "'alias'", "'for'", "'import'", "'all'", "'*'", "'::'", "'**'", "']'", "'package'", "'filter'", "'abstract'", "'type'", "':>'", "'specializes'", "'~'", "'conjugates'", "'disjoint'", "'member'", "'specialization'", "'subtype'", "'conjugation'", "'conjugate'", "'disjoining'", "'classifier'", "'subclassifier'", "'composite'", "'portion'", "'readonly'", "'derived'", "'end'", "'feature'", "'chains'", "'inverse'", "'of'", "'featured'", "'by'", "'ordered'", "'nonunique'", "':'", "'typed'", "'subsets'", "':>>'", "'redefines'", "'inverting'", "'featuring'", "'typing'", "'subset'", "'redefinition'", "'='", "'default'", "':='", "'multiplicity'", "'['", "'..'", "'datatype'", "'class'", "'struct'", "'assoc'", "'connector'", "'('", "')'", "'binding'", "'succession'", "'first'", "'then'", "'behavior'", "'step'", "'function'", "'return'", "'expr'", "'predicate'", "'bool'", "'inv'", "'true'", "'false'", "'interaction'", "'flow'", "'.'", "'metaclass'", "'@'", "'metadata'", "'?'", "'else'", "'if'", "'??'", "'implies'", "'|'", "'or'", "'xor'", "'&'", "'and'", "'=='", "'!='", "'hastype'", "'istype'", "'as'", "'<='", "'>='", "'+'", "'-'", "'/'", "'%'", "'^'", "'not'", "'->'", "'.?'", "'null'", "'public'", "'private'", "'protected'", "'in'", "'out'", "'inout'"
    };
    public static final int T__50=50;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=9;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_REGULAR_COMMENT=4;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_PREFIX_COMMENT=5;
    public static final int RULE_UNRESTRICTED_NAME=10;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_STRING_VALUE=6;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_SL_NOTE=12;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL_VALUE=7;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int RULE_ML_NOTE=11;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=13;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int RULE_EXP_VALUE=8;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalKerMLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKerMLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKerMLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKerML.g"; }



     	private KerMLGrammarAccess grammarAccess;

        public InternalKerMLParser(TokenStream input, KerMLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "RootNamespace";
       	}

       	@Override
       	protected KerMLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRootNamespace"
    // InternalKerML.g:65:1: entryRuleRootNamespace returns [EObject current=null] : iv_ruleRootNamespace= ruleRootNamespace EOF ;
    public final EObject entryRuleRootNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootNamespace = null;


        try {
            // InternalKerML.g:65:54: (iv_ruleRootNamespace= ruleRootNamespace EOF )
            // InternalKerML.g:66:2: iv_ruleRootNamespace= ruleRootNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRootNamespace=ruleRootNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootNamespace"


    // $ANTLR start "ruleRootNamespace"
    // InternalKerML.g:72:1: ruleRootNamespace returns [EObject current=null] : ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* ) ;
    public final EObject ruleRootNamespace() throws RecognitionException {
        EObject current = null;

        EObject this_NamespaceBodyElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:78:2: ( ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* ) )
            // InternalKerML.g:79:2: ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* )
            {
            // InternalKerML.g:79:2: ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* )
            // InternalKerML.g:80:3: () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )*
            {
            // InternalKerML.g:80:3: ()
            // InternalKerML.g:81:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootNamespaceAccess().getNamespaceAction_0(),
              					current);
              			
            }

            }

            // InternalKerML.g:87:3: (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>=RULE_REGULAR_COMMENT && LA1_0<=RULE_PREFIX_COMMENT)||(LA1_0>=RULE_ID && LA1_0<=RULE_UNRESTRICTED_NAME)||LA1_0==14||LA1_0==16||LA1_0==20||LA1_0==24||(LA1_0>=26 && LA1_0<=30)||(LA1_0>=32 && LA1_0<=33)||LA1_0==38||(LA1_0>=40 && LA1_0<=42)||(LA1_0>=44 && LA1_0<=46)||(LA1_0>=48 && LA1_0<=60)||LA1_0==62||(LA1_0>=66 && LA1_0<=77)||(LA1_0>=81 && LA1_0<=82)||(LA1_0>=84 && LA1_0<=88)||(LA1_0>=91 && LA1_0<=92)||(LA1_0>=95 && LA1_0<=97)||(LA1_0>=99 && LA1_0<=102)||(LA1_0>=105 && LA1_0<=106)||(LA1_0>=108 && LA1_0<=110)||(LA1_0>=137 && LA1_0<=142)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalKerML.g:88:4: this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRootNamespaceRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRootNamespaceAccess().getNamespaceBodyElementParserRuleCall_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_3);
            	    this_NamespaceBodyElement_1=ruleNamespaceBodyElement(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_NamespaceBodyElement_1;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootNamespace"


    // $ANTLR start "ruleIdentification"
    // InternalKerML.g:105:1: ruleIdentification[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) ) ;
    public final EObject ruleIdentification(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_shortName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:111:2: ( ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) ) )
            // InternalKerML.g:112:2: ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) )
            {
            // InternalKerML.g:112:2: ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==14) ) {
                alt3=1;
            }
            else if ( ((LA3_0>=RULE_ID && LA3_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKerML.g:113:3: (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? )
                    {
                    // InternalKerML.g:113:3: (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? )
                    // InternalKerML.g:114:4: otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )?
                    {
                    otherlv_0=(Token)match(input,14,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getIdentificationAccess().getLessThanSignKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:118:4: ( (lv_shortName_1_0= ruleName ) )
                    // InternalKerML.g:119:5: (lv_shortName_1_0= ruleName )
                    {
                    // InternalKerML.g:119:5: (lv_shortName_1_0= ruleName )
                    // InternalKerML.g:120:6: lv_shortName_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentificationAccess().getShortNameNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_shortName_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentificationRule());
                      						}
                      						set(
                      							current,
                      							"shortName",
                      							lv_shortName_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIdentificationAccess().getGreaterThanSignKeyword_0_2());
                      			
                    }
                    // InternalKerML.g:141:4: ( (lv_name_3_0= ruleName ) )?
                    int alt2=2;
                    int LA2_0 = input.LA(1);

                    if ( ((LA2_0>=RULE_ID && LA2_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt2=1;
                    }
                    switch (alt2) {
                        case 1 :
                            // InternalKerML.g:142:5: (lv_name_3_0= ruleName )
                            {
                            // InternalKerML.g:142:5: (lv_name_3_0= ruleName )
                            // InternalKerML.g:143:6: lv_name_3_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_3_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getIdentificationRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_3_0,
                              							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:162:3: ( (lv_name_4_0= ruleName ) )
                    {
                    // InternalKerML.g:162:3: ( (lv_name_4_0= ruleName ) )
                    // InternalKerML.g:163:4: (lv_name_4_0= ruleName )
                    {
                    // InternalKerML.g:163:4: (lv_name_4_0= ruleName )
                    // InternalKerML.g:164:5: lv_name_4_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIdentificationRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_4_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentification"


    // $ANTLR start "entryRuleElement"
    // InternalKerML.g:185:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalKerML.g:185:48: (iv_ruleElement= ruleElement EOF )
            // InternalKerML.g:186:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalKerML.g:192:1: ruleElement returns [EObject current=null] : (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_ElementBody_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:198:2: ( (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] ) )
            // InternalKerML.g:199:2: (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] )
            {
            // InternalKerML.g:199:2: (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] )
            // InternalKerML.g:200:3: otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current]
            {
            otherlv_0=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getElementAccess().getElementKeyword_0());
              		
            }
            // InternalKerML.g:204:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=RULE_ID && LA4_0<=RULE_UNRESTRICTED_NAME)||LA4_0==14) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalKerML.g:205:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getElementRule());
                      				}
                      				newCompositeNode(grammarAccess.getElementAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_7);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getElementRule());
              			}
              			newCompositeNode(grammarAccess.getElementAccess().getElementBodyParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ElementBody_2=ruleElementBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementBody_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "ruleElementBody"
    // InternalKerML.g:233:1: ruleElementBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) ) ;
    public final EObject ruleElementBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_OwnedElement_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:239:2: ( (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) ) )
            // InternalKerML.g:240:2: (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) )
            {
            // InternalKerML.g:240:2: (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==17) ) {
                alt6=1;
            }
            else if ( (LA6_0==18) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalKerML.g:241:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getElementBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:246:3: (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' )
                    {
                    // InternalKerML.g:246:3: (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' )
                    // InternalKerML.g:247:4: otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getElementBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:251:4: (this_OwnedElement_2= ruleOwnedElement[$current] )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( ((LA5_0>=RULE_REGULAR_COMMENT && LA5_0<=RULE_PREFIX_COMMENT)||LA5_0==20||LA5_0==24||(LA5_0>=26 && LA5_0<=28)||(LA5_0>=109 && LA5_0<=110)) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKerML.g:252:5: this_OwnedElement_2= ruleOwnedElement[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getElementBodyRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getElementBodyAccess().getOwnedElementParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    this_OwnedElement_2=ruleOwnedElement(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_OwnedElement_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getElementBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementBody"


    // $ANTLR start "ruleOwnedElement"
    // InternalKerML.g:274:1: ruleOwnedElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) ;
    public final EObject ruleOwnedElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:280:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) )
            // InternalKerML.g:281:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            {
            // InternalKerML.g:281:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==20) ) {
                alt7=1;
            }
            else if ( ((LA7_0>=RULE_REGULAR_COMMENT && LA7_0<=RULE_PREFIX_COMMENT)||LA7_0==24||(LA7_0>=26 && LA7_0<=28)||(LA7_0>=109 && LA7_0<=110)) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalKerML.g:282:3: ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) )
                    {
                    // InternalKerML.g:282:3: ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) )
                    // InternalKerML.g:283:4: (lv_ownedRelationship_0_0= ruleOwnedRelationship )
                    {
                    // InternalKerML.g:283:4: (lv_ownedRelationship_0_0= ruleOwnedRelationship )
                    // InternalKerML.g:284:5: lv_ownedRelationship_0_0= ruleOwnedRelationship
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedRelationshipParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleOwnedRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedRelationship");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:302:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    {
                    // InternalKerML.g:302:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    // InternalKerML.g:303:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    {
                    // InternalKerML.g:303:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    // InternalKerML.g:304:5: lv_ownedRelationship_1_0= ruleOwnedAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedAnnotationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.OwnedAnnotation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedElement"


    // $ANTLR start "entryRuleRelationship"
    // InternalKerML.g:325:1: entryRuleRelationship returns [EObject current=null] : iv_ruleRelationship= ruleRelationship EOF ;
    public final EObject entryRuleRelationship() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationship = null;


        try {
            // InternalKerML.g:325:53: (iv_ruleRelationship= ruleRelationship EOF )
            // InternalKerML.g:326:2: iv_ruleRelationship= ruleRelationship EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationshipRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationship=ruleRelationship();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationship; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationship"


    // $ANTLR start "ruleRelationship"
    // InternalKerML.g:332:1: ruleRelationship returns [EObject current=null] : (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] ) ;
    public final EObject ruleRelationship() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipRelatedElements_2 = null;

        EObject this_RelationshipBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:338:2: ( (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:339:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:339:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] )
            // InternalKerML.g:340:3: otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current]
            {
            otherlv_0=(Token)match(input,20,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRelationshipAccess().getRelationshipKeyword_0());
              		
            }
            // InternalKerML.g:344:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=RULE_ID && LA8_0<=RULE_UNRESTRICTED_NAME)||LA8_0==14) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalKerML.g:345:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipRelatedElementsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_9);
            this_RelationshipRelatedElements_2=ruleRelationshipRelatedElements(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipRelatedElements_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_3=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationship"


    // $ANTLR start "entryRuleOwnedRelationship"
    // InternalKerML.g:383:1: entryRuleOwnedRelationship returns [EObject current=null] : iv_ruleOwnedRelationship= ruleOwnedRelationship EOF ;
    public final EObject entryRuleOwnedRelationship() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRelationship = null;


        try {
            // InternalKerML.g:383:58: (iv_ruleOwnedRelationship= ruleOwnedRelationship EOF )
            // InternalKerML.g:384:2: iv_ruleOwnedRelationship= ruleOwnedRelationship EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRelationshipRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRelationship=ruleOwnedRelationship();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRelationship; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRelationship"


    // $ANTLR start "ruleOwnedRelationship"
    // InternalKerML.g:390:1: ruleOwnedRelationship returns [EObject current=null] : (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] ) ;
    public final EObject ruleOwnedRelationship() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipTargetList_3 = null;

        EObject this_RelationshipBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:396:2: ( (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:397:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:397:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] )
            // InternalKerML.g:398:3: otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current]
            {
            otherlv_0=(Token)match(input,20,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getOwnedRelationshipAccess().getRelationshipKeyword_0());
              		
            }
            // InternalKerML.g:402:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=RULE_ID && LA9_0<=RULE_UNRESTRICTED_NAME)||LA9_0==14) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalKerML.g:403:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOwnedRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:415:3: (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==21) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalKerML.g:416:4: otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current]
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOwnedRelationshipAccess().getToKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOwnedRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipTargetListParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_RelationshipTargetList_3=ruleRelationshipTargetList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipTargetList_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getOwnedRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_4=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRelationship"


    // $ANTLR start "ruleRelationshipRelatedElements"
    // InternalKerML.g:448:1: ruleRelationshipRelatedElements[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? ) ;
    public final EObject ruleRelationshipRelatedElements(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_RelationshipSourceList_1 = null;

        EObject this_RelationshipTargetList_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:454:2: ( ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? ) )
            // InternalKerML.g:455:2: ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? )
            {
            // InternalKerML.g:455:2: ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? )
            // InternalKerML.g:456:3: (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            {
            // InternalKerML.g:456:3: (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==22) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKerML.g:457:4: otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current]
                    {
                    otherlv_0=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRelationshipRelatedElementsAccess().getFromKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipSourceListParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_10);
                    this_RelationshipSourceList_1=ruleRelationshipSourceList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipSourceList_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:473:3: (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==21) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalKerML.g:474:4: otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current]
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_RelationshipTargetList_3=ruleRelationshipTargetList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipTargetList_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipRelatedElements"


    // $ANTLR start "ruleRelationshipSourceList"
    // InternalKerML.g:495:1: ruleRelationshipSourceList[EObject in_current] returns [EObject current=in_current] : (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* ) ;
    public final EObject ruleRelationshipSourceList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_RelationshipSource_0 = null;

        EObject this_RelationshipSource_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:501:2: ( (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* ) )
            // InternalKerML.g:502:2: (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* )
            {
            // InternalKerML.g:502:2: (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* )
            // InternalKerML.g:503:3: this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipSourceListRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_RelationshipSource_0=ruleRelationshipSource(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:514:3: (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==23) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalKerML.g:515:4: otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current]
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRelationshipSourceListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRelationshipSourceListRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_11);
            	    this_RelationshipSource_2=ruleRelationshipSource(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_RelationshipSource_2;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipSourceList"


    // $ANTLR start "ruleRelationshipSource"
    // InternalKerML.g:536:1: ruleRelationshipSource[EObject in_current] returns [EObject current=in_current] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleRelationshipSource(EObject in_current) throws RecognitionException {
        EObject current = in_current;


        	enterRule();

        try {
            // InternalKerML.g:542:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:543:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:543:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:544:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:544:3: ( ruleQualifiedName )
            // InternalKerML.g:545:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRelationshipSourceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRelationshipSourceAccess().getSourceElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipSource"


    // $ANTLR start "ruleRelationshipTargetList"
    // InternalKerML.g:563:1: ruleRelationshipTargetList[EObject in_current] returns [EObject current=in_current] : (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* ) ;
    public final EObject ruleRelationshipTargetList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_RelationshipTarget_0 = null;

        EObject this_RelationshipTarget_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:569:2: ( (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* ) )
            // InternalKerML.g:570:2: (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* )
            {
            // InternalKerML.g:570:2: (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* )
            // InternalKerML.g:571:3: this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipTargetListRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_RelationshipTarget_0=ruleRelationshipTarget(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipTarget_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:582:3: (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==23) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalKerML.g:583:4: otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current]
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRelationshipTargetListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRelationshipTargetListRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_11);
            	    this_RelationshipTarget_2=ruleRelationshipTarget(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_RelationshipTarget_2;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipTargetList"


    // $ANTLR start "ruleRelationshipTarget"
    // InternalKerML.g:604:1: ruleRelationshipTarget[EObject in_current] returns [EObject current=in_current] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleRelationshipTarget(EObject in_current) throws RecognitionException {
        EObject current = in_current;


        	enterRule();

        try {
            // InternalKerML.g:610:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:611:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:611:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:612:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:612:3: ( ruleQualifiedName )
            // InternalKerML.g:613:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRelationshipTargetRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRelationshipTargetAccess().getTargetElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipTarget"


    // $ANTLR start "ruleRelationshipBody"
    // InternalKerML.g:631:1: ruleRelationshipBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) ) ;
    public final EObject ruleRelationshipBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_RelationshipOwnedElement_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:637:2: ( (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) ) )
            // InternalKerML.g:638:2: (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) )
            {
            // InternalKerML.g:638:2: (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==17) ) {
                alt16=1;
            }
            else if ( (LA16_0==18) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalKerML.g:639:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getRelationshipBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:644:3: (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' )
                    {
                    // InternalKerML.g:644:3: (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' )
                    // InternalKerML.g:645:4: otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getRelationshipBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:649:4: (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( ((LA15_0>=RULE_REGULAR_COMMENT && LA15_0<=RULE_PREFIX_COMMENT)||(LA15_0>=RULE_ID && LA15_0<=RULE_UNRESTRICTED_NAME)||LA15_0==14||LA15_0==16||LA15_0==20||LA15_0==24||(LA15_0>=26 && LA15_0<=29)||LA15_0==33||LA15_0==38||(LA15_0>=40 && LA15_0<=42)||(LA15_0>=44 && LA15_0<=46)||(LA15_0>=48 && LA15_0<=60)||LA15_0==62||(LA15_0>=66 && LA15_0<=77)||(LA15_0>=81 && LA15_0<=82)||(LA15_0>=84 && LA15_0<=88)||(LA15_0>=91 && LA15_0<=92)||(LA15_0>=95 && LA15_0<=97)||(LA15_0>=99 && LA15_0<=102)||(LA15_0>=105 && LA15_0<=106)||(LA15_0>=108 && LA15_0<=110)||(LA15_0>=140 && LA15_0<=142)) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // InternalKerML.g:650:5: this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getRelationshipBodyRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getRelationshipBodyAccess().getRelationshipOwnedElementParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    this_RelationshipOwnedElement_2=ruleRelationshipOwnedElement(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_RelationshipOwnedElement_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRelationshipBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipBody"


    // $ANTLR start "ruleRelationshipOwnedElement"
    // InternalKerML.g:672:1: ruleRelationshipOwnedElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) ;
    public final EObject ruleRelationshipOwnedElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:678:2: ( ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) )
            // InternalKerML.g:679:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            {
            // InternalKerML.g:679:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=RULE_ID && LA17_0<=RULE_UNRESTRICTED_NAME)||LA17_0==14||LA17_0==16||LA17_0==20||LA17_0==29||LA17_0==33||LA17_0==38||(LA17_0>=40 && LA17_0<=42)||(LA17_0>=44 && LA17_0<=46)||(LA17_0>=48 && LA17_0<=60)||LA17_0==62||(LA17_0>=66 && LA17_0<=77)||(LA17_0>=81 && LA17_0<=82)||(LA17_0>=84 && LA17_0<=88)||(LA17_0>=91 && LA17_0<=92)||(LA17_0>=95 && LA17_0<=97)||(LA17_0>=99 && LA17_0<=102)||(LA17_0>=105 && LA17_0<=106)||LA17_0==108||(LA17_0>=140 && LA17_0<=142)) ) {
                alt17=1;
            }
            else if ( ((LA17_0>=RULE_REGULAR_COMMENT && LA17_0<=RULE_PREFIX_COMMENT)||LA17_0==24||(LA17_0>=26 && LA17_0<=28)||(LA17_0>=109 && LA17_0<=110)) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalKerML.g:680:3: ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) )
                    {
                    // InternalKerML.g:680:3: ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) )
                    // InternalKerML.g:681:4: (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement )
                    {
                    // InternalKerML.g:681:4: (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement )
                    // InternalKerML.g:682:5: lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElementOwnedRelatedElementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_0=ruleOwnedRelatedElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedRelatedElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:700:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    {
                    // InternalKerML.g:700:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    // InternalKerML.g:701:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    {
                    // InternalKerML.g:701:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    // InternalKerML.g:702:5: lv_ownedRelationship_1_0= ruleOwnedAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipOwnedAnnotationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.OwnedAnnotation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipOwnedElement"


    // $ANTLR start "entryRuleOwnedRelatedElement"
    // InternalKerML.g:723:1: entryRuleOwnedRelatedElement returns [EObject current=null] : iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF ;
    public final EObject entryRuleOwnedRelatedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRelatedElement = null;


        try {
            // InternalKerML.g:723:60: (iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF )
            // InternalKerML.g:724:2: iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRelatedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRelatedElement=ruleOwnedRelatedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRelatedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRelatedElement"


    // $ANTLR start "ruleOwnedRelatedElement"
    // InternalKerML.g:730:1: ruleOwnedRelatedElement returns [EObject current=null] : (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement ) ;
    public final EObject ruleOwnedRelatedElement() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureElement_0 = null;

        EObject this_FeatureElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:736:2: ( (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement ) )
            // InternalKerML.g:737:2: (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement )
            {
            // InternalKerML.g:737:2: (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement )
            int alt18=2;
            switch ( input.LA(1) ) {
            case 16:
            case 20:
            case 29:
            case 38:
            case 41:
            case 46:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 62:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 81:
            case 84:
            case 85:
            case 86:
            case 87:
            case 95:
            case 97:
            case 100:
            case 105:
            case 108:
                {
                alt18=1;
                }
                break;
            case 40:
                {
                int LA18_2 = input.LA(2);

                if ( (LA18_2==41||LA18_2==53||(LA18_2>=84 && LA18_2<=87)||LA18_2==95||LA18_2==97||LA18_2==100||LA18_2==105||LA18_2==108) ) {
                    alt18=1;
                }
                else if ( ((LA18_2>=RULE_ID && LA18_2<=RULE_UNRESTRICTED_NAME)||LA18_2==14||LA18_2==33||LA18_2==42||(LA18_2>=44 && LA18_2<=45)||(LA18_2>=55 && LA18_2<=60)||(LA18_2>=66 && LA18_2<=72)||LA18_2==82||LA18_2==88||(LA18_2>=91 && LA18_2<=92)||LA18_2==96||LA18_2==99||(LA18_2>=101 && LA18_2<=102)||LA18_2==106) ) {
                    alt18=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 14:
            case 33:
            case 42:
            case 44:
            case 45:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 82:
            case 88:
            case 91:
            case 92:
            case 96:
            case 99:
            case 101:
            case 102:
            case 106:
            case 140:
            case 141:
            case 142:
                {
                alt18=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalKerML.g:738:3: this_NonFeatureElement_0= ruleNonFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getNonFeatureElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureElement_0=ruleNonFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureElement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:747:3: this_FeatureElement_1= ruleFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getFeatureElementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureElement_1=ruleFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureElement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRelatedElement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKerML.g:759:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKerML.g:759:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKerML.g:760:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKerML.g:766:1: ruleAnnotation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:772:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:773:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:773:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:774:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:774:3: ( ruleQualifiedName )
            // InternalKerML.g:775:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAnnotationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleOwnedAnnotation"
    // InternalKerML.g:792:1: entryRuleOwnedAnnotation returns [EObject current=null] : iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF ;
    public final EObject entryRuleOwnedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedAnnotation = null;


        try {
            // InternalKerML.g:792:56: (iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF )
            // InternalKerML.g:793:2: iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedAnnotation=ruleOwnedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedAnnotation"


    // $ANTLR start "ruleOwnedAnnotation"
    // InternalKerML.g:799:1: ruleOwnedAnnotation returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) ) ;
    public final EObject ruleOwnedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:805:2: ( ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) ) )
            // InternalKerML.g:806:2: ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) )
            {
            // InternalKerML.g:806:2: ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) )
            // InternalKerML.g:807:3: (lv_ownedRelatedElement_0_0= ruleAnnotatingElement )
            {
            // InternalKerML.g:807:3: (lv_ownedRelatedElement_0_0= ruleAnnotatingElement )
            // InternalKerML.g:808:4: lv_ownedRelatedElement_0_0= ruleAnnotatingElement
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedAnnotationAccess().getOwnedRelatedElementAnnotatingElementParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleAnnotatingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedAnnotationRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.AnnotatingElement");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedAnnotation"


    // $ANTLR start "entryRuleAnnotatingElement"
    // InternalKerML.g:828:1: entryRuleAnnotatingElement returns [EObject current=null] : iv_ruleAnnotatingElement= ruleAnnotatingElement EOF ;
    public final EObject entryRuleAnnotatingElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatingElement = null;


        try {
            // InternalKerML.g:828:58: (iv_ruleAnnotatingElement= ruleAnnotatingElement EOF )
            // InternalKerML.g:829:2: iv_ruleAnnotatingElement= ruleAnnotatingElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatingElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatingElement=ruleAnnotatingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatingElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatingElement"


    // $ANTLR start "ruleAnnotatingElement"
    // InternalKerML.g:835:1: ruleAnnotatingElement returns [EObject current=null] : (this_Comment_0= ruleComment | this_PrefixComment_1= rulePrefixComment | this_Documentation_2= ruleDocumentation | this_TextualRepresentation_3= ruleTextualRepresentation | this_MetadataFeature_4= ruleMetadataFeature ) ;
    public final EObject ruleAnnotatingElement() throws RecognitionException {
        EObject current = null;

        EObject this_Comment_0 = null;

        EObject this_PrefixComment_1 = null;

        EObject this_Documentation_2 = null;

        EObject this_TextualRepresentation_3 = null;

        EObject this_MetadataFeature_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:841:2: ( (this_Comment_0= ruleComment | this_PrefixComment_1= rulePrefixComment | this_Documentation_2= ruleDocumentation | this_TextualRepresentation_3= ruleTextualRepresentation | this_MetadataFeature_4= ruleMetadataFeature ) )
            // InternalKerML.g:842:2: (this_Comment_0= ruleComment | this_PrefixComment_1= rulePrefixComment | this_Documentation_2= ruleDocumentation | this_TextualRepresentation_3= ruleTextualRepresentation | this_MetadataFeature_4= ruleMetadataFeature )
            {
            // InternalKerML.g:842:2: (this_Comment_0= ruleComment | this_PrefixComment_1= rulePrefixComment | this_Documentation_2= ruleDocumentation | this_TextualRepresentation_3= ruleTextualRepresentation | this_MetadataFeature_4= ruleMetadataFeature )
            int alt19=5;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalKerML.g:843:3: this_Comment_0= ruleComment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getCommentParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Comment_0=ruleComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Comment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:852:3: this_PrefixComment_1= rulePrefixComment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getPrefixCommentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrefixComment_1=rulePrefixComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrefixComment_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:861:3: this_Documentation_2= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getDocumentationParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Documentation_2=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Documentation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:870:3: this_TextualRepresentation_3= ruleTextualRepresentation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getTextualRepresentationParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TextualRepresentation_3=ruleTextualRepresentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextualRepresentation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:879:3: this_MetadataFeature_4= ruleMetadataFeature
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getMetadataFeatureParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MetadataFeature_4=ruleMetadataFeature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MetadataFeature_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatingElement"


    // $ANTLR start "entryRuleComment"
    // InternalKerML.g:891:1: entryRuleComment returns [EObject current=null] : iv_ruleComment= ruleComment EOF ;
    public final EObject entryRuleComment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComment = null;


        try {
            // InternalKerML.g:891:48: (iv_ruleComment= ruleComment EOF )
            // InternalKerML.g:892:2: iv_ruleComment= ruleComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComment=ruleComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // InternalKerML.g:898:1: ruleComment returns [EObject current=null] : ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleComment() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_body_6_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:904:2: ( ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:905:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:905:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:906:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) )
            {
            // InternalKerML.g:906:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==24) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalKerML.g:907:4: otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )?
                    {
                    otherlv_0=(Token)match(input,24,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCommentAccess().getCommentKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:911:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( ((LA20_0>=RULE_ID && LA20_0<=RULE_UNRESTRICTED_NAME)||LA20_0==14) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalKerML.g:912:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getCommentRule());
                              					}
                              					newCompositeNode(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_14);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:924:4: (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==25) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalKerML.g:925:5: otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )*
                            {
                            otherlv_2=(Token)match(input,25,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getCommentAccess().getAboutKeyword_0_2_0());
                              				
                            }
                            // InternalKerML.g:929:5: ( (lv_ownedRelationship_3_0= ruleAnnotation ) )
                            // InternalKerML.g:930:6: (lv_ownedRelationship_3_0= ruleAnnotation )
                            {
                            // InternalKerML.g:930:6: (lv_ownedRelationship_3_0= ruleAnnotation )
                            // InternalKerML.g:931:7: lv_ownedRelationship_3_0= ruleAnnotation
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_15);
                            lv_ownedRelationship_3_0=ruleAnnotation();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommentRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.xtext.KerML.Annotation");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKerML.g:948:5: (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )*
                            loop21:
                            do {
                                int alt21=2;
                                int LA21_0 = input.LA(1);

                                if ( (LA21_0==23) ) {
                                    alt21=1;
                                }


                                switch (alt21) {
                            	case 1 :
                            	    // InternalKerML.g:949:6: otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) )
                            	    {
                            	    otherlv_4=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getCommentAccess().getCommaKeyword_0_2_2_0());
                            	      					
                            	    }
                            	    // InternalKerML.g:953:6: ( (lv_ownedRelationship_5_0= ruleAnnotation ) )
                            	    // InternalKerML.g:954:7: (lv_ownedRelationship_5_0= ruleAnnotation )
                            	    {
                            	    // InternalKerML.g:954:7: (lv_ownedRelationship_5_0= ruleAnnotation )
                            	    // InternalKerML.g:955:8: lv_ownedRelationship_5_0= ruleAnnotation
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_2_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_15);
                            	    lv_ownedRelationship_5_0=ruleAnnotation();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getCommentRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"ownedRelationship",
                            	      									lv_ownedRelationship_5_0,
                            	      									"org.omg.kerml.xtext.KerML.Annotation");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop21;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:975:3: ( (lv_body_6_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:976:4: (lv_body_6_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:976:4: (lv_body_6_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:977:5: lv_body_6_0= RULE_REGULAR_COMMENT
            {
            lv_body_6_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_6_0, grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCommentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_6_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRulePrefixComment"
    // InternalKerML.g:997:1: entryRulePrefixComment returns [EObject current=null] : iv_rulePrefixComment= rulePrefixComment EOF ;
    public final EObject entryRulePrefixComment() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixComment = null;


        try {
            // InternalKerML.g:997:54: (iv_rulePrefixComment= rulePrefixComment EOF )
            // InternalKerML.g:998:2: iv_rulePrefixComment= rulePrefixComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrefixComment=rulePrefixComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixComment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixComment"


    // $ANTLR start "rulePrefixComment"
    // InternalKerML.g:1004:1: rulePrefixComment returns [EObject current=null] : ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_PREFIX_COMMENT ) ) ) ;
    public final EObject rulePrefixComment() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_body_2_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1010:2: ( ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_PREFIX_COMMENT ) ) ) )
            // InternalKerML.g:1011:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_PREFIX_COMMENT ) ) )
            {
            // InternalKerML.g:1011:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_PREFIX_COMMENT ) ) )
            // InternalKerML.g:1012:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_PREFIX_COMMENT ) )
            {
            // InternalKerML.g:1012:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==24) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalKerML.g:1013:4: otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,24,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrefixCommentAccess().getCommentKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:1017:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( ((LA24_0>=RULE_ID && LA24_0<=RULE_UNRESTRICTED_NAME)||LA24_0==14) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalKerML.g:1018:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getPrefixCommentRule());
                              					}
                              					newCompositeNode(grammarAccess.getPrefixCommentAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_17);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:1031:3: ( (lv_body_2_0= RULE_PREFIX_COMMENT ) )
            // InternalKerML.g:1032:4: (lv_body_2_0= RULE_PREFIX_COMMENT )
            {
            // InternalKerML.g:1032:4: (lv_body_2_0= RULE_PREFIX_COMMENT )
            // InternalKerML.g:1033:5: lv_body_2_0= RULE_PREFIX_COMMENT
            {
            lv_body_2_0=(Token)match(input,RULE_PREFIX_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_2_0, grammarAccess.getPrefixCommentAccess().getBodyPREFIX_COMMENTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPrefixCommentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.PREFIX_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixComment"


    // $ANTLR start "entryRuleDocumentation"
    // InternalKerML.g:1053:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalKerML.g:1053:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalKerML.g:1054:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalKerML.g:1060:1: ruleDocumentation returns [EObject current=null] : (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_body_2_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1066:2: ( (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:1067:2: (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:1067:2: (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:1068:3: otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            {
            otherlv_0=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDocumentationAccess().getDocKeyword_0());
              		
            }
            // InternalKerML.g:1072:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=RULE_ID && LA26_0<=RULE_UNRESTRICTED_NAME)||LA26_0==14) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalKerML.g:1073:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDocumentationRule());
                      				}
                      				newCompositeNode(grammarAccess.getDocumentationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_19);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1085:3: ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1086:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1086:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1087:5: lv_body_2_0= RULE_REGULAR_COMMENT
            {
            lv_body_2_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_2_0, grammarAccess.getDocumentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDocumentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleOwnedComment"
    // InternalKerML.g:1107:1: entryRuleOwnedComment returns [EObject current=null] : iv_ruleOwnedComment= ruleOwnedComment EOF ;
    public final EObject entryRuleOwnedComment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedComment = null;


        try {
            // InternalKerML.g:1107:53: (iv_ruleOwnedComment= ruleOwnedComment EOF )
            // InternalKerML.g:1108:2: iv_ruleOwnedComment= ruleOwnedComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedComment=ruleOwnedComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedComment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedComment"


    // $ANTLR start "ruleOwnedComment"
    // InternalKerML.g:1114:1: ruleOwnedComment returns [EObject current=null] : ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleOwnedComment() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_body_2_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1120:2: ( ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:1121:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:1121:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:1122:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            {
            // InternalKerML.g:1122:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==24) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalKerML.g:1123:4: otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getOwnedCommentAccess().getCommentKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:1127:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( ((LA27_0>=RULE_ID && LA27_0<=RULE_UNRESTRICTED_NAME)||LA27_0==14) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalKerML.g:1128:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getOwnedCommentRule());
                              					}
                              					newCompositeNode(grammarAccess.getOwnedCommentAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_19);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:1141:3: ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1142:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1142:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1143:5: lv_body_2_0= RULE_REGULAR_COMMENT
            {
            lv_body_2_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_2_0, grammarAccess.getOwnedCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwnedCommentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedComment"


    // $ANTLR start "entryRuleOwnedDocumentation"
    // InternalKerML.g:1163:1: entryRuleOwnedDocumentation returns [EObject current=null] : iv_ruleOwnedDocumentation= ruleOwnedDocumentation EOF ;
    public final EObject entryRuleOwnedDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedDocumentation = null;


        try {
            // InternalKerML.g:1163:59: (iv_ruleOwnedDocumentation= ruleOwnedDocumentation EOF )
            // InternalKerML.g:1164:2: iv_ruleOwnedDocumentation= ruleOwnedDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedDocumentation=ruleOwnedDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedDocumentation"


    // $ANTLR start "ruleOwnedDocumentation"
    // InternalKerML.g:1170:1: ruleOwnedDocumentation returns [EObject current=null] : this_Documentation_0= ruleDocumentation ;
    public final EObject ruleOwnedDocumentation() throws RecognitionException {
        EObject current = null;

        EObject this_Documentation_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1176:2: (this_Documentation_0= ruleDocumentation )
            // InternalKerML.g:1177:2: this_Documentation_0= ruleDocumentation
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getOwnedDocumentationAccess().getDocumentationParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Documentation_0=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Documentation_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedDocumentation"


    // $ANTLR start "entryRuleTextualRepresentation"
    // InternalKerML.g:1188:1: entryRuleTextualRepresentation returns [EObject current=null] : iv_ruleTextualRepresentation= ruleTextualRepresentation EOF ;
    public final EObject entryRuleTextualRepresentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextualRepresentation = null;


        try {
            // InternalKerML.g:1188:62: (iv_ruleTextualRepresentation= ruleTextualRepresentation EOF )
            // InternalKerML.g:1189:2: iv_ruleTextualRepresentation= ruleTextualRepresentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextualRepresentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTextualRepresentation=ruleTextualRepresentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextualRepresentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextualRepresentation"


    // $ANTLR start "ruleTextualRepresentation"
    // InternalKerML.g:1195:1: ruleTextualRepresentation returns [EObject current=null] : ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleTextualRepresentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_language_3_0=null;
        Token lv_body_4_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1201:2: ( ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:1202:2: ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:1202:2: ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:1203:3: (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) )
            {
            // InternalKerML.g:1203:3: (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==27) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalKerML.g:1204:4: otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:1208:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( ((LA29_0>=RULE_ID && LA29_0<=RULE_UNRESTRICTED_NAME)||LA29_0==14) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalKerML.g:1209:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
                              					}
                              					newCompositeNode(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_21);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,28,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTextualRepresentationAccess().getLanguageKeyword_1());
              		
            }
            // InternalKerML.g:1226:3: ( (lv_language_3_0= RULE_STRING_VALUE ) )
            // InternalKerML.g:1227:4: (lv_language_3_0= RULE_STRING_VALUE )
            {
            // InternalKerML.g:1227:4: (lv_language_3_0= RULE_STRING_VALUE )
            // InternalKerML.g:1228:5: lv_language_3_0= RULE_STRING_VALUE
            {
            lv_language_3_0=(Token)match(input,RULE_STRING_VALUE,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_language_3_0, grammarAccess.getTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"language",
              						lv_language_3_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.STRING_VALUE");
              				
            }

            }


            }

            // InternalKerML.g:1244:3: ( (lv_body_4_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1245:4: (lv_body_4_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1245:4: (lv_body_4_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1246:5: lv_body_4_0= RULE_REGULAR_COMMENT
            {
            lv_body_4_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_4_0, grammarAccess.getTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextualRepresentation"


    // $ANTLR start "entryRuleOwnedTextualRepresentation"
    // InternalKerML.g:1266:1: entryRuleOwnedTextualRepresentation returns [EObject current=null] : iv_ruleOwnedTextualRepresentation= ruleOwnedTextualRepresentation EOF ;
    public final EObject entryRuleOwnedTextualRepresentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedTextualRepresentation = null;


        try {
            // InternalKerML.g:1266:67: (iv_ruleOwnedTextualRepresentation= ruleOwnedTextualRepresentation EOF )
            // InternalKerML.g:1267:2: iv_ruleOwnedTextualRepresentation= ruleOwnedTextualRepresentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedTextualRepresentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedTextualRepresentation=ruleOwnedTextualRepresentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedTextualRepresentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedTextualRepresentation"


    // $ANTLR start "ruleOwnedTextualRepresentation"
    // InternalKerML.g:1273:1: ruleOwnedTextualRepresentation returns [EObject current=null] : this_TextualRepresentation_0= ruleTextualRepresentation ;
    public final EObject ruleOwnedTextualRepresentation() throws RecognitionException {
        EObject current = null;

        EObject this_TextualRepresentation_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1279:2: (this_TextualRepresentation_0= ruleTextualRepresentation )
            // InternalKerML.g:1280:2: this_TextualRepresentation_0= ruleTextualRepresentation
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getOwnedTextualRepresentationAccess().getTextualRepresentationParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_TextualRepresentation_0=ruleTextualRepresentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_TextualRepresentation_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedTextualRepresentation"


    // $ANTLR start "entryRuleNamespace"
    // InternalKerML.g:1291:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;


        try {
            // InternalKerML.g:1291:50: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKerML.g:1292:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKerML.g:1298:1: ruleNamespace returns [EObject current=null] : (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        EObject this_NamespaceDeclaration_0 = null;

        EObject this_NamespaceBody_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1304:2: ( (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] ) )
            // InternalKerML.g:1305:2: (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] )
            {
            // InternalKerML.g:1305:2: (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] )
            // InternalKerML.g:1306:3: this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_23);
            this_NamespaceDeclaration_0=ruleNamespaceDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NamespaceDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_NamespaceBody_1=ruleNamespaceBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NamespaceBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "ruleNamespaceDeclaration"
    // InternalKerML.g:1333:1: ruleNamespaceDeclaration[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? ) ;
    public final EObject ruleNamespaceDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1339:2: ( (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? ) )
            // InternalKerML.g:1340:2: (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? )
            {
            // InternalKerML.g:1340:2: (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? )
            // InternalKerML.g:1341:3: otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )?
            {
            otherlv_0=(Token)match(input,29,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
              		
            }
            // InternalKerML.g:1345:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=RULE_ID && LA31_0<=RULE_UNRESTRICTED_NAME)||LA31_0==14) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalKerML.g:1346:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceDeclaration"


    // $ANTLR start "ruleNamespaceBody"
    // InternalKerML.g:1363:1: ruleNamespaceBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) ) ;
    public final EObject ruleNamespaceBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1369:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) ) )
            // InternalKerML.g:1370:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) )
            {
            // InternalKerML.g:1370:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==17) ) {
                alt33=1;
            }
            else if ( (LA33_0==18) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalKerML.g:1371:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getNamespaceBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1376:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' )
                    {
                    // InternalKerML.g:1376:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' )
                    // InternalKerML.g:1377:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}'
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:1381:4: ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )*
                    loop32:
                    do {
                        int alt32=4;
                        switch ( input.LA(1) ) {
                        case 137:
                            {
                            switch ( input.LA(2) ) {
                            case 32:
                                {
                                alt32=3;
                                }
                                break;
                            case 30:
                                {
                                alt32=2;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 14:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 33:
                            case 38:
                            case 40:
                            case 41:
                            case 42:
                            case 44:
                            case 45:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 62:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 82:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 91:
                            case 92:
                            case 95:
                            case 96:
                            case 97:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 105:
                            case 106:
                            case 108:
                            case 109:
                            case 110:
                            case 140:
                            case 141:
                            case 142:
                                {
                                alt32=1;
                                }
                                break;

                            }

                            }
                            break;
                        case 138:
                            {
                            switch ( input.LA(2) ) {
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 14:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 33:
                            case 38:
                            case 40:
                            case 41:
                            case 42:
                            case 44:
                            case 45:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 62:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 82:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 91:
                            case 92:
                            case 95:
                            case 96:
                            case 97:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 105:
                            case 106:
                            case 108:
                            case 109:
                            case 110:
                            case 140:
                            case 141:
                            case 142:
                                {
                                alt32=1;
                                }
                                break;
                            case 32:
                                {
                                alt32=3;
                                }
                                break;
                            case 30:
                                {
                                alt32=2;
                                }
                                break;

                            }

                            }
                            break;
                        case 139:
                            {
                            switch ( input.LA(2) ) {
                            case 30:
                                {
                                alt32=2;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 14:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 33:
                            case 38:
                            case 40:
                            case 41:
                            case 42:
                            case 44:
                            case 45:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 62:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 82:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 91:
                            case 92:
                            case 95:
                            case 96:
                            case 97:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 105:
                            case 106:
                            case 108:
                            case 109:
                            case 110:
                            case 140:
                            case 141:
                            case 142:
                                {
                                alt32=1;
                                }
                                break;
                            case 32:
                                {
                                alt32=3;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case RULE_PREFIX_COMMENT:
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 14:
                        case 16:
                        case 20:
                        case 24:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 33:
                        case 38:
                        case 40:
                        case 41:
                        case 42:
                        case 44:
                        case 45:
                        case 46:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 62:
                        case 66:
                        case 67:
                        case 68:
                        case 69:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 81:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 87:
                        case 88:
                        case 91:
                        case 92:
                        case 95:
                        case 96:
                        case 97:
                        case 99:
                        case 100:
                        case 101:
                        case 102:
                        case 105:
                        case 106:
                        case 108:
                        case 109:
                        case 110:
                        case 140:
                        case 141:
                        case 142:
                            {
                            alt32=1;
                            }
                            break;
                        case 30:
                            {
                            alt32=2;
                            }
                            break;
                        case 32:
                            {
                            alt32=3;
                            }
                            break;

                        }

                        switch (alt32) {
                    	case 1 :
                    	    // InternalKerML.g:1382:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    {
                    	    // InternalKerML.g:1382:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    // InternalKerML.g:1383:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    {
                    	    // InternalKerML.g:1383:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    // InternalKerML.g:1384:7: lv_ownedRelationship_2_0= ruleNamespaceMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_ownedRelationship_2_0=ruleNamespaceMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NamespaceMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:1402:5: ( (lv_ownedRelationship_3_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:1402:5: ( (lv_ownedRelationship_3_0= ruleAliasMember ) )
                    	    // InternalKerML.g:1403:6: (lv_ownedRelationship_3_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:1403:6: (lv_ownedRelationship_3_0= ruleAliasMember )
                    	    // InternalKerML.g:1404:7: lv_ownedRelationship_3_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_ownedRelationship_3_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:1422:5: ( (lv_ownedRelationship_4_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:1422:5: ( (lv_ownedRelationship_4_0= ruleImport ) )
                    	    // InternalKerML.g:1423:6: (lv_ownedRelationship_4_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:1423:6: (lv_ownedRelationship_4_0= ruleImport )
                    	    // InternalKerML.g:1424:7: lv_ownedRelationship_4_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_ownedRelationship_4_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceBody"


    // $ANTLR start "ruleNamespaceBodyElement"
    // InternalKerML.g:1452:1: ruleNamespaceBodyElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) ) ;
    public final EObject ruleNamespaceBodyElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1458:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) ) )
            // InternalKerML.g:1459:2: ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) )
            {
            // InternalKerML.g:1459:2: ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case 137:
                {
                switch ( input.LA(2) ) {
                case 30:
                    {
                    alt34=2;
                    }
                    break;
                case RULE_REGULAR_COMMENT:
                case RULE_PREFIX_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 14:
                case 16:
                case 20:
                case 24:
                case 26:
                case 27:
                case 28:
                case 29:
                case 33:
                case 38:
                case 40:
                case 41:
                case 42:
                case 44:
                case 45:
                case 46:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 62:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 81:
                case 82:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 91:
                case 92:
                case 95:
                case 96:
                case 97:
                case 99:
                case 100:
                case 101:
                case 102:
                case 105:
                case 106:
                case 108:
                case 109:
                case 110:
                case 140:
                case 141:
                case 142:
                    {
                    alt34=1;
                    }
                    break;
                case 32:
                    {
                    alt34=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }

                }
                break;
            case 138:
                {
                switch ( input.LA(2) ) {
                case 30:
                    {
                    alt34=2;
                    }
                    break;
                case RULE_REGULAR_COMMENT:
                case RULE_PREFIX_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 14:
                case 16:
                case 20:
                case 24:
                case 26:
                case 27:
                case 28:
                case 29:
                case 33:
                case 38:
                case 40:
                case 41:
                case 42:
                case 44:
                case 45:
                case 46:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 62:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 81:
                case 82:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 91:
                case 92:
                case 95:
                case 96:
                case 97:
                case 99:
                case 100:
                case 101:
                case 102:
                case 105:
                case 106:
                case 108:
                case 109:
                case 110:
                case 140:
                case 141:
                case 142:
                    {
                    alt34=1;
                    }
                    break;
                case 32:
                    {
                    alt34=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 2, input);

                    throw nvae;
                }

                }
                break;
            case 139:
                {
                switch ( input.LA(2) ) {
                case 32:
                    {
                    alt34=3;
                    }
                    break;
                case 30:
                    {
                    alt34=2;
                    }
                    break;
                case RULE_REGULAR_COMMENT:
                case RULE_PREFIX_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 14:
                case 16:
                case 20:
                case 24:
                case 26:
                case 27:
                case 28:
                case 29:
                case 33:
                case 38:
                case 40:
                case 41:
                case 42:
                case 44:
                case 45:
                case 46:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 62:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 81:
                case 82:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 91:
                case 92:
                case 95:
                case 96:
                case 97:
                case 99:
                case 100:
                case 101:
                case 102:
                case 105:
                case 106:
                case 108:
                case 109:
                case 110:
                case 140:
                case 141:
                case 142:
                    {
                    alt34=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_REGULAR_COMMENT:
            case RULE_PREFIX_COMMENT:
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 14:
            case 16:
            case 20:
            case 24:
            case 26:
            case 27:
            case 28:
            case 29:
            case 33:
            case 38:
            case 40:
            case 41:
            case 42:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 62:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 81:
            case 82:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 91:
            case 92:
            case 95:
            case 96:
            case 97:
            case 99:
            case 100:
            case 101:
            case 102:
            case 105:
            case 106:
            case 108:
            case 109:
            case 110:
            case 140:
            case 141:
            case 142:
                {
                alt34=1;
                }
                break;
            case 30:
                {
                alt34=2;
                }
                break;
            case 32:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalKerML.g:1460:3: ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) )
                    {
                    // InternalKerML.g:1460:3: ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) )
                    // InternalKerML.g:1461:4: (lv_ownedRelationship_0_0= ruleNamespaceMember )
                    {
                    // InternalKerML.g:1461:4: (lv_ownedRelationship_0_0= ruleNamespaceMember )
                    // InternalKerML.g:1462:5: lv_ownedRelationship_0_0= ruleNamespaceMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleNamespaceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.NamespaceMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:1480:3: ( (lv_ownedRelationship_1_0= ruleAliasMember ) )
                    {
                    // InternalKerML.g:1480:3: ( (lv_ownedRelationship_1_0= ruleAliasMember ) )
                    // InternalKerML.g:1481:4: (lv_ownedRelationship_1_0= ruleAliasMember )
                    {
                    // InternalKerML.g:1481:4: (lv_ownedRelationship_1_0= ruleAliasMember )
                    // InternalKerML.g:1482:5: lv_ownedRelationship_1_0= ruleAliasMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleAliasMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.AliasMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:1500:3: ( (lv_ownedRelationship_2_0= ruleImport ) )
                    {
                    // InternalKerML.g:1500:3: ( (lv_ownedRelationship_2_0= ruleImport ) )
                    // InternalKerML.g:1501:4: (lv_ownedRelationship_2_0= ruleImport )
                    {
                    // InternalKerML.g:1501:4: (lv_ownedRelationship_2_0= ruleImport )
                    // InternalKerML.g:1502:5: lv_ownedRelationship_2_0= ruleImport
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipImportParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.Import");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceBodyElement"


    // $ANTLR start "ruleMemberPrefix"
    // InternalKerML.g:1524:1: ruleMemberPrefix[EObject in_current] returns [EObject current=in_current] : ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? ;
    public final EObject ruleMemberPrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Enumerator lv_visibility_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1530:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? )
            // InternalKerML.g:1531:2: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            {
            // InternalKerML.g:1531:2: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=137 && LA35_0<=139)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalKerML.g:1532:3: (lv_visibility_0_0= ruleVisibilityIndicator )
                    {
                    // InternalKerML.g:1532:3: (lv_visibility_0_0= ruleVisibilityIndicator )
                    // InternalKerML.g:1533:4: lv_visibility_0_0= ruleVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    lv_visibility_0_0=ruleVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElementForParent(grammarAccess.getMemberPrefixRule());
                      				}
                      				set(
                      					current,
                      					"visibility",
                      					lv_visibility_0_0,
                      					"org.omg.kerml.xtext.KerML.VisibilityIndicator");
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMemberPrefix"


    // $ANTLR start "entryRuleNamespaceMember"
    // InternalKerML.g:1553:1: entryRuleNamespaceMember returns [EObject current=null] : iv_ruleNamespaceMember= ruleNamespaceMember EOF ;
    public final EObject entryRuleNamespaceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceMember = null;


        try {
            // InternalKerML.g:1553:56: (iv_ruleNamespaceMember= ruleNamespaceMember EOF )
            // InternalKerML.g:1554:2: iv_ruleNamespaceMember= ruleNamespaceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceMember=ruleNamespaceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceMember"


    // $ANTLR start "ruleNamespaceMember"
    // InternalKerML.g:1560:1: ruleNamespaceMember returns [EObject current=null] : (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember ) ;
    public final EObject ruleNamespaceMember() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureMember_0 = null;

        EObject this_NamespaceFeatureMember_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1566:2: ( (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember ) )
            // InternalKerML.g:1567:2: (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember )
            {
            // InternalKerML.g:1567:2: (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember )
            int alt36=2;
            switch ( input.LA(1) ) {
            case 137:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case RULE_PREFIX_COMMENT:
                case 16:
                case 20:
                case 24:
                case 26:
                case 27:
                case 28:
                case 29:
                case 38:
                case 41:
                case 46:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 62:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 81:
                case 84:
                case 85:
                case 86:
                case 87:
                case 95:
                case 97:
                case 100:
                case 105:
                case 108:
                case 109:
                case 110:
                    {
                    alt36=1;
                    }
                    break;
                case 40:
                    {
                    int LA36_5 = input.LA(3);

                    if ( (LA36_5==41||LA36_5==53||(LA36_5>=84 && LA36_5<=87)||LA36_5==95||LA36_5==97||LA36_5==100||LA36_5==105||LA36_5==108) ) {
                        alt36=1;
                    }
                    else if ( ((LA36_5>=RULE_ID && LA36_5<=RULE_UNRESTRICTED_NAME)||LA36_5==14||LA36_5==33||LA36_5==42||(LA36_5>=44 && LA36_5<=45)||(LA36_5>=55 && LA36_5<=60)||(LA36_5>=66 && LA36_5<=72)||LA36_5==82||LA36_5==88||(LA36_5>=91 && LA36_5<=92)||LA36_5==96||LA36_5==99||(LA36_5>=101 && LA36_5<=102)||LA36_5==106) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 14:
                case 33:
                case 42:
                case 44:
                case 45:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 82:
                case 88:
                case 91:
                case 92:
                case 96:
                case 99:
                case 101:
                case 102:
                case 106:
                case 140:
                case 141:
                case 142:
                    {
                    alt36=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 1, input);

                    throw nvae;
                }

                }
                break;
            case 138:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case RULE_PREFIX_COMMENT:
                case 16:
                case 20:
                case 24:
                case 26:
                case 27:
                case 28:
                case 29:
                case 38:
                case 41:
                case 46:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 62:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 81:
                case 84:
                case 85:
                case 86:
                case 87:
                case 95:
                case 97:
                case 100:
                case 105:
                case 108:
                case 109:
                case 110:
                    {
                    alt36=1;
                    }
                    break;
                case 40:
                    {
                    int LA36_5 = input.LA(3);

                    if ( (LA36_5==41||LA36_5==53||(LA36_5>=84 && LA36_5<=87)||LA36_5==95||LA36_5==97||LA36_5==100||LA36_5==105||LA36_5==108) ) {
                        alt36=1;
                    }
                    else if ( ((LA36_5>=RULE_ID && LA36_5<=RULE_UNRESTRICTED_NAME)||LA36_5==14||LA36_5==33||LA36_5==42||(LA36_5>=44 && LA36_5<=45)||(LA36_5>=55 && LA36_5<=60)||(LA36_5>=66 && LA36_5<=72)||LA36_5==82||LA36_5==88||(LA36_5>=91 && LA36_5<=92)||LA36_5==96||LA36_5==99||(LA36_5>=101 && LA36_5<=102)||LA36_5==106) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 14:
                case 33:
                case 42:
                case 44:
                case 45:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 82:
                case 88:
                case 91:
                case 92:
                case 96:
                case 99:
                case 101:
                case 102:
                case 106:
                case 140:
                case 141:
                case 142:
                    {
                    alt36=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 2, input);

                    throw nvae;
                }

                }
                break;
            case 139:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case RULE_PREFIX_COMMENT:
                case 16:
                case 20:
                case 24:
                case 26:
                case 27:
                case 28:
                case 29:
                case 38:
                case 41:
                case 46:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 62:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 81:
                case 84:
                case 85:
                case 86:
                case 87:
                case 95:
                case 97:
                case 100:
                case 105:
                case 108:
                case 109:
                case 110:
                    {
                    alt36=1;
                    }
                    break;
                case 40:
                    {
                    int LA36_5 = input.LA(3);

                    if ( (LA36_5==41||LA36_5==53||(LA36_5>=84 && LA36_5<=87)||LA36_5==95||LA36_5==97||LA36_5==100||LA36_5==105||LA36_5==108) ) {
                        alt36=1;
                    }
                    else if ( ((LA36_5>=RULE_ID && LA36_5<=RULE_UNRESTRICTED_NAME)||LA36_5==14||LA36_5==33||LA36_5==42||(LA36_5>=44 && LA36_5<=45)||(LA36_5>=55 && LA36_5<=60)||(LA36_5>=66 && LA36_5<=72)||LA36_5==82||LA36_5==88||(LA36_5>=91 && LA36_5<=92)||LA36_5==96||LA36_5==99||(LA36_5>=101 && LA36_5<=102)||LA36_5==106) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 14:
                case 33:
                case 42:
                case 44:
                case 45:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 82:
                case 88:
                case 91:
                case 92:
                case 96:
                case 99:
                case 101:
                case 102:
                case 106:
                case 140:
                case 141:
                case 142:
                    {
                    alt36=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_REGULAR_COMMENT:
            case RULE_PREFIX_COMMENT:
            case 16:
            case 20:
            case 24:
            case 26:
            case 27:
            case 28:
            case 29:
            case 38:
            case 41:
            case 46:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 62:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 81:
            case 84:
            case 85:
            case 86:
            case 87:
            case 95:
            case 97:
            case 100:
            case 105:
            case 108:
            case 109:
            case 110:
                {
                alt36=1;
                }
                break;
            case 40:
                {
                int LA36_5 = input.LA(2);

                if ( (LA36_5==41||LA36_5==53||(LA36_5>=84 && LA36_5<=87)||LA36_5==95||LA36_5==97||LA36_5==100||LA36_5==105||LA36_5==108) ) {
                    alt36=1;
                }
                else if ( ((LA36_5>=RULE_ID && LA36_5<=RULE_UNRESTRICTED_NAME)||LA36_5==14||LA36_5==33||LA36_5==42||(LA36_5>=44 && LA36_5<=45)||(LA36_5>=55 && LA36_5<=60)||(LA36_5>=66 && LA36_5<=72)||LA36_5==82||LA36_5==88||(LA36_5>=91 && LA36_5<=92)||LA36_5==96||LA36_5==99||(LA36_5>=101 && LA36_5<=102)||LA36_5==106) ) {
                    alt36=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 14:
            case 33:
            case 42:
            case 44:
            case 45:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 82:
            case 88:
            case 91:
            case 92:
            case 96:
            case 99:
            case 101:
            case 102:
            case 106:
            case 140:
            case 141:
            case 142:
                {
                alt36=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalKerML.g:1568:3: this_NonFeatureMember_0= ruleNonFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamespaceMemberAccess().getNonFeatureMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureMember_0=ruleNonFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1577:3: this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamespaceMemberAccess().getNamespaceFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NamespaceFeatureMember_1=ruleNamespaceFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NamespaceFeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceMember"


    // $ANTLR start "entryRuleNonFeatureMember"
    // InternalKerML.g:1589:1: entryRuleNonFeatureMember returns [EObject current=null] : iv_ruleNonFeatureMember= ruleNonFeatureMember EOF ;
    public final EObject entryRuleNonFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureMember = null;


        try {
            // InternalKerML.g:1589:57: (iv_ruleNonFeatureMember= ruleNonFeatureMember EOF )
            // InternalKerML.g:1590:2: iv_ruleNonFeatureMember= ruleNonFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureMember=ruleNonFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureMember"


    // $ANTLR start "ruleNonFeatureMember"
    // InternalKerML.g:1596:1: ruleNonFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) ) ;
    public final EObject ruleNonFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1602:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) ) )
            // InternalKerML.g:1603:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) )
            {
            // InternalKerML.g:1603:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) )
            // InternalKerML.g:1604:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNonFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNonFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:1615:3: ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) )
            // InternalKerML.g:1616:4: (lv_ownedRelatedElement_1_0= ruleMemberElement )
            {
            // InternalKerML.g:1616:4: (lv_ownedRelatedElement_1_0= ruleMemberElement )
            // InternalKerML.g:1617:5: lv_ownedRelatedElement_1_0= ruleMemberElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNonFeatureMemberAccess().getOwnedRelatedElementMemberElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleMemberElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNonFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.MemberElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureMember"


    // $ANTLR start "entryRuleNamespaceFeatureMember"
    // InternalKerML.g:1638:1: entryRuleNamespaceFeatureMember returns [EObject current=null] : iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF ;
    public final EObject entryRuleNamespaceFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceFeatureMember = null;


        try {
            // InternalKerML.g:1638:63: (iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF )
            // InternalKerML.g:1639:2: iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceFeatureMember=ruleNamespaceFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceFeatureMember"


    // $ANTLR start "ruleNamespaceFeatureMember"
    // InternalKerML.g:1645:1: ruleNamespaceFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleNamespaceFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1651:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:1652:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:1652:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            // InternalKerML.g:1653:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_26);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:1664:3: ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            // InternalKerML.g:1665:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            {
            // InternalKerML.g:1665:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            // InternalKerML.g:1666:5: lv_ownedRelatedElement_1_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceFeatureMember"


    // $ANTLR start "entryRuleAliasMember"
    // InternalKerML.g:1687:1: entryRuleAliasMember returns [EObject current=null] : iv_ruleAliasMember= ruleAliasMember EOF ;
    public final EObject entryRuleAliasMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasMember = null;


        try {
            // InternalKerML.g:1687:52: (iv_ruleAliasMember= ruleAliasMember EOF )
            // InternalKerML.g:1688:2: iv_ruleAliasMember= ruleAliasMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasMember=ruleAliasMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasMember"


    // $ANTLR start "ruleAliasMember"
    // InternalKerML.g:1694:1: ruleAliasMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleAliasMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_MemberPrefix_0 = null;

        AntlrDatatypeRuleToken lv_memberShortName_3_0 = null;

        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:1700:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:1701:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:1701:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:1702:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAliasMemberRule());
              			}
              			newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_27);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,30,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAliasMemberAccess().getAliasKeyword_1());
              		
            }
            // InternalKerML.g:1717:3: (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==14) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalKerML.g:1718:4: otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>'
                    {
                    otherlv_2=(Token)match(input,14,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAliasMemberAccess().getLessThanSignKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:1722:4: ( (lv_memberShortName_3_0= ruleName ) )
                    // InternalKerML.g:1723:5: (lv_memberShortName_3_0= ruleName )
                    {
                    // InternalKerML.g:1723:5: (lv_memberShortName_3_0= ruleName )
                    // InternalKerML.g:1724:6: lv_memberShortName_3_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberShortNameNameParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_memberShortName_3_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAliasMemberRule());
                      						}
                      						set(
                      							current,
                      							"memberShortName",
                      							lv_memberShortName_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,15,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAliasMemberAccess().getGreaterThanSignKeyword_2_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1746:3: ( (lv_memberName_5_0= ruleName ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=RULE_ID && LA38_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalKerML.g:1747:4: (lv_memberName_5_0= ruleName )
                    {
                    // InternalKerML.g:1747:4: (lv_memberName_5_0= ruleName )
                    // InternalKerML.g:1748:5: lv_memberName_5_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberNameNameParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_29);
                    lv_memberName_5_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAliasMemberRule());
                      					}
                      					set(
                      						current,
                      						"memberName",
                      						lv_memberName_5_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,31,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAliasMemberAccess().getForKeyword_4());
              		
            }
            // InternalKerML.g:1769:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:1770:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:1770:4: ( ruleQualifiedName )
            // InternalKerML.g:1771:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAliasMemberRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberElementElementCrossReference_5_0());
              				
            }
            pushFollow(FOLLOW_9);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAliasMemberRule());
              			}
              			newCompositeNode(grammarAccess.getAliasMemberAccess().getRelationshipBodyParserRuleCall_6());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasMember"


    // $ANTLR start "entryRuleImport"
    // InternalKerML.g:1800:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKerML.g:1800:47: (iv_ruleImport= ruleImport EOF )
            // InternalKerML.g:1801:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKerML.g:1807:1: ruleImport returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isImportAll_2_0=null;
        Enumerator lv_visibility_0_0 = null;

        EObject this_ImportedNamespace_3 = null;

        EObject this_ImportedFilterPackage_4 = null;

        EObject this_RelationshipBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:1813:2: ( ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:1814:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:1814:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] )
            // InternalKerML.g:1815:3: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:1815:3: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=137 && LA39_0<=139)) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalKerML.g:1816:4: (lv_visibility_0_0= ruleVisibilityIndicator )
                    {
                    // InternalKerML.g:1816:4: (lv_visibility_0_0= ruleVisibilityIndicator )
                    // InternalKerML.g:1817:5: lv_visibility_0_0= ruleVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImportAccess().getVisibilityVisibilityIndicatorEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_30);
                    lv_visibility_0_0=ruleVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getImportRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_0_0,
                      						"org.omg.kerml.xtext.KerML.VisibilityIndicator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,32,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportAccess().getImportKeyword_1());
              		
            }
            // InternalKerML.g:1838:3: ( (lv_isImportAll_2_0= 'all' ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==33) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalKerML.g:1839:4: (lv_isImportAll_2_0= 'all' )
                    {
                    // InternalKerML.g:1839:4: (lv_isImportAll_2_0= 'all' )
                    // InternalKerML.g:1840:5: lv_isImportAll_2_0= 'all'
                    {
                    lv_isImportAll_2_0=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isImportAll_2_0, grammarAccess.getImportAccess().getIsImportAllAllKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getImportRule());
                      					}
                      					setWithLastConsumed(current, "isImportAll", lv_isImportAll_2_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:1852:3: (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] )
            int alt41=2;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // InternalKerML.g:1853:4: this_ImportedNamespace_3= ruleImportedNamespace[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getImportRule());
                      				}
                      				newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_ImportedNamespace_3=ruleImportedNamespace(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ImportedNamespace_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1865:4: this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getImportRule());
                      				}
                      				newCompositeNode(grammarAccess.getImportAccess().getImportedFilterPackageParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_ImportedFilterPackage_4=ruleImportedFilterPackage(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ImportedFilterPackage_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getImportRule());
              			}
              			newCompositeNode(grammarAccess.getImportAccess().getRelationshipBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_5=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "ruleImportedNamespace"
    // InternalKerML.g:1893:1: ruleImportedNamespace[EObject in_current] returns [EObject current=in_current] : ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? ) ;
    public final EObject ruleImportedNamespace(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_isRecursive_4_0=null;
        AntlrDatatypeRuleToken lv_importedMemberName_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1899:2: ( ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? ) )
            // InternalKerML.g:1900:2: ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? )
            {
            // InternalKerML.g:1900:2: ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? )
            // InternalKerML.g:1901:3: ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )?
            {
            // InternalKerML.g:1901:3: ( ( ruleQualification ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_ID) ) {
                int LA42_1 = input.LA(2);

                if ( (LA42_1==35) ) {
                    int LA42_4 = input.LA(3);

                    if ( ((LA42_4>=RULE_ID && LA42_4<=RULE_UNRESTRICTED_NAME)||LA42_4==34) ) {
                        alt42=1;
                    }
                }
            }
            else if ( (LA42_0==RULE_UNRESTRICTED_NAME) ) {
                int LA42_2 = input.LA(2);

                if ( (LA42_2==35) ) {
                    int LA42_4 = input.LA(3);

                    if ( ((LA42_4>=RULE_ID && LA42_4<=RULE_UNRESTRICTED_NAME)||LA42_4==34) ) {
                        alt42=1;
                    }
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalKerML.g:1902:4: ( ruleQualification )
                    {
                    // InternalKerML.g:1902:4: ( ruleQualification )
                    // InternalKerML.g:1903:5: ruleQualification
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getImportedNamespaceRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceNamespaceCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_32);
                    ruleQualification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:1917:3: ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( ((LA43_0>=RULE_ID && LA43_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt43=1;
            }
            else if ( (LA43_0==34) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalKerML.g:1918:4: ( (lv_importedMemberName_1_0= ruleName ) )
                    {
                    // InternalKerML.g:1918:4: ( (lv_importedMemberName_1_0= ruleName ) )
                    // InternalKerML.g:1919:5: (lv_importedMemberName_1_0= ruleName )
                    {
                    // InternalKerML.g:1919:5: (lv_importedMemberName_1_0= ruleName )
                    // InternalKerML.g:1920:6: lv_importedMemberName_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportedNamespaceAccess().getImportedMemberNameNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_importedMemberName_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportedNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"importedMemberName",
                      							lv_importedMemberName_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:1938:4: otherlv_2= '*'
                    {
                    otherlv_2=(Token)match(input,34,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportedNamespaceAccess().getAsteriskKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1943:3: (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==35) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalKerML.g:1944:4: otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) )
                    {
                    otherlv_3=(Token)match(input,35,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getImportedNamespaceAccess().getColonColonKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:1948:4: ( (lv_isRecursive_4_0= '**' ) )
                    // InternalKerML.g:1949:5: (lv_isRecursive_4_0= '**' )
                    {
                    // InternalKerML.g:1949:5: (lv_isRecursive_4_0= '**' )
                    // InternalKerML.g:1950:6: lv_isRecursive_4_0= '**'
                    {
                    lv_isRecursive_4_0=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isRecursive_4_0, grammarAccess.getImportedNamespaceAccess().getIsRecursiveAsteriskAsteriskKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getImportedNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "isRecursive", lv_isRecursive_4_0 != null, "**");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportedNamespace"


    // $ANTLR start "ruleImportedFilterPackage"
    // InternalKerML.g:1968:1: ruleImportedFilterPackage[EObject in_current] returns [EObject current=in_current] : ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) ) ;
    public final EObject ruleImportedFilterPackage(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1974:2: ( ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) ) )
            // InternalKerML.g:1975:2: ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) )
            {
            // InternalKerML.g:1975:2: ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) )
            // InternalKerML.g:1976:3: (lv_ownedRelatedElement_0_0= ruleFilterPackage )
            {
            // InternalKerML.g:1976:3: (lv_ownedRelatedElement_0_0= ruleFilterPackage )
            // InternalKerML.g:1977:4: lv_ownedRelatedElement_0_0= ruleFilterPackage
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImportedFilterPackageAccess().getOwnedRelatedElementFilterPackageParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleFilterPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImportedFilterPackageRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.FilterPackage");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportedFilterPackage"


    // $ANTLR start "entryRuleFilterPackage"
    // InternalKerML.g:1997:1: entryRuleFilterPackage returns [EObject current=null] : iv_ruleFilterPackage= ruleFilterPackage EOF ;
    public final EObject entryRuleFilterPackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackage = null;


        try {
            // InternalKerML.g:1997:54: (iv_ruleFilterPackage= ruleFilterPackage EOF )
            // InternalKerML.g:1998:2: iv_ruleFilterPackage= ruleFilterPackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackage=ruleFilterPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackage"


    // $ANTLR start "ruleFilterPackage"
    // InternalKerML.g:2004:1: ruleFilterPackage returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ ) ;
    public final EObject ruleFilterPackage() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2010:2: ( ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ ) )
            // InternalKerML.g:2011:2: ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ )
            {
            // InternalKerML.g:2011:2: ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ )
            // InternalKerML.g:2012:3: ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+
            {
            // InternalKerML.g:2012:3: ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) )
            // InternalKerML.g:2013:4: (lv_ownedRelationship_0_0= ruleFilterPackageImport )
            {
            // InternalKerML.g:2013:4: (lv_ownedRelationship_0_0= ruleFilterPackageImport )
            // InternalKerML.g:2014:5: lv_ownedRelationship_0_0= ruleFilterPackageImport
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageImportParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_ownedRelationship_0_0=ruleFilterPackageImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.FilterPackageImport");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:2031:3: ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+
            int cnt45=0;
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==82) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalKerML.g:2032:4: (lv_ownedRelationship_1_0= ruleFilterPackageMember )
            	    {
            	    // InternalKerML.g:2032:4: (lv_ownedRelationship_1_0= ruleFilterPackageMember )
            	    // InternalKerML.g:2033:5: lv_ownedRelationship_1_0= ruleFilterPackageMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageMemberParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_ownedRelationship_1_0=ruleFilterPackageMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFilterPackageRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_1_0,
            	      						"org.omg.kerml.xtext.KerML.FilterPackageMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt45 >= 1 ) break loop45;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(45, input);
                        throw eee;
                }
                cnt45++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackage"


    // $ANTLR start "entryRuleFilterPackageImport"
    // InternalKerML.g:2054:1: entryRuleFilterPackageImport returns [EObject current=null] : iv_ruleFilterPackageImport= ruleFilterPackageImport EOF ;
    public final EObject entryRuleFilterPackageImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackageImport = null;


        try {
            // InternalKerML.g:2054:60: (iv_ruleFilterPackageImport= ruleFilterPackageImport EOF )
            // InternalKerML.g:2055:2: iv_ruleFilterPackageImport= ruleFilterPackageImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackageImport=ruleFilterPackageImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackageImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackageImport"


    // $ANTLR start "ruleFilterPackageImport"
    // InternalKerML.g:2061:1: ruleFilterPackageImport returns [EObject current=null] : this_ImportedNamespace_0= ruleImportedNamespace[$current] ;
    public final EObject ruleFilterPackageImport() throws RecognitionException {
        EObject current = null;

        EObject this_ImportedNamespace_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2067:2: (this_ImportedNamespace_0= ruleImportedNamespace[$current] )
            // InternalKerML.g:2068:2: this_ImportedNamespace_0= ruleImportedNamespace[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getFilterPackageImportRule());
              		}
              		newCompositeNode(grammarAccess.getFilterPackageImportAccess().getImportedNamespaceParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ImportedNamespace_0=ruleImportedNamespace(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ImportedNamespace_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageImport"


    // $ANTLR start "entryRuleFilterPackageMember"
    // InternalKerML.g:2082:1: entryRuleFilterPackageMember returns [EObject current=null] : iv_ruleFilterPackageMember= ruleFilterPackageMember EOF ;
    public final EObject entryRuleFilterPackageMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackageMember = null;


        try {
            // InternalKerML.g:2082:60: (iv_ruleFilterPackageMember= ruleFilterPackageMember EOF )
            // InternalKerML.g:2083:2: iv_ruleFilterPackageMember= ruleFilterPackageMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackageMember=ruleFilterPackageMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackageMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackageMember"


    // $ANTLR start "ruleFilterPackageMember"
    // InternalKerML.g:2089:1: ruleFilterPackageMember returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleFilterPackageMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_visibility_0_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2095:2: ( ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' ) )
            // InternalKerML.g:2096:2: ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' )
            {
            // InternalKerML.g:2096:2: ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' )
            // InternalKerML.g:2097:3: ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']'
            {
            // InternalKerML.g:2097:3: ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) )
            // InternalKerML.g:2098:4: (lv_visibility_0_0= ruleFilterPackageMemberVisibility )
            {
            // InternalKerML.g:2098:4: (lv_visibility_0_0= ruleFilterPackageMemberVisibility )
            // InternalKerML.g:2099:5: lv_visibility_0_0= ruleFilterPackageMemberVisibility
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageMemberAccess().getVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_37);
            lv_visibility_0_0=ruleFilterPackageMemberVisibility();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageMemberRule());
              					}
              					set(
              						current,
              						"visibility",
              						lv_visibility_0_0,
              						"org.omg.kerml.xtext.KerML.FilterPackageMemberVisibility");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:2116:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:2117:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:2117:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:2118:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFilterPackageMemberAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageMember"


    // $ANTLR start "entryRuleMemberElement"
    // InternalKerML.g:2143:1: entryRuleMemberElement returns [EObject current=null] : iv_ruleMemberElement= ruleMemberElement EOF ;
    public final EObject entryRuleMemberElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMemberElement = null;


        try {
            // InternalKerML.g:2143:54: (iv_ruleMemberElement= ruleMemberElement EOF )
            // InternalKerML.g:2144:2: iv_ruleMemberElement= ruleMemberElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMemberElement=ruleMemberElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMemberElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMemberElement"


    // $ANTLR start "ruleMemberElement"
    // InternalKerML.g:2150:1: ruleMemberElement returns [EObject current=null] : (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement ) ;
    public final EObject ruleMemberElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatingElement_0 = null;

        EObject this_NonFeatureElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:2156:2: ( (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement ) )
            // InternalKerML.g:2157:2: (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement )
            {
            // InternalKerML.g:2157:2: (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=RULE_REGULAR_COMMENT && LA46_0<=RULE_PREFIX_COMMENT)||LA46_0==24||(LA46_0>=26 && LA46_0<=28)||(LA46_0>=109 && LA46_0<=110)) ) {
                alt46=1;
            }
            else if ( (LA46_0==16||LA46_0==20||LA46_0==29||LA46_0==38||(LA46_0>=40 && LA46_0<=41)||LA46_0==46||(LA46_0>=48 && LA46_0<=54)||LA46_0==62||(LA46_0>=73 && LA46_0<=77)||LA46_0==81||(LA46_0>=84 && LA46_0<=87)||LA46_0==95||LA46_0==97||LA46_0==100||LA46_0==105||LA46_0==108) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalKerML.g:2158:3: this_AnnotatingElement_0= ruleAnnotatingElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMemberElementAccess().getAnnotatingElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatingElement_0=ruleAnnotatingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnnotatingElement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2167:3: this_NonFeatureElement_1= ruleNonFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMemberElementAccess().getNonFeatureElementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureElement_1=ruleNonFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureElement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMemberElement"


    // $ANTLR start "entryRuleNonFeatureElement"
    // InternalKerML.g:2179:1: entryRuleNonFeatureElement returns [EObject current=null] : iv_ruleNonFeatureElement= ruleNonFeatureElement EOF ;
    public final EObject entryRuleNonFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureElement = null;


        try {
            // InternalKerML.g:2179:58: (iv_ruleNonFeatureElement= ruleNonFeatureElement EOF )
            // InternalKerML.g:2180:2: iv_ruleNonFeatureElement= ruleNonFeatureElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureElement=ruleNonFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureElement"


    // $ANTLR start "ruleNonFeatureElement"
    // InternalKerML.g:2186:1: ruleNonFeatureElement returns [EObject current=null] : (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_Multiplicity_4= ruleMultiplicity | this_Type_5= ruleType | this_Classifier_6= ruleClassifier | this_Class_7= ruleClass | this_Structure_8= ruleStructure | this_Metaclass_9= ruleMetaclass | this_DataType_10= ruleDataType | this_Association_11= ruleAssociation | this_AssociationStructure_12= ruleAssociationStructure | this_Interaction_13= ruleInteraction | this_Behavior_14= ruleBehavior | this_Function_15= ruleFunction | this_Predicate_16= rulePredicate | this_Specialization_17= ruleSpecialization | this_Conjugation_18= ruleConjugation | this_FeatureTyping_19= ruleFeatureTyping | this_Subclassification_20= ruleSubclassification | this_Disjoining_21= ruleDisjoining | this_FeatureInverting_22= ruleFeatureInverting | this_Subsetting_23= ruleSubsetting | this_Redefinition_24= ruleRedefinition | this_TypeFeaturing_25= ruleTypeFeaturing ) ;
    public final EObject ruleNonFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject this_Element_0 = null;

        EObject this_Relationship_1 = null;

        EObject this_Namespace_2 = null;

        EObject this_Package_3 = null;

        EObject this_Multiplicity_4 = null;

        EObject this_Type_5 = null;

        EObject this_Classifier_6 = null;

        EObject this_Class_7 = null;

        EObject this_Structure_8 = null;

        EObject this_Metaclass_9 = null;

        EObject this_DataType_10 = null;

        EObject this_Association_11 = null;

        EObject this_AssociationStructure_12 = null;

        EObject this_Interaction_13 = null;

        EObject this_Behavior_14 = null;

        EObject this_Function_15 = null;

        EObject this_Predicate_16 = null;

        EObject this_Specialization_17 = null;

        EObject this_Conjugation_18 = null;

        EObject this_FeatureTyping_19 = null;

        EObject this_Subclassification_20 = null;

        EObject this_Disjoining_21 = null;

        EObject this_FeatureInverting_22 = null;

        EObject this_Subsetting_23 = null;

        EObject this_Redefinition_24 = null;

        EObject this_TypeFeaturing_25 = null;



        	enterRule();

        try {
            // InternalKerML.g:2192:2: ( (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_Multiplicity_4= ruleMultiplicity | this_Type_5= ruleType | this_Classifier_6= ruleClassifier | this_Class_7= ruleClass | this_Structure_8= ruleStructure | this_Metaclass_9= ruleMetaclass | this_DataType_10= ruleDataType | this_Association_11= ruleAssociation | this_AssociationStructure_12= ruleAssociationStructure | this_Interaction_13= ruleInteraction | this_Behavior_14= ruleBehavior | this_Function_15= ruleFunction | this_Predicate_16= rulePredicate | this_Specialization_17= ruleSpecialization | this_Conjugation_18= ruleConjugation | this_FeatureTyping_19= ruleFeatureTyping | this_Subclassification_20= ruleSubclassification | this_Disjoining_21= ruleDisjoining | this_FeatureInverting_22= ruleFeatureInverting | this_Subsetting_23= ruleSubsetting | this_Redefinition_24= ruleRedefinition | this_TypeFeaturing_25= ruleTypeFeaturing ) )
            // InternalKerML.g:2193:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_Multiplicity_4= ruleMultiplicity | this_Type_5= ruleType | this_Classifier_6= ruleClassifier | this_Class_7= ruleClass | this_Structure_8= ruleStructure | this_Metaclass_9= ruleMetaclass | this_DataType_10= ruleDataType | this_Association_11= ruleAssociation | this_AssociationStructure_12= ruleAssociationStructure | this_Interaction_13= ruleInteraction | this_Behavior_14= ruleBehavior | this_Function_15= ruleFunction | this_Predicate_16= rulePredicate | this_Specialization_17= ruleSpecialization | this_Conjugation_18= ruleConjugation | this_FeatureTyping_19= ruleFeatureTyping | this_Subclassification_20= ruleSubclassification | this_Disjoining_21= ruleDisjoining | this_FeatureInverting_22= ruleFeatureInverting | this_Subsetting_23= ruleSubsetting | this_Redefinition_24= ruleRedefinition | this_TypeFeaturing_25= ruleTypeFeaturing )
            {
            // InternalKerML.g:2193:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_Multiplicity_4= ruleMultiplicity | this_Type_5= ruleType | this_Classifier_6= ruleClassifier | this_Class_7= ruleClass | this_Structure_8= ruleStructure | this_Metaclass_9= ruleMetaclass | this_DataType_10= ruleDataType | this_Association_11= ruleAssociation | this_AssociationStructure_12= ruleAssociationStructure | this_Interaction_13= ruleInteraction | this_Behavior_14= ruleBehavior | this_Function_15= ruleFunction | this_Predicate_16= rulePredicate | this_Specialization_17= ruleSpecialization | this_Conjugation_18= ruleConjugation | this_FeatureTyping_19= ruleFeatureTyping | this_Subclassification_20= ruleSubclassification | this_Disjoining_21= ruleDisjoining | this_FeatureInverting_22= ruleFeatureInverting | this_Subsetting_23= ruleSubsetting | this_Redefinition_24= ruleRedefinition | this_TypeFeaturing_25= ruleTypeFeaturing )
            int alt47=26;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalKerML.g:2194:3: this_Element_0= ruleElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Element_0=ruleElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Element_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2203:3: this_Relationship_1= ruleRelationship
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRelationshipParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Relationship_1=ruleRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Relationship_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:2212:3: this_Namespace_2= ruleNamespace
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getNamespaceParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Namespace_2=ruleNamespace();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Namespace_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:2221:3: this_Package_3= rulePackage
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPackageParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Package_3=rulePackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Package_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:2230:3: this_Multiplicity_4= ruleMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getMultiplicityParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Multiplicity_4=ruleMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Multiplicity_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:2239:3: this_Type_5= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Type_5=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Type_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:2248:3: this_Classifier_6= ruleClassifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassifierParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Classifier_6=ruleClassifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Classifier_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKerML.g:2257:3: this_Class_7= ruleClass
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Class_7=ruleClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Class_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKerML.g:2266:3: this_Structure_8= ruleStructure
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getStructureParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Structure_8=ruleStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Structure_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKerML.g:2275:3: this_Metaclass_9= ruleMetaclass
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getMetaclassParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Metaclass_9=ruleMetaclass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Metaclass_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKerML.g:2284:3: this_DataType_10= ruleDataType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getDataTypeParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DataType_10=ruleDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataType_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKerML.g:2293:3: this_Association_11= ruleAssociation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAssociationParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Association_11=ruleAssociation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Association_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKerML.g:2302:3: this_AssociationStructure_12= ruleAssociationStructure
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAssociationStructureParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AssociationStructure_12=ruleAssociationStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AssociationStructure_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKerML.g:2311:3: this_Interaction_13= ruleInteraction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getInteractionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Interaction_13=ruleInteraction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Interaction_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalKerML.g:2320:3: this_Behavior_14= ruleBehavior
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getBehaviorParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Behavior_14=ruleBehavior();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Behavior_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalKerML.g:2329:3: this_Function_15= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFunctionParserRuleCall_15());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Function_15=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Function_15;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalKerML.g:2338:3: this_Predicate_16= rulePredicate
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPredicateParserRuleCall_16());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Predicate_16=rulePredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Predicate_16;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalKerML.g:2347:3: this_Specialization_17= ruleSpecialization
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSpecializationParserRuleCall_17());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Specialization_17=ruleSpecialization();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Specialization_17;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalKerML.g:2356:3: this_Conjugation_18= ruleConjugation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getConjugationParserRuleCall_18());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Conjugation_18=ruleConjugation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conjugation_18;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalKerML.g:2365:3: this_FeatureTyping_19= ruleFeatureTyping
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFeatureTypingParserRuleCall_19());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureTyping_19=ruleFeatureTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureTyping_19;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalKerML.g:2374:3: this_Subclassification_20= ruleSubclassification
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSubclassificationParserRuleCall_20());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subclassification_20=ruleSubclassification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subclassification_20;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalKerML.g:2383:3: this_Disjoining_21= ruleDisjoining
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getDisjoiningParserRuleCall_21());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Disjoining_21=ruleDisjoining();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Disjoining_21;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalKerML.g:2392:3: this_FeatureInverting_22= ruleFeatureInverting
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFeatureInvertingParserRuleCall_22());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureInverting_22=ruleFeatureInverting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureInverting_22;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 24 :
                    // InternalKerML.g:2401:3: this_Subsetting_23= ruleSubsetting
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSubsettingParserRuleCall_23());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subsetting_23=ruleSubsetting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subsetting_23;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 25 :
                    // InternalKerML.g:2410:3: this_Redefinition_24= ruleRedefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRedefinitionParserRuleCall_24());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Redefinition_24=ruleRedefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Redefinition_24;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 26 :
                    // InternalKerML.g:2419:3: this_TypeFeaturing_25= ruleTypeFeaturing
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeFeaturingParserRuleCall_25());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeaturing_25=ruleTypeFeaturing();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeaturing_25;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureElement"


    // $ANTLR start "entryRuleFeatureElement"
    // InternalKerML.g:2431:1: entryRuleFeatureElement returns [EObject current=null] : iv_ruleFeatureElement= ruleFeatureElement EOF ;
    public final EObject entryRuleFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureElement = null;


        try {
            // InternalKerML.g:2431:55: (iv_ruleFeatureElement= ruleFeatureElement EOF )
            // InternalKerML.g:2432:2: iv_ruleFeatureElement= ruleFeatureElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureElement=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureElement"


    // $ANTLR start "ruleFeatureElement"
    // InternalKerML.g:2438:1: ruleFeatureElement returns [EObject current=null] : (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow ) ;
    public final EObject ruleFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject this_Feature_0 = null;

        EObject this_Step_1 = null;

        EObject this_Expression_2 = null;

        EObject this_BooleanExpression_3 = null;

        EObject this_Invariant_4 = null;

        EObject this_Connector_5 = null;

        EObject this_BindingConnector_6 = null;

        EObject this_Succession_7 = null;

        EObject this_ItemFlow_8 = null;

        EObject this_SuccessionItemFlow_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:2444:2: ( (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow ) )
            // InternalKerML.g:2445:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )
            {
            // InternalKerML.g:2445:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )
            int alt48=10;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalKerML.g:2446:3: this_Feature_0= ruleFeature
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getFeatureParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Feature_0=ruleFeature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Feature_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2455:3: this_Step_1= ruleStep
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getStepParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Step_1=ruleStep();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Step_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:2464:3: this_Expression_2= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_2=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:2473:3: this_BooleanExpression_3= ruleBooleanExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getBooleanExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanExpression_3=ruleBooleanExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:2482:3: this_Invariant_4= ruleInvariant
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getInvariantParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Invariant_4=ruleInvariant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Invariant_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:2491:3: this_Connector_5= ruleConnector
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getConnectorParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Connector_5=ruleConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Connector_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:2500:3: this_BindingConnector_6= ruleBindingConnector
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getBindingConnectorParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BindingConnector_6=ruleBindingConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BindingConnector_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKerML.g:2509:3: this_Succession_7= ruleSuccession
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Succession_7=ruleSuccession();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Succession_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKerML.g:2518:3: this_ItemFlow_8= ruleItemFlow
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getItemFlowParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ItemFlow_8=ruleItemFlow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ItemFlow_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKerML.g:2527:3: this_SuccessionItemFlow_9= ruleSuccessionItemFlow
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionItemFlowParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SuccessionItemFlow_9=ruleSuccessionItemFlow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SuccessionItemFlow_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureElement"


    // $ANTLR start "entryRulePackage"
    // InternalKerML.g:2539:1: entryRulePackage returns [EObject current=null] : iv_rulePackage= rulePackage EOF ;
    public final EObject entryRulePackage() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackage = null;


        try {
            // InternalKerML.g:2539:48: (iv_rulePackage= rulePackage EOF )
            // InternalKerML.g:2540:2: iv_rulePackage= rulePackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackage=rulePackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackage"


    // $ANTLR start "rulePackage"
    // InternalKerML.g:2546:1: rulePackage returns [EObject current=null] : (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] ) ;
    public final EObject rulePackage() throws RecognitionException {
        EObject current = null;

        EObject this_PackageDeclaration_0 = null;

        EObject this_PackageBody_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:2552:2: ( (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] ) )
            // InternalKerML.g:2553:2: (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] )
            {
            // InternalKerML.g:2553:2: (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] )
            // InternalKerML.g:2554:3: this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageRule());
              			}
              			newCompositeNode(grammarAccess.getPackageAccess().getPackageDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_23);
            this_PackageDeclaration_0=rulePackageDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageRule());
              			}
              			newCompositeNode(grammarAccess.getPackageAccess().getPackageBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageBody_1=rulePackageBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackage"


    // $ANTLR start "rulePackageDeclaration"
    // InternalKerML.g:2581:1: rulePackageDeclaration[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? ) ;
    public final EObject rulePackageDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:2587:2: ( (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? ) )
            // InternalKerML.g:2588:2: (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? )
            {
            // InternalKerML.g:2588:2: (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? )
            // InternalKerML.g:2589:3: otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )?
            {
            otherlv_0=(Token)match(input,38,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
              		
            }
            // InternalKerML.g:2593:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=RULE_ID && LA49_0<=RULE_UNRESTRICTED_NAME)||LA49_0==14) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalKerML.g:2594:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getPackageDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getPackageDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDeclaration"


    // $ANTLR start "rulePackageBody"
    // InternalKerML.g:2611:1: rulePackageBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject rulePackageBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2617:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:2618:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:2618:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==17) ) {
                alt51=1;
            }
            else if ( (LA51_0==18) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalKerML.g:2619:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getPackageBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2624:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:2624:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:2625:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:2629:4: ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop50:
                    do {
                        int alt50=5;
                        switch ( input.LA(1) ) {
                        case 137:
                            {
                            switch ( input.LA(2) ) {
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 14:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 33:
                            case 38:
                            case 40:
                            case 41:
                            case 42:
                            case 44:
                            case 45:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 62:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 82:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 91:
                            case 92:
                            case 95:
                            case 96:
                            case 97:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 105:
                            case 106:
                            case 108:
                            case 109:
                            case 110:
                            case 140:
                            case 141:
                            case 142:
                                {
                                alt50=1;
                                }
                                break;
                            case 39:
                                {
                                alt50=2;
                                }
                                break;
                            case 30:
                                {
                                alt50=3;
                                }
                                break;
                            case 32:
                                {
                                alt50=4;
                                }
                                break;

                            }

                            }
                            break;
                        case 138:
                            {
                            switch ( input.LA(2) ) {
                            case 32:
                                {
                                alt50=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 14:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 33:
                            case 38:
                            case 40:
                            case 41:
                            case 42:
                            case 44:
                            case 45:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 62:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 82:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 91:
                            case 92:
                            case 95:
                            case 96:
                            case 97:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 105:
                            case 106:
                            case 108:
                            case 109:
                            case 110:
                            case 140:
                            case 141:
                            case 142:
                                {
                                alt50=1;
                                }
                                break;
                            case 39:
                                {
                                alt50=2;
                                }
                                break;
                            case 30:
                                {
                                alt50=3;
                                }
                                break;

                            }

                            }
                            break;
                        case 139:
                            {
                            switch ( input.LA(2) ) {
                            case 30:
                                {
                                alt50=3;
                                }
                                break;
                            case 32:
                                {
                                alt50=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 14:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 33:
                            case 38:
                            case 40:
                            case 41:
                            case 42:
                            case 44:
                            case 45:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 62:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 82:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 91:
                            case 92:
                            case 95:
                            case 96:
                            case 97:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 105:
                            case 106:
                            case 108:
                            case 109:
                            case 110:
                            case 140:
                            case 141:
                            case 142:
                                {
                                alt50=1;
                                }
                                break;
                            case 39:
                                {
                                alt50=2;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case RULE_PREFIX_COMMENT:
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 14:
                        case 16:
                        case 20:
                        case 24:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 33:
                        case 38:
                        case 40:
                        case 41:
                        case 42:
                        case 44:
                        case 45:
                        case 46:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 62:
                        case 66:
                        case 67:
                        case 68:
                        case 69:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 81:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 87:
                        case 88:
                        case 91:
                        case 92:
                        case 95:
                        case 96:
                        case 97:
                        case 99:
                        case 100:
                        case 101:
                        case 102:
                        case 105:
                        case 106:
                        case 108:
                        case 109:
                        case 110:
                        case 140:
                        case 141:
                        case 142:
                            {
                            alt50=1;
                            }
                            break;
                        case 39:
                            {
                            alt50=2;
                            }
                            break;
                        case 30:
                            {
                            alt50=3;
                            }
                            break;
                        case 32:
                            {
                            alt50=4;
                            }
                            break;

                        }

                        switch (alt50) {
                    	case 1 :
                    	    // InternalKerML.g:2630:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    {
                    	    // InternalKerML.g:2630:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    // InternalKerML.g:2631:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    {
                    	    // InternalKerML.g:2631:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    // InternalKerML.g:2632:7: lv_ownedRelationship_2_0= ruleNamespaceMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_2_0=ruleNamespaceMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NamespaceMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:2650:5: ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) )
                    	    {
                    	    // InternalKerML.g:2650:5: ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) )
                    	    // InternalKerML.g:2651:6: (lv_ownedRelationship_3_0= ruleElementFilterMember )
                    	    {
                    	    // InternalKerML.g:2651:6: (lv_ownedRelationship_3_0= ruleElementFilterMember )
                    	    // InternalKerML.g:2652:7: lv_ownedRelationship_3_0= ruleElementFilterMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipElementFilterMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_3_0=ruleElementFilterMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.ElementFilterMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:2670:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:2670:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:2671:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:2671:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:2672:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:2690:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:2690:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:2691:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:2691:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:2692:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageBody"


    // $ANTLR start "entryRuleElementFilterMember"
    // InternalKerML.g:2719:1: entryRuleElementFilterMember returns [EObject current=null] : iv_ruleElementFilterMember= ruleElementFilterMember EOF ;
    public final EObject entryRuleElementFilterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementFilterMember = null;


        try {
            // InternalKerML.g:2719:60: (iv_ruleElementFilterMember= ruleElementFilterMember EOF )
            // InternalKerML.g:2720:2: iv_ruleElementFilterMember= ruleElementFilterMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementFilterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementFilterMember=ruleElementFilterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementFilterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementFilterMember"


    // $ANTLR start "ruleElementFilterMember"
    // InternalKerML.g:2726:1: ruleElementFilterMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleElementFilterMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2732:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' ) )
            // InternalKerML.g:2733:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' )
            {
            // InternalKerML.g:2733:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' )
            // InternalKerML.g:2734:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';'
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getElementFilterMemberRule());
              			}
              			newCompositeNode(grammarAccess.getElementFilterMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_40);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,39,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getElementFilterMemberAccess().getFilterKeyword_1());
              		
            }
            // InternalKerML.g:2749:3: ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) )
            // InternalKerML.g:2750:4: (lv_ownedRelatedElement_2_0= ruleOwnedExpression )
            {
            // InternalKerML.g:2750:4: (lv_ownedRelatedElement_2_0= ruleOwnedExpression )
            // InternalKerML.g:2751:5: lv_ownedRelatedElement_2_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementFilterMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_ownedRelatedElement_2_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementFilterMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElementFilterMemberAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementFilterMember"


    // $ANTLR start "entryRuleType"
    // InternalKerML.g:2776:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalKerML.g:2776:45: (iv_ruleType= ruleType EOF )
            // InternalKerML.g:2777:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalKerML.g:2783:1: ruleType returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_TypeDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:2789:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:2790:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:2790:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:2791:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:2791:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==40) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalKerML.g:2792:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:2792:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:2793:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,41,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getTypeKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeRule());
              			}
              			newCompositeNode(grammarAccess.getTypeAccess().getTypeDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_TypeDeclaration_2=ruleTypeDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeRule());
              			}
              			newCompositeNode(grammarAccess.getTypeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalKerML.g:2836:1: ruleTypeDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? ) ;
    public final EObject ruleTypeDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject this_SpecializationPart_3 = null;

        EObject this_ConjugationPart_4 = null;

        EObject this_DisjoiningPart_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:2842:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? ) )
            // InternalKerML.g:2843:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? )
            {
            // InternalKerML.g:2843:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? )
            // InternalKerML.g:2844:3: ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )?
            {
            // InternalKerML.g:2844:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==33) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalKerML.g:2845:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:2845:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:2846:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,33,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:2858:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( ((LA54_0>=RULE_ID && LA54_0<=RULE_UNRESTRICTED_NAME)||LA54_0==14) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalKerML.g:2859:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_43);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:2871:3: ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==82) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalKerML.g:2872:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:2872:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:2873:5: lv_ownedRelationship_2_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_43);
                    lv_ownedRelationship_2_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:2890:3: (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+
            int cnt56=0;
            loop56:
            do {
                int alt56=3;
                int LA56_0 = input.LA(1);

                if ( ((LA56_0>=42 && LA56_0<=43)) ) {
                    alt56=1;
                }
                else if ( ((LA56_0>=44 && LA56_0<=45)) ) {
                    alt56=2;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalKerML.g:2891:4: this_SpecializationPart_3= ruleSpecializationPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getSpecializationPartParserRuleCall_3_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_44);
            	    this_SpecializationPart_3=ruleSpecializationPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_SpecializationPart_3;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // InternalKerML.g:2903:4: this_ConjugationPart_4= ruleConjugationPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getConjugationPartParserRuleCall_3_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_44);
            	    this_ConjugationPart_4=ruleConjugationPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_ConjugationPart_4;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt56 >= 1 ) break loop56;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(56, input);
                        throw eee;
                }
                cnt56++;
            } while (true);

            // InternalKerML.g:2915:3: (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==46) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalKerML.g:2916:4: this_DisjoiningPart_5= ruleDisjoiningPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getDisjoiningPartParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DisjoiningPart_5=ruleDisjoiningPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DisjoiningPart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "ruleSpecializationPart"
    // InternalKerML.g:2933:1: ruleSpecializationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* ) ;
    public final EObject ruleSpecializationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2939:2: ( ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* ) )
            // InternalKerML.g:2940:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* )
            {
            // InternalKerML.g:2940:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* )
            // InternalKerML.g:2941:3: (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )*
            {
            // InternalKerML.g:2941:3: (otherlv_0= ':>' | otherlv_1= 'specializes' )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==42) ) {
                alt58=1;
            }
            else if ( (LA58_0==43) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalKerML.g:2942:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSpecializationPartAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2947:4: otherlv_1= 'specializes'
                    {
                    otherlv_1=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSpecializationPartAccess().getSpecializesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:2952:3: ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) )
            // InternalKerML.g:2953:4: (lv_ownedRelationship_2_0= ruleOwnedSpecialization )
            {
            // InternalKerML.g:2953:4: (lv_ownedRelationship_2_0= ruleOwnedSpecialization )
            // InternalKerML.g:2954:5: lv_ownedRelationship_2_0= ruleOwnedSpecialization
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedSpecializationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedSpecialization");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:2971:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==23) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalKerML.g:2972:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) )
            	    {
            	    otherlv_3=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSpecializationPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:2976:4: ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) )
            	    // InternalKerML.g:2977:5: (lv_ownedRelationship_4_0= ruleOwnedSpecialization )
            	    {
            	    // InternalKerML.g:2977:5: (lv_ownedRelationship_4_0= ruleOwnedSpecialization )
            	    // InternalKerML.g:2978:6: lv_ownedRelationship_4_0= ruleOwnedSpecialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedSpecializationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedSpecialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedSpecialization");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecializationPart"


    // $ANTLR start "ruleConjugationPart"
    // InternalKerML.g:3001:1: ruleConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) ) ;
    public final EObject ruleConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3007:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) ) )
            // InternalKerML.g:3008:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) )
            {
            // InternalKerML.g:3008:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) )
            // InternalKerML.g:3009:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) )
            {
            // InternalKerML.g:3009:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==44) ) {
                alt60=1;
            }
            else if ( (LA60_0==45) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalKerML.g:3010:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3015:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3020:3: ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) )
            // InternalKerML.g:3021:4: (lv_ownedRelationship_2_0= ruleOwnedConjugation )
            {
            // InternalKerML.g:3021:4: (lv_ownedRelationship_2_0= ruleOwnedConjugation )
            // InternalKerML.g:3022:5: lv_ownedRelationship_2_0= ruleOwnedConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConjugationPartAccess().getOwnedRelationshipOwnedConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConjugationPart"


    // $ANTLR start "ruleDisjoiningPart"
    // InternalKerML.g:3044:1: ruleDisjoiningPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* ) ;
    public final EObject ruleDisjoiningPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3050:2: ( (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* ) )
            // InternalKerML.g:3051:2: (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* )
            {
            // InternalKerML.g:3051:2: (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* )
            // InternalKerML.g:3052:3: otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )*
            {
            otherlv_0=(Token)match(input,46,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDisjoiningPartAccess().getDisjointKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDisjoiningPartAccess().getFromKeyword_1());
              		
            }
            // InternalKerML.g:3060:3: ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) )
            // InternalKerML.g:3061:4: (lv_ownedRelationship_2_0= ruleOwnedDisjoining )
            {
            // InternalKerML.g:3061:4: (lv_ownedRelationship_2_0= ruleOwnedDisjoining )
            // InternalKerML.g:3062:5: lv_ownedRelationship_2_0= ruleOwnedDisjoining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDisjoiningPartAccess().getOwnedRelationshipOwnedDisjoiningParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDisjoiningPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedDisjoining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3079:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==23) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalKerML.g:3080:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) )
            	    {
            	    otherlv_3=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getDisjoiningPartAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKerML.g:3084:4: ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) )
            	    // InternalKerML.g:3085:5: (lv_ownedRelationship_4_0= ruleOwnedDisjoining )
            	    {
            	    // InternalKerML.g:3085:5: (lv_ownedRelationship_4_0= ruleOwnedDisjoining )
            	    // InternalKerML.g:3086:6: lv_ownedRelationship_4_0= ruleOwnedDisjoining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDisjoiningPartAccess().getOwnedRelationshipOwnedDisjoiningParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedDisjoining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDisjoiningPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedDisjoining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDisjoiningPart"


    // $ANTLR start "ruleTypeBody"
    // InternalKerML.g:3109:1: ruleTypeBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject ruleTypeBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3115:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:3116:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:3116:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==17) ) {
                alt63=1;
            }
            else if ( (LA63_0==18) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalKerML.g:3117:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3122:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:3122:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:3123:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:3127:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop62:
                    do {
                        int alt62=5;
                        alt62 = dfa62.predict(input);
                        switch (alt62) {
                    	case 1 :
                    	    // InternalKerML.g:3128:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:3128:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    // InternalKerML.g:3129:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    {
                    	    // InternalKerML.g:3129:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    // InternalKerML.g:3130:7: lv_ownedRelationship_2_0= ruleNonFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_ownedRelationship_2_0=ruleNonFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NonFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:3148:5: ( (lv_ownedRelationship_3_0= ruleFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:3148:5: ( (lv_ownedRelationship_3_0= ruleFeatureMember ) )
                    	    // InternalKerML.g:3149:6: (lv_ownedRelationship_3_0= ruleFeatureMember )
                    	    {
                    	    // InternalKerML.g:3149:6: (lv_ownedRelationship_3_0= ruleFeatureMember )
                    	    // InternalKerML.g:3150:7: lv_ownedRelationship_3_0= ruleFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipFeatureMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_ownedRelationship_3_0=ruleFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.FeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:3168:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:3168:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:3169:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:3169:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:3170:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:3188:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:3188:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:3189:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:3189:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:3190:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeBody"


    // $ANTLR start "entryRuleFeatureMember"
    // InternalKerML.g:3217:1: entryRuleFeatureMember returns [EObject current=null] : iv_ruleFeatureMember= ruleFeatureMember EOF ;
    public final EObject entryRuleFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureMember = null;


        try {
            // InternalKerML.g:3217:54: (iv_ruleFeatureMember= ruleFeatureMember EOF )
            // InternalKerML.g:3218:2: iv_ruleFeatureMember= ruleFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureMember=ruleFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureMember"


    // $ANTLR start "ruleFeatureMember"
    // InternalKerML.g:3224:1: ruleFeatureMember returns [EObject current=null] : (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember ) ;
    public final EObject ruleFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_TypeFeatureMember_0 = null;

        EObject this_OwnedFeatureMember_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:3230:2: ( (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember ) )
            // InternalKerML.g:3231:2: (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember )
            {
            // InternalKerML.g:3231:2: (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember )
            int alt64=2;
            switch ( input.LA(1) ) {
            case 137:
                {
                int LA64_1 = input.LA(2);

                if ( ((LA64_1>=RULE_ID && LA64_1<=RULE_UNRESTRICTED_NAME)||LA64_1==14||LA64_1==33||LA64_1==40||LA64_1==42||(LA64_1>=44 && LA64_1<=45)||(LA64_1>=55 && LA64_1<=60)||(LA64_1>=66 && LA64_1<=72)||LA64_1==82||LA64_1==88||(LA64_1>=91 && LA64_1<=92)||LA64_1==96||LA64_1==99||(LA64_1>=101 && LA64_1<=102)||LA64_1==106||(LA64_1>=140 && LA64_1<=142)) ) {
                    alt64=2;
                }
                else if ( (LA64_1==47) ) {
                    alt64=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;
                }
                }
                break;
            case 138:
                {
                int LA64_2 = input.LA(2);

                if ( (LA64_2==47) ) {
                    alt64=1;
                }
                else if ( ((LA64_2>=RULE_ID && LA64_2<=RULE_UNRESTRICTED_NAME)||LA64_2==14||LA64_2==33||LA64_2==40||LA64_2==42||(LA64_2>=44 && LA64_2<=45)||(LA64_2>=55 && LA64_2<=60)||(LA64_2>=66 && LA64_2<=72)||LA64_2==82||LA64_2==88||(LA64_2>=91 && LA64_2<=92)||LA64_2==96||LA64_2==99||(LA64_2>=101 && LA64_2<=102)||LA64_2==106||(LA64_2>=140 && LA64_2<=142)) ) {
                    alt64=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 2, input);

                    throw nvae;
                }
                }
                break;
            case 139:
                {
                int LA64_3 = input.LA(2);

                if ( (LA64_3==47) ) {
                    alt64=1;
                }
                else if ( ((LA64_3>=RULE_ID && LA64_3<=RULE_UNRESTRICTED_NAME)||LA64_3==14||LA64_3==33||LA64_3==40||LA64_3==42||(LA64_3>=44 && LA64_3<=45)||(LA64_3>=55 && LA64_3<=60)||(LA64_3>=66 && LA64_3<=72)||LA64_3==82||LA64_3==88||(LA64_3>=91 && LA64_3<=92)||LA64_3==96||LA64_3==99||(LA64_3>=101 && LA64_3<=102)||LA64_3==106||(LA64_3>=140 && LA64_3<=142)) ) {
                    alt64=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 3, input);

                    throw nvae;
                }
                }
                break;
            case 47:
                {
                alt64=1;
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 14:
            case 33:
            case 40:
            case 42:
            case 44:
            case 45:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 82:
            case 88:
            case 91:
            case 92:
            case 96:
            case 99:
            case 101:
            case 102:
            case 106:
            case 140:
            case 141:
            case 142:
                {
                alt64=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalKerML.g:3232:3: this_TypeFeatureMember_0= ruleTypeFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureMemberAccess().getTypeFeatureMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeatureMember_0=ruleTypeFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeatureMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3241:3: this_OwnedFeatureMember_1= ruleOwnedFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OwnedFeatureMember_1=ruleOwnedFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OwnedFeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureMember"


    // $ANTLR start "entryRuleTypeFeatureMember"
    // InternalKerML.g:3253:1: entryRuleTypeFeatureMember returns [EObject current=null] : iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF ;
    public final EObject entryRuleTypeFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFeatureMember = null;


        try {
            // InternalKerML.g:3253:58: (iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF )
            // InternalKerML.g:3254:2: iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFeatureMember=ruleTypeFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFeatureMember"


    // $ANTLR start "ruleTypeFeatureMember"
    // InternalKerML.g:3260:1: ruleTypeFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleTypeFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3266:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:3267:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:3267:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            // InternalKerML.g:3268:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getTypeFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_47);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,47,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeFeatureMemberAccess().getMemberKeyword_1());
              		
            }
            // InternalKerML.g:3283:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            // InternalKerML.g:3284:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            {
            // InternalKerML.g:3284:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            // InternalKerML.g:3285:5: lv_ownedRelatedElement_2_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeatureMember"


    // $ANTLR start "entryRuleOwnedFeatureMember"
    // InternalKerML.g:3306:1: entryRuleOwnedFeatureMember returns [EObject current=null] : iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF ;
    public final EObject entryRuleOwnedFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureMember = null;


        try {
            // InternalKerML.g:3306:59: (iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF )
            // InternalKerML.g:3307:2: iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureMember=ruleOwnedFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureMember"


    // $ANTLR start "ruleOwnedFeatureMember"
    // InternalKerML.g:3313:1: ruleOwnedFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleOwnedFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3319:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:3320:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:3320:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            // InternalKerML.g:3321:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getOwnedFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getOwnedFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_26);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:3332:3: ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            // InternalKerML.g:3333:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            {
            // InternalKerML.g:3333:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            // InternalKerML.g:3334:5: lv_ownedRelatedElement_1_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOwnedFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOwnedFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureMember"


    // $ANTLR start "entryRuleSpecialization"
    // InternalKerML.g:3355:1: entryRuleSpecialization returns [EObject current=null] : iv_ruleSpecialization= ruleSpecialization EOF ;
    public final EObject entryRuleSpecialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecialization = null;


        try {
            // InternalKerML.g:3355:55: (iv_ruleSpecialization= ruleSpecialization EOF )
            // InternalKerML.g:3356:2: iv_ruleSpecialization= ruleSpecialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecialization=ruleSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialization"


    // $ANTLR start "ruleSpecialization"
    // InternalKerML.g:3362:1: ruleSpecialization returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSpecialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:3368:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3369:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3369:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:3370:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3370:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==48) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalKerML.g:3371:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,48,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSpecializationAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3375:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( ((LA65_0>=RULE_ID && LA65_0<=RULE_UNRESTRICTED_NAME)||LA65_0==14) ) {
                        alt65=1;
                    }
                    switch (alt65) {
                        case 1 :
                            // InternalKerML.g:3376:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSpecializationRule());
                              					}
                              					newCompositeNode(grammarAccess.getSpecializationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_49);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,49,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSpecializationAccess().getSubtypeKeyword_1());
              		
            }
            // InternalKerML.g:3393:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt67=2;
            alt67 = dfa67.predict(input);
            switch (alt67) {
                case 1 :
                    // InternalKerML.g:3394:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3394:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3395:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3395:5: ( ruleQualifiedName )
                    // InternalKerML.g:3396:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSpecializationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getSpecificTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3411:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3411:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3412:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3412:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3413:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecializationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:3431:3: (otherlv_5= ':>' | otherlv_6= 'specializes' )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==42) ) {
                alt68=1;
            }
            else if ( (LA68_0==43) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalKerML.g:3432:4: otherlv_5= ':>'
                    {
                    otherlv_5=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSpecializationAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3437:4: otherlv_6= 'specializes'
                    {
                    otherlv_6=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSpecializationAccess().getSpecializesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3442:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalKerML.g:3443:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3443:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3444:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3444:5: ( ruleQualifiedName )
                    // InternalKerML.g:3445:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSpecializationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getGeneralTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3460:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3460:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3461:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3461:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3462:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecializationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSpecializationRule());
              			}
              			newCompositeNode(grammarAccess.getSpecializationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialization"


    // $ANTLR start "entryRuleOwnedSpecialization"
    // InternalKerML.g:3495:1: entryRuleOwnedSpecialization returns [EObject current=null] : iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF ;
    public final EObject entryRuleOwnedSpecialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedSpecialization = null;


        try {
            // InternalKerML.g:3495:60: (iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF )
            // InternalKerML.g:3496:2: iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedSpecializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedSpecialization=ruleOwnedSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedSpecialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedSpecialization"


    // $ANTLR start "ruleOwnedSpecialization"
    // InternalKerML.g:3502:1: ruleOwnedSpecialization returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedSpecialization() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3508:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:3509:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:3509:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalKerML.g:3510:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3510:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3511:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3511:4: ( ruleQualifiedName )
                    // InternalKerML.g:3512:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedSpecializationRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSpecializationAccess().getGeneralTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3527:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3527:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3528:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3528:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3529:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedSpecializationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedSpecialization"


    // $ANTLR start "entryRuleConjugation"
    // InternalKerML.g:3550:1: entryRuleConjugation returns [EObject current=null] : iv_ruleConjugation= ruleConjugation EOF ;
    public final EObject entryRuleConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConjugation = null;


        try {
            // InternalKerML.g:3550:52: (iv_ruleConjugation= ruleConjugation EOF )
            // InternalKerML.g:3551:2: iv_ruleConjugation= ruleConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConjugation=ruleConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConjugation"


    // $ANTLR start "ruleConjugation"
    // InternalKerML.g:3557:1: ruleConjugation returns [EObject current=null] : ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleConjugation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:3563:2: ( ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3564:2: ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3564:2: ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:3565:3: (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3565:3: (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==50) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalKerML.g:3566:4: otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,50,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getConjugationAccess().getConjugationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3570:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( ((LA71_0>=RULE_ID && LA71_0<=RULE_UNRESTRICTED_NAME)||LA71_0==14) ) {
                        alt71=1;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalKerML.g:3571:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getConjugationRule());
                              					}
                              					newCompositeNode(grammarAccess.getConjugationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_52);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,51,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConjugationAccess().getConjugateKeyword_1());
              		
            }
            // InternalKerML.g:3588:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalKerML.g:3589:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3589:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3590:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3590:5: ( ruleQualifiedName )
                    // InternalKerML.g:3591:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConjugationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getConjugatedTypeTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3606:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3606:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3607:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3607:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3608:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConjugationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:3626:3: (otherlv_5= '~' | otherlv_6= 'conjugates' )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==44) ) {
                alt74=1;
            }
            else if ( (LA74_0==45) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalKerML.g:3627:4: otherlv_5= '~'
                    {
                    otherlv_5=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConjugationAccess().getTildeKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3632:4: otherlv_6= 'conjugates'
                    {
                    otherlv_6=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getConjugationAccess().getConjugatesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3637:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalKerML.g:3638:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3638:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3639:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3639:5: ( ruleQualifiedName )
                    // InternalKerML.g:3640:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConjugationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOriginalTypeTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3655:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3655:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3656:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3656:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3657:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConjugationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConjugationRule());
              			}
              			newCompositeNode(grammarAccess.getConjugationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConjugation"


    // $ANTLR start "entryRuleOwnedConjugation"
    // InternalKerML.g:3690:1: entryRuleOwnedConjugation returns [EObject current=null] : iv_ruleOwnedConjugation= ruleOwnedConjugation EOF ;
    public final EObject entryRuleOwnedConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedConjugation = null;


        try {
            // InternalKerML.g:3690:57: (iv_ruleOwnedConjugation= ruleOwnedConjugation EOF )
            // InternalKerML.g:3691:2: iv_ruleOwnedConjugation= ruleOwnedConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedConjugation=ruleOwnedConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedConjugation"


    // $ANTLR start "ruleOwnedConjugation"
    // InternalKerML.g:3697:1: ruleOwnedConjugation returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedConjugation() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3703:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:3704:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:3704:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalKerML.g:3705:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3705:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3706:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3706:4: ( ruleQualifiedName )
                    // InternalKerML.g:3707:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedConjugationRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3722:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3722:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3723:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3723:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3724:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedConjugationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedConjugation"


    // $ANTLR start "entryRuleDisjoining"
    // InternalKerML.g:3745:1: entryRuleDisjoining returns [EObject current=null] : iv_ruleDisjoining= ruleDisjoining EOF ;
    public final EObject entryRuleDisjoining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDisjoining = null;


        try {
            // InternalKerML.g:3745:51: (iv_ruleDisjoining= ruleDisjoining EOF )
            // InternalKerML.g:3746:2: iv_ruleDisjoining= ruleDisjoining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDisjoiningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDisjoining=ruleDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDisjoining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDisjoining"


    // $ANTLR start "ruleDisjoining"
    // InternalKerML.g:3752:1: ruleDisjoining returns [EObject current=null] : ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleDisjoining() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_7_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:3758:2: ( ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3759:2: ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3759:2: ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:3760:3: (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3760:3: (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==52) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalKerML.g:3761:4: otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDisjoiningAccess().getDisjoiningKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3765:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt77=2;
                    int LA77_0 = input.LA(1);

                    if ( ((LA77_0>=RULE_ID && LA77_0<=RULE_UNRESTRICTED_NAME)||LA77_0==14) ) {
                        alt77=1;
                    }
                    switch (alt77) {
                        case 1 :
                            // InternalKerML.g:3766:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getDisjoiningRule());
                              					}
                              					newCompositeNode(grammarAccess.getDisjoiningAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_55);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDisjoiningAccess().getDisjointKeyword_1());
              		
            }
            // InternalKerML.g:3783:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalKerML.g:3784:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3784:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3785:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3785:5: ( ruleQualifiedName )
                    // InternalKerML.g:3786:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDisjoiningRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getTypeDisjoinedTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3801:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3801:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3802:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3802:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3803:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDisjoiningRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDisjoiningAccess().getFromKeyword_3());
              		
            }
            // InternalKerML.g:3825:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalKerML.g:3826:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3826:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3827:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3827:5: ( ruleQualifiedName )
                    // InternalKerML.g:3828:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDisjoiningRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getDisjoiningTypeTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3843:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3843:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3844:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3844:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3845:6: lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_7_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDisjoiningRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDisjoiningRule());
              			}
              			newCompositeNode(grammarAccess.getDisjoiningAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDisjoining"


    // $ANTLR start "entryRuleOwnedDisjoining"
    // InternalKerML.g:3878:1: entryRuleOwnedDisjoining returns [EObject current=null] : iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF ;
    public final EObject entryRuleOwnedDisjoining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedDisjoining = null;


        try {
            // InternalKerML.g:3878:56: (iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF )
            // InternalKerML.g:3879:2: iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedDisjoiningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedDisjoining=ruleOwnedDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedDisjoining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedDisjoining"


    // $ANTLR start "ruleOwnedDisjoining"
    // InternalKerML.g:3885:1: ruleOwnedDisjoining returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedDisjoining() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3891:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:3892:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:3892:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalKerML.g:3893:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3893:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3894:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3894:4: ( ruleQualifiedName )
                    // InternalKerML.g:3895:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedDisjoiningRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedDisjoiningAccess().getDisjoiningTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3910:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3910:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3911:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3911:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3912:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedDisjoiningRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedDisjoining"


    // $ANTLR start "entryRuleClassifier"
    // InternalKerML.g:3933:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKerML.g:3933:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKerML.g:3934:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKerML.g:3940:1: ruleClassifier returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:3946:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:3947:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:3947:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:3948:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:3948:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==40) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalKerML.g:3949:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:3949:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:3950:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassifierAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,53,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassifierAccess().getClassifierKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassifierRule());
              			}
              			newCompositeNode(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassifierRule());
              			}
              			newCompositeNode(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "ruleClassifierDeclaration"
    // InternalKerML.g:3993:1: ruleClassifierDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? ) ;
    public final EObject ruleClassifierDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject this_SuperclassingPart_3 = null;

        EObject this_ClassifierConjugationPart_4 = null;

        EObject this_DisjoiningPart_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:3999:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? ) )
            // InternalKerML.g:4000:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? )
            {
            // InternalKerML.g:4000:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )? )
            // InternalKerML.g:4001:3: ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )?
            {
            // InternalKerML.g:4001:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==33) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalKerML.g:4002:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:4002:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:4003:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,33,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4015:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( ((LA84_0>=RULE_ID && LA84_0<=RULE_UNRESTRICTED_NAME)||LA84_0==14) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalKerML.g:4016:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_59);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4028:3: ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==82) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalKerML.g:4029:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:4029:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:4030:5: lv_ownedRelationship_2_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_60);
                    lv_ownedRelationship_2_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4047:3: (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )?
            int alt86=3;
            int LA86_0 = input.LA(1);

            if ( ((LA86_0>=42 && LA86_0<=43)) ) {
                alt86=1;
            }
            else if ( ((LA86_0>=44 && LA86_0<=45)) ) {
                alt86=2;
            }
            switch (alt86) {
                case 1 :
                    // InternalKerML.g:4048:4: this_SuperclassingPart_3= ruleSuperclassingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getSuperclassingPartParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_61);
                    this_SuperclassingPart_3=ruleSuperclassingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SuperclassingPart_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4060:4: this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getClassifierConjugationPartParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_61);
                    this_ClassifierConjugationPart_4=ruleClassifierConjugationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ClassifierConjugationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4072:3: (this_DisjoiningPart_5= ruleDisjoiningPart[$current] )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==46) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalKerML.g:4073:4: this_DisjoiningPart_5= ruleDisjoiningPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getDisjoiningPartParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_DisjoiningPart_5=ruleDisjoiningPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_DisjoiningPart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierDeclaration"


    // $ANTLR start "ruleSuperclassingPart"
    // InternalKerML.g:4090:1: ruleSuperclassingPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* ) ;
    public final EObject ruleSuperclassingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4096:2: ( ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* ) )
            // InternalKerML.g:4097:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* )
            {
            // InternalKerML.g:4097:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* )
            // InternalKerML.g:4098:3: (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )*
            {
            // InternalKerML.g:4098:3: (otherlv_0= ':>' | otherlv_1= 'specializes' )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==42) ) {
                alt88=1;
            }
            else if ( (LA88_0==43) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalKerML.g:4099:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSuperclassingPartAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4104:4: otherlv_1= 'specializes'
                    {
                    otherlv_1=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSuperclassingPartAccess().getSpecializesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4109:3: ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) )
            // InternalKerML.g:4110:4: (lv_ownedRelationship_2_0= ruleOwnedsubclassification )
            {
            // InternalKerML.g:4110:4: (lv_ownedRelationship_2_0= ruleOwnedsubclassification )
            // InternalKerML.g:4111:5: lv_ownedRelationship_2_0= ruleOwnedsubclassification
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedsubclassificationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedsubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.Ownedsubclassification");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:4128:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==23) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalKerML.g:4129:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) )
            	    {
            	    otherlv_3=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSuperclassingPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:4133:4: ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) )
            	    // InternalKerML.g:4134:5: (lv_ownedRelationship_4_0= ruleOwnedsubclassification )
            	    {
            	    // InternalKerML.g:4134:5: (lv_ownedRelationship_4_0= ruleOwnedsubclassification )
            	    // InternalKerML.g:4135:6: lv_ownedRelationship_4_0= ruleOwnedsubclassification
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedsubclassificationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedsubclassification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.Ownedsubclassification");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuperclassingPart"


    // $ANTLR start "ruleClassifierConjugationPart"
    // InternalKerML.g:4158:1: ruleClassifierConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) ) ;
    public final EObject ruleClassifierConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4164:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) ) )
            // InternalKerML.g:4165:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) )
            {
            // InternalKerML.g:4165:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) )
            // InternalKerML.g:4166:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) )
            {
            // InternalKerML.g:4166:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==44) ) {
                alt90=1;
            }
            else if ( (LA90_0==45) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalKerML.g:4167:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getClassifierConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4172:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getClassifierConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4177:3: ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) )
            // InternalKerML.g:4178:4: (lv_ownedRelationship_2_0= ruleClassifierConjugation )
            {
            // InternalKerML.g:4178:4: (lv_ownedRelationship_2_0= ruleClassifierConjugation )
            // InternalKerML.g:4179:5: lv_ownedRelationship_2_0= ruleClassifierConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationshipClassifierConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleClassifierConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.ClassifierConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierConjugationPart"


    // $ANTLR start "entryRuleSubclassification"
    // InternalKerML.g:4200:1: entryRuleSubclassification returns [EObject current=null] : iv_ruleSubclassification= ruleSubclassification EOF ;
    public final EObject entryRuleSubclassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubclassification = null;


        try {
            // InternalKerML.g:4200:58: (iv_ruleSubclassification= ruleSubclassification EOF )
            // InternalKerML.g:4201:2: iv_ruleSubclassification= ruleSubclassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubclassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubclassification=ruleSubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubclassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubclassification"


    // $ANTLR start "ruleSubclassification"
    // InternalKerML.g:4207:1: ruleSubclassification returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSubclassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipBody_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:4213:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:4214:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:4214:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] )
            // InternalKerML.g:4215:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:4215:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==48) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalKerML.g:4216:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,48,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubclassificationAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:4220:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=RULE_ID && LA91_0<=RULE_UNRESTRICTED_NAME)||LA91_0==14) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalKerML.g:4221:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSubclassificationRule());
                              					}
                              					newCompositeNode(grammarAccess.getSubclassificationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_63);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,54,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubclassificationAccess().getSubclassifierKeyword_1());
              		
            }
            // InternalKerML.g:4238:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4239:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:4239:4: ( ruleQualifiedName )
            // InternalKerML.g:4240:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSubclassificationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubclassificationAccess().getSubclassifierClassifierCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_50);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:4254:3: (otherlv_4= ':>' | otherlv_5= 'specializes' )
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==42) ) {
                alt93=1;
            }
            else if ( (LA93_0==43) ) {
                alt93=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }
            switch (alt93) {
                case 1 :
                    // InternalKerML.g:4255:4: otherlv_4= ':>'
                    {
                    otherlv_4=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSubclassificationAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4260:4: otherlv_5= 'specializes'
                    {
                    otherlv_5=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSubclassificationAccess().getSpecializesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4265:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4266:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:4266:4: ( ruleQualifiedName )
            // InternalKerML.g:4267:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSubclassificationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubclassificationAccess().getSuperclassifierClassifierCrossReference_4_0());
              				
            }
            pushFollow(FOLLOW_9);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubclassificationRule());
              			}
              			newCompositeNode(grammarAccess.getSubclassificationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_7=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_7;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubclassification"


    // $ANTLR start "entryRuleOwnedsubclassification"
    // InternalKerML.g:4296:1: entryRuleOwnedsubclassification returns [EObject current=null] : iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF ;
    public final EObject entryRuleOwnedsubclassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedsubclassification = null;


        try {
            // InternalKerML.g:4296:63: (iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF )
            // InternalKerML.g:4297:2: iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedsubclassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedsubclassification=ruleOwnedsubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedsubclassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedsubclassification"


    // $ANTLR start "ruleOwnedsubclassification"
    // InternalKerML.g:4303:1: ruleOwnedsubclassification returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedsubclassification() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:4309:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:4310:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:4310:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4311:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:4311:3: ( ruleQualifiedName )
            // InternalKerML.g:4312:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedsubclassificationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedsubclassificationAccess().getSuperclassifierClassifierCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedsubclassification"


    // $ANTLR start "entryRuleClassifierConjugation"
    // InternalKerML.g:4329:1: entryRuleClassifierConjugation returns [EObject current=null] : iv_ruleClassifierConjugation= ruleClassifierConjugation EOF ;
    public final EObject entryRuleClassifierConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierConjugation = null;


        try {
            // InternalKerML.g:4329:62: (iv_ruleClassifierConjugation= ruleClassifierConjugation EOF )
            // InternalKerML.g:4330:2: iv_ruleClassifierConjugation= ruleClassifierConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierConjugation=ruleClassifierConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierConjugation"


    // $ANTLR start "ruleClassifierConjugation"
    // InternalKerML.g:4336:1: ruleClassifierConjugation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleClassifierConjugation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:4342:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:4343:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:4343:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4344:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:4344:3: ( ruleQualifiedName )
            // InternalKerML.g:4345:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getClassifierConjugationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierConjugation"


    // $ANTLR start "ruleFeaturePrefix"
    // InternalKerML.g:4363:1: ruleFeaturePrefix[EObject in_current] returns [EObject current=in_current] : ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ) ;
    public final EObject ruleFeaturePrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_1_0=null;
        Token lv_isComposite_2_0=null;
        Token lv_isPortion_3_0=null;
        Token lv_isReadOnly_4_0=null;
        Token lv_isDerived_5_0=null;
        Token lv_isEnd_6_0=null;
        Enumerator lv_direction_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4369:2: ( ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ) )
            // InternalKerML.g:4370:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? )
            {
            // InternalKerML.g:4370:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? )
            // InternalKerML.g:4371:3: ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )?
            {
            // InternalKerML.g:4371:3: ( (lv_direction_0_0= ruleFeatureDirection ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( ((LA94_0>=140 && LA94_0<=142)) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalKerML.g:4372:4: (lv_direction_0_0= ruleFeatureDirection )
                    {
                    // InternalKerML.g:4372:4: (lv_direction_0_0= ruleFeatureDirection )
                    // InternalKerML.g:4373:5: lv_direction_0_0= ruleFeatureDirection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeaturePrefixAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_64);
                    lv_direction_0_0=ruleFeatureDirection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFeaturePrefixRule());
                      					}
                      					set(
                      						current,
                      						"direction",
                      						lv_direction_0_0,
                      						"org.omg.kerml.xtext.KerML.FeatureDirection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4390:3: ( (lv_isAbstract_1_0= 'abstract' ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==40) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalKerML.g:4391:4: (lv_isAbstract_1_0= 'abstract' )
                    {
                    // InternalKerML.g:4391:4: (lv_isAbstract_1_0= 'abstract' )
                    // InternalKerML.g:4392:5: lv_isAbstract_1_0= 'abstract'
                    {
                    lv_isAbstract_1_0=(Token)match(input,40,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_1_0, grammarAccess.getFeaturePrefixAccess().getIsAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_1_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4404:3: ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )?
            int alt96=3;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==55) ) {
                alt96=1;
            }
            else if ( (LA96_0==56) ) {
                alt96=2;
            }
            switch (alt96) {
                case 1 :
                    // InternalKerML.g:4405:4: ( (lv_isComposite_2_0= 'composite' ) )
                    {
                    // InternalKerML.g:4405:4: ( (lv_isComposite_2_0= 'composite' ) )
                    // InternalKerML.g:4406:5: (lv_isComposite_2_0= 'composite' )
                    {
                    // InternalKerML.g:4406:5: (lv_isComposite_2_0= 'composite' )
                    // InternalKerML.g:4407:6: lv_isComposite_2_0= 'composite'
                    {
                    lv_isComposite_2_0=(Token)match(input,55,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isComposite_2_0, grammarAccess.getFeaturePrefixAccess().getIsCompositeCompositeKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      						}
                      						setWithLastConsumed(current, "isComposite", lv_isComposite_2_0 != null, "composite");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4420:4: ( (lv_isPortion_3_0= 'portion' ) )
                    {
                    // InternalKerML.g:4420:4: ( (lv_isPortion_3_0= 'portion' ) )
                    // InternalKerML.g:4421:5: (lv_isPortion_3_0= 'portion' )
                    {
                    // InternalKerML.g:4421:5: (lv_isPortion_3_0= 'portion' )
                    // InternalKerML.g:4422:6: lv_isPortion_3_0= 'portion'
                    {
                    lv_isPortion_3_0=(Token)match(input,56,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isPortion_3_0, grammarAccess.getFeaturePrefixAccess().getIsPortionPortionKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      						}
                      						setWithLastConsumed(current, "isPortion", lv_isPortion_3_0 != null, "portion");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:4435:3: ( (lv_isReadOnly_4_0= 'readonly' ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==57) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalKerML.g:4436:4: (lv_isReadOnly_4_0= 'readonly' )
                    {
                    // InternalKerML.g:4436:4: (lv_isReadOnly_4_0= 'readonly' )
                    // InternalKerML.g:4437:5: lv_isReadOnly_4_0= 'readonly'
                    {
                    lv_isReadOnly_4_0=(Token)match(input,57,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isReadOnly_4_0, grammarAccess.getFeaturePrefixAccess().getIsReadOnlyReadonlyKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isReadOnly", lv_isReadOnly_4_0 != null, "readonly");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4449:3: ( (lv_isDerived_5_0= 'derived' ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==58) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalKerML.g:4450:4: (lv_isDerived_5_0= 'derived' )
                    {
                    // InternalKerML.g:4450:4: (lv_isDerived_5_0= 'derived' )
                    // InternalKerML.g:4451:5: lv_isDerived_5_0= 'derived'
                    {
                    lv_isDerived_5_0=(Token)match(input,58,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isDerived_5_0, grammarAccess.getFeaturePrefixAccess().getIsDerivedDerivedKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isDerived", lv_isDerived_5_0 != null, "derived");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4463:3: ( (lv_isEnd_6_0= 'end' ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==59) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalKerML.g:4464:4: (lv_isEnd_6_0= 'end' )
                    {
                    // InternalKerML.g:4464:4: (lv_isEnd_6_0= 'end' )
                    // InternalKerML.g:4465:5: lv_isEnd_6_0= 'end'
                    {
                    lv_isEnd_6_0=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isEnd_6_0, grammarAccess.getFeaturePrefixAccess().getIsEndEndKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isEnd", lv_isEnd_6_0 != null, "end");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeaturePrefix"


    // $ANTLR start "entryRuleFeature"
    // InternalKerML.g:4481:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeature = null;


        try {
            // InternalKerML.g:4481:48: (iv_ruleFeature= ruleFeature EOF )
            // InternalKerML.g:4482:2: iv_ruleFeature= ruleFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeature=ruleFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeature"


    // $ANTLR start "ruleFeature"
    // InternalKerML.g:4488:1: ruleFeature returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_FeatureDeclaration_2 = null;

        EObject this_ValuePart_4 = null;

        EObject this_TypeBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:4494:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] ) )
            // InternalKerML.g:4495:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] )
            {
            // InternalKerML.g:4495:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] )
            // InternalKerML.g:4496:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:4507:3: ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==60) ) {
                int LA101_1 = input.LA(2);

                if ( ((LA101_1>=17 && LA101_1<=18)||(LA101_1>=78 && LA101_1<=80)) ) {
                    alt101=2;
                }
                else if ( ((LA101_1>=RULE_ID && LA101_1<=RULE_UNRESTRICTED_NAME)||LA101_1==14||LA101_1==33||LA101_1==42||(LA101_1>=44 && LA101_1<=45)||(LA101_1>=66 && LA101_1<=72)||LA101_1==82) ) {
                    alt101=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 101, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA101_0>=RULE_ID && LA101_0<=RULE_UNRESTRICTED_NAME)||LA101_0==14||LA101_0==33||LA101_0==42||(LA101_0>=44 && LA101_0<=45)||(LA101_0>=66 && LA101_0<=72)||LA101_0==82) ) {
                alt101=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // InternalKerML.g:4508:4: ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] )
                    {
                    // InternalKerML.g:4508:4: ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] )
                    // InternalKerML.g:4509:5: (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current]
                    {
                    // InternalKerML.g:4509:5: (otherlv_1= 'feature' )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==60) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // InternalKerML.g:4510:6: otherlv_1= 'feature'
                            {
                            otherlv_1=(Token)match(input,60,FOLLOW_69); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getFeatureAccess().getFeatureKeyword_1_0_0());
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureRule());
                      					}
                      					newCompositeNode(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_1_0_1());
                      				
                    }
                    pushFollow(FOLLOW_70);
                    this_FeatureDeclaration_2=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_FeatureDeclaration_2;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4528:4: otherlv_3= 'feature'
                    {
                    otherlv_3=(Token)match(input,60,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFeatureAccess().getFeatureKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4533:3: (this_ValuePart_4= ruleValuePart[$current] )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=78 && LA102_0<=80)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalKerML.g:4534:4: this_ValuePart_4= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureAccess().getValuePartParserRuleCall_2());
                      			
                    }
                    pushFollow(FOLLOW_23);
                    this_ValuePart_4=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_5=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeature"


    // $ANTLR start "ruleFeatureDeclaration"
    // InternalKerML.g:4562:1: ruleFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* ) ;
    public final EObject ruleFeatureDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject this_FeatureSpecializationPart_2 = null;

        EObject this_FeatureConjugationPart_3 = null;

        EObject this_FeatureSpecializationPart_4 = null;

        EObject this_FeatureConjugationPart_5 = null;

        EObject this_FeatureRelationshipPart_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:4568:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* ) )
            // InternalKerML.g:4569:2: ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* )
            {
            // InternalKerML.g:4569:2: ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* )
            // InternalKerML.g:4570:3: ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )*
            {
            // InternalKerML.g:4570:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==33) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalKerML.g:4571:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:4571:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:4572:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,33,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4584:3: ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] )
            int alt105=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 14:
                {
                alt105=1;
                }
                break;
            case 42:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 82:
                {
                alt105=2;
                }
                break;
            case 44:
            case 45:
                {
                alt105=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }

            switch (alt105) {
                case 1 :
                    // InternalKerML.g:4585:4: (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? )
                    {
                    // InternalKerML.g:4585:4: (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? )
                    // InternalKerML.g:4586:5: this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )?
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      					}
                      					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getIdentificationParserRuleCall_1_0_0());
                      				
                    }
                    pushFollow(FOLLOW_71);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_Identification_1;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalKerML.g:4597:5: (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )?
                    int alt104=3;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==42||(LA104_0>=66 && LA104_0<=72)||LA104_0==82) ) {
                        alt104=1;
                    }
                    else if ( ((LA104_0>=44 && LA104_0<=45)) ) {
                        alt104=2;
                    }
                    switch (alt104) {
                        case 1 :
                            // InternalKerML.g:4598:6: this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_72);
                            this_FeatureSpecializationPart_2=ruleFeatureSpecializationPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureSpecializationPart_2;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:4610:6: this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1());
                              					
                            }
                            pushFollow(FOLLOW_72);
                            this_FeatureConjugationPart_3=ruleFeatureConjugationPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureConjugationPart_3;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4624:4: this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_FeatureSpecializationPart_4=ruleFeatureSpecializationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureSpecializationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:4636:4: this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_FeatureConjugationPart_5=ruleFeatureConjugationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureConjugationPart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4648:3: (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==46||(LA106_0>=61 && LA106_0<=62)||LA106_0==64) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalKerML.g:4649:4: this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureRelationshipPartParserRuleCall_2());
            	      			
            	    }
            	    pushFollow(FOLLOW_72);
            	    this_FeatureRelationshipPart_6=ruleFeatureRelationshipPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_FeatureRelationshipPart_6;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDeclaration"


    // $ANTLR start "ruleFeatureRelationshipPart"
    // InternalKerML.g:4666:1: ruleFeatureRelationshipPart[EObject in_current] returns [EObject current=in_current] : (this_ChainingPart_0= ruleChainingPart[$current] | this_DisjoiningPart_1= ruleDisjoiningPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] ) ;
    public final EObject ruleFeatureRelationshipPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_ChainingPart_0 = null;

        EObject this_DisjoiningPart_1 = null;

        EObject this_InvertingPart_2 = null;

        EObject this_TypeFeaturingPart_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:4672:2: ( (this_ChainingPart_0= ruleChainingPart[$current] | this_DisjoiningPart_1= ruleDisjoiningPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] ) )
            // InternalKerML.g:4673:2: (this_ChainingPart_0= ruleChainingPart[$current] | this_DisjoiningPart_1= ruleDisjoiningPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] )
            {
            // InternalKerML.g:4673:2: (this_ChainingPart_0= ruleChainingPart[$current] | this_DisjoiningPart_1= ruleDisjoiningPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] )
            int alt107=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt107=1;
                }
                break;
            case 46:
                {
                alt107=2;
                }
                break;
            case 62:
                {
                alt107=3;
                }
                break;
            case 64:
                {
                alt107=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }

            switch (alt107) {
                case 1 :
                    // InternalKerML.g:4674:3: this_ChainingPart_0= ruleChainingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getChainingPartParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChainingPart_0=ruleChainingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChainingPart_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4686:3: this_DisjoiningPart_1= ruleDisjoiningPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getDisjoiningPartParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DisjoiningPart_1=ruleDisjoiningPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DisjoiningPart_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:4698:3: this_InvertingPart_2= ruleInvertingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getInvertingPartParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InvertingPart_2=ruleInvertingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvertingPart_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:4710:3: this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getTypeFeaturingPartParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeaturingPart_3=ruleTypeFeaturingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeaturingPart_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureRelationshipPart"


    // $ANTLR start "ruleChainingPart"
    // InternalKerML.g:4726:1: ruleChainingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'chains' this_FeatureChain_1= ruleFeatureChain[$current] ) ;
    public final EObject ruleChainingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_FeatureChain_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:4732:2: ( (otherlv_0= 'chains' this_FeatureChain_1= ruleFeatureChain[$current] ) )
            // InternalKerML.g:4733:2: (otherlv_0= 'chains' this_FeatureChain_1= ruleFeatureChain[$current] )
            {
            // InternalKerML.g:4733:2: (otherlv_0= 'chains' this_FeatureChain_1= ruleFeatureChain[$current] )
            // InternalKerML.g:4734:3: otherlv_0= 'chains' this_FeatureChain_1= ruleFeatureChain[$current]
            {
            otherlv_0=(Token)match(input,61,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChainingPartAccess().getChainsKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getChainingPartRule());
              			}
              			newCompositeNode(grammarAccess.getChainingPartAccess().getFeatureChainParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_FeatureChain_1=ruleFeatureChain(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureChain_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChainingPart"


    // $ANTLR start "ruleInvertingPart"
    // InternalKerML.g:4754:1: ruleInvertingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) ) ;
    public final EObject ruleInvertingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4760:2: ( (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) ) )
            // InternalKerML.g:4761:2: (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) )
            {
            // InternalKerML.g:4761:2: (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) )
            // InternalKerML.g:4762:3: otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) )
            {
            otherlv_0=(Token)match(input,62,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInvertingPartAccess().getInverseKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,63,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvertingPartAccess().getOfKeyword_1());
              		
            }
            // InternalKerML.g:4770:3: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) )
            // InternalKerML.g:4771:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting )
            {
            // InternalKerML.g:4771:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting )
            // InternalKerML.g:4772:5: lv_ownedRelationship_2_0= ruleOwnedFeatureInverting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvertingPartAccess().getOwnedRelationshipOwnedFeatureInvertingParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvertingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureInverting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvertingPart"


    // $ANTLR start "ruleTypeFeaturingPart"
    // InternalKerML.g:4794:1: ruleTypeFeaturingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* ) ;
    public final EObject ruleTypeFeaturingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4800:2: ( (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* ) )
            // InternalKerML.g:4801:2: (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* )
            {
            // InternalKerML.g:4801:2: (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* )
            // InternalKerML.g:4802:3: otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )*
            {
            otherlv_0=(Token)match(input,64,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingPartAccess().getFeaturedKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeFeaturingPartAccess().getByKeyword_1());
              		
            }
            // InternalKerML.g:4810:3: ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) )
            // InternalKerML.g:4811:4: (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing )
            {
            // InternalKerML.g:4811:4: (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing )
            // InternalKerML.g:4812:5: lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:4829:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==23) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // InternalKerML.g:4830:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) )
            	    {
            	    otherlv_3=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTypeFeaturingPartAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKerML.g:4834:4: ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) )
            	    // InternalKerML.g:4835:5: (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing )
            	    {
            	    // InternalKerML.g:4835:5: (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing )
            	    // InternalKerML.g:4836:6: lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedTypeFeaturing();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeaturingPart"


    // $ANTLR start "ruleFeatureSpecializationPart"
    // InternalKerML.g:4859:1: ruleFeatureSpecializationPart[EObject in_current] returns [EObject current=in_current] : ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) ) ;
    public final EObject ruleFeatureSpecializationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureSpecialization_0 = null;

        EObject this_MultiplicityPart_1 = null;

        EObject this_FeatureSpecialization_2 = null;

        EObject this_MultiplicityPart_3 = null;

        EObject this_FeatureSpecialization_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:4865:2: ( ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) ) )
            // InternalKerML.g:4866:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) )
            {
            // InternalKerML.g:4866:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==42||(LA113_0>=68 && LA113_0<=72)) ) {
                alt113=1;
            }
            else if ( ((LA113_0>=66 && LA113_0<=67)||LA113_0==82) ) {
                alt113=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // InternalKerML.g:4867:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    {
                    // InternalKerML.g:4867:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    // InternalKerML.g:4868:4: ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    {
                    // InternalKerML.g:4868:4: ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+
                    int cnt109=0;
                    loop109:
                    do {
                        int alt109=2;
                        alt109 = dfa109.predict(input);
                        switch (alt109) {
                    	case 1 :
                    	    // InternalKerML.g:4869:5: ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_75);
                    	    this_FeatureSpecialization_0=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_0;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt109 >= 1 ) break loop109;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(109, input);
                                throw eee;
                        }
                        cnt109++;
                    } while (true);

                    // InternalKerML.g:4882:4: (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( ((LA110_0>=66 && LA110_0<=67)||LA110_0==82) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalKerML.g:4883:5: this_MultiplicityPart_1= ruleMultiplicityPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_76);
                            this_MultiplicityPart_1=ruleMultiplicityPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_MultiplicityPart_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:4895:4: (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    loop111:
                    do {
                        int alt111=2;
                        int LA111_0 = input.LA(1);

                        if ( (LA111_0==42||(LA111_0>=68 && LA111_0<=72)) ) {
                            alt111=1;
                        }


                        switch (alt111) {
                    	case 1 :
                    	    // InternalKerML.g:4896:5: this_FeatureSpecialization_2= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_2());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    this_FeatureSpecialization_2=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop111;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4910:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* )
                    {
                    // InternalKerML.g:4910:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* )
                    // InternalKerML.g:4911:4: this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )*
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_76);
                    this_MultiplicityPart_3=ruleMultiplicityPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MultiplicityPart_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:4922:4: (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )*
                    loop112:
                    do {
                        int alt112=2;
                        int LA112_0 = input.LA(1);

                        if ( (LA112_0==42||(LA112_0>=68 && LA112_0<=72)) ) {
                            alt112=1;
                        }


                        switch (alt112) {
                    	case 1 :
                    	    // InternalKerML.g:4923:5: this_FeatureSpecialization_4= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    this_FeatureSpecialization_4=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_4;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop112;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureSpecializationPart"


    // $ANTLR start "ruleMultiplicityPart"
    // InternalKerML.g:4941:1: ruleMultiplicityPart[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) ) ;
    public final EObject ruleMultiplicityPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isOrdered_2_0=null;
        Token lv_isNonunique_3_0=null;
        Token lv_isNonunique_4_0=null;
        Token lv_isOrdered_5_0=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4947:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) ) )
            // InternalKerML.g:4948:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )
            {
            // InternalKerML.g:4948:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )
            int alt118=2;
            alt118 = dfa118.predict(input);
            switch (alt118) {
                case 1 :
                    // InternalKerML.g:4949:3: ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) )
                    {
                    // InternalKerML.g:4949:3: ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) )
                    // InternalKerML.g:4950:4: (lv_ownedRelationship_0_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:4950:4: (lv_ownedRelationship_0_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:4951:5: lv_ownedRelationship_0_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4969:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) )
                    {
                    // InternalKerML.g:4969:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) )
                    // InternalKerML.g:4970:4: ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) )
                    {
                    // InternalKerML.g:4970:4: ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==82) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalKerML.g:4971:5: (lv_ownedRelationship_1_0= ruleOwnedMultiplicity )
                            {
                            // InternalKerML.g:4971:5: (lv_ownedRelationship_1_0= ruleOwnedMultiplicity )
                            // InternalKerML.g:4972:6: lv_ownedRelationship_1_0= ruleOwnedMultiplicity
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_77);
                            lv_ownedRelationship_1_0=ruleOwnedMultiplicity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
                              						}
                              						add(
                              							current,
                              							"ownedRelationship",
                              							lv_ownedRelationship_1_0,
                              							"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:4989:4: ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) )
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==66) ) {
                        alt117=1;
                    }
                    else if ( (LA117_0==67) ) {
                        alt117=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 117, 0, input);

                        throw nvae;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalKerML.g:4990:5: ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? )
                            {
                            // InternalKerML.g:4990:5: ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? )
                            // InternalKerML.g:4991:6: ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )?
                            {
                            // InternalKerML.g:4991:6: ( (lv_isOrdered_2_0= 'ordered' ) )
                            // InternalKerML.g:4992:7: (lv_isOrdered_2_0= 'ordered' )
                            {
                            // InternalKerML.g:4992:7: (lv_isOrdered_2_0= 'ordered' )
                            // InternalKerML.g:4993:8: lv_isOrdered_2_0= 'ordered'
                            {
                            lv_isOrdered_2_0=(Token)match(input,66,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isOrdered_2_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                              								}
                              								setWithLastConsumed(current, "isOrdered", lv_isOrdered_2_0 != null, "ordered");
                              							
                            }

                            }


                            }

                            // InternalKerML.g:5005:6: ( (lv_isNonunique_3_0= 'nonunique' ) )?
                            int alt115=2;
                            int LA115_0 = input.LA(1);

                            if ( (LA115_0==67) ) {
                                alt115=1;
                            }
                            switch (alt115) {
                                case 1 :
                                    // InternalKerML.g:5006:7: (lv_isNonunique_3_0= 'nonunique' )
                                    {
                                    // InternalKerML.g:5006:7: (lv_isNonunique_3_0= 'nonunique' )
                                    // InternalKerML.g:5007:8: lv_isNonunique_3_0= 'nonunique'
                                    {
                                    lv_isNonunique_3_0=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_isNonunique_3_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                                      								}
                                      								setWithLastConsumed(current, "isNonunique", lv_isNonunique_3_0 != null, "nonunique");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKerML.g:5021:5: ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? )
                            {
                            // InternalKerML.g:5021:5: ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? )
                            // InternalKerML.g:5022:6: ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )?
                            {
                            // InternalKerML.g:5022:6: ( (lv_isNonunique_4_0= 'nonunique' ) )
                            // InternalKerML.g:5023:7: (lv_isNonunique_4_0= 'nonunique' )
                            {
                            // InternalKerML.g:5023:7: (lv_isNonunique_4_0= 'nonunique' )
                            // InternalKerML.g:5024:8: lv_isNonunique_4_0= 'nonunique'
                            {
                            lv_isNonunique_4_0=(Token)match(input,67,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isNonunique_4_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                              								}
                              								setWithLastConsumed(current, "isNonunique", lv_isNonunique_4_0 != null, "nonunique");
                              							
                            }

                            }


                            }

                            // InternalKerML.g:5036:6: ( (lv_isOrdered_5_0= 'ordered' ) )?
                            int alt116=2;
                            int LA116_0 = input.LA(1);

                            if ( (LA116_0==66) ) {
                                alt116=1;
                            }
                            switch (alt116) {
                                case 1 :
                                    // InternalKerML.g:5037:7: (lv_isOrdered_5_0= 'ordered' )
                                    {
                                    // InternalKerML.g:5037:7: (lv_isOrdered_5_0= 'ordered' )
                                    // InternalKerML.g:5038:8: lv_isOrdered_5_0= 'ordered'
                                    {
                                    lv_isOrdered_5_0=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_isOrdered_5_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                                      								}
                                      								setWithLastConsumed(current, "isOrdered", lv_isOrdered_5_0 != null, "ordered");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityPart"


    // $ANTLR start "ruleFeatureSpecialization"
    // InternalKerML.g:5058:1: ruleFeatureSpecialization[EObject in_current] returns [EObject current=in_current] : (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_Redefinitions_2= ruleRedefinitions[$current] ) ;
    public final EObject ruleFeatureSpecialization(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_Typings_0 = null;

        EObject this_Subsettings_1 = null;

        EObject this_Redefinitions_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:5064:2: ( (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_Redefinitions_2= ruleRedefinitions[$current] ) )
            // InternalKerML.g:5065:2: (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_Redefinitions_2= ruleRedefinitions[$current] )
            {
            // InternalKerML.g:5065:2: (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_Redefinitions_2= ruleRedefinitions[$current] )
            int alt119=3;
            switch ( input.LA(1) ) {
            case 68:
            case 69:
                {
                alt119=1;
                }
                break;
            case 42:
            case 70:
                {
                alt119=2;
                }
                break;
            case 71:
            case 72:
                {
                alt119=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }

            switch (alt119) {
                case 1 :
                    // InternalKerML.g:5066:3: this_Typings_0= ruleTypings[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getTypingsParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Typings_0=ruleTypings(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Typings_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5078:3: this_Subsettings_1= ruleSubsettings[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getSubsettingsParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subsettings_1=ruleSubsettings(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subsettings_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:5090:3: this_Redefinitions_2= ruleRedefinitions[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getRedefinitionsParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Redefinitions_2=ruleRedefinitions(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Redefinitions_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureSpecialization"


    // $ANTLR start "ruleTypings"
    // InternalKerML.g:5106:1: ruleTypings[EObject in_current] returns [EObject current=in_current] : (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* ) ;
    public final EObject ruleTypings(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_TypedBy_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5112:2: ( (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* ) )
            // InternalKerML.g:5113:2: (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* )
            {
            // InternalKerML.g:5113:2: (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* )
            // InternalKerML.g:5114:3: this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypingsRule());
              			}
              			newCompositeNode(grammarAccess.getTypingsAccess().getTypedByParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_TypedBy_0=ruleTypedBy(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypedBy_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5125:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==23) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalKerML.g:5126:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypingsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5130:4: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
            	    // InternalKerML.g:5131:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
            	    {
            	    // InternalKerML.g:5131:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
            	    // InternalKerML.g:5132:6: lv_ownedRelationship_2_0= ruleOwnedFeatureTyping
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypingsAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleOwnedFeatureTyping();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypingsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypings"


    // $ANTLR start "ruleTypedBy"
    // InternalKerML.g:5155:1: ruleTypedBy[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ) ;
    public final EObject ruleTypedBy(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5161:2: ( ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ) )
            // InternalKerML.g:5162:2: ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) )
            {
            // InternalKerML.g:5162:2: ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) )
            // InternalKerML.g:5163:3: (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) )
            {
            // InternalKerML.g:5163:3: (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==68) ) {
                alt121=1;
            }
            else if ( (LA121_0==69) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalKerML.g:5164:4: otherlv_0= ':'
                    {
                    otherlv_0=(Token)match(input,68,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypedByAccess().getColonKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5169:4: (otherlv_1= 'typed' otherlv_2= 'by' )
                    {
                    // InternalKerML.g:5169:4: (otherlv_1= 'typed' otherlv_2= 'by' )
                    // InternalKerML.g:5170:5: otherlv_1= 'typed' otherlv_2= 'by'
                    {
                    otherlv_1=(Token)match(input,69,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getTypedByAccess().getTypedKeyword_0_1_0());
                      				
                    }
                    otherlv_2=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getTypedByAccess().getByKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:5180:3: ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) )
            // InternalKerML.g:5181:4: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
            {
            // InternalKerML.g:5181:4: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
            // InternalKerML.g:5182:5: lv_ownedRelationship_3_0= ruleOwnedFeatureTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedByAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_3_0=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedByRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_3_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedBy"


    // $ANTLR start "ruleSubsettings"
    // InternalKerML.g:5204:1: ruleSubsettings[EObject in_current] returns [EObject current=in_current] : (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* ) ;
    public final EObject ruleSubsettings(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_Subsets_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5210:2: ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* ) )
            // InternalKerML.g:5211:2: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* )
            {
            // InternalKerML.g:5211:2: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* )
            // InternalKerML.g:5212:3: this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubsettingsRule());
              			}
              			newCompositeNode(grammarAccess.getSubsettingsAccess().getSubsetsParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_Subsets_0=ruleSubsets(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Subsets_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5223:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==23) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalKerML.g:5224:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getSubsettingsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5228:4: ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            	    // InternalKerML.g:5229:5: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            	    {
            	    // InternalKerML.g:5229:5: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            	    // InternalKerML.g:5230:6: lv_ownedRelationship_2_0= ruleOwnedSubsetting
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSubsettingsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleOwnedSubsetting();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSubsettingsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedSubsetting");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsettings"


    // $ANTLR start "ruleSubsets"
    // InternalKerML.g:5253:1: ruleSubsets[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ) ;
    public final EObject ruleSubsets(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5259:2: ( ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ) )
            // InternalKerML.g:5260:2: ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )
            {
            // InternalKerML.g:5260:2: ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )
            // InternalKerML.g:5261:3: (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            {
            // InternalKerML.g:5261:3: (otherlv_0= ':>' | otherlv_1= 'subsets' )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==42) ) {
                alt123=1;
            }
            else if ( (LA123_0==70) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalKerML.g:5262:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5267:4: otherlv_1= 'subsets'
                    {
                    otherlv_1=(Token)match(input,70,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5272:3: ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            // InternalKerML.g:5273:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            {
            // InternalKerML.g:5273:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            // InternalKerML.g:5274:5: lv_ownedRelationship_2_0= ruleOwnedSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubsetsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSubsetsRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsets"


    // $ANTLR start "ruleRedefinitions"
    // InternalKerML.g:5296:1: ruleRedefinitions[EObject in_current] returns [EObject current=in_current] : (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* ) ;
    public final EObject ruleRedefinitions(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_Redefines_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5302:2: ( (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* ) )
            // InternalKerML.g:5303:2: (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* )
            {
            // InternalKerML.g:5303:2: (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* )
            // InternalKerML.g:5304:3: this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRedefinitionsRule());
              			}
              			newCompositeNode(grammarAccess.getRedefinitionsAccess().getRedefinesParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_Redefines_0=ruleRedefines(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Redefines_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5315:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==23) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalKerML.g:5316:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRedefinitionsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5320:4: ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            	    // InternalKerML.g:5321:5: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            	    {
            	    // InternalKerML.g:5321:5: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            	    // InternalKerML.g:5322:6: lv_ownedRelationship_2_0= ruleOwnedRedefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRedefinitionsAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleOwnedRedefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRedefinitionsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedRedefinition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinitions"


    // $ANTLR start "ruleRedefines"
    // InternalKerML.g:5345:1: ruleRedefines[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) ) ;
    public final EObject ruleRedefines(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5351:2: ( ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) ) )
            // InternalKerML.g:5352:2: ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )
            {
            // InternalKerML.g:5352:2: ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )
            // InternalKerML.g:5353:3: (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            {
            // InternalKerML.g:5353:3: (otherlv_0= ':>>' | otherlv_1= 'redefines' )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==71) ) {
                alt125=1;
            }
            else if ( (LA125_0==72) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    // InternalKerML.g:5354:4: otherlv_0= ':>>'
                    {
                    otherlv_0=(Token)match(input,71,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5359:4: otherlv_1= 'redefines'
                    {
                    otherlv_1=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5364:3: ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            // InternalKerML.g:5365:4: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            {
            // InternalKerML.g:5365:4: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            // InternalKerML.g:5366:5: lv_ownedRelationship_2_0= ruleOwnedRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRedefinesAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRedefinesRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefines"


    // $ANTLR start "entryRuleFeatureInverting"
    // InternalKerML.g:5387:1: entryRuleFeatureInverting returns [EObject current=null] : iv_ruleFeatureInverting= ruleFeatureInverting EOF ;
    public final EObject entryRuleFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureInverting = null;


        try {
            // InternalKerML.g:5387:57: (iv_ruleFeatureInverting= ruleFeatureInverting EOF )
            // InternalKerML.g:5388:2: iv_ruleFeatureInverting= ruleFeatureInverting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureInvertingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureInverting=ruleFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureInverting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureInverting"


    // $ANTLR start "ruleFeatureInverting"
    // InternalKerML.g:5394:1: ruleFeatureInverting returns [EObject current=null] : ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleFeatureInverting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_7_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:5400:2: ( ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:5401:2: ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:5401:2: ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:5402:3: (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:5402:3: (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==73) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalKerML.g:5403:4: otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,73,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureInvertingAccess().getInvertingKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:5407:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( ((LA126_0>=RULE_ID && LA126_0<=RULE_UNRESTRICTED_NAME)||LA126_0==14) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // InternalKerML.g:5408:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureInvertingRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureInvertingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_81);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,62,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFeatureInvertingAccess().getInverseKeyword_1());
              		
            }
            // InternalKerML.g:5425:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt128=2;
            alt128 = dfa128.predict(input);
            switch (alt128) {
                case 1 :
                    // InternalKerML.g:5426:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5426:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5427:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5427:5: ( ruleQualifiedName )
                    // InternalKerML.g:5428:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureInvertingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getFeatureInvertedFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_73);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5443:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5443:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5444:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5444:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5445:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_73);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureInvertingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,63,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFeatureInvertingAccess().getOfKeyword_3());
              		
            }
            // InternalKerML.g:5467:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )
            int alt129=2;
            alt129 = dfa129.predict(input);
            switch (alt129) {
                case 1 :
                    // InternalKerML.g:5468:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5468:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5469:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5469:5: ( ruleQualifiedName )
                    // InternalKerML.g:5470:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureInvertingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getInvertingFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5485:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5485:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5486:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5486:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5487:6: lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_7_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureInvertingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureInvertingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureInvertingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureInverting"


    // $ANTLR start "entryRuleOwnedFeatureInverting"
    // InternalKerML.g:5520:1: entryRuleOwnedFeatureInverting returns [EObject current=null] : iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF ;
    public final EObject entryRuleOwnedFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureInverting = null;


        try {
            // InternalKerML.g:5520:62: (iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF )
            // InternalKerML.g:5521:2: iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureInvertingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureInverting=ruleOwnedFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureInverting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureInverting"


    // $ANTLR start "ruleOwnedFeatureInverting"
    // InternalKerML.g:5527:1: ruleOwnedFeatureInverting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5533:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:5534:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:5534:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt130=2;
            alt130 = dfa130.predict(input);
            switch (alt130) {
                case 1 :
                    // InternalKerML.g:5535:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5535:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5536:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5536:4: ( ruleQualifiedName )
                    // InternalKerML.g:5537:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedFeatureInvertingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedFeatureInvertingAccess().getInvertingFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5552:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5552:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5553:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5553:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5554:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedFeatureInvertingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureInverting"


    // $ANTLR start "entryRuleTypeFeaturing"
    // InternalKerML.g:5575:1: entryRuleTypeFeaturing returns [EObject current=null] : iv_ruleTypeFeaturing= ruleTypeFeaturing EOF ;
    public final EObject entryRuleTypeFeaturing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFeaturing = null;


        try {
            // InternalKerML.g:5575:54: (iv_ruleTypeFeaturing= ruleTypeFeaturing EOF )
            // InternalKerML.g:5576:2: iv_ruleTypeFeaturing= ruleTypeFeaturing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFeaturingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFeaturing=ruleTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFeaturing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFeaturing"


    // $ANTLR start "ruleTypeFeaturing"
    // InternalKerML.g:5582:1: ruleTypeFeaturing returns [EObject current=null] : (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] ) ;
    public final EObject ruleTypeFeaturing() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipBody_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:5588:2: ( (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:5589:2: (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:5589:2: (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] )
            // InternalKerML.g:5590:3: otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current]
            {
            otherlv_0=(Token)match(input,74,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingAccess().getFeaturingKeyword_0());
              		
            }
            // InternalKerML.g:5594:3: ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )?
            int alt132=2;
            switch ( input.LA(1) ) {
                case 14:
                case 63:
                    {
                    alt132=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA132_2 = input.LA(2);

                    if ( (LA132_2==63) ) {
                        alt132=1;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA132_3 = input.LA(2);

                    if ( (LA132_3==63) ) {
                        alt132=1;
                    }
                    }
                    break;
            }

            switch (alt132) {
                case 1 :
                    // InternalKerML.g:5595:4: (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of'
                    {
                    // InternalKerML.g:5595:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt131=2;
                    int LA131_0 = input.LA(1);

                    if ( ((LA131_0>=RULE_ID && LA131_0<=RULE_UNRESTRICTED_NAME)||LA131_0==14) ) {
                        alt131=1;
                    }
                    switch (alt131) {
                        case 1 :
                            // InternalKerML.g:5596:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
                              					}
                              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getIdentificationParserRuleCall_1_0());
                              				
                            }
                            pushFollow(FOLLOW_73);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,63,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeFeaturingAccess().getOfKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5613:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:5614:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:5614:4: ( ruleQualifiedName )
            // InternalKerML.g:5615:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_74);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeFeaturingAccess().getByKeyword_3());
              		
            }
            // InternalKerML.g:5633:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:5634:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:5634:4: ( ruleQualifiedName )
            // InternalKerML.g:5635:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureCrossReference_4_0());
              				
            }
            pushFollow(FOLLOW_9);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeFeaturingRule());
              			}
              			newCompositeNode(grammarAccess.getTypeFeaturingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_6=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_6;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeaturing"


    // $ANTLR start "entryRuleOwnedTypeFeaturing"
    // InternalKerML.g:5664:1: entryRuleOwnedTypeFeaturing returns [EObject current=null] : iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF ;
    public final EObject entryRuleOwnedTypeFeaturing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedTypeFeaturing = null;


        try {
            // InternalKerML.g:5664:59: (iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF )
            // InternalKerML.g:5665:2: iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedTypeFeaturingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedTypeFeaturing=ruleOwnedTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedTypeFeaturing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedTypeFeaturing"


    // $ANTLR start "ruleOwnedTypeFeaturing"
    // InternalKerML.g:5671:1: ruleOwnedTypeFeaturing returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedTypeFeaturing() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:5677:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:5678:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:5678:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:5679:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:5679:3: ( ruleQualifiedName )
            // InternalKerML.g:5680:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedTypeFeaturingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedTypeFeaturing"


    // $ANTLR start "entryRuleFeatureTyping"
    // InternalKerML.g:5697:1: entryRuleFeatureTyping returns [EObject current=null] : iv_ruleFeatureTyping= ruleFeatureTyping EOF ;
    public final EObject entryRuleFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureTyping = null;


        try {
            // InternalKerML.g:5697:54: (iv_ruleFeatureTyping= ruleFeatureTyping EOF )
            // InternalKerML.g:5698:2: iv_ruleFeatureTyping= ruleFeatureTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureTyping=ruleFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureTyping"


    // $ANTLR start "ruleFeatureTyping"
    // InternalKerML.g:5704:1: ruleFeatureTyping returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleFeatureTyping() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject this_FeatureType_7 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:5710:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:5711:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:5711:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:5712:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:5712:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==48) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalKerML.g:5713:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,48,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureTypingAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:5717:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( ((LA133_0>=RULE_ID && LA133_0<=RULE_UNRESTRICTED_NAME)||LA133_0==14) ) {
                        alt133=1;
                    }
                    switch (alt133) {
                        case 1 :
                            // InternalKerML.g:5718:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureTypingRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureTypingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_84);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,75,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFeatureTypingAccess().getTypingKeyword_1());
              		
            }
            // InternalKerML.g:5735:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:5736:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:5736:4: ( ruleQualifiedName )
            // InternalKerML.g:5737:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFeatureTypingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_85);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:5751:3: (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==68) ) {
                alt135=1;
            }
            else if ( (LA135_0==69) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalKerML.g:5752:4: otherlv_4= ':'
                    {
                    otherlv_4=(Token)match(input,68,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFeatureTypingAccess().getColonKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5757:4: (otherlv_5= 'typed' otherlv_6= 'by' )
                    {
                    // InternalKerML.g:5757:4: (otherlv_5= 'typed' otherlv_6= 'by' )
                    // InternalKerML.g:5758:5: otherlv_5= 'typed' otherlv_6= 'by'
                    {
                    otherlv_5=(Token)match(input,69,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getFeatureTypingAccess().getTypedKeyword_3_1_0());
                      				
                    }
                    otherlv_6=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFeatureTypingAccess().getByKeyword_3_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureTypingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureTypingAccess().getFeatureTypeParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_9);
            this_FeatureType_7=ruleFeatureType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureType_7;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureTypingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureTypingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureTyping"


    // $ANTLR start "entryRuleOwnedFeatureTyping"
    // InternalKerML.g:5794:1: entryRuleOwnedFeatureTyping returns [EObject current=null] : iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF ;
    public final EObject entryRuleOwnedFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureTyping = null;


        try {
            // InternalKerML.g:5794:59: (iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF )
            // InternalKerML.g:5795:2: iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureTyping=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureTyping"


    // $ANTLR start "ruleOwnedFeatureTyping"
    // InternalKerML.g:5801:1: ruleOwnedFeatureTyping returns [EObject current=null] : this_FeatureType_0= ruleFeatureType[$current] ;
    public final EObject ruleOwnedFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureType_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5807:2: (this_FeatureType_0= ruleFeatureType[$current] )
            // InternalKerML.g:5808:2: this_FeatureType_0= ruleFeatureType[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedFeatureTypingRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedFeatureTypingAccess().getFeatureTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_FeatureType_0=ruleFeatureType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_FeatureType_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureTyping"


    // $ANTLR start "ruleFeatureType"
    // InternalKerML.g:5823:1: ruleFeatureType[EObject in_current] returns [EObject current=in_current] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleFeatureType(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5829:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:5830:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:5830:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt136=2;
            alt136 = dfa136.predict(input);
            switch (alt136) {
                case 1 :
                    // InternalKerML.g:5831:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5831:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5832:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5832:4: ( ruleQualifiedName )
                    // InternalKerML.g:5833:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureTypeRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureTypeAccess().getTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5848:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5848:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5849:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5849:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5850:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureTypeAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureType"


    // $ANTLR start "entryRuleSubsetting"
    // InternalKerML.g:5871:1: entryRuleSubsetting returns [EObject current=null] : iv_ruleSubsetting= ruleSubsetting EOF ;
    public final EObject entryRuleSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubsetting = null;


        try {
            // InternalKerML.g:5871:51: (iv_ruleSubsetting= ruleSubsetting EOF )
            // InternalKerML.g:5872:2: iv_ruleSubsetting= ruleSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubsetting=ruleSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubsetting"


    // $ANTLR start "ruleSubsetting"
    // InternalKerML.g:5878:1: ruleSubsetting returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSubsetting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:5884:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:5885:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:5885:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:5886:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:5886:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==48) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalKerML.g:5887:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,48,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubsettingAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:5891:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( ((LA137_0>=RULE_ID && LA137_0<=RULE_UNRESTRICTED_NAME)||LA137_0==14) ) {
                        alt137=1;
                    }
                    switch (alt137) {
                        case 1 :
                            // InternalKerML.g:5892:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSubsettingRule());
                              					}
                              					newCompositeNode(grammarAccess.getSubsettingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_87);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,76,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubsettingAccess().getSubsetKeyword_1());
              		
            }
            // InternalKerML.g:5909:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt139=2;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // InternalKerML.g:5910:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5910:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5911:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5911:5: ( ruleQualifiedName )
                    // InternalKerML.g:5912:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5927:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5927:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5928:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5928:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5929:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSubsettingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:5947:3: (otherlv_5= ':>' | otherlv_6= 'subsets' )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==42) ) {
                alt140=1;
            }
            else if ( (LA140_0==70) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // InternalKerML.g:5948:4: otherlv_5= ':>'
                    {
                    otherlv_5=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSubsettingAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5953:4: otherlv_6= 'subsets'
                    {
                    otherlv_6=(Token)match(input,70,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSubsettingAccess().getSubsetsKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5958:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    // InternalKerML.g:5959:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5959:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5960:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5960:5: ( ruleQualifiedName )
                    // InternalKerML.g:5961:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5976:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5976:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5977:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5977:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5978:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSubsettingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubsettingRule());
              			}
              			newCompositeNode(grammarAccess.getSubsettingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsetting"


    // $ANTLR start "entryRuleOwnedSubsetting"
    // InternalKerML.g:6011:1: entryRuleOwnedSubsetting returns [EObject current=null] : iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF ;
    public final EObject entryRuleOwnedSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedSubsetting = null;


        try {
            // InternalKerML.g:6011:56: (iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF )
            // InternalKerML.g:6012:2: iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedSubsetting=ruleOwnedSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedSubsetting"


    // $ANTLR start "ruleOwnedSubsetting"
    // InternalKerML.g:6018:1: ruleOwnedSubsetting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedSubsetting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6024:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6025:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6025:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt142=2;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    // InternalKerML.g:6026:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6026:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6027:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6027:4: ( ruleQualifiedName )
                    // InternalKerML.g:6028:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedSubsettingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6043:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6043:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6044:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6044:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6045:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedSubsetting"


    // $ANTLR start "entryRuleRedefinition"
    // InternalKerML.g:6066:1: entryRuleRedefinition returns [EObject current=null] : iv_ruleRedefinition= ruleRedefinition EOF ;
    public final EObject entryRuleRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRedefinition = null;


        try {
            // InternalKerML.g:6066:53: (iv_ruleRedefinition= ruleRedefinition EOF )
            // InternalKerML.g:6067:2: iv_ruleRedefinition= ruleRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRedefinition=ruleRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRedefinition"


    // $ANTLR start "ruleRedefinition"
    // InternalKerML.g:6073:1: ruleRedefinition returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleRedefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:6079:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6080:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6080:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:6081:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6081:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==48) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalKerML.g:6082:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,48,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRedefinitionAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6086:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( ((LA143_0>=RULE_ID && LA143_0<=RULE_UNRESTRICTED_NAME)||LA143_0==14) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalKerML.g:6087:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getRedefinitionRule());
                              					}
                              					newCompositeNode(grammarAccess.getRedefinitionAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_90);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRedefinitionAccess().getRedefinitionKeyword_1());
              		
            }
            // InternalKerML.g:6104:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    // InternalKerML.g:6105:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6105:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6106:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6106:5: ( ruleQualifiedName )
                    // InternalKerML.g:6107:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRedefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6122:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6122:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6123:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6123:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6124:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRedefinitionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:6142:3: (otherlv_5= ':>>' | otherlv_6= 'redefines' )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==71) ) {
                alt146=1;
            }
            else if ( (LA146_0==72) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalKerML.g:6143:4: otherlv_5= ':>>'
                    {
                    otherlv_5=(Token)match(input,71,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRedefinitionAccess().getColonGreaterThanSignGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6148:4: otherlv_6= 'redefines'
                    {
                    otherlv_6=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getRedefinitionAccess().getRedefinesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6153:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt147=2;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    // InternalKerML.g:6154:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6154:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6155:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6155:5: ( ruleQualifiedName )
                    // InternalKerML.g:6156:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRedefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6171:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6171:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6172:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6172:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6173:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRedefinitionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRedefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getRedefinitionAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinition"


    // $ANTLR start "entryRuleOwnedRedefinition"
    // InternalKerML.g:6206:1: entryRuleOwnedRedefinition returns [EObject current=null] : iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF ;
    public final EObject entryRuleOwnedRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRedefinition = null;


        try {
            // InternalKerML.g:6206:58: (iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF )
            // InternalKerML.g:6207:2: iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRedefinition=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRedefinition"


    // $ANTLR start "ruleOwnedRedefinition"
    // InternalKerML.g:6213:1: ruleOwnedRedefinition returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedRedefinition() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6219:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6220:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6220:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt148=2;
            alt148 = dfa148.predict(input);
            switch (alt148) {
                case 1 :
                    // InternalKerML.g:6221:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6221:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6222:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6222:4: ( ruleQualifiedName )
                    // InternalKerML.g:6223:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedRedefinitionRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6238:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6238:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6239:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6239:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6240:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedRedefinitionRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRedefinition"


    // $ANTLR start "ruleFeatureConjugationPart"
    // InternalKerML.g:6262:1: ruleFeatureConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) ) ;
    public final EObject ruleFeatureConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6268:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) ) )
            // InternalKerML.g:6269:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) )
            {
            // InternalKerML.g:6269:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) )
            // InternalKerML.g:6270:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) )
            {
            // InternalKerML.g:6270:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==44) ) {
                alt149=1;
            }
            else if ( (LA149_0==45) ) {
                alt149=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }
            switch (alt149) {
                case 1 :
                    // InternalKerML.g:6271:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6276:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6281:3: ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) )
            // InternalKerML.g:6282:4: (lv_ownedRelationship_2_0= ruleFeatureConjugation )
            {
            // InternalKerML.g:6282:4: (lv_ownedRelationship_2_0= ruleFeatureConjugation )
            // InternalKerML.g:6283:5: lv_ownedRelationship_2_0= ruleFeatureConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationshipFeatureConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleFeatureConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureConjugationPart"


    // $ANTLR start "entryRuleFeatureConjugation"
    // InternalKerML.g:6304:1: entryRuleFeatureConjugation returns [EObject current=null] : iv_ruleFeatureConjugation= ruleFeatureConjugation EOF ;
    public final EObject entryRuleFeatureConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureConjugation = null;


        try {
            // InternalKerML.g:6304:59: (iv_ruleFeatureConjugation= ruleFeatureConjugation EOF )
            // InternalKerML.g:6305:2: iv_ruleFeatureConjugation= ruleFeatureConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureConjugation=ruleFeatureConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureConjugation"


    // $ANTLR start "ruleFeatureConjugation"
    // InternalKerML.g:6311:1: ruleFeatureConjugation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleFeatureConjugation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:6317:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:6318:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:6318:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6319:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:6319:3: ( ruleQualifiedName )
            // InternalKerML.g:6320:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureConjugationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureConjugation"


    // $ANTLR start "ruleValuePart"
    // InternalKerML.g:6338:1: ruleValuePart[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) ) ;
    public final EObject ruleValuePart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6344:2: ( ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) ) )
            // InternalKerML.g:6345:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) )
            {
            // InternalKerML.g:6345:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( ((LA150_0>=78 && LA150_0<=79)) ) {
                alt150=1;
            }
            else if ( (LA150_0==80) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // InternalKerML.g:6346:3: ( (lv_ownedRelationship_0_0= ruleFeatureValue ) )
                    {
                    // InternalKerML.g:6346:3: ( (lv_ownedRelationship_0_0= ruleFeatureValue ) )
                    // InternalKerML.g:6347:4: (lv_ownedRelationship_0_0= ruleFeatureValue )
                    {
                    // InternalKerML.g:6347:4: (lv_ownedRelationship_0_0= ruleFeatureValue )
                    // InternalKerML.g:6348:5: lv_ownedRelationship_0_0= ruleFeatureValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleFeatureValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValuePartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.FeatureValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6366:3: ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) )
                    {
                    // InternalKerML.g:6366:3: ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) )
                    // InternalKerML.g:6367:4: ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) )
                    {
                    // InternalKerML.g:6367:4: ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) )
                    // InternalKerML.g:6368:5: (lv_ownedRelationship_1_0= ruleFeatureValueExpression )
                    {
                    // InternalKerML.g:6368:5: (lv_ownedRelationship_1_0= ruleFeatureValueExpression )
                    // InternalKerML.g:6369:6: lv_ownedRelationship_1_0= ruleFeatureValueExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_1);
                    lv_ownedRelationship_1_0=ruleFeatureValueExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuePartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.kerml.xtext.KerML.FeatureValueExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:6386:4: ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) )
                    // InternalKerML.g:6387:5: (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember )
                    {
                    // InternalKerML.g:6387:5: (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember )
                    // InternalKerML.g:6388:6: lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipEmptyFeatureWriteMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleEmptyFeatureWriteMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuePartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.xtext.KerML.EmptyFeatureWriteMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuePart"


    // $ANTLR start "entryRuleFeatureValue"
    // InternalKerML.g:6410:1: entryRuleFeatureValue returns [EObject current=null] : iv_ruleFeatureValue= ruleFeatureValue EOF ;
    public final EObject entryRuleFeatureValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureValue = null;


        try {
            // InternalKerML.g:6410:53: (iv_ruleFeatureValue= ruleFeatureValue EOF )
            // InternalKerML.g:6411:2: iv_ruleFeatureValue= ruleFeatureValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureValue=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValue"


    // $ANTLR start "ruleFeatureValue"
    // InternalKerML.g:6417:1: ruleFeatureValue returns [EObject current=null] : ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleFeatureValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_isDefault_1_0=null;
        Token otherlv_2=null;
        Token lv_isInitial_3_0=null;
        EObject lv_ownedRelatedElement_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6423:2: ( ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:6424:2: ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:6424:2: ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:6425:3: (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:6425:3: (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==78) ) {
                alt152=1;
            }
            else if ( (LA152_0==79) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalKerML.g:6426:4: otherlv_0= '='
                    {
                    otherlv_0=(Token)match(input,78,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureValueAccess().getEqualsSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6431:4: ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? )
                    {
                    // InternalKerML.g:6431:4: ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? )
                    // InternalKerML.g:6432:5: ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )?
                    {
                    // InternalKerML.g:6432:5: ( (lv_isDefault_1_0= 'default' ) )
                    // InternalKerML.g:6433:6: (lv_isDefault_1_0= 'default' )
                    {
                    // InternalKerML.g:6433:6: (lv_isDefault_1_0= 'default' )
                    // InternalKerML.g:6434:7: lv_isDefault_1_0= 'default'
                    {
                    lv_isDefault_1_0=(Token)match(input,79,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isDefault_1_0, grammarAccess.getFeatureValueAccess().getIsDefaultDefaultKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getFeatureValueRule());
                      							}
                      							setWithLastConsumed(current, "isDefault", lv_isDefault_1_0 != null, "default");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:6446:5: (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )?
                    int alt151=3;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==78) ) {
                        alt151=1;
                    }
                    else if ( (LA151_0==80) ) {
                        alt151=2;
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalKerML.g:6447:6: otherlv_2= '='
                            {
                            otherlv_2=(Token)match(input,78,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getFeatureValueAccess().getEqualsSignKeyword_0_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:6452:6: ( (lv_isInitial_3_0= ':=' ) )
                            {
                            // InternalKerML.g:6452:6: ( (lv_isInitial_3_0= ':=' ) )
                            // InternalKerML.g:6453:7: (lv_isInitial_3_0= ':=' )
                            {
                            // InternalKerML.g:6453:7: (lv_isInitial_3_0= ':=' )
                            // InternalKerML.g:6454:8: lv_isInitial_3_0= ':='
                            {
                            lv_isInitial_3_0=(Token)match(input,80,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isInitial_3_0, grammarAccess.getFeatureValueAccess().getIsInitialColonEqualsSignKeyword_0_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureValueRule());
                              								}
                              								setWithLastConsumed(current, "isInitial", lv_isInitial_3_0 != null, ":=");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:6469:3: ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) )
            // InternalKerML.g:6470:4: (lv_ownedRelatedElement_4_0= ruleOwnedExpression )
            {
            // InternalKerML.g:6470:4: (lv_ownedRelatedElement_4_0= ruleOwnedExpression )
            // InternalKerML.g:6471:5: lv_ownedRelatedElement_4_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_4_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureValueRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_4_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValue"


    // $ANTLR start "entryRuleFeatureValueExpression"
    // InternalKerML.g:6492:1: entryRuleFeatureValueExpression returns [EObject current=null] : iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF ;
    public final EObject entryRuleFeatureValueExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureValueExpression = null;


        try {
            // InternalKerML.g:6492:63: (iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF )
            // InternalKerML.g:6493:2: iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureValueExpression=ruleFeatureValueExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValueExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValueExpression"


    // $ANTLR start "ruleFeatureValueExpression"
    // InternalKerML.g:6499:1: ruleFeatureValueExpression returns [EObject current=null] : ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleFeatureValueExpression() throws RecognitionException {
        EObject current = null;

        Token lv_isInitial_0_0=null;
        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6505:2: ( ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:6506:2: ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:6506:2: ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:6507:3: ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:6507:3: ( (lv_isInitial_0_0= ':=' ) )
            // InternalKerML.g:6508:4: (lv_isInitial_0_0= ':=' )
            {
            // InternalKerML.g:6508:4: (lv_isInitial_0_0= ':=' )
            // InternalKerML.g:6509:5: lv_isInitial_0_0= ':='
            {
            lv_isInitial_0_0=(Token)match(input,80,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_isInitial_0_0, grammarAccess.getFeatureValueExpressionAccess().getIsInitialColonEqualsSignKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFeatureValueExpressionRule());
              					}
              					setWithLastConsumed(current, "isInitial", lv_isInitial_0_0 != null, ":=");
              				
            }

            }


            }

            // InternalKerML.g:6521:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:6522:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:6522:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:6523:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureValueExpressionAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureValueExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValueExpression"


    // $ANTLR start "entryRuleEmptyFeatureWriteMember"
    // InternalKerML.g:6544:1: entryRuleEmptyFeatureWriteMember returns [EObject current=null] : iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF ;
    public final EObject entryRuleEmptyFeatureWriteMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureWriteMember = null;


        try {
            // InternalKerML.g:6544:64: (iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF )
            // InternalKerML.g:6545:2: iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureWriteMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureWriteMember=ruleEmptyFeatureWriteMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureWriteMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureWriteMember"


    // $ANTLR start "ruleEmptyFeatureWriteMember"
    // InternalKerML.g:6551:1: ruleEmptyFeatureWriteMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) ) ;
    public final EObject ruleEmptyFeatureWriteMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6557:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) ) )
            // InternalKerML.g:6558:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) )
            {
            // InternalKerML.g:6558:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) )
            // InternalKerML.g:6559:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite )
            {
            // InternalKerML.g:6559:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite )
            // InternalKerML.g:6560:4: lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyFeatureWriteMemberAccess().getOwnedRelatedElementEmptyFeatureWriteParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeatureWrite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyFeatureWrite");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureWriteMember"


    // $ANTLR start "entryRuleEmptyFeatureWrite"
    // InternalKerML.g:6580:1: entryRuleEmptyFeatureWrite returns [EObject current=null] : iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF ;
    public final EObject entryRuleEmptyFeatureWrite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureWrite = null;


        try {
            // InternalKerML.g:6580:58: (iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF )
            // InternalKerML.g:6581:2: iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureWriteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureWrite=ruleEmptyFeatureWrite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureWrite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureWrite"


    // $ANTLR start "ruleEmptyFeatureWrite"
    // InternalKerML.g:6587:1: ruleEmptyFeatureWrite returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) ) ;
    public final EObject ruleEmptyFeatureWrite() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6593:2: ( ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) ) )
            // InternalKerML.g:6594:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) )
            {
            // InternalKerML.g:6594:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) )
            // InternalKerML.g:6595:3: ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) )
            {
            // InternalKerML.g:6595:3: ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) )
            // InternalKerML.g:6596:4: (lv_ownedRelationship_0_0= ruleEmptyTargetMember )
            {
            // InternalKerML.g:6596:4: (lv_ownedRelationship_0_0= ruleEmptyTargetMember )
            // InternalKerML.g:6597:5: lv_ownedRelationship_0_0= ruleEmptyTargetMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmptyFeatureWriteAccess().getOwnedRelationshipEmptyTargetMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_1);
            lv_ownedRelationship_0_0=ruleEmptyTargetMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.EmptyTargetMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:6614:3: ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) )
            // InternalKerML.g:6615:4: (lv_ownedRelationship_1_0= ruleEmptyParameterMember )
            {
            // InternalKerML.g:6615:4: (lv_ownedRelationship_1_0= ruleEmptyParameterMember )
            // InternalKerML.g:6616:5: lv_ownedRelationship_1_0= ruleEmptyParameterMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmptyFeatureWriteAccess().getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleEmptyParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.EmptyParameterMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureWrite"


    // $ANTLR start "entryRuleEmptyTargetMember"
    // InternalKerML.g:6637:1: entryRuleEmptyTargetMember returns [EObject current=null] : iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF ;
    public final EObject entryRuleEmptyTargetMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyTargetMember = null;


        try {
            // InternalKerML.g:6637:58: (iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF )
            // InternalKerML.g:6638:2: iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyTargetMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyTargetMember=ruleEmptyTargetMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyTargetMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyTargetMember"


    // $ANTLR start "ruleEmptyTargetMember"
    // InternalKerML.g:6644:1: ruleEmptyTargetMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) ) ;
    public final EObject ruleEmptyTargetMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6650:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) ) )
            // InternalKerML.g:6651:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) )
            {
            // InternalKerML.g:6651:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) )
            // InternalKerML.g:6652:3: (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter )
            {
            // InternalKerML.g:6652:3: (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter )
            // InternalKerML.g:6653:4: lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyTargetMemberAccess().getOwnedRelatedElementEmptyTargetParameterParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyTargetParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyTargetMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyTargetParameter");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyTargetMember"


    // $ANTLR start "entryRuleEmptyTargetParameter"
    // InternalKerML.g:6673:1: entryRuleEmptyTargetParameter returns [EObject current=null] : iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF ;
    public final EObject entryRuleEmptyTargetParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyTargetParameter = null;


        try {
            // InternalKerML.g:6673:61: (iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF )
            // InternalKerML.g:6674:2: iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyTargetParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyTargetParameter=ruleEmptyTargetParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyTargetParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyTargetParameter"


    // $ANTLR start "ruleEmptyTargetParameter"
    // InternalKerML.g:6680:1: ruleEmptyTargetParameter returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) ) ;
    public final EObject ruleEmptyTargetParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6686:2: ( ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) ) )
            // InternalKerML.g:6687:2: ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) )
            {
            // InternalKerML.g:6687:2: ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) )
            // InternalKerML.g:6688:3: (lv_ownedRelationship_0_0= ruleTargetFeatureMember )
            {
            // InternalKerML.g:6688:3: (lv_ownedRelationship_0_0= ruleTargetFeatureMember )
            // InternalKerML.g:6689:4: lv_ownedRelationship_0_0= ruleTargetFeatureMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyTargetParameterAccess().getOwnedRelationshipTargetFeatureMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleTargetFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyTargetParameterRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.TargetFeatureMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyTargetParameter"


    // $ANTLR start "entryRuleTargetFeatureMember"
    // InternalKerML.g:6709:1: entryRuleTargetFeatureMember returns [EObject current=null] : iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF ;
    public final EObject entryRuleTargetFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetFeatureMember = null;


        try {
            // InternalKerML.g:6709:60: (iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF )
            // InternalKerML.g:6710:2: iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTargetFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTargetFeatureMember=ruleTargetFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTargetFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetFeatureMember"


    // $ANTLR start "ruleTargetFeatureMember"
    // InternalKerML.g:6716:1: ruleTargetFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) ) ;
    public final EObject ruleTargetFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6722:2: ( ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) ) )
            // InternalKerML.g:6723:2: ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) )
            {
            // InternalKerML.g:6723:2: ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) )
            // InternalKerML.g:6724:3: (lv_ownedRelatedElement_0_0= ruleTargetFeature )
            {
            // InternalKerML.g:6724:3: (lv_ownedRelatedElement_0_0= ruleTargetFeature )
            // InternalKerML.g:6725:4: lv_ownedRelatedElement_0_0= ruleTargetFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTargetFeatureMemberAccess().getOwnedRelatedElementTargetFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleTargetFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTargetFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.TargetFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetFeatureMember"


    // $ANTLR start "entryRuleTargetFeature"
    // InternalKerML.g:6745:1: entryRuleTargetFeature returns [EObject current=null] : iv_ruleTargetFeature= ruleTargetFeature EOF ;
    public final EObject entryRuleTargetFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetFeature = null;


        try {
            // InternalKerML.g:6745:54: (iv_ruleTargetFeature= ruleTargetFeature EOF )
            // InternalKerML.g:6746:2: iv_ruleTargetFeature= ruleTargetFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTargetFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTargetFeature=ruleTargetFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTargetFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetFeature"


    // $ANTLR start "ruleTargetFeature"
    // InternalKerML.g:6752:1: ruleTargetFeature returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) ) ;
    public final EObject ruleTargetFeature() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6758:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) ) )
            // InternalKerML.g:6759:2: ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) )
            {
            // InternalKerML.g:6759:2: ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) )
            // InternalKerML.g:6760:3: (lv_ownedRelationship_0_0= ruleEmptyFeatureMember )
            {
            // InternalKerML.g:6760:3: (lv_ownedRelationship_0_0= ruleEmptyFeatureMember )
            // InternalKerML.g:6761:4: lv_ownedRelationship_0_0= ruleEmptyFeatureMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTargetFeatureAccess().getOwnedRelationshipEmptyFeatureMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleEmptyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTargetFeatureRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyFeatureMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetFeature"


    // $ANTLR start "entryRuleEmptyFeatureMember"
    // InternalKerML.g:6781:1: entryRuleEmptyFeatureMember returns [EObject current=null] : iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF ;
    public final EObject entryRuleEmptyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureMember = null;


        try {
            // InternalKerML.g:6781:59: (iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF )
            // InternalKerML.g:6782:2: iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureMember=ruleEmptyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureMember"


    // $ANTLR start "ruleEmptyFeatureMember"
    // InternalKerML.g:6788:1: ruleEmptyFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleEmptyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6794:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:6795:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:6795:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:6796:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:6796:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:6797:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyFeatureMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureMember"


    // $ANTLR start "entryRuleEmptyParameterMember"
    // InternalKerML.g:6817:1: entryRuleEmptyParameterMember returns [EObject current=null] : iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF ;
    public final EObject entryRuleEmptyParameterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyParameterMember = null;


        try {
            // InternalKerML.g:6817:61: (iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF )
            // InternalKerML.g:6818:2: iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyParameterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyParameterMember=ruleEmptyParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyParameterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyParameterMember"


    // $ANTLR start "ruleEmptyParameterMember"
    // InternalKerML.g:6824:1: ruleEmptyParameterMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleEmptyParameterMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6830:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:6831:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:6831:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:6832:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:6832:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:6833:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyParameterMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyParameterMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyParameterMember"


    // $ANTLR start "entryRuleMultiplicity"
    // InternalKerML.g:6853:1: entryRuleMultiplicity returns [EObject current=null] : iv_ruleMultiplicity= ruleMultiplicity EOF ;
    public final EObject entryRuleMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicity = null;


        try {
            // InternalKerML.g:6853:53: (iv_ruleMultiplicity= ruleMultiplicity EOF )
            // InternalKerML.g:6854:2: iv_ruleMultiplicity= ruleMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicity=ruleMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicity"


    // $ANTLR start "ruleMultiplicity"
    // InternalKerML.g:6860:1: ruleMultiplicity returns [EObject current=null] : (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange ) ;
    public final EObject ruleMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicitySubset_0 = null;

        EObject this_MultiplicityRange_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:6866:2: ( (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange ) )
            // InternalKerML.g:6867:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )
            {
            // InternalKerML.g:6867:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )
            int alt153=2;
            alt153 = dfa153.predict(input);
            switch (alt153) {
                case 1 :
                    // InternalKerML.g:6868:3: this_MultiplicitySubset_0= ruleMultiplicitySubset
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMultiplicityAccess().getMultiplicitySubsetParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MultiplicitySubset_0=ruleMultiplicitySubset();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MultiplicitySubset_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6877:3: this_MultiplicityRange_1= ruleMultiplicityRange
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMultiplicityAccess().getMultiplicityRangeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MultiplicityRange_1=ruleMultiplicityRange();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MultiplicityRange_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicity"


    // $ANTLR start "entryRuleMultiplicitySubset"
    // InternalKerML.g:6889:1: entryRuleMultiplicitySubset returns [EObject current=null] : iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF ;
    public final EObject entryRuleMultiplicitySubset() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicitySubset = null;


        try {
            // InternalKerML.g:6889:59: (iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF )
            // InternalKerML.g:6890:2: iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicitySubsetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicitySubset=ruleMultiplicitySubset();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicitySubset; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicitySubset"


    // $ANTLR start "ruleMultiplicitySubset"
    // InternalKerML.g:6896:1: ruleMultiplicitySubset returns [EObject current=null] : (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMultiplicitySubset() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_Subsets_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:6902:2: ( (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:6903:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:6903:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:6904:3: otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            otherlv_0=(Token)match(input,81,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicitySubsetAccess().getMultiplicityKeyword_0());
              		
            }
            // InternalKerML.g:6908:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( ((LA154_0>=RULE_ID && LA154_0<=RULE_UNRESTRICTED_NAME)||LA154_0==14) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalKerML.g:6909:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
                      				}
                      				newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_88);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getSubsetsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_Subsets_2=ruleSubsets(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Subsets_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicitySubset"


    // $ANTLR start "entryRuleMultiplicityRange"
    // InternalKerML.g:6947:1: entryRuleMultiplicityRange returns [EObject current=null] : iv_ruleMultiplicityRange= ruleMultiplicityRange EOF ;
    public final EObject entryRuleMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityRange = null;


        try {
            // InternalKerML.g:6947:58: (iv_ruleMultiplicityRange= ruleMultiplicityRange EOF )
            // InternalKerML.g:6948:2: iv_ruleMultiplicityRange= ruleMultiplicityRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicityRange=ruleMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityRange; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityRange"


    // $ANTLR start "ruleMultiplicityRange"
    // InternalKerML.g:6954:1: ruleMultiplicityRange returns [EObject current=null] : (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMultiplicityRange() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_MultiplicityBounds_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:6960:2: ( (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:6961:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:6961:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:6962:3: otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            otherlv_0=(Token)match(input,81,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityRangeAccess().getMultiplicityKeyword_0());
              		
            }
            // InternalKerML.g:6966:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( ((LA155_0>=RULE_ID && LA155_0<=RULE_UNRESTRICTED_NAME)||LA155_0==14) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalKerML.g:6967:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMultiplicityRangeRule());
                      				}
                      				newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_35);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicityRangeRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getMultiplicityBoundsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_MultiplicityBounds_2=ruleMultiplicityBounds(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicityBounds_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicityRangeRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityRange"


    // $ANTLR start "entryRuleOwnedMultiplicity"
    // InternalKerML.g:7005:1: entryRuleOwnedMultiplicity returns [EObject current=null] : iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF ;
    public final EObject entryRuleOwnedMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedMultiplicity = null;


        try {
            // InternalKerML.g:7005:58: (iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF )
            // InternalKerML.g:7006:2: iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedMultiplicity=ruleOwnedMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedMultiplicity"


    // $ANTLR start "ruleOwnedMultiplicity"
    // InternalKerML.g:7012:1: ruleOwnedMultiplicity returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) ) ;
    public final EObject ruleOwnedMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7018:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) ) )
            // InternalKerML.g:7019:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) )
            {
            // InternalKerML.g:7019:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) )
            // InternalKerML.g:7020:3: (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange )
            {
            // InternalKerML.g:7020:3: (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange )
            // InternalKerML.g:7021:4: lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedMultiplicityAccess().getOwnedRelatedElementOwnedMultiplicityRangeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedMultiplicityRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.OwnedMultiplicityRange");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedMultiplicity"


    // $ANTLR start "entryRuleOwnedMultiplicityRange"
    // InternalKerML.g:7041:1: entryRuleOwnedMultiplicityRange returns [EObject current=null] : iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF ;
    public final EObject entryRuleOwnedMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedMultiplicityRange = null;


        try {
            // InternalKerML.g:7041:63: (iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF )
            // InternalKerML.g:7042:2: iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedMultiplicityRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedMultiplicityRange=ruleOwnedMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedMultiplicityRange; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedMultiplicityRange"


    // $ANTLR start "ruleOwnedMultiplicityRange"
    // InternalKerML.g:7048:1: ruleOwnedMultiplicityRange returns [EObject current=null] : this_MultiplicityBounds_0= ruleMultiplicityBounds[$current] ;
    public final EObject ruleOwnedMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicityBounds_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7054:2: (this_MultiplicityBounds_0= ruleMultiplicityBounds[$current] )
            // InternalKerML.g:7055:2: this_MultiplicityBounds_0= ruleMultiplicityBounds[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedMultiplicityRangeRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedMultiplicityRangeAccess().getMultiplicityBoundsParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_MultiplicityBounds_0=ruleMultiplicityBounds(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_MultiplicityBounds_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedMultiplicityRange"


    // $ANTLR start "ruleMultiplicityBounds"
    // InternalKerML.g:7070:1: ruleMultiplicityBounds[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' ) ;
    public final EObject ruleMultiplicityBounds(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7076:2: ( (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' ) )
            // InternalKerML.g:7077:2: (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' )
            {
            // InternalKerML.g:7077:2: (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' )
            // InternalKerML.g:7078:3: otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,82,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityBoundsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalKerML.g:7082:3: ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) )
            // InternalKerML.g:7083:4: (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember )
            {
            // InternalKerML.g:7083:4: (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember )
            // InternalKerML.g:7084:5: lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicityBoundsAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_96);
            lv_ownedRelationship_1_0=ruleMultiplicityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicityBoundsRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.MultiplicityExpressionMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:7101:3: (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==83) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalKerML.g:7102:4: otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) )
                    {
                    otherlv_2=(Token)match(input,83,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMultiplicityBoundsAccess().getFullStopFullStopKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:7106:4: ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) )
                    // InternalKerML.g:7107:5: (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember )
                    {
                    // InternalKerML.g:7107:5: (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember )
                    // InternalKerML.g:7108:6: lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicityBoundsAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_ownedRelationship_3_0=ruleMultiplicityExpressionMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicityBoundsRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.xtext.KerML.MultiplicityExpressionMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMultiplicityBoundsAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBounds"


    // $ANTLR start "entryRuleMultiplicityExpressionMember"
    // InternalKerML.g:7134:1: entryRuleMultiplicityExpressionMember returns [EObject current=null] : iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF ;
    public final EObject entryRuleMultiplicityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityExpressionMember = null;


        try {
            // InternalKerML.g:7134:69: (iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF )
            // InternalKerML.g:7135:2: iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicityExpressionMember=ruleMultiplicityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityExpressionMember"


    // $ANTLR start "ruleMultiplicityExpressionMember"
    // InternalKerML.g:7141:1: ruleMultiplicityExpressionMember returns [EObject current=null] : ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) ) ;
    public final EObject ruleMultiplicityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_1 = null;

        EObject lv_ownedRelatedElement_0_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:7147:2: ( ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) ) )
            // InternalKerML.g:7148:2: ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) )
            {
            // InternalKerML.g:7148:2: ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) )
            // InternalKerML.g:7149:3: ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) )
            {
            // InternalKerML.g:7149:3: ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) )
            // InternalKerML.g:7150:4: (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression )
            {
            // InternalKerML.g:7150:4: (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( ((LA157_0>=RULE_STRING_VALUE && LA157_0<=RULE_EXP_VALUE)||LA157_0==34||(LA157_0>=103 && LA157_0<=104)||LA157_0==107) ) {
                alt157=1;
            }
            else if ( ((LA157_0>=RULE_ID && LA157_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalKerML.g:7151:5: lv_ownedRelatedElement_0_1= ruleLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementLiteralExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_1=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityExpressionMemberRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_1,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.LiteralExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:7167:5: lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_2=ruleFeatureReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityExpressionMemberRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_2,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureReferenceExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityExpressionMember"


    // $ANTLR start "entryRuleDataType"
    // InternalKerML.g:7188:1: entryRuleDataType returns [EObject current=null] : iv_ruleDataType= ruleDataType EOF ;
    public final EObject entryRuleDataType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataType = null;


        try {
            // InternalKerML.g:7188:49: (iv_ruleDataType= ruleDataType EOF )
            // InternalKerML.g:7189:2: iv_ruleDataType= ruleDataType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataType=ruleDataType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataType"


    // $ANTLR start "ruleDataType"
    // InternalKerML.g:7195:1: ruleDataType returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleDataType() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7201:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7202:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7202:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7203:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7203:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==40) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalKerML.g:7204:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7204:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7205:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getDataTypeAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataTypeRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,84,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getDatatypeKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDataTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDataTypeAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDataTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "entryRuleClass"
    // InternalKerML.g:7247:1: entryRuleClass returns [EObject current=null] : iv_ruleClass= ruleClass EOF ;
    public final EObject entryRuleClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClass = null;


        try {
            // InternalKerML.g:7247:46: (iv_ruleClass= ruleClass EOF )
            // InternalKerML.g:7248:2: iv_ruleClass= ruleClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClass=ruleClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClass"


    // $ANTLR start "ruleClass"
    // InternalKerML.g:7254:1: ruleClass returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleClass() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7260:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7261:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7261:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7262:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7262:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==40) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalKerML.g:7263:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7263:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7264:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,85,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassAccess().getClassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassRule());
              			}
              			newCompositeNode(grammarAccess.getClassAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassRule());
              			}
              			newCompositeNode(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClass"


    // $ANTLR start "entryRuleStructure"
    // InternalKerML.g:7306:1: entryRuleStructure returns [EObject current=null] : iv_ruleStructure= ruleStructure EOF ;
    public final EObject entryRuleStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructure = null;


        try {
            // InternalKerML.g:7306:50: (iv_ruleStructure= ruleStructure EOF )
            // InternalKerML.g:7307:2: iv_ruleStructure= ruleStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructure=ruleStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructure"


    // $ANTLR start "ruleStructure"
    // InternalKerML.g:7313:1: ruleStructure returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleStructure() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7319:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7320:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7320:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7321:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7321:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==40) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalKerML.g:7322:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7322:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7323:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getStructureAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructureRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,86,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructureAccess().getStructKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStructureRule());
              			}
              			newCompositeNode(grammarAccess.getStructureAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStructureRule());
              			}
              			newCompositeNode(grammarAccess.getStructureAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructure"


    // $ANTLR start "entryRuleAssociation"
    // InternalKerML.g:7365:1: entryRuleAssociation returns [EObject current=null] : iv_ruleAssociation= ruleAssociation EOF ;
    public final EObject entryRuleAssociation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociation = null;


        try {
            // InternalKerML.g:7365:52: (iv_ruleAssociation= ruleAssociation EOF )
            // InternalKerML.g:7366:2: iv_ruleAssociation= ruleAssociation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociation=ruleAssociation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociation"


    // $ANTLR start "ruleAssociation"
    // InternalKerML.g:7372:1: ruleAssociation returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleAssociation() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7378:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7379:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7379:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7380:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7380:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==40) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalKerML.g:7381:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7381:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7382:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAssociationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,87,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssociationAccess().getAssocKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociation"


    // $ANTLR start "entryRuleAssociationStructure"
    // InternalKerML.g:7424:1: entryRuleAssociationStructure returns [EObject current=null] : iv_ruleAssociationStructure= ruleAssociationStructure EOF ;
    public final EObject entryRuleAssociationStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociationStructure = null;


        try {
            // InternalKerML.g:7424:61: (iv_ruleAssociationStructure= ruleAssociationStructure EOF )
            // InternalKerML.g:7425:2: iv_ruleAssociationStructure= ruleAssociationStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociationStructure=ruleAssociationStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociationStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociationStructure"


    // $ANTLR start "ruleAssociationStructure"
    // InternalKerML.g:7431:1: ruleAssociationStructure returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) ;
    public final EObject ruleAssociationStructure() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_ClassifierDeclaration_3 = null;

        EObject this_TypeBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:7437:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) )
            // InternalKerML.g:7438:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7438:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            // InternalKerML.g:7439:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current]
            {
            // InternalKerML.g:7439:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==40) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalKerML.g:7440:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7440:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7441:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationStructureAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAssociationStructureRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,87,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssociationStructureAccess().getAssocKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,86,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAssociationStructureAccess().getStructKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationStructureRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationStructureAccess().getClassifierDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_3=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationStructureRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationStructureAccess().getTypeBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_4=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationStructure"


    // $ANTLR start "entryRuleConnector"
    // InternalKerML.g:7487:1: entryRuleConnector returns [EObject current=null] : iv_ruleConnector= ruleConnector EOF ;
    public final EObject entryRuleConnector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnector = null;


        try {
            // InternalKerML.g:7487:50: (iv_ruleConnector= ruleConnector EOF )
            // InternalKerML.g:7488:2: iv_ruleConnector= ruleConnector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnector=ruleConnector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnector"


    // $ANTLR start "ruleConnector"
    // InternalKerML.g:7494:1: ruleConnector returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleConnector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ConnectorDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7500:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7501:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7501:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7502:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,88,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConnectorAccess().getConnectorKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ConnectorDeclaration_2=ruleConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConnectorDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnector"


    // $ANTLR start "ruleConnectorDeclaration"
    // InternalKerML.g:7544:1: ruleConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] ) ;
    public final EObject ruleConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_BinaryConnectorDeclaration_0 = null;

        EObject this_NaryConnectorDeclaration_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:7550:2: ( (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] ) )
            // InternalKerML.g:7551:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )
            {
            // InternalKerML.g:7551:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )
            int alt163=2;
            alt163 = dfa163.predict(input);
            switch (alt163) {
                case 1 :
                    // InternalKerML.g:7552:3: this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                      			}
                      			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getBinaryConnectorDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryConnectorDeclaration_0=ruleBinaryConnectorDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BinaryConnectorDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:7564:3: this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                      			}
                      			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getNaryConnectorDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaryConnectorDeclaration_1=ruleNaryConnectorDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaryConnectorDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorDeclaration"


    // $ANTLR start "ruleBinaryConnectorDeclaration"
    // InternalKerML.g:7580:1: ruleBinaryConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) ;
    public final EObject ruleBinaryConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token lv_isSufficient_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7586:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) )
            // InternalKerML.g:7587:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            {
            // InternalKerML.g:7587:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            // InternalKerML.g:7588:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            {
            // InternalKerML.g:7588:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )?
            int alt166=3;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // InternalKerML.g:7589:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' )
                    {
                    // InternalKerML.g:7589:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' )
                    // InternalKerML.g:7590:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from'
                    {
                    // InternalKerML.g:7590:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt164=2;
                    int LA164_0 = input.LA(1);

                    if ( ((LA164_0>=RULE_ID && LA164_0<=RULE_UNRESTRICTED_NAME)||LA164_0==14||LA164_0==33||LA164_0==42||(LA164_0>=44 && LA164_0<=45)||(LA164_0>=66 && LA164_0<=72)||LA164_0==82) ) {
                        alt164=1;
                    }
                    switch (alt164) {
                        case 1 :
                            // InternalKerML.g:7591:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_45);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,22,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:7609:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? )
                    {
                    // InternalKerML.g:7609:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? )
                    // InternalKerML.g:7610:5: ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )?
                    {
                    // InternalKerML.g:7610:5: ( (lv_isSufficient_2_0= 'all' ) )
                    // InternalKerML.g:7611:6: (lv_isSufficient_2_0= 'all' )
                    {
                    // InternalKerML.g:7611:6: (lv_isSufficient_2_0= 'all' )
                    // InternalKerML.g:7612:7: lv_isSufficient_2_0= 'all'
                    {
                    lv_isSufficient_2_0=(Token)match(input,33,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "isSufficient", lv_isSufficient_2_0 != null, "all");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:7624:5: (otherlv_3= 'from' )?
                    int alt165=2;
                    int LA165_0 = input.LA(1);

                    if ( (LA165_0==22) ) {
                        alt165=1;
                    }
                    switch (alt165) {
                        case 1 :
                            // InternalKerML.g:7625:6: otherlv_3= 'from'
                            {
                            otherlv_3=(Token)match(input,22,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_1_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:7632:3: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
            // InternalKerML.g:7633:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:7633:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            // InternalKerML.g:7634:5: lv_ownedRelationship_4_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_ownedRelationship_4_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,21,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getBinaryConnectorDeclarationAccess().getToKeyword_2());
              		
            }
            // InternalKerML.g:7655:3: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            // InternalKerML.g:7656:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:7656:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            // InternalKerML.g:7657:5: lv_ownedRelationship_6_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_6_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryConnectorDeclaration"


    // $ANTLR start "ruleNaryConnectorDeclaration"
    // InternalKerML.g:7679:1: ruleNaryConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? ) ;
    public final EObject ruleNaryConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7685:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? ) )
            // InternalKerML.g:7686:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? )
            {
            // InternalKerML.g:7686:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? )
            // InternalKerML.g:7687:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )?
            {
            // InternalKerML.g:7687:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( ((LA167_0>=RULE_ID && LA167_0<=RULE_UNRESTRICTED_NAME)||LA167_0==14||LA167_0==33||LA167_0==42||(LA167_0>=44 && LA167_0<=45)||(LA167_0>=66 && LA167_0<=72)||LA167_0==82) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalKerML.g:7688:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getNaryConnectorDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_105);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:7700:3: (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==89) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalKerML.g:7701:4: otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')'
                    {
                    otherlv_1=(Token)match(input,89,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNaryConnectorDeclarationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:7705:4: ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) )
                    // InternalKerML.g:7706:5: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                    {
                    // InternalKerML.g:7706:5: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                    // InternalKerML.g:7707:6: lv_ownedRelationship_2_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_106);
                    lv_ownedRelationship_2_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,23,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_1_2());
                      			
                    }
                    // InternalKerML.g:7728:4: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                    // InternalKerML.g:7729:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                    {
                    // InternalKerML.g:7729:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                    // InternalKerML.g:7730:6: lv_ownedRelationship_4_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_107);
                    lv_ownedRelationship_4_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_4_0,
                      							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:7747:4: (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )*
                    loop168:
                    do {
                        int alt168=2;
                        int LA168_0 = input.LA(1);

                        if ( (LA168_0==23) ) {
                            alt168=1;
                        }


                        switch (alt168) {
                    	case 1 :
                    	    // InternalKerML.g:7748:5: otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
                    	    {
                    	    otherlv_5=(Token)match(input,23,FOLLOW_103); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_1_4_0());
                    	      				
                    	    }
                    	    // InternalKerML.g:7752:5: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
                    	    // InternalKerML.g:7753:6: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
                    	    {
                    	    // InternalKerML.g:7753:6: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
                    	    // InternalKerML.g:7754:7: lv_ownedRelationship_6_0= ruleConnectorEndMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_107);
                    	    lv_ownedRelationship_6_0=ruleConnectorEndMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_6_0,
                    	      								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop168;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getNaryConnectorDeclarationAccess().getRightParenthesisKeyword_1_5());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaryConnectorDeclaration"


    // $ANTLR start "entryRuleConnectorEndMember"
    // InternalKerML.g:7781:1: entryRuleConnectorEndMember returns [EObject current=null] : iv_ruleConnectorEndMember= ruleConnectorEndMember EOF ;
    public final EObject entryRuleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEndMember = null;


        try {
            // InternalKerML.g:7781:59: (iv_ruleConnectorEndMember= ruleConnectorEndMember EOF )
            // InternalKerML.g:7782:2: iv_ruleConnectorEndMember= ruleConnectorEndMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEndMember=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEndMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEndMember"


    // $ANTLR start "ruleConnectorEndMember"
    // InternalKerML.g:7788:1: ruleConnectorEndMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) ) ;
    public final EObject ruleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7794:2: ( ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) ) )
            // InternalKerML.g:7795:2: ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) )
            {
            // InternalKerML.g:7795:2: ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) )
            // InternalKerML.g:7796:3: (lv_ownedRelatedElement_0_0= ruleConnectorEnd )
            {
            // InternalKerML.g:7796:3: (lv_ownedRelatedElement_0_0= ruleConnectorEnd )
            // InternalKerML.g:7797:4: lv_ownedRelatedElement_0_0= ruleConnectorEnd
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementConnectorEndParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ConnectorEnd");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEndMember"


    // $ANTLR start "entryRuleConnectorEnd"
    // InternalKerML.g:7817:1: entryRuleConnectorEnd returns [EObject current=null] : iv_ruleConnectorEnd= ruleConnectorEnd EOF ;
    public final EObject entryRuleConnectorEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEnd = null;


        try {
            // InternalKerML.g:7817:53: (iv_ruleConnectorEnd= ruleConnectorEnd EOF )
            // InternalKerML.g:7818:2: iv_ruleConnectorEnd= ruleConnectorEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEnd=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEnd"


    // $ANTLR start "ruleConnectorEnd"
    // InternalKerML.g:7824:1: ruleConnectorEnd returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':>' )? ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) ;
    public final EObject ruleConnectorEnd() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7830:2: ( ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':>' )? ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) )
            // InternalKerML.g:7831:2: ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':>' )? ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
            {
            // InternalKerML.g:7831:2: ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':>' )? ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
            // InternalKerML.g:7832:3: ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':>' )? ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
            {
            // InternalKerML.g:7832:3: ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':>' )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==RULE_ID) ) {
                int LA170_1 = input.LA(2);

                if ( (LA170_1==42) ) {
                    alt170=1;
                }
            }
            else if ( (LA170_0==RULE_UNRESTRICTED_NAME) ) {
                int LA170_2 = input.LA(2);

                if ( (LA170_2==42) ) {
                    alt170=1;
                }
            }
            switch (alt170) {
                case 1 :
                    // InternalKerML.g:7833:4: ( (lv_name_0_0= ruleName ) ) otherlv_1= ':>'
                    {
                    // InternalKerML.g:7833:4: ( (lv_name_0_0= ruleName ) )
                    // InternalKerML.g:7834:5: (lv_name_0_0= ruleName )
                    {
                    // InternalKerML.g:7834:5: (lv_name_0_0= ruleName )
                    // InternalKerML.g:7835:6: lv_name_0_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorEndAccess().getNameNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_108);
                    lv_name_0_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorEndRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getConnectorEndAccess().getColonGreaterThanSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:7857:3: ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            // InternalKerML.g:7858:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            {
            // InternalKerML.g:7858:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            // InternalKerML.g:7859:5: lv_ownedRelationship_2_0= ruleOwnedSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_ownedRelationship_2_0=ruleOwnedSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:7876:3: ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==82) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalKerML.g:7877:4: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:7877:4: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:7878:5: lv_ownedRelationship_3_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_3_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_3_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEnd"


    // $ANTLR start "entryRuleBindingConnector"
    // InternalKerML.g:7899:1: entryRuleBindingConnector returns [EObject current=null] : iv_ruleBindingConnector= ruleBindingConnector EOF ;
    public final EObject entryRuleBindingConnector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingConnector = null;


        try {
            // InternalKerML.g:7899:57: (iv_ruleBindingConnector= ruleBindingConnector EOF )
            // InternalKerML.g:7900:2: iv_ruleBindingConnector= ruleBindingConnector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingConnectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingConnector=ruleBindingConnector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingConnector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBindingConnector"


    // $ANTLR start "ruleBindingConnector"
    // InternalKerML.g:7906:1: ruleBindingConnector returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleBindingConnector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_BindingConnectorDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7912:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7913:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7913:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7914:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,91,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBindingConnectorAccess().getBindingKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_BindingConnectorDeclaration_2=ruleBindingConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BindingConnectorDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBindingConnector"


    // $ANTLR start "ruleBindingConnectorDeclaration"
    // InternalKerML.g:7956:1: ruleBindingConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) ;
    public final EObject ruleBindingConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token lv_isSufficient_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7962:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) )
            // InternalKerML.g:7963:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            {
            // InternalKerML.g:7963:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            // InternalKerML.g:7964:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            {
            // InternalKerML.g:7964:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )?
            int alt174=3;
            alt174 = dfa174.predict(input);
            switch (alt174) {
                case 1 :
                    // InternalKerML.g:7965:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' )
                    {
                    // InternalKerML.g:7965:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' )
                    // InternalKerML.g:7966:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of'
                    {
                    // InternalKerML.g:7966:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( ((LA172_0>=RULE_ID && LA172_0<=RULE_UNRESTRICTED_NAME)||LA172_0==14||LA172_0==33||LA172_0==42||(LA172_0>=44 && LA172_0<=45)||(LA172_0>=66 && LA172_0<=72)||LA172_0==82) ) {
                        alt172=1;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalKerML.g:7967:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_73);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,63,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:7985:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? )
                    {
                    // InternalKerML.g:7985:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? )
                    // InternalKerML.g:7986:5: ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )?
                    {
                    // InternalKerML.g:7986:5: ( (lv_isSufficient_2_0= 'all' ) )
                    // InternalKerML.g:7987:6: (lv_isSufficient_2_0= 'all' )
                    {
                    // InternalKerML.g:7987:6: (lv_isSufficient_2_0= 'all' )
                    // InternalKerML.g:7988:7: lv_isSufficient_2_0= 'all'
                    {
                    lv_isSufficient_2_0=(Token)match(input,33,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "isSufficient", lv_isSufficient_2_0 != null, "all");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:8000:5: (otherlv_3= 'of' )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==63) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // InternalKerML.g:8001:6: otherlv_3= 'of'
                            {
                            otherlv_3=(Token)match(input,63,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:8008:3: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8009:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8009:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            // InternalKerML.g:8010:5: lv_ownedRelationship_4_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_ownedRelationship_4_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,78,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalKerML.g:8031:3: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8032:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8032:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            // InternalKerML.g:8033:5: lv_ownedRelationship_6_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_6_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBindingConnectorDeclaration"


    // $ANTLR start "entryRuleSuccession"
    // InternalKerML.g:8054:1: entryRuleSuccession returns [EObject current=null] : iv_ruleSuccession= ruleSuccession EOF ;
    public final EObject entryRuleSuccession() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuccession = null;


        try {
            // InternalKerML.g:8054:51: (iv_ruleSuccession= ruleSuccession EOF )
            // InternalKerML.g:8055:2: iv_ruleSuccession= ruleSuccession EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuccessionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuccession=ruleSuccession();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuccession; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuccession"


    // $ANTLR start "ruleSuccession"
    // InternalKerML.g:8061:1: ruleSuccession returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleSuccession() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_SuccessionDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8067:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8068:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8068:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8069:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,92,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSuccessionAccess().getSuccessionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_SuccessionDeclaration_2=ruleSuccessionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SuccessionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccession"


    // $ANTLR start "ruleSuccessionDeclaration"
    // InternalKerML.g:8111:1: ruleSuccessionDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) ;
    public final EObject ruleSuccessionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token lv_isSufficient_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8117:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) )
            // InternalKerML.g:8118:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            {
            // InternalKerML.g:8118:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            // InternalKerML.g:8119:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            {
            // InternalKerML.g:8119:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )?
            int alt177=3;
            alt177 = dfa177.predict(input);
            switch (alt177) {
                case 1 :
                    // InternalKerML.g:8120:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' )
                    {
                    // InternalKerML.g:8120:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' )
                    // InternalKerML.g:8121:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first'
                    {
                    // InternalKerML.g:8121:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt175=2;
                    int LA175_0 = input.LA(1);

                    if ( ((LA175_0>=RULE_ID && LA175_0<=RULE_UNRESTRICTED_NAME)||LA175_0==14||LA175_0==33||LA175_0==42||(LA175_0>=44 && LA175_0<=45)||(LA175_0>=66 && LA175_0<=72)||LA175_0==82) ) {
                        alt175=1;
                    }
                    switch (alt175) {
                        case 1 :
                            // InternalKerML.g:8122:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_114);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,93,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:8140:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? )
                    {
                    // InternalKerML.g:8140:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? )
                    // InternalKerML.g:8141:5: ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )?
                    {
                    // InternalKerML.g:8141:5: ( (lv_isSufficient_2_0= 'all' ) )
                    // InternalKerML.g:8142:6: (lv_isSufficient_2_0= 'all' )
                    {
                    // InternalKerML.g:8142:6: (lv_isSufficient_2_0= 'all' )
                    // InternalKerML.g:8143:7: lv_isSufficient_2_0= 'all'
                    {
                    lv_isSufficient_2_0=(Token)match(input,33,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isSufficient_2_0, grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "isSufficient", lv_isSufficient_2_0 != null, "all");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:8155:5: (otherlv_3= 'first' )?
                    int alt176=2;
                    int LA176_0 = input.LA(1);

                    if ( (LA176_0==93) ) {
                        alt176=1;
                    }
                    switch (alt176) {
                        case 1 :
                            // InternalKerML.g:8156:6: otherlv_3= 'first'
                            {
                            otherlv_3=(Token)match(input,93,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:8163:3: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8164:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8164:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            // InternalKerML.g:8165:5: lv_ownedRelationship_4_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_115);
            lv_ownedRelationship_4_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,94,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2());
              		
            }
            // InternalKerML.g:8186:3: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8187:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8187:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            // InternalKerML.g:8188:5: lv_ownedRelationship_6_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_6_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccessionDeclaration"


    // $ANTLR start "entryRuleBehavior"
    // InternalKerML.g:8209:1: entryRuleBehavior returns [EObject current=null] : iv_ruleBehavior= ruleBehavior EOF ;
    public final EObject entryRuleBehavior() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehavior = null;


        try {
            // InternalKerML.g:8209:49: (iv_ruleBehavior= ruleBehavior EOF )
            // InternalKerML.g:8210:2: iv_ruleBehavior= ruleBehavior EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBehaviorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBehavior=ruleBehavior();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBehavior; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehavior"


    // $ANTLR start "ruleBehavior"
    // InternalKerML.g:8216:1: ruleBehavior returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleBehavior() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8222:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8223:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8223:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8224:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:8224:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==40) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalKerML.g:8225:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:8225:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:8226:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getBehaviorAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBehaviorRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,95,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBehaviorAccess().getBehaviorKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehavior"


    // $ANTLR start "entryRuleStep"
    // InternalKerML.g:8268:1: entryRuleStep returns [EObject current=null] : iv_ruleStep= ruleStep EOF ;
    public final EObject entryRuleStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStep = null;


        try {
            // InternalKerML.g:8268:45: (iv_ruleStep= ruleStep EOF )
            // InternalKerML.g:8269:2: iv_ruleStep= ruleStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStep=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStep"


    // $ANTLR start "ruleStep"
    // InternalKerML.g:8275:1: ruleStep returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_StepDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8281:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8282:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8282:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8283:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_117);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,96,FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStepAccess().getStepKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_StepDeclaration_2=ruleStepDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StepDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStep"


    // $ANTLR start "ruleStepDeclaration"
    // InternalKerML.g:8325:1: ruleStepDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) ;
    public final EObject ruleStepDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_ValuePart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:8331:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) )
            // InternalKerML.g:8332:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            {
            // InternalKerML.g:8332:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            // InternalKerML.g:8333:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )?
            {
            // InternalKerML.g:8333:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( ((LA179_0>=RULE_ID && LA179_0<=RULE_UNRESTRICTED_NAME)||LA179_0==14||LA179_0==33||LA179_0==42||(LA179_0>=44 && LA179_0<=45)||(LA179_0>=66 && LA179_0<=72)||LA179_0==82) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // InternalKerML.g:8334:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getStepDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getStepDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_119);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:8346:3: (this_ValuePart_1= ruleValuePart[$current] )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( ((LA180_0>=78 && LA180_0<=80)) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalKerML.g:8347:4: this_ValuePart_1= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getStepDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_ValuePart_1=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStepDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalKerML.g:8363:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKerML.g:8363:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKerML.g:8364:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKerML.g:8370:1: ruleFunction returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8376:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:8377:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:8377:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:8378:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            // InternalKerML.g:8378:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==40) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalKerML.g:8379:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:8379:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:8380:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFunctionAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFunctionRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,97,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_57);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "ruleFunctionBody"
    // InternalKerML.g:8423:1: ruleFunctionBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) ) ;
    public final EObject ruleFunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_FunctionBodyPart_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:8429:2: ( (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) ) )
            // InternalKerML.g:8430:2: (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) )
            {
            // InternalKerML.g:8430:2: (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) )
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==17) ) {
                alt182=1;
            }
            else if ( (LA182_0==18) ) {
                alt182=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 182, 0, input);

                throw nvae;
            }
            switch (alt182) {
                case 1 :
                    // InternalKerML.g:8431:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:8436:3: (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' )
                    {
                    // InternalKerML.g:8436:3: (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' )
                    // InternalKerML.g:8437:4: otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFunctionBodyRule());
                      				}
                      				newCompositeNode(grammarAccess.getFunctionBodyAccess().getFunctionBodyPartParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_122);
                    this_FunctionBodyPart_2=ruleFunctionBodyPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FunctionBodyPart_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "ruleFunctionBodyPart"
    // InternalKerML.g:8462:1: ruleFunctionBodyPart[EObject in_current] returns [EObject current=in_current] : ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? ) ;
    public final EObject ruleFunctionBodyPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8468:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? ) )
            // InternalKerML.g:8469:2: ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? )
            {
            // InternalKerML.g:8469:2: ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? )
            // InternalKerML.g:8470:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )?
            {
            // InternalKerML.g:8470:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )*
            loop183:
            do {
                int alt183=6;
                alt183 = dfa183.predict(input);
                switch (alt183) {
            	case 1 :
            	    // InternalKerML.g:8471:4: ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) )
            	    {
            	    // InternalKerML.g:8471:4: ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) )
            	    // InternalKerML.g:8472:5: (lv_ownedRelationship_0_0= ruleNonFeatureMember )
            	    {
            	    // InternalKerML.g:8472:5: (lv_ownedRelationship_0_0= ruleNonFeatureMember )
            	    // InternalKerML.g:8473:6: lv_ownedRelationship_0_0= ruleNonFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_0_0=ruleNonFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_0_0,
            	      							"org.omg.kerml.xtext.KerML.NonFeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKerML.g:8491:4: ( (lv_ownedRelationship_1_0= ruleFeatureMember ) )
            	    {
            	    // InternalKerML.g:8491:4: ( (lv_ownedRelationship_1_0= ruleFeatureMember ) )
            	    // InternalKerML.g:8492:5: (lv_ownedRelationship_1_0= ruleFeatureMember )
            	    {
            	    // InternalKerML.g:8492:5: (lv_ownedRelationship_1_0= ruleFeatureMember )
            	    // InternalKerML.g:8493:6: lv_ownedRelationship_1_0= ruleFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipFeatureMemberParserRuleCall_0_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_1_0=ruleFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_1_0,
            	      							"org.omg.kerml.xtext.KerML.FeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKerML.g:8511:4: ( (lv_ownedRelationship_2_0= ruleAliasMember ) )
            	    {
            	    // InternalKerML.g:8511:4: ( (lv_ownedRelationship_2_0= ruleAliasMember ) )
            	    // InternalKerML.g:8512:5: (lv_ownedRelationship_2_0= ruleAliasMember )
            	    {
            	    // InternalKerML.g:8512:5: (lv_ownedRelationship_2_0= ruleAliasMember )
            	    // InternalKerML.g:8513:6: lv_ownedRelationship_2_0= ruleAliasMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipAliasMemberParserRuleCall_0_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_2_0=ruleAliasMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.AliasMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKerML.g:8531:4: ( (lv_ownedRelationship_3_0= ruleImport ) )
            	    {
            	    // InternalKerML.g:8531:4: ( (lv_ownedRelationship_3_0= ruleImport ) )
            	    // InternalKerML.g:8532:5: (lv_ownedRelationship_3_0= ruleImport )
            	    {
            	    // InternalKerML.g:8532:5: (lv_ownedRelationship_3_0= ruleImport )
            	    // InternalKerML.g:8533:6: lv_ownedRelationship_3_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipImportParserRuleCall_0_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_3_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Import");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKerML.g:8551:4: ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) )
            	    {
            	    // InternalKerML.g:8551:4: ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) )
            	    // InternalKerML.g:8552:5: (lv_ownedRelationship_4_0= ruleReturnFeatureMember )
            	    {
            	    // InternalKerML.g:8552:5: (lv_ownedRelationship_4_0= ruleReturnFeatureMember )
            	    // InternalKerML.g:8553:6: lv_ownedRelationship_4_0= ruleReturnFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipReturnFeatureMemberParserRuleCall_0_4_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_4_0=ruleReturnFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.ReturnFeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop183;
                }
            } while (true);

            // InternalKerML.g:8571:3: ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==EOF||(LA184_0>=RULE_REGULAR_COMMENT && LA184_0<=RULE_UNRESTRICTED_NAME)||LA184_0==14||(LA184_0>=16 && LA184_0<=18)||LA184_0==20||LA184_0==24||(LA184_0>=26 && LA184_0<=30)||(LA184_0>=33 && LA184_0<=34)||(LA184_0>=38 && LA184_0<=42)||(LA184_0>=44 && LA184_0<=60)||LA184_0==62||(LA184_0>=66 && LA184_0<=77)||(LA184_0>=81 && LA184_0<=82)||(LA184_0>=84 && LA184_0<=89)||(LA184_0>=91 && LA184_0<=92)||(LA184_0>=95 && LA184_0<=110)||LA184_0==113||(LA184_0>=123 && LA184_0<=125)||(LA184_0>=128 && LA184_0<=129)||LA184_0==133||(LA184_0>=136 && LA184_0<=142)) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalKerML.g:8572:4: (lv_ownedRelationship_5_0= ruleResultExpressionMember )
                    {
                    // InternalKerML.g:8572:4: (lv_ownedRelationship_5_0= ruleResultExpressionMember )
                    // InternalKerML.g:8573:5: lv_ownedRelationship_5_0= ruleResultExpressionMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipResultExpressionMemberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_5_0=ruleResultExpressionMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_5_0,
                      						"org.omg.kerml.xtext.KerML.ResultExpressionMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBodyPart"


    // $ANTLR start "entryRuleReturnFeatureMember"
    // InternalKerML.g:8594:1: entryRuleReturnFeatureMember returns [EObject current=null] : iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF ;
    public final EObject entryRuleReturnFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnFeatureMember = null;


        try {
            // InternalKerML.g:8594:60: (iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF )
            // InternalKerML.g:8595:2: iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnFeatureMember=ruleReturnFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnFeatureMember"


    // $ANTLR start "ruleReturnFeatureMember"
    // InternalKerML.g:8601:1: ruleReturnFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleReturnFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8607:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:8608:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:8608:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            // InternalKerML.g:8609:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getReturnFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getReturnFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_124);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,98,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnFeatureMemberAccess().getReturnKeyword_1());
              		
            }
            // InternalKerML.g:8624:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            // InternalKerML.g:8625:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            {
            // InternalKerML.g:8625:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            // InternalKerML.g:8626:5: lv_ownedRelatedElement_2_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnFeatureMember"


    // $ANTLR start "entryRuleResultExpressionMember"
    // InternalKerML.g:8647:1: entryRuleResultExpressionMember returns [EObject current=null] : iv_ruleResultExpressionMember= ruleResultExpressionMember EOF ;
    public final EObject entryRuleResultExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResultExpressionMember = null;


        try {
            // InternalKerML.g:8647:63: (iv_ruleResultExpressionMember= ruleResultExpressionMember EOF )
            // InternalKerML.g:8648:2: iv_ruleResultExpressionMember= ruleResultExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResultExpressionMember=ruleResultExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResultExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResultExpressionMember"


    // $ANTLR start "ruleResultExpressionMember"
    // InternalKerML.g:8654:1: ruleResultExpressionMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleResultExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8660:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:8661:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:8661:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:8662:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getResultExpressionMemberRule());
              			}
              			newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_37);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:8673:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:8674:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:8674:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:8675:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getResultExpressionMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResultExpressionMember"


    // $ANTLR start "entryRuleExpression"
    // InternalKerML.g:8696:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKerML.g:8696:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKerML.g:8697:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKerML.g:8703:1: ruleExpression returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8709:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:8710:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:8710:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:8711:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_125);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,99,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getExprKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getExpressionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_57);
            this_ExpressionDeclaration_2=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "ruleExpressionDeclaration"
    // InternalKerML.g:8753:1: ruleExpressionDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) ;
    public final EObject ruleExpressionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_ValuePart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:8759:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) )
            // InternalKerML.g:8760:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            {
            // InternalKerML.g:8760:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            // InternalKerML.g:8761:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )?
            {
            // InternalKerML.g:8761:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( ((LA185_0>=RULE_ID && LA185_0<=RULE_UNRESTRICTED_NAME)||LA185_0==14||LA185_0==33||LA185_0==42||(LA185_0>=44 && LA185_0<=45)||(LA185_0>=66 && LA185_0<=72)||LA185_0==82) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalKerML.g:8762:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getExpressionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_119);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:8774:3: (this_ValuePart_1= ruleValuePart[$current] )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( ((LA186_0>=78 && LA186_0<=80)) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalKerML.g:8775:4: this_ValuePart_1= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getExpressionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_ValuePart_1=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionDeclaration"


    // $ANTLR start "entryRulePredicate"
    // InternalKerML.g:8791:1: entryRulePredicate returns [EObject current=null] : iv_rulePredicate= rulePredicate EOF ;
    public final EObject entryRulePredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePredicate = null;


        try {
            // InternalKerML.g:8791:50: (iv_rulePredicate= rulePredicate EOF )
            // InternalKerML.g:8792:2: iv_rulePredicate= rulePredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPredicateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePredicate=rulePredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePredicate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePredicate"


    // $ANTLR start "rulePredicate"
    // InternalKerML.g:8798:1: rulePredicate returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject rulePredicate() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8804:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:8805:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:8805:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:8806:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            // InternalKerML.g:8806:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==40) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalKerML.g:8807:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:8807:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:8808:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getPredicateAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPredicateRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,100,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPredicateAccess().getPredicateKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPredicateRule());
              			}
              			newCompositeNode(grammarAccess.getPredicateAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_57);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPredicateRule());
              			}
              			newCompositeNode(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePredicate"


    // $ANTLR start "entryRuleBooleanExpression"
    // InternalKerML.g:8850:1: entryRuleBooleanExpression returns [EObject current=null] : iv_ruleBooleanExpression= ruleBooleanExpression EOF ;
    public final EObject entryRuleBooleanExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanExpression = null;


        try {
            // InternalKerML.g:8850:58: (iv_ruleBooleanExpression= ruleBooleanExpression EOF )
            // InternalKerML.g:8851:2: iv_ruleBooleanExpression= ruleBooleanExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanExpression=ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanExpression"


    // $ANTLR start "ruleBooleanExpression"
    // InternalKerML.g:8857:1: ruleBooleanExpression returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleBooleanExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8863:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:8864:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:8864:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:8865:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,101,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBooleanExpressionAccess().getBoolKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_57);
            this_ExpressionDeclaration_2=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanExpression"


    // $ANTLR start "entryRuleInvariant"
    // InternalKerML.g:8906:1: entryRuleInvariant returns [EObject current=null] : iv_ruleInvariant= ruleInvariant EOF ;
    public final EObject entryRuleInvariant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariant = null;


        try {
            // InternalKerML.g:8906:50: (iv_ruleInvariant= ruleInvariant EOF )
            // InternalKerML.g:8907:2: iv_ruleInvariant= ruleInvariant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariant=ruleInvariant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariant"


    // $ANTLR start "ruleInvariant"
    // InternalKerML.g:8913:1: ruleInvariant returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] ) ;
    public final EObject ruleInvariant() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_isNegated_3_0=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_4 = null;

        EObject this_FunctionBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:8919:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] ) )
            // InternalKerML.g:8920:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:8920:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] )
            // InternalKerML.g:8921:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,102,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvariantAccess().getInvKeyword_1());
              		
            }
            // InternalKerML.g:8936:3: (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )?
            int alt188=3;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==103) ) {
                alt188=1;
            }
            else if ( (LA188_0==104) ) {
                alt188=2;
            }
            switch (alt188) {
                case 1 :
                    // InternalKerML.g:8937:4: otherlv_2= 'true'
                    {
                    otherlv_2=(Token)match(input,103,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getInvariantAccess().getTrueKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:8942:4: ( (lv_isNegated_3_0= 'false' ) )
                    {
                    // InternalKerML.g:8942:4: ( (lv_isNegated_3_0= 'false' ) )
                    // InternalKerML.g:8943:5: (lv_isNegated_3_0= 'false' )
                    {
                    // InternalKerML.g:8943:5: (lv_isNegated_3_0= 'false' )
                    // InternalKerML.g:8944:6: lv_isNegated_3_0= 'false'
                    {
                    lv_isNegated_3_0=(Token)match(input,104,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isNegated_3_0, grammarAccess.getInvariantAccess().getIsNegatedFalseKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInvariantRule());
                      						}
                      						setWithLastConsumed(current, "isNegated", lv_isNegated_3_0 != null, "false");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getExpressionDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_57);
            this_ExpressionDeclaration_4=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_4;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_5=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariant"


    // $ANTLR start "entryRuleInteraction"
    // InternalKerML.g:8983:1: entryRuleInteraction returns [EObject current=null] : iv_ruleInteraction= ruleInteraction EOF ;
    public final EObject entryRuleInteraction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInteraction = null;


        try {
            // InternalKerML.g:8983:52: (iv_ruleInteraction= ruleInteraction EOF )
            // InternalKerML.g:8984:2: iv_ruleInteraction= ruleInteraction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInteractionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInteraction=ruleInteraction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteraction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteraction"


    // $ANTLR start "ruleInteraction"
    // InternalKerML.g:8990:1: ruleInteraction returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleInteraction() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8996:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8997:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8997:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8998:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:8998:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==40) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalKerML.g:8999:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:8999:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:9000:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getInteractionAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getInteractionRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,105,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInteractionAccess().getInteractionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteraction"


    // $ANTLR start "entryRuleItemFlow"
    // InternalKerML.g:9042:1: entryRuleItemFlow returns [EObject current=null] : iv_ruleItemFlow= ruleItemFlow EOF ;
    public final EObject entryRuleItemFlow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlow = null;


        try {
            // InternalKerML.g:9042:49: (iv_ruleItemFlow= ruleItemFlow EOF )
            // InternalKerML.g:9043:2: iv_ruleItemFlow= ruleItemFlow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlow=ruleItemFlow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlow"


    // $ANTLR start "ruleItemFlow"
    // InternalKerML.g:9049:1: ruleItemFlow returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleItemFlow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ItemFlowDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9055:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:9056:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9056:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:9057:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_132);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,106,FOLLOW_133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getItemFlowAccess().getFlowKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ItemFlowDeclaration_2=ruleItemFlowDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ItemFlowDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlow"


    // $ANTLR start "entryRuleSuccessionItemFlow"
    // InternalKerML.g:9098:1: entryRuleSuccessionItemFlow returns [EObject current=null] : iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF ;
    public final EObject entryRuleSuccessionItemFlow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuccessionItemFlow = null;


        try {
            // InternalKerML.g:9098:59: (iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF )
            // InternalKerML.g:9099:2: iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuccessionItemFlowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuccessionItemFlow=ruleSuccessionItemFlow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuccessionItemFlow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuccessionItemFlow"


    // $ANTLR start "ruleSuccessionItemFlow"
    // InternalKerML.g:9105:1: ruleSuccessionItemFlow returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) ;
    public final EObject ruleSuccessionItemFlow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ItemFlowDeclaration_3 = null;

        EObject this_TypeBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:9111:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) )
            // InternalKerML.g:9112:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9112:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            // InternalKerML.g:9113:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,92,FOLLOW_132); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSuccessionItemFlowAccess().getSuccessionKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,106,FOLLOW_133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSuccessionItemFlowAccess().getFlowKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_23);
            this_ItemFlowDeclaration_3=ruleItemFlowDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ItemFlowDeclaration_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getTypeBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_4=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccessionItemFlow"


    // $ANTLR start "ruleItemFlowDeclaration"
    // InternalKerML.g:9159:1: ruleItemFlowDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) ) ;
    public final EObject ruleItemFlowDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_isSufficient_5_0=null;
        Token otherlv_8=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_6_0 = null;

        EObject lv_ownedRelationship_7_0 = null;

        EObject lv_ownedRelationship_9_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9165:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) ) )
            // InternalKerML.g:9166:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) )
            {
            // InternalKerML.g:9166:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) )
            // InternalKerML.g:9167:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) )
            {
            // InternalKerML.g:9167:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) )
            int alt193=2;
            switch ( input.LA(1) ) {
            case 33:
                {
                switch ( input.LA(2) ) {
                case 14:
                case 42:
                case 44:
                case 45:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 82:
                    {
                    alt193=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA193_3 = input.LA(3);

                    if ( (LA193_3==21||LA193_3==35||LA193_3==107) ) {
                        alt193=2;
                    }
                    else if ( (LA193_3==22||LA193_3==42||(LA193_3>=44 && LA193_3<=46)||(LA193_3>=61 && LA193_3<=64)||(LA193_3>=66 && LA193_3<=72)||LA193_3==82) ) {
                        alt193=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 193, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA193_4 = input.LA(3);

                    if ( (LA193_4==21||LA193_4==35||LA193_4==107) ) {
                        alt193=2;
                    }
                    else if ( (LA193_4==22||LA193_4==42||(LA193_4>=44 && LA193_4<=46)||(LA193_4>=61 && LA193_4<=64)||(LA193_4>=66 && LA193_4<=72)||LA193_4==82) ) {
                        alt193=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 193, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 193, 1, input);

                    throw nvae;
                }

                }
                break;
            case 14:
            case 22:
            case 42:
            case 44:
            case 45:
            case 63:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 82:
                {
                alt193=1;
                }
                break;
            case RULE_ID:
                {
                int LA193_3 = input.LA(2);

                if ( (LA193_3==21||LA193_3==35||LA193_3==107) ) {
                    alt193=2;
                }
                else if ( (LA193_3==22||LA193_3==42||(LA193_3>=44 && LA193_3<=46)||(LA193_3>=61 && LA193_3<=64)||(LA193_3>=66 && LA193_3<=72)||LA193_3==82) ) {
                    alt193=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 193, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UNRESTRICTED_NAME:
                {
                int LA193_4 = input.LA(2);

                if ( (LA193_4==21||LA193_4==35||LA193_4==107) ) {
                    alt193=2;
                }
                else if ( (LA193_4==22||LA193_4==42||(LA193_4>=44 && LA193_4<=46)||(LA193_4>=61 && LA193_4<=64)||(LA193_4>=66 && LA193_4<=72)||LA193_4==82) ) {
                    alt193=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 193, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }

            switch (alt193) {
                case 1 :
                    // InternalKerML.g:9168:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' )
                    {
                    // InternalKerML.g:9168:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' )
                    // InternalKerML.g:9169:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from'
                    {
                    // InternalKerML.g:9169:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt190=2;
                    int LA190_0 = input.LA(1);

                    if ( ((LA190_0>=RULE_ID && LA190_0<=RULE_UNRESTRICTED_NAME)||LA190_0==14||LA190_0==33||LA190_0==42||(LA190_0>=44 && LA190_0<=45)||(LA190_0>=66 && LA190_0<=72)||LA190_0==82) ) {
                        alt190=1;
                    }
                    switch (alt190) {
                        case 1 :
                            // InternalKerML.g:9170:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_133);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:9182:5: ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) )
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==63) ) {
                        alt191=1;
                    }
                    else if ( (LA191_0==EOF||(LA191_0>=RULE_ID && LA191_0<=RULE_UNRESTRICTED_NAME)||LA191_0==22) ) {
                        alt191=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 191, 0, input);

                        throw nvae;
                    }
                    switch (alt191) {
                        case 1 :
                            // InternalKerML.g:9183:6: (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) )
                            {
                            // InternalKerML.g:9183:6: (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) )
                            // InternalKerML.g:9184:7: otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) )
                            {
                            otherlv_1=(Token)match(input,63,FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_1, grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0_0());
                              						
                            }
                            // InternalKerML.g:9188:7: ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) )
                            // InternalKerML.g:9189:8: (lv_ownedRelationship_2_0= ruleItemFeatureMember )
                            {
                            // InternalKerML.g:9189:8: (lv_ownedRelationship_2_0= ruleItemFeatureMember )
                            // InternalKerML.g:9190:9: lv_ownedRelationship_2_0= ruleItemFeatureMember
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFeatureMemberParserRuleCall_0_0_1_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_45);
                            lv_ownedRelationship_2_0=ruleItemFeatureMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                              									}
                              									add(
                              										current,
                              										"ownedRelationship",
                              										lv_ownedRelationship_2_0,
                              										"org.omg.kerml.xtext.KerML.ItemFeatureMember");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKerML.g:9209:6: ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) )
                            {
                            // InternalKerML.g:9209:6: ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) )
                            // InternalKerML.g:9210:7: (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember )
                            {
                            // InternalKerML.g:9210:7: (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember )
                            // InternalKerML.g:9211:8: lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_45);
                            lv_ownedRelationship_3_0=ruleEmptyItemFeatureMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"ownedRelationship",
                              									lv_ownedRelationship_3_0,
                              									"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:9235:4: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) )
                    {
                    // InternalKerML.g:9235:4: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) )
                    // InternalKerML.g:9236:5: ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) )
                    {
                    // InternalKerML.g:9236:5: ( (lv_isSufficient_5_0= 'all' ) )?
                    int alt192=2;
                    int LA192_0 = input.LA(1);

                    if ( (LA192_0==33) ) {
                        alt192=1;
                    }
                    switch (alt192) {
                        case 1 :
                            // InternalKerML.g:9237:6: (lv_isSufficient_5_0= 'all' )
                            {
                            // InternalKerML.g:9237:6: (lv_isSufficient_5_0= 'all' )
                            // InternalKerML.g:9238:7: lv_isSufficient_5_0= 'all'
                            {
                            lv_isSufficient_5_0=(Token)match(input,33,FOLLOW_133); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_isSufficient_5_0, grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "isSufficient", lv_isSufficient_5_0 != null, "all");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:9250:5: ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) )
                    // InternalKerML.g:9251:6: (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember )
                    {
                    // InternalKerML.g:9251:6: (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember )
                    // InternalKerML.g:9252:7: lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_4);
                    lv_ownedRelationship_6_0=ruleEmptyItemFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_6_0,
                      								"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:9271:3: ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) )
            // InternalKerML.g:9272:4: (lv_ownedRelationship_7_0= ruleItemFlowEndMember )
            {
            // InternalKerML.g:9272:4: (lv_ownedRelationship_7_0= ruleItemFlowEndMember )
            // InternalKerML.g:9273:5: lv_ownedRelationship_7_0= ruleItemFlowEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_ownedRelationship_7_0=ruleItemFlowEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_7_0,
              						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2());
              		
            }
            // InternalKerML.g:9294:3: ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) )
            // InternalKerML.g:9295:4: (lv_ownedRelationship_9_0= ruleItemFlowEndMember )
            {
            // InternalKerML.g:9295:4: (lv_ownedRelationship_9_0= ruleItemFlowEndMember )
            // InternalKerML.g:9296:5: lv_ownedRelationship_9_0= ruleItemFlowEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_9_0=ruleItemFlowEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_9_0,
              						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowDeclaration"


    // $ANTLR start "entryRuleItemFeatureMember"
    // InternalKerML.g:9317:1: entryRuleItemFeatureMember returns [EObject current=null] : iv_ruleItemFeatureMember= ruleItemFeatureMember EOF ;
    public final EObject entryRuleItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFeatureMember = null;


        try {
            // InternalKerML.g:9317:58: (iv_ruleItemFeatureMember= ruleItemFeatureMember EOF )
            // InternalKerML.g:9318:2: iv_ruleItemFeatureMember= ruleItemFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFeatureMember=ruleItemFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFeatureMember"


    // $ANTLR start "ruleItemFeatureMember"
    // InternalKerML.g:9324:1: ruleItemFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) ) ;
    public final EObject ruleItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9330:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) ) )
            // InternalKerML.g:9331:2: ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) )
            {
            // InternalKerML.g:9331:2: ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) )
            // InternalKerML.g:9332:3: (lv_ownedRelatedElement_0_0= ruleItemFeature )
            {
            // InternalKerML.g:9332:3: (lv_ownedRelatedElement_0_0= ruleItemFeature )
            // InternalKerML.g:9333:4: lv_ownedRelatedElement_0_0= ruleItemFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFeatureMemberAccess().getOwnedRelatedElementItemFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFeatureMember"


    // $ANTLR start "entryRuleItemFeature"
    // InternalKerML.g:9353:1: entryRuleItemFeature returns [EObject current=null] : iv_ruleItemFeature= ruleItemFeature EOF ;
    public final EObject entryRuleItemFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFeature = null;


        try {
            // InternalKerML.g:9353:52: (iv_ruleItemFeature= ruleItemFeature EOF )
            // InternalKerML.g:9354:2: iv_ruleItemFeature= ruleItemFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFeature=ruleItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFeature"


    // $ANTLR start "ruleItemFeature"
    // InternalKerML.g:9360:1: ruleItemFeature returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) ) ;
    public final EObject ruleItemFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9366:2: ( ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) ) )
            // InternalKerML.g:9367:2: ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) )
            {
            // InternalKerML.g:9367:2: ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) )
            // InternalKerML.g:9368:3: ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) )
            {
            // InternalKerML.g:9368:3: ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==RULE_ID) ) {
                int LA194_1 = input.LA(2);

                if ( (LA194_1==68) ) {
                    alt194=1;
                }
            }
            else if ( (LA194_0==RULE_UNRESTRICTED_NAME) ) {
                int LA194_2 = input.LA(2);

                if ( (LA194_2==68) ) {
                    alt194=1;
                }
            }
            switch (alt194) {
                case 1 :
                    // InternalKerML.g:9369:4: ( (lv_name_0_0= ruleName ) ) otherlv_1= ':'
                    {
                    // InternalKerML.g:9369:4: ( (lv_name_0_0= ruleName ) )
                    // InternalKerML.g:9370:5: (lv_name_0_0= ruleName )
                    {
                    // InternalKerML.g:9370:5: (lv_name_0_0= ruleName )
                    // InternalKerML.g:9371:6: lv_name_0_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFeatureAccess().getNameNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_name_0_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,68,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getItemFeatureAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:9393:3: ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( ((LA197_0>=RULE_ID && LA197_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt197=1;
            }
            else if ( (LA197_0==82) ) {
                alt197=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;
            }
            switch (alt197) {
                case 1 :
                    // InternalKerML.g:9394:4: ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
                    {
                    // InternalKerML.g:9394:4: ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
                    // InternalKerML.g:9395:5: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
                    {
                    // InternalKerML.g:9395:5: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
                    // InternalKerML.g:9396:6: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
                    {
                    // InternalKerML.g:9396:6: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
                    // InternalKerML.g:9397:7: lv_ownedRelationship_2_0= ruleOwnedFeatureTyping
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_36);
                    lv_ownedRelationship_2_0=ruleOwnedFeatureTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_2_0,
                      								"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKerML.g:9414:5: ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
                    int alt195=2;
                    int LA195_0 = input.LA(1);

                    if ( (LA195_0==82) ) {
                        alt195=1;
                    }
                    switch (alt195) {
                        case 1 :
                            // InternalKerML.g:9415:6: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                            {
                            // InternalKerML.g:9415:6: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                            // InternalKerML.g:9416:7: lv_ownedRelationship_3_0= ruleOwnedMultiplicity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_3_0=ruleOwnedMultiplicity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:9435:4: ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? )
                    {
                    // InternalKerML.g:9435:4: ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? )
                    // InternalKerML.g:9436:5: ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )?
                    {
                    // InternalKerML.g:9436:5: ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )
                    // InternalKerML.g:9437:6: (lv_ownedRelationship_4_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:9437:6: (lv_ownedRelationship_4_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:9438:7: lv_ownedRelationship_4_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_6);
                    lv_ownedRelationship_4_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_4_0,
                      								"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKerML.g:9455:5: ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )?
                    int alt196=2;
                    int LA196_0 = input.LA(1);

                    if ( ((LA196_0>=RULE_ID && LA196_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt196=1;
                    }
                    switch (alt196) {
                        case 1 :
                            // InternalKerML.g:9456:6: (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping )
                            {
                            // InternalKerML.g:9456:6: (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping )
                            // InternalKerML.g:9457:7: lv_ownedRelationship_5_0= ruleOwnedFeatureTyping
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_5_0=ruleOwnedFeatureTyping();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_5_0,
                              								"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFeature"


    // $ANTLR start "entryRuleEmptyItemFeatureMember"
    // InternalKerML.g:9480:1: entryRuleEmptyItemFeatureMember returns [EObject current=null] : iv_ruleEmptyItemFeatureMember= ruleEmptyItemFeatureMember EOF ;
    public final EObject entryRuleEmptyItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyItemFeatureMember = null;


        try {
            // InternalKerML.g:9480:63: (iv_ruleEmptyItemFeatureMember= ruleEmptyItemFeatureMember EOF )
            // InternalKerML.g:9481:2: iv_ruleEmptyItemFeatureMember= ruleEmptyItemFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyItemFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyItemFeatureMember=ruleEmptyItemFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyItemFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyItemFeatureMember"


    // $ANTLR start "ruleEmptyItemFeatureMember"
    // InternalKerML.g:9487:1: ruleEmptyItemFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) ) ;
    public final EObject ruleEmptyItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9493:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) ) )
            // InternalKerML.g:9494:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) )
            {
            // InternalKerML.g:9494:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) )
            // InternalKerML.g:9495:3: (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature )
            {
            // InternalKerML.g:9495:3: (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature )
            // InternalKerML.g:9496:4: lv_ownedRelatedElement_0_0= ruleEmptyItemFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedRelatedElementEmptyItemFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyItemFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyItemFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyItemFeatureMember"


    // $ANTLR start "entryRuleEmptyItemFeature"
    // InternalKerML.g:9516:1: entryRuleEmptyItemFeature returns [EObject current=null] : iv_ruleEmptyItemFeature= ruleEmptyItemFeature EOF ;
    public final EObject entryRuleEmptyItemFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyItemFeature = null;


        try {
            // InternalKerML.g:9516:57: (iv_ruleEmptyItemFeature= ruleEmptyItemFeature EOF )
            // InternalKerML.g:9517:2: iv_ruleEmptyItemFeature= ruleEmptyItemFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyItemFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyItemFeature=ruleEmptyItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyItemFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyItemFeature"


    // $ANTLR start "ruleEmptyItemFeature"
    // InternalKerML.g:9523:1: ruleEmptyItemFeature returns [EObject current=null] : () ;
    public final EObject ruleEmptyItemFeature() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:9529:2: ( () )
            // InternalKerML.g:9530:2: ()
            {
            // InternalKerML.g:9530:2: ()
            // InternalKerML.g:9531:3: 
            {
            if ( state.backtracking==0 ) {

              			current = forceCreateModelElement(
              				grammarAccess.getEmptyItemFeatureAccess().getItemFeatureAction(),
              				current);
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyItemFeature"


    // $ANTLR start "entryRuleItemFlowEndMember"
    // InternalKerML.g:9540:1: entryRuleItemFlowEndMember returns [EObject current=null] : iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF ;
    public final EObject entryRuleItemFlowEndMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEndMember = null;


        try {
            // InternalKerML.g:9540:58: (iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF )
            // InternalKerML.g:9541:2: iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEndMember=ruleItemFlowEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEndMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEndMember"


    // $ANTLR start "ruleItemFlowEndMember"
    // InternalKerML.g:9547:1: ruleItemFlowEndMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) ) ;
    public final EObject ruleItemFlowEndMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9553:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) ) )
            // InternalKerML.g:9554:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) )
            {
            // InternalKerML.g:9554:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) )
            // InternalKerML.g:9555:3: (lv_ownedRelatedElement_0_0= ruleItemFlowEnd )
            {
            // InternalKerML.g:9555:3: (lv_ownedRelatedElement_0_0= ruleItemFlowEnd )
            // InternalKerML.g:9556:4: lv_ownedRelatedElement_0_0= ruleItemFlowEnd
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowEndMemberAccess().getOwnedRelatedElementItemFlowEndParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFlowEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowEndMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowEnd");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEndMember"


    // $ANTLR start "entryRuleItemFlowEnd"
    // InternalKerML.g:9576:1: entryRuleItemFlowEnd returns [EObject current=null] : iv_ruleItemFlowEnd= ruleItemFlowEnd EOF ;
    public final EObject entryRuleItemFlowEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEnd = null;


        try {
            // InternalKerML.g:9576:52: (iv_ruleItemFlowEnd= ruleItemFlowEnd EOF )
            // InternalKerML.g:9577:2: iv_ruleItemFlowEnd= ruleItemFlowEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEnd=ruleItemFlowEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEnd"


    // $ANTLR start "ruleItemFlowEnd"
    // InternalKerML.g:9583:1: ruleItemFlowEnd returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) ) ;
    public final EObject ruleItemFlowEnd() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9589:2: ( ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) ) )
            // InternalKerML.g:9590:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) )
            {
            // InternalKerML.g:9590:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) )
            // InternalKerML.g:9591:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) )
            {
            // InternalKerML.g:9591:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )?
            int alt198=2;
            alt198 = dfa198.predict(input);
            switch (alt198) {
                case 1 :
                    // InternalKerML.g:9592:4: (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting )
                    {
                    // InternalKerML.g:9592:4: (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting )
                    // InternalKerML.g:9593:5: lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowEndSubsettingParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_4);
                    lv_ownedRelationship_0_0=ruleItemFlowEndSubsetting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.ItemFlowEndSubsetting");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:9610:3: ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) )
            // InternalKerML.g:9611:4: (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember )
            {
            // InternalKerML.g:9611:4: (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember )
            // InternalKerML.g:9612:5: lv_ownedRelationship_1_0= ruleItemFlowFeatureMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleItemFlowFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.ItemFlowFeatureMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEnd"


    // $ANTLR start "entryRuleItemFlowEndSubsetting"
    // InternalKerML.g:9633:1: entryRuleItemFlowEndSubsetting returns [EObject current=null] : iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF ;
    public final EObject entryRuleItemFlowEndSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEndSubsetting = null;


        try {
            // InternalKerML.g:9633:62: (iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF )
            // InternalKerML.g:9634:2: iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEndSubsetting=ruleItemFlowEndSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEndSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEndSubsetting"


    // $ANTLR start "ruleItemFlowEndSubsetting"
    // InternalKerML.g:9640:1: ruleItemFlowEndSubsetting returns [EObject current=null] : ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) ) ;
    public final EObject ruleItemFlowEndSubsetting() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9646:2: ( ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) ) )
            // InternalKerML.g:9647:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )
            {
            // InternalKerML.g:9647:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )
            int alt199=2;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    // InternalKerML.g:9648:3: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' )
                    {
                    // InternalKerML.g:9648:3: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' )
                    // InternalKerML.g:9649:4: ( ( ruleQualifiedName ) ) otherlv_1= '.'
                    {
                    // InternalKerML.g:9649:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:9650:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:9650:5: ( ruleQualifiedName )
                    // InternalKerML.g:9651:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getItemFlowEndSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFlowEndSubsettingAccess().getSubsettedFeatureFeatureCrossReference_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_135);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getItemFlowEndSubsettingAccess().getFullStopKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:9671:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) )
                    {
                    // InternalKerML.g:9671:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) )
                    // InternalKerML.g:9672:4: (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix )
                    {
                    // InternalKerML.g:9672:4: (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix )
                    // InternalKerML.g:9673:5: lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getItemFlowEndSubsettingAccess().getOwnedRelatedElementFeatureChainPrefixParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_2_0=ruleFeatureChainPrefix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getItemFlowEndSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_2_0,
                      						"org.omg.kerml.xtext.KerML.FeatureChainPrefix");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEndSubsetting"


    // $ANTLR start "entryRuleFeatureChainPrefix"
    // InternalKerML.g:9694:1: entryRuleFeatureChainPrefix returns [EObject current=null] : iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF ;
    public final EObject entryRuleFeatureChainPrefix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureChainPrefix = null;


        try {
            // InternalKerML.g:9694:59: (iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF )
            // InternalKerML.g:9695:2: iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureChainPrefixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureChainPrefix=ruleFeatureChainPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureChainPrefix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureChainPrefix"


    // $ANTLR start "ruleFeatureChainPrefix"
    // InternalKerML.g:9701:1: ruleFeatureChainPrefix returns [EObject current=null] : ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' ) ;
    public final EObject ruleFeatureChainPrefix() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9707:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' ) )
            // InternalKerML.g:9708:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' )
            {
            // InternalKerML.g:9708:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' )
            // InternalKerML.g:9709:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.'
            {
            // InternalKerML.g:9709:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+
            int cnt200=0;
            loop200:
            do {
                int alt200=2;
                alt200 = dfa200.predict(input);
                switch (alt200) {
            	case 1 :
            	    // InternalKerML.g:9710:4: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.'
            	    {
            	    // InternalKerML.g:9710:4: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) )
            	    // InternalKerML.g:9711:5: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            	    {
            	    // InternalKerML.g:9711:5: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            	    // InternalKerML.g:9712:6: lv_ownedRelationship_0_0= ruleOwnedFeatureChaining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFeatureChainPrefixAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_ownedRelationship_0_0=ruleOwnedFeatureChaining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFeatureChainPrefixRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_0_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_1=(Token)match(input,107,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getFeatureChainPrefixAccess().getFullStopKeyword_0_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt200 >= 1 ) break loop200;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(200, input);
                        throw eee;
                }
                cnt200++;
            } while (true);

            // InternalKerML.g:9734:3: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            // InternalKerML.g:9735:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            {
            // InternalKerML.g:9735:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            // InternalKerML.g:9736:5: lv_ownedRelationship_2_0= ruleOwnedFeatureChaining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureChainPrefixAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_135);
            lv_ownedRelationship_2_0=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureChainPrefixRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFeatureChainPrefixAccess().getFullStopKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChainPrefix"


    // $ANTLR start "entryRuleItemFlowFeatureMember"
    // InternalKerML.g:9761:1: entryRuleItemFlowFeatureMember returns [EObject current=null] : iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF ;
    public final EObject entryRuleItemFlowFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowFeatureMember = null;


        try {
            // InternalKerML.g:9761:62: (iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF )
            // InternalKerML.g:9762:2: iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowFeatureMember=ruleItemFlowFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowFeatureMember"


    // $ANTLR start "ruleItemFlowFeatureMember"
    // InternalKerML.g:9768:1: ruleItemFlowFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) ) ;
    public final EObject ruleItemFlowFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9774:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) ) )
            // InternalKerML.g:9775:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) )
            {
            // InternalKerML.g:9775:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) )
            // InternalKerML.g:9776:3: (lv_ownedRelatedElement_0_0= ruleItemFlowFeature )
            {
            // InternalKerML.g:9776:3: (lv_ownedRelatedElement_0_0= ruleItemFlowFeature )
            // InternalKerML.g:9777:4: lv_ownedRelatedElement_0_0= ruleItemFlowFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedRelatedElementItemFlowFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFlowFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowFeatureMember"


    // $ANTLR start "entryRuleItemFlowFeature"
    // InternalKerML.g:9797:1: entryRuleItemFlowFeature returns [EObject current=null] : iv_ruleItemFlowFeature= ruleItemFlowFeature EOF ;
    public final EObject entryRuleItemFlowFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowFeature = null;


        try {
            // InternalKerML.g:9797:56: (iv_ruleItemFlowFeature= ruleItemFlowFeature EOF )
            // InternalKerML.g:9798:2: iv_ruleItemFlowFeature= ruleItemFlowFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowFeature=ruleItemFlowFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowFeature"


    // $ANTLR start "ruleItemFlowFeature"
    // InternalKerML.g:9804:1: ruleItemFlowFeature returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) ) ;
    public final EObject ruleItemFlowFeature() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9810:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) ) )
            // InternalKerML.g:9811:2: ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) )
            {
            // InternalKerML.g:9811:2: ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) )
            // InternalKerML.g:9812:3: (lv_ownedRelationship_0_0= ruleItemFlowRedefinition )
            {
            // InternalKerML.g:9812:3: (lv_ownedRelationship_0_0= ruleItemFlowRedefinition )
            // InternalKerML.g:9813:4: lv_ownedRelationship_0_0= ruleItemFlowRedefinition
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationshipItemFlowRedefinitionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleItemFlowRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowFeatureRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowRedefinition");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowFeature"


    // $ANTLR start "entryRuleItemFlowRedefinition"
    // InternalKerML.g:9833:1: entryRuleItemFlowRedefinition returns [EObject current=null] : iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF ;
    public final EObject entryRuleItemFlowRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowRedefinition = null;


        try {
            // InternalKerML.g:9833:61: (iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF )
            // InternalKerML.g:9834:2: iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowRedefinition=ruleItemFlowRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowRedefinition"


    // $ANTLR start "ruleItemFlowRedefinition"
    // InternalKerML.g:9840:1: ruleItemFlowRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleItemFlowRedefinition() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:9846:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:9847:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:9847:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:9848:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:9848:3: ( ruleQualifiedName )
            // InternalKerML.g:9849:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getItemFlowRedefinitionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowRedefinition"


    // $ANTLR start "entryRuleMetaclass"
    // InternalKerML.g:9866:1: entryRuleMetaclass returns [EObject current=null] : iv_ruleMetaclass= ruleMetaclass EOF ;
    public final EObject entryRuleMetaclass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaclass = null;


        try {
            // InternalKerML.g:9866:50: (iv_ruleMetaclass= ruleMetaclass EOF )
            // InternalKerML.g:9867:2: iv_ruleMetaclass= ruleMetaclass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaclassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetaclass=ruleMetaclass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaclass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaclass"


    // $ANTLR start "ruleMetaclass"
    // InternalKerML.g:9873:1: ruleMetaclass returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMetaclass() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9879:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:9880:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9880:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:9881:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:9881:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==40) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalKerML.g:9882:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:9882:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:9883:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,40,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getMetaclassAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMetaclassRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,108,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetaclassAccess().getMetaclassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetaclassRule());
              			}
              			newCompositeNode(grammarAccess.getMetaclassAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_23);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetaclassRule());
              			}
              			newCompositeNode(grammarAccess.getMetaclassAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaclass"


    // $ANTLR start "entryRuleOwnedMetadataFeature"
    // InternalKerML.g:9925:1: entryRuleOwnedMetadataFeature returns [EObject current=null] : iv_ruleOwnedMetadataFeature= ruleOwnedMetadataFeature EOF ;
    public final EObject entryRuleOwnedMetadataFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedMetadataFeature = null;


        try {
            // InternalKerML.g:9925:61: (iv_ruleOwnedMetadataFeature= ruleOwnedMetadataFeature EOF )
            // InternalKerML.g:9926:2: iv_ruleOwnedMetadataFeature= ruleOwnedMetadataFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedMetadataFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedMetadataFeature=ruleOwnedMetadataFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedMetadataFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedMetadataFeature"


    // $ANTLR start "ruleOwnedMetadataFeature"
    // InternalKerML.g:9932:1: ruleOwnedMetadataFeature returns [EObject current=null] : ( (otherlv_0= '@' | otherlv_1= 'metadata' ) (this_Identification_2= ruleIdentification[$current] (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) ) )? ( (lv_ownedRelationship_6_0= ruleMetadataTyping ) ) this_TypeBody_7= ruleTypeBody[$current] ) ;
    public final EObject ruleOwnedMetadataFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject this_Identification_2 = null;

        EObject lv_ownedRelationship_6_0 = null;

        EObject this_TypeBody_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:9938:2: ( ( (otherlv_0= '@' | otherlv_1= 'metadata' ) (this_Identification_2= ruleIdentification[$current] (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) ) )? ( (lv_ownedRelationship_6_0= ruleMetadataTyping ) ) this_TypeBody_7= ruleTypeBody[$current] ) )
            // InternalKerML.g:9939:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) (this_Identification_2= ruleIdentification[$current] (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) ) )? ( (lv_ownedRelationship_6_0= ruleMetadataTyping ) ) this_TypeBody_7= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9939:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) (this_Identification_2= ruleIdentification[$current] (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) ) )? ( (lv_ownedRelationship_6_0= ruleMetadataTyping ) ) this_TypeBody_7= ruleTypeBody[$current] )
            // InternalKerML.g:9940:3: (otherlv_0= '@' | otherlv_1= 'metadata' ) (this_Identification_2= ruleIdentification[$current] (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) ) )? ( (lv_ownedRelationship_6_0= ruleMetadataTyping ) ) this_TypeBody_7= ruleTypeBody[$current]
            {
            // InternalKerML.g:9940:3: (otherlv_0= '@' | otherlv_1= 'metadata' )
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==109) ) {
                alt202=1;
            }
            else if ( (LA202_0==110) ) {
                alt202=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;
            }
            switch (alt202) {
                case 1 :
                    // InternalKerML.g:9941:4: otherlv_0= '@'
                    {
                    otherlv_0=(Token)match(input,109,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getOwnedMetadataFeatureAccess().getCommercialAtKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:9946:4: otherlv_1= 'metadata'
                    {
                    otherlv_1=(Token)match(input,110,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getOwnedMetadataFeatureAccess().getMetadataKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:9951:3: (this_Identification_2= ruleIdentification[$current] (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) ) )?
            int alt204=2;
            switch ( input.LA(1) ) {
                case 14:
                    {
                    alt204=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA204_2 = input.LA(2);

                    if ( ((LA204_2>=68 && LA204_2<=69)) ) {
                        alt204=1;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA204_3 = input.LA(2);

                    if ( ((LA204_3>=68 && LA204_3<=69)) ) {
                        alt204=1;
                    }
                    }
                    break;
            }

            switch (alt204) {
                case 1 :
                    // InternalKerML.g:9952:4: this_Identification_2= ruleIdentification[$current] (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOwnedMetadataFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getOwnedMetadataFeatureAccess().getIdentificationParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_85);
                    this_Identification_2=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:9963:4: (otherlv_3= ':' | (otherlv_4= 'typed' otherlv_5= 'by' ) )
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( (LA203_0==68) ) {
                        alt203=1;
                    }
                    else if ( (LA203_0==69) ) {
                        alt203=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 203, 0, input);

                        throw nvae;
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalKerML.g:9964:5: otherlv_3= ':'
                            {
                            otherlv_3=(Token)match(input,68,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getOwnedMetadataFeatureAccess().getColonKeyword_1_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:9969:5: (otherlv_4= 'typed' otherlv_5= 'by' )
                            {
                            // InternalKerML.g:9969:5: (otherlv_4= 'typed' otherlv_5= 'by' )
                            // InternalKerML.g:9970:6: otherlv_4= 'typed' otherlv_5= 'by'
                            {
                            otherlv_4=(Token)match(input,69,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getOwnedMetadataFeatureAccess().getTypedKeyword_1_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getOwnedMetadataFeatureAccess().getByKeyword_1_1_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:9981:3: ( (lv_ownedRelationship_6_0= ruleMetadataTyping ) )
            // InternalKerML.g:9982:4: (lv_ownedRelationship_6_0= ruleMetadataTyping )
            {
            // InternalKerML.g:9982:4: (lv_ownedRelationship_6_0= ruleMetadataTyping )
            // InternalKerML.g:9983:5: lv_ownedRelationship_6_0= ruleMetadataTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOwnedMetadataFeatureAccess().getOwnedRelationshipMetadataTypingParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_ownedRelationship_6_0=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOwnedMetadataFeatureRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.MetadataTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getOwnedMetadataFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getOwnedMetadataFeatureAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_7=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_7;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedMetadataFeature"


    // $ANTLR start "entryRuleMetadataFeature"
    // InternalKerML.g:10015:1: entryRuleMetadataFeature returns [EObject current=null] : iv_ruleMetadataFeature= ruleMetadataFeature EOF ;
    public final EObject entryRuleMetadataFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataFeature = null;


        try {
            // InternalKerML.g:10015:56: (iv_ruleMetadataFeature= ruleMetadataFeature EOF )
            // InternalKerML.g:10016:2: iv_ruleMetadataFeature= ruleMetadataFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataFeature=ruleMetadataFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataFeature"


    // $ANTLR start "ruleMetadataFeature"
    // InternalKerML.g:10022:1: ruleMetadataFeature returns [EObject current=null] : ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] ) ;
    public final EObject ruleMetadataFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_MetadataFeatureDeclaration_2 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;

        EObject this_MetadataBody_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:10028:2: ( ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] ) )
            // InternalKerML.g:10029:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] )
            {
            // InternalKerML.g:10029:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] )
            // InternalKerML.g:10030:3: (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current]
            {
            // InternalKerML.g:10030:3: (otherlv_0= '@' | otherlv_1= 'metadata' )
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==109) ) {
                alt205=1;
            }
            else if ( (LA205_0==110) ) {
                alt205=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;
            }
            switch (alt205) {
                case 1 :
                    // InternalKerML.g:10031:4: otherlv_0= '@'
                    {
                    otherlv_0=(Token)match(input,109,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMetadataFeatureAccess().getCommercialAtKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10036:4: otherlv_1= 'metadata'
                    {
                    otherlv_1=(Token)match(input,110,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataFeatureAccess().getMetadataKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataFeatureAccess().getMetadataFeatureDeclarationParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_137);
            this_MetadataFeatureDeclaration_2=ruleMetadataFeatureDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataFeatureDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:10052:3: (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==25) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // InternalKerML.g:10053:4: otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )*
                    {
                    otherlv_3=(Token)match(input,25,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMetadataFeatureAccess().getAboutKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:10057:4: ( (lv_ownedRelationship_4_0= ruleAnnotation ) )
                    // InternalKerML.g:10058:5: (lv_ownedRelationship_4_0= ruleAnnotation )
                    {
                    // InternalKerML.g:10058:5: (lv_ownedRelationship_4_0= ruleAnnotation )
                    // InternalKerML.g:10059:6: lv_ownedRelationship_4_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_138);
                    lv_ownedRelationship_4_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_4_0,
                      							"org.omg.kerml.xtext.KerML.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:10076:4: (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )*
                    loop206:
                    do {
                        int alt206=2;
                        int LA206_0 = input.LA(1);

                        if ( (LA206_0==23) ) {
                            alt206=1;
                        }


                        switch (alt206) {
                    	case 1 :
                    	    // InternalKerML.g:10077:5: otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) )
                    	    {
                    	    otherlv_5=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getMetadataFeatureAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKerML.g:10081:5: ( (lv_ownedRelationship_6_0= ruleAnnotation ) )
                    	    // InternalKerML.g:10082:6: (lv_ownedRelationship_6_0= ruleAnnotation )
                    	    {
                    	    // InternalKerML.g:10082:6: (lv_ownedRelationship_6_0= ruleAnnotation )
                    	    // InternalKerML.g:10083:7: lv_ownedRelationship_6_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_138);
                    	    lv_ownedRelationship_6_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_6_0,
                    	      								"org.omg.kerml.xtext.KerML.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop206;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataFeatureAccess().getMetadataBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_MetadataBody_7=ruleMetadataBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataBody_7;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataFeature"


    // $ANTLR start "ruleMetadataFeatureDeclaration"
    // InternalKerML.g:10118:1: ruleMetadataFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) ) ;
    public final EObject ruleMetadataFeatureDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject this_Identification_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10124:2: ( ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) ) )
            // InternalKerML.g:10125:2: ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) )
            {
            // InternalKerML.g:10125:2: ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) )
            // InternalKerML.g:10126:3: (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) )
            {
            // InternalKerML.g:10126:3: (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )?
            int alt209=2;
            switch ( input.LA(1) ) {
                case 14:
                    {
                    alt209=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA209_2 = input.LA(2);

                    if ( ((LA209_2>=68 && LA209_2<=69)) ) {
                        alt209=1;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA209_3 = input.LA(2);

                    if ( ((LA209_3>=68 && LA209_3<=69)) ) {
                        alt209=1;
                    }
                    }
                    break;
            }

            switch (alt209) {
                case 1 :
                    // InternalKerML.g:10127:4: this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataFeatureDeclarationAccess().getIdentificationParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_85);
                    this_Identification_0=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:10138:4: (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) )
                    int alt208=2;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==68) ) {
                        alt208=1;
                    }
                    else if ( (LA208_0==69) ) {
                        alt208=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 208, 0, input);

                        throw nvae;
                    }
                    switch (alt208) {
                        case 1 :
                            // InternalKerML.g:10139:5: otherlv_1= ':'
                            {
                            otherlv_1=(Token)match(input,68,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getMetadataFeatureDeclarationAccess().getColonKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:10144:5: (otherlv_2= 'typed' otherlv_3= 'by' )
                            {
                            // InternalKerML.g:10144:5: (otherlv_2= 'typed' otherlv_3= 'by' )
                            // InternalKerML.g:10145:6: otherlv_2= 'typed' otherlv_3= 'by'
                            {
                            otherlv_2=(Token)match(input,69,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getMetadataFeatureDeclarationAccess().getTypedKeyword_0_1_1_0());
                              					
                            }
                            otherlv_3=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getMetadataFeatureDeclarationAccess().getByKeyword_0_1_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:10156:3: ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) )
            // InternalKerML.g:10157:4: (lv_ownedRelationship_4_0= ruleMetadataTyping )
            {
            // InternalKerML.g:10157:4: (lv_ownedRelationship_4_0= ruleMetadataTyping )
            // InternalKerML.g:10158:5: lv_ownedRelationship_4_0= ruleMetadataTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataFeatureDeclarationAccess().getOwnedRelationshipMetadataTypingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_4_0=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMetadataFeatureDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.MetadataTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataFeatureDeclaration"


    // $ANTLR start "entryRuleMetadataTyping"
    // InternalKerML.g:10179:1: entryRuleMetadataTyping returns [EObject current=null] : iv_ruleMetadataTyping= ruleMetadataTyping EOF ;
    public final EObject entryRuleMetadataTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataTyping = null;


        try {
            // InternalKerML.g:10179:55: (iv_ruleMetadataTyping= ruleMetadataTyping EOF )
            // InternalKerML.g:10180:2: iv_ruleMetadataTyping= ruleMetadataTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataTyping=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataTyping"


    // $ANTLR start "ruleMetadataTyping"
    // InternalKerML.g:10186:1: ruleMetadataTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleMetadataTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:10192:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:10193:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:10193:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:10194:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:10194:3: ( ruleQualifiedName )
            // InternalKerML.g:10195:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getMetadataTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMetadataTypingAccess().getTypeMetaclassCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataTyping"


    // $ANTLR start "ruleMetadataBody"
    // InternalKerML.g:10213:1: ruleMetadataBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject ruleMetadataBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10219:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:10220:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:10220:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==17) ) {
                alt211=1;
            }
            else if ( (LA211_0==18) ) {
                alt211=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;
            }
            switch (alt211) {
                case 1 :
                    // InternalKerML.g:10221:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getMetadataBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10226:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:10226:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:10227:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:10231:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop210:
                    do {
                        int alt210=5;
                        switch ( input.LA(1) ) {
                        case 137:
                            {
                            switch ( input.LA(2) ) {
                            case 30:
                                {
                                alt210=3;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 38:
                            case 40:
                            case 41:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 62:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 95:
                            case 97:
                            case 100:
                            case 105:
                            case 108:
                            case 109:
                            case 110:
                                {
                                alt210=1;
                                }
                                break;
                            case 32:
                                {
                                alt210=4;
                                }
                                break;

                            }

                            }
                            break;
                        case 138:
                            {
                            switch ( input.LA(2) ) {
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 38:
                            case 40:
                            case 41:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 62:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 95:
                            case 97:
                            case 100:
                            case 105:
                            case 108:
                            case 109:
                            case 110:
                                {
                                alt210=1;
                                }
                                break;
                            case 32:
                                {
                                alt210=4;
                                }
                                break;
                            case 30:
                                {
                                alt210=3;
                                }
                                break;

                            }

                            }
                            break;
                        case 139:
                            {
                            switch ( input.LA(2) ) {
                            case 30:
                                {
                                alt210=3;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_PREFIX_COMMENT:
                            case 16:
                            case 20:
                            case 24:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 38:
                            case 40:
                            case 41:
                            case 46:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 62:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 81:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 95:
                            case 97:
                            case 100:
                            case 105:
                            case 108:
                            case 109:
                            case 110:
                                {
                                alt210=1;
                                }
                                break;
                            case 32:
                                {
                                alt210=4;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case RULE_PREFIX_COMMENT:
                        case 16:
                        case 20:
                        case 24:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 38:
                        case 40:
                        case 41:
                        case 46:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 62:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 81:
                        case 84:
                        case 85:
                        case 86:
                        case 87:
                        case 95:
                        case 97:
                        case 100:
                        case 105:
                        case 108:
                        case 109:
                        case 110:
                            {
                            alt210=1;
                            }
                            break;
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 60:
                        case 71:
                        case 72:
                            {
                            alt210=2;
                            }
                            break;
                        case 30:
                            {
                            alt210=3;
                            }
                            break;
                        case 32:
                            {
                            alt210=4;
                            }
                            break;

                        }

                        switch (alt210) {
                    	case 1 :
                    	    // InternalKerML.g:10232:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:10232:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    // InternalKerML.g:10233:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    {
                    	    // InternalKerML.g:10233:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    // InternalKerML.g:10234:7: lv_ownedRelationship_2_0= ruleNonFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_ownedRelationship_2_0=ruleNonFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NonFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:10252:5: ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:10252:5: ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) )
                    	    // InternalKerML.g:10253:6: (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember )
                    	    {
                    	    // InternalKerML.g:10253:6: (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember )
                    	    // InternalKerML.g:10254:7: lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipMetadataBodyFeatureMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_ownedRelationship_3_0=ruleMetadataBodyFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.MetadataBodyFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:10272:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:10272:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:10273:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:10273:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:10274:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:10292:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:10292:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:10293:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:10293:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:10294:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop210;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getMetadataBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBody"


    // $ANTLR start "entryRuleMetadataBodyFeatureMember"
    // InternalKerML.g:10321:1: entryRuleMetadataBodyFeatureMember returns [EObject current=null] : iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF ;
    public final EObject entryRuleMetadataBodyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataBodyFeatureMember = null;


        try {
            // InternalKerML.g:10321:66: (iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF )
            // InternalKerML.g:10322:2: iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataBodyFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataBodyFeatureMember=ruleMetadataBodyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataBodyFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataBodyFeatureMember"


    // $ANTLR start "ruleMetadataBodyFeatureMember"
    // InternalKerML.g:10328:1: ruleMetadataBodyFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) ) ;
    public final EObject ruleMetadataBodyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10334:2: ( ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) ) )
            // InternalKerML.g:10335:2: ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) )
            {
            // InternalKerML.g:10335:2: ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) )
            // InternalKerML.g:10336:3: (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature )
            {
            // InternalKerML.g:10336:3: (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature )
            // InternalKerML.g:10337:4: lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMetadataBodyFeatureMemberAccess().getOwnedRelatedElementMetadataBodyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleMetadataBodyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getMetadataBodyFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.MetadataBodyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBodyFeatureMember"


    // $ANTLR start "entryRuleMetadataBodyFeature"
    // InternalKerML.g:10357:1: entryRuleMetadataBodyFeature returns [EObject current=null] : iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF ;
    public final EObject entryRuleMetadataBodyFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataBodyFeature = null;


        try {
            // InternalKerML.g:10357:60: (iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF )
            // InternalKerML.g:10358:2: iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataBodyFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataBodyFeature=ruleMetadataBodyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataBodyFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataBodyFeature"


    // $ANTLR start "ruleMetadataBodyFeature"
    // InternalKerML.g:10364:1: ruleMetadataBodyFeature returns [EObject current=null] : ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] ) ;
    public final EObject ruleMetadataBodyFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_3_0 = null;

        EObject this_FeatureSpecializationPart_4 = null;

        EObject this_ValuePart_5 = null;

        EObject this_MetadataBody_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:10370:2: ( ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] ) )
            // InternalKerML.g:10371:2: ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] )
            {
            // InternalKerML.g:10371:2: ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] )
            // InternalKerML.g:10372:3: (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current]
            {
            // InternalKerML.g:10372:3: (otherlv_0= 'feature' )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==60) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalKerML.g:10373:4: otherlv_0= 'feature'
                    {
                    otherlv_0=(Token)match(input,60,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMetadataBodyFeatureAccess().getFeatureKeyword_0());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:10378:3: (otherlv_1= ':>>' | otherlv_2= 'redefines' )?
            int alt213=3;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==71) ) {
                alt213=1;
            }
            else if ( (LA213_0==72) ) {
                alt213=2;
            }
            switch (alt213) {
                case 1 :
                    // InternalKerML.g:10379:4: otherlv_1= ':>>'
                    {
                    otherlv_1=(Token)match(input,71,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataBodyFeatureAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10384:4: otherlv_2= 'redefines'
                    {
                    otherlv_2=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMetadataBodyFeatureAccess().getRedefinesKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:10389:3: ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) )
            // InternalKerML.g:10390:4: (lv_ownedRelationship_3_0= ruleOwnedRedefinition )
            {
            // InternalKerML.g:10390:4: (lv_ownedRelationship_3_0= ruleOwnedRedefinition )
            // InternalKerML.g:10391:5: lv_ownedRelationship_3_0= ruleOwnedRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_ownedRelationship_3_0=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMetadataBodyFeatureRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_3_0,
              						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:10408:3: (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==42||(LA214_0>=66 && LA214_0<=72)||LA214_0==82) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalKerML.g:10409:4: this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getFeatureSpecializationPartParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_141);
                    this_FeatureSpecializationPart_4=ruleFeatureSpecializationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureSpecializationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:10421:3: (this_ValuePart_5= ruleValuePart[$current] )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( ((LA215_0>=78 && LA215_0<=80)) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalKerML.g:10422:4: this_ValuePart_5= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getValuePartParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_137);
                    this_ValuePart_5=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getMetadataBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_MetadataBody_6=ruleMetadataBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataBody_6;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBodyFeature"


    // $ANTLR start "entryRuleExpressionBody"
    // InternalKerML.g:10449:1: entryRuleExpressionBody returns [EObject current=null] : iv_ruleExpressionBody= ruleExpressionBody EOF ;
    public final EObject entryRuleExpressionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionBody = null;


        try {
            // InternalKerML.g:10449:55: (iv_ruleExpressionBody= ruleExpressionBody EOF )
            // InternalKerML.g:10450:2: iv_ruleExpressionBody= ruleExpressionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionBody=ruleExpressionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionBody"


    // $ANTLR start "ruleExpressionBody"
    // InternalKerML.g:10456:1: ruleExpressionBody returns [EObject current=null] : (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' ) ;
    public final EObject ruleExpressionBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_FunctionBodyPart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:10462:2: ( (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' ) )
            // InternalKerML.g:10463:2: (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' )
            {
            // InternalKerML.g:10463:2: (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' )
            // InternalKerML.g:10464:3: otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,18,FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExpressionBodyAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionBodyRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionBodyAccess().getFunctionBodyPartParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_122);
            this_FunctionBodyPart_1=ruleFunctionBodyPart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBodyPart_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExpressionBodyAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionBody"


    // $ANTLR start "entryRuleOwnedExpressionMember"
    // InternalKerML.g:10487:1: entryRuleOwnedExpressionMember returns [EObject current=null] : iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF ;
    public final EObject entryRuleOwnedExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpressionMember = null;


        try {
            // InternalKerML.g:10487:62: (iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF )
            // InternalKerML.g:10488:2: iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpressionMember=ruleOwnedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpressionMember"


    // $ANTLR start "ruleOwnedExpressionMember"
    // InternalKerML.g:10494:1: ruleOwnedExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) ;
    public final EObject ruleOwnedExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10500:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:10501:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:10501:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            // InternalKerML.g:10502:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            {
            // InternalKerML.g:10502:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            // InternalKerML.g:10503:4: lv_ownedRelatedElement_0_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpressionMember"


    // $ANTLR start "entryRuleOwnedExpression"
    // InternalKerML.g:10523:1: entryRuleOwnedExpression returns [EObject current=null] : iv_ruleOwnedExpression= ruleOwnedExpression EOF ;
    public final EObject entryRuleOwnedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpression = null;


        try {
            // InternalKerML.g:10523:56: (iv_ruleOwnedExpression= ruleOwnedExpression EOF )
            // InternalKerML.g:10524:2: iv_ruleOwnedExpression= ruleOwnedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpression=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpression"


    // $ANTLR start "ruleOwnedExpression"
    // InternalKerML.g:10530:1: ruleOwnedExpression returns [EObject current=null] : this_ConditionalExpression_0= ruleConditionalExpression ;
    public final EObject ruleOwnedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalExpression_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10536:2: (this_ConditionalExpression_0= ruleConditionalExpression )
            // InternalKerML.g:10537:2: this_ConditionalExpression_0= ruleConditionalExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getOwnedExpressionAccess().getConditionalExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ConditionalExpression_0=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ConditionalExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpression"


    // $ANTLR start "entryRuleOwnedExpressionReference"
    // InternalKerML.g:10548:1: entryRuleOwnedExpressionReference returns [EObject current=null] : iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF ;
    public final EObject entryRuleOwnedExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpressionReference = null;


        try {
            // InternalKerML.g:10548:65: (iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF )
            // InternalKerML.g:10549:2: iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpressionReference=ruleOwnedExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpressionReference"


    // $ANTLR start "ruleOwnedExpressionReference"
    // InternalKerML.g:10555:1: ruleOwnedExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) ) ;
    public final EObject ruleOwnedExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10561:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) ) )
            // InternalKerML.g:10562:2: ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) )
            {
            // InternalKerML.g:10562:2: ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) )
            // InternalKerML.g:10563:3: (lv_ownedRelationship_0_0= ruleOwnedExpressionMember )
            {
            // InternalKerML.g:10563:3: (lv_ownedRelationship_0_0= ruleOwnedExpressionMember )
            // InternalKerML.g:10564:4: lv_ownedRelationship_0_0= ruleOwnedExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedExpressionReferenceAccess().getOwnedRelationshipOwnedExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleOwnedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpressionReference"


    // $ANTLR start "entryRuleConditionalExpression"
    // InternalKerML.g:10584:1: entryRuleConditionalExpression returns [EObject current=null] : iv_ruleConditionalExpression= ruleConditionalExpression EOF ;
    public final EObject entryRuleConditionalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpression = null;


        try {
            // InternalKerML.g:10584:62: (iv_ruleConditionalExpression= ruleConditionalExpression EOF )
            // InternalKerML.g:10585:2: iv_ruleConditionalExpression= ruleConditionalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalExpression=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalExpression"


    // $ANTLR start "ruleConditionalExpression"
    // InternalKerML.g:10591:1: ruleConditionalExpression returns [EObject current=null] : (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) ) ;
    public final EObject ruleConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_NullCoalescingExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        EObject lv_operand_5_0 = null;

        EObject lv_operand_7_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10597:2: ( (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) ) )
            // InternalKerML.g:10598:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) )
            {
            // InternalKerML.g:10598:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) )
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==EOF||(LA216_0>=RULE_STRING_VALUE && LA216_0<=RULE_UNRESTRICTED_NAME)||(LA216_0>=17 && LA216_0<=18)||(LA216_0>=33 && LA216_0<=34)||LA216_0==44||LA216_0==89||(LA216_0>=103 && LA216_0<=104)||LA216_0==107||LA216_0==109||(LA216_0>=123 && LA216_0<=125)||(LA216_0>=128 && LA216_0<=129)||LA216_0==133||LA216_0==136) ) {
                alt216=1;
            }
            else if ( (LA216_0==113) ) {
                alt216=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }
            switch (alt216) {
                case 1 :
                    // InternalKerML.g:10599:3: this_NullCoalescingExpression_0= ruleNullCoalescingExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NullCoalescingExpression_0=ruleNullCoalescingExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullCoalescingExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10608:3: ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) )
                    {
                    // InternalKerML.g:10608:3: ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) )
                    // InternalKerML.g:10609:4: () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) )
                    {
                    // InternalKerML.g:10609:4: ()
                    // InternalKerML.g:10610:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConditionalExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:10616:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalKerML.g:10617:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalKerML.g:10617:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalKerML.g:10618:6: lv_operator_2_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalOperatorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_operator_2_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:10635:4: ( (lv_operand_3_0= ruleNullCoalescingExpression ) )
                    // InternalKerML.g:10636:5: (lv_operand_3_0= ruleNullCoalescingExpression )
                    {
                    // InternalKerML.g:10636:5: (lv_operand_3_0= ruleNullCoalescingExpression )
                    // InternalKerML.g:10637:6: lv_operand_3_0= ruleNullCoalescingExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandNullCoalescingExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_143);
                    lv_operand_3_0=ruleNullCoalescingExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NullCoalescingExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,111,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_3());
                      			
                    }
                    // InternalKerML.g:10658:4: ( (lv_operand_5_0= ruleOwnedExpressionReference ) )
                    // InternalKerML.g:10659:5: (lv_operand_5_0= ruleOwnedExpressionReference )
                    {
                    // InternalKerML.g:10659:5: (lv_operand_5_0= ruleOwnedExpressionReference )
                    // InternalKerML.g:10660:6: lv_operand_5_0= ruleOwnedExpressionReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionReferenceParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_144);
                    lv_operand_5_0=ruleOwnedExpressionReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_5_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,112,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getConditionalExpressionAccess().getElseKeyword_1_5());
                      			
                    }
                    // InternalKerML.g:10681:4: ( (lv_operand_7_0= ruleOwnedExpressionReference ) )
                    // InternalKerML.g:10682:5: (lv_operand_7_0= ruleOwnedExpressionReference )
                    {
                    // InternalKerML.g:10682:5: (lv_operand_7_0= ruleOwnedExpressionReference )
                    // InternalKerML.g:10683:6: lv_operand_7_0= ruleOwnedExpressionReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionReferenceParserRuleCall_1_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_7_0=ruleOwnedExpressionReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalExpression"


    // $ANTLR start "entryRuleConditionalOperator"
    // InternalKerML.g:10705:1: entryRuleConditionalOperator returns [String current=null] : iv_ruleConditionalOperator= ruleConditionalOperator EOF ;
    public final String entryRuleConditionalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalOperator = null;


        try {
            // InternalKerML.g:10705:59: (iv_ruleConditionalOperator= ruleConditionalOperator EOF )
            // InternalKerML.g:10706:2: iv_ruleConditionalOperator= ruleConditionalOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOperator=ruleConditionalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalKerML.g:10712:1: ruleConditionalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'if' ;
    public final AntlrDatatypeRuleToken ruleConditionalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:10718:2: (kw= 'if' )
            // InternalKerML.g:10719:2: kw= 'if'
            {
            kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalOperatorAccess().getIfKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "entryRuleNullCoalescingExpression"
    // InternalKerML.g:10727:1: entryRuleNullCoalescingExpression returns [EObject current=null] : iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF ;
    public final EObject entryRuleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullCoalescingExpression = null;


        try {
            // InternalKerML.g:10727:65: (iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF )
            // InternalKerML.g:10728:2: iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingExpression=ruleNullCoalescingExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingExpression"


    // $ANTLR start "ruleNullCoalescingExpression"
    // InternalKerML.g:10734:1: ruleNullCoalescingExpression returns [EObject current=null] : (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* ) ;
    public final EObject ruleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ImpliesExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10740:2: ( (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* ) )
            // InternalKerML.g:10741:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* )
            {
            // InternalKerML.g:10741:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* )
            // InternalKerML.g:10742:3: this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getImpliesExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_145);
            this_ImpliesExpression_0=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ImpliesExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:10750:3: ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )*
            loop217:
            do {
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==114) ) {
                    alt217=1;
                }


                switch (alt217) {
            	case 1 :
            	    // InternalKerML.g:10751:4: () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) )
            	    {
            	    // InternalKerML.g:10751:4: ()
            	    // InternalKerML.g:10752:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:10758:4: ( (lv_operator_2_0= ruleNullCoalescingOperator ) )
            	    // InternalKerML.g:10759:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    {
            	    // InternalKerML.g:10759:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    // InternalKerML.g:10760:6: lv_operator_2_0= ruleNullCoalescingOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleNullCoalescingOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NullCoalescingOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:10777:4: ( (lv_operand_3_0= ruleImpliesExpressionReference ) )
            	    // InternalKerML.g:10778:5: (lv_operand_3_0= ruleImpliesExpressionReference )
            	    {
            	    // InternalKerML.g:10778:5: (lv_operand_3_0= ruleImpliesExpressionReference )
            	    // InternalKerML.g:10779:6: lv_operand_3_0= ruleImpliesExpressionReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperandImpliesExpressionReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_145);
            	    lv_operand_3_0=ruleImpliesExpressionReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpressionReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop217;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingExpression"


    // $ANTLR start "entryRuleNullCoalescingOperator"
    // InternalKerML.g:10801:1: entryRuleNullCoalescingOperator returns [String current=null] : iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF ;
    public final String entryRuleNullCoalescingOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNullCoalescingOperator = null;


        try {
            // InternalKerML.g:10801:62: (iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF )
            // InternalKerML.g:10802:2: iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingOperator=ruleNullCoalescingOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingOperator"


    // $ANTLR start "ruleNullCoalescingOperator"
    // InternalKerML.g:10808:1: ruleNullCoalescingOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '??' ;
    public final AntlrDatatypeRuleToken ruleNullCoalescingOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:10814:2: (kw= '??' )
            // InternalKerML.g:10815:2: kw= '??'
            {
            kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingOperator"


    // $ANTLR start "entryRuleImpliesExpressionReference"
    // InternalKerML.g:10823:1: entryRuleImpliesExpressionReference returns [EObject current=null] : iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF ;
    public final EObject entryRuleImpliesExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpressionReference = null;


        try {
            // InternalKerML.g:10823:67: (iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF )
            // InternalKerML.g:10824:2: iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpressionReference=ruleImpliesExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpressionReference"


    // $ANTLR start "ruleImpliesExpressionReference"
    // InternalKerML.g:10830:1: ruleImpliesExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) ) ;
    public final EObject ruleImpliesExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10836:2: ( ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) ) )
            // InternalKerML.g:10837:2: ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) )
            {
            // InternalKerML.g:10837:2: ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) )
            // InternalKerML.g:10838:3: (lv_ownedRelationship_0_0= ruleImpliesExpressionMember )
            {
            // InternalKerML.g:10838:3: (lv_ownedRelationship_0_0= ruleImpliesExpressionMember )
            // InternalKerML.g:10839:4: lv_ownedRelationship_0_0= ruleImpliesExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImpliesExpressionReferenceAccess().getOwnedRelationshipImpliesExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleImpliesExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImpliesExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpressionReference"


    // $ANTLR start "entryRuleImpliesExpressionMember"
    // InternalKerML.g:10859:1: entryRuleImpliesExpressionMember returns [EObject current=null] : iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF ;
    public final EObject entryRuleImpliesExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpressionMember = null;


        try {
            // InternalKerML.g:10859:64: (iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF )
            // InternalKerML.g:10860:2: iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpressionMember=ruleImpliesExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpressionMember"


    // $ANTLR start "ruleImpliesExpressionMember"
    // InternalKerML.g:10866:1: ruleImpliesExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) ) ;
    public final EObject ruleImpliesExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10872:2: ( ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) ) )
            // InternalKerML.g:10873:2: ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) )
            {
            // InternalKerML.g:10873:2: ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) )
            // InternalKerML.g:10874:3: (lv_ownedRelatedElement_0_0= ruleImpliesExpression )
            {
            // InternalKerML.g:10874:3: (lv_ownedRelatedElement_0_0= ruleImpliesExpression )
            // InternalKerML.g:10875:4: lv_ownedRelatedElement_0_0= ruleImpliesExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImpliesExpressionMemberAccess().getOwnedRelatedElementImpliesExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImpliesExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpressionMember"


    // $ANTLR start "entryRuleImpliesExpression"
    // InternalKerML.g:10895:1: entryRuleImpliesExpression returns [EObject current=null] : iv_ruleImpliesExpression= ruleImpliesExpression EOF ;
    public final EObject entryRuleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpression = null;


        try {
            // InternalKerML.g:10895:58: (iv_ruleImpliesExpression= ruleImpliesExpression EOF )
            // InternalKerML.g:10896:2: iv_ruleImpliesExpression= ruleImpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpression=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpression"


    // $ANTLR start "ruleImpliesExpression"
    // InternalKerML.g:10902:1: ruleImpliesExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* ) ;
    public final EObject ruleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10908:2: ( (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* ) )
            // InternalKerML.g:10909:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* )
            {
            // InternalKerML.g:10909:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* )
            // InternalKerML.g:10910:3: this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_146);
            this_OrExpression_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:10918:3: ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )*
            loop218:
            do {
                int alt218=2;
                int LA218_0 = input.LA(1);

                if ( (LA218_0==115) ) {
                    alt218=1;
                }


                switch (alt218) {
            	case 1 :
            	    // InternalKerML.g:10919:4: () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) )
            	    {
            	    // InternalKerML.g:10919:4: ()
            	    // InternalKerML.g:10920:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getImpliesExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:10926:4: ( (lv_operator_2_0= ruleImpliesOperator ) )
            	    // InternalKerML.g:10927:5: (lv_operator_2_0= ruleImpliesOperator )
            	    {
            	    // InternalKerML.g:10927:5: (lv_operator_2_0= ruleImpliesOperator )
            	    // InternalKerML.g:10928:6: lv_operator_2_0= ruleImpliesOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleImpliesOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:10945:4: ( (lv_operand_3_0= ruleOrExpressionReference ) )
            	    // InternalKerML.g:10946:5: (lv_operand_3_0= ruleOrExpressionReference )
            	    {
            	    // InternalKerML.g:10946:5: (lv_operand_3_0= ruleOrExpressionReference )
            	    // InternalKerML.g:10947:6: lv_operand_3_0= ruleOrExpressionReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperandOrExpressionReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_operand_3_0=ruleOrExpressionReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpressionReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop218;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpression"


    // $ANTLR start "entryRuleImpliesOperator"
    // InternalKerML.g:10969:1: entryRuleImpliesOperator returns [String current=null] : iv_ruleImpliesOperator= ruleImpliesOperator EOF ;
    public final String entryRuleImpliesOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImpliesOperator = null;


        try {
            // InternalKerML.g:10969:55: (iv_ruleImpliesOperator= ruleImpliesOperator EOF )
            // InternalKerML.g:10970:2: iv_ruleImpliesOperator= ruleImpliesOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesOperator=ruleImpliesOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesOperator"


    // $ANTLR start "ruleImpliesOperator"
    // InternalKerML.g:10976:1: ruleImpliesOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'implies' ;
    public final AntlrDatatypeRuleToken ruleImpliesOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:10982:2: (kw= 'implies' )
            // InternalKerML.g:10983:2: kw= 'implies'
            {
            kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getImpliesOperatorAccess().getImpliesKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesOperator"


    // $ANTLR start "entryRuleOrExpressionReference"
    // InternalKerML.g:10991:1: entryRuleOrExpressionReference returns [EObject current=null] : iv_ruleOrExpressionReference= ruleOrExpressionReference EOF ;
    public final EObject entryRuleOrExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpressionReference = null;


        try {
            // InternalKerML.g:10991:62: (iv_ruleOrExpressionReference= ruleOrExpressionReference EOF )
            // InternalKerML.g:10992:2: iv_ruleOrExpressionReference= ruleOrExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpressionReference=ruleOrExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpressionReference"


    // $ANTLR start "ruleOrExpressionReference"
    // InternalKerML.g:10998:1: ruleOrExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) ) ;
    public final EObject ruleOrExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11004:2: ( ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) ) )
            // InternalKerML.g:11005:2: ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) )
            {
            // InternalKerML.g:11005:2: ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) )
            // InternalKerML.g:11006:3: (lv_ownedRelationship_0_0= ruleOrExpressionMember )
            {
            // InternalKerML.g:11006:3: (lv_ownedRelationship_0_0= ruleOrExpressionMember )
            // InternalKerML.g:11007:4: lv_ownedRelationship_0_0= ruleOrExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOrExpressionReferenceAccess().getOwnedRelationshipOrExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleOrExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOrExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpressionReference"


    // $ANTLR start "entryRuleOrExpressionMember"
    // InternalKerML.g:11027:1: entryRuleOrExpressionMember returns [EObject current=null] : iv_ruleOrExpressionMember= ruleOrExpressionMember EOF ;
    public final EObject entryRuleOrExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpressionMember = null;


        try {
            // InternalKerML.g:11027:59: (iv_ruleOrExpressionMember= ruleOrExpressionMember EOF )
            // InternalKerML.g:11028:2: iv_ruleOrExpressionMember= ruleOrExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpressionMember=ruleOrExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpressionMember"


    // $ANTLR start "ruleOrExpressionMember"
    // InternalKerML.g:11034:1: ruleOrExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) ) ;
    public final EObject ruleOrExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11040:2: ( ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) ) )
            // InternalKerML.g:11041:2: ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) )
            {
            // InternalKerML.g:11041:2: ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) )
            // InternalKerML.g:11042:3: (lv_ownedRelatedElement_0_0= ruleOrExpression )
            {
            // InternalKerML.g:11042:3: (lv_ownedRelatedElement_0_0= ruleOrExpression )
            // InternalKerML.g:11043:4: lv_ownedRelatedElement_0_0= ruleOrExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOrExpressionMemberAccess().getOwnedRelatedElementOrExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOrExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpressionMember"


    // $ANTLR start "entryRuleOrExpression"
    // InternalKerML.g:11063:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalKerML.g:11063:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalKerML.g:11064:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalKerML.g:11070:1: ruleOrExpression returns [EObject current=null] : (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XorExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        AntlrDatatypeRuleToken lv_operator_4_0 = null;

        EObject lv_operand_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11076:2: ( (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* ) )
            // InternalKerML.g:11077:2: (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* )
            {
            // InternalKerML.g:11077:2: (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* )
            // InternalKerML.g:11078:3: this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_147);
            this_XorExpression_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11086:3: ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )*
            loop220:
            do {
                int alt220=2;
                int LA220_0 = input.LA(1);

                if ( ((LA220_0>=116 && LA220_0<=117)) ) {
                    alt220=1;
                }


                switch (alt220) {
            	case 1 :
            	    // InternalKerML.g:11087:4: () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) )
            	    {
            	    // InternalKerML.g:11087:4: ()
            	    // InternalKerML.g:11088:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getOrExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11094:4: ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) )
            	    int alt219=2;
            	    int LA219_0 = input.LA(1);

            	    if ( (LA219_0==116) ) {
            	        alt219=1;
            	    }
            	    else if ( (LA219_0==117) ) {
            	        alt219=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 219, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt219) {
            	        case 1 :
            	            // InternalKerML.g:11095:5: ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )
            	            {
            	            // InternalKerML.g:11095:5: ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )
            	            // InternalKerML.g:11096:6: ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) )
            	            {
            	            // InternalKerML.g:11096:6: ( (lv_operator_2_0= ruleOrOperator ) )
            	            // InternalKerML.g:11097:7: (lv_operator_2_0= ruleOrOperator )
            	            {
            	            // InternalKerML.g:11097:7: (lv_operator_2_0= ruleOrOperator )
            	            // InternalKerML.g:11098:8: lv_operator_2_0= ruleOrOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_2_0=ruleOrOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_2_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.OrOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11115:6: ( (lv_operand_3_0= ruleXorExpression ) )
            	            // InternalKerML.g:11116:7: (lv_operand_3_0= ruleXorExpression )
            	            {
            	            // InternalKerML.g:11116:7: (lv_operand_3_0= ruleXorExpression )
            	            // InternalKerML.g:11117:8: lv_operand_3_0= ruleXorExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperandXorExpressionParserRuleCall_1_1_0_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_147);
            	            lv_operand_3_0=ruleXorExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_3_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:11136:5: ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) )
            	            {
            	            // InternalKerML.g:11136:5: ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) )
            	            // InternalKerML.g:11137:6: ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) )
            	            {
            	            // InternalKerML.g:11137:6: ( (lv_operator_4_0= ruleConditionalOrOperator ) )
            	            // InternalKerML.g:11138:7: (lv_operator_4_0= ruleConditionalOrOperator )
            	            {
            	            // InternalKerML.g:11138:7: (lv_operator_4_0= ruleConditionalOrOperator )
            	            // InternalKerML.g:11139:8: lv_operator_4_0= ruleConditionalOrOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_4_0=ruleConditionalOrOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_4_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalOrOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11156:6: ( (lv_operand_5_0= ruleXorExpressionReference ) )
            	            // InternalKerML.g:11157:7: (lv_operand_5_0= ruleXorExpressionReference )
            	            {
            	            // InternalKerML.g:11157:7: (lv_operand_5_0= ruleXorExpressionReference )
            	            // InternalKerML.g:11158:8: lv_operand_5_0= ruleXorExpressionReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperandXorExpressionReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_147);
            	            lv_operand_5_0=ruleXorExpressionReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_5_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpressionReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop220;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleOrOperator"
    // InternalKerML.g:11182:1: entryRuleOrOperator returns [String current=null] : iv_ruleOrOperator= ruleOrOperator EOF ;
    public final String entryRuleOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrOperator = null;


        try {
            // InternalKerML.g:11182:50: (iv_ruleOrOperator= ruleOrOperator EOF )
            // InternalKerML.g:11183:2: iv_ruleOrOperator= ruleOrOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrOperator=ruleOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalKerML.g:11189:1: ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
    public final AntlrDatatypeRuleToken ruleOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11195:2: (kw= '|' )
            // InternalKerML.g:11196:2: kw= '|'
            {
            kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOrOperatorAccess().getVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "entryRuleConditionalOrOperator"
    // InternalKerML.g:11204:1: entryRuleConditionalOrOperator returns [String current=null] : iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF ;
    public final String entryRuleConditionalOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalOrOperator = null;


        try {
            // InternalKerML.g:11204:61: (iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF )
            // InternalKerML.g:11205:2: iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOrOperator=ruleConditionalOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOrOperator"


    // $ANTLR start "ruleConditionalOrOperator"
    // InternalKerML.g:11211:1: ruleConditionalOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'or' ;
    public final AntlrDatatypeRuleToken ruleConditionalOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11217:2: (kw= 'or' )
            // InternalKerML.g:11218:2: kw= 'or'
            {
            kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalOrOperatorAccess().getOrKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOrOperator"


    // $ANTLR start "entryRuleXorExpressionReference"
    // InternalKerML.g:11226:1: entryRuleXorExpressionReference returns [EObject current=null] : iv_ruleXorExpressionReference= ruleXorExpressionReference EOF ;
    public final EObject entryRuleXorExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpressionReference = null;


        try {
            // InternalKerML.g:11226:63: (iv_ruleXorExpressionReference= ruleXorExpressionReference EOF )
            // InternalKerML.g:11227:2: iv_ruleXorExpressionReference= ruleXorExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpressionReference=ruleXorExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpressionReference"


    // $ANTLR start "ruleXorExpressionReference"
    // InternalKerML.g:11233:1: ruleXorExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) ) ;
    public final EObject ruleXorExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11239:2: ( ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) ) )
            // InternalKerML.g:11240:2: ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) )
            {
            // InternalKerML.g:11240:2: ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) )
            // InternalKerML.g:11241:3: (lv_ownedRelationship_0_0= ruleXorExpressionMember )
            {
            // InternalKerML.g:11241:3: (lv_ownedRelationship_0_0= ruleXorExpressionMember )
            // InternalKerML.g:11242:4: lv_ownedRelationship_0_0= ruleXorExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getXorExpressionReferenceAccess().getOwnedRelationshipXorExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleXorExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getXorExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpressionReference"


    // $ANTLR start "entryRuleXorExpressionMember"
    // InternalKerML.g:11262:1: entryRuleXorExpressionMember returns [EObject current=null] : iv_ruleXorExpressionMember= ruleXorExpressionMember EOF ;
    public final EObject entryRuleXorExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpressionMember = null;


        try {
            // InternalKerML.g:11262:60: (iv_ruleXorExpressionMember= ruleXorExpressionMember EOF )
            // InternalKerML.g:11263:2: iv_ruleXorExpressionMember= ruleXorExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpressionMember=ruleXorExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpressionMember"


    // $ANTLR start "ruleXorExpressionMember"
    // InternalKerML.g:11269:1: ruleXorExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) ) ;
    public final EObject ruleXorExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11275:2: ( ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) ) )
            // InternalKerML.g:11276:2: ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) )
            {
            // InternalKerML.g:11276:2: ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) )
            // InternalKerML.g:11277:3: (lv_ownedRelatedElement_0_0= ruleXorExpression )
            {
            // InternalKerML.g:11277:3: (lv_ownedRelatedElement_0_0= ruleXorExpression )
            // InternalKerML.g:11278:4: lv_ownedRelatedElement_0_0= ruleXorExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getXorExpressionMemberAccess().getOwnedRelatedElementXorExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getXorExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpressionMember"


    // $ANTLR start "entryRuleXorExpression"
    // InternalKerML.g:11298:1: entryRuleXorExpression returns [EObject current=null] : iv_ruleXorExpression= ruleXorExpression EOF ;
    public final EObject entryRuleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpression = null;


        try {
            // InternalKerML.g:11298:54: (iv_ruleXorExpression= ruleXorExpression EOF )
            // InternalKerML.g:11299:2: iv_ruleXorExpression= ruleXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpression=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpression"


    // $ANTLR start "ruleXorExpression"
    // InternalKerML.g:11305:1: ruleXorExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11311:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) )
            // InternalKerML.g:11312:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            {
            // InternalKerML.g:11312:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            // InternalKerML.g:11313:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_148);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11321:3: ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
            loop221:
            do {
                int alt221=2;
                int LA221_0 = input.LA(1);

                if ( (LA221_0==118) ) {
                    alt221=1;
                }


                switch (alt221) {
            	case 1 :
            	    // InternalKerML.g:11322:4: () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) )
            	    {
            	    // InternalKerML.g:11322:4: ()
            	    // InternalKerML.g:11323:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getXorExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11329:4: ( (lv_operator_2_0= ruleXorOperator ) )
            	    // InternalKerML.g:11330:5: (lv_operator_2_0= ruleXorOperator )
            	    {
            	    // InternalKerML.g:11330:5: (lv_operator_2_0= ruleXorOperator )
            	    // InternalKerML.g:11331:6: lv_operator_2_0= ruleXorOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleXorOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.XorOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:11348:4: ( (lv_operand_3_0= ruleAndExpression ) )
            	    // InternalKerML.g:11349:5: (lv_operand_3_0= ruleAndExpression )
            	    {
            	    // InternalKerML.g:11349:5: (lv_operand_3_0= ruleAndExpression )
            	    // InternalKerML.g:11350:6: lv_operand_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperandAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_148);
            	    lv_operand_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop221;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpression"


    // $ANTLR start "entryRuleXorOperator"
    // InternalKerML.g:11372:1: entryRuleXorOperator returns [String current=null] : iv_ruleXorOperator= ruleXorOperator EOF ;
    public final String entryRuleXorOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXorOperator = null;


        try {
            // InternalKerML.g:11372:51: (iv_ruleXorOperator= ruleXorOperator EOF )
            // InternalKerML.g:11373:2: iv_ruleXorOperator= ruleXorOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorOperator=ruleXorOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalKerML.g:11379:1: ruleXorOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'xor' ;
    public final AntlrDatatypeRuleToken ruleXorOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11385:2: (kw= 'xor' )
            // InternalKerML.g:11386:2: kw= 'xor'
            {
            kw=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getXorOperatorAccess().getXorKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "entryRuleAndExpression"
    // InternalKerML.g:11394:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalKerML.g:11394:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalKerML.g:11395:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalKerML.g:11401:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        AntlrDatatypeRuleToken lv_operator_4_0 = null;

        EObject lv_operand_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11407:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* ) )
            // InternalKerML.g:11408:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* )
            {
            // InternalKerML.g:11408:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* )
            // InternalKerML.g:11409:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_149);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11417:3: ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )*
            loop223:
            do {
                int alt223=2;
                int LA223_0 = input.LA(1);

                if ( ((LA223_0>=119 && LA223_0<=120)) ) {
                    alt223=1;
                }


                switch (alt223) {
            	case 1 :
            	    // InternalKerML.g:11418:4: () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) )
            	    {
            	    // InternalKerML.g:11418:4: ()
            	    // InternalKerML.g:11419:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAndExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11425:4: ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) )
            	    int alt222=2;
            	    int LA222_0 = input.LA(1);

            	    if ( (LA222_0==119) ) {
            	        alt222=1;
            	    }
            	    else if ( (LA222_0==120) ) {
            	        alt222=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 222, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt222) {
            	        case 1 :
            	            // InternalKerML.g:11426:5: ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )
            	            {
            	            // InternalKerML.g:11426:5: ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )
            	            // InternalKerML.g:11427:6: ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) )
            	            {
            	            // InternalKerML.g:11427:6: ( (lv_operator_2_0= ruleAndOperator ) )
            	            // InternalKerML.g:11428:7: (lv_operator_2_0= ruleAndOperator )
            	            {
            	            // InternalKerML.g:11428:7: (lv_operator_2_0= ruleAndOperator )
            	            // InternalKerML.g:11429:8: lv_operator_2_0= ruleAndOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_2_0=ruleAndOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_2_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.AndOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11446:6: ( (lv_operand_3_0= ruleEqualityExpression ) )
            	            // InternalKerML.g:11447:7: (lv_operand_3_0= ruleEqualityExpression )
            	            {
            	            // InternalKerML.g:11447:7: (lv_operand_3_0= ruleEqualityExpression )
            	            // InternalKerML.g:11448:8: lv_operand_3_0= ruleEqualityExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionParserRuleCall_1_1_0_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_149);
            	            lv_operand_3_0=ruleEqualityExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_3_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:11467:5: ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) )
            	            {
            	            // InternalKerML.g:11467:5: ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) )
            	            // InternalKerML.g:11468:6: ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) )
            	            {
            	            // InternalKerML.g:11468:6: ( (lv_operator_4_0= ruleConditionalAndOperator ) )
            	            // InternalKerML.g:11469:7: (lv_operator_4_0= ruleConditionalAndOperator )
            	            {
            	            // InternalKerML.g:11469:7: (lv_operator_4_0= ruleConditionalAndOperator )
            	            // InternalKerML.g:11470:8: lv_operator_4_0= ruleConditionalAndOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_4_0=ruleConditionalAndOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_4_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalAndOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11487:6: ( (lv_operand_5_0= ruleEqualityExpressionReference ) )
            	            // InternalKerML.g:11488:7: (lv_operand_5_0= ruleEqualityExpressionReference )
            	            {
            	            // InternalKerML.g:11488:7: (lv_operand_5_0= ruleEqualityExpressionReference )
            	            // InternalKerML.g:11489:8: lv_operand_5_0= ruleEqualityExpressionReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_149);
            	            lv_operand_5_0=ruleEqualityExpressionReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_5_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpressionReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop223;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleAndOperator"
    // InternalKerML.g:11513:1: entryRuleAndOperator returns [String current=null] : iv_ruleAndOperator= ruleAndOperator EOF ;
    public final String entryRuleAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAndOperator = null;


        try {
            // InternalKerML.g:11513:51: (iv_ruleAndOperator= ruleAndOperator EOF )
            // InternalKerML.g:11514:2: iv_ruleAndOperator= ruleAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndOperator=ruleAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalKerML.g:11520:1: ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11526:2: (kw= '&' )
            // InternalKerML.g:11527:2: kw= '&'
            {
            kw=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "entryRuleConditionalAndOperator"
    // InternalKerML.g:11535:1: entryRuleConditionalAndOperator returns [String current=null] : iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF ;
    public final String entryRuleConditionalAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalAndOperator = null;


        try {
            // InternalKerML.g:11535:62: (iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF )
            // InternalKerML.g:11536:2: iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalAndOperator=ruleConditionalAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalAndOperator"


    // $ANTLR start "ruleConditionalAndOperator"
    // InternalKerML.g:11542:1: ruleConditionalAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'and' ;
    public final AntlrDatatypeRuleToken ruleConditionalAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11548:2: (kw= 'and' )
            // InternalKerML.g:11549:2: kw= 'and'
            {
            kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalAndOperatorAccess().getAndKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalAndOperator"


    // $ANTLR start "entryRuleEqualityExpressionReference"
    // InternalKerML.g:11557:1: entryRuleEqualityExpressionReference returns [EObject current=null] : iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF ;
    public final EObject entryRuleEqualityExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpressionReference = null;


        try {
            // InternalKerML.g:11557:68: (iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF )
            // InternalKerML.g:11558:2: iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpressionReference=ruleEqualityExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpressionReference"


    // $ANTLR start "ruleEqualityExpressionReference"
    // InternalKerML.g:11564:1: ruleEqualityExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) ) ;
    public final EObject ruleEqualityExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11570:2: ( ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) ) )
            // InternalKerML.g:11571:2: ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) )
            {
            // InternalKerML.g:11571:2: ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) )
            // InternalKerML.g:11572:3: (lv_ownedRelationship_0_0= ruleEqualityExpressionMember )
            {
            // InternalKerML.g:11572:3: (lv_ownedRelationship_0_0= ruleEqualityExpressionMember )
            // InternalKerML.g:11573:4: lv_ownedRelationship_0_0= ruleEqualityExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEqualityExpressionReferenceAccess().getOwnedRelationshipEqualityExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleEqualityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEqualityExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpressionReference"


    // $ANTLR start "entryRuleEqualityExpressionMember"
    // InternalKerML.g:11593:1: entryRuleEqualityExpressionMember returns [EObject current=null] : iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF ;
    public final EObject entryRuleEqualityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpressionMember = null;


        try {
            // InternalKerML.g:11593:65: (iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF )
            // InternalKerML.g:11594:2: iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpressionMember=ruleEqualityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpressionMember"


    // $ANTLR start "ruleEqualityExpressionMember"
    // InternalKerML.g:11600:1: ruleEqualityExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) ) ;
    public final EObject ruleEqualityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11606:2: ( ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) ) )
            // InternalKerML.g:11607:2: ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) )
            {
            // InternalKerML.g:11607:2: ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) )
            // InternalKerML.g:11608:3: (lv_ownedRelatedElement_0_0= ruleEqualityExpression )
            {
            // InternalKerML.g:11608:3: (lv_ownedRelatedElement_0_0= ruleEqualityExpression )
            // InternalKerML.g:11609:4: lv_ownedRelatedElement_0_0= ruleEqualityExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEqualityExpressionMemberAccess().getOwnedRelatedElementEqualityExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEqualityExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpressionMember"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalKerML.g:11629:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalKerML.g:11629:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalKerML.g:11630:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalKerML.g:11636:1: ruleEqualityExpression returns [EObject current=null] : (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ClassificationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11642:2: ( (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) )
            // InternalKerML.g:11643:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            {
            // InternalKerML.g:11643:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            // InternalKerML.g:11644:3: this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_150);
            this_ClassificationExpression_0=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassificationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11652:3: ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( ((LA224_0>=121 && LA224_0<=122)) ) {
                    alt224=1;
                }


                switch (alt224) {
            	case 1 :
            	    // InternalKerML.g:11653:4: () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    {
            	    // InternalKerML.g:11653:4: ()
            	    // InternalKerML.g:11654:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11660:4: ( (lv_operator_2_0= ruleEqualityOperator ) )
            	    // InternalKerML.g:11661:5: (lv_operator_2_0= ruleEqualityOperator )
            	    {
            	    // InternalKerML.g:11661:5: (lv_operator_2_0= ruleEqualityOperator )
            	    // InternalKerML.g:11662:6: lv_operator_2_0= ruleEqualityOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:11679:4: ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    // InternalKerML.g:11680:5: (lv_operand_3_0= ruleClassificationExpression )
            	    {
            	    // InternalKerML.g:11680:5: (lv_operand_3_0= ruleClassificationExpression )
            	    // InternalKerML.g:11681:6: lv_operand_3_0= ruleClassificationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperandClassificationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_150);
            	    lv_operand_3_0=ruleClassificationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "entryRuleEqualityOperator"
    // InternalKerML.g:11703:1: entryRuleEqualityOperator returns [String current=null] : iv_ruleEqualityOperator= ruleEqualityOperator EOF ;
    public final String entryRuleEqualityOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEqualityOperator = null;


        try {
            // InternalKerML.g:11703:56: (iv_ruleEqualityOperator= ruleEqualityOperator EOF )
            // InternalKerML.g:11704:2: iv_ruleEqualityOperator= ruleEqualityOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityOperator=ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalKerML.g:11710:1: ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
    public final AntlrDatatypeRuleToken ruleEqualityOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11716:2: ( (kw= '==' | kw= '!=' ) )
            // InternalKerML.g:11717:2: (kw= '==' | kw= '!=' )
            {
            // InternalKerML.g:11717:2: (kw= '==' | kw= '!=' )
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==121) ) {
                alt225=1;
            }
            else if ( (LA225_0==122) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }
            switch (alt225) {
                case 1 :
                    // InternalKerML.g:11718:3: kw= '=='
                    {
                    kw=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:11724:3: kw= '!='
                    {
                    kw=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "entryRuleClassificationExpression"
    // InternalKerML.g:11733:1: entryRuleClassificationExpression returns [EObject current=null] : iv_ruleClassificationExpression= ruleClassificationExpression EOF ;
    public final EObject entryRuleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassificationExpression = null;


        try {
            // InternalKerML.g:11733:65: (iv_ruleClassificationExpression= ruleClassificationExpression EOF )
            // InternalKerML.g:11734:2: iv_ruleClassificationExpression= ruleClassificationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationExpression=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationExpression"


    // $ANTLR start "ruleClassificationExpression"
    // InternalKerML.g:11740:1: ruleClassificationExpression returns [EObject current=null] : ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) ) ;
    public final EObject ruleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_operand_5_0 = null;

        AntlrDatatypeRuleToken lv_operator_6_0 = null;

        EObject lv_ownedRelationship_7_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11746:2: ( ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) ) )
            // InternalKerML.g:11747:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) )
            {
            // InternalKerML.g:11747:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) )
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( ((LA227_0>=RULE_STRING_VALUE && LA227_0<=RULE_UNRESTRICTED_NAME)||LA227_0==18||(LA227_0>=33 && LA227_0<=34)||LA227_0==44||LA227_0==89||(LA227_0>=103 && LA227_0<=104)||LA227_0==107||(LA227_0>=128 && LA227_0<=129)||LA227_0==133||LA227_0==136) ) {
                alt227=1;
            }
            else if ( (LA227_0==109||(LA227_0>=123 && LA227_0<=125)) ) {
                alt227=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;
            }
            switch (alt227) {
                case 1 :
                    // InternalKerML.g:11748:3: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
                    {
                    // InternalKerML.g:11748:3: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
                    // InternalKerML.g:11749:4: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_151);
                    this_RelationalExpression_0=ruleRelationalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationalExpression_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:11757:4: ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==109||(LA226_0>=123 && LA226_0<=125)) ) {
                        alt226=1;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalKerML.g:11758:5: () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                            {
                            // InternalKerML.g:11758:5: ()
                            // InternalKerML.g:11759:6: 
                            {
                            if ( state.backtracking==0 ) {

                              						current = forceCreateModelElementAndAdd(
                              							grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperandAction_0_1_0(),
                              							current);
                              					
                            }

                            }

                            // InternalKerML.g:11765:5: ( (lv_operator_2_0= ruleClassificationOperator ) )
                            // InternalKerML.g:11766:6: (lv_operator_2_0= ruleClassificationOperator )
                            {
                            // InternalKerML.g:11766:6: (lv_operator_2_0= ruleClassificationOperator )
                            // InternalKerML.g:11767:7: lv_operator_2_0= ruleClassificationOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_4);
                            lv_operator_2_0=ruleClassificationOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_2_0,
                              								"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKerML.g:11784:5: ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                            // InternalKerML.g:11785:6: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                            {
                            // InternalKerML.g:11785:6: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                            // InternalKerML.g:11786:7: lv_ownedRelationship_3_0= ruleTypeReferenceMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_3_0=ruleTypeReferenceMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:11806:3: ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) )
                    {
                    // InternalKerML.g:11806:3: ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) )
                    // InternalKerML.g:11807:4: () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) )
                    {
                    // InternalKerML.g:11807:4: ()
                    // InternalKerML.g:11808:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getClassificationExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:11814:4: ( (lv_operand_5_0= ruleSelfReferenceExpression ) )
                    // InternalKerML.g:11815:5: (lv_operand_5_0= ruleSelfReferenceExpression )
                    {
                    // InternalKerML.g:11815:5: (lv_operand_5_0= ruleSelfReferenceExpression )
                    // InternalKerML.g:11816:6: lv_operand_5_0= ruleSelfReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperandSelfReferenceExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_152);
                    lv_operand_5_0=ruleSelfReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_5_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.SelfReferenceExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:11833:4: ( (lv_operator_6_0= ruleClassificationOperator ) )
                    // InternalKerML.g:11834:5: (lv_operator_6_0= ruleClassificationOperator )
                    {
                    // InternalKerML.g:11834:5: (lv_operator_6_0= ruleClassificationOperator )
                    // InternalKerML.g:11835:6: lv_operator_6_0= ruleClassificationOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_operator_6_0=ruleClassificationOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_6_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:11852:4: ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) )
                    // InternalKerML.g:11853:5: (lv_ownedRelationship_7_0= ruleTypeReferenceMember )
                    {
                    // InternalKerML.g:11853:5: (lv_ownedRelationship_7_0= ruleTypeReferenceMember )
                    // InternalKerML.g:11854:6: lv_ownedRelationship_7_0= ruleTypeReferenceMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_7_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationExpression"


    // $ANTLR start "entryRuleClassificationOperator"
    // InternalKerML.g:11876:1: entryRuleClassificationOperator returns [String current=null] : iv_ruleClassificationOperator= ruleClassificationOperator EOF ;
    public final String entryRuleClassificationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleClassificationOperator = null;


        try {
            // InternalKerML.g:11876:62: (iv_ruleClassificationOperator= ruleClassificationOperator EOF )
            // InternalKerML.g:11877:2: iv_ruleClassificationOperator= ruleClassificationOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationOperator=ruleClassificationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationOperator"


    // $ANTLR start "ruleClassificationOperator"
    // InternalKerML.g:11883:1: ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' ) ;
    public final AntlrDatatypeRuleToken ruleClassificationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11889:2: ( (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' ) )
            // InternalKerML.g:11890:2: (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' )
            {
            // InternalKerML.g:11890:2: (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' )
            int alt228=4;
            switch ( input.LA(1) ) {
            case 123:
                {
                alt228=1;
                }
                break;
            case 124:
                {
                alt228=2;
                }
                break;
            case 109:
                {
                alt228=3;
                }
                break;
            case 125:
                {
                alt228=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }

            switch (alt228) {
                case 1 :
                    // InternalKerML.g:11891:3: kw= 'hastype'
                    {
                    kw=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:11897:3: kw= 'istype'
                    {
                    kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getIstypeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:11903:3: kw= '@'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getCommercialAtKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:11909:3: kw= 'as'
                    {
                    kw=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getAsKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationOperator"


    // $ANTLR start "entryRuleTypeReferenceMember"
    // InternalKerML.g:11918:1: entryRuleTypeReferenceMember returns [EObject current=null] : iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF ;
    public final EObject entryRuleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReferenceMember = null;


        try {
            // InternalKerML.g:11918:60: (iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF )
            // InternalKerML.g:11919:2: iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceMember=ruleTypeReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReferenceMember"


    // $ANTLR start "ruleTypeReferenceMember"
    // InternalKerML.g:11925:1: ruleTypeReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) ;
    public final EObject ruleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11931:2: ( ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) )
            // InternalKerML.g:11932:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            {
            // InternalKerML.g:11932:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            // InternalKerML.g:11933:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            {
            // InternalKerML.g:11933:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            // InternalKerML.g:11934:4: lv_ownedRelatedElement_0_0= ruleTypeReference
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementTypeReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReferenceMember"


    // $ANTLR start "entryRuleTypeReference"
    // InternalKerML.g:11954:1: entryRuleTypeReference returns [EObject current=null] : iv_ruleTypeReference= ruleTypeReference EOF ;
    public final EObject entryRuleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReference = null;


        try {
            // InternalKerML.g:11954:54: (iv_ruleTypeReference= ruleTypeReference EOF )
            // InternalKerML.g:11955:2: iv_ruleTypeReference= ruleTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReference=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReference"


    // $ANTLR start "ruleTypeReference"
    // InternalKerML.g:11961:1: ruleTypeReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) ;
    public final EObject ruleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11967:2: ( ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) )
            // InternalKerML.g:11968:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            {
            // InternalKerML.g:11968:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            // InternalKerML.g:11969:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            {
            // InternalKerML.g:11969:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            // InternalKerML.g:11970:4: lv_ownedRelationship_0_0= ruleReferenceTyping
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipReferenceTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReference"


    // $ANTLR start "entryRuleReferenceTyping"
    // InternalKerML.g:11990:1: entryRuleReferenceTyping returns [EObject current=null] : iv_ruleReferenceTyping= ruleReferenceTyping EOF ;
    public final EObject entryRuleReferenceTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceTyping = null;


        try {
            // InternalKerML.g:11990:56: (iv_ruleReferenceTyping= ruleReferenceTyping EOF )
            // InternalKerML.g:11991:2: iv_ruleReferenceTyping= ruleReferenceTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReferenceTyping=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceTyping"


    // $ANTLR start "ruleReferenceTyping"
    // InternalKerML.g:11997:1: ruleReferenceTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleReferenceTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:12003:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:12004:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:12004:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:12005:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:12005:3: ( ruleQualifiedName )
            // InternalKerML.g:12006:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getReferenceTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReferenceTypingAccess().getTypeTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceTyping"


    // $ANTLR start "entryRuleSelfReferenceExpression"
    // InternalKerML.g:12023:1: entryRuleSelfReferenceExpression returns [EObject current=null] : iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF ;
    public final EObject entryRuleSelfReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfReferenceExpression = null;


        try {
            // InternalKerML.g:12023:64: (iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF )
            // InternalKerML.g:12024:2: iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelfReferenceExpression=ruleSelfReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfReferenceExpression"


    // $ANTLR start "ruleSelfReferenceExpression"
    // InternalKerML.g:12030:1: ruleSelfReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) ) ;
    public final EObject ruleSelfReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12036:2: ( ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) ) )
            // InternalKerML.g:12037:2: ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) )
            {
            // InternalKerML.g:12037:2: ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) )
            // InternalKerML.g:12038:3: (lv_ownedRelationship_0_0= ruleSelfReferenceMember )
            {
            // InternalKerML.g:12038:3: (lv_ownedRelationship_0_0= ruleSelfReferenceMember )
            // InternalKerML.g:12039:4: lv_ownedRelationship_0_0= ruleSelfReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSelfReferenceExpressionAccess().getOwnedRelationshipSelfReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleSelfReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getSelfReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.SelfReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfReferenceExpression"


    // $ANTLR start "entryRuleSelfReferenceMember"
    // InternalKerML.g:12059:1: entryRuleSelfReferenceMember returns [EObject current=null] : iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF ;
    public final EObject entryRuleSelfReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfReferenceMember = null;


        try {
            // InternalKerML.g:12059:60: (iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF )
            // InternalKerML.g:12060:2: iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelfReferenceMember=ruleSelfReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfReferenceMember"


    // $ANTLR start "ruleSelfReferenceMember"
    // InternalKerML.g:12066:1: ruleSelfReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleSelfReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12072:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:12073:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:12073:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:12074:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:12074:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:12075:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSelfReferenceMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getSelfReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfReferenceMember"


    // $ANTLR start "entryRuleEmptyFeature"
    // InternalKerML.g:12095:1: entryRuleEmptyFeature returns [EObject current=null] : iv_ruleEmptyFeature= ruleEmptyFeature EOF ;
    public final EObject entryRuleEmptyFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeature = null;


        try {
            // InternalKerML.g:12095:53: (iv_ruleEmptyFeature= ruleEmptyFeature EOF )
            // InternalKerML.g:12096:2: iv_ruleEmptyFeature= ruleEmptyFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeature=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeature"


    // $ANTLR start "ruleEmptyFeature"
    // InternalKerML.g:12102:1: ruleEmptyFeature returns [EObject current=null] : () ;
    public final EObject ruleEmptyFeature() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:12108:2: ( () )
            // InternalKerML.g:12109:2: ()
            {
            // InternalKerML.g:12109:2: ()
            // InternalKerML.g:12110:3: 
            {
            if ( state.backtracking==0 ) {

              			current = forceCreateModelElement(
              				grammarAccess.getEmptyFeatureAccess().getFeatureAction(),
              				current);
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeature"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalKerML.g:12119:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // InternalKerML.g:12119:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalKerML.g:12120:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalKerML.g:12126:1: ruleRelationalExpression returns [EObject current=null] : (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RangeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12132:2: ( (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* ) )
            // InternalKerML.g:12133:2: (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* )
            {
            // InternalKerML.g:12133:2: (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* )
            // InternalKerML.g:12134:3: this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRangeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_RangeExpression_0=ruleRangeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RangeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12142:3: ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )*
            loop229:
            do {
                int alt229=2;
                int LA229_0 = input.LA(1);

                if ( ((LA229_0>=14 && LA229_0<=15)||(LA229_0>=126 && LA229_0<=127)) ) {
                    alt229=1;
                }


                switch (alt229) {
            	case 1 :
            	    // InternalKerML.g:12143:4: () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) )
            	    {
            	    // InternalKerML.g:12143:4: ()
            	    // InternalKerML.g:12144:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12150:4: ( (lv_operator_2_0= ruleRelationalOperator ) )
            	    // InternalKerML.g:12151:5: (lv_operator_2_0= ruleRelationalOperator )
            	    {
            	    // InternalKerML.g:12151:5: (lv_operator_2_0= ruleRelationalOperator )
            	    // InternalKerML.g:12152:6: lv_operator_2_0= ruleRelationalOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.RelationalOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12169:4: ( (lv_operand_3_0= ruleRangeExpression ) )
            	    // InternalKerML.g:12170:5: (lv_operand_3_0= ruleRangeExpression )
            	    {
            	    // InternalKerML.g:12170:5: (lv_operand_3_0= ruleRangeExpression )
            	    // InternalKerML.g:12171:6: lv_operand_3_0= ruleRangeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperandRangeExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_operand_3_0=ruleRangeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.RangeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop229;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleRelationalOperator"
    // InternalKerML.g:12193:1: entryRuleRelationalOperator returns [String current=null] : iv_ruleRelationalOperator= ruleRelationalOperator EOF ;
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            // InternalKerML.g:12193:58: (iv_ruleRelationalOperator= ruleRelationalOperator EOF )
            // InternalKerML.g:12194:2: iv_ruleRelationalOperator= ruleRelationalOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalOperator=ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
    // InternalKerML.g:12200:1: ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) ;
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12206:2: ( (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) )
            // InternalKerML.g:12207:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
            {
            // InternalKerML.g:12207:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
            int alt230=4;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt230=1;
                }
                break;
            case 15:
                {
                alt230=2;
                }
                break;
            case 126:
                {
                alt230=3;
                }
                break;
            case 127:
                {
                alt230=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;
            }

            switch (alt230) {
                case 1 :
                    // InternalKerML.g:12208:3: kw= '<'
                    {
                    kw=(Token)match(input,14,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12214:3: kw= '>'
                    {
                    kw=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12220:3: kw= '<='
                    {
                    kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:12226:3: kw= '>='
                    {
                    kw=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleRangeExpression"
    // InternalKerML.g:12235:1: entryRuleRangeExpression returns [EObject current=null] : iv_ruleRangeExpression= ruleRangeExpression EOF ;
    public final EObject entryRuleRangeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeExpression = null;


        try {
            // InternalKerML.g:12235:56: (iv_ruleRangeExpression= ruleRangeExpression EOF )
            // InternalKerML.g:12236:2: iv_ruleRangeExpression= ruleRangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeExpression=ruleRangeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeExpression"


    // $ANTLR start "ruleRangeExpression"
    // InternalKerML.g:12242:1: ruleRangeExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? ) ;
    public final EObject ruleRangeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12248:2: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? ) )
            // InternalKerML.g:12249:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? )
            {
            // InternalKerML.g:12249:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? )
            // InternalKerML.g:12250:3: this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRangeExpressionAccess().getAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_154);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12258:3: ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==83) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalKerML.g:12259:4: () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) )
                    {
                    // InternalKerML.g:12259:4: ()
                    // InternalKerML.g:12260:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getRangeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:12266:4: ( (lv_operator_2_0= '..' ) )
                    // InternalKerML.g:12267:5: (lv_operator_2_0= '..' )
                    {
                    // InternalKerML.g:12267:5: (lv_operator_2_0= '..' )
                    // InternalKerML.g:12268:6: lv_operator_2_0= '..'
                    {
                    lv_operator_2_0=(Token)match(input,83,FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_2_0, grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRangeExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_2_0, "..");
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12280:4: ( (lv_operand_3_0= ruleAdditiveExpression ) )
                    // InternalKerML.g:12281:5: (lv_operand_3_0= ruleAdditiveExpression )
                    {
                    // InternalKerML.g:12281:5: (lv_operand_3_0= ruleAdditiveExpression )
                    // InternalKerML.g:12282:6: lv_operand_3_0= ruleAdditiveExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRangeExpressionAccess().getOperandAdditiveExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_3_0=ruleAdditiveExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRangeExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AdditiveExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalKerML.g:12304:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // InternalKerML.g:12304:59: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // InternalKerML.g:12305:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalKerML.g:12311:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12317:2: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // InternalKerML.g:12318:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            {
            // InternalKerML.g:12318:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            // InternalKerML.g:12319:3: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_155);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12327:3: ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( ((LA232_0>=128 && LA232_0<=129)) ) {
                    alt232=1;
                }


                switch (alt232) {
            	case 1 :
            	    // InternalKerML.g:12328:4: () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    {
            	    // InternalKerML.g:12328:4: ()
            	    // InternalKerML.g:12329:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12335:4: ( (lv_operator_2_0= ruleAdditiveOperator ) )
            	    // InternalKerML.g:12336:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    {
            	    // InternalKerML.g:12336:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    // InternalKerML.g:12337:6: lv_operator_2_0= ruleAdditiveOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AdditiveOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12354:4: ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    // InternalKerML.g:12355:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    {
            	    // InternalKerML.g:12355:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    // InternalKerML.g:12356:6: lv_operand_3_0= ruleMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperandMultiplicativeExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_155);
            	    lv_operand_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleAdditiveOperator"
    // InternalKerML.g:12378:1: entryRuleAdditiveOperator returns [String current=null] : iv_ruleAdditiveOperator= ruleAdditiveOperator EOF ;
    public final String entryRuleAdditiveOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAdditiveOperator = null;


        try {
            // InternalKerML.g:12378:56: (iv_ruleAdditiveOperator= ruleAdditiveOperator EOF )
            // InternalKerML.g:12379:2: iv_ruleAdditiveOperator= ruleAdditiveOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveOperator=ruleAdditiveOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveOperator"


    // $ANTLR start "ruleAdditiveOperator"
    // InternalKerML.g:12385:1: ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleAdditiveOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12391:2: ( (kw= '+' | kw= '-' ) )
            // InternalKerML.g:12392:2: (kw= '+' | kw= '-' )
            {
            // InternalKerML.g:12392:2: (kw= '+' | kw= '-' )
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==128) ) {
                alt233=1;
            }
            else if ( (LA233_0==129) ) {
                alt233=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;
            }
            switch (alt233) {
                case 1 :
                    // InternalKerML.g:12393:3: kw= '+'
                    {
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12399:3: kw= '-'
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveOperator"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalKerML.g:12408:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // InternalKerML.g:12408:65: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // InternalKerML.g:12409:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalKerML.g:12415:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ExponentiationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12421:2: ( (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* ) )
            // InternalKerML.g:12422:2: (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* )
            {
            // InternalKerML.g:12422:2: (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* )
            // InternalKerML.g:12423:3: this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_156);
            this_ExponentiationExpression_0=ruleExponentiationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExponentiationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12431:3: ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )*
            loop234:
            do {
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==34||(LA234_0>=130 && LA234_0<=131)) ) {
                    alt234=1;
                }


                switch (alt234) {
            	case 1 :
            	    // InternalKerML.g:12432:4: () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) )
            	    {
            	    // InternalKerML.g:12432:4: ()
            	    // InternalKerML.g:12433:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12439:4: ( (lv_operator_2_0= ruleMultiplicativeOperator ) )
            	    // InternalKerML.g:12440:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    {
            	    // InternalKerML.g:12440:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    // InternalKerML.g:12441:6: lv_operator_2_0= ruleMultiplicativeOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MultiplicativeOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12458:4: ( (lv_operand_3_0= ruleExponentiationExpression ) )
            	    // InternalKerML.g:12459:5: (lv_operand_3_0= ruleExponentiationExpression )
            	    {
            	    // InternalKerML.g:12459:5: (lv_operand_3_0= ruleExponentiationExpression )
            	    // InternalKerML.g:12460:6: lv_operand_3_0= ruleExponentiationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperandExponentiationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operand_3_0=ruleExponentiationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExponentiationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop234;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleMultiplicativeOperator"
    // InternalKerML.g:12482:1: entryRuleMultiplicativeOperator returns [String current=null] : iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF ;
    public final String entryRuleMultiplicativeOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiplicativeOperator = null;


        try {
            // InternalKerML.g:12482:62: (iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF )
            // InternalKerML.g:12483:2: iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeOperator=ruleMultiplicativeOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeOperator"


    // $ANTLR start "ruleMultiplicativeOperator"
    // InternalKerML.g:12489:1: ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleMultiplicativeOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12495:2: ( (kw= '*' | kw= '/' | kw= '%' ) )
            // InternalKerML.g:12496:2: (kw= '*' | kw= '/' | kw= '%' )
            {
            // InternalKerML.g:12496:2: (kw= '*' | kw= '/' | kw= '%' )
            int alt235=3;
            switch ( input.LA(1) ) {
            case 34:
                {
                alt235=1;
                }
                break;
            case 130:
                {
                alt235=2;
                }
                break;
            case 131:
                {
                alt235=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;
            }

            switch (alt235) {
                case 1 :
                    // InternalKerML.g:12497:3: kw= '*'
                    {
                    kw=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12503:3: kw= '/'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12509:3: kw= '%'
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeOperator"


    // $ANTLR start "entryRuleExponentiationExpression"
    // InternalKerML.g:12518:1: entryRuleExponentiationExpression returns [EObject current=null] : iv_ruleExponentiationExpression= ruleExponentiationExpression EOF ;
    public final EObject entryRuleExponentiationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExponentiationExpression = null;


        try {
            // InternalKerML.g:12518:65: (iv_ruleExponentiationExpression= ruleExponentiationExpression EOF )
            // InternalKerML.g:12519:2: iv_ruleExponentiationExpression= ruleExponentiationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentiationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExponentiationExpression=ruleExponentiationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExponentiationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExponentiationExpression"


    // $ANTLR start "ruleExponentiationExpression"
    // InternalKerML.g:12525:1: ruleExponentiationExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* ) ;
    public final EObject ruleExponentiationExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12531:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* ) )
            // InternalKerML.g:12532:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* )
            {
            // InternalKerML.g:12532:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* )
            // InternalKerML.g:12533:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_157);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12541:3: ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==36||LA236_0==132) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // InternalKerML.g:12542:4: () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) )
            	    {
            	    // InternalKerML.g:12542:4: ()
            	    // InternalKerML.g:12543:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12549:4: ( (lv_operator_2_0= ruleExponentiationOperator ) )
            	    // InternalKerML.g:12550:5: (lv_operator_2_0= ruleExponentiationOperator )
            	    {
            	    // InternalKerML.g:12550:5: (lv_operator_2_0= ruleExponentiationOperator )
            	    // InternalKerML.g:12551:6: lv_operator_2_0= ruleExponentiationOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleExponentiationOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExponentiationOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12568:4: ( (lv_operand_3_0= ruleUnaryExpression ) )
            	    // InternalKerML.g:12569:5: (lv_operand_3_0= ruleUnaryExpression )
            	    {
            	    // InternalKerML.g:12569:5: (lv_operand_3_0= ruleUnaryExpression )
            	    // InternalKerML.g:12570:6: lv_operand_3_0= ruleUnaryExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_operand_3_0=ruleUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.UnaryExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExponentiationExpression"


    // $ANTLR start "entryRuleExponentiationOperator"
    // InternalKerML.g:12592:1: entryRuleExponentiationOperator returns [String current=null] : iv_ruleExponentiationOperator= ruleExponentiationOperator EOF ;
    public final String entryRuleExponentiationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExponentiationOperator = null;


        try {
            // InternalKerML.g:12592:62: (iv_ruleExponentiationOperator= ruleExponentiationOperator EOF )
            // InternalKerML.g:12593:2: iv_ruleExponentiationOperator= ruleExponentiationOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentiationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExponentiationOperator=ruleExponentiationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExponentiationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExponentiationOperator"


    // $ANTLR start "ruleExponentiationOperator"
    // InternalKerML.g:12599:1: ruleExponentiationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '**' | kw= '^' ) ;
    public final AntlrDatatypeRuleToken ruleExponentiationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12605:2: ( (kw= '**' | kw= '^' ) )
            // InternalKerML.g:12606:2: (kw= '**' | kw= '^' )
            {
            // InternalKerML.g:12606:2: (kw= '**' | kw= '^' )
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==36) ) {
                alt237=1;
            }
            else if ( (LA237_0==132) ) {
                alt237=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;
            }
            switch (alt237) {
                case 1 :
                    // InternalKerML.g:12607:3: kw= '**'
                    {
                    kw=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12613:3: kw= '^'
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExponentiationOperatorAccess().getCircumflexAccentKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExponentiationOperator"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalKerML.g:12622:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalKerML.g:12622:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalKerML.g:12623:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalKerML.g:12629:1: ruleUnaryExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_operator_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_ExtentExpression_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:12635:2: ( ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression ) )
            // InternalKerML.g:12636:2: ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression )
            {
            // InternalKerML.g:12636:2: ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression )
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==44||(LA238_0>=128 && LA238_0<=129)||LA238_0==133) ) {
                alt238=1;
            }
            else if ( ((LA238_0>=RULE_STRING_VALUE && LA238_0<=RULE_UNRESTRICTED_NAME)||LA238_0==18||(LA238_0>=33 && LA238_0<=34)||LA238_0==89||(LA238_0>=103 && LA238_0<=104)||LA238_0==107||LA238_0==136) ) {
                alt238=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 238, 0, input);

                throw nvae;
            }
            switch (alt238) {
                case 1 :
                    // InternalKerML.g:12637:3: ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) )
                    {
                    // InternalKerML.g:12637:3: ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) )
                    // InternalKerML.g:12638:4: () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) )
                    {
                    // InternalKerML.g:12638:4: ()
                    // InternalKerML.g:12639:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:12645:4: ( (lv_operator_1_0= ruleUnaryOperator ) )
                    // InternalKerML.g:12646:5: (lv_operator_1_0= ruleUnaryOperator )
                    {
                    // InternalKerML.g:12646:5: (lv_operator_1_0= ruleUnaryOperator )
                    // InternalKerML.g:12647:6: lv_operator_1_0= ruleUnaryOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_operator_1_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.UnaryOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12664:4: ( (lv_operand_2_0= ruleExtentExpression ) )
                    // InternalKerML.g:12665:5: (lv_operand_2_0= ruleExtentExpression )
                    {
                    // InternalKerML.g:12665:5: (lv_operand_2_0= ruleExtentExpression )
                    // InternalKerML.g:12666:6: lv_operand_2_0= ruleExtentExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperandExtentExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleExtentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExtentExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:12685:3: this_ExtentExpression_3= ruleExtentExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExtentExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExtentExpression_3=ruleExtentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExtentExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRuleUnaryOperator"
    // InternalKerML.g:12697:1: entryRuleUnaryOperator returns [String current=null] : iv_ruleUnaryOperator= ruleUnaryOperator EOF ;
    public final String entryRuleUnaryOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperator = null;


        try {
            // InternalKerML.g:12697:53: (iv_ruleUnaryOperator= ruleUnaryOperator EOF )
            // InternalKerML.g:12698:2: iv_ruleUnaryOperator= ruleUnaryOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryOperator=ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalKerML.g:12704:1: ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '~' | kw= 'not' ) ;
    public final AntlrDatatypeRuleToken ruleUnaryOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12710:2: ( (kw= '+' | kw= '-' | kw= '~' | kw= 'not' ) )
            // InternalKerML.g:12711:2: (kw= '+' | kw= '-' | kw= '~' | kw= 'not' )
            {
            // InternalKerML.g:12711:2: (kw= '+' | kw= '-' | kw= '~' | kw= 'not' )
            int alt239=4;
            switch ( input.LA(1) ) {
            case 128:
                {
                alt239=1;
                }
                break;
            case 129:
                {
                alt239=2;
                }
                break;
            case 44:
                {
                alt239=3;
                }
                break;
            case 133:
                {
                alt239=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;
            }

            switch (alt239) {
                case 1 :
                    // InternalKerML.g:12712:3: kw= '+'
                    {
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12718:3: kw= '-'
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12724:3: kw= '~'
                    {
                    kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getTildeKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:12730:3: kw= 'not'
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getNotKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "entryRuleExtentExpression"
    // InternalKerML.g:12739:1: entryRuleExtentExpression returns [EObject current=null] : iv_ruleExtentExpression= ruleExtentExpression EOF ;
    public final EObject entryRuleExtentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtentExpression = null;


        try {
            // InternalKerML.g:12739:57: (iv_ruleExtentExpression= ruleExtentExpression EOF )
            // InternalKerML.g:12740:2: iv_ruleExtentExpression= ruleExtentExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExtentExpression=ruleExtentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtentExpression"


    // $ANTLR start "ruleExtentExpression"
    // InternalKerML.g:12746:1: ruleExtentExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression ) ;
    public final EObject ruleExtentExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_0=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject this_PrimaryExpression_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:12752:2: ( ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression ) )
            // InternalKerML.g:12753:2: ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression )
            {
            // InternalKerML.g:12753:2: ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression )
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==33) ) {
                alt240=1;
            }
            else if ( ((LA240_0>=RULE_STRING_VALUE && LA240_0<=RULE_UNRESTRICTED_NAME)||LA240_0==18||LA240_0==34||LA240_0==89||(LA240_0>=103 && LA240_0<=104)||LA240_0==107||LA240_0==136) ) {
                alt240=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;
            }
            switch (alt240) {
                case 1 :
                    // InternalKerML.g:12754:3: ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) )
                    {
                    // InternalKerML.g:12754:3: ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) )
                    // InternalKerML.g:12755:4: () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) )
                    {
                    // InternalKerML.g:12755:4: ()
                    // InternalKerML.g:12756:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExtentExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:12762:4: ( (lv_operator_1_0= 'all' ) )
                    // InternalKerML.g:12763:5: (lv_operator_1_0= 'all' )
                    {
                    // InternalKerML.g:12763:5: (lv_operator_1_0= 'all' )
                    // InternalKerML.g:12764:6: lv_operator_1_0= 'all'
                    {
                    lv_operator_1_0=(Token)match(input,33,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_1_0, grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExtentExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_1_0, "all");
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12776:4: ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) )
                    // InternalKerML.g:12777:5: (lv_ownedRelationship_2_0= ruleTypeReferenceMember )
                    {
                    // InternalKerML.g:12777:5: (lv_ownedRelationship_2_0= ruleTypeReferenceMember )
                    // InternalKerML.g:12778:6: lv_ownedRelationship_2_0= ruleTypeReferenceMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExtentExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExtentExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:12797:3: this_PrimaryExpression_3= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtentExpressionAccess().getPrimaryExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_3=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtentExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalKerML.g:12809:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalKerML.g:12809:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalKerML.g:12810:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalKerML.g:12816:1: rulePrimaryExpression returns [EObject current=null] : (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_operator_5_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_21=null;
        EObject this_BaseExpression_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_operand_6_0 = null;

        EObject lv_ownedRelationship_10_0 = null;

        EObject lv_operand_11_0 = null;

        EObject lv_operand_12_0 = null;

        EObject this_ArgumentList_13 = null;

        EObject lv_operand_16_0 = null;

        EObject lv_operand_19_0 = null;

        EObject lv_ownedRelationship_22_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12822:2: ( (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* ) )
            // InternalKerML.g:12823:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* )
            {
            // InternalKerML.g:12823:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* )
            // InternalKerML.g:12824:3: this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_158);
            this_BaseExpression_0=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BaseExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12832:3: ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==107) ) {
                int LA241_1 = input.LA(2);

                if ( ((LA241_1>=RULE_ID && LA241_1<=RULE_UNRESTRICTED_NAME)) ) {
                    alt241=1;
                }
            }
            switch (alt241) {
                case 1 :
                    // InternalKerML.g:12833:4: () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) )
                    {
                    // InternalKerML.g:12833:4: ()
                    // InternalKerML.g:12834:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getPrimaryExpressionAccess().getFeatureChainExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,107,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_1());
                      			
                    }
                    // InternalKerML.g:12844:4: ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) )
                    // InternalKerML.g:12845:5: (lv_ownedRelationship_3_0= ruleFeatureChainMember )
                    {
                    // InternalKerML.g:12845:5: (lv_ownedRelationship_3_0= ruleFeatureChainMember )
                    // InternalKerML.g:12846:6: lv_ownedRelationship_3_0= ruleFeatureChainMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFeatureChainMemberParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_ownedRelationship_3_0=ruleFeatureChainMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureChainMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:12864:3: ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( (LA245_0==82||LA245_0==107||(LA245_0>=134 && LA245_0<=135)) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // InternalKerML.g:12865:4: ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )?
            	    {
            	    // InternalKerML.g:12865:4: ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) )
            	    int alt243=4;
            	    switch ( input.LA(1) ) {
            	    case 82:
            	        {
            	        alt243=1;
            	        }
            	        break;
            	    case 134:
            	        {
            	        alt243=2;
            	        }
            	        break;
            	    case 107:
            	        {
            	        alt243=3;
            	        }
            	        break;
            	    case 135:
            	        {
            	        alt243=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 243, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt243) {
            	        case 1 :
            	            // InternalKerML.g:12866:5: ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' )
            	            {
            	            // InternalKerML.g:12866:5: ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' )
            	            // InternalKerML.g:12867:6: () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']'
            	            {
            	            // InternalKerML.g:12867:6: ()
            	            // InternalKerML.g:12868:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_2_0_0_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            // InternalKerML.g:12874:6: ( (lv_operator_5_0= '[' ) )
            	            // InternalKerML.g:12875:7: (lv_operator_5_0= '[' )
            	            {
            	            // InternalKerML.g:12875:7: (lv_operator_5_0= '[' )
            	            // InternalKerML.g:12876:8: lv_operator_5_0= '['
            	            {
            	            lv_operator_5_0=(Token)match(input,82,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_operator_5_0, grammarAccess.getPrimaryExpressionAccess().getOperatorLeftSquareBracketKeyword_2_0_0_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								setWithLastConsumed(current, "operator", lv_operator_5_0, "[");
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:12888:6: ( (lv_operand_6_0= ruleSequenceExpression ) )
            	            // InternalKerML.g:12889:7: (lv_operand_6_0= ruleSequenceExpression )
            	            {
            	            // InternalKerML.g:12889:7: (lv_operand_6_0= ruleSequenceExpression )
            	            // InternalKerML.g:12890:8: lv_operand_6_0= ruleSequenceExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandSequenceExpressionParserRuleCall_2_0_0_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_38);
            	            lv_operand_6_0=ruleSequenceExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_6_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.SequenceExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            otherlv_7=(Token)match(input,37,FOLLOW_158); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_7, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_0_0_3());
            	              					
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:12913:5: ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) )
            	            {
            	            // InternalKerML.g:12913:5: ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) )
            	            // InternalKerML.g:12914:6: () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] )
            	            {
            	            // InternalKerML.g:12914:6: ()
            	            // InternalKerML.g:12915:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_2_0_1_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_9=(Token)match(input,134,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_9, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_0_1_1());
            	              					
            	            }
            	            // InternalKerML.g:12925:6: ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) )
            	            // InternalKerML.g:12926:7: (lv_ownedRelationship_10_0= ruleReferenceTyping )
            	            {
            	            // InternalKerML.g:12926:7: (lv_ownedRelationship_10_0= ruleReferenceTyping )
            	            // InternalKerML.g:12927:8: lv_ownedRelationship_10_0= ruleReferenceTyping
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipReferenceTypingParserRuleCall_2_0_1_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_159);
            	            lv_ownedRelationship_10_0=ruleReferenceTyping();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"ownedRelationship",
            	              									lv_ownedRelationship_10_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:12944:6: ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] )
            	            int alt242=3;
            	            switch ( input.LA(1) ) {
            	            case 18:
            	                {
            	                alt242=1;
            	                }
            	                break;
            	            case RULE_ID:
            	            case RULE_UNRESTRICTED_NAME:
            	                {
            	                alt242=2;
            	                }
            	                break;
            	            case 89:
            	                {
            	                alt242=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 242, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt242) {
            	                case 1 :
            	                    // InternalKerML.g:12945:7: ( (lv_operand_11_0= ruleBodyExpression ) )
            	                    {
            	                    // InternalKerML.g:12945:7: ( (lv_operand_11_0= ruleBodyExpression ) )
            	                    // InternalKerML.g:12946:8: (lv_operand_11_0= ruleBodyExpression )
            	                    {
            	                    // InternalKerML.g:12946:8: (lv_operand_11_0= ruleBodyExpression )
            	                    // InternalKerML.g:12947:9: lv_operand_11_0= ruleBodyExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_1_3_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_158);
            	                    lv_operand_11_0=ruleBodyExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"operand",
            	                      										lv_operand_11_0,
            	                      										"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKerML.g:12965:7: ( (lv_operand_12_0= ruleFunctionReferenceExpression ) )
            	                    {
            	                    // InternalKerML.g:12965:7: ( (lv_operand_12_0= ruleFunctionReferenceExpression ) )
            	                    // InternalKerML.g:12966:8: (lv_operand_12_0= ruleFunctionReferenceExpression )
            	                    {
            	                    // InternalKerML.g:12966:8: (lv_operand_12_0= ruleFunctionReferenceExpression )
            	                    // InternalKerML.g:12967:9: lv_operand_12_0= ruleFunctionReferenceExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandFunctionReferenceExpressionParserRuleCall_2_0_1_3_1_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_158);
            	                    lv_operand_12_0=ruleFunctionReferenceExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"operand",
            	                      										lv_operand_12_0,
            	                      										"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReferenceExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKerML.g:12985:7: this_ArgumentList_13= ruleArgumentList[$current]
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      							if (current==null) {
            	                      								current = createModelElement(grammarAccess.getPrimaryExpressionRule());
            	                      							}
            	                      							newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgumentListParserRuleCall_2_0_1_3_2());
            	                      						
            	                    }
            	                    pushFollow(FOLLOW_158);
            	                    this_ArgumentList_13=ruleArgumentList(current);

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      							current = this_ArgumentList_13;
            	                      							afterParserOrEnumRuleCall();
            	                      						
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKerML.g:12999:5: ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) )
            	            {
            	            // InternalKerML.g:12999:5: ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) )
            	            // InternalKerML.g:13000:6: () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) )
            	            {
            	            // InternalKerML.g:13000:6: ()
            	            // InternalKerML.g:13001:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getCollectExpressionOperandAction_2_0_2_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_15=(Token)match(input,107,FOLLOW_160); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_2_0_2_1());
            	              					
            	            }
            	            // InternalKerML.g:13011:6: ( (lv_operand_16_0= ruleBodyExpression ) )
            	            // InternalKerML.g:13012:7: (lv_operand_16_0= ruleBodyExpression )
            	            {
            	            // InternalKerML.g:13012:7: (lv_operand_16_0= ruleBodyExpression )
            	            // InternalKerML.g:13013:8: lv_operand_16_0= ruleBodyExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_2_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_operand_16_0=ruleBodyExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_16_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 4 :
            	            // InternalKerML.g:13032:5: ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) )
            	            {
            	            // InternalKerML.g:13032:5: ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) )
            	            // InternalKerML.g:13033:6: () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) )
            	            {
            	            // InternalKerML.g:13033:6: ()
            	            // InternalKerML.g:13034:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getSelectExpressionOperandAction_2_0_3_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_18=(Token)match(input,135,FOLLOW_160); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_18, grammarAccess.getPrimaryExpressionAccess().getFullStopQuestionMarkKeyword_2_0_3_1());
            	              					
            	            }
            	            // InternalKerML.g:13044:6: ( (lv_operand_19_0= ruleBodyExpression ) )
            	            // InternalKerML.g:13045:7: (lv_operand_19_0= ruleBodyExpression )
            	            {
            	            // InternalKerML.g:13045:7: (lv_operand_19_0= ruleBodyExpression )
            	            // InternalKerML.g:13046:8: lv_operand_19_0= ruleBodyExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_3_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_operand_19_0=ruleBodyExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_19_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKerML.g:13065:4: ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )?
            	    int alt244=2;
            	    int LA244_0 = input.LA(1);

            	    if ( (LA244_0==107) ) {
            	        int LA244_1 = input.LA(2);

            	        if ( ((LA244_1>=RULE_ID && LA244_1<=RULE_UNRESTRICTED_NAME)) ) {
            	            alt244=1;
            	        }
            	    }
            	    switch (alt244) {
            	        case 1 :
            	            // InternalKerML.g:13066:5: () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) )
            	            {
            	            // InternalKerML.g:13066:5: ()
            	            // InternalKerML.g:13067:6: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              						current = forceCreateModelElementAndAdd(
            	              							grammarAccess.getPrimaryExpressionAccess().getFeatureChainExpressionOperandAction_2_1_0(),
            	              							current);
            	              					
            	            }

            	            }

            	            otherlv_21=(Token)match(input,107,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_21, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_2_1_1());
            	              				
            	            }
            	            // InternalKerML.g:13077:5: ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) )
            	            // InternalKerML.g:13078:6: (lv_ownedRelationship_22_0= ruleFeatureChainMember )
            	            {
            	            // InternalKerML.g:13078:6: (lv_ownedRelationship_22_0= ruleFeatureChainMember )
            	            // InternalKerML.g:13079:7: lv_ownedRelationship_22_0= ruleFeatureChainMember
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFeatureChainMemberParserRuleCall_2_1_2_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_ownedRelationship_22_0=ruleFeatureChainMember();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ownedRelationship",
            	              								lv_ownedRelationship_22_0,
            	              								"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureChainMember");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleFunctionReferenceExpression"
    // InternalKerML.g:13102:1: entryRuleFunctionReferenceExpression returns [EObject current=null] : iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF ;
    public final EObject entryRuleFunctionReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReferenceExpression = null;


        try {
            // InternalKerML.g:13102:68: (iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF )
            // InternalKerML.g:13103:2: iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReferenceExpression=ruleFunctionReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReferenceExpression"


    // $ANTLR start "ruleFunctionReferenceExpression"
    // InternalKerML.g:13109:1: ruleFunctionReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) ) ;
    public final EObject ruleFunctionReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13115:2: ( ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) ) )
            // InternalKerML.g:13116:2: ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) )
            {
            // InternalKerML.g:13116:2: ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) )
            // InternalKerML.g:13117:3: (lv_ownedRelationship_0_0= ruleFunctionReferenceMember )
            {
            // InternalKerML.g:13117:3: (lv_ownedRelationship_0_0= ruleFunctionReferenceMember )
            // InternalKerML.g:13118:4: lv_ownedRelationship_0_0= ruleFunctionReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceExpressionAccess().getOwnedRelationshipFunctionReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFunctionReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReferenceExpression"


    // $ANTLR start "entryRuleFunctionReferenceMember"
    // InternalKerML.g:13138:1: entryRuleFunctionReferenceMember returns [EObject current=null] : iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF ;
    public final EObject entryRuleFunctionReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReferenceMember = null;


        try {
            // InternalKerML.g:13138:64: (iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF )
            // InternalKerML.g:13139:2: iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReferenceMember=ruleFunctionReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReferenceMember"


    // $ANTLR start "ruleFunctionReferenceMember"
    // InternalKerML.g:13145:1: ruleFunctionReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) ) ;
    public final EObject ruleFunctionReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13151:2: ( ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) ) )
            // InternalKerML.g:13152:2: ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) )
            {
            // InternalKerML.g:13152:2: ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) )
            // InternalKerML.g:13153:3: (lv_ownedRelatedElement_0_0= ruleFunctionReference )
            {
            // InternalKerML.g:13153:3: (lv_ownedRelatedElement_0_0= ruleFunctionReference )
            // InternalKerML.g:13154:4: lv_ownedRelatedElement_0_0= ruleFunctionReference
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceMemberAccess().getOwnedRelatedElementFunctionReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleFunctionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReferenceMember"


    // $ANTLR start "entryRuleFunctionReference"
    // InternalKerML.g:13174:1: entryRuleFunctionReference returns [EObject current=null] : iv_ruleFunctionReference= ruleFunctionReference EOF ;
    public final EObject entryRuleFunctionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReference = null;


        try {
            // InternalKerML.g:13174:58: (iv_ruleFunctionReference= ruleFunctionReference EOF )
            // InternalKerML.g:13175:2: iv_ruleFunctionReference= ruleFunctionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReference=ruleFunctionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReference"


    // $ANTLR start "ruleFunctionReference"
    // InternalKerML.g:13181:1: ruleFunctionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) ;
    public final EObject ruleFunctionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13187:2: ( ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) )
            // InternalKerML.g:13188:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            {
            // InternalKerML.g:13188:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            // InternalKerML.g:13189:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            {
            // InternalKerML.g:13189:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            // InternalKerML.g:13190:4: lv_ownedRelationship_0_0= ruleReferenceTyping
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceAccess().getOwnedRelationshipReferenceTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReference"


    // $ANTLR start "entryRuleFeatureChainMember"
    // InternalKerML.g:13210:1: entryRuleFeatureChainMember returns [EObject current=null] : iv_ruleFeatureChainMember= ruleFeatureChainMember EOF ;
    public final EObject entryRuleFeatureChainMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureChainMember = null;


        try {
            // InternalKerML.g:13210:59: (iv_ruleFeatureChainMember= ruleFeatureChainMember EOF )
            // InternalKerML.g:13211:2: iv_ruleFeatureChainMember= ruleFeatureChainMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureChainMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureChainMember=ruleFeatureChainMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureChainMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureChainMember"


    // $ANTLR start "ruleFeatureChainMember"
    // InternalKerML.g:13217:1: ruleFeatureChainMember returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) ) ;
    public final EObject ruleFeatureChainMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13223:2: ( ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) ) )
            // InternalKerML.g:13224:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )
            {
            // InternalKerML.g:13224:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )
            int alt246=2;
            alt246 = dfa246.predict(input);
            switch (alt246) {
                case 1 :
                    // InternalKerML.g:13225:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:13225:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:13226:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:13226:4: ( ruleQualifiedName )
                    // InternalKerML.g:13227:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureChainMemberRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureChainMemberAccess().getMemberElementFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:13242:3: ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) )
                    {
                    // InternalKerML.g:13242:3: ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) )
                    // InternalKerML.g:13243:4: () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:13243:4: ()
                    // InternalKerML.g:13244:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFeatureChainMemberAccess().getOwningMembershipAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:13250:4: ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:13251:5: (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:13251:5: (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:13252:6: lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureChainMemberAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_2_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureChainMemberRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChainMember"


    // $ANTLR start "entryRuleBaseExpression"
    // InternalKerML.g:13274:1: entryRuleBaseExpression returns [EObject current=null] : iv_ruleBaseExpression= ruleBaseExpression EOF ;
    public final EObject entryRuleBaseExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseExpression = null;


        try {
            // InternalKerML.g:13274:55: (iv_ruleBaseExpression= ruleBaseExpression EOF )
            // InternalKerML.g:13275:2: iv_ruleBaseExpression= ruleBaseExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseExpression=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseExpression"


    // $ANTLR start "ruleBaseExpression"
    // InternalKerML.g:13281:1: ruleBaseExpression returns [EObject current=null] : (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_InvocationExpression_3= ruleInvocationExpression | this_BodyExpression_4= ruleBodyExpression | (otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')' ) ) ;
    public final EObject ruleBaseExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_NullExpression_0 = null;

        EObject this_LiteralExpression_1 = null;

        EObject this_FeatureReferenceExpression_2 = null;

        EObject this_InvocationExpression_3 = null;

        EObject this_BodyExpression_4 = null;

        EObject this_SequenceExpression_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:13287:2: ( (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_InvocationExpression_3= ruleInvocationExpression | this_BodyExpression_4= ruleBodyExpression | (otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')' ) ) )
            // InternalKerML.g:13288:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_InvocationExpression_3= ruleInvocationExpression | this_BodyExpression_4= ruleBodyExpression | (otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')' ) )
            {
            // InternalKerML.g:13288:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_InvocationExpression_3= ruleInvocationExpression | this_BodyExpression_4= ruleBodyExpression | (otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')' ) )
            int alt247=6;
            alt247 = dfa247.predict(input);
            switch (alt247) {
                case 1 :
                    // InternalKerML.g:13289:3: this_NullExpression_0= ruleNullExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NullExpression_0=ruleNullExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13298:3: this_LiteralExpression_1= ruleLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralExpression_1=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:13307:3: this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureReferenceExpression_2=ruleFeatureReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureReferenceExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:13316:3: this_InvocationExpression_3= ruleInvocationExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InvocationExpression_3=ruleInvocationExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvocationExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:13325:3: this_BodyExpression_4= ruleBodyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getBodyExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BodyExpression_4=ruleBodyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BodyExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:13334:3: (otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')' )
                    {
                    // InternalKerML.g:13334:3: (otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')' )
                    // InternalKerML.g:13335:4: otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')'
                    {
                    otherlv_5=(Token)match(input,89,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_5_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBaseExpressionAccess().getSequenceExpressionParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FOLLOW_161);
                    this_SequenceExpression_6=ruleSequenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SequenceExpression_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_7=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseExpression"


    // $ANTLR start "entryRuleBodyExpression"
    // InternalKerML.g:13356:1: entryRuleBodyExpression returns [EObject current=null] : iv_ruleBodyExpression= ruleBodyExpression EOF ;
    public final EObject entryRuleBodyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyExpression = null;


        try {
            // InternalKerML.g:13356:55: (iv_ruleBodyExpression= ruleBodyExpression EOF )
            // InternalKerML.g:13357:2: iv_ruleBodyExpression= ruleBodyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyExpression=ruleBodyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyExpression"


    // $ANTLR start "ruleBodyExpression"
    // InternalKerML.g:13363:1: ruleBodyExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) ) ;
    public final EObject ruleBodyExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13369:2: ( ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) ) )
            // InternalKerML.g:13370:2: ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) )
            {
            // InternalKerML.g:13370:2: ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) )
            // InternalKerML.g:13371:3: (lv_ownedRelationship_0_0= ruleExpressionBodyMember )
            {
            // InternalKerML.g:13371:3: (lv_ownedRelationship_0_0= ruleExpressionBodyMember )
            // InternalKerML.g:13372:4: lv_ownedRelationship_0_0= ruleExpressionBodyMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipExpressionBodyMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleExpressionBodyMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ExpressionBodyMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyExpression"


    // $ANTLR start "entryRuleExpressionBodyMember"
    // InternalKerML.g:13392:1: entryRuleExpressionBodyMember returns [EObject current=null] : iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF ;
    public final EObject entryRuleExpressionBodyMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionBodyMember = null;


        try {
            // InternalKerML.g:13392:61: (iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF )
            // InternalKerML.g:13393:2: iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionBodyMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionBodyMember=ruleExpressionBodyMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionBodyMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionBodyMember"


    // $ANTLR start "ruleExpressionBodyMember"
    // InternalKerML.g:13399:1: ruleExpressionBodyMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) ) ;
    public final EObject ruleExpressionBodyMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13405:2: ( ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) ) )
            // InternalKerML.g:13406:2: ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) )
            {
            // InternalKerML.g:13406:2: ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) )
            // InternalKerML.g:13407:3: (lv_ownedRelatedElement_0_0= ruleExpressionBody )
            {
            // InternalKerML.g:13407:3: (lv_ownedRelatedElement_0_0= ruleExpressionBody )
            // InternalKerML.g:13408:4: lv_ownedRelatedElement_0_0= ruleExpressionBody
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionBodyMemberAccess().getOwnedRelatedElementExpressionBodyParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleExpressionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionBodyMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ExpressionBody");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionBodyMember"


    // $ANTLR start "entryRuleBodyParameter"
    // InternalKerML.g:13428:1: entryRuleBodyParameter returns [EObject current=null] : iv_ruleBodyParameter= ruleBodyParameter EOF ;
    public final EObject entryRuleBodyParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyParameter = null;


        try {
            // InternalKerML.g:13428:54: (iv_ruleBodyParameter= ruleBodyParameter EOF )
            // InternalKerML.g:13429:2: iv_ruleBodyParameter= ruleBodyParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyParameter=ruleBodyParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyParameter"


    // $ANTLR start "ruleBodyParameter"
    // InternalKerML.g:13435:1: ruleBodyParameter returns [EObject current=null] : ( (lv_name_0_0= ruleName ) ) ;
    public final EObject ruleBodyParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13441:2: ( ( (lv_name_0_0= ruleName ) ) )
            // InternalKerML.g:13442:2: ( (lv_name_0_0= ruleName ) )
            {
            // InternalKerML.g:13442:2: ( (lv_name_0_0= ruleName ) )
            // InternalKerML.g:13443:3: (lv_name_0_0= ruleName )
            {
            // InternalKerML.g:13443:3: (lv_name_0_0= ruleName )
            // InternalKerML.g:13444:4: lv_name_0_0= ruleName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyParameterAccess().getNameNameParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyParameterRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyParameter"


    // $ANTLR start "entryRuleSequenceExpression"
    // InternalKerML.g:13464:1: entryRuleSequenceExpression returns [EObject current=null] : iv_ruleSequenceExpression= ruleSequenceExpression EOF ;
    public final EObject entryRuleSequenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceExpression = null;


        try {
            // InternalKerML.g:13464:59: (iv_ruleSequenceExpression= ruleSequenceExpression EOF )
            // InternalKerML.g:13465:2: iv_ruleSequenceExpression= ruleSequenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceExpression=ruleSequenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceExpression"


    // $ANTLR start "ruleSequenceExpression"
    // InternalKerML.g:13471:1: ruleSequenceExpression returns [EObject current=null] : (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? ) ;
    public final EObject ruleSequenceExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_operator_3_0=null;
        EObject this_OwnedExpression_0 = null;

        EObject lv_operand_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13477:2: ( (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? ) )
            // InternalKerML.g:13478:2: (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? )
            {
            // InternalKerML.g:13478:2: (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? )
            // InternalKerML.g:13479:3: this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOwnedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_OwnedExpression_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OwnedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13487:3: (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )?
            int alt248=3;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==23) ) {
                int LA248_1 = input.LA(2);

                if ( ((LA248_1>=RULE_STRING_VALUE && LA248_1<=RULE_UNRESTRICTED_NAME)||LA248_1==18||(LA248_1>=33 && LA248_1<=34)||LA248_1==44||LA248_1==89||(LA248_1>=103 && LA248_1<=104)||LA248_1==107||LA248_1==109||LA248_1==113||(LA248_1>=123 && LA248_1<=125)||(LA248_1>=128 && LA248_1<=129)||LA248_1==133||LA248_1==136) ) {
                    alt248=2;
                }
                else if ( (LA248_1==EOF||LA248_1==37||LA248_1==90) ) {
                    alt248=1;
                }
            }
            switch (alt248) {
                case 1 :
                    // InternalKerML.g:13488:4: otherlv_1= ','
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSequenceExpressionAccess().getCommaKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13493:4: ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) )
                    {
                    // InternalKerML.g:13493:4: ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) )
                    // InternalKerML.g:13494:5: () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) )
                    {
                    // InternalKerML.g:13494:5: ()
                    // InternalKerML.g:13495:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getSequenceExpressionAccess().getOperatorExpressionOperandAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalKerML.g:13501:5: ( (lv_operator_3_0= ',' ) )
                    // InternalKerML.g:13502:6: (lv_operator_3_0= ',' )
                    {
                    // InternalKerML.g:13502:6: (lv_operator_3_0= ',' )
                    // InternalKerML.g:13503:7: lv_operator_3_0= ','
                    {
                    lv_operator_3_0=(Token)match(input,23,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_operator_3_0, grammarAccess.getSequenceExpressionAccess().getOperatorCommaKeyword_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getSequenceExpressionRule());
                      							}
                      							setWithLastConsumed(current, "operator", lv_operator_3_0, ",");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:13515:5: ( (lv_operand_4_0= ruleSequenceExpression ) )
                    // InternalKerML.g:13516:6: (lv_operand_4_0= ruleSequenceExpression )
                    {
                    // InternalKerML.g:13516:6: (lv_operand_4_0= ruleSequenceExpression )
                    // InternalKerML.g:13517:7: lv_operand_4_0= ruleSequenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOperandSequenceExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_4_0=ruleSequenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSequenceExpressionRule());
                      							}
                      							add(
                      								current,
                      								"operand",
                      								lv_operand_4_0,
                      								"org.omg.kerml.expressions.xtext.KerMLExpressions.SequenceExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceExpression"


    // $ANTLR start "entryRuleFeatureReferenceExpression"
    // InternalKerML.g:13540:1: entryRuleFeatureReferenceExpression returns [EObject current=null] : iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF ;
    public final EObject entryRuleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReferenceExpression = null;


        try {
            // InternalKerML.g:13540:67: (iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF )
            // InternalKerML.g:13541:2: iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReferenceExpression=ruleFeatureReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReferenceExpression"


    // $ANTLR start "ruleFeatureReferenceExpression"
    // InternalKerML.g:13547:1: ruleFeatureReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) ) ;
    public final EObject ruleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13553:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) ) )
            // InternalKerML.g:13554:2: ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) )
            {
            // InternalKerML.g:13554:2: ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) )
            // InternalKerML.g:13555:3: (lv_ownedRelationship_0_0= ruleFeatureReferenceMember )
            {
            // InternalKerML.g:13555:3: (lv_ownedRelationship_0_0= ruleFeatureReferenceMember )
            // InternalKerML.g:13556:4: lv_ownedRelationship_0_0= ruleFeatureReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipFeatureReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFeatureReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFeatureReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReferenceExpression"


    // $ANTLR start "entryRuleFeatureReferenceMember"
    // InternalKerML.g:13576:1: entryRuleFeatureReferenceMember returns [EObject current=null] : iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF ;
    public final EObject entryRuleFeatureReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReferenceMember = null;


        try {
            // InternalKerML.g:13576:63: (iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF )
            // InternalKerML.g:13577:2: iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReferenceMember=ruleFeatureReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReferenceMember"


    // $ANTLR start "ruleFeatureReferenceMember"
    // InternalKerML.g:13583:1: ruleFeatureReferenceMember returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleFeatureReferenceMember() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:13589:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:13590:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:13590:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:13591:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:13591:3: ( ruleQualifiedName )
            // InternalKerML.g:13592:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureReferenceMemberRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReferenceMember"


    // $ANTLR start "entryRuleInvocationExpression"
    // InternalKerML.g:13609:1: entryRuleInvocationExpression returns [EObject current=null] : iv_ruleInvocationExpression= ruleInvocationExpression EOF ;
    public final EObject entryRuleInvocationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvocationExpression = null;


        try {
            // InternalKerML.g:13609:61: (iv_ruleInvocationExpression= ruleInvocationExpression EOF )
            // InternalKerML.g:13610:2: iv_ruleInvocationExpression= ruleInvocationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvocationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvocationExpression=ruleInvocationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvocationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvocationExpression"


    // $ANTLR start "ruleInvocationExpression"
    // InternalKerML.g:13616:1: ruleInvocationExpression returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] ) ;
    public final EObject ruleInvocationExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject this_ArgumentList_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:13622:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] ) )
            // InternalKerML.g:13623:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] )
            {
            // InternalKerML.g:13623:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] )
            // InternalKerML.g:13624:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current]
            {
            // InternalKerML.g:13624:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) )
            // InternalKerML.g:13625:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping )
            {
            // InternalKerML.g:13625:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping )
            // InternalKerML.g:13626:5: lv_ownedRelationship_0_0= ruleOwnedFeatureTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_159);
            lv_ownedRelationship_0_0=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvocationExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvocationExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getInvocationExpressionAccess().getArgumentListParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ArgumentList_1=ruleArgumentList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArgumentList_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvocationExpression"


    // $ANTLR start "entryRuleOwnedFeatureChain"
    // InternalKerML.g:13658:1: entryRuleOwnedFeatureChain returns [EObject current=null] : iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF ;
    public final EObject entryRuleOwnedFeatureChain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureChain = null;


        try {
            // InternalKerML.g:13658:58: (iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF )
            // InternalKerML.g:13659:2: iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureChainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureChain=ruleOwnedFeatureChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureChain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureChain"


    // $ANTLR start "ruleOwnedFeatureChain"
    // InternalKerML.g:13665:1: ruleOwnedFeatureChain returns [EObject current=null] : this_FeatureChain_0= ruleFeatureChain[$current] ;
    public final EObject ruleOwnedFeatureChain() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureChain_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13671:2: (this_FeatureChain_0= ruleFeatureChain[$current] )
            // InternalKerML.g:13672:2: this_FeatureChain_0= ruleFeatureChain[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedFeatureChainRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedFeatureChainAccess().getFeatureChainParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_FeatureChain_0=ruleFeatureChain(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_FeatureChain_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureChain"


    // $ANTLR start "ruleFeatureChain"
    // InternalKerML.g:13687:1: ruleFeatureChain[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ ) ;
    public final EObject ruleFeatureChain(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13693:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ ) )
            // InternalKerML.g:13694:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ )
            {
            // InternalKerML.g:13694:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ )
            // InternalKerML.g:13695:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+
            {
            // InternalKerML.g:13695:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) )
            // InternalKerML.g:13696:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            {
            // InternalKerML.g:13696:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            // InternalKerML.g:13697:5: lv_ownedRelationship_0_0= ruleOwnedFeatureChaining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureChainAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_135);
            lv_ownedRelationship_0_0=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureChainRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:13714:3: (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+
            int cnt249=0;
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==107) ) {
                    int LA249_2 = input.LA(2);

                    if ( ((LA249_2>=RULE_ID && LA249_2<=RULE_UNRESTRICTED_NAME)) ) {
                        alt249=1;
                    }


                }


                switch (alt249) {
            	case 1 :
            	    // InternalKerML.g:13715:4: otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            	    {
            	    otherlv_1=(Token)match(input,107,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getFeatureChainAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:13719:4: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            	    // InternalKerML.g:13720:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            	    {
            	    // InternalKerML.g:13720:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            	    // InternalKerML.g:13721:6: lv_ownedRelationship_2_0= ruleOwnedFeatureChaining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFeatureChainAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_162);
            	    lv_ownedRelationship_2_0=ruleOwnedFeatureChaining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFeatureChainRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt249 >= 1 ) break loop249;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(249, input);
                        throw eee;
                }
                cnt249++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChain"


    // $ANTLR start "entryRuleOwnedFeatureChaining"
    // InternalKerML.g:13743:1: entryRuleOwnedFeatureChaining returns [EObject current=null] : iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF ;
    public final EObject entryRuleOwnedFeatureChaining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureChaining = null;


        try {
            // InternalKerML.g:13743:61: (iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF )
            // InternalKerML.g:13744:2: iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureChainingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureChaining=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureChaining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureChaining"


    // $ANTLR start "ruleOwnedFeatureChaining"
    // InternalKerML.g:13750:1: ruleOwnedFeatureChaining returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedFeatureChaining() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:13756:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:13757:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:13757:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:13758:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:13758:3: ( ruleQualifiedName )
            // InternalKerML.g:13759:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedFeatureChainingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedFeatureChainingAccess().getChainingFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureChaining"


    // $ANTLR start "ruleArgumentList"
    // InternalKerML.g:13777:1: ruleArgumentList[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' ) ;
    public final EObject ruleArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject this_PositionalArgumentList_1 = null;

        EObject this_NamedArgumentList_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:13783:2: ( (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' ) )
            // InternalKerML.g:13784:2: (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' )
            {
            // InternalKerML.g:13784:2: (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' )
            // InternalKerML.g:13785:3: otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,89,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalKerML.g:13789:3: (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )?
            int alt250=3;
            alt250 = dfa250.predict(input);
            switch (alt250) {
                case 1 :
                    // InternalKerML.g:13790:4: this_PositionalArgumentList_1= rulePositionalArgumentList[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getArgumentListRule());
                      				}
                      				newCompositeNode(grammarAccess.getArgumentListAccess().getPositionalArgumentListParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_161);
                    this_PositionalArgumentList_1=rulePositionalArgumentList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PositionalArgumentList_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13802:4: this_NamedArgumentList_2= ruleNamedArgumentList[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getArgumentListRule());
                      				}
                      				newCompositeNode(grammarAccess.getArgumentListAccess().getNamedArgumentListParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_161);
                    this_NamedArgumentList_2=ruleNamedArgumentList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_NamedArgumentList_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentList"


    // $ANTLR start "rulePositionalArgumentList"
    // InternalKerML.g:13823:1: rulePositionalArgumentList[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* ) ;
    public final EObject rulePositionalArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13829:2: ( ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* ) )
            // InternalKerML.g:13830:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* )
            {
            // InternalKerML.g:13830:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* )
            // InternalKerML.g:13831:3: ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )*
            {
            // InternalKerML.g:13831:3: ( (lv_ownedRelationship_0_0= ruleArgumentMember ) )
            // InternalKerML.g:13832:4: (lv_ownedRelationship_0_0= ruleArgumentMember )
            {
            // InternalKerML.g:13832:4: (lv_ownedRelationship_0_0= ruleArgumentMember )
            // InternalKerML.g:13833:5: lv_ownedRelationship_0_0= ruleArgumentMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipArgumentMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_0_0=ruleArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:13850:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )*
            loop251:
            do {
                int alt251=2;
                int LA251_0 = input.LA(1);

                if ( (LA251_0==23) ) {
                    alt251=1;
                }


                switch (alt251) {
            	case 1 :
            	    // InternalKerML.g:13851:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getPositionalArgumentListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:13855:4: ( (lv_ownedRelationship_2_0= ruleArgumentMember ) )
            	    // InternalKerML.g:13856:5: (lv_ownedRelationship_2_0= ruleArgumentMember )
            	    {
            	    // InternalKerML.g:13856:5: (lv_ownedRelationship_2_0= ruleArgumentMember )
            	    // InternalKerML.g:13857:6: lv_ownedRelationship_2_0= ruleArgumentMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipArgumentMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleArgumentMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePositionalArgumentList"


    // $ANTLR start "entryRuleArgumentMember"
    // InternalKerML.g:13879:1: entryRuleArgumentMember returns [EObject current=null] : iv_ruleArgumentMember= ruleArgumentMember EOF ;
    public final EObject entryRuleArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentMember = null;


        try {
            // InternalKerML.g:13879:55: (iv_ruleArgumentMember= ruleArgumentMember EOF )
            // InternalKerML.g:13880:2: iv_ruleArgumentMember= ruleArgumentMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentMember=ruleArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentMember"


    // $ANTLR start "ruleArgumentMember"
    // InternalKerML.g:13886:1: ruleArgumentMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleArgument ) ) ;
    public final EObject ruleArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13892:2: ( ( (lv_ownedRelatedElement_0_0= ruleArgument ) ) )
            // InternalKerML.g:13893:2: ( (lv_ownedRelatedElement_0_0= ruleArgument ) )
            {
            // InternalKerML.g:13893:2: ( (lv_ownedRelatedElement_0_0= ruleArgument ) )
            // InternalKerML.g:13894:3: (lv_ownedRelatedElement_0_0= ruleArgument )
            {
            // InternalKerML.g:13894:3: (lv_ownedRelatedElement_0_0= ruleArgument )
            // InternalKerML.g:13895:4: lv_ownedRelatedElement_0_0= ruleArgument
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentMemberAccess().getOwnedRelatedElementArgumentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.Argument");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentMember"


    // $ANTLR start "entryRuleArgument"
    // InternalKerML.g:13915:1: entryRuleArgument returns [EObject current=null] : iv_ruleArgument= ruleArgument EOF ;
    public final EObject entryRuleArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgument = null;


        try {
            // InternalKerML.g:13915:49: (iv_ruleArgument= ruleArgument EOF )
            // InternalKerML.g:13916:2: iv_ruleArgument= ruleArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgument=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgument"


    // $ANTLR start "ruleArgument"
    // InternalKerML.g:13922:1: ruleArgument returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleArgumentValue ) ) ;
    public final EObject ruleArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13928:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentValue ) ) )
            // InternalKerML.g:13929:2: ( (lv_ownedRelationship_0_0= ruleArgumentValue ) )
            {
            // InternalKerML.g:13929:2: ( (lv_ownedRelationship_0_0= ruleArgumentValue ) )
            // InternalKerML.g:13930:3: (lv_ownedRelationship_0_0= ruleArgumentValue )
            {
            // InternalKerML.g:13930:3: (lv_ownedRelationship_0_0= ruleArgumentValue )
            // InternalKerML.g:13931:4: lv_ownedRelationship_0_0= ruleArgumentValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentAccess().getOwnedRelationshipArgumentValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgument"


    // $ANTLR start "ruleNamedArgumentList"
    // InternalKerML.g:13952:1: ruleNamedArgumentList[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* ) ;
    public final EObject ruleNamedArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13958:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* ) )
            // InternalKerML.g:13959:2: ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* )
            {
            // InternalKerML.g:13959:2: ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* )
            // InternalKerML.g:13960:3: ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )*
            {
            // InternalKerML.g:13960:3: ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) )
            // InternalKerML.g:13961:4: (lv_ownedRelationship_0_0= ruleNamedArgumentMember )
            {
            // InternalKerML.g:13961:4: (lv_ownedRelationship_0_0= ruleNamedArgumentMember )
            // InternalKerML.g:13962:5: lv_ownedRelationship_0_0= ruleNamedArgumentMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedArgumentMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_0_0=ruleNamedArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgumentMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:13979:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )*
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( (LA252_0==23) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    // InternalKerML.g:13980:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getNamedArgumentListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:13984:4: ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) )
            	    // InternalKerML.g:13985:5: (lv_ownedRelationship_2_0= ruleNamedArgumentMember )
            	    {
            	    // InternalKerML.g:13985:5: (lv_ownedRelationship_2_0= ruleNamedArgumentMember )
            	    // InternalKerML.g:13986:6: lv_ownedRelationship_2_0= ruleNamedArgumentMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedArgumentMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleNamedArgumentMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgumentMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgumentList"


    // $ANTLR start "entryRuleNamedArgumentMember"
    // InternalKerML.g:14008:1: entryRuleNamedArgumentMember returns [EObject current=null] : iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF ;
    public final EObject entryRuleNamedArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedArgumentMember = null;


        try {
            // InternalKerML.g:14008:60: (iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF )
            // InternalKerML.g:14009:2: iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedArgumentMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedArgumentMember=ruleNamedArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedArgumentMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedArgumentMember"


    // $ANTLR start "ruleNamedArgumentMember"
    // InternalKerML.g:14015:1: ruleNamedArgumentMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) ) ;
    public final EObject ruleNamedArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14021:2: ( ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) ) )
            // InternalKerML.g:14022:2: ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) )
            {
            // InternalKerML.g:14022:2: ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) )
            // InternalKerML.g:14023:3: (lv_ownedRelatedElement_0_0= ruleNamedArgument )
            {
            // InternalKerML.g:14023:3: (lv_ownedRelatedElement_0_0= ruleNamedArgument )
            // InternalKerML.g:14024:4: lv_ownedRelatedElement_0_0= ruleNamedArgument
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getNamedArgumentMemberAccess().getOwnedRelatedElementNamedArgumentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleNamedArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getNamedArgumentMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgument");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgumentMember"


    // $ANTLR start "entryRuleNamedArgument"
    // InternalKerML.g:14044:1: entryRuleNamedArgument returns [EObject current=null] : iv_ruleNamedArgument= ruleNamedArgument EOF ;
    public final EObject entryRuleNamedArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedArgument = null;


        try {
            // InternalKerML.g:14044:54: (iv_ruleNamedArgument= ruleNamedArgument EOF )
            // InternalKerML.g:14045:2: iv_ruleNamedArgument= ruleNamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedArgument=ruleNamedArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedArgument"


    // $ANTLR start "ruleNamedArgument"
    // InternalKerML.g:14051:1: ruleNamedArgument returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) ) ;
    public final EObject ruleNamedArgument() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14057:2: ( ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) ) )
            // InternalKerML.g:14058:2: ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) )
            {
            // InternalKerML.g:14058:2: ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) )
            // InternalKerML.g:14059:3: ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) )
            {
            // InternalKerML.g:14059:3: ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) )
            // InternalKerML.g:14060:4: (lv_ownedRelationship_0_0= ruleParameterRedefinition )
            {
            // InternalKerML.g:14060:4: (lv_ownedRelationship_0_0= ruleParameterRedefinition )
            // InternalKerML.g:14061:5: lv_ownedRelationship_0_0= ruleParameterRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentAccess().getOwnedRelationshipParameterRedefinitionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_ownedRelationship_0_0=ruleParameterRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ParameterRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,78,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKerML.g:14082:3: ( (lv_ownedRelationship_2_0= ruleArgumentValue ) )
            // InternalKerML.g:14083:4: (lv_ownedRelationship_2_0= ruleArgumentValue )
            {
            // InternalKerML.g:14083:4: (lv_ownedRelationship_2_0= ruleArgumentValue )
            // InternalKerML.g:14084:5: lv_ownedRelationship_2_0= ruleArgumentValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentAccess().getOwnedRelationshipArgumentValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgument"


    // $ANTLR start "entryRuleParameterRedefinition"
    // InternalKerML.g:14105:1: entryRuleParameterRedefinition returns [EObject current=null] : iv_ruleParameterRedefinition= ruleParameterRedefinition EOF ;
    public final EObject entryRuleParameterRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterRedefinition = null;


        try {
            // InternalKerML.g:14105:62: (iv_ruleParameterRedefinition= ruleParameterRedefinition EOF )
            // InternalKerML.g:14106:2: iv_ruleParameterRedefinition= ruleParameterRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterRedefinition=ruleParameterRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterRedefinition"


    // $ANTLR start "ruleParameterRedefinition"
    // InternalKerML.g:14112:1: ruleParameterRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleParameterRedefinition() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:14118:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:14119:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:14119:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:14120:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:14120:3: ( ruleQualifiedName )
            // InternalKerML.g:14121:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getParameterRedefinitionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getParameterRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterRedefinition"


    // $ANTLR start "entryRuleArgumentValue"
    // InternalKerML.g:14138:1: entryRuleArgumentValue returns [EObject current=null] : iv_ruleArgumentValue= ruleArgumentValue EOF ;
    public final EObject entryRuleArgumentValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentValue = null;


        try {
            // InternalKerML.g:14138:54: (iv_ruleArgumentValue= ruleArgumentValue EOF )
            // InternalKerML.g:14139:2: iv_ruleArgumentValue= ruleArgumentValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentValue=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentValue"


    // $ANTLR start "ruleArgumentValue"
    // InternalKerML.g:14145:1: ruleArgumentValue returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) ;
    public final EObject ruleArgumentValue() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14151:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:14152:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:14152:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            // InternalKerML.g:14153:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            {
            // InternalKerML.g:14153:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            // InternalKerML.g:14154:4: lv_ownedRelatedElement_0_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentValueRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentValue"


    // $ANTLR start "entryRuleNullExpression"
    // InternalKerML.g:14174:1: entryRuleNullExpression returns [EObject current=null] : iv_ruleNullExpression= ruleNullExpression EOF ;
    public final EObject entryRuleNullExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullExpression = null;


        try {
            // InternalKerML.g:14174:55: (iv_ruleNullExpression= ruleNullExpression EOF )
            // InternalKerML.g:14175:2: iv_ruleNullExpression= ruleNullExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullExpression=ruleNullExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullExpression"


    // $ANTLR start "ruleNullExpression"
    // InternalKerML.g:14181:1: ruleNullExpression returns [EObject current=null] : ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) ) ;
    public final EObject ruleNullExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalKerML.g:14187:2: ( ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) ) )
            // InternalKerML.g:14188:2: ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) )
            {
            // InternalKerML.g:14188:2: ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) )
            // InternalKerML.g:14189:3: () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) )
            {
            // InternalKerML.g:14189:3: ()
            // InternalKerML.g:14190:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullExpressionAccess().getNullExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalKerML.g:14196:3: (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==136) ) {
                alt253=1;
            }
            else if ( (LA253_0==89) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }
            switch (alt253) {
                case 1 :
                    // InternalKerML.g:14197:4: otherlv_1= 'null'
                    {
                    otherlv_1=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getNullKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14202:4: (otherlv_2= '(' otherlv_3= ')' )
                    {
                    // InternalKerML.g:14202:4: (otherlv_2= '(' otherlv_3= ')' )
                    // InternalKerML.g:14203:5: otherlv_2= '(' otherlv_3= ')'
                    {
                    otherlv_2=(Token)match(input,89,FOLLOW_161); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getNullExpressionAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    otherlv_3=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getNullExpressionAccess().getRightParenthesisKeyword_1_1_1());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullExpression"


    // $ANTLR start "entryRuleLiteralExpression"
    // InternalKerML.g:14217:1: entryRuleLiteralExpression returns [EObject current=null] : iv_ruleLiteralExpression= ruleLiteralExpression EOF ;
    public final EObject entryRuleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralExpression = null;


        try {
            // InternalKerML.g:14217:58: (iv_ruleLiteralExpression= ruleLiteralExpression EOF )
            // InternalKerML.g:14218:2: iv_ruleLiteralExpression= ruleLiteralExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralExpression=ruleLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralExpression"


    // $ANTLR start "ruleLiteralExpression"
    // InternalKerML.g:14224:1: ruleLiteralExpression returns [EObject current=null] : (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity ) ;
    public final EObject ruleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralBoolean_0 = null;

        EObject this_LiteralString_1 = null;

        EObject this_LiteralInteger_2 = null;

        EObject this_LiteralReal_3 = null;

        EObject this_LiteralInfinity_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:14230:2: ( (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity ) )
            // InternalKerML.g:14231:2: (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity )
            {
            // InternalKerML.g:14231:2: (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity )
            int alt254=5;
            switch ( input.LA(1) ) {
            case 103:
            case 104:
                {
                alt254=1;
                }
                break;
            case RULE_STRING_VALUE:
                {
                alt254=2;
                }
                break;
            case RULE_DECIMAL_VALUE:
                {
                int LA254_3 = input.LA(2);

                if ( (LA254_3==107) ) {
                    int LA254_6 = input.LA(3);

                    if ( ((LA254_6>=RULE_DECIMAL_VALUE && LA254_6<=RULE_EXP_VALUE)) ) {
                        alt254=4;
                    }
                    else if ( ((LA254_6>=RULE_ID && LA254_6<=RULE_UNRESTRICTED_NAME)||LA254_6==18) ) {
                        alt254=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 254, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA254_3==EOF||(LA254_3>=14 && LA254_3<=15)||(LA254_3>=17 && LA254_3<=19)||LA254_3==23||LA254_3==34||(LA254_3>=36 && LA254_3<=37)||(LA254_3>=82 && LA254_3<=83)||LA254_3==90||LA254_3==109||(LA254_3>=111 && LA254_3<=112)||(LA254_3>=114 && LA254_3<=132)||(LA254_3>=134 && LA254_3<=135)) ) {
                    alt254=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 254, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_EXP_VALUE:
            case 107:
                {
                alt254=4;
                }
                break;
            case 34:
                {
                alt254=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;
            }

            switch (alt254) {
                case 1 :
                    // InternalKerML.g:14232:3: this_LiteralBoolean_0= ruleLiteralBoolean
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralBooleanParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralBoolean_0=ruleLiteralBoolean();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralBoolean_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14241:3: this_LiteralString_1= ruleLiteralString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralString_1=ruleLiteralString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralString_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:14250:3: this_LiteralInteger_2= ruleLiteralInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralIntegerParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralInteger_2=ruleLiteralInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralInteger_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:14259:3: this_LiteralReal_3= ruleLiteralReal
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralRealParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralReal_3=ruleLiteralReal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralReal_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:14268:3: this_LiteralInfinity_4= ruleLiteralInfinity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralInfinityParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralInfinity_4=ruleLiteralInfinity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralInfinity_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralExpression"


    // $ANTLR start "entryRuleLiteralBoolean"
    // InternalKerML.g:14280:1: entryRuleLiteralBoolean returns [EObject current=null] : iv_ruleLiteralBoolean= ruleLiteralBoolean EOF ;
    public final EObject entryRuleLiteralBoolean() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralBoolean = null;


        try {
            // InternalKerML.g:14280:55: (iv_ruleLiteralBoolean= ruleLiteralBoolean EOF )
            // InternalKerML.g:14281:2: iv_ruleLiteralBoolean= ruleLiteralBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralBoolean=ruleLiteralBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralBoolean; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralBoolean"


    // $ANTLR start "ruleLiteralBoolean"
    // InternalKerML.g:14287:1: ruleLiteralBoolean returns [EObject current=null] : ( (lv_value_0_0= ruleBooleanValue ) ) ;
    public final EObject ruleLiteralBoolean() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14293:2: ( ( (lv_value_0_0= ruleBooleanValue ) ) )
            // InternalKerML.g:14294:2: ( (lv_value_0_0= ruleBooleanValue ) )
            {
            // InternalKerML.g:14294:2: ( (lv_value_0_0= ruleBooleanValue ) )
            // InternalKerML.g:14295:3: (lv_value_0_0= ruleBooleanValue )
            {
            // InternalKerML.g:14295:3: (lv_value_0_0= ruleBooleanValue )
            // InternalKerML.g:14296:4: lv_value_0_0= ruleBooleanValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLiteralBooleanAccess().getValueBooleanValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLiteralBooleanRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.BooleanValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralBoolean"


    // $ANTLR start "entryRuleBooleanValue"
    // InternalKerML.g:14316:1: entryRuleBooleanValue returns [String current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final String entryRuleBooleanValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBooleanValue = null;


        try {
            // InternalKerML.g:14316:52: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // InternalKerML.g:14317:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // InternalKerML.g:14323:1: ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'true' | kw= 'false' ) ;
    public final AntlrDatatypeRuleToken ruleBooleanValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:14329:2: ( (kw= 'true' | kw= 'false' ) )
            // InternalKerML.g:14330:2: (kw= 'true' | kw= 'false' )
            {
            // InternalKerML.g:14330:2: (kw= 'true' | kw= 'false' )
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==103) ) {
                alt255=1;
            }
            else if ( (LA255_0==104) ) {
                alt255=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;
            }
            switch (alt255) {
                case 1 :
                    // InternalKerML.g:14331:3: kw= 'true'
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14337:3: kw= 'false'
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleLiteralString"
    // InternalKerML.g:14346:1: entryRuleLiteralString returns [EObject current=null] : iv_ruleLiteralString= ruleLiteralString EOF ;
    public final EObject entryRuleLiteralString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralString = null;


        try {
            // InternalKerML.g:14346:54: (iv_ruleLiteralString= ruleLiteralString EOF )
            // InternalKerML.g:14347:2: iv_ruleLiteralString= ruleLiteralString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralString=ruleLiteralString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralString"


    // $ANTLR start "ruleLiteralString"
    // InternalKerML.g:14353:1: ruleLiteralString returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING_VALUE ) ) ;
    public final EObject ruleLiteralString() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalKerML.g:14359:2: ( ( (lv_value_0_0= RULE_STRING_VALUE ) ) )
            // InternalKerML.g:14360:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            {
            // InternalKerML.g:14360:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            // InternalKerML.g:14361:3: (lv_value_0_0= RULE_STRING_VALUE )
            {
            // InternalKerML.g:14361:3: (lv_value_0_0= RULE_STRING_VALUE )
            // InternalKerML.g:14362:4: lv_value_0_0= RULE_STRING_VALUE
            {
            lv_value_0_0=(Token)match(input,RULE_STRING_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getLiteralStringAccess().getValueSTRING_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLiteralStringRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.STRING_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralString"


    // $ANTLR start "entryRuleLiteralInteger"
    // InternalKerML.g:14381:1: entryRuleLiteralInteger returns [EObject current=null] : iv_ruleLiteralInteger= ruleLiteralInteger EOF ;
    public final EObject entryRuleLiteralInteger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralInteger = null;


        try {
            // InternalKerML.g:14381:55: (iv_ruleLiteralInteger= ruleLiteralInteger EOF )
            // InternalKerML.g:14382:2: iv_ruleLiteralInteger= ruleLiteralInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralInteger=ruleLiteralInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralInteger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralInteger"


    // $ANTLR start "ruleLiteralInteger"
    // InternalKerML.g:14388:1: ruleLiteralInteger returns [EObject current=null] : ( (lv_value_0_0= RULE_DECIMAL_VALUE ) ) ;
    public final EObject ruleLiteralInteger() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalKerML.g:14394:2: ( ( (lv_value_0_0= RULE_DECIMAL_VALUE ) ) )
            // InternalKerML.g:14395:2: ( (lv_value_0_0= RULE_DECIMAL_VALUE ) )
            {
            // InternalKerML.g:14395:2: ( (lv_value_0_0= RULE_DECIMAL_VALUE ) )
            // InternalKerML.g:14396:3: (lv_value_0_0= RULE_DECIMAL_VALUE )
            {
            // InternalKerML.g:14396:3: (lv_value_0_0= RULE_DECIMAL_VALUE )
            // InternalKerML.g:14397:4: lv_value_0_0= RULE_DECIMAL_VALUE
            {
            lv_value_0_0=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getLiteralIntegerAccess().getValueDECIMAL_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLiteralIntegerRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.DECIMAL_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralInteger"


    // $ANTLR start "entryRuleLiteralReal"
    // InternalKerML.g:14416:1: entryRuleLiteralReal returns [EObject current=null] : iv_ruleLiteralReal= ruleLiteralReal EOF ;
    public final EObject entryRuleLiteralReal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralReal = null;


        try {
            // InternalKerML.g:14416:52: (iv_ruleLiteralReal= ruleLiteralReal EOF )
            // InternalKerML.g:14417:2: iv_ruleLiteralReal= ruleLiteralReal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRealRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralReal=ruleLiteralReal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralReal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralReal"


    // $ANTLR start "ruleLiteralReal"
    // InternalKerML.g:14423:1: ruleLiteralReal returns [EObject current=null] : ( (lv_value_0_0= ruleRealValue ) ) ;
    public final EObject ruleLiteralReal() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14429:2: ( ( (lv_value_0_0= ruleRealValue ) ) )
            // InternalKerML.g:14430:2: ( (lv_value_0_0= ruleRealValue ) )
            {
            // InternalKerML.g:14430:2: ( (lv_value_0_0= ruleRealValue ) )
            // InternalKerML.g:14431:3: (lv_value_0_0= ruleRealValue )
            {
            // InternalKerML.g:14431:3: (lv_value_0_0= ruleRealValue )
            // InternalKerML.g:14432:4: lv_value_0_0= ruleRealValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLiteralRealAccess().getValueRealValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLiteralRealRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.RealValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralReal"


    // $ANTLR start "entryRuleRealValue"
    // InternalKerML.g:14452:1: entryRuleRealValue returns [String current=null] : iv_ruleRealValue= ruleRealValue EOF ;
    public final String entryRuleRealValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealValue = null;


        try {
            // InternalKerML.g:14452:49: (iv_ruleRealValue= ruleRealValue EOF )
            // InternalKerML.g:14453:2: iv_ruleRealValue= ruleRealValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealValue=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealValue"


    // $ANTLR start "ruleRealValue"
    // InternalKerML.g:14459:1: ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) ;
    public final AntlrDatatypeRuleToken ruleRealValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMAL_VALUE_0=null;
        Token kw=null;
        Token this_DECIMAL_VALUE_2=null;
        Token this_EXP_VALUE_3=null;
        Token this_EXP_VALUE_4=null;


        	enterRule();

        try {
            // InternalKerML.g:14465:2: ( ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) )
            // InternalKerML.g:14466:2: ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
            {
            // InternalKerML.g:14466:2: ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==RULE_DECIMAL_VALUE||LA258_0==107) ) {
                alt258=1;
            }
            else if ( (LA258_0==RULE_EXP_VALUE) ) {
                alt258=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 258, 0, input);

                throw nvae;
            }
            switch (alt258) {
                case 1 :
                    // InternalKerML.g:14467:3: ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    {
                    // InternalKerML.g:14467:3: ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    // InternalKerML.g:14468:4: (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
                    {
                    // InternalKerML.g:14468:4: (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )?
                    int alt256=2;
                    int LA256_0 = input.LA(1);

                    if ( (LA256_0==RULE_DECIMAL_VALUE) ) {
                        alt256=1;
                    }
                    switch (alt256) {
                        case 1 :
                            // InternalKerML.g:14469:5: this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE
                            {
                            this_DECIMAL_VALUE_0=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_VALUE_0);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_VALUE_0, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,107,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealValueAccess().getFullStopKeyword_0_1());
                      			
                    }
                    // InternalKerML.g:14482:4: (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
                    int alt257=2;
                    int LA257_0 = input.LA(1);

                    if ( (LA257_0==RULE_DECIMAL_VALUE) ) {
                        alt257=1;
                    }
                    else if ( (LA257_0==RULE_EXP_VALUE) ) {
                        alt257=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 257, 0, input);

                        throw nvae;
                    }
                    switch (alt257) {
                        case 1 :
                            // InternalKerML.g:14483:5: this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE
                            {
                            this_DECIMAL_VALUE_2=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_VALUE_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_VALUE_2, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:14491:5: this_EXP_VALUE_3= RULE_EXP_VALUE
                            {
                            this_EXP_VALUE_3=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXP_VALUE_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXP_VALUE_3, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:14501:3: this_EXP_VALUE_4= RULE_EXP_VALUE
                    {
                    this_EXP_VALUE_4=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXP_VALUE_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_EXP_VALUE_4, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealValue"


    // $ANTLR start "entryRuleLiteralInfinity"
    // InternalKerML.g:14512:1: entryRuleLiteralInfinity returns [EObject current=null] : iv_ruleLiteralInfinity= ruleLiteralInfinity EOF ;
    public final EObject entryRuleLiteralInfinity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralInfinity = null;


        try {
            // InternalKerML.g:14512:56: (iv_ruleLiteralInfinity= ruleLiteralInfinity EOF )
            // InternalKerML.g:14513:2: iv_ruleLiteralInfinity= ruleLiteralInfinity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralInfinityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralInfinity=ruleLiteralInfinity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralInfinity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralInfinity"


    // $ANTLR start "ruleLiteralInfinity"
    // InternalKerML.g:14519:1: ruleLiteralInfinity returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleLiteralInfinity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalKerML.g:14525:2: ( ( () otherlv_1= '*' ) )
            // InternalKerML.g:14526:2: ( () otherlv_1= '*' )
            {
            // InternalKerML.g:14526:2: ( () otherlv_1= '*' )
            // InternalKerML.g:14527:3: () otherlv_1= '*'
            {
            // InternalKerML.g:14527:3: ()
            // InternalKerML.g:14528:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralInfinityAccess().getLiteralInfinityAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralInfinityAccess().getAsteriskKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralInfinity"


    // $ANTLR start "entryRuleName"
    // InternalKerML.g:14542:1: entryRuleName returns [String current=null] : iv_ruleName= ruleName EOF ;
    public final String entryRuleName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleName = null;


        try {
            // InternalKerML.g:14542:44: (iv_ruleName= ruleName EOF )
            // InternalKerML.g:14543:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalKerML.g:14549:1: ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) ;
    public final AntlrDatatypeRuleToken ruleName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_UNRESTRICTED_NAME_1=null;


        	enterRule();

        try {
            // InternalKerML.g:14555:2: ( (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) )
            // InternalKerML.g:14556:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
            {
            // InternalKerML.g:14556:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==RULE_ID) ) {
                alt259=1;
            }
            else if ( (LA259_0==RULE_UNRESTRICTED_NAME) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // InternalKerML.g:14557:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14565:3: this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME
                    {
                    this_UNRESTRICTED_NAME_1=(Token)match(input,RULE_UNRESTRICTED_NAME,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UNRESTRICTED_NAME_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_UNRESTRICTED_NAME_1, grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleQualification"
    // InternalKerML.g:14576:1: entryRuleQualification returns [String current=null] : iv_ruleQualification= ruleQualification EOF ;
    public final String entryRuleQualification() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualification = null;


        try {
            // InternalKerML.g:14576:53: (iv_ruleQualification= ruleQualification EOF )
            // InternalKerML.g:14577:2: iv_ruleQualification= ruleQualification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualification=ruleQualification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualification.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualification"


    // $ANTLR start "ruleQualification"
    // InternalKerML.g:14583:1: ruleQualification returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName kw= '::' )+ ;
    public final AntlrDatatypeRuleToken ruleQualification() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Name_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14589:2: ( (this_Name_0= ruleName kw= '::' )+ )
            // InternalKerML.g:14590:2: (this_Name_0= ruleName kw= '::' )+
            {
            // InternalKerML.g:14590:2: (this_Name_0= ruleName kw= '::' )+
            int cnt260=0;
            loop260:
            do {
                int alt260=2;
                int LA260_0 = input.LA(1);

                if ( (LA260_0==RULE_ID) ) {
                    int LA260_1 = input.LA(2);

                    if ( (LA260_1==35) ) {
                        int LA260_4 = input.LA(3);

                        if ( (LA260_4==EOF||(LA260_4>=RULE_ID && LA260_4<=RULE_UNRESTRICTED_NAME)||LA260_4==34) ) {
                            alt260=1;
                        }


                    }


                }
                else if ( (LA260_0==RULE_UNRESTRICTED_NAME) ) {
                    int LA260_2 = input.LA(2);

                    if ( (LA260_2==35) ) {
                        int LA260_4 = input.LA(3);

                        if ( (LA260_4==EOF||(LA260_4>=RULE_ID && LA260_4<=RULE_UNRESTRICTED_NAME)||LA260_4==34) ) {
                            alt260=1;
                        }


                    }


                }


                switch (alt260) {
            	case 1 :
            	    // InternalKerML.g:14591:3: this_Name_0= ruleName kw= '::'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualificationAccess().getNameParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_165);
            	    this_Name_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_Name_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,35,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualificationAccess().getColonColonKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt260 >= 1 ) break loop260;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(260, input);
                        throw eee;
                }
                cnt260++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualification"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalKerML.g:14610:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalKerML.g:14610:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalKerML.g:14611:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalKerML.g:14617:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Qualification_0 = null;

        AntlrDatatypeRuleToken this_Name_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:14623:2: ( ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName ) )
            // InternalKerML.g:14624:2: ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName )
            {
            // InternalKerML.g:14624:2: ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName )
            // InternalKerML.g:14625:3: (this_Qualification_0= ruleQualification )? this_Name_1= ruleName
            {
            // InternalKerML.g:14625:3: (this_Qualification_0= ruleQualification )?
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==RULE_ID) ) {
                int LA261_1 = input.LA(2);

                if ( (LA261_1==35) ) {
                    alt261=1;
                }
            }
            else if ( (LA261_0==RULE_UNRESTRICTED_NAME) ) {
                int LA261_2 = input.LA(2);

                if ( (LA261_2==35) ) {
                    alt261=1;
                }
            }
            switch (alt261) {
                case 1 :
                    // InternalKerML.g:14626:4: this_Qualification_0= ruleQualification
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getQualificationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_Qualification_0=ruleQualification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Qualification_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Name_1=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Name_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "ruleFilterPackageMemberVisibility"
    // InternalKerML.g:14651:1: ruleFilterPackageMemberVisibility returns [Enumerator current=null] : (enumLiteral_0= '[' ) ;
    public final Enumerator ruleFilterPackageMemberVisibility() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalKerML.g:14657:2: ( (enumLiteral_0= '[' ) )
            // InternalKerML.g:14658:2: (enumLiteral_0= '[' )
            {
            // InternalKerML.g:14658:2: (enumLiteral_0= '[' )
            // InternalKerML.g:14659:3: enumLiteral_0= '['
            {
            enumLiteral_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageMemberVisibility"


    // $ANTLR start "ruleVisibilityIndicator"
    // InternalKerML.g:14668:1: ruleVisibilityIndicator returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) ) ;
    public final Enumerator ruleVisibilityIndicator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKerML.g:14674:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) ) )
            // InternalKerML.g:14675:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) )
            {
            // InternalKerML.g:14675:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) )
            int alt262=3;
            switch ( input.LA(1) ) {
            case 137:
                {
                alt262=1;
                }
                break;
            case 138:
                {
                alt262=2;
                }
                break;
            case 139:
                {
                alt262=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }

            switch (alt262) {
                case 1 :
                    // InternalKerML.g:14676:3: (enumLiteral_0= 'public' )
                    {
                    // InternalKerML.g:14676:3: (enumLiteral_0= 'public' )
                    // InternalKerML.g:14677:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:14684:3: (enumLiteral_1= 'private' )
                    {
                    // InternalKerML.g:14684:3: (enumLiteral_1= 'private' )
                    // InternalKerML.g:14685:4: enumLiteral_1= 'private'
                    {
                    enumLiteral_1=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:14692:3: (enumLiteral_2= 'protected' )
                    {
                    // InternalKerML.g:14692:3: (enumLiteral_2= 'protected' )
                    // InternalKerML.g:14693:4: enumLiteral_2= 'protected'
                    {
                    enumLiteral_2=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilityIndicator"


    // $ANTLR start "ruleFeatureDirection"
    // InternalKerML.g:14703:1: ruleFeatureDirection returns [Enumerator current=null] : ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) ;
    public final Enumerator ruleFeatureDirection() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKerML.g:14709:2: ( ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) )
            // InternalKerML.g:14710:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
            {
            // InternalKerML.g:14710:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
            int alt263=3;
            switch ( input.LA(1) ) {
            case 140:
                {
                alt263=1;
                }
                break;
            case 141:
                {
                alt263=2;
                }
                break;
            case 142:
                {
                alt263=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;
            }

            switch (alt263) {
                case 1 :
                    // InternalKerML.g:14711:3: (enumLiteral_0= 'in' )
                    {
                    // InternalKerML.g:14711:3: (enumLiteral_0= 'in' )
                    // InternalKerML.g:14712:4: enumLiteral_0= 'in'
                    {
                    enumLiteral_0=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:14719:3: (enumLiteral_1= 'out' )
                    {
                    // InternalKerML.g:14719:3: (enumLiteral_1= 'out' )
                    // InternalKerML.g:14720:4: enumLiteral_1= 'out'
                    {
                    enumLiteral_1=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:14727:3: (enumLiteral_2= 'inout' )
                    {
                    // InternalKerML.g:14727:3: (enumLiteral_2= 'inout' )
                    // InternalKerML.g:14728:4: enumLiteral_2= 'inout'
                    {
                    enumLiteral_2=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDirection"

    // $ANTLR start synpred1_InternalKerML
    public final void synpred1_InternalKerML_fragment() throws RecognitionException {   
        // InternalKerML.g:4869:5: ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )
        // InternalKerML.g:
        {
        if ( input.LA(1)==42||(input.LA(1)>=68 && input.LA(1)<=72) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred1_InternalKerML

    // Delegated rules

    public final boolean synpred1_InternalKerML() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalKerML_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA19 dfa19 = new DFA19(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA183 dfa183 = new DFA183(this);
    protected DFA198 dfa198 = new DFA198(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA200 dfa200 = new DFA200(this);
    protected DFA246 dfa246 = new DFA246(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA250 dfa250 = new DFA250(this);
    static final String dfa_1s = "\17\uffff";
    static final String dfa_2s = "\2\4\5\uffff\1\11\2\4\2\17\3\4";
    static final String dfa_3s = "\1\156\1\31\5\uffff\1\12\2\31\2\17\3\31";
    static final String dfa_4s = "\2\uffff\1\1\1\2\1\3\1\4\1\5\10\uffff";
    static final String dfa_5s = "\17\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\3\22\uffff\1\1\1\uffff\1\4\2\5\120\uffff\2\6",
            "\1\2\1\3\3\uffff\1\10\1\11\3\uffff\1\7\12\uffff\1\2",
            "",
            "",
            "",
            "",
            "",
            "\1\12\1\13",
            "\1\2\1\3\23\uffff\1\2",
            "\1\2\1\3\23\uffff\1\2",
            "\1\14",
            "\1\14",
            "\1\2\1\3\3\uffff\1\15\1\16\16\uffff\1\2",
            "\1\2\1\3\23\uffff\1\2",
            "\1\2\1\3\23\uffff\1\2"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "842:2: (this_Comment_0= ruleComment | this_PrefixComment_1= rulePrefixComment | this_Documentation_2= ruleDocumentation | this_TextualRepresentation_3= ruleTextualRepresentation | this_MetadataFeature_4= ruleMetadataFeature )";
        }
    }
    static final String dfa_7s = "\11\uffff";
    static final String dfa_8s = "\1\11\3\21\1\11\2\uffff\1\44\1\21";
    static final String dfa_9s = "\1\42\3\122\1\44\2\uffff\1\44\1\122";
    static final String dfa_10s = "\5\uffff\1\1\1\2\2\uffff";
    static final String dfa_11s = "\11\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\1\2\27\uffff\1\3",
            "\2\5\20\uffff\1\4\56\uffff\1\6",
            "\2\5\20\uffff\1\4\56\uffff\1\6",
            "\2\5\20\uffff\1\7\56\uffff\1\6",
            "\1\1\1\2\27\uffff\1\3\1\uffff\1\10",
            "",
            "",
            "\1\10",
            "\2\5\77\uffff\1\6"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1852:3: (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] )";
        }
    }
    static final String dfa_13s = "\46\uffff";
    static final String dfa_14s = "\1\20\5\uffff\1\51\6\uffff\1\11\4\uffff\1\11\13\uffff\1\11\2\61\2\17\1\11\2\61";
    static final String dfa_15s = "\1\154\5\uffff\1\154\6\uffff\1\126\4\uffff\1\115\13\uffff\1\12\2\115\2\17\3\115";
    static final String dfa_16s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\16\1\17\1\20\1\21\1\uffff\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\14\1\15\10\uffff";
    static final String dfa_17s = "\46\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\3\uffff\1\2\10\uffff\1\3\10\uffff\1\4\1\uffff\1\6\1\7\4\uffff\1\27\1\uffff\1\22\1\23\2\24\1\27\1\10\1\26\7\uffff\1\30\12\uffff\1\30\1\33\1\25\1\31\1\32\3\uffff\1\5\2\uffff\1\14\1\11\1\12\1\15\7\uffff\1\17\1\uffff\1\20\2\uffff\1\21\4\uffff\1\16\2\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "\1\7\13\uffff\1\10\36\uffff\1\14\1\11\1\12\1\15\7\uffff\1\17\1\uffff\1\20\2\uffff\1\21\4\uffff\1\16\2\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\34\3\uffff\1\34\2\uffff\2\34\16\uffff\1\34\10\uffff\5\34\43\uffff\1\34\3\uffff\1\35",
            "",
            "",
            "",
            "",
            "\1\37\1\40\3\uffff\1\36\42\uffff\1\23\4\uffff\1\26\24\uffff\1\25\1\31\1\32",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\41\1\42",
            "\1\23\4\uffff\1\26\24\uffff\1\25\1\31\1\32",
            "\1\23\4\uffff\1\26\24\uffff\1\25\1\31\1\32",
            "\1\43",
            "\1\43",
            "\1\44\1\45\46\uffff\1\23\4\uffff\1\26\24\uffff\1\25\1\31\1\32",
            "\1\23\4\uffff\1\26\24\uffff\1\25\1\31\1\32",
            "\1\23\4\uffff\1\26\24\uffff\1\25\1\31\1\32"
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "2193:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_Multiplicity_4= ruleMultiplicity | this_Type_5= ruleType | this_Classifier_6= ruleClassifier | this_Class_7= ruleClass | this_Structure_8= ruleStructure | this_Metaclass_9= ruleMetaclass | this_DataType_10= ruleDataType | this_Association_11= ruleAssociation | this_AssociationStructure_12= ruleAssociationStructure | this_Interaction_13= ruleInteraction | this_Behavior_14= ruleBehavior | this_Function_15= ruleFunction | this_Predicate_16= rulePredicate | this_Specialization_17= ruleSpecialization | this_Conjugation_18= ruleConjugation | this_FeatureTyping_19= ruleFeatureTyping | this_Subclassification_20= ruleSubclassification | this_Disjoining_21= ruleDisjoining | this_FeatureInverting_22= ruleFeatureInverting | this_Subsetting_23= ruleSubsetting | this_Redefinition_24= ruleRedefinition | this_TypeFeaturing_25= ruleTypeFeaturing )";
        }
    }
    static final String dfa_19s = "\25\uffff";
    static final String dfa_20s = "\12\11\7\uffff\1\11\3\uffff";
    static final String dfa_21s = "\1\u008e\11\152\7\uffff\1\152\3\uffff";
    static final String dfa_22s = "\12\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\11\1\10\1\12";
    static final String dfa_23s = "\25\uffff}>";
    static final String[] dfa_24s = {
            "\2\12\3\uffff\1\12\22\uffff\1\12\6\uffff\1\4\1\uffff\1\12\1\uffff\2\12\11\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22\41\uffff\1\1\1\2\1\3",
            "\2\12\3\uffff\1\12\22\uffff\1\12\6\uffff\1\4\1\uffff\1\12\1\uffff\2\12\11\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\6\uffff\1\4\1\uffff\1\12\1\uffff\2\12\11\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\6\uffff\1\4\1\uffff\1\12\1\uffff\2\12\11\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\12\1\uffff\2\12\11\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\12\1\uffff\2\12\13\uffff\1\7\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\12\1\uffff\2\12\13\uffff\1\7\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\12\1\uffff\2\12\14\uffff\1\10\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\12\1\uffff\2\12\15\uffff\1\11\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\12\1\uffff\2\12\16\uffff\1\12\5\uffff\7\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\23\3\uffff\1\23\22\uffff\1\23\10\uffff\1\23\1\uffff\2\23\24\uffff\7\23\11\uffff\1\23\12\uffff\1\23\14\uffff\1\24",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "2445:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )";
        }
    }
    static final String dfa_25s = "\12\uffff";
    static final String dfa_26s = "\1\4\1\uffff\3\4\1\uffff\1\11\3\uffff";
    static final String dfa_27s = "\1\u008e\1\uffff\3\u008e\1\uffff\1\154\3\uffff";
    static final String dfa_28s = "\1\uffff\1\5\3\uffff\1\1\1\uffff\1\2\1\3\1\4";
    static final String dfa_29s = "\12\uffff}>";
    static final String[] dfa_30s = {
            "\2\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\2\uffff\1\1\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\1\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\1\7\7\5\6\7\1\uffff\1\5\3\uffff\7\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\32\uffff\1\2\1\3\1\4\3\7",
            "",
            "\2\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\1\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\1\7\7\5\6\7\1\uffff\1\5\3\uffff\7\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\35\uffff\3\7",
            "\2\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\1\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\1\7\7\5\6\7\1\uffff\1\5\3\uffff\7\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\35\uffff\3\7",
            "\2\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\1\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\1\7\7\5\6\7\1\uffff\1\5\3\uffff\7\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\35\uffff\3\7",
            "",
            "\2\7\3\uffff\1\7\22\uffff\1\7\7\uffff\1\5\1\7\1\uffff\2\7\7\uffff\1\5\1\uffff\6\7\5\uffff\7\7\11\uffff\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\1\5",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "()* loopback of 3127:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*";
        }
    }
    static final String dfa_31s = "\6\uffff";
    static final String dfa_32s = "\1\11\2\43\2\uffff\1\11";
    static final String dfa_33s = "\1\12\2\153\2\uffff\1\12";
    static final String dfa_34s = "\3\uffff\1\1\1\2\1\uffff";
    static final String dfa_35s = "\6\uffff}>";
    static final String[] dfa_36s = {
            "\1\1\1\2",
            "\1\5\6\uffff\2\3\77\uffff\1\4",
            "\1\5\6\uffff\2\3\77\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "3393:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_37s = "\1\11\2\21\2\uffff\1\11";
    static final String[] dfa_38s = {
            "\1\1\1\2",
            "\2\3\20\uffff\1\5\107\uffff\1\4",
            "\2\3\20\uffff\1\5\107\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_37;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3442:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_39s = "\1\uffff\2\4\3\uffff";
    static final String dfa_40s = "\1\11\2\21\1\11\2\uffff";
    static final String dfa_41s = "\1\12\2\153\1\12\2\uffff";
    static final String dfa_42s = "\4\uffff\1\1\1\2";
    static final String[] dfa_43s = {
            "\1\1\1\2",
            "\2\4\4\uffff\1\4\13\uffff\1\3\6\uffff\5\4\74\uffff\1\5",
            "\2\4\4\uffff\1\4\13\uffff\1\3\6\uffff\5\4\74\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_31;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_35;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "3509:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_44s = {
            "\1\1\1\2",
            "\1\5\10\uffff\2\3\75\uffff\1\4",
            "\1\5\10\uffff\2\3\75\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3588:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_37;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3637:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_45s = "\1\uffff\2\5\3\uffff";
    static final String dfa_46s = "\1\11\2\21\1\uffff\1\11\1\uffff";
    static final String dfa_47s = "\1\12\2\153\1\uffff\1\12\1\uffff";
    static final String dfa_48s = "\3\uffff\1\2\1\uffff\1\1";
    static final String[] dfa_49s = {
            "\1\1\1\2",
            "\2\5\20\uffff\1\4\6\uffff\5\5\74\uffff\1\3",
            "\2\5\20\uffff\1\4\6\uffff\5\5\74\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_31;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_35;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "3704:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_50s = "\1\11\2\26\2\uffff\1\11";
    static final String[] dfa_51s = {
            "\1\1\1\2",
            "\1\3\14\uffff\1\5\107\uffff\1\4",
            "\1\3\14\uffff\1\5\107\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_50;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "3783:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_37;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3825:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_52s = {
            "\1\1\1\2",
            "\2\4\3\uffff\2\4\13\uffff\1\3\12\uffff\1\4\16\uffff\4\4\15\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\2\4\3\uffff\2\4\13\uffff\1\3\12\uffff\1\4\16\uffff\4\4\15\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_31;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_35;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "3892:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_53s = "\20\uffff";
    static final String dfa_54s = "\1\21\1\uffff\1\11\1\101\4\11\2\0\1\11\4\0\1\uffff";
    static final String dfa_55s = "\1\135\1\uffff\1\12\1\101\4\12\2\0\1\12\4\0\1\uffff";
    static final String dfa_56s = "\1\uffff\1\2\15\uffff\1\1";
    static final String dfa_57s = "\10\uffff\1\4\1\1\1\uffff\1\3\1\0\1\5\1\2\1\uffff}>";
    static final String[] dfa_58s = {
            "\2\1\3\uffff\1\1\23\uffff\1\4\3\uffff\1\1\16\uffff\4\1\1\uffff\2\1\1\2\1\3\1\5\1\6\1\7\5\uffff\3\1\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1",
            "",
            "\1\10\1\11",
            "\1\12",
            "\1\13\1\14",
            "\1\13\1\14",
            "\1\15\1\16",
            "\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\10\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = dfa_53;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "()+ loopback of 4868:4: ( ( ':' | 'typed' | ':>' | 'subsets' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA109_12 = input.LA(1);

                         
                        int index109_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index109_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA109_9 = input.LA(1);

                         
                        int index109_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index109_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA109_14 = input.LA(1);

                         
                        int index109_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index109_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA109_11 = input.LA(1);

                         
                        int index109_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index109_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA109_8 = input.LA(1);

                         
                        int index109_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index109_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA109_13 = input.LA(1);

                         
                        int index109_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index109_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 109, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\36\uffff";
    static final String dfa_60s = "\1\102\1\6\1\uffff\4\45\1\7\2\45\2\43\1\6\1\21\2\45\1\11\4\45\1\7\2\45\2\43\1\uffff\2\45\1\11";
    static final String dfa_61s = "\1\122\1\153\1\uffff\3\123\1\153\1\10\4\123\1\153\1\135\2\123\1\12\3\45\1\153\1\10\4\45\1\uffff\2\45\1\12";
    static final String dfa_62s = "\2\uffff\1\2\27\uffff\1\1\3\uffff";
    static final String dfa_63s = "\36\uffff}>";
    static final String[] dfa_64s = {
            "\2\2\16\uffff\1\1",
            "\1\5\1\6\1\10\1\12\1\13\27\uffff\1\11\104\uffff\1\3\1\4\2\uffff\1\7",
            "",
            "\1\15\55\uffff\1\14",
            "\1\15\55\uffff\1\14",
            "\1\15\55\uffff\1\14",
            "\1\15\55\uffff\1\14\27\uffff\1\7",
            "\1\16\1\17",
            "\1\15\55\uffff\1\14",
            "\1\15\55\uffff\1\14",
            "\1\20\1\uffff\1\15\55\uffff\1\14",
            "\1\20\1\uffff\1\15\55\uffff\1\14",
            "\1\23\1\24\1\26\1\30\1\31\27\uffff\1\27\104\uffff\1\21\1\22\2\uffff\1\25",
            "\2\32\3\uffff\1\32\23\uffff\1\32\3\uffff\1\32\16\uffff\4\32\1\uffff\2\2\5\32\5\uffff\3\32\10\uffff\1\32\3\uffff\1\32",
            "\1\15\55\uffff\1\14",
            "\1\15\55\uffff\1\14",
            "\1\12\1\13",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15\105\uffff\1\25",
            "\1\33\1\34",
            "\1\15",
            "\1\15",
            "\1\35\1\uffff\1\15",
            "\1\35\1\uffff\1\15",
            "",
            "\1\15",
            "\1\15",
            "\1\30\1\31"
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "4948:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )";
        }
    }
    static final String[] dfa_65s = {
            "\1\1\1\2",
            "\1\5\33\uffff\1\3\53\uffff\1\4",
            "\1\5\33\uffff\1\3\53\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "5425:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_66s = {
            "\1\1\1\2",
            "\2\4\20\uffff\1\3\107\uffff\1\5",
            "\2\4\20\uffff\1\3\107\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_35;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "5467:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_67s = "\1\uffff\2\3\3\uffff";
    static final String[] dfa_68s = {
            "\1\1\1\2",
            "\2\3\3\uffff\1\3\14\uffff\1\5\12\uffff\1\3\16\uffff\4\3\15\uffff\3\3\10\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "\2\3\3\uffff\1\3\14\uffff\1\5\12\uffff\1\3\16\uffff\4\3\15\uffff\3\3\10\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_31;
            this.eof = dfa_67;
            this.min = dfa_37;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "5534:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_69s = {
            "\1\1\1\2",
            "\2\3\3\uffff\2\3\13\uffff\1\5\6\uffff\1\3\3\uffff\1\3\16\uffff\4\3\1\uffff\7\3\5\uffff\3\3\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "\2\3\3\uffff\2\3\13\uffff\1\5\6\uffff\1\3\3\uffff\1\3\16\uffff\4\3\1\uffff\7\3\5\uffff\3\3\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_31;
            this.eof = dfa_67;
            this.min = dfa_37;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "5830:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_70s = {
            "\1\1\1\2",
            "\1\5\6\uffff\1\3\33\uffff\1\3\44\uffff\1\4",
            "\1\5\6\uffff\1\3\33\uffff\1\3\44\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "5909:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_35;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "5958:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_71s = {
            "\1\1\1\2",
            "\2\3\2\uffff\3\3\13\uffff\1\5\6\uffff\1\3\3\uffff\1\3\16\uffff\4\3\1\uffff\7\3\5\uffff\3\3\1\uffff\1\3\6\uffff\2\3\2\uffff\2\3\14\uffff\1\4",
            "\2\3\2\uffff\3\3\13\uffff\1\5\6\uffff\1\3\3\uffff\1\3\16\uffff\4\3\1\uffff\7\3\5\uffff\3\3\1\uffff\1\3\6\uffff\2\3\2\uffff\2\3\14\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_31;
            this.eof = dfa_67;
            this.min = dfa_37;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "6025:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_72s = "\1\11\2\43\1\11\2\uffff";
    static final String[] dfa_73s = {
            "\1\1\1\2",
            "\1\3\43\uffff\2\4\42\uffff\1\5",
            "\1\3\43\uffff\2\4\42\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_72;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_35;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "6104:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_35;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "6153:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_31;
            this.eof = dfa_67;
            this.min = dfa_37;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "6220:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_74s = "\14\uffff";
    static final String dfa_75s = "\1\121\2\11\2\52\2\uffff\2\17\1\11\2\52";
    static final String dfa_76s = "\1\121\1\122\1\12\2\122\2\uffff\2\17\3\122";
    static final String dfa_77s = "\5\uffff\1\2\1\1\5\uffff";
    static final String dfa_78s = "\14\uffff}>";
    static final String[] dfa_79s = {
            "\1\1",
            "\1\3\1\4\3\uffff\1\2\33\uffff\1\6\33\uffff\1\6\13\uffff\1\5",
            "\1\7\1\10",
            "\1\6\33\uffff\1\6\13\uffff\1\5",
            "\1\6\33\uffff\1\6\13\uffff\1\5",
            "",
            "",
            "\1\11",
            "\1\11",
            "\1\12\1\13\37\uffff\1\6\33\uffff\1\6\13\uffff\1\5",
            "\1\6\33\uffff\1\6\13\uffff\1\5",
            "\1\6\33\uffff\1\6\13\uffff\1\5"
    };

    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA153 extends DFA {

        public DFA153(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 153;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "6867:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )";
        }
    }
    static final String dfa_80s = "\u029b\uffff";
    static final String dfa_81s = "\3\11\2\21\1\11\1\101\4\11\1\6\2\21\2\11\2\uffff\2\17\1\11\1\101\4\11\1\6\2\21\3\11\1\26\1\77\1\101\2\21\1\11\4\21\4\45\1\7\2\45\2\43\1\21\1\11\1\101\4\11\3\21\1\11\2\21\1\11\6\21\4\45\1\7\2\45\2\43\1\21\1\11\1\101\4\11\3\21\2\43\5\11\1\6\2\21\1\11\1\101\13\11\1\6\1\21\2\45\1\11\2\21\1\11\4\21\1\11\2\21\1\11\1\6\2\11\1\6\2\21\1\11\1\101\6\11\1\6\7\11\1\6\1\21\2\45\1\11\2\21\1\11\4\21\3\11\10\21\4\45\1\7\2\45\2\43\1\21\1\11\1\101\4\11\3\21\1\11\16\21\4\45\1\7\2\45\2\43\11\11\4\45\1\7\2\45\2\43\2\21\4\45\1\7\2\45\2\43\1\21\1\11\1\101\4\11\3\21\1\11\6\21\4\45\1\7\2\45\2\43\12\21\4\45\1\7\2\45\2\43\11\11\2\21\11\11\1\6\1\21\2\45\1\11\2\21\1\11\4\21\20\11\2\45\1\11\14\21\1\6\1\21\2\45\3\11\1\6\1\21\2\45\1\11\2\21\1\11\4\21\12\11\1\6\1\21\2\45\10\11\2\45\1\11\14\21\1\11\12\21\4\45\1\7\2\45\2\43\11\11\20\21\11\11\4\45\1\7\2\45\2\43\2\21\4\45\1\7\2\45\2\43\11\11\14\21\4\45\1\7\2\45\2\43\4\21\17\11\2\45\1\11\14\21\13\11\6\21\2\45\2\11\2\45\1\11\14\21\11\11\2\45\3\11\10\21\11\11\6\21\14\11\6\21\4\11\6\21\3\11\6\21\11\11";
    static final String dfa_82s = "\1\131\1\122\1\12\2\153\1\12\1\101\4\12\1\153\2\131\2\12\2\uffff
    static final String dfa_83s = "\20\uffff\1\1\1\2\u0289\uffff";
    static final String dfa_84s = "\u029b\uffff}>";
    static final String[] dfa_85s = {
            "\1\3\1\4\3\uffff\1\2\2\uffff\2\21\3\uffff\1\20\12\uffff\1\1\10\uffff\1\7\1\uffff\1\16\1\17\24\uffff\1\14\1\15\1\5\1\6\1\10\1\11\1\12\11\uffff\1\13\6\uffff\1\21",
            "\1\3\1\4\3\uffff\1\2\7\uffff\1\20\23\uffff\1\7\1\uffff\1\16\1\17\24\uffff\1\14\1\15\1\5\1\6\1\10\1\11\1\12\11\uffff\1\13",
            "\1\22\1\23",
            "\2\21\2\uffff\2\20\14\uffff\1\20\6\uffff\1\26\1\uffff\1\35\1\36\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\33\1\34\1\24\1\25\1\27\1\30\1\31\11\uffff\1\32\6\uffff\1\21\21\uffff\1\20",
            "\2\21\2\uffff\2\20\14\uffff\1\20\6\uffff\1\26\1\uffff\1\35\1\36\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\33\1\34\1\24\1\25\1\27\1\30\1\31\11\uffff\1\32\6\uffff\1\21\21\uffff\1\20",
            "\1\43\1\44",
            "\1\45",
            "\1\46\1\47",
            "\1\46\1\47",
            "\1\50\1\51",
            "\1\50\1\51",
            "\1\54\1\55\1\57\1\61\1\62\27\uffff\1\60\104\uffff\1\52\1\53\2\uffff\1\56",
            "\2\21\3\uffff\1\20\23\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\2\uffff\1\63\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21",
            "\2\21\3\uffff\1\20\23\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\72\1\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21",
            "\1\73\1\74",
            "\1\73\1\74",
            "",
            "",
            "\1\75",
            "\1\75",
            "\1\76\1\77",
            "\1\100",
            "\1\101\1\102",
            "\1\103\1\104",
            "\1\105\1\106",
            "\1\105\1\106",
            "\1\111\1\112\1\114\1\116\1\117\27\uffff\1\115\104\uffff\1\107\1\110\2\uffff\1\113",
            "\2\21\3\uffff\1\20\23\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\2\uffff\1\120\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21",
            "\2\21\3\uffff\1\20\23\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\127\1\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21",
            "\1\130\1\131",
            "\1\130\1\131",
            "\1\132\1\133",
            "\1\134",
            "\1\135",
            "\1\136",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\137\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\152",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\137\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\152",
            "\1\43\1\44",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\153\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\155",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\153\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\155",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\160\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\157",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\160\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\157",
            "\1\162\55\uffff\1\161",
            "\1\162\55\uffff\1\161",
            "\1\162\55\uffff\1\161",
            "\1\162\55\uffff\1\161\27\uffff\1\56",
            "\1\163\1\164",
            "\1\162\55\uffff\1\161",
            "\1\162\55\uffff\1\161",
            "\1\165\1\uffff\1\162\55\uffff\1\161",
            "\1\165\1\uffff\1\162\55\uffff\1\161",
            "\2\21\3\uffff\1\20\23\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21",
            "\1\166\1\167",
            "\1\170",
            "\1\171\1\172",
            "\1\171\1\172",
            "\1\173\1\174",
            "\1\173\1\174",
            "\2\21\3\uffff\1\20\23\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21",
            "\2\21\3\uffff\1\20\14\uffff\1\175\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\2\21\3\uffff\1\20\14\uffff\1\175\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\1\176\1\177\6\uffff\2\21\3\uffff\1\20\23\uffff\1\u0080\1\uffff\1\35\1\36\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\33\1\34\1\24\1\25\1\27\1\30\1\31\11\uffff\1\u0081\6\uffff\1\21",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u0082\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u008d",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u0082\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u008d",
            "\1\76\1\77",
            "\2\21\2\uffff\2\20\1\u0091\13\uffff\1\u008e\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u008f\6\uffff\1\21\21\uffff\1\u0090",
            "\2\21\2\uffff\2\20\1\u0091\13\uffff\1\u008e\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u008f\6\uffff\1\21\21\uffff\1\u0090",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0092\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0093",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0092\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0093",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u0096\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0095",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u0096\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0095",
            "\1\u0098\55\uffff\1\u0097",
            "\1\u0098\55\uffff\1\u0097",
            "\1\u0098\55\uffff\1\u0097",
            "\1\u0098\55\uffff\1\u0097\27\uffff\1\113",
            "\1\u0099\1\u009a",
            "\1\u0098\55\uffff\1\u0097",
            "\1\u0098\55\uffff\1\u0097",
            "\1\u009b\1\uffff\1\u0098\55\uffff\1\u0097",
            "\1\u009b\1\uffff\1\u0098\55\uffff\1\u0097",
            "\2\21\3\uffff\1\20\23\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21",
            "\1\u009c\1\u009d",
            "\1\u009e",
            "\1\u009f\1\u00a0",
            "\1\u009f\1\u00a0",
            "\1\u00a1\1\u00a2",
            "\1\u00a1\1\u00a2",
            "\2\21\3\uffff\1\20\23\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21",
            "\2\21\3\uffff\1\20\14\uffff\1\u00a3\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\2\21\3\uffff\1\20\14\uffff\1\u00a3\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\1\u00a5\107\uffff\1\u00a4",
            "\1\u00a5\107\uffff\1\u00a4",
            "\1\u00a6\1\u00a7",
            "\1\u00a8\1\u00a9",
            "\1\u00aa\1\u00ab",
            "\1\43\1\44",
            "\1\u00ac\1\u00ad",
            "\1\u00b0\1\u00b1\1\u00b3\1\u00b5\1\u00b6\27\uffff\1\u00b4\104\uffff\1\u00ae\1\u00af\2\uffff\1\u00b2",
            "\2\21\3\uffff\1\20\23\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\2\uffff\1\u00b7\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21",
            "\2\21\3\uffff\1\20\23\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u00be\1\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21",
            "\1\u00bf\1\u00c0",
            "\1\u00c1",
            "\1\u00c2\1\u00c3",
            "\1\u00c2\1\u00c3",
            "\1\u00c4\1\u00c5",
            "\1\u00c4\1\u00c5",
            "\1\u00c6\1\u00c7",
            "\1\46\1\47",
            "\1\u00c8\1\u00c9",
            "\1\u00ca\1\u00cb",
            "\1\u00cc\1\u00cd",
            "\1\u00ce\1\u00cf",
            "\1\50\1\51",
            "\1\u00d2\1\u00d3\1\u00d5\1\u00d7\1\u00d8\27\uffff\1\u00d6\104\uffff\1\u00d0\1\u00d1\2\uffff\1\u00d4",
            "\2\21\3\uffff\1\20\23\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\14\1\15\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21",
            "\1\162\55\uffff\1\161",
            "\1\162\55\uffff\1\161",
            "\1\61\1\62",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u00db\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00da",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u00db\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00da",
            "\1\166\1\167",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u00de\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00dd",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u00de\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00dd",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u00e1\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00e0",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u00e1\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00e0",
            "\1\73\1\74",
            "\2\21\3\uffff\1\20\23\uffff\1\u0080\1\uffff\1\35\1\36\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\33\1\34\1\24\1\25\1\27\1\30\1\31\11\uffff\1\u0081\6\uffff\1\21",
            "\2\21\3\uffff\1\20\23\uffff\1\u0080\1\uffff\1\35\1\36\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\33\1\34\1\24\1\25\1\27\1\30\1\31\11\uffff\1\u0081\6\uffff\1\21",
            "\1\103\1\104",
            "\1\u00e4\1\u00e5\1\u00e7\1\u00e9\1\u00ea\27\uffff\1\u00e8\104\uffff\1\u00e2\1\u00e3\2\uffff\1\u00e6",
            "\1\76\1\77",
            "\1\u00eb\1\u00ec",
            "\1\u00ef\1\u00f0\1\u00f2\1\u00f4\1\u00f5\27\uffff\1\u00f3\104\uffff\1\u00ed\1\u00ee\2\uffff\1\u00f1",
            "\2\21\3\uffff\1\20\23\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\2\uffff\1\u00f6\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21",
            "\2\21\3\uffff\1\20\23\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u00fd\1\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21",
            "\1\u00fe\1\u00ff",
            "\1\u0100",
            "\1\u0101\1\u0102",
            "\1\u0101\1\u0102",
            "\1\u0103\1\u0104",
            "\1\u0103\1\u0104",
            "\1\u0105\1\u0106",
            "\1\101\1\102",
            "\1\u0109\1\u010a\1\u010c\1\u010e\1\u010f\27\uffff\1\u010d\104\uffff\1\u0107\1\u0108\2\uffff\1\u010b",
            "\1\u0110\1\u0111",
            "\1\u0112\1\u0113",
            "\1\103\1\104",
            "\1\u0114\1\u0115",
            "\1\u0116\1\u0117",
            "\1\u0118\1\u0119",
            "\1\105\1\106",
            "\1\u011c\1\u011d\1\u011f\1\u0121\1\u0122\27\uffff\1\u0120\104\uffff\1\u011a\1\u011b\2\uffff\1\u011e",
            "\2\21\2\uffff\2\20\23\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\33\1\34\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21",
            "\1\u0098\55\uffff\1\u0097",
            "\1\u0098\55\uffff\1\u0097",
            "\1\116\1\117",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u0125\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0124",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u0125\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0124",
            "\1\u009c\1\u009d",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u0128\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0127",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u0128\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0127",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u012b\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u012a",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u012b\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u012a",
            "\1\130\1\131",
            "\1\u012c\1\u012d",
            "\1\132\1\133",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u012e\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0130",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u012e\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0130",
            "\2\21\3\uffff\1\20\14\uffff\1\u0132\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0131",
            "\2\21\3\uffff\1\20\14\uffff\1\u0132\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0131",
            "\2\21\3\uffff\1\20\1\u0134\13\uffff\1\u0133\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\2\21\3\uffff\1\20\1\u0134\13\uffff\1\u0133\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\u0135\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0136",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\u0135\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0136",
            "\1\u0138\55\uffff\1\u0137",
            "\1\u0138\55\uffff\1\u0137",
            "\1\u0138\55\uffff\1\u0137",
            "\1\u0138\55\uffff\1\u0137\27\uffff\1\u00b2",
            "\1\u0139\1\u013a",
            "\1\u0138\55\uffff\1\u0137",
            "\1\u0138\55\uffff\1\u0137",
            "\1\u013b\1\uffff\1\u0138\55\uffff\1\u0137",
            "\1\u013b\1\uffff\1\u0138\55\uffff\1\u0137",
            "\2\21\3\uffff\1\20\23\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21",
            "\1\u013c\1\u013d",
            "\1\u013e",
            "\1\u013f\1\u0140",
            "\1\u013f\1\u0140",
            "\1\u0141\1\u0142",
            "\1\u0141\1\u0142",
            "\2\21\3\uffff\1\20\23\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0143\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0145",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0143\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0145",
            "\1\u00bf\1\u00c0",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u0146\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0148",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u0146\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0148",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u014b\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014a",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u014b\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014a",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\u014c\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\152",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\u014c\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\152",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\u014e\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014d",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\u014e\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014d",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\u014f\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\155",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\u014f\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\155",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\u0151\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0150",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\u0151\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0150",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\u0152\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\157",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\u0152\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\157",
            "\1\162",
            "\1\162",
            "\1\162",
            "\1\162\105\uffff\1\u00d4",
            "\1\u0153\1\u0154",
            "\1\162",
            "\1\162",
            "\1\u0155\1\uffff\1\162",
            "\1\u0155\1\uffff\1\162",
            "\1\u0156\1\u0157",
            "\1\u0158\1\u0159",
            "\1\166\1\167",
            "\1\u015a\1\u015b",
            "\1\u015c\1\u015d",
            "\1\171\1\172",
            "\1\u015e\1\u015f",
            "\1\u0160\1\u0161",
            "\1\173\1\174",
            "\1\u0163\55\uffff\1\u0162",
            "\1\u0163\55\uffff\1\u0162",
            "\1\u0163\55\uffff\1\u0162",
            "\1\u0163\55\uffff\1\u0162\27\uffff\1\u00e6",
            "\1\u0164\1\u0165",
            "\1\u0163\55\uffff\1\u0162",
            "\1\u0163\55\uffff\1\u0162",
            "\1\u0166\1\uffff\1\u0163\55\uffff\1\u0162",
            "\1\u0166\1\uffff\1\u0163\55\uffff\1\u0162",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u0167\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0168",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u0167\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0168",
            "\1\u016a\55\uffff\1\u0169",
            "\1\u016a\55\uffff\1\u0169",
            "\1\u016a\55\uffff\1\u0169",
            "\1\u016a\55\uffff\1\u0169\27\uffff\1\u00f1",
            "\1\u016b\1\u016c",
            "\1\u016a\55\uffff\1\u0169",
            "\1\u016a\55\uffff\1\u0169",
            "\1\u016d\1\uffff\1\u016a\55\uffff\1\u0169",
            "\1\u016d\1\uffff\1\u016a\55\uffff\1\u0169",
            "\2\21\3\uffff\1\20\23\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21",
            "\1\u016e\1\u016f",
            "\1\u0170",
            "\1\u0171\1\u0172",
            "\1\u0171\1\u0172",
            "\1\u0173\1\u0174",
            "\1\u0173\1\u0174",
            "\2\21\3\uffff\1\20\23\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u0175\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0177",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u0175\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0177",
            "\1\u00fe\1\u00ff",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u0179\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0178",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u0179\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0178",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u017d\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u017c",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u017d\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u017c",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u017e\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u008d",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u017e\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u008d",
            "\1\u0180\55\uffff\1\u017f",
            "\1\u0180\55\uffff\1\u017f",
            "\1\u0180\55\uffff\1\u017f",
            "\1\u0180\55\uffff\1\u017f\27\uffff\1\u010b",
            "\1\u0181\1\u0182",
            "\1\u0180\55\uffff\1\u017f",
            "\1\u0180\55\uffff\1\u017f",
            "\1\u0183\1\uffff\1\u0180\55\uffff\1\u017f",
            "\1\u0183\1\uffff\1\u0180\55\uffff\1\u017f",
            "\2\21\2\uffff\2\20\1\u0091\13\uffff\1\u0184\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u008f\6\uffff\1\21\21\uffff\1\u0090",
            "\2\21\2\uffff\2\20\1\u0091\13\uffff\1\u0184\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u008f\6\uffff\1\21\21\uffff\1\u0090",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0185\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0186",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0185\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0186",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0187\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0093",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0187\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0093",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u0189\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0188",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u0189\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0188",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u018a\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0095",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u018a\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0095",
            "\1\u0098",
            "\1\u0098",
            "\1\u0098",
            "\1\u0098\105\uffff\1\u011e",
            "\1\u018b\1\u018c",
            "\1\u0098",
            "\1\u0098",
            "\1\u018d\1\uffff\1\u0098",
            "\1\u018d\1\uffff\1\u0098",
            "\1\u018e\1\u018f",
            "\1\u0190\1\u0191",
            "\1\u009c\1\u009d",
            "\1\u0192\1\u0193",
            "\1\u0194\1\u0195",
            "\1\u009f\1\u00a0",
            "\1\u0196\1\u0197",
            "\1\u0198\1\u0199",
            "\1\u00a1\1\u00a2",
            "\2\21\3\uffff\1\20\14\uffff\1\u019a\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u00a4",
            "\2\21\3\uffff\1\20\14\uffff\1\u019a\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u00a4",
            "\1\u00a6\1\u00a7",
            "\1\u019b\1\u019c",
            "\1\u019d\1\u019e",
            "\1\u019f\1\u01a0",
            "\1\u00a8\1\u00a9",
            "\1\u00aa\1\u00ab",
            "\1\u01a1\1\u01a2",
            "\1\u00ac\1\u00ad",
            "\1\u01a3\1\u01a4",
            "\1\u01a7\1\u01a8\1\u01aa\1\u01ac\1\u01ad\27\uffff\1\u01ab\104\uffff\1\u01a5\1\u01a6\2\uffff\1\u01a9",
            "\2\21\3\uffff\1\20\23\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21",
            "\1\u0138\55\uffff\1\u0137",
            "\1\u0138\55\uffff\1\u0137",
            "\1\u00b5\1\u00b6",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u01af\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01ae",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u01af\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01ae",
            "\1\u013c\1\u013d",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u01b3\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b2",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u01b3\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b2",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u01b6\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b5",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u01b6\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b5",
            "\1\u00bf\1\u00c0",
            "\1\u01b7\1\u01b8",
            "\1\u01b9\1\u01ba",
            "\1\u00c2\1\u00c3",
            "\1\u01bb\1\u01bc",
            "\1\u01bd\1\u01be",
            "\1\u01bf\1\u01c0",
            "\1\u01c1\1\u01c2",
            "\1\u00c4\1\u00c5",
            "\1\u00c6\1\u00c7",
            "\1\u01c3\1\u01c4",
            "\1\u00c8\1\u00c9",
            "\1\u00ca\1\u00cb",
            "\1\u01c5\1\u01c6",
            "\1\u00cc\1\u00cd",
            "\1\u00ce\1\u00cf",
            "\1\162",
            "\1\162",
            "\1\u00d7\1\u00d8",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u01c8\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01c7",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u01c8\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01c7",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u01c9\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00da",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u01c9\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00da",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u01cb\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ca",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u01cb\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ca",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u01cc\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00dd",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u01cc\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00dd",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u01cd\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ce",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u01cd\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ce",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u01cf\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00e0",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u01cf\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u00e0",
            "\1\u01d2\1\u01d3\1\u01d5\1\u01d7\1\u01d8\27\uffff\1\u01d6\104\uffff\1\u01d0\1\u01d1\2\uffff\1\u01d4",
            "\2\21\3\uffff\1\20\23\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\33\1\34\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21",
            "\1\u0163\55\uffff\1\u0162",
            "\1\u0163\55\uffff\1\u0162",
            "\1\u00e9\1\u00ea",
            "\1\u00eb\1\u00ec",
            "\1\u01d9\1\u01da",
            "\1\u01dd\1\u01de\1\u01e0\1\u01e2\1\u01e3\27\uffff\1\u01e1\104\uffff\1\u01db\1\u01dc\2\uffff\1\u01df",
            "\2\21\3\uffff\1\20\23\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21",
            "\1\u016a\55\uffff\1\u0169",
            "\1\u016a\55\uffff\1\u0169",
            "\1\u00f4\1\u00f5",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u01e4\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e6",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u01e4\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e6",
            "\1\u016e\1\u016f",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u01e8\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e7",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u01e8\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e7",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u01ec\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01eb",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u01ec\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01eb",
            "\1\u00fe\1\u00ff",
            "\1\u01ed\1\u01ee",
            "\1\u01ef\1\u01f0",
            "\1\u01f1\1\u01f2",
            "\1\u0101\1\u0102",
            "\1\u01f3\1\u01f4",
            "\1\u01f5\1\u01f6",
            "\1\u01f7\1\u01f8",
            "\1\u0103\1\u0104",
            "\1\u0105\1\u0106",
            "\1\u01fb\1\u01fc\1\u01fe\1\u0200\1\u0201\27\uffff\1\u01ff\104\uffff\1\u01f9\1\u01fa\2\uffff\1\u01fd",
            "\2\21\2\uffff\2\20\23\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21",
            "\1\u0180\55\uffff\1\u017f",
            "\1\u0180\55\uffff\1\u017f",
            "\1\u010e\1\u010f",
            "\1\u0110\1\u0111",
            "\1\u0112\1\u0113",
            "\1\u0202\1\u0203",
            "\1\u0114\1\u0115",
            "\1\u0204\1\u0205",
            "\1\u0116\1\u0117",
            "\1\u0118\1\u0119",
            "\1\u0098",
            "\1\u0098",
            "\1\u0121\1\u0122",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u0207\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0206",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u0207\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0206",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u0208\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0124",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u0208\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0124",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u020a\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0209",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u020a\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0209",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u020b\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0127",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u020b\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0127",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u020d\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u020c",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u020d\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u020c",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u020e\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u012a",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u020e\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u012a",
            "\1\u012c\1\u012d",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u0210\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u020f",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u0210\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u020f",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u0211\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0130",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u0211\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0130",
            "\2\21\3\uffff\1\20\14\uffff\1\u0212\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0131",
            "\2\21\3\uffff\1\20\14\uffff\1\u0212\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u0131",
            "\2\21\3\uffff\1\20\1\u0134\13\uffff\1\u0213\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\2\21\3\uffff\1\20\1\u0134\13\uffff\1\u0213\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\u0214\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0136",
            "\2\21\3\uffff\1\20\1\140\13\uffff\1\u0214\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0136",
            "\1\u0138",
            "\1\u0138",
            "\1\u0138",
            "\1\u0138\105\uffff\1\u01a9",
            "\1\u0215\1\u0216",
            "\1\u0138",
            "\1\u0138",
            "\1\u0217\1\uffff\1\u0138",
            "\1\u0217\1\uffff\1\u0138",
            "\1\u0218\1\u0219",
            "\1\u013c\1\u013d",
            "\1\u021a\1\u021b",
            "\1\u021c\1\u021d",
            "\1\u021e\1\u021f",
            "\1\u013f\1\u0140",
            "\1\u0220\1\u0221",
            "\1\u0222\1\u0223",
            "\1\u0141\1\u0142",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0224\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0225",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0224\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0225",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0226\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0145",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0226\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0145",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u0228\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0227",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u0228\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0227",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u0229\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0148",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u0229\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0148",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u022b\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u022a",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u022b\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u022a",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u022c\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014a",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u022c\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014a",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\u022d\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014d",
            "\2\21\3\uffff\1\20\1\154\13\uffff\1\u022d\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u014d",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\u022e\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0150",
            "\2\21\3\uffff\1\20\1\156\13\uffff\1\u022e\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0150",
            "\1\u022f\1\u0230",
            "\1\u0156\1\u0157",
            "\1\u0158\1\u0159",
            "\1\u0231\1\u0232",
            "\1\u015a\1\u015b",
            "\1\u015c\1\u015d",
            "\1\u015e\1\u015f",
            "\1\u0233\1\u0234",
            "\1\u0160\1\u0161",
            "\1\u0163",
            "\1\u0163",
            "\1\u0163",
            "\1\u0163\105\uffff\1\u01d4",
            "\1\u0235\1\u0236",
            "\1\u0163",
            "\1\u0163",
            "\1\u0237\1\uffff\1\u0163",
            "\1\u0237\1\uffff\1\u0163",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u0238\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0168",
            "\2\21\3\uffff\1\20\1\u0083\13\uffff\1\u0238\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0168",
            "\1\u016a",
            "\1\u016a",
            "\1\u016a",
            "\1\u016a\105\uffff\1\u01df",
            "\1\u0239\1\u023a",
            "\1\u016a",
            "\1\u016a",
            "\1\u023b\1\uffff\1\u016a",
            "\1\u023b\1\uffff\1\u016a",
            "\1\u016e\1\u016f",
            "\1\u023c\1\u023d",
            "\1\u023e\1\u023f",
            "\1\u0240\1\u0241",
            "\1\u0171\1\u0172",
            "\1\u0242\1\u0243",
            "\1\u0244\1\u0245",
            "\1\u0246\1\u0247",
            "\1\u0173\1\u0174",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u0248\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0249",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u0248\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0249",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u024a\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0177",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u024a\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0177",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u024b\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0178",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u024b\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0178",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u024d\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024c",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u024d\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024c",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u024f\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024e",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u024f\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024e",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u0250\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u017c",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u0250\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u017c",
            "\1\u0180",
            "\1\u0180",
            "\1\u0180",
            "\1\u0180\105\uffff\1\u01fd",
            "\1\u0251\1\u0252",
            "\1\u0180",
            "\1\u0180",
            "\1\u0253\1\uffff\1\u0180",
            "\1\u0253\1\uffff\1\u0180",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0254\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0186",
            "\2\21\3\uffff\1\20\1\u0091\13\uffff\1\u0254\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0186",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u0255\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0188",
            "\2\21\3\uffff\1\20\1\u0094\13\uffff\1\u0255\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0188",
            "\1\u0256\1\u0257",
            "\1\u018e\1\u018f",
            "\1\u0190\1\u0191",
            "\1\u0258\1\u0259",
            "\1\u0192\1\u0193",
            "\1\u0194\1\u0195",
            "\1\u025a\1\u025b",
            "\1\u0196\1\u0197",
            "\1\u0198\1\u0199",
            "\1\u025c\1\u025d",
            "\1\u019b\1\u019c",
            "\1\u019d\1\u019e",
            "\1\u019f\1\u01a0",
            "\1\u01a1\1\u01a2",
            "\1\u01a3\1\u01a4",
            "\1\u0138",
            "\1\u0138",
            "\1\u01ac\1\u01ad",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u025e\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01ae",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u025e\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01ae",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u025f\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0260",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u025f\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0260",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u0262\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0261",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u0262\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0261",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u0263\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b2",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u0263\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b2",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u0265\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0264",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u0265\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0264",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u0266\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b5",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u0266\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u01b5",
            "\1\u01b7\1\u01b8",
            "\1\u0267\1\u0268",
            "\1\u01b9\1\u01ba",
            "\1\u0269\1\u026a",
            "\1\u01bb\1\u01bc",
            "\1\u01bd\1\u01be",
            "\1\u026b\1\u026c",
            "\1\u01bf\1\u01c0",
            "\1\u01c1\1\u01c2",
            "\1\u01c3\1\u01c4",
            "\1\u01c5\1\u01c6",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u026d\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01c7",
            "\2\21\3\uffff\1\20\1\u00d9\13\uffff\1\u026d\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01c7",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u026e\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ca",
            "\2\21\3\uffff\1\20\1\u00dc\13\uffff\1\u026e\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ca",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u026f\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ce",
            "\2\21\3\uffff\1\20\1\u00df\13\uffff\1\u026f\6\uffff\1\66\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\64\1\65\1\67\1\70\1\71\20\uffff\1\21\21\uffff\1\u01ce",
            "\1\u0163",
            "\1\u0163",
            "\1\u01d7\1\u01d8",
            "\1\u01d9\1\u01da",
            "\1\u016a",
            "\1\u016a",
            "\1\u01e2\1\u01e3",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u0270\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0271",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u0270\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0271",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u0272\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e6",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u0272\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e6",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u0273\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e7",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u0273\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01e7",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u0275\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0274",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u0275\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0274",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u0277\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0276",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u0277\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0276",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u0278\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01eb",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u0278\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u01eb",
            "\1\u01ed\1\u01ee",
            "\1\u0279\1\u027a",
            "\1\u01ef\1\u01f0",
            "\1\u01f1\1\u01f2",
            "\1\u027b\1\u027c",
            "\1\u01f3\1\u01f4",
            "\1\u027d\1\u027e",
            "\1\u01f5\1\u01f6",
            "\1\u01f7\1\u01f8",
            "\1\u0180",
            "\1\u0180",
            "\1\u0200\1\u0201",
            "\1\u0202\1\u0203",
            "\1\u0204\1\u0205",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u027f\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0206",
            "\2\21\3\uffff\1\20\1\u0123\13\uffff\1\u027f\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0206",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u0280\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0209",
            "\2\21\3\uffff\1\20\1\u0126\13\uffff\1\u0280\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u0209",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u0281\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u020c",
            "\2\21\3\uffff\1\20\1\u0129\13\uffff\1\u0281\6\uffff\1\123\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\121\1\122\1\124\1\125\1\126\20\uffff\1\21\21\uffff\1\u020c",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u0282\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u020f",
            "\2\21\3\uffff\1\20\1\u012f\13\uffff\1\u0282\12\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\30\uffff\1\21\21\uffff\1\u020f",
            "\1\u0218\1\u0219",
            "\1\u021a\1\u021b",
            "\1\u0283\1\u0284",
            "\1\u0285\1\u0286",
            "\1\u021c\1\u021d",
            "\1\u021e\1\u021f",
            "\1\u0287\1\u0288",
            "\1\u0220\1\u0221",
            "\1\u0222\1\u0223",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0289\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0225",
            "\2\21\3\uffff\1\20\1\u0144\13\uffff\1\u0289\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0225",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u028a\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0227",
            "\2\21\3\uffff\1\20\1\u0147\13\uffff\1\u028a\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u0227",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u028b\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u022a",
            "\2\21\3\uffff\1\20\1\u0149\13\uffff\1\u028b\6\uffff\1\146\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\142\1\143\1\144\1\145\1\147\1\150\1\151\11\uffff\1\141\6\uffff\1\21\21\uffff\1\u022a",
            "\1\u022f\1\u0230",
            "\1\u0231\1\u0232",
            "\1\u0233\1\u0234",
            "\1\u023c\1\u023d",
            "\1\u028c\1\u028d",
            "\1\u023e\1\u023f",
            "\1\u0240\1\u0241",
            "\1\u028e\1\u028f",
            "\1\u0242\1\u0243",
            "\1\u0290\1\u0291",
            "\1\u0244\1\u0245",
            "\1\u0246\1\u0247",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u0292\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0249",
            "\2\21\3\uffff\1\20\1\u0176\13\uffff\1\u0292\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u0249",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u0293\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024c",
            "\2\21\3\uffff\1\20\1\u017a\13\uffff\1\u0293\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024c",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u0294\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024e",
            "\2\21\3\uffff\1\20\1\u017b\13\uffff\1\u0294\6\uffff\1\u0089\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\1\uffff\1\u0085\1\u0086\1\u0087\1\u0088\1\u008a\1\u008b\1\u008c\11\uffff\1\u0084\6\uffff\1\21\21\uffff\1\u024e",
            "\1\u0256\1\u0257",
            "\1\u0258\1\u0259",
            "\1\u025a\1\u025b",
            "\1\u025c\1\u025d",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u0295\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0260",
            "\2\21\3\uffff\1\20\1\u01b0\13\uffff\1\u0295\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0260",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u0296\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0261",
            "\2\21\3\uffff\1\20\1\u01b1\13\uffff\1\u0296\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0261",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u0297\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0264",
            "\2\21\3\uffff\1\20\1\u01b4\13\uffff\1\u0297\6\uffff\1\u00ba\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00b8\1\u00b9\1\u00bb\1\u00bc\1\u00bd\20\uffff\1\21\21\uffff\1\u0264",
            "\1\u0267\1\u0268",
            "\1\u0269\1\u026a",
            "\1\u026b\1\u026c",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u0298\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0271",
            "\2\21\3\uffff\1\20\1\u01e5\13\uffff\1\u0298\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0271",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u0299\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0274",
            "\2\21\3\uffff\1\20\1\u01e9\13\uffff\1\u0299\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0274",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u029a\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0276",
            "\2\21\3\uffff\1\20\1\u01ea\13\uffff\1\u029a\6\uffff\1\u00f9\3\uffff\1\40\16\uffff\1\37\1\41\1\uffff\1\42\3\uffff\1\u00f7\1\u00f8\1\u00fa\1\u00fb\1\u00fc\20\uffff\1\21\21\uffff\1\u0276",
            "\1\u0279\1\u027a",
            "\1\u027b\1\u027c",
            "\1\u027d\1\u027e",
            "\1\u0283\1\u0284",
            "\1\u0285\1\u0286",
            "\1\u0287\1\u0288",
            "\1\u028c\1\u028d",
            "\1\u028e\1\u028f",
            "\1\u0290\1\u0291"
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "7551:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )";
        }
    }
    static final String dfa_86s = "\u0085\uffff";
    static final String dfa_87s = "\2\11\1\uffff\2\25\1\uffff\2\25\1\6\1\uffff\1\11\1\6\1\11\4\45\1\7\2\45\2\43\2\25\4\45\1\7\2\45\2\43\2\25\1\6\1\25\2\45\1\11\1\6\2\11\1\6\1\25\2\45\1\11\1\6\2\11\4\45\1\7\2\45\2\43\4\45\1\7\2\45\2\43\2\25\4\45\1\7\2\45\2\43\4\45\1\7\2\45\2\43\2\25\2\45\1\11\1\6\1\25\2\45\2\11\2\45\1\11\1\6\1\25\2\45\2\11\4\45\1\7\2\45\2\43\4\45\1\7\2\45\2\43\2\45\1\11\2\45\1\11";
    static final String dfa_88s = "\2\122\1\uffff\2\153\1\uffff\3\153\1\uffff\1\12\1\153\1\12\3\123\1\153\1\10\4\123\2\153\3\123\1\153\1\10\4\123\3\153\1\110\2\123\1\12\1\153\2\12\1\153\1\110\2\123\1\12\1\153\2\12\3\45\1\153\1\10\4\45\3\123\1\153\1\10\4\123\2\153\3\45\1\153\1\10\4\45\3\123\1\153\1\10\4\123\2\153\2\45\1\12\1\153\1\110\2\123\2\12\2\45\1\12\1\153\1\110\2\123\2\12\3\45\1\153\1\10\7\45\1\153\1\10\6\45\1\12\2\45\1\12";
    static final String dfa_89s = "\2\uffff\1\1\2\uffff\1\2\3\uffff\1\3\173\uffff";
    static final String dfa_90s = "\u0085\uffff}>";
    static final String[] dfa_91s = {
            "\1\3\1\4\3\uffff\1\2\7\uffff\1\2\12\uffff\1\1\10\uffff\1\2\1\uffff\2\2\24\uffff\7\2\11\uffff\1\2",
            "\1\6\1\7\3\uffff\1\2\7\uffff\1\5\23\uffff\1\2\1\uffff\2\2\24\uffff\7\2\11\uffff\1\2",
            "",
            "\1\11\1\2\14\uffff\1\11\6\uffff\1\12\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\10\30\uffff\1\11",
            "\1\11\1\2\14\uffff\1\11\6\uffff\1\12\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\10\30\uffff\1\11",
            "",
            "\1\5\1\2\14\uffff\1\5\6\uffff\1\14\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\13\30\uffff\1\5",
            "\1\5\1\2\14\uffff\1\5\6\uffff\1\14\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\13\30\uffff\1\5",
            "\1\17\1\20\1\22\1\24\1\25\27\uffff\1\23\104\uffff\1\15\1\16\2\uffff\1\21",
            "",
            "\1\26\1\27",
            "\1\32\1\33\1\35\1\37\1\40\27\uffff\1\36\104\uffff\1\30\1\31\2\uffff\1\34",
            "\1\41\1\42",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43\27\uffff\1\21",
            "\1\45\1\46",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\47\1\uffff\1\44\55\uffff\1\43",
            "\1\47\1\uffff\1\44\55\uffff\1\43",
            "\1\11\2\2\13\uffff\1\52\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\30\uffff\1\51",
            "\1\11\2\2\13\uffff\1\52\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\30\uffff\1\51",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53\27\uffff\1\34",
            "\1\55\1\56",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\57\1\uffff\1\54\55\uffff\1\53",
            "\1\57\1\uffff\1\54\55\uffff\1\53",
            "\1\5\2\2\13\uffff\1\62\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\30\uffff\1\61",
            "\1\5\2\2\13\uffff\1\62\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\30\uffff\1\61",
            "\1\65\1\66\1\70\1\72\1\73\27\uffff\1\71\104\uffff\1\63\1\64\2\uffff\1\67",
            "\1\11\1\2\23\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\24\1\25",
            "\1\76\1\77\1\101\1\103\1\104\27\uffff\1\102\104\uffff\1\74\1\75\2\uffff\1\100",
            "\1\105\1\106",
            "\1\26\1\27",
            "\1\111\1\112\1\114\1\116\1\117\27\uffff\1\115\104\uffff\1\107\1\110\2\uffff\1\113",
            "\1\5\1\2\23\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\37\1\40",
            "\1\122\1\123\1\125\1\127\1\130\27\uffff\1\126\104\uffff\1\120\1\121\2\uffff\1\124",
            "\1\131\1\132",
            "\1\41\1\42",
            "\1\44",
            "\1\44",
            "\1\44",
            "\1\44\105\uffff\1\67",
            "\1\133\1\134",
            "\1\44",
            "\1\44",
            "\1\135\1\uffff\1\44",
            "\1\135\1\uffff\1\44",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136\27\uffff\1\100",
            "\1\140\1\141",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\142\1\uffff\1\137\55\uffff\1\136",
            "\1\142\1\uffff\1\137\55\uffff\1\136",
            "\1\11\2\2\13\uffff\1\143\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\30\uffff\1\51",
            "\1\11\2\2\13\uffff\1\143\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\30\uffff\1\51",
            "\1\54",
            "\1\54",
            "\1\54",
            "\1\54\105\uffff\1\113",
            "\1\144\1\145",
            "\1\54",
            "\1\54",
            "\1\146\1\uffff\1\54",
            "\1\146\1\uffff\1\54",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147\27\uffff\1\124",
            "\1\151\1\152",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\153\1\uffff\1\150\55\uffff\1\147",
            "\1\153\1\uffff\1\150\55\uffff\1\147",
            "\1\5\2\2\13\uffff\1\154\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\30\uffff\1\61",
            "\1\5\2\2\13\uffff\1\154\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\30\uffff\1\61",
            "\1\44",
            "\1\44",
            "\1\72\1\73",
            "\1\157\1\160\1\162\1\164\1\165\27\uffff\1\163\104\uffff\1\155\1\156\2\uffff\1\161",
            "\1\11\1\2\23\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\103\1\104",
            "\1\105\1\106",
            "\1\54",
            "\1\54",
            "\1\116\1\117",
            "\1\170\1\171\1\173\1\175\1\176\27\uffff\1\174\104\uffff\1\166\1\167\2\uffff\1\172",
            "\1\5\1\2\23\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\127\1\130",
            "\1\131\1\132",
            "\1\137",
            "\1\137",
            "\1\137",
            "\1\137\105\uffff\1\161",
            "\1\177\1\u0080",
            "\1\137",
            "\1\137",
            "\1\u0081\1\uffff\1\137",
            "\1\u0081\1\uffff\1\137",
            "\1\150",
            "\1\150",
            "\1\150",
            "\1\150\105\uffff\1\172",
            "\1\u0082\1\u0083",
            "\1\150",
            "\1\150",
            "\1\u0084\1\uffff\1\150",
            "\1\u0084\1\uffff\1\150",
            "\1\137",
            "\1\137",
            "\1\164\1\165",
            "\1\150",
            "\1\150",
            "\1\175\1\176"
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "7588:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )?";
        }
    }
    static final String dfa_92s = "\2\11\1\uffff\2\43\1\uffff\2\43\1\6\1\uffff\1\11\1\6\1\11\4\45\1\7\2\45\2\43\2\27\4\45\1\7\2\45\2\43\2\27\1\6\1\52\2\45\1\11\1\6\2\11\1\6\1\52\2\45\1\11\1\6\2\11\4\45\1\7\2\45\2\43\4\45\1\7\2\45\2\43\2\27\4\45\1\7\2\45\2\43\4\45\1\7\2\45\2\43\2\27\2\45\1\11\1\6\1\52\2\45\2\11\2\45\1\11\1\6\1\52\2\45\2\11\4\45\1\7\2\45\2\43\4\45\1\7\2\45\2\43\2\45\1\11\2\45\1\11";
    static final String dfa_93s = "\2\122\1\uffff\2\153\1\uffff\3\153\1\uffff\1\12\1\153\1\12\3\123\1\153\1\10\4\123\2\153\3\123\1\153\1\10\4\123\3\153\1\116\2\123\1\12\1\153\2\12\1\153\1\116\2\123\1\12\1\153\2\12\3\45\1\153\1\10\4\45\3\123\1\153\1\10\4\123\2\153\3\45\1\153\1\10\4\45\3\123\1\153\1\10\4\123\2\153\2\45\1\12\1\153\1\116\2\123\2\12\2\45\1\12\1\153\1\116\2\123\2\12\3\45\1\153\1\10\7\45\1\153\1\10\6\45\1\12\2\45\1\12";
    static final String[] dfa_94s = {
            "\1\3\1\4\3\uffff\1\2\22\uffff\1\1\10\uffff\1\2\1\uffff\2\2\21\uffff\1\2\2\uffff\7\2\11\uffff\1\2",
            "\1\6\1\7\3\uffff\1\2\33\uffff\1\2\1\uffff\2\2\21\uffff\1\5\2\uffff\7\2\11\uffff\1\2",
            "",
            "\1\11\6\uffff\1\12\1\uffff\3\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11\3\uffff\1\10\30\uffff\1\11",
            "\1\11\6\uffff\1\12\1\uffff\3\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11\3\uffff\1\10\30\uffff\1\11",
            "",
            "\1\5\6\uffff\1\14\1\uffff\3\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5\3\uffff\1\13\30\uffff\1\5",
            "\1\5\6\uffff\1\14\1\uffff\3\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5\3\uffff\1\13\30\uffff\1\5",
            "\1\17\1\20\1\22\1\24\1\25\27\uffff\1\23\104\uffff\1\15\1\16\2\uffff\1\21",
            "",
            "\1\26\1\27",
            "\1\32\1\33\1\35\1\37\1\40\27\uffff\1\36\104\uffff\1\30\1\31\2\uffff\1\34",
            "\1\41\1\42",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43\27\uffff\1\21",
            "\1\45\1\46",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\47\1\uffff\1\44\55\uffff\1\43",
            "\1\47\1\uffff\1\44\55\uffff\1\43",
            "\1\2\13\uffff\1\52\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11\3\uffff\1\50\30\uffff\1\51",
            "\1\2\13\uffff\1\52\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11\3\uffff\1\50\30\uffff\1\51",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53\27\uffff\1\34",
            "\1\55\1\56",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\57\1\uffff\1\54\55\uffff\1\53",
            "\1\57\1\uffff\1\54\55\uffff\1\53",
            "\1\2\13\uffff\1\62\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5\3\uffff\1\60\30\uffff\1\61",
            "\1\2\13\uffff\1\62\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5\3\uffff\1\60\30\uffff\1\61",
            "\1\65\1\66\1\70\1\72\1\73\27\uffff\1\71\104\uffff\1\63\1\64\2\uffff\1\67",
            "\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\24\1\25",
            "\1\76\1\77\1\101\1\103\1\104\27\uffff\1\102\104\uffff\1\74\1\75\2\uffff\1\100",
            "\1\105\1\106",
            "\1\26\1\27",
            "\1\111\1\112\1\114\1\116\1\117\27\uffff\1\115\104\uffff\1\107\1\110\2\uffff\1\113",
            "\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\37\1\40",
            "\1\122\1\123\1\125\1\127\1\130\27\uffff\1\126\104\uffff\1\120\1\121\2\uffff\1\124",
            "\1\131\1\132",
            "\1\41\1\42",
            "\1\44",
            "\1\44",
            "\1\44",
            "\1\44\105\uffff\1\67",
            "\1\133\1\134",
            "\1\44",
            "\1\44",
            "\1\135\1\uffff\1\44",
            "\1\135\1\uffff\1\44",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136\27\uffff\1\100",
            "\1\140\1\141",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\142\1\uffff\1\137\55\uffff\1\136",
            "\1\142\1\uffff\1\137\55\uffff\1\136",
            "\1\2\13\uffff\1\143\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11\3\uffff\1\50\30\uffff\1\51",
            "\1\2\13\uffff\1\143\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11\3\uffff\1\50\30\uffff\1\51",
            "\1\54",
            "\1\54",
            "\1\54",
            "\1\54\105\uffff\1\113",
            "\1\144\1\145",
            "\1\54",
            "\1\54",
            "\1\146\1\uffff\1\54",
            "\1\146\1\uffff\1\54",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147\27\uffff\1\124",
            "\1\151\1\152",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\153\1\uffff\1\150\55\uffff\1\147",
            "\1\153\1\uffff\1\150\55\uffff\1\147",
            "\1\2\13\uffff\1\154\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5\3\uffff\1\60\30\uffff\1\61",
            "\1\2\13\uffff\1\154\6\uffff\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5\3\uffff\1\60\30\uffff\1\61",
            "\1\44",
            "\1\44",
            "\1\72\1\73",
            "\1\157\1\160\1\162\1\164\1\165\27\uffff\1\163\104\uffff\1\155\1\156\2\uffff\1\161",
            "\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\11",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\103\1\104",
            "\1\105\1\106",
            "\1\54",
            "\1\54",
            "\1\116\1\117",
            "\1\170\1\171\1\173\1\175\1\176\27\uffff\1\174\104\uffff\1\166\1\167\2\uffff\1\172",
            "\1\2\3\uffff\1\2\16\uffff\4\2\1\uffff\7\2\5\uffff\1\5",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\127\1\130",
            "\1\131\1\132",
            "\1\137",
            "\1\137",
            "\1\137",
            "\1\137\105\uffff\1\161",
            "\1\177\1\u0080",
            "\1\137",
            "\1\137",
            "\1\u0081\1\uffff\1\137",
            "\1\u0081\1\uffff\1\137",
            "\1\150",
            "\1\150",
            "\1\150",
            "\1\150\105\uffff\1\172",
            "\1\u0082\1\u0083",
            "\1\150",
            "\1\150",
            "\1\u0084\1\uffff\1\150",
            "\1\u0084\1\uffff\1\150",
            "\1\137",
            "\1\137",
            "\1\164\1\165",
            "\1\150",
            "\1\150",
            "\1\175\1\176"
    };
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "7964:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )?";
        }
    }
    static final String dfa_95s = "\2\135\1\uffff\2\153\1\uffff\3\153\1\uffff\1\12\1\153\1\12\3\123\1\153\1\10\4\123\2\153\3\123\1\153\1\10\4\123\3\153\1\136\2\123\1\12\1\153\2\12\1\153\1\136\2\123\1\12\1\153\2\12\3\45\1\153\1\10\4\45\3\123\1\153\1\10\4\123\2\153\3\45\1\153\1\10\4\45\3\123\1\153\1\10\4\123\2\153\2\45\1\12\1\153\1\136\2\123\2\12\2\45\1\12\1\153\1\136\2\123\2\12\3\45\1\153\1\10\7\45\1\153\1\10\6\45\1\12\2\45\1\12";
    static final String[] dfa_96s = {
            "\1\3\1\4\3\uffff\1\2\22\uffff\1\1\10\uffff\1\2\1\uffff\2\2\24\uffff\7\2\11\uffff\1\2\12\uffff\1\2",
            "\1\6\1\7\3\uffff\1\2\33\uffff\1\2\1\uffff\2\2\24\uffff\7\2\11\uffff\1\2\12\uffff\1\5",
            "",
            "\1\11\6\uffff\1\12\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\10\12\uffff\1\2\1\11\14\uffff\1\11",
            "\1\11\6\uffff\1\12\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\10\12\uffff\1\2\1\11\14\uffff\1\11",
            "",
            "\1\5\6\uffff\1\14\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\13\12\uffff\1\2\1\5\14\uffff\1\5",
            "\1\5\6\uffff\1\14\1\uffff\3\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\13\12\uffff\1\2\1\5\14\uffff\1\5",
            "\1\17\1\20\1\22\1\24\1\25\27\uffff\1\23\104\uffff\1\15\1\16\2\uffff\1\21",
            "",
            "\1\26\1\27",
            "\1\32\1\33\1\35\1\37\1\40\27\uffff\1\36\104\uffff\1\30\1\31\2\uffff\1\34",
            "\1\41\1\42",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43\27\uffff\1\21",
            "\1\45\1\46",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\47\1\uffff\1\44\55\uffff\1\43",
            "\1\47\1\uffff\1\44\55\uffff\1\43",
            "\1\2\13\uffff\1\52\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\12\uffff\1\2\1\11\14\uffff\1\51",
            "\1\2\13\uffff\1\52\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\12\uffff\1\2\1\11\14\uffff\1\51",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53\27\uffff\1\34",
            "\1\55\1\56",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\57\1\uffff\1\54\55\uffff\1\53",
            "\1\57\1\uffff\1\54\55\uffff\1\53",
            "\1\2\13\uffff\1\62\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\12\uffff\1\2\1\5\14\uffff\1\61",
            "\1\2\13\uffff\1\62\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\12\uffff\1\2\1\5\14\uffff\1\61",
            "\1\65\1\66\1\70\1\72\1\73\27\uffff\1\71\104\uffff\1\63\1\64\2\uffff\1\67",
            "\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\24\uffff\1\2\1\11",
            "\1\44\55\uffff\1\43",
            "\1\44\55\uffff\1\43",
            "\1\24\1\25",
            "\1\76\1\77\1\101\1\103\1\104\27\uffff\1\102\104\uffff\1\74\1\75\2\uffff\1\100",
            "\1\105\1\106",
            "\1\26\1\27",
            "\1\111\1\112\1\114\1\116\1\117\27\uffff\1\115\104\uffff\1\107\1\110\2\uffff\1\113",
            "\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\24\uffff\1\2\1\5",
            "\1\54\55\uffff\1\53",
            "\1\54\55\uffff\1\53",
            "\1\37\1\40",
            "\1\122\1\123\1\125\1\127\1\130\27\uffff\1\126\104\uffff\1\120\1\121\2\uffff\1\124",
            "\1\131\1\132",
            "\1\41\1\42",
            "\1\44",
            "\1\44",
            "\1\44",
            "\1\44\105\uffff\1\67",
            "\1\133\1\134",
            "\1\44",
            "\1\44",
            "\1\135\1\uffff\1\44",
            "\1\135\1\uffff\1\44",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136\27\uffff\1\100",
            "\1\140\1\141",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\142\1\uffff\1\137\55\uffff\1\136",
            "\1\142\1\uffff\1\137\55\uffff\1\136",
            "\1\2\13\uffff\1\143\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\12\uffff\1\2\1\11\14\uffff\1\51",
            "\1\2\13\uffff\1\143\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\50\12\uffff\1\2\1\11\14\uffff\1\51",
            "\1\54",
            "\1\54",
            "\1\54",
            "\1\54\105\uffff\1\113",
            "\1\144\1\145",
            "\1\54",
            "\1\54",
            "\1\146\1\uffff\1\54",
            "\1\146\1\uffff\1\54",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147\27\uffff\1\124",
            "\1\151\1\152",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\153\1\uffff\1\150\55\uffff\1\147",
            "\1\153\1\uffff\1\150\55\uffff\1\147",
            "\1\2\13\uffff\1\154\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\12\uffff\1\2\1\5\14\uffff\1\61",
            "\1\2\13\uffff\1\154\6\uffff\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\11\uffff\1\60\12\uffff\1\2\1\5\14\uffff\1\61",
            "\1\44",
            "\1\44",
            "\1\72\1\73",
            "\1\157\1\160\1\162\1\164\1\165\27\uffff\1\163\104\uffff\1\155\1\156\2\uffff\1\161",
            "\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\24\uffff\1\2\1\11",
            "\1\137\55\uffff\1\136",
            "\1\137\55\uffff\1\136",
            "\1\103\1\104",
            "\1\105\1\106",
            "\1\54",
            "\1\54",
            "\1\116\1\117",
            "\1\170\1\171\1\173\1\175\1\176\27\uffff\1\174\104\uffff\1\166\1\167\2\uffff\1\172",
            "\1\2\3\uffff\1\2\16\uffff\2\2\1\uffff\1\2\1\uffff\7\2\24\uffff\1\2\1\5",
            "\1\150\55\uffff\1\147",
            "\1\150\55\uffff\1\147",
            "\1\127\1\130",
            "\1\131\1\132",
            "\1\137",
            "\1\137",
            "\1\137",
            "\1\137\105\uffff\1\161",
            "\1\177\1\u0080",
            "\1\137",
            "\1\137",
            "\1\u0081\1\uffff\1\137",
            "\1\u0081\1\uffff\1\137",
            "\1\150",
            "\1\150",
            "\1\150",
            "\1\150\105\uffff\1\172",
            "\1\u0082\1\u0083",
            "\1\150",
            "\1\150",
            "\1\u0084\1\uffff\1\150",
            "\1\u0084\1\uffff\1\150",
            "\1\137",
            "\1\137",
            "\1\164\1\165",
            "\1\150",
            "\1\150",
            "\1\175\1\176"
    };
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_92;
            this.max = dfa_95;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "8119:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )?";
        }
    }
    static final String dfa_97s = "\67\uffff";
    static final String dfa_98s = "\4\4\1\uffff\1\6\1\11\2\16\1\11\1\uffff\1\11\4\uffff\4\16\1\6\2\21\1\11\4\16\1\7\4\16\1\11\1\6\1\16\1\7\2\16\1\11\2\21\4\16\1\7\4\16\1\7\2\16\1\11";
    static final String dfa_99s = "\4\u008e\1\uffff\1\u0088\1\122\2\u0087\1\16\1\uffff\1\154\4\uffff\2\u0087\2\u0084\1\u0088\2\172\1\12\4\u0087\1\10\4\u0087\1\12\1\u0088\1\u0087\1\22\2\u0087\1\12\2\172\4\u0087\1\10\4\u0087\1\22\2\u0087\1\12";
    static final String dfa_100s = "\4\uffff\1\6\5\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\47\uffff";
    static final String dfa_101s = "\67\uffff}>";
    static final String[] dfa_102s = {
            "\2\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\2\4\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\1\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\1\14\7\12\6\14\1\uffff\1\12\3\uffff\7\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\1\1\1\2\1\3\3\14",
            "\2\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\1\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\1\14\7\12\6\14\1\uffff\1\12\3\uffff\7\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\14",
            "\2\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\1\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\1\14\7\12\6\14\1\uffff\1\12\3\uffff\7\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\14",
            "\2\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\1\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\1\14\7\12\6\14\1\uffff\1\12\3\uffff\7\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\14",
            "",
            "\3\4\1\20\1\21\7\uffff\1\4\16\uffff\2\4\66\uffff\1\4\15\uffff\2\4\2\uffff\1\4\34\uffff\1\4",
            "\1\22\1\23\3\uffff\1\14\33\uffff\1\14\1\uffff\2\14\24\uffff\7\14\11\uffff\1\14",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\5\uffff\1\14\1\uffff\3\14\16\uffff\2\14\1\uffff\1\14\1\uffff\7\14\5\uffff\3\14\1\uffff\1\24\1\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\5\uffff\1\14\1\uffff\3\14\16\uffff\2\14\1\uffff\1\14\1\uffff\7\14\5\uffff\3\14\1\uffff\1\24\1\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\25\1\26\3\uffff\1\12",
            "",
            "\2\14\3\uffff\1\14\22\uffff\1\14\7\uffff\1\12\1\14\1\uffff\2\14\7\uffff\1\12\1\uffff\6\14\5\uffff\7\14\11\uffff\1\14\1\uffff\4\12\1\14\2\uffff\2\14\2\uffff\1\12\1\14\1\12\1\uffff\1\14\1\12\2\14\2\uffff\1\12\1\14\1\uffff\1\12",
            "",
            "",
            "",
            "",
            "\2\4\1\uffff\2\14\1\4\16\uffff\1\4\1\27\1\4\11\uffff\1\14\16\uffff\2\14\1\uffff\1\14\15\uffff\3\14\1\uffff\2\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\1\4\1\27\1\4\11\uffff\1\14\16\uffff\2\14\1\uffff\1\14\15\uffff\3\14\1\uffff\2\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\5\uffff\1\14\1\uffff\3\14\16\uffff\2\14\1\uffff\1\14\1\uffff\7\14\5\uffff\3\14\1\uffff\1\14\1\4\31\uffff\1\4\4\uffff\23\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\5\uffff\1\14\1\uffff\3\14\16\uffff\2\14\1\uffff\1\14\1\uffff\7\14\5\uffff\3\14\1\uffff\1\14\1\4\31\uffff\1\4\4\uffff\23\4",
            "\1\32\1\33\1\35\1\37\1\40\7\uffff\1\4\16\uffff\1\4\1\36\11\uffff\1\4\54\uffff\1\4\15\uffff\1\30\1\31\2\uffff\1\34\1\uffff\1\4\3\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\40\uffff\2\12\54\uffff\11\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\40\uffff\2\12\54\uffff\11\4",
            "\1\20\1\21",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\44\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\45\1\46",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\47\1\4\1\43\54\uffff\1\4\1\42\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\47\1\4\1\43\54\uffff\1\4\1\42\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\50\1\51",
            "\1\54\1\55\1\57\1\61\1\62\7\uffff\1\4\16\uffff\1\4\1\60\11\uffff\1\4\54\uffff\1\4\15\uffff\1\52\1\53\2\uffff\1\56\24\uffff\2\4\3\uffff\1\4\2\uffff\1\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\1\4\1\uffff\1\4\5\uffff\1\14\3\uffff\1\14\16\uffff\2\14\1\uffff\1\14\1\uffff\7\14\5\uffff\3\14\1\uffff\2\4\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\45\1\46\2\4\7\uffff\1\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\37\1\40",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\116\uffff\11\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\116\uffff\11\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\63\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\64\1\65",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\66\1\4\1\43\54\uffff\1\4\6\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\66\1\4\1\43\54\uffff\1\4\6\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\64\1\65\2\4\7\uffff\1\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\54\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\61\1\62"
    };

    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_97;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "()* loopback of 8470:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )*";
        }
    }
    static final String[] dfa_103s = {
            "\1\1\1\2",
            "\2\5\2\uffff\1\5\15\uffff\1\3\107\uffff\1\4",
            "\2\5\2\uffff\1\5\15\uffff\1\3\107\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA198 extends DFA {

        public DFA198(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 198;
            this.eot = dfa_31;
            this.eof = dfa_45;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_35;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "9591:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )?";
        }
    }
    static final String dfa_104s = "\3\uffff\1\7\1\uffff\2\7\3\uffff";
    static final String dfa_105s = "\1\11\2\43\2\11\2\21\2\uffff\1\11";
    static final String dfa_106s = "\1\12\2\153\2\12\2\153\2\uffff\1\12";
    static final String dfa_107s = "\7\uffff\1\1\1\2\1\uffff";
    static final String[] dfa_108s = {
            "\1\1\1\2",
            "\1\4\107\uffff\1\3",
            "\1\4\107\uffff\1\3",
            "\1\5\1\6",
            "\1\1\1\2",
            "\2\7\2\uffff\1\7\15\uffff\1\11\107\uffff\1\10",
            "\2\7\2\uffff\1\7\15\uffff\1\11\107\uffff\1\10",
            "",
            "",
            "\1\5\1\6"
    };
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_25;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_29;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "9647:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )";
        }
    }
    static final String dfa_109s = "\1\11\2\43\2\11\2\21\1\uffff\1\11\1\uffff";
    static final String dfa_110s = "\1\12\2\153\2\12\2\153\1\uffff\1\12\1\uffff";
    static final String dfa_111s = "\7\uffff\1\2\1\uffff\1\1";
    static final String[] dfa_112s = {
            "\1\1\1\2",
            "\1\4\107\uffff\1\3",
            "\1\4\107\uffff\1\3",
            "\1\5\1\6",
            "\1\1\1\2",
            "\2\7\2\uffff\1\7\15\uffff\1\10\107\uffff\1\11",
            "\2\7\2\uffff\1\7\15\uffff\1\10\107\uffff\1\11",
            "",
            "\1\5\1\6",
            ""
    };
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA200 extends DFA {

        public DFA200(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 200;
            this.eot = dfa_25;
            this.eof = dfa_104;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_29;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "()+ loopback of 9709:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+";
        }
    }
    static final String dfa_113s = "\7\uffff";
    static final String dfa_114s = "\1\uffff\2\3\4\uffff";
    static final String dfa_115s = "\1\11\2\16\1\uffff\2\11\1\uffff";
    static final String dfa_116s = "\1\12\2\u0087\1\uffff\1\22\1\12\1\uffff";
    static final String dfa_117s = "\3\uffff\1\1\2\uffff\1\2";
    static final String dfa_118s = "\7\uffff}>";
    static final String[] dfa_119s = {
            "\1\1\1\2",
            "\2\3\1\uffff\3\3\3\uffff\1\3\12\uffff\1\3\1\5\2\3\54\uffff\2\3\6\uffff\1\3\20\uffff\1\4\1\uffff\1\3\1\uffff\2\3\1\uffff\23\3\1\uffff\2\3",
            "\2\3\1\uffff\3\3\3\uffff\1\3\12\uffff\1\3\1\5\2\3\54\uffff\2\3\6\uffff\1\3\20\uffff\1\4\1\uffff\1\3\1\uffff\2\3\1\uffff\23\3\1\uffff\2\3",
            "",
            "\2\6\7\uffff\1\3",
            "\1\1\1\2",
            ""
    };

    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[][] dfa_119 = unpackEncodedStringArray(dfa_119s);

    class DFA246 extends DFA {

        public DFA246(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 246;
            this.eot = dfa_113;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "13224:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )";
        }
    }
    static final String dfa_120s = "\23\uffff";
    static final String dfa_121s = "\4\uffff\2\11\6\uffff\2\11\2\uffff\2\11\1\uffff";
    static final String dfa_122s = "\1\6\1\uffff\1\6\1\uffff\2\16\2\uffff\1\11\2\uffff\1\11\2\16\2\11\2\16\1\11";
    static final String dfa_123s = "\1\u0088\1\uffff\1\u0088\1\uffff\2\u0087\2\uffff\1\22\2\uffff\1\12\2\u0087\1\22\1\12\2\u0087\1\12";
    static final String dfa_124s = "\1\uffff\1\1\1\uffff\1\2\2\uffff\1\5\1\6\1\uffff\1\3\1\4\10\uffff";
    static final String dfa_125s = "\23\uffff}>";
    static final String[] dfa_126s = {
            "\3\3\1\4\1\5\7\uffff\1\6\17\uffff\1\3\66\uffff\1\2\15\uffff\2\3\2\uffff\1\3\34\uffff\1\1",
            "",
            "\5\7\7\uffff\1\7\16\uffff\2\7\11\uffff\1\7\54\uffff\1\7\1\1\14\uffff\2\7\2\uffff\1\7\1\uffff\1\7\3\uffff\1\7\11\uffff\3\7\2\uffff\2\7\3\uffff\1\7\2\uffff\1\7",
            "",
            "\2\11\1\uffff\3\11\3\uffff\1\11\12\uffff\1\11\1\13\2\11\54\uffff\2\11\5\uffff\1\12\1\11\20\uffff\1\10\1\uffff\1\11\1\uffff\2\11\1\uffff\23\11\1\uffff\2\11",
            "\2\11\1\uffff\3\11\3\uffff\1\11\12\uffff\1\11\1\13\2\11\54\uffff\2\11\5\uffff\1\12\1\11\20\uffff\1\10\1\uffff\1\11\1\uffff\2\11\1\uffff\23\11\1\uffff\2\11",
            "",
            "",
            "\1\14\1\15\7\uffff\1\11",
            "",
            "",
            "\1\4\1\5",
            "\2\11\1\uffff\3\11\3\uffff\1\11\12\uffff\1\11\1\17\2\11\54\uffff\2\11\5\uffff\1\12\1\11\20\uffff\1\16\1\uffff\1\11\1\uffff\2\11\1\uffff\23\11\1\uffff\2\11",
            "\2\11\1\uffff\3\11\3\uffff\1\11\12\uffff\1\11\1\17\2\11\54\uffff\2\11\5\uffff\1\12\1\11\20\uffff\1\16\1\uffff\1\11\1\uffff\2\11\1\uffff\23\11\1\uffff\2\11",
            "\1\20\1\21\7\uffff\1\11",
            "\1\14\1\15",
            "\2\11\1\uffff\3\11\3\uffff\1\11\12\uffff\1\11\1\22\2\11\54\uffff\2\11\5\uffff\1\12\1\11\20\uffff\1\16\1\uffff\1\11\1\uffff\2\11\1\uffff\23\11\1\uffff\2\11",
            "\2\11\1\uffff\3\11\3\uffff\1\11\12\uffff\1\11\1\22\2\11\54\uffff\2\11\5\uffff\1\12\1\11\20\uffff\1\16\1\uffff\1\11\1\uffff\2\11\1\uffff\23\11\1\uffff\2\11",
            "\1\20\1\21"
    };

    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = dfa_120;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "13288:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_InvocationExpression_3= ruleInvocationExpression | this_BodyExpression_4= ruleBodyExpression | (otherlv_5= '(' this_SequenceExpression_6= ruleSequenceExpression otherlv_7= ')' ) )";
        }
    }
    static final String dfa_127s = "\1\6\1\uffff\2\16\1\uffff\1\11\1\uffff";
    static final String dfa_128s = "\1\u0088\1\uffff\2\u0087\1\uffff\1\12\1\uffff";
    static final String dfa_129s = "\1\uffff\1\1\2\uffff\1\3\1\uffff\1\2";
    static final String[] dfa_130s = {
            "\3\1\1\2\1\3\7\uffff\1\1\16\uffff\2\1\11\uffff\1\1\54\uffff\1\1\1\4\14\uffff\2\1\2\uffff\1\1\1\uffff\1\1\3\uffff\1\1\11\uffff\3\1\2\uffff\2\1\3\uffff\1\1\2\uffff\1\1",
            "",
            "\2\1\7\uffff\1\1\12\uffff\1\1\1\5\1\1\51\uffff\1\6\3\uffff\2\1\5\uffff\2\1\20\uffff\1\1\1\uffff\1\1\4\uffff\23\1\1\uffff\2\1",
            "\2\1\7\uffff\1\1\12\uffff\1\1\1\5\1\1\51\uffff\1\6\3\uffff\2\1\5\uffff\2\1\20\uffff\1\1\1\uffff\1\1\4\uffff\23\1\1\uffff\2\1",
            "",
            "\1\2\1\3",
            ""
    };
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA250 extends DFA {

        public DFA250(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 250;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_127;
            this.max = dfa_128;
            this.accept = dfa_129;
            this.special = dfa_118;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "13789:3: (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x5FFF77437D114632L,0x0000767B99F63FFCL,0x0000000000007E00L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000004600L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000004602L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000064600L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x000000001D180030L,0x0000600000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000664600L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000200002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x5FFF77423D194630L,0x0000767B99F63FFCL,0x0000000000007E00L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000002004610L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000002000010L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000800010L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000004620L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000004610L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000010004600L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000060000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x5FFF77437D194630L,0x0000767B99F63FFCL,0x0000000000007E00L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x407F43403D110030L,0x0000721280F23E00L,0x0000000000000E00L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x5FFF77423D114630L,0x0000767B99F63FFCL,0x0000000000007E00L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000080004600L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000600004600L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000400004600L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00001006000447C0L,0x0002098002000000L,0x0000000000000123L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x5FFF77C37D194630L,0x0000767B99F63FFCL,0x0000000000007E00L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x00003C0200004600L,0x0000000000040000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x00007C0200004602L,0x0000000000040000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x5FFFF7437D194630L,0x0000767B99F63FFCL,0x0000000000007E00L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0002000000004600L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x00000C0000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0008000000004600L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000300000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000400000004600L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x00007C0200064600L,0x0000000000040000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x00007C0000004602L,0x0000000000040000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x00007C0000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00007C0000000002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0040000000004600L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0F80010000000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0F80000000000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0E00000000000002L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0C00000000000002L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x1000340200004600L,0x00000000000401FCL});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000060000L,0x000000000001C000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x7000740200004602L,0x00000000000401FDL});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x6000400000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000040000000002L,0x00000000000401FCL});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000040000000002L,0x00000000000001F0L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x4000000000004600L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x8000000000004600L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000004600L,0x0000000000000800L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000030L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000004600L,0x0000000000001000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000004600L,0x0000000000002000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x00001006000447C0L,0x0002098002014000L,0x0000000000000123L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000040000004600L,0x0000000000000040L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000004600L,0x0000000000040000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x00000004000047C0L,0x0000098000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000002000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x1000340200404600L,0x00000000020401FCL});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x1000340200404600L,0x00000000000401FCL});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000800000L,0x0000000004000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x9000340200404600L,0x00000000000401FCL});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x1000340200404600L,0x00000000200401FCL});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x1000340200064600L,0x000000000005C1FCL});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x000000000001C000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x5FFFF7477D1547F0L,0x00027FFF9BF63FFCL,0x0000000000007F23L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x5FFFF7477D1547F2L,0x00027FFF9BF63FFCL,0x0000000000007F23L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x10007C0200064600L,0x000000000005C1FCL});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x10007C0200064600L,0x000001800005C1FCL});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x9000340200004600L,0x00000000000401FCL});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000002060000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000002860000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000004600L,0x0000000000000180L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000040002060000L,0x000000000005C1FCL});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000002060000L,0x000000000001C000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x00001006000447C0L,0x0000098002000000L,0x0000000000000123L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000002L,0x0030000000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x0180000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000002L,0x0600000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000002L,0x3800200000000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000000L,0x3800200000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x000000000000C002L,0xC000000000000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000001000000002L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000002L,0x0000080000040000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000044600L,0x0000000002000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x00001006000447C0L,0x0002098006000000L,0x0000000000000123L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000800000000L});

}