package org.omg.kerml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.kerml.xtext.services.KerMLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKerMLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_REGULAR_COMMENT", "RULE_STRING_VALUE", "RULE_DECIMAL_VALUE", "RULE_EXP_VALUE", "RULE_ID", "RULE_UNRESTRICTED_NAME", "RULE_ML_NOTE", "RULE_SL_NOTE", "RULE_WS", "'<'", "'>'", "'element'", "';'", "'{'", "'}'", "'relationship'", "'to'", "'from'", "','", "'comment'", "'about'", "'doc'", "'rep'", "'language'", "'namespace'", "'alias'", "'for'", "'import'", "'all'", "'*'", "'::'", "'**'", "']'", "'standard'", "'library'", "'package'", "'filter'", "'abstract'", "'type'", "':>'", "'specializes'", "'~'", "'conjugates'", "'disjoint'", "'unions'", "'intersects'", "'differences'", "'member'", "'specialization'", "'subtype'", "'conjugation'", "'conjugate'", "'disjoining'", "'classifier'", "'subclassifier'", "'composite'", "'portion'", "'readonly'", "'derived'", "'end'", "'feature'", "'chains'", "'inverse'", "'of'", "'featured'", "'by'", "'ordered'", "'nonunique'", "':'", "'typed'", "'subsets'", "'::>'", "'references'", "':>>'", "'redefines'", "'inverting'", "'featuring'", "'typing'", "'subset'", "'redefinition'", "'='", "'default'", "':='", "'multiplicity'", "'['", "'..'", "'datatype'", "'class'", "'struct'", "'assoc'", "'connector'", "'('", "')'", "'binding'", "'succession'", "'first'", "'then'", "'behavior'", "'step'", "'function'", "'return'", "'expr'", "'predicate'", "'bool'", "'inv'", "'true'", "'false'", "'interaction'", "'flow'", "'.'", "'metaclass'", "'#'", "'@'", "'metadata'", "'?'", "'else'", "'if'", "'??'", "'implies'", "'|'", "'or'", "'xor'", "'&'", "'and'", "'=='", "'!='", "'==='", "'!=='", "'hastype'", "'istype'", "'as'", "'@@'", "'meta'", "'<='", "'>='", "'+'", "'-'", "'/'", "'%'", "'^'", "'not'", "'->'", "'.?'", "'null'", "'public'", "'private'", "'protected'", "'in'", "'out'", "'inout'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=8;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_REGULAR_COMMENT=4;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int RULE_UNRESTRICTED_NAME=9;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_STRING_VALUE=5;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_SL_NOTE=11;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL_VALUE=6;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int RULE_ML_NOTE=10;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=12;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int RULE_EXP_VALUE=7;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalKerMLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKerMLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKerMLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKerML.g"; }



     	private KerMLGrammarAccess grammarAccess;

        public InternalKerMLParser(TokenStream input, KerMLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "RootNamespace";
       	}

       	@Override
       	protected KerMLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRootNamespace"
    // InternalKerML.g:65:1: entryRuleRootNamespace returns [EObject current=null] : iv_ruleRootNamespace= ruleRootNamespace EOF ;
    public final EObject entryRuleRootNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootNamespace = null;


        try {
            // InternalKerML.g:65:54: (iv_ruleRootNamespace= ruleRootNamespace EOF )
            // InternalKerML.g:66:2: iv_ruleRootNamespace= ruleRootNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRootNamespace=ruleRootNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootNamespace"


    // $ANTLR start "ruleRootNamespace"
    // InternalKerML.g:72:1: ruleRootNamespace returns [EObject current=null] : ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* ) ;
    public final EObject ruleRootNamespace() throws RecognitionException {
        EObject current = null;

        EObject this_NamespaceBodyElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:78:2: ( ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* ) )
            // InternalKerML.g:79:2: ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* )
            {
            // InternalKerML.g:79:2: ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* )
            // InternalKerML.g:80:3: () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )*
            {
            // InternalKerML.g:80:3: ()
            // InternalKerML.g:81:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootNamespaceAccess().getNamespaceAction_0(),
              					current);
              			
            }

            }

            // InternalKerML.g:87:3: (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_REGULAR_COMMENT||(LA1_0>=RULE_ID && LA1_0<=RULE_UNRESTRICTED_NAME)||LA1_0==13||LA1_0==15||LA1_0==19||LA1_0==23||(LA1_0>=25 && LA1_0<=29)||(LA1_0>=31 && LA1_0<=32)||(LA1_0>=37 && LA1_0<=39)||(LA1_0>=41 && LA1_0<=43)||(LA1_0>=45 && LA1_0<=47)||(LA1_0>=52 && LA1_0<=64)||LA1_0==66||(LA1_0>=70 && LA1_0<=83)||(LA1_0>=87 && LA1_0<=88)||(LA1_0>=90 && LA1_0<=94)||(LA1_0>=97 && LA1_0<=98)||(LA1_0>=101 && LA1_0<=103)||(LA1_0>=105 && LA1_0<=108)||(LA1_0>=111 && LA1_0<=112)||(LA1_0>=114 && LA1_0<=117)||(LA1_0>=148 && LA1_0<=153)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalKerML.g:88:4: this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRootNamespaceRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRootNamespaceAccess().getNamespaceBodyElementParserRuleCall_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_3);
            	    this_NamespaceBodyElement_1=ruleNamespaceBodyElement(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_NamespaceBodyElement_1;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootNamespace"


    // $ANTLR start "ruleIdentification"
    // InternalKerML.g:105:1: ruleIdentification[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) ) ;
    public final EObject ruleIdentification(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_shortName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:111:2: ( ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) ) )
            // InternalKerML.g:112:2: ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) )
            {
            // InternalKerML.g:112:2: ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==13) ) {
                alt3=1;
            }
            else if ( ((LA3_0>=RULE_ID && LA3_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKerML.g:113:3: (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? )
                    {
                    // InternalKerML.g:113:3: (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? )
                    // InternalKerML.g:114:4: otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )?
                    {
                    otherlv_0=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getIdentificationAccess().getLessThanSignKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:118:4: ( (lv_shortName_1_0= ruleName ) )
                    // InternalKerML.g:119:5: (lv_shortName_1_0= ruleName )
                    {
                    // InternalKerML.g:119:5: (lv_shortName_1_0= ruleName )
                    // InternalKerML.g:120:6: lv_shortName_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentificationAccess().getShortNameNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_shortName_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentificationRule());
                      						}
                      						set(
                      							current,
                      							"shortName",
                      							lv_shortName_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,14,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIdentificationAccess().getGreaterThanSignKeyword_0_2());
                      			
                    }
                    // InternalKerML.g:141:4: ( (lv_name_3_0= ruleName ) )?
                    int alt2=2;
                    int LA2_0 = input.LA(1);

                    if ( ((LA2_0>=RULE_ID && LA2_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt2=1;
                    }
                    switch (alt2) {
                        case 1 :
                            // InternalKerML.g:142:5: (lv_name_3_0= ruleName )
                            {
                            // InternalKerML.g:142:5: (lv_name_3_0= ruleName )
                            // InternalKerML.g:143:6: lv_name_3_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_3_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getIdentificationRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_3_0,
                              							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:162:3: ( (lv_name_4_0= ruleName ) )
                    {
                    // InternalKerML.g:162:3: ( (lv_name_4_0= ruleName ) )
                    // InternalKerML.g:163:4: (lv_name_4_0= ruleName )
                    {
                    // InternalKerML.g:163:4: (lv_name_4_0= ruleName )
                    // InternalKerML.g:164:5: lv_name_4_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIdentificationRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_4_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentification"


    // $ANTLR start "entryRuleElement"
    // InternalKerML.g:185:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalKerML.g:185:48: (iv_ruleElement= ruleElement EOF )
            // InternalKerML.g:186:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalKerML.g:192:1: ruleElement returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'element' (this_Identification_2= ruleIdentification[$current] )? this_ElementBody_3= ruleElementBody[$current] ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject this_Identification_2 = null;

        EObject this_ElementBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:198:2: ( ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'element' (this_Identification_2= ruleIdentification[$current] )? this_ElementBody_3= ruleElementBody[$current] ) )
            // InternalKerML.g:199:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'element' (this_Identification_2= ruleIdentification[$current] )? this_ElementBody_3= ruleElementBody[$current] )
            {
            // InternalKerML.g:199:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'element' (this_Identification_2= ruleIdentification[$current] )? this_ElementBody_3= ruleElementBody[$current] )
            // InternalKerML.g:200:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'element' (this_Identification_2= ruleIdentification[$current] )? this_ElementBody_3= ruleElementBody[$current]
            {
            // InternalKerML.g:200:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==115) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalKerML.g:201:4: (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation )
            	    {
            	    // InternalKerML.g:201:4: (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation )
            	    // InternalKerML.g:202:5: lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElementAccess().getOwnedRelationshipPrefixMetadataAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_ownedRelationship_0_0=rulePrefixMetadataAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            otherlv_1=(Token)match(input,15,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getElementAccess().getElementKeyword_1());
              		
            }
            // InternalKerML.g:223:3: (this_Identification_2= ruleIdentification[$current] )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( ((LA5_0>=RULE_ID && LA5_0<=RULE_UNRESTRICTED_NAME)||LA5_0==13) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalKerML.g:224:4: this_Identification_2= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getElementRule());
                      				}
                      				newCompositeNode(grammarAccess.getElementAccess().getIdentificationParserRuleCall_2());
                      			
                    }
                    pushFollow(FOLLOW_8);
                    this_Identification_2=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getElementRule());
              			}
              			newCompositeNode(grammarAccess.getElementAccess().getElementBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_ElementBody_3=ruleElementBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "ruleElementBody"
    // InternalKerML.g:252:1: ruleElementBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) ) ;
    public final EObject ruleElementBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_OwnedElement_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:258:2: ( (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) ) )
            // InternalKerML.g:259:2: (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) )
            {
            // InternalKerML.g:259:2: (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==16) ) {
                alt7=1;
            }
            else if ( (LA7_0==17) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalKerML.g:260:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getElementBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:265:3: (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' )
                    {
                    // InternalKerML.g:265:3: (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' )
                    // InternalKerML.g:266:4: otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getElementBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:270:4: (this_OwnedElement_2= ruleOwnedElement[$current] )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==RULE_REGULAR_COMMENT||LA6_0==19||LA6_0==23||(LA6_0>=25 && LA6_0<=27)||(LA6_0>=115 && LA6_0<=117)) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // InternalKerML.g:271:5: this_OwnedElement_2= ruleOwnedElement[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getElementBodyRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getElementBodyAccess().getOwnedElementParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    this_OwnedElement_2=ruleOwnedElement(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_OwnedElement_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getElementBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementBody"


    // $ANTLR start "ruleOwnedElement"
    // InternalKerML.g:293:1: ruleOwnedElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) ;
    public final EObject ruleOwnedElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:299:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) )
            // InternalKerML.g:300:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            {
            // InternalKerML.g:300:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==19||LA8_0==115) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_REGULAR_COMMENT||LA8_0==23||(LA8_0>=25 && LA8_0<=27)||(LA8_0>=116 && LA8_0<=117)) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalKerML.g:301:3: ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) )
                    {
                    // InternalKerML.g:301:3: ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) )
                    // InternalKerML.g:302:4: (lv_ownedRelationship_0_0= ruleOwnedRelationship )
                    {
                    // InternalKerML.g:302:4: (lv_ownedRelationship_0_0= ruleOwnedRelationship )
                    // InternalKerML.g:303:5: lv_ownedRelationship_0_0= ruleOwnedRelationship
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedRelationshipParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleOwnedRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedRelationship");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:321:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    {
                    // InternalKerML.g:321:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    // InternalKerML.g:322:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    {
                    // InternalKerML.g:322:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    // InternalKerML.g:323:5: lv_ownedRelationship_1_0= ruleOwnedAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedAnnotationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.OwnedAnnotation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedElement"


    // $ANTLR start "entryRuleRelationship"
    // InternalKerML.g:344:1: entryRuleRelationship returns [EObject current=null] : iv_ruleRelationship= ruleRelationship EOF ;
    public final EObject entryRuleRelationship() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationship = null;


        try {
            // InternalKerML.g:344:53: (iv_ruleRelationship= ruleRelationship EOF )
            // InternalKerML.g:345:2: iv_ruleRelationship= ruleRelationship EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationshipRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationship=ruleRelationship();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationship; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationship"


    // $ANTLR start "ruleRelationship"
    // InternalKerML.g:351:1: ruleRelationship returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? this_RelationshipRelatedElements_3= ruleRelationshipRelatedElements[$current] this_RelationshipBody_4= ruleRelationshipBody[$current] ) ;
    public final EObject ruleRelationship() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject this_Identification_2 = null;

        EObject this_RelationshipRelatedElements_3 = null;

        EObject this_RelationshipBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:357:2: ( ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? this_RelationshipRelatedElements_3= ruleRelationshipRelatedElements[$current] this_RelationshipBody_4= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:358:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? this_RelationshipRelatedElements_3= ruleRelationshipRelatedElements[$current] this_RelationshipBody_4= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:358:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? this_RelationshipRelatedElements_3= ruleRelationshipRelatedElements[$current] this_RelationshipBody_4= ruleRelationshipBody[$current] )
            // InternalKerML.g:359:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? this_RelationshipRelatedElements_3= ruleRelationshipRelatedElements[$current] this_RelationshipBody_4= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:359:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==115) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalKerML.g:360:4: (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation )
            	    {
            	    // InternalKerML.g:360:4: (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation )
            	    // InternalKerML.g:361:5: lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRelationshipAccess().getOwnedRelationshipPrefixMetadataAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_10);
            	    lv_ownedRelationship_0_0=rulePrefixMetadataAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRelationshipRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            otherlv_1=(Token)match(input,19,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRelationshipAccess().getRelationshipKeyword_1());
              		
            }
            // InternalKerML.g:382:3: (this_Identification_2= ruleIdentification[$current] )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( ((LA10_0>=RULE_ID && LA10_0<=RULE_UNRESTRICTED_NAME)||LA10_0==13) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalKerML.g:383:4: this_Identification_2= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipAccess().getIdentificationParserRuleCall_2());
                      			
                    }
                    pushFollow(FOLLOW_11);
                    this_Identification_2=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipRelatedElementsParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_11);
            this_RelationshipRelatedElements_3=ruleRelationshipRelatedElements(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipRelatedElements_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_4=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationship"


    // $ANTLR start "entryRuleOwnedRelationship"
    // InternalKerML.g:421:1: entryRuleOwnedRelationship returns [EObject current=null] : iv_ruleOwnedRelationship= ruleOwnedRelationship EOF ;
    public final EObject entryRuleOwnedRelationship() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRelationship = null;


        try {
            // InternalKerML.g:421:58: (iv_ruleOwnedRelationship= ruleOwnedRelationship EOF )
            // InternalKerML.g:422:2: iv_ruleOwnedRelationship= ruleOwnedRelationship EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRelationshipRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRelationship=ruleOwnedRelationship();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRelationship; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRelationship"


    // $ANTLR start "ruleOwnedRelationship"
    // InternalKerML.g:428:1: ruleOwnedRelationship returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? (otherlv_3= 'to' this_RelationshipTargetList_4= ruleRelationshipTargetList[$current] )? this_RelationshipBody_5= ruleRelationshipBody[$current] ) ;
    public final EObject ruleOwnedRelationship() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject this_Identification_2 = null;

        EObject this_RelationshipTargetList_4 = null;

        EObject this_RelationshipBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:434:2: ( ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? (otherlv_3= 'to' this_RelationshipTargetList_4= ruleRelationshipTargetList[$current] )? this_RelationshipBody_5= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:435:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? (otherlv_3= 'to' this_RelationshipTargetList_4= ruleRelationshipTargetList[$current] )? this_RelationshipBody_5= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:435:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? (otherlv_3= 'to' this_RelationshipTargetList_4= ruleRelationshipTargetList[$current] )? this_RelationshipBody_5= ruleRelationshipBody[$current] )
            // InternalKerML.g:436:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )* otherlv_1= 'relationship' (this_Identification_2= ruleIdentification[$current] )? (otherlv_3= 'to' this_RelationshipTargetList_4= ruleRelationshipTargetList[$current] )? this_RelationshipBody_5= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:436:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==115) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalKerML.g:437:4: (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation )
            	    {
            	    // InternalKerML.g:437:4: (lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation )
            	    // InternalKerML.g:438:5: lv_ownedRelationship_0_0= rulePrefixMetadataAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getOwnedRelationshipPrefixMetadataAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_10);
            	    lv_ownedRelationship_0_0=rulePrefixMetadataAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getOwnedRelationshipRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            otherlv_1=(Token)match(input,19,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getOwnedRelationshipAccess().getRelationshipKeyword_1());
              		
            }
            // InternalKerML.g:459:3: (this_Identification_2= ruleIdentification[$current] )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_ID && LA12_0<=RULE_UNRESTRICTED_NAME)||LA12_0==13) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalKerML.g:460:4: this_Identification_2= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOwnedRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getIdentificationParserRuleCall_2());
                      			
                    }
                    pushFollow(FOLLOW_11);
                    this_Identification_2=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:472:3: (otherlv_3= 'to' this_RelationshipTargetList_4= ruleRelationshipTargetList[$current] )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==20) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalKerML.g:473:4: otherlv_3= 'to' this_RelationshipTargetList_4= ruleRelationshipTargetList[$current]
                    {
                    otherlv_3=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOwnedRelationshipAccess().getToKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOwnedRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipTargetListParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_11);
                    this_RelationshipTargetList_4=ruleRelationshipTargetList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipTargetList_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getOwnedRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_5=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRelationship"


    // $ANTLR start "ruleRelationshipRelatedElements"
    // InternalKerML.g:505:1: ruleRelationshipRelatedElements[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? ) ;
    public final EObject ruleRelationshipRelatedElements(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_RelationshipSourceList_1 = null;

        EObject this_RelationshipTargetList_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:511:2: ( ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? ) )
            // InternalKerML.g:512:2: ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? )
            {
            // InternalKerML.g:512:2: ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? )
            // InternalKerML.g:513:3: (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            {
            // InternalKerML.g:513:3: (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==21) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalKerML.g:514:4: otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current]
                    {
                    otherlv_0=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRelationshipRelatedElementsAccess().getFromKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipSourceListParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_12);
                    this_RelationshipSourceList_1=ruleRelationshipSourceList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipSourceList_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:530:3: (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==20) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalKerML.g:531:4: otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current]
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_RelationshipTargetList_3=ruleRelationshipTargetList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipTargetList_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipRelatedElements"


    // $ANTLR start "ruleRelationshipSourceList"
    // InternalKerML.g:552:1: ruleRelationshipSourceList[EObject in_current] returns [EObject current=in_current] : (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* ) ;
    public final EObject ruleRelationshipSourceList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_RelationshipSource_0 = null;

        EObject this_RelationshipSource_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:558:2: ( (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* ) )
            // InternalKerML.g:559:2: (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* )
            {
            // InternalKerML.g:559:2: (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* )
            // InternalKerML.g:560:3: this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipSourceListRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_RelationshipSource_0=ruleRelationshipSource(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:571:3: (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==22) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalKerML.g:572:4: otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current]
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRelationshipSourceListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRelationshipSourceListRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_13);
            	    this_RelationshipSource_2=ruleRelationshipSource(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_RelationshipSource_2;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipSourceList"


    // $ANTLR start "ruleRelationshipSource"
    // InternalKerML.g:593:1: ruleRelationshipSource[EObject in_current] returns [EObject current=in_current] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleRelationshipSource(EObject in_current) throws RecognitionException {
        EObject current = in_current;


        	enterRule();

        try {
            // InternalKerML.g:599:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:600:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:600:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:601:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:601:3: ( ruleQualifiedName )
            // InternalKerML.g:602:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRelationshipSourceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRelationshipSourceAccess().getSourceElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipSource"


    // $ANTLR start "ruleRelationshipTargetList"
    // InternalKerML.g:620:1: ruleRelationshipTargetList[EObject in_current] returns [EObject current=in_current] : (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* ) ;
    public final EObject ruleRelationshipTargetList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_RelationshipTarget_0 = null;

        EObject this_RelationshipTarget_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:626:2: ( (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* ) )
            // InternalKerML.g:627:2: (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* )
            {
            // InternalKerML.g:627:2: (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* )
            // InternalKerML.g:628:3: this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipTargetListRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_RelationshipTarget_0=ruleRelationshipTarget(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipTarget_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:639:3: (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==22) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalKerML.g:640:4: otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current]
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRelationshipTargetListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRelationshipTargetListRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_13);
            	    this_RelationshipTarget_2=ruleRelationshipTarget(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_RelationshipTarget_2;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipTargetList"


    // $ANTLR start "ruleRelationshipTarget"
    // InternalKerML.g:661:1: ruleRelationshipTarget[EObject in_current] returns [EObject current=in_current] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleRelationshipTarget(EObject in_current) throws RecognitionException {
        EObject current = in_current;


        	enterRule();

        try {
            // InternalKerML.g:667:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:668:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:668:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:669:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:669:3: ( ruleQualifiedName )
            // InternalKerML.g:670:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRelationshipTargetRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRelationshipTargetAccess().getTargetElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipTarget"


    // $ANTLR start "ruleRelationshipBody"
    // InternalKerML.g:688:1: ruleRelationshipBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) ) ;
    public final EObject ruleRelationshipBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_RelationshipOwnedElement_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:694:2: ( (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) ) )
            // InternalKerML.g:695:2: (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) )
            {
            // InternalKerML.g:695:2: (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==16) ) {
                alt19=1;
            }
            else if ( (LA19_0==17) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalKerML.g:696:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getRelationshipBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:701:3: (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' )
                    {
                    // InternalKerML.g:701:3: (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' )
                    // InternalKerML.g:702:4: otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getRelationshipBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:706:4: (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==RULE_REGULAR_COMMENT||(LA18_0>=RULE_ID && LA18_0<=RULE_UNRESTRICTED_NAME)||LA18_0==13||LA18_0==15||LA18_0==19||LA18_0==23||(LA18_0>=25 && LA18_0<=28)||LA18_0==32||(LA18_0>=37 && LA18_0<=39)||(LA18_0>=41 && LA18_0<=43)||(LA18_0>=45 && LA18_0<=47)||(LA18_0>=52 && LA18_0<=64)||LA18_0==66||(LA18_0>=70 && LA18_0<=83)||(LA18_0>=87 && LA18_0<=88)||(LA18_0>=90 && LA18_0<=94)||(LA18_0>=97 && LA18_0<=98)||(LA18_0>=101 && LA18_0<=103)||(LA18_0>=105 && LA18_0<=108)||(LA18_0>=111 && LA18_0<=112)||(LA18_0>=114 && LA18_0<=117)||(LA18_0>=151 && LA18_0<=153)) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // InternalKerML.g:707:5: this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getRelationshipBodyRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getRelationshipBodyAccess().getRelationshipOwnedElementParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_14);
                    	    this_RelationshipOwnedElement_2=ruleRelationshipOwnedElement(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_RelationshipOwnedElement_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRelationshipBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipBody"


    // $ANTLR start "ruleRelationshipOwnedElement"
    // InternalKerML.g:729:1: ruleRelationshipOwnedElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) ;
    public final EObject ruleRelationshipOwnedElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:735:2: ( ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) )
            // InternalKerML.g:736:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            {
            // InternalKerML.g:736:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( ((LA20_0>=RULE_ID && LA20_0<=RULE_UNRESTRICTED_NAME)||LA20_0==13||LA20_0==15||LA20_0==19||LA20_0==28||LA20_0==32||(LA20_0>=37 && LA20_0<=39)||(LA20_0>=41 && LA20_0<=43)||(LA20_0>=45 && LA20_0<=47)||(LA20_0>=52 && LA20_0<=64)||LA20_0==66||(LA20_0>=70 && LA20_0<=83)||(LA20_0>=87 && LA20_0<=88)||(LA20_0>=90 && LA20_0<=94)||(LA20_0>=97 && LA20_0<=98)||(LA20_0>=101 && LA20_0<=103)||(LA20_0>=105 && LA20_0<=108)||(LA20_0>=111 && LA20_0<=112)||(LA20_0>=114 && LA20_0<=115)||(LA20_0>=151 && LA20_0<=153)) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_REGULAR_COMMENT||LA20_0==23||(LA20_0>=25 && LA20_0<=27)||(LA20_0>=116 && LA20_0<=117)) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalKerML.g:737:3: ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) )
                    {
                    // InternalKerML.g:737:3: ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) )
                    // InternalKerML.g:738:4: (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement )
                    {
                    // InternalKerML.g:738:4: (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement )
                    // InternalKerML.g:739:5: lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElementOwnedRelatedElementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_0=ruleOwnedRelatedElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedRelatedElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:757:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    {
                    // InternalKerML.g:757:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    // InternalKerML.g:758:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    {
                    // InternalKerML.g:758:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    // InternalKerML.g:759:5: lv_ownedRelationship_1_0= ruleOwnedAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipOwnedAnnotationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.OwnedAnnotation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipOwnedElement"


    // $ANTLR start "entryRuleOwnedRelatedElement"
    // InternalKerML.g:780:1: entryRuleOwnedRelatedElement returns [EObject current=null] : iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF ;
    public final EObject entryRuleOwnedRelatedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRelatedElement = null;


        try {
            // InternalKerML.g:780:60: (iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF )
            // InternalKerML.g:781:2: iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRelatedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRelatedElement=ruleOwnedRelatedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRelatedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRelatedElement"


    // $ANTLR start "ruleOwnedRelatedElement"
    // InternalKerML.g:787:1: ruleOwnedRelatedElement returns [EObject current=null] : (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement ) ;
    public final EObject ruleOwnedRelatedElement() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureElement_0 = null;

        EObject this_FeatureElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:793:2: ( (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement ) )
            // InternalKerML.g:794:2: (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement )
            {
            // InternalKerML.g:794:2: (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement )
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalKerML.g:795:3: this_NonFeatureElement_0= ruleNonFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getNonFeatureElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureElement_0=ruleNonFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureElement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:804:3: this_FeatureElement_1= ruleFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getFeatureElementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureElement_1=ruleFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureElement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRelatedElement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKerML.g:816:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKerML.g:816:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKerML.g:817:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKerML.g:823:1: ruleAnnotation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:829:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:830:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:830:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:831:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:831:3: ( ruleQualifiedName )
            // InternalKerML.g:832:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAnnotationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleOwnedAnnotation"
    // InternalKerML.g:849:1: entryRuleOwnedAnnotation returns [EObject current=null] : iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF ;
    public final EObject entryRuleOwnedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedAnnotation = null;


        try {
            // InternalKerML.g:849:56: (iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF )
            // InternalKerML.g:850:2: iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedAnnotation=ruleOwnedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedAnnotation"


    // $ANTLR start "ruleOwnedAnnotation"
    // InternalKerML.g:856:1: ruleOwnedAnnotation returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) ) ;
    public final EObject ruleOwnedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:862:2: ( ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) ) )
            // InternalKerML.g:863:2: ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) )
            {
            // InternalKerML.g:863:2: ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) )
            // InternalKerML.g:864:3: (lv_ownedRelatedElement_0_0= ruleAnnotatingElement )
            {
            // InternalKerML.g:864:3: (lv_ownedRelatedElement_0_0= ruleAnnotatingElement )
            // InternalKerML.g:865:4: lv_ownedRelatedElement_0_0= ruleAnnotatingElement
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedAnnotationAccess().getOwnedRelatedElementAnnotatingElementParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleAnnotatingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedAnnotationRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.AnnotatingElement");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedAnnotation"


    // $ANTLR start "entryRuleAnnotatingElement"
    // InternalKerML.g:885:1: entryRuleAnnotatingElement returns [EObject current=null] : iv_ruleAnnotatingElement= ruleAnnotatingElement EOF ;
    public final EObject entryRuleAnnotatingElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatingElement = null;


        try {
            // InternalKerML.g:885:58: (iv_ruleAnnotatingElement= ruleAnnotatingElement EOF )
            // InternalKerML.g:886:2: iv_ruleAnnotatingElement= ruleAnnotatingElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatingElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatingElement=ruleAnnotatingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatingElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatingElement"


    // $ANTLR start "ruleAnnotatingElement"
    // InternalKerML.g:892:1: ruleAnnotatingElement returns [EObject current=null] : (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature ) ;
    public final EObject ruleAnnotatingElement() throws RecognitionException {
        EObject current = null;

        EObject this_Comment_0 = null;

        EObject this_Documentation_1 = null;

        EObject this_TextualRepresentation_2 = null;

        EObject this_MetadataFeature_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:898:2: ( (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature ) )
            // InternalKerML.g:899:2: (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature )
            {
            // InternalKerML.g:899:2: (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature )
            int alt22=4;
            switch ( input.LA(1) ) {
            case RULE_REGULAR_COMMENT:
            case 23:
                {
                alt22=1;
                }
                break;
            case 25:
                {
                alt22=2;
                }
                break;
            case 26:
            case 27:
                {
                alt22=3;
                }
                break;
            case 116:
            case 117:
                {
                alt22=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalKerML.g:900:3: this_Comment_0= ruleComment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getCommentParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Comment_0=ruleComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Comment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:909:3: this_Documentation_1= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getDocumentationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Documentation_1=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Documentation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:918:3: this_TextualRepresentation_2= ruleTextualRepresentation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getTextualRepresentationParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TextualRepresentation_2=ruleTextualRepresentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextualRepresentation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:927:3: this_MetadataFeature_3= ruleMetadataFeature
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getMetadataFeatureParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MetadataFeature_3=ruleMetadataFeature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MetadataFeature_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatingElement"


    // $ANTLR start "entryRuleComment"
    // InternalKerML.g:939:1: entryRuleComment returns [EObject current=null] : iv_ruleComment= ruleComment EOF ;
    public final EObject entryRuleComment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComment = null;


        try {
            // InternalKerML.g:939:48: (iv_ruleComment= ruleComment EOF )
            // InternalKerML.g:940:2: iv_ruleComment= ruleComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComment=ruleComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // InternalKerML.g:946:1: ruleComment returns [EObject current=null] : ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleComment() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_body_6_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:952:2: ( ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:953:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:953:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:954:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) )
            {
            // InternalKerML.g:954:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==23) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalKerML.g:955:4: otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )?
                    {
                    otherlv_0=(Token)match(input,23,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCommentAccess().getCommentKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:959:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( ((LA23_0>=RULE_ID && LA23_0<=RULE_UNRESTRICTED_NAME)||LA23_0==13) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalKerML.g:960:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getCommentRule());
                              					}
                              					newCompositeNode(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_16);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:972:4: (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==24) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalKerML.g:973:5: otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )*
                            {
                            otherlv_2=(Token)match(input,24,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getCommentAccess().getAboutKeyword_0_2_0());
                              				
                            }
                            // InternalKerML.g:977:5: ( (lv_ownedRelationship_3_0= ruleAnnotation ) )
                            // InternalKerML.g:978:6: (lv_ownedRelationship_3_0= ruleAnnotation )
                            {
                            // InternalKerML.g:978:6: (lv_ownedRelationship_3_0= ruleAnnotation )
                            // InternalKerML.g:979:7: lv_ownedRelationship_3_0= ruleAnnotation
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_17);
                            lv_ownedRelationship_3_0=ruleAnnotation();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommentRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.xtext.KerML.Annotation");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKerML.g:996:5: (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )*
                            loop24:
                            do {
                                int alt24=2;
                                int LA24_0 = input.LA(1);

                                if ( (LA24_0==22) ) {
                                    alt24=1;
                                }


                                switch (alt24) {
                            	case 1 :
                            	    // InternalKerML.g:997:6: otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) )
                            	    {
                            	    otherlv_4=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getCommentAccess().getCommaKeyword_0_2_2_0());
                            	      					
                            	    }
                            	    // InternalKerML.g:1001:6: ( (lv_ownedRelationship_5_0= ruleAnnotation ) )
                            	    // InternalKerML.g:1002:7: (lv_ownedRelationship_5_0= ruleAnnotation )
                            	    {
                            	    // InternalKerML.g:1002:7: (lv_ownedRelationship_5_0= ruleAnnotation )
                            	    // InternalKerML.g:1003:8: lv_ownedRelationship_5_0= ruleAnnotation
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_2_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_17);
                            	    lv_ownedRelationship_5_0=ruleAnnotation();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getCommentRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"ownedRelationship",
                            	      									lv_ownedRelationship_5_0,
                            	      									"org.omg.kerml.xtext.KerML.Annotation");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop24;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:1023:3: ( (lv_body_6_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1024:4: (lv_body_6_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1024:4: (lv_body_6_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1025:5: lv_body_6_0= RULE_REGULAR_COMMENT
            {
            lv_body_6_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_6_0, grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCommentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_6_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleDocumentation"
    // InternalKerML.g:1045:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalKerML.g:1045:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalKerML.g:1046:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalKerML.g:1052:1: ruleDocumentation returns [EObject current=null] : (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_body_2_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1058:2: ( (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:1059:2: (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:1059:2: (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:1060:3: otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            {
            otherlv_0=(Token)match(input,25,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDocumentationAccess().getDocKeyword_0());
              		
            }
            // InternalKerML.g:1064:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_ID && LA27_0<=RULE_UNRESTRICTED_NAME)||LA27_0==13) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalKerML.g:1065:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDocumentationRule());
                      				}
                      				newCompositeNode(grammarAccess.getDocumentationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_19);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1077:3: ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1078:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1078:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1079:5: lv_body_2_0= RULE_REGULAR_COMMENT
            {
            lv_body_2_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_2_0, grammarAccess.getDocumentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDocumentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleTextualRepresentation"
    // InternalKerML.g:1099:1: entryRuleTextualRepresentation returns [EObject current=null] : iv_ruleTextualRepresentation= ruleTextualRepresentation EOF ;
    public final EObject entryRuleTextualRepresentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextualRepresentation = null;


        try {
            // InternalKerML.g:1099:62: (iv_ruleTextualRepresentation= ruleTextualRepresentation EOF )
            // InternalKerML.g:1100:2: iv_ruleTextualRepresentation= ruleTextualRepresentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextualRepresentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTextualRepresentation=ruleTextualRepresentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextualRepresentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextualRepresentation"


    // $ANTLR start "ruleTextualRepresentation"
    // InternalKerML.g:1106:1: ruleTextualRepresentation returns [EObject current=null] : ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleTextualRepresentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_language_3_0=null;
        Token lv_body_4_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1112:2: ( ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:1113:2: ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:1113:2: ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:1114:3: (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) )
            {
            // InternalKerML.g:1114:3: (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==26) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalKerML.g:1115:4: otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,26,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:1119:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( ((LA28_0>=RULE_ID && LA28_0<=RULE_UNRESTRICTED_NAME)||LA28_0==13) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalKerML.g:1120:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
                              					}
                              					newCompositeNode(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_21);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,27,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTextualRepresentationAccess().getLanguageKeyword_1());
              		
            }
            // InternalKerML.g:1137:3: ( (lv_language_3_0= RULE_STRING_VALUE ) )
            // InternalKerML.g:1138:4: (lv_language_3_0= RULE_STRING_VALUE )
            {
            // InternalKerML.g:1138:4: (lv_language_3_0= RULE_STRING_VALUE )
            // InternalKerML.g:1139:5: lv_language_3_0= RULE_STRING_VALUE
            {
            lv_language_3_0=(Token)match(input,RULE_STRING_VALUE,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_language_3_0, grammarAccess.getTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"language",
              						lv_language_3_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.STRING_VALUE");
              				
            }

            }


            }

            // InternalKerML.g:1155:3: ( (lv_body_4_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1156:4: (lv_body_4_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1156:4: (lv_body_4_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1157:5: lv_body_4_0= RULE_REGULAR_COMMENT
            {
            lv_body_4_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_4_0, grammarAccess.getTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextualRepresentation"


    // $ANTLR start "entryRuleNamespace"
    // InternalKerML.g:1177:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;


        try {
            // InternalKerML.g:1177:50: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKerML.g:1178:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKerML.g:1184:1: ruleNamespace returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_NamespaceDeclaration_1= ruleNamespaceDeclaration[$current] this_NamespaceBody_2= ruleNamespaceBody[$current] ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject this_NamespaceDeclaration_1 = null;

        EObject this_NamespaceBody_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:1190:2: ( ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_NamespaceDeclaration_1= ruleNamespaceDeclaration[$current] this_NamespaceBody_2= ruleNamespaceBody[$current] ) )
            // InternalKerML.g:1191:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_NamespaceDeclaration_1= ruleNamespaceDeclaration[$current] this_NamespaceBody_2= ruleNamespaceBody[$current] )
            {
            // InternalKerML.g:1191:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_NamespaceDeclaration_1= ruleNamespaceDeclaration[$current] this_NamespaceBody_2= ruleNamespaceBody[$current] )
            // InternalKerML.g:1192:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_NamespaceDeclaration_1= ruleNamespaceDeclaration[$current] this_NamespaceBody_2= ruleNamespaceBody[$current]
            {
            // InternalKerML.g:1192:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==115) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalKerML.g:1193:4: (lv_ownedRelationship_0_0= rulePrefixMetadataMember )
            	    {
            	    // InternalKerML.g:1193:4: (lv_ownedRelationship_0_0= rulePrefixMetadataMember )
            	    // InternalKerML.g:1194:5: lv_ownedRelationship_0_0= rulePrefixMetadataMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getNamespaceAccess().getOwnedRelationshipPrefixMetadataMemberParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_ownedRelationship_0_0=rulePrefixMetadataMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceDeclarationParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_24);
            this_NamespaceDeclaration_1=ruleNamespaceDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NamespaceDeclaration_1;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceBodyParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_NamespaceBody_2=ruleNamespaceBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NamespaceBody_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "ruleNamespaceDeclaration"
    // InternalKerML.g:1238:1: ruleNamespaceDeclaration[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? ) ;
    public final EObject ruleNamespaceDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1244:2: ( (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? ) )
            // InternalKerML.g:1245:2: (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? )
            {
            // InternalKerML.g:1245:2: (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? )
            // InternalKerML.g:1246:3: otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )?
            {
            otherlv_0=(Token)match(input,28,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
              		
            }
            // InternalKerML.g:1250:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=RULE_ID && LA31_0<=RULE_UNRESTRICTED_NAME)||LA31_0==13) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalKerML.g:1251:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceDeclaration"


    // $ANTLR start "ruleNamespaceBody"
    // InternalKerML.g:1268:1: ruleNamespaceBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) ) ;
    public final EObject ruleNamespaceBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1274:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) ) )
            // InternalKerML.g:1275:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) )
            {
            // InternalKerML.g:1275:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==16) ) {
                alt33=1;
            }
            else if ( (LA33_0==17) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalKerML.g:1276:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getNamespaceBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1281:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' )
                    {
                    // InternalKerML.g:1281:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' )
                    // InternalKerML.g:1282:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:1286:4: ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )*
                    loop32:
                    do {
                        int alt32=4;
                        switch ( input.LA(1) ) {
                        case 148:
                            {
                            switch ( input.LA(2) ) {
                            case 31:
                                {
                                alt32=3;
                                }
                                break;
                            case 29:
                                {
                                alt32=2;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 151:
                            case 152:
                            case 153:
                                {
                                alt32=1;
                                }
                                break;

                            }

                            }
                            break;
                        case 149:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt32=2;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 151:
                            case 152:
                            case 153:
                                {
                                alt32=1;
                                }
                                break;
                            case 31:
                                {
                                alt32=3;
                                }
                                break;

                            }

                            }
                            break;
                        case 150:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt32=2;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 151:
                            case 152:
                            case 153:
                                {
                                alt32=1;
                                }
                                break;
                            case 31:
                                {
                                alt32=3;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 13:
                        case 15:
                        case 19:
                        case 23:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 32:
                        case 37:
                        case 38:
                        case 39:
                        case 41:
                        case 42:
                        case 43:
                        case 45:
                        case 46:
                        case 47:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 66:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 87:
                        case 88:
                        case 90:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 97:
                        case 98:
                        case 101:
                        case 102:
                        case 103:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 111:
                        case 112:
                        case 114:
                        case 115:
                        case 116:
                        case 117:
                        case 151:
                        case 152:
                        case 153:
                            {
                            alt32=1;
                            }
                            break;
                        case 29:
                            {
                            alt32=2;
                            }
                            break;
                        case 31:
                            {
                            alt32=3;
                            }
                            break;

                        }

                        switch (alt32) {
                    	case 1 :
                    	    // InternalKerML.g:1287:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    {
                    	    // InternalKerML.g:1287:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    // InternalKerML.g:1288:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    {
                    	    // InternalKerML.g:1288:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    // InternalKerML.g:1289:7: lv_ownedRelationship_2_0= ruleNamespaceMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_ownedRelationship_2_0=ruleNamespaceMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NamespaceMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:1307:5: ( (lv_ownedRelationship_3_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:1307:5: ( (lv_ownedRelationship_3_0= ruleAliasMember ) )
                    	    // InternalKerML.g:1308:6: (lv_ownedRelationship_3_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:1308:6: (lv_ownedRelationship_3_0= ruleAliasMember )
                    	    // InternalKerML.g:1309:7: lv_ownedRelationship_3_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_ownedRelationship_3_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:1327:5: ( (lv_ownedRelationship_4_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:1327:5: ( (lv_ownedRelationship_4_0= ruleImport ) )
                    	    // InternalKerML.g:1328:6: (lv_ownedRelationship_4_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:1328:6: (lv_ownedRelationship_4_0= ruleImport )
                    	    // InternalKerML.g:1329:7: lv_ownedRelationship_4_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_ownedRelationship_4_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceBody"


    // $ANTLR start "ruleNamespaceBodyElement"
    // InternalKerML.g:1357:1: ruleNamespaceBodyElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) ) ;
    public final EObject ruleNamespaceBodyElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1363:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) ) )
            // InternalKerML.g:1364:2: ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) )
            {
            // InternalKerML.g:1364:2: ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case 148:
                {
                switch ( input.LA(2) ) {
                case 29:
                    {
                    alt34=2;
                    }
                    break;
                case RULE_REGULAR_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 32:
                case 37:
                case 38:
                case 39:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 66:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 88:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 97:
                case 98:
                case 101:
                case 102:
                case 103:
                case 105:
                case 106:
                case 107:
                case 108:
                case 111:
                case 112:
                case 114:
                case 115:
                case 116:
                case 117:
                case 151:
                case 152:
                case 153:
                    {
                    alt34=1;
                    }
                    break;
                case 31:
                    {
                    alt34=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }

                }
                break;
            case 149:
                {
                switch ( input.LA(2) ) {
                case 31:
                    {
                    alt34=3;
                    }
                    break;
                case 29:
                    {
                    alt34=2;
                    }
                    break;
                case RULE_REGULAR_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 32:
                case 37:
                case 38:
                case 39:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 66:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 88:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 97:
                case 98:
                case 101:
                case 102:
                case 103:
                case 105:
                case 106:
                case 107:
                case 108:
                case 111:
                case 112:
                case 114:
                case 115:
                case 116:
                case 117:
                case 151:
                case 152:
                case 153:
                    {
                    alt34=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 2, input);

                    throw nvae;
                }

                }
                break;
            case 150:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 32:
                case 37:
                case 38:
                case 39:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 66:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 88:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 97:
                case 98:
                case 101:
                case 102:
                case 103:
                case 105:
                case 106:
                case 107:
                case 108:
                case 111:
                case 112:
                case 114:
                case 115:
                case 116:
                case 117:
                case 151:
                case 152:
                case 153:
                    {
                    alt34=1;
                    }
                    break;
                case 31:
                    {
                    alt34=3;
                    }
                    break;
                case 29:
                    {
                    alt34=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_REGULAR_COMMENT:
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
            case 15:
            case 19:
            case 23:
            case 25:
            case 26:
            case 27:
            case 28:
            case 32:
            case 37:
            case 38:
            case 39:
            case 41:
            case 42:
            case 43:
            case 45:
            case 46:
            case 47:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 66:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 87:
            case 88:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 97:
            case 98:
            case 101:
            case 102:
            case 103:
            case 105:
            case 106:
            case 107:
            case 108:
            case 111:
            case 112:
            case 114:
            case 115:
            case 116:
            case 117:
            case 151:
            case 152:
            case 153:
                {
                alt34=1;
                }
                break;
            case 29:
                {
                alt34=2;
                }
                break;
            case 31:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalKerML.g:1365:3: ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) )
                    {
                    // InternalKerML.g:1365:3: ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) )
                    // InternalKerML.g:1366:4: (lv_ownedRelationship_0_0= ruleNamespaceMember )
                    {
                    // InternalKerML.g:1366:4: (lv_ownedRelationship_0_0= ruleNamespaceMember )
                    // InternalKerML.g:1367:5: lv_ownedRelationship_0_0= ruleNamespaceMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleNamespaceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.NamespaceMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:1385:3: ( (lv_ownedRelationship_1_0= ruleAliasMember ) )
                    {
                    // InternalKerML.g:1385:3: ( (lv_ownedRelationship_1_0= ruleAliasMember ) )
                    // InternalKerML.g:1386:4: (lv_ownedRelationship_1_0= ruleAliasMember )
                    {
                    // InternalKerML.g:1386:4: (lv_ownedRelationship_1_0= ruleAliasMember )
                    // InternalKerML.g:1387:5: lv_ownedRelationship_1_0= ruleAliasMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleAliasMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.AliasMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:1405:3: ( (lv_ownedRelationship_2_0= ruleImport ) )
                    {
                    // InternalKerML.g:1405:3: ( (lv_ownedRelationship_2_0= ruleImport ) )
                    // InternalKerML.g:1406:4: (lv_ownedRelationship_2_0= ruleImport )
                    {
                    // InternalKerML.g:1406:4: (lv_ownedRelationship_2_0= ruleImport )
                    // InternalKerML.g:1407:5: lv_ownedRelationship_2_0= ruleImport
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipImportParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.Import");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceBodyElement"


    // $ANTLR start "ruleMemberPrefix"
    // InternalKerML.g:1429:1: ruleMemberPrefix[EObject in_current] returns [EObject current=in_current] : ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? ;
    public final EObject ruleMemberPrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Enumerator lv_visibility_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1435:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? )
            // InternalKerML.g:1436:2: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            {
            // InternalKerML.g:1436:2: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=148 && LA35_0<=150)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalKerML.g:1437:3: (lv_visibility_0_0= ruleVisibilityIndicator )
                    {
                    // InternalKerML.g:1437:3: (lv_visibility_0_0= ruleVisibilityIndicator )
                    // InternalKerML.g:1438:4: lv_visibility_0_0= ruleVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    lv_visibility_0_0=ruleVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElementForParent(grammarAccess.getMemberPrefixRule());
                      				}
                      				set(
                      					current,
                      					"visibility",
                      					lv_visibility_0_0,
                      					"org.omg.kerml.xtext.KerML.VisibilityIndicator");
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMemberPrefix"


    // $ANTLR start "entryRuleNamespaceMember"
    // InternalKerML.g:1458:1: entryRuleNamespaceMember returns [EObject current=null] : iv_ruleNamespaceMember= ruleNamespaceMember EOF ;
    public final EObject entryRuleNamespaceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceMember = null;


        try {
            // InternalKerML.g:1458:56: (iv_ruleNamespaceMember= ruleNamespaceMember EOF )
            // InternalKerML.g:1459:2: iv_ruleNamespaceMember= ruleNamespaceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceMember=ruleNamespaceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceMember"


    // $ANTLR start "ruleNamespaceMember"
    // InternalKerML.g:1465:1: ruleNamespaceMember returns [EObject current=null] : (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember ) ;
    public final EObject ruleNamespaceMember() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureMember_0 = null;

        EObject this_NamespaceFeatureMember_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1471:2: ( (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember ) )
            // InternalKerML.g:1472:2: (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember )
            {
            // InternalKerML.g:1472:2: (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember )
            int alt36=2;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalKerML.g:1473:3: this_NonFeatureMember_0= ruleNonFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamespaceMemberAccess().getNonFeatureMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureMember_0=ruleNonFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1482:3: this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamespaceMemberAccess().getNamespaceFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NamespaceFeatureMember_1=ruleNamespaceFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NamespaceFeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceMember"


    // $ANTLR start "entryRuleNonFeatureMember"
    // InternalKerML.g:1494:1: entryRuleNonFeatureMember returns [EObject current=null] : iv_ruleNonFeatureMember= ruleNonFeatureMember EOF ;
    public final EObject entryRuleNonFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureMember = null;


        try {
            // InternalKerML.g:1494:57: (iv_ruleNonFeatureMember= ruleNonFeatureMember EOF )
            // InternalKerML.g:1495:2: iv_ruleNonFeatureMember= ruleNonFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureMember=ruleNonFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureMember"


    // $ANTLR start "ruleNonFeatureMember"
    // InternalKerML.g:1501:1: ruleNonFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) ) ;
    public final EObject ruleNonFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1507:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) ) )
            // InternalKerML.g:1508:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) )
            {
            // InternalKerML.g:1508:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) )
            // InternalKerML.g:1509:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNonFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNonFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_26);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:1520:3: ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) )
            // InternalKerML.g:1521:4: (lv_ownedRelatedElement_1_0= ruleMemberElement )
            {
            // InternalKerML.g:1521:4: (lv_ownedRelatedElement_1_0= ruleMemberElement )
            // InternalKerML.g:1522:5: lv_ownedRelatedElement_1_0= ruleMemberElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNonFeatureMemberAccess().getOwnedRelatedElementMemberElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleMemberElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNonFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.MemberElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureMember"


    // $ANTLR start "entryRuleNamespaceFeatureMember"
    // InternalKerML.g:1543:1: entryRuleNamespaceFeatureMember returns [EObject current=null] : iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF ;
    public final EObject entryRuleNamespaceFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceFeatureMember = null;


        try {
            // InternalKerML.g:1543:63: (iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF )
            // InternalKerML.g:1544:2: iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceFeatureMember=ruleNamespaceFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceFeatureMember"


    // $ANTLR start "ruleNamespaceFeatureMember"
    // InternalKerML.g:1550:1: ruleNamespaceFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleNamespaceFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1556:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:1557:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:1557:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            // InternalKerML.g:1558:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_27);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:1569:3: ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            // InternalKerML.g:1570:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            {
            // InternalKerML.g:1570:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            // InternalKerML.g:1571:5: lv_ownedRelatedElement_1_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceFeatureMember"


    // $ANTLR start "entryRuleAliasMember"
    // InternalKerML.g:1592:1: entryRuleAliasMember returns [EObject current=null] : iv_ruleAliasMember= ruleAliasMember EOF ;
    public final EObject entryRuleAliasMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasMember = null;


        try {
            // InternalKerML.g:1592:52: (iv_ruleAliasMember= ruleAliasMember EOF )
            // InternalKerML.g:1593:2: iv_ruleAliasMember= ruleAliasMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasMember=ruleAliasMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasMember"


    // $ANTLR start "ruleAliasMember"
    // InternalKerML.g:1599:1: ruleAliasMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleAliasMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_MemberPrefix_0 = null;

        AntlrDatatypeRuleToken lv_memberShortName_3_0 = null;

        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:1605:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:1606:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:1606:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:1607:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAliasMemberRule());
              			}
              			newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_28);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAliasMemberAccess().getAliasKeyword_1());
              		
            }
            // InternalKerML.g:1622:3: (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==13) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalKerML.g:1623:4: otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>'
                    {
                    otherlv_2=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAliasMemberAccess().getLessThanSignKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:1627:4: ( (lv_memberShortName_3_0= ruleName ) )
                    // InternalKerML.g:1628:5: (lv_memberShortName_3_0= ruleName )
                    {
                    // InternalKerML.g:1628:5: (lv_memberShortName_3_0= ruleName )
                    // InternalKerML.g:1629:6: lv_memberShortName_3_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberShortNameNameParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_memberShortName_3_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAliasMemberRule());
                      						}
                      						set(
                      							current,
                      							"memberShortName",
                      							lv_memberShortName_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,14,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAliasMemberAccess().getGreaterThanSignKeyword_2_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1651:3: ( (lv_memberName_5_0= ruleName ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=RULE_ID && LA38_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalKerML.g:1652:4: (lv_memberName_5_0= ruleName )
                    {
                    // InternalKerML.g:1652:4: (lv_memberName_5_0= ruleName )
                    // InternalKerML.g:1653:5: lv_memberName_5_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberNameNameParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_30);
                    lv_memberName_5_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAliasMemberRule());
                      					}
                      					set(
                      						current,
                      						"memberName",
                      						lv_memberName_5_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,30,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAliasMemberAccess().getForKeyword_4());
              		
            }
            // InternalKerML.g:1674:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:1675:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:1675:4: ( ruleQualifiedName )
            // InternalKerML.g:1676:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAliasMemberRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberElementElementCrossReference_5_0());
              				
            }
            pushFollow(FOLLOW_11);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAliasMemberRule());
              			}
              			newCompositeNode(grammarAccess.getAliasMemberAccess().getRelationshipBodyParserRuleCall_6());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasMember"


    // $ANTLR start "entryRuleImport"
    // InternalKerML.g:1705:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKerML.g:1705:47: (iv_ruleImport= ruleImport EOF )
            // InternalKerML.g:1706:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKerML.g:1712:1: ruleImport returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isImportAll_2_0=null;
        Enumerator lv_visibility_0_0 = null;

        EObject this_ImportedNamespace_3 = null;

        EObject this_ImportedFilterPackage_4 = null;

        EObject this_RelationshipBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:1718:2: ( ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:1719:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:1719:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] )
            // InternalKerML.g:1720:3: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:1720:3: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=148 && LA39_0<=150)) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalKerML.g:1721:4: (lv_visibility_0_0= ruleVisibilityIndicator )
                    {
                    // InternalKerML.g:1721:4: (lv_visibility_0_0= ruleVisibilityIndicator )
                    // InternalKerML.g:1722:5: lv_visibility_0_0= ruleVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImportAccess().getVisibilityVisibilityIndicatorEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_31);
                    lv_visibility_0_0=ruleVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getImportRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_0_0,
                      						"org.omg.kerml.xtext.KerML.VisibilityIndicator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,31,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportAccess().getImportKeyword_1());
              		
            }
            // InternalKerML.g:1743:3: ( (lv_isImportAll_2_0= 'all' ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==32) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalKerML.g:1744:4: (lv_isImportAll_2_0= 'all' )
                    {
                    // InternalKerML.g:1744:4: (lv_isImportAll_2_0= 'all' )
                    // InternalKerML.g:1745:5: lv_isImportAll_2_0= 'all'
                    {
                    lv_isImportAll_2_0=(Token)match(input,32,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isImportAll_2_0, grammarAccess.getImportAccess().getIsImportAllAllKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getImportRule());
                      					}
                      					setWithLastConsumed(current, "isImportAll", lv_isImportAll_2_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:1757:3: (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] )
            int alt41=2;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // InternalKerML.g:1758:4: this_ImportedNamespace_3= ruleImportedNamespace[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getImportRule());
                      				}
                      				newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_11);
                    this_ImportedNamespace_3=ruleImportedNamespace(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ImportedNamespace_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1770:4: this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getImportRule());
                      				}
                      				newCompositeNode(grammarAccess.getImportAccess().getImportedFilterPackageParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_11);
                    this_ImportedFilterPackage_4=ruleImportedFilterPackage(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ImportedFilterPackage_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getImportRule());
              			}
              			newCompositeNode(grammarAccess.getImportAccess().getRelationshipBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_5=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "ruleImportedNamespace"
    // InternalKerML.g:1798:1: ruleImportedNamespace[EObject in_current] returns [EObject current=in_current] : ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? ) ;
    public final EObject ruleImportedNamespace(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_isRecursive_4_0=null;
        AntlrDatatypeRuleToken lv_importedMemberName_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1804:2: ( ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? ) )
            // InternalKerML.g:1805:2: ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? )
            {
            // InternalKerML.g:1805:2: ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? )
            // InternalKerML.g:1806:3: ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )?
            {
            // InternalKerML.g:1806:3: ( ( ruleQualification ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_ID) ) {
                int LA42_1 = input.LA(2);

                if ( (LA42_1==34) ) {
                    int LA42_4 = input.LA(3);

                    if ( ((LA42_4>=RULE_ID && LA42_4<=RULE_UNRESTRICTED_NAME)||LA42_4==33) ) {
                        alt42=1;
                    }
                }
            }
            else if ( (LA42_0==RULE_UNRESTRICTED_NAME) ) {
                int LA42_2 = input.LA(2);

                if ( (LA42_2==34) ) {
                    int LA42_4 = input.LA(3);

                    if ( ((LA42_4>=RULE_ID && LA42_4<=RULE_UNRESTRICTED_NAME)||LA42_4==33) ) {
                        alt42=1;
                    }
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalKerML.g:1807:4: ( ruleQualification )
                    {
                    // InternalKerML.g:1807:4: ( ruleQualification )
                    // InternalKerML.g:1808:5: ruleQualification
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getImportedNamespaceRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceNamespaceCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_33);
                    ruleQualification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:1822:3: ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( ((LA43_0>=RULE_ID && LA43_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt43=1;
            }
            else if ( (LA43_0==33) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalKerML.g:1823:4: ( (lv_importedMemberName_1_0= ruleName ) )
                    {
                    // InternalKerML.g:1823:4: ( (lv_importedMemberName_1_0= ruleName ) )
                    // InternalKerML.g:1824:5: (lv_importedMemberName_1_0= ruleName )
                    {
                    // InternalKerML.g:1824:5: (lv_importedMemberName_1_0= ruleName )
                    // InternalKerML.g:1825:6: lv_importedMemberName_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportedNamespaceAccess().getImportedMemberNameNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_importedMemberName_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportedNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"importedMemberName",
                      							lv_importedMemberName_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:1843:4: otherlv_2= '*'
                    {
                    otherlv_2=(Token)match(input,33,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportedNamespaceAccess().getAsteriskKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1848:3: (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==34) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalKerML.g:1849:4: otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) )
                    {
                    otherlv_3=(Token)match(input,34,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getImportedNamespaceAccess().getColonColonKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:1853:4: ( (lv_isRecursive_4_0= '**' ) )
                    // InternalKerML.g:1854:5: (lv_isRecursive_4_0= '**' )
                    {
                    // InternalKerML.g:1854:5: (lv_isRecursive_4_0= '**' )
                    // InternalKerML.g:1855:6: lv_isRecursive_4_0= '**'
                    {
                    lv_isRecursive_4_0=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isRecursive_4_0, grammarAccess.getImportedNamespaceAccess().getIsRecursiveAsteriskAsteriskKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getImportedNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "isRecursive", lv_isRecursive_4_0 != null, "**");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportedNamespace"


    // $ANTLR start "ruleImportedFilterPackage"
    // InternalKerML.g:1873:1: ruleImportedFilterPackage[EObject in_current] returns [EObject current=in_current] : ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) ) ;
    public final EObject ruleImportedFilterPackage(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1879:2: ( ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) ) )
            // InternalKerML.g:1880:2: ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) )
            {
            // InternalKerML.g:1880:2: ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) )
            // InternalKerML.g:1881:3: (lv_ownedRelatedElement_0_0= ruleFilterPackage )
            {
            // InternalKerML.g:1881:3: (lv_ownedRelatedElement_0_0= ruleFilterPackage )
            // InternalKerML.g:1882:4: lv_ownedRelatedElement_0_0= ruleFilterPackage
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImportedFilterPackageAccess().getOwnedRelatedElementFilterPackageParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleFilterPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImportedFilterPackageRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.FilterPackage");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportedFilterPackage"


    // $ANTLR start "entryRuleFilterPackage"
    // InternalKerML.g:1902:1: entryRuleFilterPackage returns [EObject current=null] : iv_ruleFilterPackage= ruleFilterPackage EOF ;
    public final EObject entryRuleFilterPackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackage = null;


        try {
            // InternalKerML.g:1902:54: (iv_ruleFilterPackage= ruleFilterPackage EOF )
            // InternalKerML.g:1903:2: iv_ruleFilterPackage= ruleFilterPackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackage=ruleFilterPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackage"


    // $ANTLR start "ruleFilterPackage"
    // InternalKerML.g:1909:1: ruleFilterPackage returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ ) ;
    public final EObject ruleFilterPackage() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1915:2: ( ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ ) )
            // InternalKerML.g:1916:2: ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ )
            {
            // InternalKerML.g:1916:2: ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ )
            // InternalKerML.g:1917:3: ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+
            {
            // InternalKerML.g:1917:3: ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) )
            // InternalKerML.g:1918:4: (lv_ownedRelationship_0_0= ruleFilterPackageImport )
            {
            // InternalKerML.g:1918:4: (lv_ownedRelationship_0_0= ruleFilterPackageImport )
            // InternalKerML.g:1919:5: lv_ownedRelationship_0_0= ruleFilterPackageImport
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageImportParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_ownedRelationship_0_0=ruleFilterPackageImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.FilterPackageImport");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:1936:3: ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+
            int cnt45=0;
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==88) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalKerML.g:1937:4: (lv_ownedRelationship_1_0= ruleFilterPackageMember )
            	    {
            	    // InternalKerML.g:1937:4: (lv_ownedRelationship_1_0= ruleFilterPackageMember )
            	    // InternalKerML.g:1938:5: lv_ownedRelationship_1_0= ruleFilterPackageMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageMemberParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_ownedRelationship_1_0=ruleFilterPackageMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFilterPackageRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_1_0,
            	      						"org.omg.kerml.xtext.KerML.FilterPackageMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt45 >= 1 ) break loop45;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(45, input);
                        throw eee;
                }
                cnt45++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackage"


    // $ANTLR start "entryRuleFilterPackageImport"
    // InternalKerML.g:1959:1: entryRuleFilterPackageImport returns [EObject current=null] : iv_ruleFilterPackageImport= ruleFilterPackageImport EOF ;
    public final EObject entryRuleFilterPackageImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackageImport = null;


        try {
            // InternalKerML.g:1959:60: (iv_ruleFilterPackageImport= ruleFilterPackageImport EOF )
            // InternalKerML.g:1960:2: iv_ruleFilterPackageImport= ruleFilterPackageImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackageImport=ruleFilterPackageImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackageImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackageImport"


    // $ANTLR start "ruleFilterPackageImport"
    // InternalKerML.g:1966:1: ruleFilterPackageImport returns [EObject current=null] : this_ImportedNamespace_0= ruleImportedNamespace[$current] ;
    public final EObject ruleFilterPackageImport() throws RecognitionException {
        EObject current = null;

        EObject this_ImportedNamespace_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1972:2: (this_ImportedNamespace_0= ruleImportedNamespace[$current] )
            // InternalKerML.g:1973:2: this_ImportedNamespace_0= ruleImportedNamespace[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getFilterPackageImportRule());
              		}
              		newCompositeNode(grammarAccess.getFilterPackageImportAccess().getImportedNamespaceParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ImportedNamespace_0=ruleImportedNamespace(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ImportedNamespace_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageImport"


    // $ANTLR start "entryRuleFilterPackageMember"
    // InternalKerML.g:1987:1: entryRuleFilterPackageMember returns [EObject current=null] : iv_ruleFilterPackageMember= ruleFilterPackageMember EOF ;
    public final EObject entryRuleFilterPackageMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackageMember = null;


        try {
            // InternalKerML.g:1987:60: (iv_ruleFilterPackageMember= ruleFilterPackageMember EOF )
            // InternalKerML.g:1988:2: iv_ruleFilterPackageMember= ruleFilterPackageMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackageMember=ruleFilterPackageMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackageMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackageMember"


    // $ANTLR start "ruleFilterPackageMember"
    // InternalKerML.g:1994:1: ruleFilterPackageMember returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleFilterPackageMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_visibility_0_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2000:2: ( ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' ) )
            // InternalKerML.g:2001:2: ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' )
            {
            // InternalKerML.g:2001:2: ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' )
            // InternalKerML.g:2002:3: ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']'
            {
            // InternalKerML.g:2002:3: ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) )
            // InternalKerML.g:2003:4: (lv_visibility_0_0= ruleFilterPackageMemberVisibility )
            {
            // InternalKerML.g:2003:4: (lv_visibility_0_0= ruleFilterPackageMemberVisibility )
            // InternalKerML.g:2004:5: lv_visibility_0_0= ruleFilterPackageMemberVisibility
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageMemberAccess().getVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_visibility_0_0=ruleFilterPackageMemberVisibility();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageMemberRule());
              					}
              					set(
              						current,
              						"visibility",
              						lv_visibility_0_0,
              						"org.omg.kerml.xtext.KerML.FilterPackageMemberVisibility");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:2021:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:2022:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:2022:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:2023:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFilterPackageMemberAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageMember"


    // $ANTLR start "entryRuleMemberElement"
    // InternalKerML.g:2048:1: entryRuleMemberElement returns [EObject current=null] : iv_ruleMemberElement= ruleMemberElement EOF ;
    public final EObject entryRuleMemberElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMemberElement = null;


        try {
            // InternalKerML.g:2048:54: (iv_ruleMemberElement= ruleMemberElement EOF )
            // InternalKerML.g:2049:2: iv_ruleMemberElement= ruleMemberElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMemberElement=ruleMemberElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMemberElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMemberElement"


    // $ANTLR start "ruleMemberElement"
    // InternalKerML.g:2055:1: ruleMemberElement returns [EObject current=null] : (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement ) ;
    public final EObject ruleMemberElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatingElement_0 = null;

        EObject this_NonFeatureElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:2061:2: ( (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement ) )
            // InternalKerML.g:2062:2: (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement )
            {
            // InternalKerML.g:2062:2: (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_REGULAR_COMMENT||LA46_0==23||(LA46_0>=25 && LA46_0<=27)||(LA46_0>=116 && LA46_0<=117)) ) {
                alt46=1;
            }
            else if ( (LA46_0==15||LA46_0==19||LA46_0==28||(LA46_0>=37 && LA46_0<=39)||(LA46_0>=41 && LA46_0<=42)||LA46_0==47||(LA46_0>=52 && LA46_0<=58)||LA46_0==66||(LA46_0>=79 && LA46_0<=83)||LA46_0==87||(LA46_0>=90 && LA46_0<=93)||LA46_0==101||LA46_0==103||LA46_0==106||LA46_0==111||(LA46_0>=114 && LA46_0<=115)) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalKerML.g:2063:3: this_AnnotatingElement_0= ruleAnnotatingElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMemberElementAccess().getAnnotatingElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatingElement_0=ruleAnnotatingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnnotatingElement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2072:3: this_NonFeatureElement_1= ruleNonFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMemberElementAccess().getNonFeatureElementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureElement_1=ruleNonFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureElement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMemberElement"


    // $ANTLR start "entryRuleNonFeatureElement"
    // InternalKerML.g:2084:1: entryRuleNonFeatureElement returns [EObject current=null] : iv_ruleNonFeatureElement= ruleNonFeatureElement EOF ;
    public final EObject entryRuleNonFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureElement = null;


        try {
            // InternalKerML.g:2084:58: (iv_ruleNonFeatureElement= ruleNonFeatureElement EOF )
            // InternalKerML.g:2085:2: iv_ruleNonFeatureElement= ruleNonFeatureElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureElement=ruleNonFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureElement"


    // $ANTLR start "ruleNonFeatureElement"
    // InternalKerML.g:2091:1: ruleNonFeatureElement returns [EObject current=null] : (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing ) ;
    public final EObject ruleNonFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject this_Element_0 = null;

        EObject this_Relationship_1 = null;

        EObject this_Namespace_2 = null;

        EObject this_Package_3 = null;

        EObject this_LibraryPackage_4 = null;

        EObject this_Multiplicity_5 = null;

        EObject this_Type_6 = null;

        EObject this_Classifier_7 = null;

        EObject this_Class_8 = null;

        EObject this_Structure_9 = null;

        EObject this_Metaclass_10 = null;

        EObject this_DataType_11 = null;

        EObject this_Association_12 = null;

        EObject this_AssociationStructure_13 = null;

        EObject this_Interaction_14 = null;

        EObject this_Behavior_15 = null;

        EObject this_Function_16 = null;

        EObject this_Predicate_17 = null;

        EObject this_Specialization_18 = null;

        EObject this_Conjugation_19 = null;

        EObject this_FeatureTyping_20 = null;

        EObject this_Subclassification_21 = null;

        EObject this_Disjoining_22 = null;

        EObject this_FeatureInverting_23 = null;

        EObject this_Subsetting_24 = null;

        EObject this_Redefinition_25 = null;

        EObject this_TypeFeaturing_26 = null;



        	enterRule();

        try {
            // InternalKerML.g:2097:2: ( (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing ) )
            // InternalKerML.g:2098:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing )
            {
            // InternalKerML.g:2098:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing )
            int alt47=27;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalKerML.g:2099:3: this_Element_0= ruleElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Element_0=ruleElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Element_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2108:3: this_Relationship_1= ruleRelationship
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRelationshipParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Relationship_1=ruleRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Relationship_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:2117:3: this_Namespace_2= ruleNamespace
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getNamespaceParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Namespace_2=ruleNamespace();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Namespace_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:2126:3: this_Package_3= rulePackage
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPackageParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Package_3=rulePackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Package_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:2135:3: this_LibraryPackage_4= ruleLibraryPackage
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getLibraryPackageParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LibraryPackage_4=ruleLibraryPackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LibraryPackage_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:2144:3: this_Multiplicity_5= ruleMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getMultiplicityParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Multiplicity_5=ruleMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Multiplicity_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:2153:3: this_Type_6= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Type_6=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Type_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKerML.g:2162:3: this_Classifier_7= ruleClassifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassifierParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Classifier_7=ruleClassifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Classifier_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKerML.g:2171:3: this_Class_8= ruleClass
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Class_8=ruleClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Class_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKerML.g:2180:3: this_Structure_9= ruleStructure
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getStructureParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Structure_9=ruleStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Structure_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKerML.g:2189:3: this_Metaclass_10= ruleMetaclass
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getMetaclassParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Metaclass_10=ruleMetaclass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Metaclass_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKerML.g:2198:3: this_DataType_11= ruleDataType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getDataTypeParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DataType_11=ruleDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataType_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKerML.g:2207:3: this_Association_12= ruleAssociation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAssociationParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Association_12=ruleAssociation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Association_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKerML.g:2216:3: this_AssociationStructure_13= ruleAssociationStructure
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAssociationStructureParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AssociationStructure_13=ruleAssociationStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AssociationStructure_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalKerML.g:2225:3: this_Interaction_14= ruleInteraction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getInteractionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Interaction_14=ruleInteraction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Interaction_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalKerML.g:2234:3: this_Behavior_15= ruleBehavior
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getBehaviorParserRuleCall_15());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Behavior_15=ruleBehavior();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Behavior_15;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalKerML.g:2243:3: this_Function_16= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFunctionParserRuleCall_16());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Function_16=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Function_16;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalKerML.g:2252:3: this_Predicate_17= rulePredicate
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPredicateParserRuleCall_17());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Predicate_17=rulePredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Predicate_17;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalKerML.g:2261:3: this_Specialization_18= ruleSpecialization
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSpecializationParserRuleCall_18());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Specialization_18=ruleSpecialization();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Specialization_18;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalKerML.g:2270:3: this_Conjugation_19= ruleConjugation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getConjugationParserRuleCall_19());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Conjugation_19=ruleConjugation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conjugation_19;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalKerML.g:2279:3: this_FeatureTyping_20= ruleFeatureTyping
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFeatureTypingParserRuleCall_20());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureTyping_20=ruleFeatureTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureTyping_20;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalKerML.g:2288:3: this_Subclassification_21= ruleSubclassification
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSubclassificationParserRuleCall_21());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subclassification_21=ruleSubclassification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subclassification_21;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalKerML.g:2297:3: this_Disjoining_22= ruleDisjoining
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getDisjoiningParserRuleCall_22());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Disjoining_22=ruleDisjoining();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Disjoining_22;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 24 :
                    // InternalKerML.g:2306:3: this_FeatureInverting_23= ruleFeatureInverting
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFeatureInvertingParserRuleCall_23());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureInverting_23=ruleFeatureInverting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureInverting_23;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 25 :
                    // InternalKerML.g:2315:3: this_Subsetting_24= ruleSubsetting
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSubsettingParserRuleCall_24());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subsetting_24=ruleSubsetting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subsetting_24;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 26 :
                    // InternalKerML.g:2324:3: this_Redefinition_25= ruleRedefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRedefinitionParserRuleCall_25());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Redefinition_25=ruleRedefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Redefinition_25;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 27 :
                    // InternalKerML.g:2333:3: this_TypeFeaturing_26= ruleTypeFeaturing
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeFeaturingParserRuleCall_26());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeaturing_26=ruleTypeFeaturing();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeaturing_26;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureElement"


    // $ANTLR start "entryRuleFeatureElement"
    // InternalKerML.g:2345:1: entryRuleFeatureElement returns [EObject current=null] : iv_ruleFeatureElement= ruleFeatureElement EOF ;
    public final EObject entryRuleFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureElement = null;


        try {
            // InternalKerML.g:2345:55: (iv_ruleFeatureElement= ruleFeatureElement EOF )
            // InternalKerML.g:2346:2: iv_ruleFeatureElement= ruleFeatureElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureElement=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureElement"


    // $ANTLR start "ruleFeatureElement"
    // InternalKerML.g:2352:1: ruleFeatureElement returns [EObject current=null] : (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow ) ;
    public final EObject ruleFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject this_Feature_0 = null;

        EObject this_Step_1 = null;

        EObject this_Expression_2 = null;

        EObject this_BooleanExpression_3 = null;

        EObject this_Invariant_4 = null;

        EObject this_Connector_5 = null;

        EObject this_BindingConnector_6 = null;

        EObject this_Succession_7 = null;

        EObject this_ItemFlow_8 = null;

        EObject this_SuccessionItemFlow_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:2358:2: ( (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow ) )
            // InternalKerML.g:2359:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )
            {
            // InternalKerML.g:2359:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )
            int alt48=10;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalKerML.g:2360:3: this_Feature_0= ruleFeature
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getFeatureParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Feature_0=ruleFeature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Feature_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2369:3: this_Step_1= ruleStep
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getStepParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Step_1=ruleStep();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Step_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:2378:3: this_Expression_2= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_2=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:2387:3: this_BooleanExpression_3= ruleBooleanExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getBooleanExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanExpression_3=ruleBooleanExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:2396:3: this_Invariant_4= ruleInvariant
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getInvariantParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Invariant_4=ruleInvariant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Invariant_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:2405:3: this_Connector_5= ruleConnector
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getConnectorParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Connector_5=ruleConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Connector_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:2414:3: this_BindingConnector_6= ruleBindingConnector
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getBindingConnectorParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BindingConnector_6=ruleBindingConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BindingConnector_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKerML.g:2423:3: this_Succession_7= ruleSuccession
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Succession_7=ruleSuccession();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Succession_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKerML.g:2432:3: this_ItemFlow_8= ruleItemFlow
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getItemFlowParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ItemFlow_8=ruleItemFlow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ItemFlow_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKerML.g:2441:3: this_SuccessionItemFlow_9= ruleSuccessionItemFlow
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionItemFlowParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SuccessionItemFlow_9=ruleSuccessionItemFlow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SuccessionItemFlow_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureElement"


    // $ANTLR start "entryRulePackage"
    // InternalKerML.g:2453:1: entryRulePackage returns [EObject current=null] : iv_rulePackage= rulePackage EOF ;
    public final EObject entryRulePackage() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackage = null;


        try {
            // InternalKerML.g:2453:48: (iv_rulePackage= rulePackage EOF )
            // InternalKerML.g:2454:2: iv_rulePackage= rulePackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackage=rulePackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackage"


    // $ANTLR start "rulePackage"
    // InternalKerML.g:2460:1: rulePackage returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_1= rulePackageDeclaration[$current] this_PackageBody_2= rulePackageBody[$current] ) ;
    public final EObject rulePackage() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject this_PackageDeclaration_1 = null;

        EObject this_PackageBody_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:2466:2: ( ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_1= rulePackageDeclaration[$current] this_PackageBody_2= rulePackageBody[$current] ) )
            // InternalKerML.g:2467:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_1= rulePackageDeclaration[$current] this_PackageBody_2= rulePackageBody[$current] )
            {
            // InternalKerML.g:2467:2: ( ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_1= rulePackageDeclaration[$current] this_PackageBody_2= rulePackageBody[$current] )
            // InternalKerML.g:2468:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_1= rulePackageDeclaration[$current] this_PackageBody_2= rulePackageBody[$current]
            {
            // InternalKerML.g:2468:3: ( (lv_ownedRelationship_0_0= rulePrefixMetadataMember ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==115) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalKerML.g:2469:4: (lv_ownedRelationship_0_0= rulePrefixMetadataMember )
            	    {
            	    // InternalKerML.g:2469:4: (lv_ownedRelationship_0_0= rulePrefixMetadataMember )
            	    // InternalKerML.g:2470:5: lv_ownedRelationship_0_0= rulePrefixMetadataMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackageAccess().getOwnedRelationshipPrefixMetadataMemberParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_ownedRelationship_0_0=rulePrefixMetadataMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackageRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_0_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageRule());
              			}
              			newCompositeNode(grammarAccess.getPackageAccess().getPackageDeclarationParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_24);
            this_PackageDeclaration_1=rulePackageDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageDeclaration_1;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageRule());
              			}
              			newCompositeNode(grammarAccess.getPackageAccess().getPackageBodyParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageBody_2=rulePackageBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageBody_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackage"


    // $ANTLR start "entryRuleLibraryPackage"
    // InternalKerML.g:2513:1: entryRuleLibraryPackage returns [EObject current=null] : iv_ruleLibraryPackage= ruleLibraryPackage EOF ;
    public final EObject entryRuleLibraryPackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLibraryPackage = null;


        try {
            // InternalKerML.g:2513:55: (iv_ruleLibraryPackage= ruleLibraryPackage EOF )
            // InternalKerML.g:2514:2: iv_ruleLibraryPackage= ruleLibraryPackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLibraryPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLibraryPackage=ruleLibraryPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLibraryPackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLibraryPackage"


    // $ANTLR start "ruleLibraryPackage"
    // InternalKerML.g:2520:1: ruleLibraryPackage returns [EObject current=null] : ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' ( (lv_ownedRelationship_2_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_3= rulePackageDeclaration[$current] this_PackageBody_4= rulePackageBody[$current] ) ;
    public final EObject ruleLibraryPackage() throws RecognitionException {
        EObject current = null;

        Token lv_isStandard_0_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject this_PackageDeclaration_3 = null;

        EObject this_PackageBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:2526:2: ( ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' ( (lv_ownedRelationship_2_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_3= rulePackageDeclaration[$current] this_PackageBody_4= rulePackageBody[$current] ) )
            // InternalKerML.g:2527:2: ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' ( (lv_ownedRelationship_2_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_3= rulePackageDeclaration[$current] this_PackageBody_4= rulePackageBody[$current] )
            {
            // InternalKerML.g:2527:2: ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' ( (lv_ownedRelationship_2_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_3= rulePackageDeclaration[$current] this_PackageBody_4= rulePackageBody[$current] )
            // InternalKerML.g:2528:3: ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' ( (lv_ownedRelationship_2_0= rulePrefixMetadataMember ) )* this_PackageDeclaration_3= rulePackageDeclaration[$current] this_PackageBody_4= rulePackageBody[$current]
            {
            // InternalKerML.g:2528:3: ( (lv_isStandard_0_0= 'standard' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==37) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalKerML.g:2529:4: (lv_isStandard_0_0= 'standard' )
                    {
                    // InternalKerML.g:2529:4: (lv_isStandard_0_0= 'standard' )
                    // InternalKerML.g:2530:5: lv_isStandard_0_0= 'standard'
                    {
                    lv_isStandard_0_0=(Token)match(input,37,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isStandard_0_0, grammarAccess.getLibraryPackageAccess().getIsStandardStandardKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLibraryPackageRule());
                      					}
                      					setWithLastConsumed(current, "isStandard", lv_isStandard_0_0 != null, "standard");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,38,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLibraryPackageAccess().getLibraryKeyword_1());
              		
            }
            // InternalKerML.g:2546:3: ( (lv_ownedRelationship_2_0= rulePrefixMetadataMember ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==115) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalKerML.g:2547:4: (lv_ownedRelationship_2_0= rulePrefixMetadataMember )
            	    {
            	    // InternalKerML.g:2547:4: (lv_ownedRelationship_2_0= rulePrefixMetadataMember )
            	    // InternalKerML.g:2548:5: lv_ownedRelationship_2_0= rulePrefixMetadataMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLibraryPackageAccess().getOwnedRelationshipPrefixMetadataMemberParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_ownedRelationship_2_0=rulePrefixMetadataMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLibraryPackageRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_2_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getLibraryPackageRule());
              			}
              			newCompositeNode(grammarAccess.getLibraryPackageAccess().getPackageDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_24);
            this_PackageDeclaration_3=rulePackageDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageDeclaration_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getLibraryPackageRule());
              			}
              			newCompositeNode(grammarAccess.getLibraryPackageAccess().getPackageBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageBody_4=rulePackageBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLibraryPackage"


    // $ANTLR start "rulePackageDeclaration"
    // InternalKerML.g:2592:1: rulePackageDeclaration[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? ) ;
    public final EObject rulePackageDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:2598:2: ( (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? ) )
            // InternalKerML.g:2599:2: (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? )
            {
            // InternalKerML.g:2599:2: (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? )
            // InternalKerML.g:2600:3: otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )?
            {
            otherlv_0=(Token)match(input,39,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
              		
            }
            // InternalKerML.g:2604:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( ((LA52_0>=RULE_ID && LA52_0<=RULE_UNRESTRICTED_NAME)||LA52_0==13) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalKerML.g:2605:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getPackageDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getPackageDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDeclaration"


    // $ANTLR start "rulePackageBody"
    // InternalKerML.g:2622:1: rulePackageBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject rulePackageBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2628:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:2629:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:2629:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==16) ) {
                alt54=1;
            }
            else if ( (LA54_0==17) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalKerML.g:2630:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getPackageBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2635:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:2635:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:2636:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:2640:4: ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop53:
                    do {
                        int alt53=5;
                        switch ( input.LA(1) ) {
                        case 148:
                            {
                            switch ( input.LA(2) ) {
                            case 40:
                                {
                                alt53=2;
                                }
                                break;
                            case 31:
                                {
                                alt53=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 151:
                            case 152:
                            case 153:
                                {
                                alt53=1;
                                }
                                break;
                            case 29:
                                {
                                alt53=3;
                                }
                                break;

                            }

                            }
                            break;
                        case 149:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt53=3;
                                }
                                break;
                            case 40:
                                {
                                alt53=2;
                                }
                                break;
                            case 31:
                                {
                                alt53=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 151:
                            case 152:
                            case 153:
                                {
                                alt53=1;
                                }
                                break;

                            }

                            }
                            break;
                        case 150:
                            {
                            switch ( input.LA(2) ) {
                            case 31:
                                {
                                alt53=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 151:
                            case 152:
                            case 153:
                                {
                                alt53=1;
                                }
                                break;
                            case 29:
                                {
                                alt53=3;
                                }
                                break;
                            case 40:
                                {
                                alt53=2;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 13:
                        case 15:
                        case 19:
                        case 23:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 32:
                        case 37:
                        case 38:
                        case 39:
                        case 41:
                        case 42:
                        case 43:
                        case 45:
                        case 46:
                        case 47:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 66:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 87:
                        case 88:
                        case 90:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 97:
                        case 98:
                        case 101:
                        case 102:
                        case 103:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 111:
                        case 112:
                        case 114:
                        case 115:
                        case 116:
                        case 117:
                        case 151:
                        case 152:
                        case 153:
                            {
                            alt53=1;
                            }
                            break;
                        case 40:
                            {
                            alt53=2;
                            }
                            break;
                        case 29:
                            {
                            alt53=3;
                            }
                            break;
                        case 31:
                            {
                            alt53=4;
                            }
                            break;

                        }

                        switch (alt53) {
                    	case 1 :
                    	    // InternalKerML.g:2641:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    {
                    	    // InternalKerML.g:2641:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    // InternalKerML.g:2642:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    {
                    	    // InternalKerML.g:2642:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    // InternalKerML.g:2643:7: lv_ownedRelationship_2_0= ruleNamespaceMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_ownedRelationship_2_0=ruleNamespaceMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NamespaceMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:2661:5: ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) )
                    	    {
                    	    // InternalKerML.g:2661:5: ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) )
                    	    // InternalKerML.g:2662:6: (lv_ownedRelationship_3_0= ruleElementFilterMember )
                    	    {
                    	    // InternalKerML.g:2662:6: (lv_ownedRelationship_3_0= ruleElementFilterMember )
                    	    // InternalKerML.g:2663:7: lv_ownedRelationship_3_0= ruleElementFilterMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipElementFilterMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_ownedRelationship_3_0=ruleElementFilterMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.ElementFilterMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:2681:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:2681:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:2682:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:2682:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:2683:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:2701:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:2701:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:2702:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:2702:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:2703:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageBody"


    // $ANTLR start "entryRuleElementFilterMember"
    // InternalKerML.g:2730:1: entryRuleElementFilterMember returns [EObject current=null] : iv_ruleElementFilterMember= ruleElementFilterMember EOF ;
    public final EObject entryRuleElementFilterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementFilterMember = null;


        try {
            // InternalKerML.g:2730:60: (iv_ruleElementFilterMember= ruleElementFilterMember EOF )
            // InternalKerML.g:2731:2: iv_ruleElementFilterMember= ruleElementFilterMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementFilterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementFilterMember=ruleElementFilterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementFilterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementFilterMember"


    // $ANTLR start "ruleElementFilterMember"
    // InternalKerML.g:2737:1: ruleElementFilterMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleElementFilterMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2743:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' ) )
            // InternalKerML.g:2744:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' )
            {
            // InternalKerML.g:2744:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' )
            // InternalKerML.g:2745:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';'
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getElementFilterMemberRule());
              			}
              			newCompositeNode(grammarAccess.getElementFilterMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_43);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,40,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getElementFilterMemberAccess().getFilterKeyword_1());
              		
            }
            // InternalKerML.g:2760:3: ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) )
            // InternalKerML.g:2761:4: (lv_ownedRelatedElement_2_0= ruleOwnedExpression )
            {
            // InternalKerML.g:2761:4: (lv_ownedRelatedElement_2_0= ruleOwnedExpression )
            // InternalKerML.g:2762:5: lv_ownedRelatedElement_2_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementFilterMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_ownedRelatedElement_2_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementFilterMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElementFilterMemberAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementFilterMember"


    // $ANTLR start "ruleTypePrefix"
    // InternalKerML.g:2788:1: ruleTypePrefix[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? ( (lv_ownedRelationship_1_0= rulePrefixMetadataMember ) )* ) ;
    public final EObject ruleTypePrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_0_0=null;
        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2794:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? ( (lv_ownedRelationship_1_0= rulePrefixMetadataMember ) )* ) )
            // InternalKerML.g:2795:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? ( (lv_ownedRelationship_1_0= rulePrefixMetadataMember ) )* )
            {
            // InternalKerML.g:2795:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? ( (lv_ownedRelationship_1_0= rulePrefixMetadataMember ) )* )
            // InternalKerML.g:2796:3: ( (lv_isAbstract_0_0= 'abstract' ) )? ( (lv_ownedRelationship_1_0= rulePrefixMetadataMember ) )*
            {
            // InternalKerML.g:2796:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==41) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalKerML.g:2797:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:2797:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:2798:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getTypePrefixAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:2810:3: ( (lv_ownedRelationship_1_0= rulePrefixMetadataMember ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==115) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalKerML.g:2811:4: (lv_ownedRelationship_1_0= rulePrefixMetadataMember )
            	    {
            	    // InternalKerML.g:2811:4: (lv_ownedRelationship_1_0= rulePrefixMetadataMember )
            	    // InternalKerML.g:2812:5: lv_ownedRelationship_1_0= rulePrefixMetadataMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypePrefixAccess().getOwnedRelationshipPrefixMetadataMemberParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_ownedRelationship_1_0=rulePrefixMetadataMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypePrefixRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_1_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypePrefix"


    // $ANTLR start "entryRuleType"
    // InternalKerML.g:2833:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalKerML.g:2833:45: (iv_ruleType= ruleType EOF )
            // InternalKerML.g:2834:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalKerML.g:2840:1: ruleType returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_TypeDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:2846:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:2847:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:2847:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:2848:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeRule());
              			}
              			newCompositeNode(grammarAccess.getTypeAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_46);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,42,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getTypeKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeRule());
              			}
              			newCompositeNode(grammarAccess.getTypeAccess().getTypeDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_TypeDeclaration_2=ruleTypeDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeRule());
              			}
              			newCompositeNode(grammarAccess.getTypeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalKerML.g:2890:1: ruleTypeDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) ;
    public final EObject ruleTypeDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject this_SpecializationPart_3 = null;

        EObject this_ConjugationPart_4 = null;

        EObject this_TypeRelationshipPart_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:2896:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) )
            // InternalKerML.g:2897:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            {
            // InternalKerML.g:2897:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            // InternalKerML.g:2898:3: ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            {
            // InternalKerML.g:2898:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==32) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalKerML.g:2899:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:2899:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:2900:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,32,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:2912:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( ((LA58_0>=RULE_ID && LA58_0<=RULE_UNRESTRICTED_NAME)||LA58_0==13) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalKerML.g:2913:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_47);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:2925:3: ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==88) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalKerML.g:2926:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:2926:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:2927:5: lv_ownedRelationship_2_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_47);
                    lv_ownedRelationship_2_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:2944:3: (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+
            int cnt60=0;
            loop60:
            do {
                int alt60=3;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=43 && LA60_0<=44)) ) {
                    alt60=1;
                }
                else if ( ((LA60_0>=45 && LA60_0<=46)) ) {
                    alt60=2;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalKerML.g:2945:4: this_SpecializationPart_3= ruleSpecializationPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getSpecializationPartParserRuleCall_3_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_48);
            	    this_SpecializationPart_3=ruleSpecializationPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_SpecializationPart_3;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // InternalKerML.g:2957:4: this_ConjugationPart_4= ruleConjugationPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getConjugationPartParserRuleCall_3_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_48);
            	    this_ConjugationPart_4=ruleConjugationPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_ConjugationPart_4;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt60 >= 1 ) break loop60;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(60, input);
                        throw eee;
                }
                cnt60++;
            } while (true);

            // InternalKerML.g:2969:3: (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=47 && LA61_0<=50)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalKerML.g:2970:4: this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeRelationshipPartParserRuleCall_4());
            	      			
            	    }
            	    pushFollow(FOLLOW_49);
            	    this_TypeRelationshipPart_5=ruleTypeRelationshipPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_TypeRelationshipPart_5;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "ruleSpecializationPart"
    // InternalKerML.g:2987:1: ruleSpecializationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* ) ;
    public final EObject ruleSpecializationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2993:2: ( ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* ) )
            // InternalKerML.g:2994:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* )
            {
            // InternalKerML.g:2994:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* )
            // InternalKerML.g:2995:3: (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )*
            {
            // InternalKerML.g:2995:3: (otherlv_0= ':>' | otherlv_1= 'specializes' )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==43) ) {
                alt62=1;
            }
            else if ( (LA62_0==44) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalKerML.g:2996:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSpecializationPartAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3001:4: otherlv_1= 'specializes'
                    {
                    otherlv_1=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSpecializationPartAccess().getSpecializesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3006:3: ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) )
            // InternalKerML.g:3007:4: (lv_ownedRelationship_2_0= ruleOwnedSpecialization )
            {
            // InternalKerML.g:3007:4: (lv_ownedRelationship_2_0= ruleOwnedSpecialization )
            // InternalKerML.g:3008:5: lv_ownedRelationship_2_0= ruleOwnedSpecialization
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedSpecializationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_2_0=ruleOwnedSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedSpecialization");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3025:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==22) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalKerML.g:3026:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSpecializationPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:3030:4: ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) )
            	    // InternalKerML.g:3031:5: (lv_ownedRelationship_4_0= ruleOwnedSpecialization )
            	    {
            	    // InternalKerML.g:3031:5: (lv_ownedRelationship_4_0= ruleOwnedSpecialization )
            	    // InternalKerML.g:3032:6: lv_ownedRelationship_4_0= ruleOwnedSpecialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedSpecializationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_4_0=ruleOwnedSpecialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedSpecialization");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecializationPart"


    // $ANTLR start "ruleConjugationPart"
    // InternalKerML.g:3055:1: ruleConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) ) ;
    public final EObject ruleConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3061:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) ) )
            // InternalKerML.g:3062:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) )
            {
            // InternalKerML.g:3062:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) )
            // InternalKerML.g:3063:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) )
            {
            // InternalKerML.g:3063:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==45) ) {
                alt64=1;
            }
            else if ( (LA64_0==46) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalKerML.g:3064:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3069:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3074:3: ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) )
            // InternalKerML.g:3075:4: (lv_ownedRelationship_2_0= ruleOwnedConjugation )
            {
            // InternalKerML.g:3075:4: (lv_ownedRelationship_2_0= ruleOwnedConjugation )
            // InternalKerML.g:3076:5: lv_ownedRelationship_2_0= ruleOwnedConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConjugationPartAccess().getOwnedRelationshipOwnedConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConjugationPart"


    // $ANTLR start "ruleTypeRelationshipPart"
    // InternalKerML.g:3098:1: ruleTypeRelationshipPart[EObject in_current] returns [EObject current=in_current] : (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] ) ;
    public final EObject ruleTypeRelationshipPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_DisjoiningPart_0 = null;

        EObject this_UnioningPart_1 = null;

        EObject this_IntersectingPart_2 = null;

        EObject this_DifferencingPart_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:3104:2: ( (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] ) )
            // InternalKerML.g:3105:2: (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] )
            {
            // InternalKerML.g:3105:2: (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] )
            int alt65=4;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt65=1;
                }
                break;
            case 48:
                {
                alt65=2;
                }
                break;
            case 49:
                {
                alt65=3;
                }
                break;
            case 50:
                {
                alt65=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalKerML.g:3106:3: this_DisjoiningPart_0= ruleDisjoiningPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getDisjoiningPartParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DisjoiningPart_0=ruleDisjoiningPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DisjoiningPart_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3118:3: this_UnioningPart_1= ruleUnioningPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getUnioningPartParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnioningPart_1=ruleUnioningPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnioningPart_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:3130:3: this_IntersectingPart_2= ruleIntersectingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getIntersectingPartParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectingPart_2=ruleIntersectingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntersectingPart_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:3142:3: this_DifferencingPart_3= ruleDifferencingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getDifferencingPartParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DifferencingPart_3=ruleDifferencingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DifferencingPart_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRelationshipPart"


    // $ANTLR start "ruleDisjoiningPart"
    // InternalKerML.g:3158:1: ruleDisjoiningPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* ) ;
    public final EObject ruleDisjoiningPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3164:2: ( (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* ) )
            // InternalKerML.g:3165:2: (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* )
            {
            // InternalKerML.g:3165:2: (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* )
            // InternalKerML.g:3166:3: otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )*
            {
            otherlv_0=(Token)match(input,47,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDisjoiningPartAccess().getDisjointKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDisjoiningPartAccess().getFromKeyword_1());
              		
            }
            // InternalKerML.g:3174:3: ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) )
            // InternalKerML.g:3175:4: (lv_ownedRelationship_2_0= ruleOwnedDisjoining )
            {
            // InternalKerML.g:3175:4: (lv_ownedRelationship_2_0= ruleOwnedDisjoining )
            // InternalKerML.g:3176:5: lv_ownedRelationship_2_0= ruleOwnedDisjoining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDisjoiningPartAccess().getOwnedRelationshipOwnedDisjoiningParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_2_0=ruleOwnedDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDisjoiningPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedDisjoining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3193:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==22) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalKerML.g:3194:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getDisjoiningPartAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKerML.g:3198:4: ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) )
            	    // InternalKerML.g:3199:5: (lv_ownedRelationship_4_0= ruleOwnedDisjoining )
            	    {
            	    // InternalKerML.g:3199:5: (lv_ownedRelationship_4_0= ruleOwnedDisjoining )
            	    // InternalKerML.g:3200:6: lv_ownedRelationship_4_0= ruleOwnedDisjoining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDisjoiningPartAccess().getOwnedRelationshipOwnedDisjoiningParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_4_0=ruleOwnedDisjoining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDisjoiningPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedDisjoining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDisjoiningPart"


    // $ANTLR start "ruleUnioningPart"
    // InternalKerML.g:3223:1: ruleUnioningPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* ) ;
    public final EObject ruleUnioningPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3229:2: ( (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* ) )
            // InternalKerML.g:3230:2: (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* )
            {
            // InternalKerML.g:3230:2: (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* )
            // InternalKerML.g:3231:3: otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )*
            {
            otherlv_0=(Token)match(input,48,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUnioningPartAccess().getUnionsKeyword_0());
              		
            }
            // InternalKerML.g:3235:3: ( (lv_ownedRelationship_1_0= ruleUnioning ) )
            // InternalKerML.g:3236:4: (lv_ownedRelationship_1_0= ruleUnioning )
            {
            // InternalKerML.g:3236:4: (lv_ownedRelationship_1_0= ruleUnioning )
            // InternalKerML.g:3237:5: lv_ownedRelationship_1_0= ruleUnioning
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUnioningPartAccess().getOwnedRelationshipUnioningParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_1_0=ruleUnioning();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUnioningPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.Unioning");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3254:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==22) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalKerML.g:3255:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) )
            	    {
            	    otherlv_2=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getUnioningPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:3259:4: ( (lv_ownedRelationship_3_0= ruleUnioning ) )
            	    // InternalKerML.g:3260:5: (lv_ownedRelationship_3_0= ruleUnioning )
            	    {
            	    // InternalKerML.g:3260:5: (lv_ownedRelationship_3_0= ruleUnioning )
            	    // InternalKerML.g:3261:6: lv_ownedRelationship_3_0= ruleUnioning
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnioningPartAccess().getOwnedRelationshipUnioningParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_3_0=ruleUnioning();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnioningPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Unioning");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnioningPart"


    // $ANTLR start "ruleIntersectingPart"
    // InternalKerML.g:3284:1: ruleIntersectingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* ) ;
    public final EObject ruleIntersectingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3290:2: ( (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* ) )
            // InternalKerML.g:3291:2: (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* )
            {
            // InternalKerML.g:3291:2: (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* )
            // InternalKerML.g:3292:3: otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )*
            {
            otherlv_0=(Token)match(input,49,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIntersectingPartAccess().getIntersectsKeyword_0());
              		
            }
            // InternalKerML.g:3296:3: ( (lv_ownedRelationship_1_0= ruleIntersecting ) )
            // InternalKerML.g:3297:4: (lv_ownedRelationship_1_0= ruleIntersecting )
            {
            // InternalKerML.g:3297:4: (lv_ownedRelationship_1_0= ruleIntersecting )
            // InternalKerML.g:3298:5: lv_ownedRelationship_1_0= ruleIntersecting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntersectingPartAccess().getOwnedRelationshipIntersectingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_1_0=ruleIntersecting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntersectingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.Intersecting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3315:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==22) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalKerML.g:3316:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) )
            	    {
            	    otherlv_2=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getIntersectingPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:3320:4: ( (lv_ownedRelationship_3_0= ruleIntersecting ) )
            	    // InternalKerML.g:3321:5: (lv_ownedRelationship_3_0= ruleIntersecting )
            	    {
            	    // InternalKerML.g:3321:5: (lv_ownedRelationship_3_0= ruleIntersecting )
            	    // InternalKerML.g:3322:6: lv_ownedRelationship_3_0= ruleIntersecting
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getIntersectingPartAccess().getOwnedRelationshipIntersectingParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_3_0=ruleIntersecting();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getIntersectingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Intersecting");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntersectingPart"


    // $ANTLR start "ruleDifferencingPart"
    // InternalKerML.g:3345:1: ruleDifferencingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* ) ;
    public final EObject ruleDifferencingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3351:2: ( (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* ) )
            // InternalKerML.g:3352:2: (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* )
            {
            // InternalKerML.g:3352:2: (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* )
            // InternalKerML.g:3353:3: otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )*
            {
            otherlv_0=(Token)match(input,50,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDifferencingPartAccess().getDifferencesKeyword_0());
              		
            }
            // InternalKerML.g:3357:3: ( (lv_ownedRelationship_1_0= ruleDifferencing ) )
            // InternalKerML.g:3358:4: (lv_ownedRelationship_1_0= ruleDifferencing )
            {
            // InternalKerML.g:3358:4: (lv_ownedRelationship_1_0= ruleDifferencing )
            // InternalKerML.g:3359:5: lv_ownedRelationship_1_0= ruleDifferencing
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDifferencingPartAccess().getOwnedRelationshipDifferencingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_1_0=ruleDifferencing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDifferencingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.Differencing");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3376:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==22) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalKerML.g:3377:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) )
            	    {
            	    otherlv_2=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getDifferencingPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:3381:4: ( (lv_ownedRelationship_3_0= ruleDifferencing ) )
            	    // InternalKerML.g:3382:5: (lv_ownedRelationship_3_0= ruleDifferencing )
            	    {
            	    // InternalKerML.g:3382:5: (lv_ownedRelationship_3_0= ruleDifferencing )
            	    // InternalKerML.g:3383:6: lv_ownedRelationship_3_0= ruleDifferencing
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDifferencingPartAccess().getOwnedRelationshipDifferencingParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_3_0=ruleDifferencing();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDifferencingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Differencing");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDifferencingPart"


    // $ANTLR start "ruleTypeBody"
    // InternalKerML.g:3406:1: ruleTypeBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject ruleTypeBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3412:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:3413:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:3413:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==16) ) {
                alt71=1;
            }
            else if ( (LA71_0==17) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalKerML.g:3414:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3419:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:3419:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:3420:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:3424:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop70:
                    do {
                        int alt70=5;
                        alt70 = dfa70.predict(input);
                        switch (alt70) {
                    	case 1 :
                    	    // InternalKerML.g:3425:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:3425:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    // InternalKerML.g:3426:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    {
                    	    // InternalKerML.g:3426:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    // InternalKerML.g:3427:7: lv_ownedRelationship_2_0= ruleNonFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_51);
                    	    lv_ownedRelationship_2_0=ruleNonFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NonFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:3445:5: ( (lv_ownedRelationship_3_0= ruleFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:3445:5: ( (lv_ownedRelationship_3_0= ruleFeatureMember ) )
                    	    // InternalKerML.g:3446:6: (lv_ownedRelationship_3_0= ruleFeatureMember )
                    	    {
                    	    // InternalKerML.g:3446:6: (lv_ownedRelationship_3_0= ruleFeatureMember )
                    	    // InternalKerML.g:3447:7: lv_ownedRelationship_3_0= ruleFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipFeatureMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_51);
                    	    lv_ownedRelationship_3_0=ruleFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.FeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:3465:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:3465:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:3466:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:3466:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:3467:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_51);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:3485:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:3485:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:3486:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:3486:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:3487:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_51);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeBody"


    // $ANTLR start "entryRuleFeatureMember"
    // InternalKerML.g:3514:1: entryRuleFeatureMember returns [EObject current=null] : iv_ruleFeatureMember= ruleFeatureMember EOF ;
    public final EObject entryRuleFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureMember = null;


        try {
            // InternalKerML.g:3514:54: (iv_ruleFeatureMember= ruleFeatureMember EOF )
            // InternalKerML.g:3515:2: iv_ruleFeatureMember= ruleFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureMember=ruleFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureMember"


    // $ANTLR start "ruleFeatureMember"
    // InternalKerML.g:3521:1: ruleFeatureMember returns [EObject current=null] : (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember ) ;
    public final EObject ruleFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_TypeFeatureMember_0 = null;

        EObject this_OwnedFeatureMember_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:3527:2: ( (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember ) )
            // InternalKerML.g:3528:2: (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember )
            {
            // InternalKerML.g:3528:2: (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember )
            int alt72=2;
            switch ( input.LA(1) ) {
            case 148:
                {
                int LA72_1 = input.LA(2);

                if ( ((LA72_1>=RULE_ID && LA72_1<=RULE_UNRESTRICTED_NAME)||LA72_1==13||LA72_1==32||LA72_1==41||LA72_1==43||(LA72_1>=45 && LA72_1<=46)||(LA72_1>=59 && LA72_1<=64)||(LA72_1>=70 && LA72_1<=78)||LA72_1==88||LA72_1==94||(LA72_1>=97 && LA72_1<=98)||LA72_1==102||LA72_1==105||(LA72_1>=107 && LA72_1<=108)||LA72_1==112||LA72_1==115||(LA72_1>=151 && LA72_1<=153)) ) {
                    alt72=2;
                }
                else if ( (LA72_1==51) ) {
                    alt72=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }
                }
                break;
            case 149:
                {
                int LA72_2 = input.LA(2);

                if ( (LA72_2==51) ) {
                    alt72=1;
                }
                else if ( ((LA72_2>=RULE_ID && LA72_2<=RULE_UNRESTRICTED_NAME)||LA72_2==13||LA72_2==32||LA72_2==41||LA72_2==43||(LA72_2>=45 && LA72_2<=46)||(LA72_2>=59 && LA72_2<=64)||(LA72_2>=70 && LA72_2<=78)||LA72_2==88||LA72_2==94||(LA72_2>=97 && LA72_2<=98)||LA72_2==102||LA72_2==105||(LA72_2>=107 && LA72_2<=108)||LA72_2==112||LA72_2==115||(LA72_2>=151 && LA72_2<=153)) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 2, input);

                    throw nvae;
                }
                }
                break;
            case 150:
                {
                int LA72_3 = input.LA(2);

                if ( (LA72_3==51) ) {
                    alt72=1;
                }
                else if ( ((LA72_3>=RULE_ID && LA72_3<=RULE_UNRESTRICTED_NAME)||LA72_3==13||LA72_3==32||LA72_3==41||LA72_3==43||(LA72_3>=45 && LA72_3<=46)||(LA72_3>=59 && LA72_3<=64)||(LA72_3>=70 && LA72_3<=78)||LA72_3==88||LA72_3==94||(LA72_3>=97 && LA72_3<=98)||LA72_3==102||LA72_3==105||(LA72_3>=107 && LA72_3<=108)||LA72_3==112||LA72_3==115||(LA72_3>=151 && LA72_3<=153)) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 3, input);

                    throw nvae;
                }
                }
                break;
            case 51:
                {
                alt72=1;
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
            case 32:
            case 41:
            case 43:
            case 45:
            case 46:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
            case 94:
            case 97:
            case 98:
            case 102:
            case 105:
            case 107:
            case 108:
            case 112:
            case 115:
            case 151:
            case 152:
            case 153:
                {
                alt72=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalKerML.g:3529:3: this_TypeFeatureMember_0= ruleTypeFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureMemberAccess().getTypeFeatureMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeatureMember_0=ruleTypeFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeatureMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3538:3: this_OwnedFeatureMember_1= ruleOwnedFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OwnedFeatureMember_1=ruleOwnedFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OwnedFeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureMember"


    // $ANTLR start "entryRuleTypeFeatureMember"
    // InternalKerML.g:3550:1: entryRuleTypeFeatureMember returns [EObject current=null] : iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF ;
    public final EObject entryRuleTypeFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFeatureMember = null;


        try {
            // InternalKerML.g:3550:58: (iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF )
            // InternalKerML.g:3551:2: iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFeatureMember=ruleTypeFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFeatureMember"


    // $ANTLR start "ruleTypeFeatureMember"
    // InternalKerML.g:3557:1: ruleTypeFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleTypeFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3563:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:3564:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:3564:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            // InternalKerML.g:3565:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getTypeFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_52);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,51,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeFeatureMemberAccess().getMemberKeyword_1());
              		
            }
            // InternalKerML.g:3580:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            // InternalKerML.g:3581:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            {
            // InternalKerML.g:3581:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            // InternalKerML.g:3582:5: lv_ownedRelatedElement_2_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeatureMember"


    // $ANTLR start "entryRuleOwnedFeatureMember"
    // InternalKerML.g:3603:1: entryRuleOwnedFeatureMember returns [EObject current=null] : iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF ;
    public final EObject entryRuleOwnedFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureMember = null;


        try {
            // InternalKerML.g:3603:59: (iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF )
            // InternalKerML.g:3604:2: iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureMember=ruleOwnedFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureMember"


    // $ANTLR start "ruleOwnedFeatureMember"
    // InternalKerML.g:3610:1: ruleOwnedFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleOwnedFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3616:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:3617:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:3617:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            // InternalKerML.g:3618:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getOwnedFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getOwnedFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_27);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:3629:3: ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            // InternalKerML.g:3630:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            {
            // InternalKerML.g:3630:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            // InternalKerML.g:3631:5: lv_ownedRelatedElement_1_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOwnedFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOwnedFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureMember"


    // $ANTLR start "entryRuleSpecialization"
    // InternalKerML.g:3652:1: entryRuleSpecialization returns [EObject current=null] : iv_ruleSpecialization= ruleSpecialization EOF ;
    public final EObject entryRuleSpecialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecialization = null;


        try {
            // InternalKerML.g:3652:55: (iv_ruleSpecialization= ruleSpecialization EOF )
            // InternalKerML.g:3653:2: iv_ruleSpecialization= ruleSpecialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecialization=ruleSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialization"


    // $ANTLR start "ruleSpecialization"
    // InternalKerML.g:3659:1: ruleSpecialization returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSpecialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:3665:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3666:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3666:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:3667:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3667:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==52) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalKerML.g:3668:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSpecializationAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3672:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( ((LA73_0>=RULE_ID && LA73_0<=RULE_UNRESTRICTED_NAME)||LA73_0==13) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalKerML.g:3673:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSpecializationRule());
                              					}
                              					newCompositeNode(grammarAccess.getSpecializationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_54);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,53,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSpecializationAccess().getSubtypeKeyword_1());
              		
            }
            // InternalKerML.g:3690:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalKerML.g:3691:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3691:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3692:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3692:5: ( ruleQualifiedName )
                    // InternalKerML.g:3693:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSpecializationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getSpecificTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3708:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3708:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3709:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3709:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3710:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecializationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:3728:3: (otherlv_5= ':>' | otherlv_6= 'specializes' )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==43) ) {
                alt76=1;
            }
            else if ( (LA76_0==44) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // InternalKerML.g:3729:4: otherlv_5= ':>'
                    {
                    otherlv_5=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSpecializationAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3734:4: otherlv_6= 'specializes'
                    {
                    otherlv_6=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSpecializationAccess().getSpecializesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3739:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalKerML.g:3740:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3740:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3741:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3741:5: ( ruleQualifiedName )
                    // InternalKerML.g:3742:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSpecializationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getGeneralTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3757:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3757:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3758:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3758:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3759:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecializationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSpecializationRule());
              			}
              			newCompositeNode(grammarAccess.getSpecializationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialization"


    // $ANTLR start "entryRuleOwnedSpecialization"
    // InternalKerML.g:3792:1: entryRuleOwnedSpecialization returns [EObject current=null] : iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF ;
    public final EObject entryRuleOwnedSpecialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedSpecialization = null;


        try {
            // InternalKerML.g:3792:60: (iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF )
            // InternalKerML.g:3793:2: iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedSpecializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedSpecialization=ruleOwnedSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedSpecialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedSpecialization"


    // $ANTLR start "ruleOwnedSpecialization"
    // InternalKerML.g:3799:1: ruleOwnedSpecialization returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedSpecialization() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3805:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:3806:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:3806:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalKerML.g:3807:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3807:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3808:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3808:4: ( ruleQualifiedName )
                    // InternalKerML.g:3809:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedSpecializationRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSpecializationAccess().getGeneralTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3824:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3824:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3825:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3825:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3826:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedSpecializationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedSpecialization"


    // $ANTLR start "entryRuleConjugation"
    // InternalKerML.g:3847:1: entryRuleConjugation returns [EObject current=null] : iv_ruleConjugation= ruleConjugation EOF ;
    public final EObject entryRuleConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConjugation = null;


        try {
            // InternalKerML.g:3847:52: (iv_ruleConjugation= ruleConjugation EOF )
            // InternalKerML.g:3848:2: iv_ruleConjugation= ruleConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConjugation=ruleConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConjugation"


    // $ANTLR start "ruleConjugation"
    // InternalKerML.g:3854:1: ruleConjugation returns [EObject current=null] : ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleConjugation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:3860:2: ( ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3861:2: ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3861:2: ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:3862:3: (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3862:3: (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==54) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalKerML.g:3863:4: otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,54,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getConjugationAccess().getConjugationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3867:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( ((LA79_0>=RULE_ID && LA79_0<=RULE_UNRESTRICTED_NAME)||LA79_0==13) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalKerML.g:3868:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getConjugationRule());
                              					}
                              					newCompositeNode(grammarAccess.getConjugationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_57);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,55,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConjugationAccess().getConjugateKeyword_1());
              		
            }
            // InternalKerML.g:3885:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalKerML.g:3886:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3886:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3887:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3887:5: ( ruleQualifiedName )
                    // InternalKerML.g:3888:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConjugationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getConjugatedTypeTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3903:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3903:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3904:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3904:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3905:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConjugationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:3923:3: (otherlv_5= '~' | otherlv_6= 'conjugates' )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==45) ) {
                alt82=1;
            }
            else if ( (LA82_0==46) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalKerML.g:3924:4: otherlv_5= '~'
                    {
                    otherlv_5=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConjugationAccess().getTildeKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3929:4: otherlv_6= 'conjugates'
                    {
                    otherlv_6=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getConjugationAccess().getConjugatesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3934:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalKerML.g:3935:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3935:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3936:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3936:5: ( ruleQualifiedName )
                    // InternalKerML.g:3937:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConjugationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOriginalTypeTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3952:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3952:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3953:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3953:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3954:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConjugationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConjugationRule());
              			}
              			newCompositeNode(grammarAccess.getConjugationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConjugation"


    // $ANTLR start "entryRuleOwnedConjugation"
    // InternalKerML.g:3987:1: entryRuleOwnedConjugation returns [EObject current=null] : iv_ruleOwnedConjugation= ruleOwnedConjugation EOF ;
    public final EObject entryRuleOwnedConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedConjugation = null;


        try {
            // InternalKerML.g:3987:57: (iv_ruleOwnedConjugation= ruleOwnedConjugation EOF )
            // InternalKerML.g:3988:2: iv_ruleOwnedConjugation= ruleOwnedConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedConjugation=ruleOwnedConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedConjugation"


    // $ANTLR start "ruleOwnedConjugation"
    // InternalKerML.g:3994:1: ruleOwnedConjugation returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedConjugation() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4000:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4001:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4001:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalKerML.g:4002:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4002:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4003:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4003:4: ( ruleQualifiedName )
                    // InternalKerML.g:4004:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedConjugationRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4019:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4019:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4020:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4020:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4021:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedConjugationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedConjugation"


    // $ANTLR start "entryRuleDisjoining"
    // InternalKerML.g:4042:1: entryRuleDisjoining returns [EObject current=null] : iv_ruleDisjoining= ruleDisjoining EOF ;
    public final EObject entryRuleDisjoining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDisjoining = null;


        try {
            // InternalKerML.g:4042:51: (iv_ruleDisjoining= ruleDisjoining EOF )
            // InternalKerML.g:4043:2: iv_ruleDisjoining= ruleDisjoining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDisjoiningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDisjoining=ruleDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDisjoining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDisjoining"


    // $ANTLR start "ruleDisjoining"
    // InternalKerML.g:4049:1: ruleDisjoining returns [EObject current=null] : ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleDisjoining() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_7_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:4055:2: ( ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:4056:2: ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:4056:2: ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:4057:3: (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:4057:3: (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==56) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalKerML.g:4058:4: otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,56,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDisjoiningAccess().getDisjoiningKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:4062:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( ((LA85_0>=RULE_ID && LA85_0<=RULE_UNRESTRICTED_NAME)||LA85_0==13) ) {
                        alt85=1;
                    }
                    switch (alt85) {
                        case 1 :
                            // InternalKerML.g:4063:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getDisjoiningRule());
                              					}
                              					newCompositeNode(grammarAccess.getDisjoiningAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_60);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,47,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDisjoiningAccess().getDisjointKeyword_1());
              		
            }
            // InternalKerML.g:4080:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // InternalKerML.g:4081:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4081:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4082:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4082:5: ( ruleQualifiedName )
                    // InternalKerML.g:4083:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDisjoiningRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getTypeDisjoinedTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4098:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4098:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4099:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4099:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4100:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDisjoiningRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDisjoiningAccess().getFromKeyword_3());
              		
            }
            // InternalKerML.g:4122:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )
            int alt88=2;
            alt88 = dfa88.predict(input);
            switch (alt88) {
                case 1 :
                    // InternalKerML.g:4123:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4123:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4124:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4124:5: ( ruleQualifiedName )
                    // InternalKerML.g:4125:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDisjoiningRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getDisjoiningTypeTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4140:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4140:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4141:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4141:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4142:6: lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_ownedRelatedElement_7_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDisjoiningRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDisjoiningRule());
              			}
              			newCompositeNode(grammarAccess.getDisjoiningAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDisjoining"


    // $ANTLR start "entryRuleOwnedDisjoining"
    // InternalKerML.g:4175:1: entryRuleOwnedDisjoining returns [EObject current=null] : iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF ;
    public final EObject entryRuleOwnedDisjoining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedDisjoining = null;


        try {
            // InternalKerML.g:4175:56: (iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF )
            // InternalKerML.g:4176:2: iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedDisjoiningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedDisjoining=ruleOwnedDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedDisjoining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedDisjoining"


    // $ANTLR start "ruleOwnedDisjoining"
    // InternalKerML.g:4182:1: ruleOwnedDisjoining returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedDisjoining() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4188:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4189:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4189:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt89=2;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    // InternalKerML.g:4190:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4190:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4191:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4191:4: ( ruleQualifiedName )
                    // InternalKerML.g:4192:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedDisjoiningRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedDisjoiningAccess().getDisjoiningTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4207:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4207:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4208:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4208:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4209:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedDisjoiningRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedDisjoining"


    // $ANTLR start "entryRuleUnioning"
    // InternalKerML.g:4230:1: entryRuleUnioning returns [EObject current=null] : iv_ruleUnioning= ruleUnioning EOF ;
    public final EObject entryRuleUnioning() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnioning = null;


        try {
            // InternalKerML.g:4230:49: (iv_ruleUnioning= ruleUnioning EOF )
            // InternalKerML.g:4231:2: iv_ruleUnioning= ruleUnioning EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnioningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnioning=ruleUnioning();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnioning; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnioning"


    // $ANTLR start "ruleUnioning"
    // InternalKerML.g:4237:1: ruleUnioning returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleUnioning() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4243:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4244:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4244:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalKerML.g:4245:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4245:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4246:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4246:4: ( ruleQualifiedName )
                    // InternalKerML.g:4247:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUnioningRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnioningAccess().getUnioningTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4262:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4262:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4263:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4263:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4264:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnioningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnioningRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnioning"


    // $ANTLR start "entryRuleIntersecting"
    // InternalKerML.g:4285:1: entryRuleIntersecting returns [EObject current=null] : iv_ruleIntersecting= ruleIntersecting EOF ;
    public final EObject entryRuleIntersecting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersecting = null;


        try {
            // InternalKerML.g:4285:53: (iv_ruleIntersecting= ruleIntersecting EOF )
            // InternalKerML.g:4286:2: iv_ruleIntersecting= ruleIntersecting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersecting=ruleIntersecting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersecting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntersecting"


    // $ANTLR start "ruleIntersecting"
    // InternalKerML.g:4292:1: ruleIntersecting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleIntersecting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4298:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4299:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4299:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalKerML.g:4300:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4300:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4301:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4301:4: ( ruleQualifiedName )
                    // InternalKerML.g:4302:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getIntersectingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntersectingAccess().getIntersectingTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4317:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4317:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4318:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4318:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4319:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntersectingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIntersectingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntersecting"


    // $ANTLR start "entryRuleDifferencing"
    // InternalKerML.g:4340:1: entryRuleDifferencing returns [EObject current=null] : iv_ruleDifferencing= ruleDifferencing EOF ;
    public final EObject entryRuleDifferencing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDifferencing = null;


        try {
            // InternalKerML.g:4340:53: (iv_ruleDifferencing= ruleDifferencing EOF )
            // InternalKerML.g:4341:2: iv_ruleDifferencing= ruleDifferencing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDifferencingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDifferencing=ruleDifferencing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDifferencing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDifferencing"


    // $ANTLR start "ruleDifferencing"
    // InternalKerML.g:4347:1: ruleDifferencing returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleDifferencing() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4353:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4354:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4354:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt92=2;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // InternalKerML.g:4355:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4355:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4356:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4356:4: ( ruleQualifiedName )
                    // InternalKerML.g:4357:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDifferencingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDifferencingAccess().getDifferencingTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4372:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4372:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4373:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4373:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4374:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDifferencingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDifferencingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDifferencing"


    // $ANTLR start "entryRuleClassifier"
    // InternalKerML.g:4395:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKerML.g:4395:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKerML.g:4396:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKerML.g:4402:1: ruleClassifier returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:4408:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:4409:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:4409:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:4410:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassifierRule());
              			}
              			newCompositeNode(grammarAccess.getClassifierAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_61);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,57,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassifierAccess().getClassifierKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassifierRule());
              			}
              			newCompositeNode(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassifierRule());
              			}
              			newCompositeNode(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "ruleClassifierDeclaration"
    // InternalKerML.g:4452:1: ruleClassifierDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) ;
    public final EObject ruleClassifierDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject this_SuperclassingPart_3 = null;

        EObject this_ClassifierConjugationPart_4 = null;

        EObject this_TypeRelationshipPart_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:4458:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) )
            // InternalKerML.g:4459:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            {
            // InternalKerML.g:4459:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            // InternalKerML.g:4460:3: ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            {
            // InternalKerML.g:4460:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==32) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalKerML.g:4461:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:4461:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:4462:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,32,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4474:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( ((LA94_0>=RULE_ID && LA94_0<=RULE_UNRESTRICTED_NAME)||LA94_0==13) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalKerML.g:4475:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_64);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4487:3: ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==88) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalKerML.g:4488:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:4488:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:4489:5: lv_ownedRelationship_2_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_65);
                    lv_ownedRelationship_2_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4506:3: (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )?
            int alt96=3;
            int LA96_0 = input.LA(1);

            if ( ((LA96_0>=43 && LA96_0<=44)) ) {
                alt96=1;
            }
            else if ( ((LA96_0>=45 && LA96_0<=46)) ) {
                alt96=2;
            }
            switch (alt96) {
                case 1 :
                    // InternalKerML.g:4507:4: this_SuperclassingPart_3= ruleSuperclassingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getSuperclassingPartParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_49);
                    this_SuperclassingPart_3=ruleSuperclassingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SuperclassingPart_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4519:4: this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getClassifierConjugationPartParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_49);
                    this_ClassifierConjugationPart_4=ruleClassifierConjugationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ClassifierConjugationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4531:3: (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( ((LA97_0>=47 && LA97_0<=50)) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalKerML.g:4532:4: this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getTypeRelationshipPartParserRuleCall_4());
            	      			
            	    }
            	    pushFollow(FOLLOW_49);
            	    this_TypeRelationshipPart_5=ruleTypeRelationshipPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_TypeRelationshipPart_5;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierDeclaration"


    // $ANTLR start "ruleSuperclassingPart"
    // InternalKerML.g:4549:1: ruleSuperclassingPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* ) ;
    public final EObject ruleSuperclassingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4555:2: ( ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* ) )
            // InternalKerML.g:4556:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* )
            {
            // InternalKerML.g:4556:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* )
            // InternalKerML.g:4557:3: (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )*
            {
            // InternalKerML.g:4557:3: (otherlv_0= ':>' | otherlv_1= 'specializes' )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==43) ) {
                alt98=1;
            }
            else if ( (LA98_0==44) ) {
                alt98=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // InternalKerML.g:4558:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSuperclassingPartAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4563:4: otherlv_1= 'specializes'
                    {
                    otherlv_1=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSuperclassingPartAccess().getSpecializesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4568:3: ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) )
            // InternalKerML.g:4569:4: (lv_ownedRelationship_2_0= ruleOwnedsubclassification )
            {
            // InternalKerML.g:4569:4: (lv_ownedRelationship_2_0= ruleOwnedsubclassification )
            // InternalKerML.g:4570:5: lv_ownedRelationship_2_0= ruleOwnedsubclassification
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedsubclassificationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_2_0=ruleOwnedsubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.Ownedsubclassification");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:4587:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==22) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalKerML.g:4588:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSuperclassingPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:4592:4: ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) )
            	    // InternalKerML.g:4593:5: (lv_ownedRelationship_4_0= ruleOwnedsubclassification )
            	    {
            	    // InternalKerML.g:4593:5: (lv_ownedRelationship_4_0= ruleOwnedsubclassification )
            	    // InternalKerML.g:4594:6: lv_ownedRelationship_4_0= ruleOwnedsubclassification
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedsubclassificationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_4_0=ruleOwnedsubclassification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.Ownedsubclassification");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuperclassingPart"


    // $ANTLR start "ruleClassifierConjugationPart"
    // InternalKerML.g:4617:1: ruleClassifierConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) ) ;
    public final EObject ruleClassifierConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4623:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) ) )
            // InternalKerML.g:4624:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) )
            {
            // InternalKerML.g:4624:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) )
            // InternalKerML.g:4625:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) )
            {
            // InternalKerML.g:4625:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==45) ) {
                alt100=1;
            }
            else if ( (LA100_0==46) ) {
                alt100=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalKerML.g:4626:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getClassifierConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4631:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getClassifierConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4636:3: ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) )
            // InternalKerML.g:4637:4: (lv_ownedRelationship_2_0= ruleClassifierConjugation )
            {
            // InternalKerML.g:4637:4: (lv_ownedRelationship_2_0= ruleClassifierConjugation )
            // InternalKerML.g:4638:5: lv_ownedRelationship_2_0= ruleClassifierConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationshipClassifierConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleClassifierConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.ClassifierConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierConjugationPart"


    // $ANTLR start "entryRuleSubclassification"
    // InternalKerML.g:4659:1: entryRuleSubclassification returns [EObject current=null] : iv_ruleSubclassification= ruleSubclassification EOF ;
    public final EObject entryRuleSubclassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubclassification = null;


        try {
            // InternalKerML.g:4659:58: (iv_ruleSubclassification= ruleSubclassification EOF )
            // InternalKerML.g:4660:2: iv_ruleSubclassification= ruleSubclassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubclassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubclassification=ruleSubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubclassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubclassification"


    // $ANTLR start "ruleSubclassification"
    // InternalKerML.g:4666:1: ruleSubclassification returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSubclassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipBody_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:4672:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:4673:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:4673:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] )
            // InternalKerML.g:4674:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:4674:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==52) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalKerML.g:4675:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubclassificationAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:4679:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( ((LA101_0>=RULE_ID && LA101_0<=RULE_UNRESTRICTED_NAME)||LA101_0==13) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalKerML.g:4680:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSubclassificationRule());
                              					}
                              					newCompositeNode(grammarAccess.getSubclassificationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_67);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,58,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubclassificationAccess().getSubclassifierKeyword_1());
              		
            }
            // InternalKerML.g:4697:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4698:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:4698:4: ( ruleQualifiedName )
            // InternalKerML.g:4699:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSubclassificationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubclassificationAccess().getSubclassifierClassifierCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_55);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:4713:3: (otherlv_4= ':>' | otherlv_5= 'specializes' )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==43) ) {
                alt103=1;
            }
            else if ( (LA103_0==44) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // InternalKerML.g:4714:4: otherlv_4= ':>'
                    {
                    otherlv_4=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSubclassificationAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4719:4: otherlv_5= 'specializes'
                    {
                    otherlv_5=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSubclassificationAccess().getSpecializesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4724:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4725:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:4725:4: ( ruleQualifiedName )
            // InternalKerML.g:4726:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSubclassificationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubclassificationAccess().getSuperclassifierClassifierCrossReference_4_0());
              				
            }
            pushFollow(FOLLOW_11);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubclassificationRule());
              			}
              			newCompositeNode(grammarAccess.getSubclassificationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_7=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_7;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubclassification"


    // $ANTLR start "entryRuleOwnedsubclassification"
    // InternalKerML.g:4755:1: entryRuleOwnedsubclassification returns [EObject current=null] : iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF ;
    public final EObject entryRuleOwnedsubclassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedsubclassification = null;


        try {
            // InternalKerML.g:4755:63: (iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF )
            // InternalKerML.g:4756:2: iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedsubclassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedsubclassification=ruleOwnedsubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedsubclassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedsubclassification"


    // $ANTLR start "ruleOwnedsubclassification"
    // InternalKerML.g:4762:1: ruleOwnedsubclassification returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedsubclassification() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:4768:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:4769:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:4769:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4770:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:4770:3: ( ruleQualifiedName )
            // InternalKerML.g:4771:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedsubclassificationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedsubclassificationAccess().getSuperclassifierClassifierCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedsubclassification"


    // $ANTLR start "entryRuleClassifierConjugation"
    // InternalKerML.g:4788:1: entryRuleClassifierConjugation returns [EObject current=null] : iv_ruleClassifierConjugation= ruleClassifierConjugation EOF ;
    public final EObject entryRuleClassifierConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierConjugation = null;


        try {
            // InternalKerML.g:4788:62: (iv_ruleClassifierConjugation= ruleClassifierConjugation EOF )
            // InternalKerML.g:4789:2: iv_ruleClassifierConjugation= ruleClassifierConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierConjugation=ruleClassifierConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierConjugation"


    // $ANTLR start "ruleClassifierConjugation"
    // InternalKerML.g:4795:1: ruleClassifierConjugation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleClassifierConjugation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:4801:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:4802:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:4802:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4803:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:4803:3: ( ruleQualifiedName )
            // InternalKerML.g:4804:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getClassifierConjugationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierConjugation"


    // $ANTLR start "ruleFeaturePrefix"
    // InternalKerML.g:4822:1: ruleFeaturePrefix[EObject in_current] returns [EObject current=in_current] : ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ( (lv_ownedRelationship_7_0= rulePrefixMetadataMember ) )* ) ;
    public final EObject ruleFeaturePrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_1_0=null;
        Token lv_isComposite_2_0=null;
        Token lv_isPortion_3_0=null;
        Token lv_isReadOnly_4_0=null;
        Token lv_isDerived_5_0=null;
        Token lv_isEnd_6_0=null;
        Enumerator lv_direction_0_0 = null;

        EObject lv_ownedRelationship_7_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4828:2: ( ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ( (lv_ownedRelationship_7_0= rulePrefixMetadataMember ) )* ) )
            // InternalKerML.g:4829:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ( (lv_ownedRelationship_7_0= rulePrefixMetadataMember ) )* )
            {
            // InternalKerML.g:4829:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ( (lv_ownedRelationship_7_0= rulePrefixMetadataMember ) )* )
            // InternalKerML.g:4830:3: ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ( (lv_ownedRelationship_7_0= rulePrefixMetadataMember ) )*
            {
            // InternalKerML.g:4830:3: ( (lv_direction_0_0= ruleFeatureDirection ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=151 && LA104_0<=153)) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalKerML.g:4831:4: (lv_direction_0_0= ruleFeatureDirection )
                    {
                    // InternalKerML.g:4831:4: (lv_direction_0_0= ruleFeatureDirection )
                    // InternalKerML.g:4832:5: lv_direction_0_0= ruleFeatureDirection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeaturePrefixAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_68);
                    lv_direction_0_0=ruleFeatureDirection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFeaturePrefixRule());
                      					}
                      					set(
                      						current,
                      						"direction",
                      						lv_direction_0_0,
                      						"org.omg.kerml.xtext.KerML.FeatureDirection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4849:3: ( (lv_isAbstract_1_0= 'abstract' ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==41) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalKerML.g:4850:4: (lv_isAbstract_1_0= 'abstract' )
                    {
                    // InternalKerML.g:4850:4: (lv_isAbstract_1_0= 'abstract' )
                    // InternalKerML.g:4851:5: lv_isAbstract_1_0= 'abstract'
                    {
                    lv_isAbstract_1_0=(Token)match(input,41,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_1_0, grammarAccess.getFeaturePrefixAccess().getIsAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_1_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4863:3: ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )?
            int alt106=3;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==59) ) {
                alt106=1;
            }
            else if ( (LA106_0==60) ) {
                alt106=2;
            }
            switch (alt106) {
                case 1 :
                    // InternalKerML.g:4864:4: ( (lv_isComposite_2_0= 'composite' ) )
                    {
                    // InternalKerML.g:4864:4: ( (lv_isComposite_2_0= 'composite' ) )
                    // InternalKerML.g:4865:5: (lv_isComposite_2_0= 'composite' )
                    {
                    // InternalKerML.g:4865:5: (lv_isComposite_2_0= 'composite' )
                    // InternalKerML.g:4866:6: lv_isComposite_2_0= 'composite'
                    {
                    lv_isComposite_2_0=(Token)match(input,59,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isComposite_2_0, grammarAccess.getFeaturePrefixAccess().getIsCompositeCompositeKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      						}
                      						setWithLastConsumed(current, "isComposite", lv_isComposite_2_0 != null, "composite");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4879:4: ( (lv_isPortion_3_0= 'portion' ) )
                    {
                    // InternalKerML.g:4879:4: ( (lv_isPortion_3_0= 'portion' ) )
                    // InternalKerML.g:4880:5: (lv_isPortion_3_0= 'portion' )
                    {
                    // InternalKerML.g:4880:5: (lv_isPortion_3_0= 'portion' )
                    // InternalKerML.g:4881:6: lv_isPortion_3_0= 'portion'
                    {
                    lv_isPortion_3_0=(Token)match(input,60,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isPortion_3_0, grammarAccess.getFeaturePrefixAccess().getIsPortionPortionKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      						}
                      						setWithLastConsumed(current, "isPortion", lv_isPortion_3_0 != null, "portion");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:4894:3: ( (lv_isReadOnly_4_0= 'readonly' ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==61) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalKerML.g:4895:4: (lv_isReadOnly_4_0= 'readonly' )
                    {
                    // InternalKerML.g:4895:4: (lv_isReadOnly_4_0= 'readonly' )
                    // InternalKerML.g:4896:5: lv_isReadOnly_4_0= 'readonly'
                    {
                    lv_isReadOnly_4_0=(Token)match(input,61,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isReadOnly_4_0, grammarAccess.getFeaturePrefixAccess().getIsReadOnlyReadonlyKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isReadOnly", lv_isReadOnly_4_0 != null, "readonly");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4908:3: ( (lv_isDerived_5_0= 'derived' ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==62) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalKerML.g:4909:4: (lv_isDerived_5_0= 'derived' )
                    {
                    // InternalKerML.g:4909:4: (lv_isDerived_5_0= 'derived' )
                    // InternalKerML.g:4910:5: lv_isDerived_5_0= 'derived'
                    {
                    lv_isDerived_5_0=(Token)match(input,62,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isDerived_5_0, grammarAccess.getFeaturePrefixAccess().getIsDerivedDerivedKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isDerived", lv_isDerived_5_0 != null, "derived");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4922:3: ( (lv_isEnd_6_0= 'end' ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==63) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalKerML.g:4923:4: (lv_isEnd_6_0= 'end' )
                    {
                    // InternalKerML.g:4923:4: (lv_isEnd_6_0= 'end' )
                    // InternalKerML.g:4924:5: lv_isEnd_6_0= 'end'
                    {
                    lv_isEnd_6_0=(Token)match(input,63,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isEnd_6_0, grammarAccess.getFeaturePrefixAccess().getIsEndEndKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isEnd", lv_isEnd_6_0 != null, "end");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4936:3: ( (lv_ownedRelationship_7_0= rulePrefixMetadataMember ) )*
            loop110:
            do {
                int alt110=2;
                alt110 = dfa110.predict(input);
                switch (alt110) {
            	case 1 :
            	    // InternalKerML.g:4937:4: (lv_ownedRelationship_7_0= rulePrefixMetadataMember )
            	    {
            	    // InternalKerML.g:4937:4: (lv_ownedRelationship_7_0= rulePrefixMetadataMember )
            	    // InternalKerML.g:4938:5: lv_ownedRelationship_7_0= rulePrefixMetadataMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFeaturePrefixAccess().getOwnedRelationshipPrefixMetadataMemberParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_ownedRelationship_7_0=rulePrefixMetadataMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFeaturePrefixRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_7_0,
            	      						"org.omg.kerml.xtext.KerML.PrefixMetadataMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeaturePrefix"


    // $ANTLR start "entryRuleFeature"
    // InternalKerML.g:4959:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeature = null;


        try {
            // InternalKerML.g:4959:48: (iv_ruleFeature= ruleFeature EOF )
            // InternalKerML.g:4960:2: iv_ruleFeature= ruleFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeature=ruleFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeature"


    // $ANTLR start "ruleFeature"
    // InternalKerML.g:4966:1: ruleFeature returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) ) | otherlv_4= 'feature' ) (this_ValuePart_5= ruleValuePart[$current] )? this_TypeBody_6= ruleTypeBody[$current] ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_FeatureDeclaration_2 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject this_ValuePart_5 = null;

        EObject this_TypeBody_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:4972:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) ) | otherlv_4= 'feature' ) (this_ValuePart_5= ruleValuePart[$current] )? this_TypeBody_6= ruleTypeBody[$current] ) )
            // InternalKerML.g:4973:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) ) | otherlv_4= 'feature' ) (this_ValuePart_5= ruleValuePart[$current] )? this_TypeBody_6= ruleTypeBody[$current] )
            {
            // InternalKerML.g:4973:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) ) | otherlv_4= 'feature' ) (this_ValuePart_5= ruleValuePart[$current] )? this_TypeBody_6= ruleTypeBody[$current] )
            // InternalKerML.g:4974:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) ) | otherlv_4= 'feature' ) (this_ValuePart_5= ruleValuePart[$current] )? this_TypeBody_6= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_73);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:4985:3: ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) ) | otherlv_4= 'feature' )
            int alt112=3;
            switch ( input.LA(1) ) {
            case 64:
                {
                int LA112_1 = input.LA(2);

                if ( ((LA112_1>=RULE_ID && LA112_1<=RULE_UNRESTRICTED_NAME)||LA112_1==13||LA112_1==32||LA112_1==43||(LA112_1>=45 && LA112_1<=46)||(LA112_1>=70 && LA112_1<=78)||LA112_1==88) ) {
                    alt112=1;
                }
                else if ( ((LA112_1>=16 && LA112_1<=17)||(LA112_1>=84 && LA112_1<=86)) ) {
                    alt112=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 112, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
            case 32:
            case 43:
            case 45:
            case 46:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
                {
                alt112=1;
                }
                break;
            case 115:
                {
                alt112=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }

            switch (alt112) {
                case 1 :
                    // InternalKerML.g:4986:4: ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] )
                    {
                    // InternalKerML.g:4986:4: ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] )
                    // InternalKerML.g:4987:5: (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current]
                    {
                    // InternalKerML.g:4987:5: (otherlv_1= 'feature' )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==64) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalKerML.g:4988:6: otherlv_1= 'feature'
                            {
                            otherlv_1=(Token)match(input,64,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getFeatureAccess().getFeatureKeyword_1_0_0());
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureRule());
                      					}
                      					newCompositeNode(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_1_0_1());
                      				
                    }
                    pushFollow(FOLLOW_75);
                    this_FeatureDeclaration_2=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_FeatureDeclaration_2;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5006:4: ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) )
                    {
                    // InternalKerML.g:5006:4: ( (lv_ownedRelationship_3_0= rulePrefixMetadataMember ) )
                    // InternalKerML.g:5007:5: (lv_ownedRelationship_3_0= rulePrefixMetadataMember )
                    {
                    // InternalKerML.g:5007:5: (lv_ownedRelationship_3_0= rulePrefixMetadataMember )
                    // InternalKerML.g:5008:6: lv_ownedRelationship_3_0= rulePrefixMetadataMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureAccess().getOwnedRelationshipPrefixMetadataMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_75);
                    lv_ownedRelationship_3_0=rulePrefixMetadataMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.xtext.KerML.PrefixMetadataMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:5026:4: otherlv_4= 'feature'
                    {
                    otherlv_4=(Token)match(input,64,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFeatureAccess().getFeatureKeyword_1_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5031:3: (this_ValuePart_5= ruleValuePart[$current] )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( ((LA113_0>=84 && LA113_0<=86)) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalKerML.g:5032:4: this_ValuePart_5= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureAccess().getValuePartParserRuleCall_2());
                      			
                    }
                    pushFollow(FOLLOW_24);
                    this_ValuePart_5=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_6=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_6;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeature"


    // $ANTLR start "ruleFeatureDeclaration"
    // InternalKerML.g:5060:1: ruleFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* ) ;
    public final EObject ruleFeatureDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject this_FeatureSpecializationPart_2 = null;

        EObject this_FeatureConjugationPart_3 = null;

        EObject this_FeatureSpecializationPart_4 = null;

        EObject this_FeatureConjugationPart_5 = null;

        EObject this_FeatureRelationshipPart_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:5066:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* ) )
            // InternalKerML.g:5067:2: ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* )
            {
            // InternalKerML.g:5067:2: ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* )
            // InternalKerML.g:5068:3: ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )*
            {
            // InternalKerML.g:5068:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==32) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalKerML.g:5069:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:5069:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:5070:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,32,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:5082:3: ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] )
            int alt116=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
                {
                alt116=1;
                }
                break;
            case 43:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
                {
                alt116=2;
                }
                break;
            case 45:
            case 46:
                {
                alt116=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }

            switch (alt116) {
                case 1 :
                    // InternalKerML.g:5083:4: (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? )
                    {
                    // InternalKerML.g:5083:4: (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? )
                    // InternalKerML.g:5084:5: this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )?
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      					}
                      					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getIdentificationParserRuleCall_1_0_0());
                      				
                    }
                    pushFollow(FOLLOW_76);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_Identification_1;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalKerML.g:5095:5: (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )?
                    int alt115=3;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==43||(LA115_0>=70 && LA115_0<=78)||LA115_0==88) ) {
                        alt115=1;
                    }
                    else if ( ((LA115_0>=45 && LA115_0<=46)) ) {
                        alt115=2;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalKerML.g:5096:6: this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_77);
                            this_FeatureSpecializationPart_2=ruleFeatureSpecializationPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureSpecializationPart_2;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:5108:6: this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1());
                              					
                            }
                            pushFollow(FOLLOW_77);
                            this_FeatureConjugationPart_3=ruleFeatureConjugationPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureConjugationPart_3;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5122:4: this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_77);
                    this_FeatureSpecializationPart_4=ruleFeatureSpecializationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureSpecializationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:5134:4: this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FOLLOW_77);
                    this_FeatureConjugationPart_5=ruleFeatureConjugationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureConjugationPart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5146:3: (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( ((LA117_0>=47 && LA117_0<=50)||(LA117_0>=65 && LA117_0<=66)||LA117_0==68) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalKerML.g:5147:4: this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureRelationshipPartParserRuleCall_2());
            	      			
            	    }
            	    pushFollow(FOLLOW_77);
            	    this_FeatureRelationshipPart_6=ruleFeatureRelationshipPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_FeatureRelationshipPart_6;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDeclaration"


    // $ANTLR start "ruleFeatureRelationshipPart"
    // InternalKerML.g:5164:1: ruleFeatureRelationshipPart[EObject in_current] returns [EObject current=in_current] : (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] ) ;
    public final EObject ruleFeatureRelationshipPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_TypeRelationshipPart_0 = null;

        EObject this_ChainingPart_1 = null;

        EObject this_InvertingPart_2 = null;

        EObject this_TypeFeaturingPart_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:5170:2: ( (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] ) )
            // InternalKerML.g:5171:2: (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] )
            {
            // InternalKerML.g:5171:2: (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] )
            int alt118=4;
            switch ( input.LA(1) ) {
            case 47:
            case 48:
            case 49:
            case 50:
                {
                alt118=1;
                }
                break;
            case 65:
                {
                alt118=2;
                }
                break;
            case 66:
                {
                alt118=3;
                }
                break;
            case 68:
                {
                alt118=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }

            switch (alt118) {
                case 1 :
                    // InternalKerML.g:5172:3: this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getTypeRelationshipPartParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRelationshipPart_0=ruleTypeRelationshipPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeRelationshipPart_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5184:3: this_ChainingPart_1= ruleChainingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getChainingPartParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChainingPart_1=ruleChainingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChainingPart_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:5196:3: this_InvertingPart_2= ruleInvertingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getInvertingPartParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InvertingPart_2=ruleInvertingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvertingPart_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:5208:3: this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getTypeFeaturingPartParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeaturingPart_3=ruleTypeFeaturingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeaturingPart_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureRelationshipPart"


    // $ANTLR start "ruleChainingPart"
    // InternalKerML.g:5224:1: ruleChainingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) ) ;
    public final EObject ruleChainingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject this_FeatureChain_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:5230:2: ( (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) ) )
            // InternalKerML.g:5231:2: (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) )
            {
            // InternalKerML.g:5231:2: (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) )
            // InternalKerML.g:5232:3: otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] )
            {
            otherlv_0=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChainingPartAccess().getChainsKeyword_0());
              		
            }
            // InternalKerML.g:5236:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] )
            int alt119=2;
            alt119 = dfa119.predict(input);
            switch (alt119) {
                case 1 :
                    // InternalKerML.g:5237:4: ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) )
                    {
                    // InternalKerML.g:5237:4: ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) )
                    // InternalKerML.g:5238:5: (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining )
                    {
                    // InternalKerML.g:5238:5: (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining )
                    // InternalKerML.g:5239:6: lv_ownedRelationship_1_0= ruleOwnedFeatureChaining
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChainingPartAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedFeatureChaining();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChainingPartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5257:4: this_FeatureChain_2= ruleFeatureChain[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getChainingPartRule());
                      				}
                      				newCompositeNode(grammarAccess.getChainingPartAccess().getFeatureChainParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureChain_2=ruleFeatureChain(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureChain_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChainingPart"


    // $ANTLR start "ruleInvertingPart"
    // InternalKerML.g:5274:1: ruleInvertingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) ) ;
    public final EObject ruleInvertingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5280:2: ( (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) ) )
            // InternalKerML.g:5281:2: (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) )
            {
            // InternalKerML.g:5281:2: (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) )
            // InternalKerML.g:5282:3: otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) )
            {
            otherlv_0=(Token)match(input,66,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInvertingPartAccess().getInverseKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvertingPartAccess().getOfKeyword_1());
              		
            }
            // InternalKerML.g:5290:3: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) )
            // InternalKerML.g:5291:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting )
            {
            // InternalKerML.g:5291:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting )
            // InternalKerML.g:5292:5: lv_ownedRelationship_2_0= ruleOwnedFeatureInverting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvertingPartAccess().getOwnedRelationshipOwnedFeatureInvertingParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvertingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureInverting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvertingPart"


    // $ANTLR start "ruleTypeFeaturingPart"
    // InternalKerML.g:5314:1: ruleTypeFeaturingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* ) ;
    public final EObject ruleTypeFeaturingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5320:2: ( (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* ) )
            // InternalKerML.g:5321:2: (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* )
            {
            // InternalKerML.g:5321:2: (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* )
            // InternalKerML.g:5322:3: otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )*
            {
            otherlv_0=(Token)match(input,68,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingPartAccess().getFeaturedKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeFeaturingPartAccess().getByKeyword_1());
              		
            }
            // InternalKerML.g:5330:3: ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) )
            // InternalKerML.g:5331:4: (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing )
            {
            // InternalKerML.g:5331:4: (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing )
            // InternalKerML.g:5332:5: lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_2_0=ruleOwnedTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:5349:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==22) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalKerML.g:5350:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTypeFeaturingPartAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKerML.g:5354:4: ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) )
            	    // InternalKerML.g:5355:5: (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing )
            	    {
            	    // InternalKerML.g:5355:5: (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing )
            	    // InternalKerML.g:5356:6: lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_4_0=ruleOwnedTypeFeaturing();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeaturingPart"


    // $ANTLR start "ruleFeatureSpecializationPart"
    // InternalKerML.g:5379:1: ruleFeatureSpecializationPart[EObject in_current] returns [EObject current=in_current] : ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) ) ;
    public final EObject ruleFeatureSpecializationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureSpecialization_0 = null;

        EObject this_MultiplicityPart_1 = null;

        EObject this_FeatureSpecialization_2 = null;

        EObject this_MultiplicityPart_3 = null;

        EObject this_FeatureSpecialization_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:5385:2: ( ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) ) )
            // InternalKerML.g:5386:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) )
            {
            // InternalKerML.g:5386:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==43||(LA125_0>=72 && LA125_0<=78)) ) {
                alt125=1;
            }
            else if ( ((LA125_0>=70 && LA125_0<=71)||LA125_0==88) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    // InternalKerML.g:5387:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    {
                    // InternalKerML.g:5387:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    // InternalKerML.g:5388:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    {
                    // InternalKerML.g:5388:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+
                    int cnt121=0;
                    loop121:
                    do {
                        int alt121=2;
                        alt121 = dfa121.predict(input);
                        switch (alt121) {
                    	case 1 :
                    	    // InternalKerML.g:5389:5: ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    this_FeatureSpecialization_0=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_0;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt121 >= 1 ) break loop121;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(121, input);
                                throw eee;
                        }
                        cnt121++;
                    } while (true);

                    // InternalKerML.g:5402:4: (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )?
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( ((LA122_0>=70 && LA122_0<=71)||LA122_0==88) ) {
                        alt122=1;
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalKerML.g:5403:5: this_MultiplicityPart_1= ruleMultiplicityPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_81);
                            this_MultiplicityPart_1=ruleMultiplicityPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_MultiplicityPart_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:5415:4: (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    loop123:
                    do {
                        int alt123=2;
                        int LA123_0 = input.LA(1);

                        if ( (LA123_0==43||(LA123_0>=72 && LA123_0<=78)) ) {
                            alt123=1;
                        }


                        switch (alt123) {
                    	case 1 :
                    	    // InternalKerML.g:5416:5: this_FeatureSpecialization_2= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_2());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    this_FeatureSpecialization_2=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop123;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5430:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* )
                    {
                    // InternalKerML.g:5430:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* )
                    // InternalKerML.g:5431:4: this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )*
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_81);
                    this_MultiplicityPart_3=ruleMultiplicityPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MultiplicityPart_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:5442:4: (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==43||(LA124_0>=72 && LA124_0<=78)) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalKerML.g:5443:5: this_FeatureSpecialization_4= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    this_FeatureSpecialization_4=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_4;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureSpecializationPart"


    // $ANTLR start "ruleMultiplicityPart"
    // InternalKerML.g:5461:1: ruleMultiplicityPart[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) ) ;
    public final EObject ruleMultiplicityPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isOrdered_2_0=null;
        Token lv_isNonunique_3_0=null;
        Token lv_isNonunique_4_0=null;
        Token lv_isOrdered_5_0=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5467:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) ) )
            // InternalKerML.g:5468:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )
            {
            // InternalKerML.g:5468:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )
            int alt130=2;
            alt130 = dfa130.predict(input);
            switch (alt130) {
                case 1 :
                    // InternalKerML.g:5469:3: ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) )
                    {
                    // InternalKerML.g:5469:3: ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) )
                    // InternalKerML.g:5470:4: (lv_ownedRelationship_0_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:5470:4: (lv_ownedRelationship_0_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:5471:5: lv_ownedRelationship_0_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5489:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) )
                    {
                    // InternalKerML.g:5489:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) )
                    // InternalKerML.g:5490:4: ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) )
                    {
                    // InternalKerML.g:5490:4: ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==88) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // InternalKerML.g:5491:5: (lv_ownedRelationship_1_0= ruleOwnedMultiplicity )
                            {
                            // InternalKerML.g:5491:5: (lv_ownedRelationship_1_0= ruleOwnedMultiplicity )
                            // InternalKerML.g:5492:6: lv_ownedRelationship_1_0= ruleOwnedMultiplicity
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_82);
                            lv_ownedRelationship_1_0=ruleOwnedMultiplicity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
                              						}
                              						add(
                              							current,
                              							"ownedRelationship",
                              							lv_ownedRelationship_1_0,
                              							"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:5509:4: ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) )
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==70) ) {
                        alt129=1;
                    }
                    else if ( (LA129_0==71) ) {
                        alt129=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 129, 0, input);

                        throw nvae;
                    }
                    switch (alt129) {
                        case 1 :
                            // InternalKerML.g:5510:5: ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? )
                            {
                            // InternalKerML.g:5510:5: ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? )
                            // InternalKerML.g:5511:6: ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )?
                            {
                            // InternalKerML.g:5511:6: ( (lv_isOrdered_2_0= 'ordered' ) )
                            // InternalKerML.g:5512:7: (lv_isOrdered_2_0= 'ordered' )
                            {
                            // InternalKerML.g:5512:7: (lv_isOrdered_2_0= 'ordered' )
                            // InternalKerML.g:5513:8: lv_isOrdered_2_0= 'ordered'
                            {
                            lv_isOrdered_2_0=(Token)match(input,70,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isOrdered_2_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                              								}
                              								setWithLastConsumed(current, "isOrdered", lv_isOrdered_2_0 != null, "ordered");
                              							
                            }

                            }


                            }

                            // InternalKerML.g:5525:6: ( (lv_isNonunique_3_0= 'nonunique' ) )?
                            int alt127=2;
                            int LA127_0 = input.LA(1);

                            if ( (LA127_0==71) ) {
                                alt127=1;
                            }
                            switch (alt127) {
                                case 1 :
                                    // InternalKerML.g:5526:7: (lv_isNonunique_3_0= 'nonunique' )
                                    {
                                    // InternalKerML.g:5526:7: (lv_isNonunique_3_0= 'nonunique' )
                                    // InternalKerML.g:5527:8: lv_isNonunique_3_0= 'nonunique'
                                    {
                                    lv_isNonunique_3_0=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_isNonunique_3_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                                      								}
                                      								setWithLastConsumed(current, "isNonunique", lv_isNonunique_3_0 != null, "nonunique");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKerML.g:5541:5: ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? )
                            {
                            // InternalKerML.g:5541:5: ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? )
                            // InternalKerML.g:5542:6: ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )?
                            {
                            // InternalKerML.g:5542:6: ( (lv_isNonunique_4_0= 'nonunique' ) )
                            // InternalKerML.g:5543:7: (lv_isNonunique_4_0= 'nonunique' )
                            {
                            // InternalKerML.g:5543:7: (lv_isNonunique_4_0= 'nonunique' )
                            // InternalKerML.g:5544:8: lv_isNonunique_4_0= 'nonunique'
                            {
                            lv_isNonunique_4_0=(Token)match(input,71,FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isNonunique_4_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                              								}
                              								setWithLastConsumed(current, "isNonunique", lv_isNonunique_4_0 != null, "nonunique");
                              							
                            }

                            }


                            }

                            // InternalKerML.g:5556:6: ( (lv_isOrdered_5_0= 'ordered' ) )?
                            int alt128=2;
                            int LA128_0 = input.LA(1);

                            if ( (LA128_0==70) ) {
                                alt128=1;
                            }
                            switch (alt128) {
                                case 1 :
                                    // InternalKerML.g:5557:7: (lv_isOrdered_5_0= 'ordered' )
                                    {
                                    // InternalKerML.g:5557:7: (lv_isOrdered_5_0= 'ordered' )
                                    // InternalKerML.g:5558:8: lv_isOrdered_5_0= 'ordered'
                                    {
                                    lv_isOrdered_5_0=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_isOrdered_5_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                                      								}
                                      								setWithLastConsumed(current, "isOrdered", lv_isOrdered_5_0 != null, "ordered");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityPart"


    // $ANTLR start "ruleFeatureSpecialization"
    // InternalKerML.g:5578:1: ruleFeatureSpecialization[EObject in_current] returns [EObject current=in_current] : (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] ) ;
    public final EObject ruleFeatureSpecialization(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_Typings_0 = null;

        EObject this_Subsettings_1 = null;

        EObject this_References_2 = null;

        EObject this_Redefinitions_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:5584:2: ( (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] ) )
            // InternalKerML.g:5585:2: (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] )
            {
            // InternalKerML.g:5585:2: (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] )
            int alt131=4;
            switch ( input.LA(1) ) {
            case 72:
            case 73:
                {
                alt131=1;
                }
                break;
            case 43:
            case 74:
                {
                alt131=2;
                }
                break;
            case 75:
            case 76:
                {
                alt131=3;
                }
                break;
            case 77:
            case 78:
                {
                alt131=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }

            switch (alt131) {
                case 1 :
                    // InternalKerML.g:5586:3: this_Typings_0= ruleTypings[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getTypingsParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Typings_0=ruleTypings(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Typings_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5598:3: this_Subsettings_1= ruleSubsettings[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getSubsettingsParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subsettings_1=ruleSubsettings(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subsettings_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:5610:3: this_References_2= ruleReferences[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getReferencesParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_References_2=ruleReferences(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_References_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:5622:3: this_Redefinitions_3= ruleRedefinitions[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getRedefinitionsParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Redefinitions_3=ruleRedefinitions(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Redefinitions_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureSpecialization"


    // $ANTLR start "ruleTypings"
    // InternalKerML.g:5638:1: ruleTypings[EObject in_current] returns [EObject current=in_current] : (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* ) ;
    public final EObject ruleTypings(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_TypedBy_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5644:2: ( (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* ) )
            // InternalKerML.g:5645:2: (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* )
            {
            // InternalKerML.g:5645:2: (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* )
            // InternalKerML.g:5646:3: this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypingsRule());
              			}
              			newCompositeNode(grammarAccess.getTypingsAccess().getTypedByParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_TypedBy_0=ruleTypedBy(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypedBy_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5657:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==22) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalKerML.g:5658:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypingsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5662:4: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
            	    // InternalKerML.g:5663:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
            	    {
            	    // InternalKerML.g:5663:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
            	    // InternalKerML.g:5664:6: lv_ownedRelationship_2_0= ruleOwnedFeatureTyping
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypingsAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_2_0=ruleOwnedFeatureTyping();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypingsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypings"


    // $ANTLR start "ruleTypedBy"
    // InternalKerML.g:5687:1: ruleTypedBy[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ) ;
    public final EObject ruleTypedBy(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5693:2: ( ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ) )
            // InternalKerML.g:5694:2: ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) )
            {
            // InternalKerML.g:5694:2: ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) )
            // InternalKerML.g:5695:3: (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) )
            {
            // InternalKerML.g:5695:3: (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) )
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==72) ) {
                alt133=1;
            }
            else if ( (LA133_0==73) ) {
                alt133=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }
            switch (alt133) {
                case 1 :
                    // InternalKerML.g:5696:4: otherlv_0= ':'
                    {
                    otherlv_0=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypedByAccess().getColonKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5701:4: (otherlv_1= 'typed' otherlv_2= 'by' )
                    {
                    // InternalKerML.g:5701:4: (otherlv_1= 'typed' otherlv_2= 'by' )
                    // InternalKerML.g:5702:5: otherlv_1= 'typed' otherlv_2= 'by'
                    {
                    otherlv_1=(Token)match(input,73,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getTypedByAccess().getTypedKeyword_0_1_0());
                      				
                    }
                    otherlv_2=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getTypedByAccess().getByKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:5712:3: ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) )
            // InternalKerML.g:5713:4: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
            {
            // InternalKerML.g:5713:4: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
            // InternalKerML.g:5714:5: lv_ownedRelationship_3_0= ruleOwnedFeatureTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedByAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_3_0=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedByRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_3_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedBy"


    // $ANTLR start "ruleSubsettings"
    // InternalKerML.g:5736:1: ruleSubsettings[EObject in_current] returns [EObject current=in_current] : (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* ) ;
    public final EObject ruleSubsettings(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_Subsets_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5742:2: ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* ) )
            // InternalKerML.g:5743:2: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* )
            {
            // InternalKerML.g:5743:2: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* )
            // InternalKerML.g:5744:3: this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubsettingsRule());
              			}
              			newCompositeNode(grammarAccess.getSubsettingsAccess().getSubsetsParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_Subsets_0=ruleSubsets(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Subsets_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5755:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==22) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalKerML.g:5756:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getSubsettingsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5760:4: ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            	    // InternalKerML.g:5761:5: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            	    {
            	    // InternalKerML.g:5761:5: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            	    // InternalKerML.g:5762:6: lv_ownedRelationship_2_0= ruleOwnedSubsetting
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSubsettingsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_2_0=ruleOwnedSubsetting();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSubsettingsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedSubsetting");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsettings"


    // $ANTLR start "ruleSubsets"
    // InternalKerML.g:5785:1: ruleSubsets[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ) ;
    public final EObject ruleSubsets(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5791:2: ( ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ) )
            // InternalKerML.g:5792:2: ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )
            {
            // InternalKerML.g:5792:2: ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )
            // InternalKerML.g:5793:3: (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            {
            // InternalKerML.g:5793:3: (otherlv_0= ':>' | otherlv_1= 'subsets' )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==43) ) {
                alt135=1;
            }
            else if ( (LA135_0==74) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalKerML.g:5794:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5799:4: otherlv_1= 'subsets'
                    {
                    otherlv_1=(Token)match(input,74,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5804:3: ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            // InternalKerML.g:5805:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            {
            // InternalKerML.g:5805:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            // InternalKerML.g:5806:5: lv_ownedRelationship_2_0= ruleOwnedSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubsetsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSubsetsRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsets"


    // $ANTLR start "ruleReferences"
    // InternalKerML.g:5828:1: ruleReferences[EObject in_current] returns [EObject current=in_current] : ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) ) ;
    public final EObject ruleReferences(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5834:2: ( ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) ) )
            // InternalKerML.g:5835:2: ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) )
            {
            // InternalKerML.g:5835:2: ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) )
            // InternalKerML.g:5836:3: ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getReferencesAccess().getReferencesKeywordParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_4);
            ruleReferencesKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5843:3: ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) )
            // InternalKerML.g:5844:4: (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting )
            {
            // InternalKerML.g:5844:4: (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting )
            // InternalKerML.g:5845:5: lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferencesAccess().getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleOwnedReferenceSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferencesRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.OwnedReferenceSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferences"


    // $ANTLR start "entryRuleReferencesKeyword"
    // InternalKerML.g:5866:1: entryRuleReferencesKeyword returns [String current=null] : iv_ruleReferencesKeyword= ruleReferencesKeyword EOF ;
    public final String entryRuleReferencesKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleReferencesKeyword = null;


        try {
            // InternalKerML.g:5866:57: (iv_ruleReferencesKeyword= ruleReferencesKeyword EOF )
            // InternalKerML.g:5867:2: iv_ruleReferencesKeyword= ruleReferencesKeyword EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferencesKeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReferencesKeyword=ruleReferencesKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferencesKeyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferencesKeyword"


    // $ANTLR start "ruleReferencesKeyword"
    // InternalKerML.g:5873:1: ruleReferencesKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '::>' | kw= 'references' ) ;
    public final AntlrDatatypeRuleToken ruleReferencesKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:5879:2: ( (kw= '::>' | kw= 'references' ) )
            // InternalKerML.g:5880:2: (kw= '::>' | kw= 'references' )
            {
            // InternalKerML.g:5880:2: (kw= '::>' | kw= 'references' )
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==75) ) {
                alt136=1;
            }
            else if ( (LA136_0==76) ) {
                alt136=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }
            switch (alt136) {
                case 1 :
                    // InternalKerML.g:5881:3: kw= '::>'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getReferencesKeywordAccess().getColonColonGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5887:3: kw= 'references'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getReferencesKeywordAccess().getReferencesKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferencesKeyword"


    // $ANTLR start "ruleRedefinitions"
    // InternalKerML.g:5897:1: ruleRedefinitions[EObject in_current] returns [EObject current=in_current] : (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* ) ;
    public final EObject ruleRedefinitions(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_Redefines_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5903:2: ( (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* ) )
            // InternalKerML.g:5904:2: (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* )
            {
            // InternalKerML.g:5904:2: (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* )
            // InternalKerML.g:5905:3: this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRedefinitionsRule());
              			}
              			newCompositeNode(grammarAccess.getRedefinitionsAccess().getRedefinesParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_Redefines_0=ruleRedefines(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Redefines_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5916:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==22) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalKerML.g:5917:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRedefinitionsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5921:4: ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            	    // InternalKerML.g:5922:5: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            	    {
            	    // InternalKerML.g:5922:5: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            	    // InternalKerML.g:5923:6: lv_ownedRelationship_2_0= ruleOwnedRedefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRedefinitionsAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_2_0=ruleOwnedRedefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRedefinitionsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedRedefinition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinitions"


    // $ANTLR start "ruleRedefines"
    // InternalKerML.g:5946:1: ruleRedefines[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) ) ;
    public final EObject ruleRedefines(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5952:2: ( ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) ) )
            // InternalKerML.g:5953:2: ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )
            {
            // InternalKerML.g:5953:2: ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )
            // InternalKerML.g:5954:3: (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            {
            // InternalKerML.g:5954:3: (otherlv_0= ':>>' | otherlv_1= 'redefines' )
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==77) ) {
                alt138=1;
            }
            else if ( (LA138_0==78) ) {
                alt138=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }
            switch (alt138) {
                case 1 :
                    // InternalKerML.g:5955:4: otherlv_0= ':>>'
                    {
                    otherlv_0=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5960:4: otherlv_1= 'redefines'
                    {
                    otherlv_1=(Token)match(input,78,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5965:3: ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            // InternalKerML.g:5966:4: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            {
            // InternalKerML.g:5966:4: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            // InternalKerML.g:5967:5: lv_ownedRelationship_2_0= ruleOwnedRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRedefinesAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRedefinesRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefines"


    // $ANTLR start "entryRuleFeatureInverting"
    // InternalKerML.g:5988:1: entryRuleFeatureInverting returns [EObject current=null] : iv_ruleFeatureInverting= ruleFeatureInverting EOF ;
    public final EObject entryRuleFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureInverting = null;


        try {
            // InternalKerML.g:5988:57: (iv_ruleFeatureInverting= ruleFeatureInverting EOF )
            // InternalKerML.g:5989:2: iv_ruleFeatureInverting= ruleFeatureInverting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureInvertingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureInverting=ruleFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureInverting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureInverting"


    // $ANTLR start "ruleFeatureInverting"
    // InternalKerML.g:5995:1: ruleFeatureInverting returns [EObject current=null] : ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleFeatureInverting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_7_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:6001:2: ( ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6002:2: ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6002:2: ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:6003:3: (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6003:3: (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==79) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalKerML.g:6004:4: otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,79,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureInvertingAccess().getInvertingKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6008:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( ((LA139_0>=RULE_ID && LA139_0<=RULE_UNRESTRICTED_NAME)||LA139_0==13) ) {
                        alt139=1;
                    }
                    switch (alt139) {
                        case 1 :
                            // InternalKerML.g:6009:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureInvertingRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureInvertingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_86);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,66,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFeatureInvertingAccess().getInverseKeyword_1());
              		
            }
            // InternalKerML.g:6026:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    // InternalKerML.g:6027:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6027:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6028:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6028:5: ( ruleQualifiedName )
                    // InternalKerML.g:6029:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureInvertingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getFeatureInvertedFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6044:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6044:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6045:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6045:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6046:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureInvertingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFeatureInvertingAccess().getOfKeyword_3());
              		
            }
            // InternalKerML.g:6068:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )
            int alt142=2;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    // InternalKerML.g:6069:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6069:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6070:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6070:5: ( ruleQualifiedName )
                    // InternalKerML.g:6071:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureInvertingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getInvertingFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6086:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6086:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6087:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6087:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6088:6: lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_ownedRelatedElement_7_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureInvertingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureInvertingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureInvertingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureInverting"


    // $ANTLR start "entryRuleOwnedFeatureInverting"
    // InternalKerML.g:6121:1: entryRuleOwnedFeatureInverting returns [EObject current=null] : iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF ;
    public final EObject entryRuleOwnedFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureInverting = null;


        try {
            // InternalKerML.g:6121:62: (iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF )
            // InternalKerML.g:6122:2: iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureInvertingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureInverting=ruleOwnedFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureInverting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureInverting"


    // $ANTLR start "ruleOwnedFeatureInverting"
    // InternalKerML.g:6128:1: ruleOwnedFeatureInverting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6134:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6135:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6135:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt143=2;
            alt143 = dfa143.predict(input);
            switch (alt143) {
                case 1 :
                    // InternalKerML.g:6136:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6136:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6137:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6137:4: ( ruleQualifiedName )
                    // InternalKerML.g:6138:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedFeatureInvertingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedFeatureInvertingAccess().getInvertingFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6153:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6153:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6154:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6154:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6155:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedFeatureInvertingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureInverting"


    // $ANTLR start "entryRuleTypeFeaturing"
    // InternalKerML.g:6176:1: entryRuleTypeFeaturing returns [EObject current=null] : iv_ruleTypeFeaturing= ruleTypeFeaturing EOF ;
    public final EObject entryRuleTypeFeaturing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFeaturing = null;


        try {
            // InternalKerML.g:6176:54: (iv_ruleTypeFeaturing= ruleTypeFeaturing EOF )
            // InternalKerML.g:6177:2: iv_ruleTypeFeaturing= ruleTypeFeaturing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFeaturingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFeaturing=ruleTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFeaturing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFeaturing"


    // $ANTLR start "ruleTypeFeaturing"
    // InternalKerML.g:6183:1: ruleTypeFeaturing returns [EObject current=null] : (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] ) ;
    public final EObject ruleTypeFeaturing() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipBody_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:6189:2: ( (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6190:2: (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6190:2: (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] )
            // InternalKerML.g:6191:3: otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current]
            {
            otherlv_0=(Token)match(input,80,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingAccess().getFeaturingKeyword_0());
              		
            }
            // InternalKerML.g:6195:3: ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )?
            int alt145=2;
            switch ( input.LA(1) ) {
                case 13:
                case 67:
                    {
                    alt145=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA145_2 = input.LA(2);

                    if ( (LA145_2==67) ) {
                        alt145=1;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA145_3 = input.LA(2);

                    if ( (LA145_3==67) ) {
                        alt145=1;
                    }
                    }
                    break;
            }

            switch (alt145) {
                case 1 :
                    // InternalKerML.g:6196:4: (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of'
                    {
                    // InternalKerML.g:6196:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( ((LA144_0>=RULE_ID && LA144_0<=RULE_UNRESTRICTED_NAME)||LA144_0==13) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // InternalKerML.g:6197:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
                              					}
                              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getIdentificationParserRuleCall_1_0());
                              				
                            }
                            pushFollow(FOLLOW_78);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeFeaturingAccess().getOfKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6214:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6215:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:6215:4: ( ruleQualifiedName )
            // InternalKerML.g:6216:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_79);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeFeaturingAccess().getByKeyword_3());
              		
            }
            // InternalKerML.g:6234:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6235:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:6235:4: ( ruleQualifiedName )
            // InternalKerML.g:6236:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureCrossReference_4_0());
              				
            }
            pushFollow(FOLLOW_11);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeFeaturingRule());
              			}
              			newCompositeNode(grammarAccess.getTypeFeaturingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_6=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_6;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeaturing"


    // $ANTLR start "entryRuleOwnedTypeFeaturing"
    // InternalKerML.g:6265:1: entryRuleOwnedTypeFeaturing returns [EObject current=null] : iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF ;
    public final EObject entryRuleOwnedTypeFeaturing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedTypeFeaturing = null;


        try {
            // InternalKerML.g:6265:59: (iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF )
            // InternalKerML.g:6266:2: iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedTypeFeaturingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedTypeFeaturing=ruleOwnedTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedTypeFeaturing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedTypeFeaturing"


    // $ANTLR start "ruleOwnedTypeFeaturing"
    // InternalKerML.g:6272:1: ruleOwnedTypeFeaturing returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedTypeFeaturing() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:6278:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:6279:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:6279:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6280:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:6280:3: ( ruleQualifiedName )
            // InternalKerML.g:6281:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedTypeFeaturingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedTypeFeaturing"


    // $ANTLR start "entryRuleFeatureTyping"
    // InternalKerML.g:6298:1: entryRuleFeatureTyping returns [EObject current=null] : iv_ruleFeatureTyping= ruleFeatureTyping EOF ;
    public final EObject entryRuleFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureTyping = null;


        try {
            // InternalKerML.g:6298:54: (iv_ruleFeatureTyping= ruleFeatureTyping EOF )
            // InternalKerML.g:6299:2: iv_ruleFeatureTyping= ruleFeatureTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureTyping=ruleFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureTyping"


    // $ANTLR start "ruleFeatureTyping"
    // InternalKerML.g:6305:1: ruleFeatureTyping returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleFeatureTyping() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject this_FeatureType_7 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:6311:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6312:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6312:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:6313:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6313:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==52) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalKerML.g:6314:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureTypingAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6318:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( ((LA146_0>=RULE_ID && LA146_0<=RULE_UNRESTRICTED_NAME)||LA146_0==13) ) {
                        alt146=1;
                    }
                    switch (alt146) {
                        case 1 :
                            // InternalKerML.g:6319:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureTypingRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureTypingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_89);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,81,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFeatureTypingAccess().getTypingKeyword_1());
              		
            }
            // InternalKerML.g:6336:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6337:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:6337:4: ( ruleQualifiedName )
            // InternalKerML.g:6338:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFeatureTypingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_90);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:6352:3: (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==72) ) {
                alt148=1;
            }
            else if ( (LA148_0==73) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // InternalKerML.g:6353:4: otherlv_4= ':'
                    {
                    otherlv_4=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFeatureTypingAccess().getColonKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6358:4: (otherlv_5= 'typed' otherlv_6= 'by' )
                    {
                    // InternalKerML.g:6358:4: (otherlv_5= 'typed' otherlv_6= 'by' )
                    // InternalKerML.g:6359:5: otherlv_5= 'typed' otherlv_6= 'by'
                    {
                    otherlv_5=(Token)match(input,73,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getFeatureTypingAccess().getTypedKeyword_3_1_0());
                      				
                    }
                    otherlv_6=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFeatureTypingAccess().getByKeyword_3_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureTypingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureTypingAccess().getFeatureTypeParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_11);
            this_FeatureType_7=ruleFeatureType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureType_7;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureTypingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureTypingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureTyping"


    // $ANTLR start "entryRuleOwnedFeatureTyping"
    // InternalKerML.g:6395:1: entryRuleOwnedFeatureTyping returns [EObject current=null] : iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF ;
    public final EObject entryRuleOwnedFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureTyping = null;


        try {
            // InternalKerML.g:6395:59: (iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF )
            // InternalKerML.g:6396:2: iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureTyping=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureTyping"


    // $ANTLR start "ruleOwnedFeatureTyping"
    // InternalKerML.g:6402:1: ruleOwnedFeatureTyping returns [EObject current=null] : this_FeatureType_0= ruleFeatureType[$current] ;
    public final EObject ruleOwnedFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureType_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6408:2: (this_FeatureType_0= ruleFeatureType[$current] )
            // InternalKerML.g:6409:2: this_FeatureType_0= ruleFeatureType[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedFeatureTypingRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedFeatureTypingAccess().getFeatureTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_FeatureType_0=ruleFeatureType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_FeatureType_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureTyping"


    // $ANTLR start "ruleFeatureType"
    // InternalKerML.g:6424:1: ruleFeatureType[EObject in_current] returns [EObject current=in_current] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleFeatureType(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6430:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6431:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6431:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalKerML.g:6432:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6432:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6433:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6433:4: ( ruleQualifiedName )
                    // InternalKerML.g:6434:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureTypeRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureTypeAccess().getTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6449:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6449:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6450:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6450:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6451:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureTypeAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureType"


    // $ANTLR start "entryRuleSubsetting"
    // InternalKerML.g:6472:1: entryRuleSubsetting returns [EObject current=null] : iv_ruleSubsetting= ruleSubsetting EOF ;
    public final EObject entryRuleSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubsetting = null;


        try {
            // InternalKerML.g:6472:51: (iv_ruleSubsetting= ruleSubsetting EOF )
            // InternalKerML.g:6473:2: iv_ruleSubsetting= ruleSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubsetting=ruleSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubsetting"


    // $ANTLR start "ruleSubsetting"
    // InternalKerML.g:6479:1: ruleSubsetting returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSubsetting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:6485:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6486:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6486:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:6487:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6487:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==52) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalKerML.g:6488:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubsettingAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6492:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( ((LA150_0>=RULE_ID && LA150_0<=RULE_UNRESTRICTED_NAME)||LA150_0==13) ) {
                        alt150=1;
                    }
                    switch (alt150) {
                        case 1 :
                            // InternalKerML.g:6493:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSubsettingRule());
                              					}
                              					newCompositeNode(grammarAccess.getSubsettingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_92);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,82,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubsettingAccess().getSubsetKeyword_1());
              		
            }
            // InternalKerML.g:6510:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt152=2;
            alt152 = dfa152.predict(input);
            switch (alt152) {
                case 1 :
                    // InternalKerML.g:6511:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6511:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6512:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6512:5: ( ruleQualifiedName )
                    // InternalKerML.g:6513:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_93);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6528:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6528:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6529:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6529:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6530:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_93);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSubsettingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:6548:3: (otherlv_5= ':>' | otherlv_6= 'subsets' )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==43) ) {
                alt153=1;
            }
            else if ( (LA153_0==74) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalKerML.g:6549:4: otherlv_5= ':>'
                    {
                    otherlv_5=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSubsettingAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6554:4: otherlv_6= 'subsets'
                    {
                    otherlv_6=(Token)match(input,74,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSubsettingAccess().getSubsetsKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6559:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt154=2;
            alt154 = dfa154.predict(input);
            switch (alt154) {
                case 1 :
                    // InternalKerML.g:6560:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6560:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6561:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6561:5: ( ruleQualifiedName )
                    // InternalKerML.g:6562:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6577:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6577:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6578:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6578:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6579:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSubsettingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubsettingRule());
              			}
              			newCompositeNode(grammarAccess.getSubsettingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsetting"


    // $ANTLR start "entryRuleOwnedSubsetting"
    // InternalKerML.g:6612:1: entryRuleOwnedSubsetting returns [EObject current=null] : iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF ;
    public final EObject entryRuleOwnedSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedSubsetting = null;


        try {
            // InternalKerML.g:6612:56: (iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF )
            // InternalKerML.g:6613:2: iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedSubsetting=ruleOwnedSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedSubsetting"


    // $ANTLR start "ruleOwnedSubsetting"
    // InternalKerML.g:6619:1: ruleOwnedSubsetting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedSubsetting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6625:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6626:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6626:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt155=2;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    // InternalKerML.g:6627:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6627:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6628:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6628:4: ( ruleQualifiedName )
                    // InternalKerML.g:6629:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedSubsettingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6644:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6644:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6645:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6645:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6646:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedSubsetting"


    // $ANTLR start "entryRuleOwnedReferenceSubsetting"
    // InternalKerML.g:6667:1: entryRuleOwnedReferenceSubsetting returns [EObject current=null] : iv_ruleOwnedReferenceSubsetting= ruleOwnedReferenceSubsetting EOF ;
    public final EObject entryRuleOwnedReferenceSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedReferenceSubsetting = null;


        try {
            // InternalKerML.g:6667:65: (iv_ruleOwnedReferenceSubsetting= ruleOwnedReferenceSubsetting EOF )
            // InternalKerML.g:6668:2: iv_ruleOwnedReferenceSubsetting= ruleOwnedReferenceSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedReferenceSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedReferenceSubsetting=ruleOwnedReferenceSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedReferenceSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedReferenceSubsetting"


    // $ANTLR start "ruleOwnedReferenceSubsetting"
    // InternalKerML.g:6674:1: ruleOwnedReferenceSubsetting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedReferenceSubsetting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6680:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6681:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6681:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt156=2;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    // InternalKerML.g:6682:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6682:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6683:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6683:4: ( ruleQualifiedName )
                    // InternalKerML.g:6684:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedReferenceSubsettingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedReferenceSubsettingAccess().getReferencedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6699:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6699:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6700:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6700:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6701:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedReferenceSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedReferenceSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedReferenceSubsetting"


    // $ANTLR start "entryRuleRedefinition"
    // InternalKerML.g:6722:1: entryRuleRedefinition returns [EObject current=null] : iv_ruleRedefinition= ruleRedefinition EOF ;
    public final EObject entryRuleRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRedefinition = null;


        try {
            // InternalKerML.g:6722:53: (iv_ruleRedefinition= ruleRedefinition EOF )
            // InternalKerML.g:6723:2: iv_ruleRedefinition= ruleRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRedefinition=ruleRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRedefinition"


    // $ANTLR start "ruleRedefinition"
    // InternalKerML.g:6729:1: ruleRedefinition returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleRedefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:6735:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6736:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6736:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:6737:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6737:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==52) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalKerML.g:6738:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRedefinitionAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6742:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( ((LA157_0>=RULE_ID && LA157_0<=RULE_UNRESTRICTED_NAME)||LA157_0==13) ) {
                        alt157=1;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalKerML.g:6743:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getRedefinitionRule());
                              					}
                              					newCompositeNode(grammarAccess.getRedefinitionAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_95);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,83,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRedefinitionAccess().getRedefinitionKeyword_1());
              		
            }
            // InternalKerML.g:6760:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt159=2;
            alt159 = dfa159.predict(input);
            switch (alt159) {
                case 1 :
                    // InternalKerML.g:6761:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6761:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6762:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6762:5: ( ruleQualifiedName )
                    // InternalKerML.g:6763:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRedefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6778:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6778:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6779:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6779:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6780:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRedefinitionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:6798:3: (otherlv_5= ':>>' | otherlv_6= 'redefines' )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==77) ) {
                alt160=1;
            }
            else if ( (LA160_0==78) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }
            switch (alt160) {
                case 1 :
                    // InternalKerML.g:6799:4: otherlv_5= ':>>'
                    {
                    otherlv_5=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRedefinitionAccess().getColonGreaterThanSignGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6804:4: otherlv_6= 'redefines'
                    {
                    otherlv_6=(Token)match(input,78,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getRedefinitionAccess().getRedefinesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6809:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt161=2;
            alt161 = dfa161.predict(input);
            switch (alt161) {
                case 1 :
                    // InternalKerML.g:6810:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6810:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6811:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6811:5: ( ruleQualifiedName )
                    // InternalKerML.g:6812:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRedefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6827:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6827:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6828:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6828:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6829:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRedefinitionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRedefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getRedefinitionAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinition"


    // $ANTLR start "entryRuleOwnedRedefinition"
    // InternalKerML.g:6862:1: entryRuleOwnedRedefinition returns [EObject current=null] : iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF ;
    public final EObject entryRuleOwnedRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRedefinition = null;


        try {
            // InternalKerML.g:6862:58: (iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF )
            // InternalKerML.g:6863:2: iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRedefinition=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRedefinition"


    // $ANTLR start "ruleOwnedRedefinition"
    // InternalKerML.g:6869:1: ruleOwnedRedefinition returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedRedefinition() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6875:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6876:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6876:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt162=2;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // InternalKerML.g:6877:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6877:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6878:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6878:4: ( ruleQualifiedName )
                    // InternalKerML.g:6879:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedRedefinitionRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6894:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6894:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6895:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6895:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6896:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedRedefinitionRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRedefinition"


    // $ANTLR start "ruleFeatureConjugationPart"
    // InternalKerML.g:6918:1: ruleFeatureConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) ) ;
    public final EObject ruleFeatureConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6924:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) ) )
            // InternalKerML.g:6925:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) )
            {
            // InternalKerML.g:6925:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) )
            // InternalKerML.g:6926:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) )
            {
            // InternalKerML.g:6926:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==45) ) {
                alt163=1;
            }
            else if ( (LA163_0==46) ) {
                alt163=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }
            switch (alt163) {
                case 1 :
                    // InternalKerML.g:6927:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6932:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6937:3: ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) )
            // InternalKerML.g:6938:4: (lv_ownedRelationship_2_0= ruleFeatureConjugation )
            {
            // InternalKerML.g:6938:4: (lv_ownedRelationship_2_0= ruleFeatureConjugation )
            // InternalKerML.g:6939:5: lv_ownedRelationship_2_0= ruleFeatureConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationshipFeatureConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleFeatureConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureConjugationPart"


    // $ANTLR start "entryRuleFeatureConjugation"
    // InternalKerML.g:6960:1: entryRuleFeatureConjugation returns [EObject current=null] : iv_ruleFeatureConjugation= ruleFeatureConjugation EOF ;
    public final EObject entryRuleFeatureConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureConjugation = null;


        try {
            // InternalKerML.g:6960:59: (iv_ruleFeatureConjugation= ruleFeatureConjugation EOF )
            // InternalKerML.g:6961:2: iv_ruleFeatureConjugation= ruleFeatureConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureConjugation=ruleFeatureConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureConjugation"


    // $ANTLR start "ruleFeatureConjugation"
    // InternalKerML.g:6967:1: ruleFeatureConjugation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleFeatureConjugation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:6973:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:6974:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:6974:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6975:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:6975:3: ( ruleQualifiedName )
            // InternalKerML.g:6976:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureConjugationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureConjugation"


    // $ANTLR start "ruleValuePart"
    // InternalKerML.g:6994:1: ruleValuePart[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) ) ;
    public final EObject ruleValuePart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7000:2: ( ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) ) )
            // InternalKerML.g:7001:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) )
            {
            // InternalKerML.g:7001:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( ((LA164_0>=84 && LA164_0<=85)) ) {
                alt164=1;
            }
            else if ( (LA164_0==86) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalKerML.g:7002:3: ( (lv_ownedRelationship_0_0= ruleFeatureValue ) )
                    {
                    // InternalKerML.g:7002:3: ( (lv_ownedRelationship_0_0= ruleFeatureValue ) )
                    // InternalKerML.g:7003:4: (lv_ownedRelationship_0_0= ruleFeatureValue )
                    {
                    // InternalKerML.g:7003:4: (lv_ownedRelationship_0_0= ruleFeatureValue )
                    // InternalKerML.g:7004:5: lv_ownedRelationship_0_0= ruleFeatureValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleFeatureValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValuePartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.FeatureValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:7022:3: ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) )
                    {
                    // InternalKerML.g:7022:3: ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) )
                    // InternalKerML.g:7023:4: ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) )
                    {
                    // InternalKerML.g:7023:4: ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) )
                    // InternalKerML.g:7024:5: (lv_ownedRelationship_1_0= ruleFeatureValueExpression )
                    {
                    // InternalKerML.g:7024:5: (lv_ownedRelationship_1_0= ruleFeatureValueExpression )
                    // InternalKerML.g:7025:6: lv_ownedRelationship_1_0= ruleFeatureValueExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_1);
                    lv_ownedRelationship_1_0=ruleFeatureValueExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuePartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.kerml.xtext.KerML.FeatureValueExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:7042:4: ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) )
                    // InternalKerML.g:7043:5: (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember )
                    {
                    // InternalKerML.g:7043:5: (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember )
                    // InternalKerML.g:7044:6: lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipEmptyFeatureWriteMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleEmptyFeatureWriteMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuePartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.xtext.KerML.EmptyFeatureWriteMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuePart"


    // $ANTLR start "entryRuleFeatureValue"
    // InternalKerML.g:7066:1: entryRuleFeatureValue returns [EObject current=null] : iv_ruleFeatureValue= ruleFeatureValue EOF ;
    public final EObject entryRuleFeatureValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureValue = null;


        try {
            // InternalKerML.g:7066:53: (iv_ruleFeatureValue= ruleFeatureValue EOF )
            // InternalKerML.g:7067:2: iv_ruleFeatureValue= ruleFeatureValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureValue=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValue"


    // $ANTLR start "ruleFeatureValue"
    // InternalKerML.g:7073:1: ruleFeatureValue returns [EObject current=null] : ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleFeatureValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_isDefault_1_0=null;
        Token otherlv_2=null;
        Token lv_isInitial_3_0=null;
        EObject lv_ownedRelatedElement_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7079:2: ( ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:7080:2: ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:7080:2: ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:7081:3: (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:7081:3: (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) )
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==84) ) {
                alt166=1;
            }
            else if ( (LA166_0==85) ) {
                alt166=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 166, 0, input);

                throw nvae;
            }
            switch (alt166) {
                case 1 :
                    // InternalKerML.g:7082:4: otherlv_0= '='
                    {
                    otherlv_0=(Token)match(input,84,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureValueAccess().getEqualsSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:7087:4: ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? )
                    {
                    // InternalKerML.g:7087:4: ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? )
                    // InternalKerML.g:7088:5: ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )?
                    {
                    // InternalKerML.g:7088:5: ( (lv_isDefault_1_0= 'default' ) )
                    // InternalKerML.g:7089:6: (lv_isDefault_1_0= 'default' )
                    {
                    // InternalKerML.g:7089:6: (lv_isDefault_1_0= 'default' )
                    // InternalKerML.g:7090:7: lv_isDefault_1_0= 'default'
                    {
                    lv_isDefault_1_0=(Token)match(input,85,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isDefault_1_0, grammarAccess.getFeatureValueAccess().getIsDefaultDefaultKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getFeatureValueRule());
                      							}
                      							setWithLastConsumed(current, "isDefault", lv_isDefault_1_0 != null, "default");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:7102:5: (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )?
                    int alt165=3;
                    int LA165_0 = input.LA(1);

                    if ( (LA165_0==84) ) {
                        alt165=1;
                    }
                    else if ( (LA165_0==86) ) {
                        alt165=2;
                    }
                    switch (alt165) {
                        case 1 :
                            // InternalKerML.g:7103:6: otherlv_2= '='
                            {
                            otherlv_2=(Token)match(input,84,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getFeatureValueAccess().getEqualsSignKeyword_0_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:7108:6: ( (lv_isInitial_3_0= ':=' ) )
                            {
                            // InternalKerML.g:7108:6: ( (lv_isInitial_3_0= ':=' ) )
                            // InternalKerML.g:7109:7: (lv_isInitial_3_0= ':=' )
                            {
                            // InternalKerML.g:7109:7: (lv_isInitial_3_0= ':=' )
                            // InternalKerML.g:7110:8: lv_isInitial_3_0= ':='
                            {
                            lv_isInitial_3_0=(Token)match(input,86,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isInitial_3_0, grammarAccess.getFeatureValueAccess().getIsInitialColonEqualsSignKeyword_0_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureValueRule());
                              								}
                              								setWithLastConsumed(current, "isInitial", lv_isInitial_3_0 != null, ":=");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:7125:3: ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) )
            // InternalKerML.g:7126:4: (lv_ownedRelatedElement_4_0= ruleOwnedExpression )
            {
            // InternalKerML.g:7126:4: (lv_ownedRelatedElement_4_0= ruleOwnedExpression )
            // InternalKerML.g:7127:5: lv_ownedRelatedElement_4_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_4_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureValueRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_4_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValue"


    // $ANTLR start "entryRuleFeatureValueExpression"
    // InternalKerML.g:7148:1: entryRuleFeatureValueExpression returns [EObject current=null] : iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF ;
    public final EObject entryRuleFeatureValueExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureValueExpression = null;


        try {
            // InternalKerML.g:7148:63: (iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF )
            // InternalKerML.g:7149:2: iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureValueExpression=ruleFeatureValueExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValueExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValueExpression"


    // $ANTLR start "ruleFeatureValueExpression"
    // InternalKerML.g:7155:1: ruleFeatureValueExpression returns [EObject current=null] : ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleFeatureValueExpression() throws RecognitionException {
        EObject current = null;

        Token lv_isInitial_0_0=null;
        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7161:2: ( ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:7162:2: ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:7162:2: ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:7163:3: ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:7163:3: ( (lv_isInitial_0_0= ':=' ) )
            // InternalKerML.g:7164:4: (lv_isInitial_0_0= ':=' )
            {
            // InternalKerML.g:7164:4: (lv_isInitial_0_0= ':=' )
            // InternalKerML.g:7165:5: lv_isInitial_0_0= ':='
            {
            lv_isInitial_0_0=(Token)match(input,86,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_isInitial_0_0, grammarAccess.getFeatureValueExpressionAccess().getIsInitialColonEqualsSignKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFeatureValueExpressionRule());
              					}
              					setWithLastConsumed(current, "isInitial", lv_isInitial_0_0 != null, ":=");
              				
            }

            }


            }

            // InternalKerML.g:7177:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:7178:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:7178:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:7179:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureValueExpressionAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureValueExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValueExpression"


    // $ANTLR start "entryRuleEmptyFeatureWriteMember"
    // InternalKerML.g:7200:1: entryRuleEmptyFeatureWriteMember returns [EObject current=null] : iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF ;
    public final EObject entryRuleEmptyFeatureWriteMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureWriteMember = null;


        try {
            // InternalKerML.g:7200:64: (iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF )
            // InternalKerML.g:7201:2: iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureWriteMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureWriteMember=ruleEmptyFeatureWriteMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureWriteMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureWriteMember"


    // $ANTLR start "ruleEmptyFeatureWriteMember"
    // InternalKerML.g:7207:1: ruleEmptyFeatureWriteMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) ) ;
    public final EObject ruleEmptyFeatureWriteMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7213:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) ) )
            // InternalKerML.g:7214:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) )
            {
            // InternalKerML.g:7214:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) )
            // InternalKerML.g:7215:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite )
            {
            // InternalKerML.g:7215:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite )
            // InternalKerML.g:7216:4: lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyFeatureWriteMemberAccess().getOwnedRelatedElementEmptyFeatureWriteParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeatureWrite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyFeatureWrite");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureWriteMember"


    // $ANTLR start "entryRuleEmptyFeatureWrite"
    // InternalKerML.g:7236:1: entryRuleEmptyFeatureWrite returns [EObject current=null] : iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF ;
    public final EObject entryRuleEmptyFeatureWrite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureWrite = null;


        try {
            // InternalKerML.g:7236:58: (iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF )
            // InternalKerML.g:7237:2: iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureWriteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureWrite=ruleEmptyFeatureWrite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureWrite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureWrite"


    // $ANTLR start "ruleEmptyFeatureWrite"
    // InternalKerML.g:7243:1: ruleEmptyFeatureWrite returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) ) ;
    public final EObject ruleEmptyFeatureWrite() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7249:2: ( ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) ) )
            // InternalKerML.g:7250:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) )
            {
            // InternalKerML.g:7250:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) )
            // InternalKerML.g:7251:3: ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) )
            {
            // InternalKerML.g:7251:3: ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) )
            // InternalKerML.g:7252:4: (lv_ownedRelationship_0_0= ruleEmptyTargetMember )
            {
            // InternalKerML.g:7252:4: (lv_ownedRelationship_0_0= ruleEmptyTargetMember )
            // InternalKerML.g:7253:5: lv_ownedRelationship_0_0= ruleEmptyTargetMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmptyFeatureWriteAccess().getOwnedRelationshipEmptyTargetMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_1);
            lv_ownedRelationship_0_0=ruleEmptyTargetMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.EmptyTargetMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:7270:3: ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) )
            // InternalKerML.g:7271:4: (lv_ownedRelationship_1_0= ruleEmptyParameterMember )
            {
            // InternalKerML.g:7271:4: (lv_ownedRelationship_1_0= ruleEmptyParameterMember )
            // InternalKerML.g:7272:5: lv_ownedRelationship_1_0= ruleEmptyParameterMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmptyFeatureWriteAccess().getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleEmptyParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.EmptyParameterMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureWrite"


    // $ANTLR start "entryRuleEmptyTargetMember"
    // InternalKerML.g:7293:1: entryRuleEmptyTargetMember returns [EObject current=null] : iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF ;
    public final EObject entryRuleEmptyTargetMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyTargetMember = null;


        try {
            // InternalKerML.g:7293:58: (iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF )
            // InternalKerML.g:7294:2: iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyTargetMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyTargetMember=ruleEmptyTargetMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyTargetMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyTargetMember"


    // $ANTLR start "ruleEmptyTargetMember"
    // InternalKerML.g:7300:1: ruleEmptyTargetMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) ) ;
    public final EObject ruleEmptyTargetMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7306:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) ) )
            // InternalKerML.g:7307:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) )
            {
            // InternalKerML.g:7307:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) )
            // InternalKerML.g:7308:3: (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter )
            {
            // InternalKerML.g:7308:3: (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter )
            // InternalKerML.g:7309:4: lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyTargetMemberAccess().getOwnedRelatedElementEmptyTargetParameterParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyTargetParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyTargetMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyTargetParameter");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyTargetMember"


    // $ANTLR start "entryRuleEmptyTargetParameter"
    // InternalKerML.g:7329:1: entryRuleEmptyTargetParameter returns [EObject current=null] : iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF ;
    public final EObject entryRuleEmptyTargetParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyTargetParameter = null;


        try {
            // InternalKerML.g:7329:61: (iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF )
            // InternalKerML.g:7330:2: iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyTargetParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyTargetParameter=ruleEmptyTargetParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyTargetParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyTargetParameter"


    // $ANTLR start "ruleEmptyTargetParameter"
    // InternalKerML.g:7336:1: ruleEmptyTargetParameter returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) ) ;
    public final EObject ruleEmptyTargetParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7342:2: ( ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) ) )
            // InternalKerML.g:7343:2: ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) )
            {
            // InternalKerML.g:7343:2: ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) )
            // InternalKerML.g:7344:3: (lv_ownedRelationship_0_0= ruleTargetFeatureMember )
            {
            // InternalKerML.g:7344:3: (lv_ownedRelationship_0_0= ruleTargetFeatureMember )
            // InternalKerML.g:7345:4: lv_ownedRelationship_0_0= ruleTargetFeatureMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyTargetParameterAccess().getOwnedRelationshipTargetFeatureMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleTargetFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyTargetParameterRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.TargetFeatureMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyTargetParameter"


    // $ANTLR start "entryRuleTargetFeatureMember"
    // InternalKerML.g:7365:1: entryRuleTargetFeatureMember returns [EObject current=null] : iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF ;
    public final EObject entryRuleTargetFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetFeatureMember = null;


        try {
            // InternalKerML.g:7365:60: (iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF )
            // InternalKerML.g:7366:2: iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTargetFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTargetFeatureMember=ruleTargetFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTargetFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetFeatureMember"


    // $ANTLR start "ruleTargetFeatureMember"
    // InternalKerML.g:7372:1: ruleTargetFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) ) ;
    public final EObject ruleTargetFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7378:2: ( ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) ) )
            // InternalKerML.g:7379:2: ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) )
            {
            // InternalKerML.g:7379:2: ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) )
            // InternalKerML.g:7380:3: (lv_ownedRelatedElement_0_0= ruleTargetFeature )
            {
            // InternalKerML.g:7380:3: (lv_ownedRelatedElement_0_0= ruleTargetFeature )
            // InternalKerML.g:7381:4: lv_ownedRelatedElement_0_0= ruleTargetFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTargetFeatureMemberAccess().getOwnedRelatedElementTargetFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleTargetFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTargetFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.TargetFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetFeatureMember"


    // $ANTLR start "entryRuleTargetFeature"
    // InternalKerML.g:7401:1: entryRuleTargetFeature returns [EObject current=null] : iv_ruleTargetFeature= ruleTargetFeature EOF ;
    public final EObject entryRuleTargetFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetFeature = null;


        try {
            // InternalKerML.g:7401:54: (iv_ruleTargetFeature= ruleTargetFeature EOF )
            // InternalKerML.g:7402:2: iv_ruleTargetFeature= ruleTargetFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTargetFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTargetFeature=ruleTargetFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTargetFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetFeature"


    // $ANTLR start "ruleTargetFeature"
    // InternalKerML.g:7408:1: ruleTargetFeature returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) ) ;
    public final EObject ruleTargetFeature() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7414:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) ) )
            // InternalKerML.g:7415:2: ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) )
            {
            // InternalKerML.g:7415:2: ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) )
            // InternalKerML.g:7416:3: (lv_ownedRelationship_0_0= ruleEmptyFeatureMember )
            {
            // InternalKerML.g:7416:3: (lv_ownedRelationship_0_0= ruleEmptyFeatureMember )
            // InternalKerML.g:7417:4: lv_ownedRelationship_0_0= ruleEmptyFeatureMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTargetFeatureAccess().getOwnedRelationshipEmptyFeatureMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleEmptyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTargetFeatureRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyFeatureMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetFeature"


    // $ANTLR start "entryRuleEmptyFeatureMember"
    // InternalKerML.g:7437:1: entryRuleEmptyFeatureMember returns [EObject current=null] : iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF ;
    public final EObject entryRuleEmptyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureMember = null;


        try {
            // InternalKerML.g:7437:59: (iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF )
            // InternalKerML.g:7438:2: iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureMember=ruleEmptyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureMember"


    // $ANTLR start "ruleEmptyFeatureMember"
    // InternalKerML.g:7444:1: ruleEmptyFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleEmptyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7450:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:7451:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:7451:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:7452:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:7452:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:7453:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyFeatureMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureMember"


    // $ANTLR start "entryRuleEmptyParameterMember"
    // InternalKerML.g:7473:1: entryRuleEmptyParameterMember returns [EObject current=null] : iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF ;
    public final EObject entryRuleEmptyParameterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyParameterMember = null;


        try {
            // InternalKerML.g:7473:61: (iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF )
            // InternalKerML.g:7474:2: iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyParameterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyParameterMember=ruleEmptyParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyParameterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyParameterMember"


    // $ANTLR start "ruleEmptyParameterMember"
    // InternalKerML.g:7480:1: ruleEmptyParameterMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleEmptyParameterMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7486:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:7487:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:7487:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:7488:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:7488:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:7489:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyParameterMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyParameterMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyParameterMember"


    // $ANTLR start "entryRuleMultiplicity"
    // InternalKerML.g:7509:1: entryRuleMultiplicity returns [EObject current=null] : iv_ruleMultiplicity= ruleMultiplicity EOF ;
    public final EObject entryRuleMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicity = null;


        try {
            // InternalKerML.g:7509:53: (iv_ruleMultiplicity= ruleMultiplicity EOF )
            // InternalKerML.g:7510:2: iv_ruleMultiplicity= ruleMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicity=ruleMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicity"


    // $ANTLR start "ruleMultiplicity"
    // InternalKerML.g:7516:1: ruleMultiplicity returns [EObject current=null] : (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange ) ;
    public final EObject ruleMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicitySubset_0 = null;

        EObject this_MultiplicityRange_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:7522:2: ( (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange ) )
            // InternalKerML.g:7523:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )
            {
            // InternalKerML.g:7523:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )
            int alt167=2;
            alt167 = dfa167.predict(input);
            switch (alt167) {
                case 1 :
                    // InternalKerML.g:7524:3: this_MultiplicitySubset_0= ruleMultiplicitySubset
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMultiplicityAccess().getMultiplicitySubsetParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MultiplicitySubset_0=ruleMultiplicitySubset();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MultiplicitySubset_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:7533:3: this_MultiplicityRange_1= ruleMultiplicityRange
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMultiplicityAccess().getMultiplicityRangeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MultiplicityRange_1=ruleMultiplicityRange();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MultiplicityRange_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicity"


    // $ANTLR start "entryRuleMultiplicitySubset"
    // InternalKerML.g:7545:1: entryRuleMultiplicitySubset returns [EObject current=null] : iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF ;
    public final EObject entryRuleMultiplicitySubset() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicitySubset = null;


        try {
            // InternalKerML.g:7545:59: (iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF )
            // InternalKerML.g:7546:2: iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicitySubsetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicitySubset=ruleMultiplicitySubset();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicitySubset; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicitySubset"


    // $ANTLR start "ruleMultiplicitySubset"
    // InternalKerML.g:7552:1: ruleMultiplicitySubset returns [EObject current=null] : (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMultiplicitySubset() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_Subsets_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7558:2: ( (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7559:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7559:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7560:3: otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            otherlv_0=(Token)match(input,87,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicitySubsetAccess().getMultiplicityKeyword_0());
              		
            }
            // InternalKerML.g:7564:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( ((LA168_0>=RULE_ID && LA168_0<=RULE_UNRESTRICTED_NAME)||LA168_0==13) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalKerML.g:7565:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
                      				}
                      				newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_93);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getSubsetsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_Subsets_2=ruleSubsets(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Subsets_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicitySubset"


    // $ANTLR start "entryRuleMultiplicityRange"
    // InternalKerML.g:7603:1: entryRuleMultiplicityRange returns [EObject current=null] : iv_ruleMultiplicityRange= ruleMultiplicityRange EOF ;
    public final EObject entryRuleMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityRange = null;


        try {
            // InternalKerML.g:7603:58: (iv_ruleMultiplicityRange= ruleMultiplicityRange EOF )
            // InternalKerML.g:7604:2: iv_ruleMultiplicityRange= ruleMultiplicityRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicityRange=ruleMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityRange; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityRange"


    // $ANTLR start "ruleMultiplicityRange"
    // InternalKerML.g:7610:1: ruleMultiplicityRange returns [EObject current=null] : (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMultiplicityRange() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_MultiplicityBounds_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7616:2: ( (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7617:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7617:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7618:3: otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            otherlv_0=(Token)match(input,87,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityRangeAccess().getMultiplicityKeyword_0());
              		
            }
            // InternalKerML.g:7622:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( ((LA169_0>=RULE_ID && LA169_0<=RULE_UNRESTRICTED_NAME)||LA169_0==13) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalKerML.g:7623:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMultiplicityRangeRule());
                      				}
                      				newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicityRangeRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getMultiplicityBoundsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_MultiplicityBounds_2=ruleMultiplicityBounds(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicityBounds_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicityRangeRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityRange"


    // $ANTLR start "entryRuleOwnedMultiplicity"
    // InternalKerML.g:7661:1: entryRuleOwnedMultiplicity returns [EObject current=null] : iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF ;
    public final EObject entryRuleOwnedMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedMultiplicity = null;


        try {
            // InternalKerML.g:7661:58: (iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF )
            // InternalKerML.g:7662:2: iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedMultiplicity=ruleOwnedMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedMultiplicity"


    // $ANTLR start "ruleOwnedMultiplicity"
    // InternalKerML.g:7668:1: ruleOwnedMultiplicity returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) ) ;
    public final EObject ruleOwnedMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7674:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) ) )
            // InternalKerML.g:7675:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) )
            {
            // InternalKerML.g:7675:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) )
            // InternalKerML.g:7676:3: (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange )
            {
            // InternalKerML.g:7676:3: (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange )
            // InternalKerML.g:7677:4: lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedMultiplicityAccess().getOwnedRelatedElementOwnedMultiplicityRangeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedMultiplicityRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.OwnedMultiplicityRange");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedMultiplicity"


    // $ANTLR start "entryRuleOwnedMultiplicityRange"
    // InternalKerML.g:7697:1: entryRuleOwnedMultiplicityRange returns [EObject current=null] : iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF ;
    public final EObject entryRuleOwnedMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedMultiplicityRange = null;


        try {
            // InternalKerML.g:7697:63: (iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF )
            // InternalKerML.g:7698:2: iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedMultiplicityRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedMultiplicityRange=ruleOwnedMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedMultiplicityRange; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedMultiplicityRange"


    // $ANTLR start "ruleOwnedMultiplicityRange"
    // InternalKerML.g:7704:1: ruleOwnedMultiplicityRange returns [EObject current=null] : this_MultiplicityBounds_0= ruleMultiplicityBounds[$current] ;
    public final EObject ruleOwnedMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicityBounds_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7710:2: (this_MultiplicityBounds_0= ruleMultiplicityBounds[$current] )
            // InternalKerML.g:7711:2: this_MultiplicityBounds_0= ruleMultiplicityBounds[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedMultiplicityRangeRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedMultiplicityRangeAccess().getMultiplicityBoundsParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_MultiplicityBounds_0=ruleMultiplicityBounds(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_MultiplicityBounds_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedMultiplicityRange"


    // $ANTLR start "ruleMultiplicityBounds"
    // InternalKerML.g:7726:1: ruleMultiplicityBounds[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' ) ;
    public final EObject ruleMultiplicityBounds(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7732:2: ( (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' ) )
            // InternalKerML.g:7733:2: (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' )
            {
            // InternalKerML.g:7733:2: (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' )
            // InternalKerML.g:7734:3: otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,88,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityBoundsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalKerML.g:7738:3: ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) )
            // InternalKerML.g:7739:4: (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember )
            {
            // InternalKerML.g:7739:4: (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember )
            // InternalKerML.g:7740:5: lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicityBoundsAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_101);
            lv_ownedRelationship_1_0=ruleMultiplicityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicityBoundsRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.MultiplicityExpressionMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:7757:3: (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==89) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalKerML.g:7758:4: otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) )
                    {
                    otherlv_2=(Token)match(input,89,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMultiplicityBoundsAccess().getFullStopFullStopKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:7762:4: ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) )
                    // InternalKerML.g:7763:5: (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember )
                    {
                    // InternalKerML.g:7763:5: (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember )
                    // InternalKerML.g:7764:6: lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicityBoundsAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_ownedRelationship_3_0=ruleMultiplicityExpressionMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicityBoundsRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.xtext.KerML.MultiplicityExpressionMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMultiplicityBoundsAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBounds"


    // $ANTLR start "entryRuleMultiplicityExpressionMember"
    // InternalKerML.g:7790:1: entryRuleMultiplicityExpressionMember returns [EObject current=null] : iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF ;
    public final EObject entryRuleMultiplicityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityExpressionMember = null;


        try {
            // InternalKerML.g:7790:69: (iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF )
            // InternalKerML.g:7791:2: iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicityExpressionMember=ruleMultiplicityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityExpressionMember"


    // $ANTLR start "ruleMultiplicityExpressionMember"
    // InternalKerML.g:7797:1: ruleMultiplicityExpressionMember returns [EObject current=null] : ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) ) ;
    public final EObject ruleMultiplicityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_1 = null;

        EObject lv_ownedRelatedElement_0_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:7803:2: ( ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) ) )
            // InternalKerML.g:7804:2: ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) )
            {
            // InternalKerML.g:7804:2: ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) )
            // InternalKerML.g:7805:3: ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) )
            {
            // InternalKerML.g:7805:3: ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) )
            // InternalKerML.g:7806:4: (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression )
            {
            // InternalKerML.g:7806:4: (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression )
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( ((LA171_0>=RULE_STRING_VALUE && LA171_0<=RULE_EXP_VALUE)||LA171_0==33||(LA171_0>=109 && LA171_0<=110)||LA171_0==113) ) {
                alt171=1;
            }
            else if ( ((LA171_0>=RULE_ID && LA171_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt171=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }
            switch (alt171) {
                case 1 :
                    // InternalKerML.g:7807:5: lv_ownedRelatedElement_0_1= ruleLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementLiteralExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_1=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityExpressionMemberRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_1,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.LiteralExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:7823:5: lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_2=ruleFeatureReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityExpressionMemberRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_2,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureReferenceExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityExpressionMember"


    // $ANTLR start "entryRuleDataType"
    // InternalKerML.g:7844:1: entryRuleDataType returns [EObject current=null] : iv_ruleDataType= ruleDataType EOF ;
    public final EObject entryRuleDataType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataType = null;


        try {
            // InternalKerML.g:7844:49: (iv_ruleDataType= ruleDataType EOF )
            // InternalKerML.g:7845:2: iv_ruleDataType= ruleDataType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataType=ruleDataType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataType"


    // $ANTLR start "ruleDataType"
    // InternalKerML.g:7851:1: ruleDataType returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleDataType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7857:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7858:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7858:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7859:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDataTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDataTypeAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,90,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getDatatypeKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDataTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDataTypeAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDataTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "entryRuleClass"
    // InternalKerML.g:7900:1: entryRuleClass returns [EObject current=null] : iv_ruleClass= ruleClass EOF ;
    public final EObject entryRuleClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClass = null;


        try {
            // InternalKerML.g:7900:46: (iv_ruleClass= ruleClass EOF )
            // InternalKerML.g:7901:2: iv_ruleClass= ruleClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClass=ruleClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClass"


    // $ANTLR start "ruleClass"
    // InternalKerML.g:7907:1: ruleClass returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7913:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7914:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7914:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7915:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassRule());
              			}
              			newCompositeNode(grammarAccess.getClassAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,91,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassAccess().getClassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassRule());
              			}
              			newCompositeNode(grammarAccess.getClassAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassRule());
              			}
              			newCompositeNode(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClass"


    // $ANTLR start "entryRuleStructure"
    // InternalKerML.g:7956:1: entryRuleStructure returns [EObject current=null] : iv_ruleStructure= ruleStructure EOF ;
    public final EObject entryRuleStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructure = null;


        try {
            // InternalKerML.g:7956:50: (iv_ruleStructure= ruleStructure EOF )
            // InternalKerML.g:7957:2: iv_ruleStructure= ruleStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructure=ruleStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructure"


    // $ANTLR start "ruleStructure"
    // InternalKerML.g:7963:1: ruleStructure returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleStructure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7969:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7970:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7970:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7971:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStructureRule());
              			}
              			newCompositeNode(grammarAccess.getStructureAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_104);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,92,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructureAccess().getStructKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStructureRule());
              			}
              			newCompositeNode(grammarAccess.getStructureAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStructureRule());
              			}
              			newCompositeNode(grammarAccess.getStructureAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructure"


    // $ANTLR start "entryRuleAssociation"
    // InternalKerML.g:8012:1: entryRuleAssociation returns [EObject current=null] : iv_ruleAssociation= ruleAssociation EOF ;
    public final EObject entryRuleAssociation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociation = null;


        try {
            // InternalKerML.g:8012:52: (iv_ruleAssociation= ruleAssociation EOF )
            // InternalKerML.g:8013:2: iv_ruleAssociation= ruleAssociation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociation=ruleAssociation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociation"


    // $ANTLR start "ruleAssociation"
    // InternalKerML.g:8019:1: ruleAssociation returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleAssociation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8025:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8026:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8026:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8027:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,93,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssociationAccess().getAssocKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociation"


    // $ANTLR start "entryRuleAssociationStructure"
    // InternalKerML.g:8068:1: entryRuleAssociationStructure returns [EObject current=null] : iv_ruleAssociationStructure= ruleAssociationStructure EOF ;
    public final EObject entryRuleAssociationStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociationStructure = null;


        try {
            // InternalKerML.g:8068:61: (iv_ruleAssociationStructure= ruleAssociationStructure EOF )
            // InternalKerML.g:8069:2: iv_ruleAssociationStructure= ruleAssociationStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociationStructure=ruleAssociationStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociationStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociationStructure"


    // $ANTLR start "ruleAssociationStructure"
    // InternalKerML.g:8075:1: ruleAssociationStructure returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) ;
    public final EObject ruleAssociationStructure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_3 = null;

        EObject this_TypeBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:8081:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) )
            // InternalKerML.g:8082:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8082:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            // InternalKerML.g:8083:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationStructureRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationStructureAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,93,FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssociationStructureAccess().getAssocKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,92,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAssociationStructureAccess().getStructKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationStructureRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationStructureAccess().getClassifierDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_3=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationStructureRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationStructureAccess().getTypeBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_4=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationStructure"


    // $ANTLR start "entryRuleConnector"
    // InternalKerML.g:8128:1: entryRuleConnector returns [EObject current=null] : iv_ruleConnector= ruleConnector EOF ;
    public final EObject entryRuleConnector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnector = null;


        try {
            // InternalKerML.g:8128:50: (iv_ruleConnector= ruleConnector EOF )
            // InternalKerML.g:8129:2: iv_ruleConnector= ruleConnector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnector=ruleConnector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnector"


    // $ANTLR start "ruleConnector"
    // InternalKerML.g:8135:1: ruleConnector returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleConnector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ConnectorDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8141:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8142:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8142:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8143:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_106);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,94,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConnectorAccess().getConnectorKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ConnectorDeclaration_2=ruleConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConnectorDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnector"


    // $ANTLR start "ruleConnectorDeclaration"
    // InternalKerML.g:8185:1: ruleConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] ) ;
    public final EObject ruleConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_BinaryConnectorDeclaration_0 = null;

        EObject this_NaryConnectorDeclaration_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:8191:2: ( (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] ) )
            // InternalKerML.g:8192:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )
            {
            // InternalKerML.g:8192:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )
            int alt172=2;
            alt172 = dfa172.predict(input);
            switch (alt172) {
                case 1 :
                    // InternalKerML.g:8193:3: this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                      			}
                      			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getBinaryConnectorDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryConnectorDeclaration_0=ruleBinaryConnectorDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BinaryConnectorDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:8205:3: this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                      			}
                      			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getNaryConnectorDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaryConnectorDeclaration_1=ruleNaryConnectorDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaryConnectorDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorDeclaration"


    // $ANTLR start "ruleBinaryConnectorDeclaration"
    // InternalKerML.g:8221:1: ruleBinaryConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) ;
    public final EObject ruleBinaryConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token lv_isSufficient_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8227:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) )
            // InternalKerML.g:8228:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            {
            // InternalKerML.g:8228:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            // InternalKerML.g:8229:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            {
            // InternalKerML.g:8229:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )?
            int alt175=3;
            alt175 = dfa175.predict(input);
            switch (alt175) {
                case 1 :
                    // InternalKerML.g:8230:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' )
                    {
                    // InternalKerML.g:8230:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' )
                    // InternalKerML.g:8231:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from'
                    {
                    // InternalKerML.g:8231:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( ((LA173_0>=RULE_ID && LA173_0<=RULE_UNRESTRICTED_NAME)||LA173_0==13||LA173_0==32||LA173_0==43||(LA173_0>=45 && LA173_0<=46)||(LA173_0>=70 && LA173_0<=78)||LA173_0==88) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // InternalKerML.g:8232:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_50);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,21,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:8250:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? )
                    {
                    // InternalKerML.g:8250:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? )
                    // InternalKerML.g:8251:5: ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )?
                    {
                    // InternalKerML.g:8251:5: ( (lv_isSufficient_2_0= 'all' ) )
                    // InternalKerML.g:8252:6: (lv_isSufficient_2_0= 'all' )
                    {
                    // InternalKerML.g:8252:6: (lv_isSufficient_2_0= 'all' )
                    // InternalKerML.g:8253:7: lv_isSufficient_2_0= 'all'
                    {
                    lv_isSufficient_2_0=(Token)match(input,32,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "isSufficient", lv_isSufficient_2_0 != null, "all");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:8265:5: (otherlv_3= 'from' )?
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==21) ) {
                        alt174=1;
                    }
                    switch (alt174) {
                        case 1 :
                            // InternalKerML.g:8266:6: otherlv_3= 'from'
                            {
                            otherlv_3=(Token)match(input,21,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_1_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:8273:3: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8274:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8274:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            // InternalKerML.g:8275:5: lv_ownedRelationship_4_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_109);
            lv_ownedRelationship_4_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,20,FOLLOW_108); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getBinaryConnectorDeclarationAccess().getToKeyword_2());
              		
            }
            // InternalKerML.g:8296:3: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8297:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8297:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            // InternalKerML.g:8298:5: lv_ownedRelationship_6_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_6_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryConnectorDeclaration"


    // $ANTLR start "ruleNaryConnectorDeclaration"
    // InternalKerML.g:8320:1: ruleNaryConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? ) ;
    public final EObject ruleNaryConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8326:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? ) )
            // InternalKerML.g:8327:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? )
            {
            // InternalKerML.g:8327:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? )
            // InternalKerML.g:8328:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )?
            {
            // InternalKerML.g:8328:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( ((LA176_0>=RULE_ID && LA176_0<=RULE_UNRESTRICTED_NAME)||LA176_0==13||LA176_0==32||LA176_0==43||(LA176_0>=45 && LA176_0<=46)||(LA176_0>=70 && LA176_0<=78)||LA176_0==88) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalKerML.g:8329:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getNaryConnectorDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_110);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:8341:3: (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==95) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalKerML.g:8342:4: otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')'
                    {
                    otherlv_1=(Token)match(input,95,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNaryConnectorDeclarationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:8346:4: ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) )
                    // InternalKerML.g:8347:5: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                    {
                    // InternalKerML.g:8347:5: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                    // InternalKerML.g:8348:6: lv_ownedRelationship_2_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_111);
                    lv_ownedRelationship_2_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,22,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_1_2());
                      			
                    }
                    // InternalKerML.g:8369:4: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                    // InternalKerML.g:8370:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                    {
                    // InternalKerML.g:8370:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                    // InternalKerML.g:8371:6: lv_ownedRelationship_4_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_112);
                    lv_ownedRelationship_4_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_4_0,
                      							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:8388:4: (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )*
                    loop177:
                    do {
                        int alt177=2;
                        int LA177_0 = input.LA(1);

                        if ( (LA177_0==22) ) {
                            alt177=1;
                        }


                        switch (alt177) {
                    	case 1 :
                    	    // InternalKerML.g:8389:5: otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
                    	    {
                    	    otherlv_5=(Token)match(input,22,FOLLOW_108); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_1_4_0());
                    	      				
                    	    }
                    	    // InternalKerML.g:8393:5: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
                    	    // InternalKerML.g:8394:6: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
                    	    {
                    	    // InternalKerML.g:8394:6: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
                    	    // InternalKerML.g:8395:7: lv_ownedRelationship_6_0= ruleConnectorEndMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    lv_ownedRelationship_6_0=ruleConnectorEndMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_6_0,
                    	      								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop177;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getNaryConnectorDeclarationAccess().getRightParenthesisKeyword_1_5());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaryConnectorDeclaration"


    // $ANTLR start "entryRuleConnectorEndMember"
    // InternalKerML.g:8422:1: entryRuleConnectorEndMember returns [EObject current=null] : iv_ruleConnectorEndMember= ruleConnectorEndMember EOF ;
    public final EObject entryRuleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEndMember = null;


        try {
            // InternalKerML.g:8422:59: (iv_ruleConnectorEndMember= ruleConnectorEndMember EOF )
            // InternalKerML.g:8423:2: iv_ruleConnectorEndMember= ruleConnectorEndMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEndMember=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEndMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEndMember"


    // $ANTLR start "ruleConnectorEndMember"
    // InternalKerML.g:8429:1: ruleConnectorEndMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) ) ;
    public final EObject ruleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8435:2: ( ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) ) )
            // InternalKerML.g:8436:2: ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) )
            {
            // InternalKerML.g:8436:2: ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) )
            // InternalKerML.g:8437:3: (lv_ownedRelatedElement_0_0= ruleConnectorEnd )
            {
            // InternalKerML.g:8437:3: (lv_ownedRelatedElement_0_0= ruleConnectorEnd )
            // InternalKerML.g:8438:4: lv_ownedRelatedElement_0_0= ruleConnectorEnd
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementConnectorEndParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ConnectorEnd");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEndMember"


    // $ANTLR start "entryRuleConnectorEnd"
    // InternalKerML.g:8458:1: entryRuleConnectorEnd returns [EObject current=null] : iv_ruleConnectorEnd= ruleConnectorEnd EOF ;
    public final EObject entryRuleConnectorEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEnd = null;


        try {
            // InternalKerML.g:8458:53: (iv_ruleConnectorEnd= ruleConnectorEnd EOF )
            // InternalKerML.g:8459:2: iv_ruleConnectorEnd= ruleConnectorEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEnd=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEnd"


    // $ANTLR start "ruleConnectorEnd"
    // InternalKerML.g:8465:1: ruleConnectorEnd returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) ;
    public final EObject ruleConnectorEnd() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8471:2: ( ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) )
            // InternalKerML.g:8472:2: ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
            {
            // InternalKerML.g:8472:2: ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
            // InternalKerML.g:8473:3: ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
            {
            // InternalKerML.g:8473:3: ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==RULE_ID) ) {
                int LA179_1 = input.LA(2);

                if ( ((LA179_1>=75 && LA179_1<=76)) ) {
                    alt179=1;
                }
            }
            else if ( (LA179_0==RULE_UNRESTRICTED_NAME) ) {
                int LA179_2 = input.LA(2);

                if ( ((LA179_2>=75 && LA179_2<=76)) ) {
                    alt179=1;
                }
            }
            switch (alt179) {
                case 1 :
                    // InternalKerML.g:8474:4: ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword
                    {
                    // InternalKerML.g:8474:4: ( (lv_name_0_0= ruleName ) )
                    // InternalKerML.g:8475:5: (lv_name_0_0= ruleName )
                    {
                    // InternalKerML.g:8475:5: (lv_name_0_0= ruleName )
                    // InternalKerML.g:8476:6: lv_name_0_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorEndAccess().getNameNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_113);
                    lv_name_0_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorEndRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getConnectorEndAccess().getReferencesKeywordParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    ruleReferencesKeyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:8501:3: ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) )
            // InternalKerML.g:8502:4: (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting )
            {
            // InternalKerML.g:8502:4: (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting )
            // InternalKerML.g:8503:5: lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_37);
            lv_ownedRelationship_2_0=ruleOwnedReferenceSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedReferenceSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:8520:3: ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==88) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalKerML.g:8521:4: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:8521:4: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:8522:5: lv_ownedRelationship_3_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_3_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_3_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEnd"


    // $ANTLR start "entryRuleBindingConnector"
    // InternalKerML.g:8543:1: entryRuleBindingConnector returns [EObject current=null] : iv_ruleBindingConnector= ruleBindingConnector EOF ;
    public final EObject entryRuleBindingConnector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingConnector = null;


        try {
            // InternalKerML.g:8543:57: (iv_ruleBindingConnector= ruleBindingConnector EOF )
            // InternalKerML.g:8544:2: iv_ruleBindingConnector= ruleBindingConnector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingConnectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingConnector=ruleBindingConnector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingConnector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBindingConnector"


    // $ANTLR start "ruleBindingConnector"
    // InternalKerML.g:8550:1: ruleBindingConnector returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleBindingConnector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_BindingConnectorDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8556:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8557:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8557:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8558:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_114);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,97,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBindingConnectorAccess().getBindingKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_BindingConnectorDeclaration_2=ruleBindingConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BindingConnectorDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBindingConnector"


    // $ANTLR start "ruleBindingConnectorDeclaration"
    // InternalKerML.g:8600:1: ruleBindingConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) ) ;
    public final EObject ruleBindingConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_isSufficient_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_7_0 = null;

        EObject lv_ownedRelationship_9_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8606:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) ) )
            // InternalKerML.g:8607:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) )
            {
            // InternalKerML.g:8607:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) )
            int alt185=2;
            alt185 = dfa185.predict(input);
            switch (alt185) {
                case 1 :
                    // InternalKerML.g:8608:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? )
                    {
                    // InternalKerML.g:8608:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? )
                    // InternalKerML.g:8609:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_116);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:8620:4: (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==67) ) {
                        alt181=1;
                    }
                    switch (alt181) {
                        case 1 :
                            // InternalKerML.g:8621:5: otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                            {
                            otherlv_1=(Token)match(input,67,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_0());
                              				
                            }
                            // InternalKerML.g:8625:5: ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8626:6: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8626:6: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                            // InternalKerML.g:8627:7: lv_ownedRelationship_2_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_117);
                            lv_ownedRelationship_2_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_2_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,84,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_0_1_2());
                              				
                            }
                            // InternalKerML.g:8648:5: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8649:6: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8649:6: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                            // InternalKerML.g:8650:7: lv_ownedRelationship_4_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_3_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_4_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_4_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:8670:3: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? )
                    {
                    // InternalKerML.g:8670:3: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? )
                    // InternalKerML.g:8671:4: ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )?
                    {
                    // InternalKerML.g:8671:4: ( (lv_isSufficient_5_0= 'all' ) )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==32) ) {
                        alt182=1;
                    }
                    switch (alt182) {
                        case 1 :
                            // InternalKerML.g:8672:5: (lv_isSufficient_5_0= 'all' )
                            {
                            // InternalKerML.g:8672:5: (lv_isSufficient_5_0= 'all' )
                            // InternalKerML.g:8673:6: lv_isSufficient_5_0= 'all'
                            {
                            lv_isSufficient_5_0=(Token)match(input,32,FOLLOW_118); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_isSufficient_5_0, grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
                              						}
                              						setWithLastConsumed(current, "isSufficient", lv_isSufficient_5_0 != null, "all");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:8685:4: ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )?
                    int alt184=2;
                    int LA184_0 = input.LA(1);

                    if ( ((LA184_0>=RULE_ID && LA184_0<=RULE_UNRESTRICTED_NAME)||LA184_0==67) ) {
                        alt184=1;
                    }
                    switch (alt184) {
                        case 1 :
                            // InternalKerML.g:8686:5: (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) )
                            {
                            // InternalKerML.g:8686:5: (otherlv_6= 'of' )?
                            int alt183=2;
                            int LA183_0 = input.LA(1);

                            if ( (LA183_0==67) ) {
                                alt183=1;
                            }
                            switch (alt183) {
                                case 1 :
                                    // InternalKerML.g:8687:6: otherlv_6= 'of'
                                    {
                                    otherlv_6=(Token)match(input,67,FOLLOW_108); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_6, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_1_1_0());
                                      					
                                    }

                                    }
                                    break;

                            }

                            // InternalKerML.g:8692:5: ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8693:6: (lv_ownedRelationship_7_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8693:6: (lv_ownedRelationship_7_0= ruleConnectorEndMember )
                            // InternalKerML.g:8694:7: lv_ownedRelationship_7_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_117);
                            lv_ownedRelationship_7_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_7_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,84,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_1_1_2());
                              				
                            }
                            // InternalKerML.g:8715:5: ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8716:6: (lv_ownedRelationship_9_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8716:6: (lv_ownedRelationship_9_0= ruleConnectorEndMember )
                            // InternalKerML.g:8717:7: lv_ownedRelationship_9_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_1_3_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_9_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_9_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBindingConnectorDeclaration"


    // $ANTLR start "entryRuleSuccession"
    // InternalKerML.g:8740:1: entryRuleSuccession returns [EObject current=null] : iv_ruleSuccession= ruleSuccession EOF ;
    public final EObject entryRuleSuccession() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuccession = null;


        try {
            // InternalKerML.g:8740:51: (iv_ruleSuccession= ruleSuccession EOF )
            // InternalKerML.g:8741:2: iv_ruleSuccession= ruleSuccession EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuccessionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuccession=ruleSuccession();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuccession; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuccession"


    // $ANTLR start "ruleSuccession"
    // InternalKerML.g:8747:1: ruleSuccession returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleSuccession() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_SuccessionDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8753:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8754:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8754:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8755:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_119);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,98,FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSuccessionAccess().getSuccessionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_SuccessionDeclaration_2=ruleSuccessionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SuccessionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccession"


    // $ANTLR start "ruleSuccessionDeclaration"
    // InternalKerML.g:8797:1: ruleSuccessionDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) ) ;
    public final EObject ruleSuccessionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_isSufficient_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_7_0 = null;

        EObject lv_ownedRelationship_9_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8803:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) ) )
            // InternalKerML.g:8804:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) )
            {
            // InternalKerML.g:8804:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) )
            int alt190=2;
            alt190 = dfa190.predict(input);
            switch (alt190) {
                case 1 :
                    // InternalKerML.g:8805:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? )
                    {
                    // InternalKerML.g:8805:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? )
                    // InternalKerML.g:8806:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_121);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:8817:4: (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )?
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==99) ) {
                        alt186=1;
                    }
                    switch (alt186) {
                        case 1 :
                            // InternalKerML.g:8818:5: otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                            {
                            otherlv_1=(Token)match(input,99,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_0());
                              				
                            }
                            // InternalKerML.g:8822:5: ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8823:6: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8823:6: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                            // InternalKerML.g:8824:7: lv_ownedRelationship_2_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_122);
                            lv_ownedRelationship_2_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_2_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,100,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_0_1_2());
                              				
                            }
                            // InternalKerML.g:8845:5: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8846:6: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8846:6: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                            // InternalKerML.g:8847:7: lv_ownedRelationship_4_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_3_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_4_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_4_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:8867:3: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? )
                    {
                    // InternalKerML.g:8867:3: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? )
                    // InternalKerML.g:8868:4: ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )?
                    {
                    // InternalKerML.g:8868:4: ( (lv_isSufficient_5_0= 'all' ) )?
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==32) ) {
                        alt187=1;
                    }
                    switch (alt187) {
                        case 1 :
                            // InternalKerML.g:8869:5: (lv_isSufficient_5_0= 'all' )
                            {
                            // InternalKerML.g:8869:5: (lv_isSufficient_5_0= 'all' )
                            // InternalKerML.g:8870:6: lv_isSufficient_5_0= 'all'
                            {
                            lv_isSufficient_5_0=(Token)match(input,32,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_isSufficient_5_0, grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
                              						}
                              						setWithLastConsumed(current, "isSufficient", lv_isSufficient_5_0 != null, "all");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:8882:4: ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )?
                    int alt189=2;
                    int LA189_0 = input.LA(1);

                    if ( ((LA189_0>=RULE_ID && LA189_0<=RULE_UNRESTRICTED_NAME)||LA189_0==99) ) {
                        alt189=1;
                    }
                    switch (alt189) {
                        case 1 :
                            // InternalKerML.g:8883:5: (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) )
                            {
                            // InternalKerML.g:8883:5: (otherlv_6= 'first' )?
                            int alt188=2;
                            int LA188_0 = input.LA(1);

                            if ( (LA188_0==99) ) {
                                alt188=1;
                            }
                            switch (alt188) {
                                case 1 :
                                    // InternalKerML.g:8884:6: otherlv_6= 'first'
                                    {
                                    otherlv_6=(Token)match(input,99,FOLLOW_108); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_6, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_1_1_0());
                                      					
                                    }

                                    }
                                    break;

                            }

                            // InternalKerML.g:8889:5: ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8890:6: (lv_ownedRelationship_7_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8890:6: (lv_ownedRelationship_7_0= ruleConnectorEndMember )
                            // InternalKerML.g:8891:7: lv_ownedRelationship_7_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_122);
                            lv_ownedRelationship_7_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_7_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,100,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_1_1_2());
                              				
                            }
                            // InternalKerML.g:8912:5: ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) )
                            // InternalKerML.g:8913:6: (lv_ownedRelationship_9_0= ruleConnectorEndMember )
                            {
                            // InternalKerML.g:8913:6: (lv_ownedRelationship_9_0= ruleConnectorEndMember )
                            // InternalKerML.g:8914:7: lv_ownedRelationship_9_0= ruleConnectorEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_1_3_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_9_0=ruleConnectorEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_9_0,
                              								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccessionDeclaration"


    // $ANTLR start "entryRuleBehavior"
    // InternalKerML.g:8937:1: entryRuleBehavior returns [EObject current=null] : iv_ruleBehavior= ruleBehavior EOF ;
    public final EObject entryRuleBehavior() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehavior = null;


        try {
            // InternalKerML.g:8937:49: (iv_ruleBehavior= ruleBehavior EOF )
            // InternalKerML.g:8938:2: iv_ruleBehavior= ruleBehavior EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBehaviorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBehavior=ruleBehavior();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBehavior; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehavior"


    // $ANTLR start "ruleBehavior"
    // InternalKerML.g:8944:1: ruleBehavior returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleBehavior() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8950:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8951:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8951:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8952:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_124);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,101,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBehaviorAccess().getBehaviorKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehavior"


    // $ANTLR start "entryRuleStep"
    // InternalKerML.g:8993:1: entryRuleStep returns [EObject current=null] : iv_ruleStep= ruleStep EOF ;
    public final EObject entryRuleStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStep = null;


        try {
            // InternalKerML.g:8993:45: (iv_ruleStep= ruleStep EOF )
            // InternalKerML.g:8994:2: iv_ruleStep= ruleStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStep=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStep"


    // $ANTLR start "ruleStep"
    // InternalKerML.g:9000:1: ruleStep returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_StepDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9006:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:9007:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9007:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:9008:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_125);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,102,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStepAccess().getStepKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_StepDeclaration_2=ruleStepDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StepDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStep"


    // $ANTLR start "ruleStepDeclaration"
    // InternalKerML.g:9050:1: ruleStepDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) ;
    public final EObject ruleStepDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_ValuePart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:9056:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) )
            // InternalKerML.g:9057:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            {
            // InternalKerML.g:9057:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            // InternalKerML.g:9058:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )?
            {
            // InternalKerML.g:9058:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( ((LA191_0>=RULE_ID && LA191_0<=RULE_UNRESTRICTED_NAME)||LA191_0==13||LA191_0==32||LA191_0==43||(LA191_0>=45 && LA191_0<=46)||(LA191_0>=70 && LA191_0<=78)||LA191_0==88) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalKerML.g:9059:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getStepDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getStepDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_127);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:9071:3: (this_ValuePart_1= ruleValuePart[$current] )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( ((LA192_0>=84 && LA192_0<=86)) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalKerML.g:9072:4: this_ValuePart_1= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getStepDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_ValuePart_1=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStepDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalKerML.g:9088:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKerML.g:9088:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKerML.g:9089:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKerML.g:9095:1: ruleFunction returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9101:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9102:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9102:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:9103:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,103,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_62);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "ruleFunctionBody"
    // InternalKerML.g:9145:1: ruleFunctionBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) ) ;
    public final EObject ruleFunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_FunctionBodyPart_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:9151:2: ( (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) ) )
            // InternalKerML.g:9152:2: (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) )
            {
            // InternalKerML.g:9152:2: (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) )
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==16) ) {
                alt193=1;
            }
            else if ( (LA193_0==17) ) {
                alt193=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }
            switch (alt193) {
                case 1 :
                    // InternalKerML.g:9153:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:9158:3: (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' )
                    {
                    // InternalKerML.g:9158:3: (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' )
                    // InternalKerML.g:9159:4: otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFunctionBodyRule());
                      				}
                      				newCompositeNode(grammarAccess.getFunctionBodyAccess().getFunctionBodyPartParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_130);
                    this_FunctionBodyPart_2=ruleFunctionBodyPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FunctionBodyPart_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "ruleFunctionBodyPart"
    // InternalKerML.g:9184:1: ruleFunctionBodyPart[EObject in_current] returns [EObject current=in_current] : ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? ) ;
    public final EObject ruleFunctionBodyPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9190:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? ) )
            // InternalKerML.g:9191:2: ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? )
            {
            // InternalKerML.g:9191:2: ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? )
            // InternalKerML.g:9192:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )?
            {
            // InternalKerML.g:9192:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )*
            loop194:
            do {
                int alt194=6;
                alt194 = dfa194.predict(input);
                switch (alt194) {
            	case 1 :
            	    // InternalKerML.g:9193:4: ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) )
            	    {
            	    // InternalKerML.g:9193:4: ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) )
            	    // InternalKerML.g:9194:5: (lv_ownedRelationship_0_0= ruleNonFeatureMember )
            	    {
            	    // InternalKerML.g:9194:5: (lv_ownedRelationship_0_0= ruleNonFeatureMember )
            	    // InternalKerML.g:9195:6: lv_ownedRelationship_0_0= ruleNonFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_ownedRelationship_0_0=ruleNonFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_0_0,
            	      							"org.omg.kerml.xtext.KerML.NonFeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKerML.g:9213:4: ( (lv_ownedRelationship_1_0= ruleFeatureMember ) )
            	    {
            	    // InternalKerML.g:9213:4: ( (lv_ownedRelationship_1_0= ruleFeatureMember ) )
            	    // InternalKerML.g:9214:5: (lv_ownedRelationship_1_0= ruleFeatureMember )
            	    {
            	    // InternalKerML.g:9214:5: (lv_ownedRelationship_1_0= ruleFeatureMember )
            	    // InternalKerML.g:9215:6: lv_ownedRelationship_1_0= ruleFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipFeatureMemberParserRuleCall_0_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_ownedRelationship_1_0=ruleFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_1_0,
            	      							"org.omg.kerml.xtext.KerML.FeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKerML.g:9233:4: ( (lv_ownedRelationship_2_0= ruleAliasMember ) )
            	    {
            	    // InternalKerML.g:9233:4: ( (lv_ownedRelationship_2_0= ruleAliasMember ) )
            	    // InternalKerML.g:9234:5: (lv_ownedRelationship_2_0= ruleAliasMember )
            	    {
            	    // InternalKerML.g:9234:5: (lv_ownedRelationship_2_0= ruleAliasMember )
            	    // InternalKerML.g:9235:6: lv_ownedRelationship_2_0= ruleAliasMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipAliasMemberParserRuleCall_0_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_ownedRelationship_2_0=ruleAliasMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.AliasMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKerML.g:9253:4: ( (lv_ownedRelationship_3_0= ruleImport ) )
            	    {
            	    // InternalKerML.g:9253:4: ( (lv_ownedRelationship_3_0= ruleImport ) )
            	    // InternalKerML.g:9254:5: (lv_ownedRelationship_3_0= ruleImport )
            	    {
            	    // InternalKerML.g:9254:5: (lv_ownedRelationship_3_0= ruleImport )
            	    // InternalKerML.g:9255:6: lv_ownedRelationship_3_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipImportParserRuleCall_0_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_ownedRelationship_3_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Import");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKerML.g:9273:4: ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) )
            	    {
            	    // InternalKerML.g:9273:4: ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) )
            	    // InternalKerML.g:9274:5: (lv_ownedRelationship_4_0= ruleReturnFeatureMember )
            	    {
            	    // InternalKerML.g:9274:5: (lv_ownedRelationship_4_0= ruleReturnFeatureMember )
            	    // InternalKerML.g:9275:6: lv_ownedRelationship_4_0= ruleReturnFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipReturnFeatureMemberParserRuleCall_0_4_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_ownedRelationship_4_0=ruleReturnFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.ReturnFeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);

            // InternalKerML.g:9293:3: ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==EOF||(LA195_0>=RULE_REGULAR_COMMENT && LA195_0<=RULE_UNRESTRICTED_NAME)||LA195_0==13||(LA195_0>=15 && LA195_0<=17)||LA195_0==19||LA195_0==21||LA195_0==23||(LA195_0>=25 && LA195_0<=29)||(LA195_0>=32 && LA195_0<=33)||(LA195_0>=37 && LA195_0<=43)||(LA195_0>=45 && LA195_0<=47)||(LA195_0>=51 && LA195_0<=64)||(LA195_0>=66 && LA195_0<=67)||(LA195_0>=70 && LA195_0<=83)||(LA195_0>=87 && LA195_0<=88)||(LA195_0>=90 && LA195_0<=95)||(LA195_0>=97 && LA195_0<=98)||(LA195_0>=101 && LA195_0<=117)||LA195_0==120||(LA195_0>=132 && LA195_0<=134)||(LA195_0>=139 && LA195_0<=140)||LA195_0==144||(LA195_0>=147 && LA195_0<=153)) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // InternalKerML.g:9294:4: (lv_ownedRelationship_5_0= ruleResultExpressionMember )
                    {
                    // InternalKerML.g:9294:4: (lv_ownedRelationship_5_0= ruleResultExpressionMember )
                    // InternalKerML.g:9295:5: lv_ownedRelationship_5_0= ruleResultExpressionMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipResultExpressionMemberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_5_0=ruleResultExpressionMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_5_0,
                      						"org.omg.kerml.xtext.KerML.ResultExpressionMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBodyPart"


    // $ANTLR start "entryRuleReturnFeatureMember"
    // InternalKerML.g:9316:1: entryRuleReturnFeatureMember returns [EObject current=null] : iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF ;
    public final EObject entryRuleReturnFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnFeatureMember = null;


        try {
            // InternalKerML.g:9316:60: (iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF )
            // InternalKerML.g:9317:2: iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnFeatureMember=ruleReturnFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnFeatureMember"


    // $ANTLR start "ruleReturnFeatureMember"
    // InternalKerML.g:9323:1: ruleReturnFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleReturnFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9329:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:9330:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:9330:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            // InternalKerML.g:9331:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getReturnFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getReturnFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_132);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,104,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnFeatureMemberAccess().getReturnKeyword_1());
              		
            }
            // InternalKerML.g:9346:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            // InternalKerML.g:9347:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            {
            // InternalKerML.g:9347:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            // InternalKerML.g:9348:5: lv_ownedRelatedElement_2_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnFeatureMember"


    // $ANTLR start "entryRuleResultExpressionMember"
    // InternalKerML.g:9369:1: entryRuleResultExpressionMember returns [EObject current=null] : iv_ruleResultExpressionMember= ruleResultExpressionMember EOF ;
    public final EObject entryRuleResultExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResultExpressionMember = null;


        try {
            // InternalKerML.g:9369:63: (iv_ruleResultExpressionMember= ruleResultExpressionMember EOF )
            // InternalKerML.g:9370:2: iv_ruleResultExpressionMember= ruleResultExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResultExpressionMember=ruleResultExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResultExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResultExpressionMember"


    // $ANTLR start "ruleResultExpressionMember"
    // InternalKerML.g:9376:1: ruleResultExpressionMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleResultExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9382:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:9383:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:9383:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:9384:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getResultExpressionMemberRule());
              			}
              			newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_38);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:9395:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:9396:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:9396:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:9397:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getResultExpressionMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResultExpressionMember"


    // $ANTLR start "entryRuleExpression"
    // InternalKerML.g:9418:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKerML.g:9418:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKerML.g:9419:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKerML.g:9425:1: ruleExpression returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9431:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9432:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9432:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:9433:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_133);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,105,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getExprKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getExpressionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_62);
            this_ExpressionDeclaration_2=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "ruleExpressionDeclaration"
    // InternalKerML.g:9475:1: ruleExpressionDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) ;
    public final EObject ruleExpressionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_ValuePart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:9481:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) )
            // InternalKerML.g:9482:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            {
            // InternalKerML.g:9482:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            // InternalKerML.g:9483:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )?
            {
            // InternalKerML.g:9483:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( ((LA196_0>=RULE_ID && LA196_0<=RULE_UNRESTRICTED_NAME)||LA196_0==13||LA196_0==32||LA196_0==43||(LA196_0>=45 && LA196_0<=46)||(LA196_0>=70 && LA196_0<=78)||LA196_0==88) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalKerML.g:9484:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getExpressionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_127);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:9496:3: (this_ValuePart_1= ruleValuePart[$current] )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( ((LA197_0>=84 && LA197_0<=86)) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // InternalKerML.g:9497:4: this_ValuePart_1= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getExpressionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_ValuePart_1=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionDeclaration"


    // $ANTLR start "entryRulePredicate"
    // InternalKerML.g:9513:1: entryRulePredicate returns [EObject current=null] : iv_rulePredicate= rulePredicate EOF ;
    public final EObject entryRulePredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePredicate = null;


        try {
            // InternalKerML.g:9513:50: (iv_rulePredicate= rulePredicate EOF )
            // InternalKerML.g:9514:2: iv_rulePredicate= rulePredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPredicateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePredicate=rulePredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePredicate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePredicate"


    // $ANTLR start "rulePredicate"
    // InternalKerML.g:9520:1: rulePredicate returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject rulePredicate() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9526:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9527:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9527:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:9528:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPredicateRule());
              			}
              			newCompositeNode(grammarAccess.getPredicateAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,106,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPredicateAccess().getPredicateKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPredicateRule());
              			}
              			newCompositeNode(grammarAccess.getPredicateAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_62);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPredicateRule());
              			}
              			newCompositeNode(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePredicate"


    // $ANTLR start "entryRuleBooleanExpression"
    // InternalKerML.g:9569:1: entryRuleBooleanExpression returns [EObject current=null] : iv_ruleBooleanExpression= ruleBooleanExpression EOF ;
    public final EObject entryRuleBooleanExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanExpression = null;


        try {
            // InternalKerML.g:9569:58: (iv_ruleBooleanExpression= ruleBooleanExpression EOF )
            // InternalKerML.g:9570:2: iv_ruleBooleanExpression= ruleBooleanExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanExpression=ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanExpression"


    // $ANTLR start "ruleBooleanExpression"
    // InternalKerML.g:9576:1: ruleBooleanExpression returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleBooleanExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9582:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9583:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9583:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:9584:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,107,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBooleanExpressionAccess().getBoolKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_62);
            this_ExpressionDeclaration_2=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanExpression"


    // $ANTLR start "entryRuleInvariant"
    // InternalKerML.g:9625:1: entryRuleInvariant returns [EObject current=null] : iv_ruleInvariant= ruleInvariant EOF ;
    public final EObject entryRuleInvariant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariant = null;


        try {
            // InternalKerML.g:9625:50: (iv_ruleInvariant= ruleInvariant EOF )
            // InternalKerML.g:9626:2: iv_ruleInvariant= ruleInvariant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariant=ruleInvariant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariant"


    // $ANTLR start "ruleInvariant"
    // InternalKerML.g:9632:1: ruleInvariant returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] ) ;
    public final EObject ruleInvariant() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_isNegated_3_0=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_4 = null;

        EObject this_FunctionBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:9638:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9639:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9639:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] )
            // InternalKerML.g:9640:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,108,FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvariantAccess().getInvKeyword_1());
              		
            }
            // InternalKerML.g:9655:3: (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )?
            int alt198=3;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==109) ) {
                alt198=1;
            }
            else if ( (LA198_0==110) ) {
                alt198=2;
            }
            switch (alt198) {
                case 1 :
                    // InternalKerML.g:9656:4: otherlv_2= 'true'
                    {
                    otherlv_2=(Token)match(input,109,FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getInvariantAccess().getTrueKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:9661:4: ( (lv_isNegated_3_0= 'false' ) )
                    {
                    // InternalKerML.g:9661:4: ( (lv_isNegated_3_0= 'false' ) )
                    // InternalKerML.g:9662:5: (lv_isNegated_3_0= 'false' )
                    {
                    // InternalKerML.g:9662:5: (lv_isNegated_3_0= 'false' )
                    // InternalKerML.g:9663:6: lv_isNegated_3_0= 'false'
                    {
                    lv_isNegated_3_0=(Token)match(input,110,FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isNegated_3_0, grammarAccess.getInvariantAccess().getIsNegatedFalseKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInvariantRule());
                      						}
                      						setWithLastConsumed(current, "isNegated", lv_isNegated_3_0 != null, "false");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getExpressionDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_62);
            this_ExpressionDeclaration_4=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_4;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_5=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariant"


    // $ANTLR start "entryRuleInteraction"
    // InternalKerML.g:9702:1: entryRuleInteraction returns [EObject current=null] : iv_ruleInteraction= ruleInteraction EOF ;
    public final EObject entryRuleInteraction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInteraction = null;


        try {
            // InternalKerML.g:9702:52: (iv_ruleInteraction= ruleInteraction EOF )
            // InternalKerML.g:9703:2: iv_ruleInteraction= ruleInteraction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInteractionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInteraction=ruleInteraction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteraction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteraction"


    // $ANTLR start "ruleInteraction"
    // InternalKerML.g:9709:1: ruleInteraction returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleInteraction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9715:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:9716:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9716:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:9717:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_139);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,111,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInteractionAccess().getInteractionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteraction"


    // $ANTLR start "entryRuleItemFlow"
    // InternalKerML.g:9758:1: entryRuleItemFlow returns [EObject current=null] : iv_ruleItemFlow= ruleItemFlow EOF ;
    public final EObject entryRuleItemFlow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlow = null;


        try {
            // InternalKerML.g:9758:49: (iv_ruleItemFlow= ruleItemFlow EOF )
            // InternalKerML.g:9759:2: iv_ruleItemFlow= ruleItemFlow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlow=ruleItemFlow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlow"


    // $ANTLR start "ruleItemFlow"
    // InternalKerML.g:9765:1: ruleItemFlow returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleItemFlow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ItemFlowDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9771:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:9772:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9772:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:9773:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_140);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,112,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getItemFlowAccess().getFlowKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ItemFlowDeclaration_2=ruleItemFlowDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ItemFlowDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlow"


    // $ANTLR start "entryRuleSuccessionItemFlow"
    // InternalKerML.g:9814:1: entryRuleSuccessionItemFlow returns [EObject current=null] : iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF ;
    public final EObject entryRuleSuccessionItemFlow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuccessionItemFlow = null;


        try {
            // InternalKerML.g:9814:59: (iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF )
            // InternalKerML.g:9815:2: iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuccessionItemFlowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuccessionItemFlow=ruleSuccessionItemFlow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuccessionItemFlow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuccessionItemFlow"


    // $ANTLR start "ruleSuccessionItemFlow"
    // InternalKerML.g:9821:1: ruleSuccessionItemFlow returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) ;
    public final EObject ruleSuccessionItemFlow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ItemFlowDeclaration_3 = null;

        EObject this_TypeBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:9827:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) )
            // InternalKerML.g:9828:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9828:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            // InternalKerML.g:9829:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_119);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,98,FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSuccessionItemFlowAccess().getSuccessionKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,112,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSuccessionItemFlowAccess().getFlowKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_24);
            this_ItemFlowDeclaration_3=ruleItemFlowDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ItemFlowDeclaration_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getTypeBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_4=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccessionItemFlow"


    // $ANTLR start "ruleItemFlowDeclaration"
    // InternalKerML.g:9875:1: ruleItemFlowDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )? (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )? ) | ( ( (lv_isSufficient_8_0= 'all' ) )? ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) otherlv_10= 'to' ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) ) ) ) ;
    public final EObject ruleItemFlowDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_isSufficient_8_0=null;
        Token otherlv_10=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject this_ValuePart_1 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_5_0 = null;

        EObject lv_ownedRelationship_7_0 = null;

        EObject lv_ownedRelationship_9_0 = null;

        EObject lv_ownedRelationship_11_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9881:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )? (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )? ) | ( ( (lv_isSufficient_8_0= 'all' ) )? ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) otherlv_10= 'to' ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) ) ) ) )
            // InternalKerML.g:9882:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )? (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )? ) | ( ( (lv_isSufficient_8_0= 'all' ) )? ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) otherlv_10= 'to' ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) ) ) )
            {
            // InternalKerML.g:9882:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )? (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )? ) | ( ( (lv_isSufficient_8_0= 'all' ) )? ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) otherlv_10= 'to' ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) ) ) )
            int alt204=2;
            switch ( input.LA(1) ) {
            case 32:
                {
                switch ( input.LA(2) ) {
                case RULE_ID:
                    {
                    int LA204_3 = input.LA(3);

                    if ( ((LA204_3>=16 && LA204_3<=17)||LA204_3==21||LA204_3==43||(LA204_3>=45 && LA204_3<=50)||(LA204_3>=65 && LA204_3<=68)||(LA204_3>=70 && LA204_3<=78)||(LA204_3>=84 && LA204_3<=86)||LA204_3==88) ) {
                        alt204=1;
                    }
                    else if ( (LA204_3==20||LA204_3==34||LA204_3==113) ) {
                        alt204=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 204, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA204_4 = input.LA(3);

                    if ( ((LA204_4>=16 && LA204_4<=17)||LA204_4==21||LA204_4==43||(LA204_4>=45 && LA204_4<=50)||(LA204_4>=65 && LA204_4<=68)||(LA204_4>=70 && LA204_4<=78)||(LA204_4>=84 && LA204_4<=86)||LA204_4==88) ) {
                        alt204=1;
                    }
                    else if ( (LA204_4==20||LA204_4==34||LA204_4==113) ) {
                        alt204=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 204, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 13:
                case 43:
                case 45:
                case 46:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 88:
                    {
                    alt204=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 204, 1, input);

                    throw nvae;
                }

                }
                break;
            case 13:
            case 16:
            case 17:
            case 21:
            case 43:
            case 45:
            case 46:
            case 67:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 84:
            case 85:
            case 86:
            case 88:
                {
                alt204=1;
                }
                break;
            case RULE_ID:
                {
                int LA204_3 = input.LA(2);

                if ( ((LA204_3>=16 && LA204_3<=17)||LA204_3==21||LA204_3==43||(LA204_3>=45 && LA204_3<=50)||(LA204_3>=65 && LA204_3<=68)||(LA204_3>=70 && LA204_3<=78)||(LA204_3>=84 && LA204_3<=86)||LA204_3==88) ) {
                    alt204=1;
                }
                else if ( (LA204_3==20||LA204_3==34||LA204_3==113) ) {
                    alt204=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 204, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UNRESTRICTED_NAME:
                {
                int LA204_4 = input.LA(2);

                if ( ((LA204_4>=16 && LA204_4<=17)||LA204_4==21||LA204_4==43||(LA204_4>=45 && LA204_4<=50)||(LA204_4>=65 && LA204_4<=68)||(LA204_4>=70 && LA204_4<=78)||(LA204_4>=84 && LA204_4<=86)||LA204_4==88) ) {
                    alt204=1;
                }
                else if ( (LA204_4==20||LA204_4==34||LA204_4==113) ) {
                    alt204=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 204, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }

            switch (alt204) {
                case 1 :
                    // InternalKerML.g:9883:3: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )? (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )? )
                    {
                    // InternalKerML.g:9883:3: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )? (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )? )
                    // InternalKerML.g:9884:4: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )? (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )?
                    {
                    // InternalKerML.g:9884:4: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( ((LA199_0>=RULE_ID && LA199_0<=RULE_UNRESTRICTED_NAME)||LA199_0==13||LA199_0==32||LA199_0==43||(LA199_0>=45 && LA199_0<=46)||(LA199_0>=70 && LA199_0<=78)||LA199_0==88) ) {
                        alt199=1;
                    }
                    switch (alt199) {
                        case 1 :
                            // InternalKerML.g:9885:5: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
                              					}
                              					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0());
                              				
                            }
                            pushFollow(FOLLOW_142);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_FeatureDeclaration_0;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:9897:4: (this_ValuePart_1= ruleValuePart[$current] )?
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( ((LA200_0>=84 && LA200_0<=86)) ) {
                        alt200=1;
                    }
                    switch (alt200) {
                        case 1 :
                            // InternalKerML.g:9898:5: this_ValuePart_1= ruleValuePart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
                              					}
                              					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getValuePartParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_143);
                            this_ValuePart_1=ruleValuePart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_ValuePart_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:9910:4: (otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) ) )?
                    int alt201=2;
                    int LA201_0 = input.LA(1);

                    if ( (LA201_0==67) ) {
                        alt201=1;
                    }
                    switch (alt201) {
                        case 1 :
                            // InternalKerML.g:9911:5: otherlv_2= 'of' ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) )
                            {
                            otherlv_2=(Token)match(input,67,FOLLOW_144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_2_0());
                              				
                            }
                            // InternalKerML.g:9915:5: ( (lv_ownedRelationship_3_0= ruleItemFeatureMember ) )
                            // InternalKerML.g:9916:6: (lv_ownedRelationship_3_0= ruleItemFeatureMember )
                            {
                            // InternalKerML.g:9916:6: (lv_ownedRelationship_3_0= ruleItemFeatureMember )
                            // InternalKerML.g:9917:7: lv_ownedRelationship_3_0= ruleItemFeatureMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFeatureMemberParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_145);
                            lv_ownedRelationship_3_0=ruleItemFeatureMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.xtext.KerML.ItemFeatureMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKerML.g:9935:4: (otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) )?
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==21) ) {
                        alt202=1;
                    }
                    switch (alt202) {
                        case 1 :
                            // InternalKerML.g:9936:5: otherlv_4= 'from' ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) ) otherlv_6= 'to' ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) )
                            {
                            otherlv_4=(Token)match(input,21,FOLLOW_146); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_3_0());
                              				
                            }
                            // InternalKerML.g:9940:5: ( (lv_ownedRelationship_5_0= ruleItemFlowEndMember ) )
                            // InternalKerML.g:9941:6: (lv_ownedRelationship_5_0= ruleItemFlowEndMember )
                            {
                            // InternalKerML.g:9941:6: (lv_ownedRelationship_5_0= ruleItemFlowEndMember )
                            // InternalKerML.g:9942:7: lv_ownedRelationship_5_0= ruleItemFlowEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_109);
                            lv_ownedRelationship_5_0=ruleItemFlowEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_5_0,
                              								"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_6=(Token)match(input,20,FOLLOW_147); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getItemFlowDeclarationAccess().getToKeyword_0_3_2());
                              				
                            }
                            // InternalKerML.g:9963:5: ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) )
                            // InternalKerML.g:9964:6: (lv_ownedRelationship_7_0= ruleItemFlowEndMember )
                            {
                            // InternalKerML.g:9964:6: (lv_ownedRelationship_7_0= ruleItemFlowEndMember )
                            // InternalKerML.g:9965:7: lv_ownedRelationship_7_0= ruleItemFlowEndMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_0_3_3_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_7_0=ruleItemFlowEndMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_7_0,
                              								"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:9985:3: ( ( (lv_isSufficient_8_0= 'all' ) )? ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) otherlv_10= 'to' ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) ) )
                    {
                    // InternalKerML.g:9985:3: ( ( (lv_isSufficient_8_0= 'all' ) )? ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) otherlv_10= 'to' ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) ) )
                    // InternalKerML.g:9986:4: ( (lv_isSufficient_8_0= 'all' ) )? ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) otherlv_10= 'to' ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) )
                    {
                    // InternalKerML.g:9986:4: ( (lv_isSufficient_8_0= 'all' ) )?
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( (LA203_0==32) ) {
                        alt203=1;
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalKerML.g:9987:5: (lv_isSufficient_8_0= 'all' )
                            {
                            // InternalKerML.g:9987:5: (lv_isSufficient_8_0= 'all' )
                            // InternalKerML.g:9988:6: lv_isSufficient_8_0= 'all'
                            {
                            lv_isSufficient_8_0=(Token)match(input,32,FOLLOW_146); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_isSufficient_8_0, grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
                              						}
                              						setWithLastConsumed(current, "isSufficient", lv_isSufficient_8_0 != null, "all");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:10000:4: ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) )
                    // InternalKerML.g:10001:5: (lv_ownedRelationship_9_0= ruleItemFlowEndMember )
                    {
                    // InternalKerML.g:10001:5: (lv_ownedRelationship_9_0= ruleItemFlowEndMember )
                    // InternalKerML.g:10002:6: lv_ownedRelationship_9_0= ruleItemFlowEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    lv_ownedRelationship_9_0=ruleItemFlowEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_9_0,
                      							"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,20,FOLLOW_147); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getItemFlowDeclarationAccess().getToKeyword_1_2());
                      			
                    }
                    // InternalKerML.g:10023:4: ( (lv_ownedRelationship_11_0= ruleItemFlowEndMember ) )
                    // InternalKerML.g:10024:5: (lv_ownedRelationship_11_0= ruleItemFlowEndMember )
                    {
                    // InternalKerML.g:10024:5: (lv_ownedRelationship_11_0= ruleItemFlowEndMember )
                    // InternalKerML.g:10025:6: lv_ownedRelationship_11_0= ruleItemFlowEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_11_0=ruleItemFlowEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_11_0,
                      							"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowDeclaration"


    // $ANTLR start "entryRuleItemFeatureMember"
    // InternalKerML.g:10047:1: entryRuleItemFeatureMember returns [EObject current=null] : iv_ruleItemFeatureMember= ruleItemFeatureMember EOF ;
    public final EObject entryRuleItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFeatureMember = null;


        try {
            // InternalKerML.g:10047:58: (iv_ruleItemFeatureMember= ruleItemFeatureMember EOF )
            // InternalKerML.g:10048:2: iv_ruleItemFeatureMember= ruleItemFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFeatureMember=ruleItemFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFeatureMember"


    // $ANTLR start "ruleItemFeatureMember"
    // InternalKerML.g:10054:1: ruleItemFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) ) ;
    public final EObject ruleItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10060:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) ) )
            // InternalKerML.g:10061:2: ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) )
            {
            // InternalKerML.g:10061:2: ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) )
            // InternalKerML.g:10062:3: (lv_ownedRelatedElement_0_0= ruleItemFeature )
            {
            // InternalKerML.g:10062:3: (lv_ownedRelatedElement_0_0= ruleItemFeature )
            // InternalKerML.g:10063:4: lv_ownedRelatedElement_0_0= ruleItemFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFeatureMemberAccess().getOwnedRelatedElementItemFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFeatureMember"


    // $ANTLR start "entryRuleItemFeature"
    // InternalKerML.g:10083:1: entryRuleItemFeature returns [EObject current=null] : iv_ruleItemFeature= ruleItemFeature EOF ;
    public final EObject entryRuleItemFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFeature = null;


        try {
            // InternalKerML.g:10083:52: (iv_ruleItemFeature= ruleItemFeature EOF )
            // InternalKerML.g:10084:2: iv_ruleItemFeature= ruleItemFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFeature=ruleItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFeature"


    // $ANTLR start "ruleItemFeature"
    // InternalKerML.g:10090:1: ruleItemFeature returns [EObject current=null] : ( ( (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )? ) | ( ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) ) ) ) ;
    public final EObject ruleItemFeature() throws RecognitionException {
        EObject current = null;

        EObject this_Identification_0 = null;

        EObject this_ItemFeatureSpecializationPart_1 = null;

        EObject this_ValuePart_2 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10096:2: ( ( ( (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )? ) | ( ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) ) ) ) )
            // InternalKerML.g:10097:2: ( ( (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )? ) | ( ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) ) ) )
            {
            // InternalKerML.g:10097:2: ( ( (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )? ) | ( ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) ) ) )
            int alt208=3;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    // InternalKerML.g:10098:3: ( (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )? )
                    {
                    // InternalKerML.g:10098:3: ( (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )? )
                    // InternalKerML.g:10099:4: (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )?
                    {
                    // InternalKerML.g:10099:4: (this_Identification_0= ruleIdentification[$current] )?
                    int alt205=2;
                    int LA205_0 = input.LA(1);

                    if ( ((LA205_0>=RULE_ID && LA205_0<=RULE_UNRESTRICTED_NAME)||LA205_0==13) ) {
                        alt205=1;
                    }
                    switch (alt205) {
                        case 1 :
                            // InternalKerML.g:10100:5: this_Identification_0= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getItemFeatureRule());
                              					}
                              					newCompositeNode(grammarAccess.getItemFeatureAccess().getIdentificationParserRuleCall_0_0());
                              				
                            }
                            pushFollow(FOLLOW_144);
                            this_Identification_0=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_0;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getItemFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getItemFeatureAccess().getItemFeatureSpecializationPartParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_127);
                    this_ItemFeatureSpecializationPart_1=ruleItemFeatureSpecializationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ItemFeatureSpecializationPart_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:10123:4: (this_ValuePart_2= ruleValuePart[$current] )?
                    int alt206=2;
                    int LA206_0 = input.LA(1);

                    if ( ((LA206_0>=84 && LA206_0<=86)) ) {
                        alt206=1;
                    }
                    switch (alt206) {
                        case 1 :
                            // InternalKerML.g:10124:5: this_ValuePart_2= ruleValuePart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getItemFeatureRule());
                              					}
                              					newCompositeNode(grammarAccess.getItemFeatureAccess().getValuePartParserRuleCall_0_2());
                              				
                            }
                            pushFollow(FOLLOW_2);
                            this_ValuePart_2=ruleValuePart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_ValuePart_2;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:10138:3: ( ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )? )
                    {
                    // InternalKerML.g:10138:3: ( ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )? )
                    // InternalKerML.g:10139:4: ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )?
                    {
                    // InternalKerML.g:10139:4: ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) )
                    // InternalKerML.g:10140:5: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
                    {
                    // InternalKerML.g:10140:5: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
                    // InternalKerML.g:10141:6: lv_ownedRelationship_3_0= ruleOwnedFeatureTyping
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_ownedRelationship_3_0=ruleOwnedFeatureTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:10158:4: ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )?
                    int alt207=2;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==88) ) {
                        alt207=1;
                    }
                    switch (alt207) {
                        case 1 :
                            // InternalKerML.g:10159:5: (lv_ownedRelationship_4_0= ruleOwnedMultiplicity )
                            {
                            // InternalKerML.g:10159:5: (lv_ownedRelationship_4_0= ruleOwnedMultiplicity )
                            // InternalKerML.g:10160:6: lv_ownedRelationship_4_0= ruleOwnedMultiplicity
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_4_0=ruleOwnedMultiplicity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                              						}
                              						add(
                              							current,
                              							"ownedRelationship",
                              							lv_ownedRelationship_4_0,
                              							"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:10179:3: ( ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) ) )
                    {
                    // InternalKerML.g:10179:3: ( ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) ) )
                    // InternalKerML.g:10180:4: ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) )
                    {
                    // InternalKerML.g:10180:4: ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) )
                    // InternalKerML.g:10181:5: (lv_ownedRelationship_5_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:10181:5: (lv_ownedRelationship_5_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:10182:6: lv_ownedRelationship_5_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_ownedRelationship_5_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_5_0,
                      							"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:10199:4: ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) )
                    // InternalKerML.g:10200:5: (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping )
                    {
                    // InternalKerML.g:10200:5: (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping )
                    // InternalKerML.g:10201:6: lv_ownedRelationship_6_0= ruleOwnedFeatureTyping
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_6_0=ruleOwnedFeatureTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_6_0,
                      							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFeature"


    // $ANTLR start "ruleItemFeatureSpecializationPart"
    // InternalKerML.g:10224:1: ruleItemFeatureSpecializationPart[EObject in_current] returns [EObject current=in_current] : ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+ ) ) ;
    public final EObject ruleItemFeatureSpecializationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureSpecialization_0 = null;

        EObject this_MultiplicityPart_1 = null;

        EObject this_FeatureSpecialization_2 = null;

        EObject this_MultiplicityPart_3 = null;

        EObject this_FeatureSpecialization_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:10230:2: ( ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+ ) ) )
            // InternalKerML.g:10231:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+ ) )
            {
            // InternalKerML.g:10231:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+ ) )
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==43||(LA213_0>=72 && LA213_0<=78)) ) {
                alt213=1;
            }
            else if ( ((LA213_0>=70 && LA213_0<=71)||LA213_0==88) ) {
                alt213=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }
            switch (alt213) {
                case 1 :
                    // InternalKerML.g:10232:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    {
                    // InternalKerML.g:10232:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    // InternalKerML.g:10233:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    {
                    // InternalKerML.g:10233:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+
                    int cnt209=0;
                    loop209:
                    do {
                        int alt209=2;
                        alt209 = dfa209.predict(input);
                        switch (alt209) {
                    	case 1 :
                    	    // InternalKerML.g:10234:5: ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getItemFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getItemFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    this_FeatureSpecialization_0=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_0;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt209 >= 1 ) break loop209;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(209, input);
                                throw eee;
                        }
                        cnt209++;
                    } while (true);

                    // InternalKerML.g:10247:4: (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )?
                    int alt210=2;
                    int LA210_0 = input.LA(1);

                    if ( ((LA210_0>=70 && LA210_0<=71)||LA210_0==88) ) {
                        alt210=1;
                    }
                    switch (alt210) {
                        case 1 :
                            // InternalKerML.g:10248:5: this_MultiplicityPart_1= ruleMultiplicityPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getItemFeatureSpecializationPartRule());
                              					}
                              					newCompositeNode(grammarAccess.getItemFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_81);
                            this_MultiplicityPart_1=ruleMultiplicityPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_MultiplicityPart_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:10260:4: (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    loop211:
                    do {
                        int alt211=2;
                        int LA211_0 = input.LA(1);

                        if ( (LA211_0==43||(LA211_0>=72 && LA211_0<=78)) ) {
                            alt211=1;
                        }


                        switch (alt211) {
                    	case 1 :
                    	    // InternalKerML.g:10261:5: this_FeatureSpecialization_2= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getItemFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getItemFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_2());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    this_FeatureSpecialization_2=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop211;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:10275:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+ )
                    {
                    // InternalKerML.g:10275:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+ )
                    // InternalKerML.g:10276:4: this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getItemFeatureSpecializationPartRule());
                      				}
                      				newCompositeNode(grammarAccess.getItemFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_148);
                    this_MultiplicityPart_3=ruleMultiplicityPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MultiplicityPart_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:10287:4: (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )+
                    int cnt212=0;
                    loop212:
                    do {
                        int alt212=2;
                        int LA212_0 = input.LA(1);

                        if ( (LA212_0==43||(LA212_0>=72 && LA212_0<=78)) ) {
                            alt212=1;
                        }


                        switch (alt212) {
                    	case 1 :
                    	    // InternalKerML.g:10288:5: this_FeatureSpecialization_4= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getItemFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getItemFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    this_FeatureSpecialization_4=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_4;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt212 >= 1 ) break loop212;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(212, input);
                                throw eee;
                        }
                        cnt212++;
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFeatureSpecializationPart"


    // $ANTLR start "entryRuleItemFlowEndMember"
    // InternalKerML.g:10305:1: entryRuleItemFlowEndMember returns [EObject current=null] : iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF ;
    public final EObject entryRuleItemFlowEndMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEndMember = null;


        try {
            // InternalKerML.g:10305:58: (iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF )
            // InternalKerML.g:10306:2: iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEndMember=ruleItemFlowEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEndMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEndMember"


    // $ANTLR start "ruleItemFlowEndMember"
    // InternalKerML.g:10312:1: ruleItemFlowEndMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) ) ;
    public final EObject ruleItemFlowEndMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10318:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) ) )
            // InternalKerML.g:10319:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) )
            {
            // InternalKerML.g:10319:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) )
            // InternalKerML.g:10320:3: (lv_ownedRelatedElement_0_0= ruleItemFlowEnd )
            {
            // InternalKerML.g:10320:3: (lv_ownedRelatedElement_0_0= ruleItemFlowEnd )
            // InternalKerML.g:10321:4: lv_ownedRelatedElement_0_0= ruleItemFlowEnd
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowEndMemberAccess().getOwnedRelatedElementItemFlowEndParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFlowEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowEndMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowEnd");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEndMember"


    // $ANTLR start "entryRuleItemFlowEnd"
    // InternalKerML.g:10341:1: entryRuleItemFlowEnd returns [EObject current=null] : iv_ruleItemFlowEnd= ruleItemFlowEnd EOF ;
    public final EObject entryRuleItemFlowEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEnd = null;


        try {
            // InternalKerML.g:10341:52: (iv_ruleItemFlowEnd= ruleItemFlowEnd EOF )
            // InternalKerML.g:10342:2: iv_ruleItemFlowEnd= ruleItemFlowEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEnd=ruleItemFlowEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEnd"


    // $ANTLR start "ruleItemFlowEnd"
    // InternalKerML.g:10348:1: ruleItemFlowEnd returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) ) ;
    public final EObject ruleItemFlowEnd() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10354:2: ( ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) ) )
            // InternalKerML.g:10355:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) )
            {
            // InternalKerML.g:10355:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) )
            // InternalKerML.g:10356:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) )
            {
            // InternalKerML.g:10356:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )?
            int alt214=2;
            alt214 = dfa214.predict(input);
            switch (alt214) {
                case 1 :
                    // InternalKerML.g:10357:4: (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting )
                    {
                    // InternalKerML.g:10357:4: (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting )
                    // InternalKerML.g:10358:5: lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowEndSubsettingParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_147);
                    lv_ownedRelationship_0_0=ruleItemFlowEndSubsetting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.ItemFlowEndSubsetting");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:10375:3: ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) )
            // InternalKerML.g:10376:4: (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember )
            {
            // InternalKerML.g:10376:4: (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember )
            // InternalKerML.g:10377:5: lv_ownedRelationship_1_0= ruleItemFlowFeatureMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleItemFlowFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.ItemFlowFeatureMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEnd"


    // $ANTLR start "entryRuleItemFlowEndSubsetting"
    // InternalKerML.g:10398:1: entryRuleItemFlowEndSubsetting returns [EObject current=null] : iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF ;
    public final EObject entryRuleItemFlowEndSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEndSubsetting = null;


        try {
            // InternalKerML.g:10398:62: (iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF )
            // InternalKerML.g:10399:2: iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEndSubsetting=ruleItemFlowEndSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEndSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEndSubsetting"


    // $ANTLR start "ruleItemFlowEndSubsetting"
    // InternalKerML.g:10405:1: ruleItemFlowEndSubsetting returns [EObject current=null] : ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) ) ;
    public final EObject ruleItemFlowEndSubsetting() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10411:2: ( ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) ) )
            // InternalKerML.g:10412:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )
            {
            // InternalKerML.g:10412:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )
            int alt215=2;
            alt215 = dfa215.predict(input);
            switch (alt215) {
                case 1 :
                    // InternalKerML.g:10413:3: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' )
                    {
                    // InternalKerML.g:10413:3: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' )
                    // InternalKerML.g:10414:4: ( ( ruleQualifiedName ) ) otherlv_1= '.'
                    {
                    // InternalKerML.g:10414:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:10415:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:10415:5: ( ruleQualifiedName )
                    // InternalKerML.g:10416:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getItemFlowEndSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFlowEndSubsettingAccess().getReferencedFeatureFeatureCrossReference_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_149);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getItemFlowEndSubsettingAccess().getFullStopKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:10436:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) )
                    {
                    // InternalKerML.g:10436:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) )
                    // InternalKerML.g:10437:4: (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix )
                    {
                    // InternalKerML.g:10437:4: (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix )
                    // InternalKerML.g:10438:5: lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getItemFlowEndSubsettingAccess().getOwnedRelatedElementFeatureChainPrefixParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_2_0=ruleFeatureChainPrefix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getItemFlowEndSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_2_0,
                      						"org.omg.kerml.xtext.KerML.FeatureChainPrefix");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEndSubsetting"


    // $ANTLR start "entryRuleFeatureChainPrefix"
    // InternalKerML.g:10459:1: entryRuleFeatureChainPrefix returns [EObject current=null] : iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF ;
    public final EObject entryRuleFeatureChainPrefix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureChainPrefix = null;


        try {
            // InternalKerML.g:10459:59: (iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF )
            // InternalKerML.g:10460:2: iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureChainPrefixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureChainPrefix=ruleFeatureChainPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureChainPrefix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureChainPrefix"


    // $ANTLR start "ruleFeatureChainPrefix"
    // InternalKerML.g:10466:1: ruleFeatureChainPrefix returns [EObject current=null] : ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' ) ;
    public final EObject ruleFeatureChainPrefix() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10472:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' ) )
            // InternalKerML.g:10473:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' )
            {
            // InternalKerML.g:10473:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' )
            // InternalKerML.g:10474:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.'
            {
            // InternalKerML.g:10474:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+
            int cnt216=0;
            loop216:
            do {
                int alt216=2;
                alt216 = dfa216.predict(input);
                switch (alt216) {
            	case 1 :
            	    // InternalKerML.g:10475:4: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.'
            	    {
            	    // InternalKerML.g:10475:4: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) )
            	    // InternalKerML.g:10476:5: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            	    {
            	    // InternalKerML.g:10476:5: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            	    // InternalKerML.g:10477:6: lv_ownedRelationship_0_0= ruleOwnedFeatureChaining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFeatureChainPrefixAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_149);
            	    lv_ownedRelationship_0_0=ruleOwnedFeatureChaining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFeatureChainPrefixRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_0_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_1=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getFeatureChainPrefixAccess().getFullStopKeyword_0_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt216 >= 1 ) break loop216;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(216, input);
                        throw eee;
                }
                cnt216++;
            } while (true);

            // InternalKerML.g:10499:3: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            // InternalKerML.g:10500:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            {
            // InternalKerML.g:10500:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            // InternalKerML.g:10501:5: lv_ownedRelationship_2_0= ruleOwnedFeatureChaining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureChainPrefixAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_149);
            lv_ownedRelationship_2_0=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureChainPrefixRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFeatureChainPrefixAccess().getFullStopKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChainPrefix"


    // $ANTLR start "entryRuleItemFlowFeatureMember"
    // InternalKerML.g:10526:1: entryRuleItemFlowFeatureMember returns [EObject current=null] : iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF ;
    public final EObject entryRuleItemFlowFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowFeatureMember = null;


        try {
            // InternalKerML.g:10526:62: (iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF )
            // InternalKerML.g:10527:2: iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowFeatureMember=ruleItemFlowFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowFeatureMember"


    // $ANTLR start "ruleItemFlowFeatureMember"
    // InternalKerML.g:10533:1: ruleItemFlowFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) ) ;
    public final EObject ruleItemFlowFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10539:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) ) )
            // InternalKerML.g:10540:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) )
            {
            // InternalKerML.g:10540:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) )
            // InternalKerML.g:10541:3: (lv_ownedRelatedElement_0_0= ruleItemFlowFeature )
            {
            // InternalKerML.g:10541:3: (lv_ownedRelatedElement_0_0= ruleItemFlowFeature )
            // InternalKerML.g:10542:4: lv_ownedRelatedElement_0_0= ruleItemFlowFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedRelatedElementItemFlowFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFlowFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowFeatureMember"


    // $ANTLR start "entryRuleItemFlowFeature"
    // InternalKerML.g:10562:1: entryRuleItemFlowFeature returns [EObject current=null] : iv_ruleItemFlowFeature= ruleItemFlowFeature EOF ;
    public final EObject entryRuleItemFlowFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowFeature = null;


        try {
            // InternalKerML.g:10562:56: (iv_ruleItemFlowFeature= ruleItemFlowFeature EOF )
            // InternalKerML.g:10563:2: iv_ruleItemFlowFeature= ruleItemFlowFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowFeature=ruleItemFlowFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowFeature"


    // $ANTLR start "ruleItemFlowFeature"
    // InternalKerML.g:10569:1: ruleItemFlowFeature returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) ) ;
    public final EObject ruleItemFlowFeature() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10575:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) ) )
            // InternalKerML.g:10576:2: ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) )
            {
            // InternalKerML.g:10576:2: ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) )
            // InternalKerML.g:10577:3: (lv_ownedRelationship_0_0= ruleItemFlowRedefinition )
            {
            // InternalKerML.g:10577:3: (lv_ownedRelationship_0_0= ruleItemFlowRedefinition )
            // InternalKerML.g:10578:4: lv_ownedRelationship_0_0= ruleItemFlowRedefinition
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationshipItemFlowRedefinitionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleItemFlowRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowFeatureRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowRedefinition");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowFeature"


    // $ANTLR start "entryRuleItemFlowRedefinition"
    // InternalKerML.g:10598:1: entryRuleItemFlowRedefinition returns [EObject current=null] : iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF ;
    public final EObject entryRuleItemFlowRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowRedefinition = null;


        try {
            // InternalKerML.g:10598:61: (iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF )
            // InternalKerML.g:10599:2: iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowRedefinition=ruleItemFlowRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowRedefinition"


    // $ANTLR start "ruleItemFlowRedefinition"
    // InternalKerML.g:10605:1: ruleItemFlowRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleItemFlowRedefinition() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:10611:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:10612:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:10612:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:10613:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:10613:3: ( ruleQualifiedName )
            // InternalKerML.g:10614:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getItemFlowRedefinitionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowRedefinition"


    // $ANTLR start "entryRuleMetaclass"
    // InternalKerML.g:10631:1: entryRuleMetaclass returns [EObject current=null] : iv_ruleMetaclass= ruleMetaclass EOF ;
    public final EObject entryRuleMetaclass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaclass = null;


        try {
            // InternalKerML.g:10631:50: (iv_ruleMetaclass= ruleMetaclass EOF )
            // InternalKerML.g:10632:2: iv_ruleMetaclass= ruleMetaclass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaclassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetaclass=ruleMetaclass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaclass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaclass"


    // $ANTLR start "ruleMetaclass"
    // InternalKerML.g:10638:1: ruleMetaclass returns [EObject current=null] : (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMetaclass() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_TypePrefix_0 = null;

        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:10644:2: ( (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:10645:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:10645:2: (this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:10646:3: this_TypePrefix_0= ruleTypePrefix[$current] otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetaclassRule());
              			}
              			newCompositeNode(grammarAccess.getMetaclassAccess().getTypePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_150);
            this_TypePrefix_0=ruleTypePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,114,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetaclassAccess().getMetaclassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetaclassRule());
              			}
              			newCompositeNode(grammarAccess.getMetaclassAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_24);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetaclassRule());
              			}
              			newCompositeNode(grammarAccess.getMetaclassAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaclass"


    // $ANTLR start "entryRulePrefixMetadataAnnotation"
    // InternalKerML.g:10687:1: entryRulePrefixMetadataAnnotation returns [EObject current=null] : iv_rulePrefixMetadataAnnotation= rulePrefixMetadataAnnotation EOF ;
    public final EObject entryRulePrefixMetadataAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixMetadataAnnotation = null;


        try {
            // InternalKerML.g:10687:65: (iv_rulePrefixMetadataAnnotation= rulePrefixMetadataAnnotation EOF )
            // InternalKerML.g:10688:2: iv_rulePrefixMetadataAnnotation= rulePrefixMetadataAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixMetadataAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrefixMetadataAnnotation=rulePrefixMetadataAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixMetadataAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixMetadataAnnotation"


    // $ANTLR start "rulePrefixMetadataAnnotation"
    // InternalKerML.g:10694:1: rulePrefixMetadataAnnotation returns [EObject current=null] : (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) ) ;
    public final EObject rulePrefixMetadataAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10700:2: ( (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) ) )
            // InternalKerML.g:10701:2: (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) )
            {
            // InternalKerML.g:10701:2: (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) )
            // InternalKerML.g:10702:3: otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) )
            {
            otherlv_0=(Token)match(input,115,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPrefixMetadataAnnotationAccess().getNumberSignKeyword_0());
              		
            }
            // InternalKerML.g:10706:3: ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) )
            // InternalKerML.g:10707:4: (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature )
            {
            // InternalKerML.g:10707:4: (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature )
            // InternalKerML.g:10708:5: lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPrefixMetadataAnnotationAccess().getOwnedRelatedElementPrefixMetadataFeatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=rulePrefixMetadataFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPrefixMetadataAnnotationRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.PrefixMetadataFeature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixMetadataAnnotation"


    // $ANTLR start "entryRulePrefixMetadataMember"
    // InternalKerML.g:10729:1: entryRulePrefixMetadataMember returns [EObject current=null] : iv_rulePrefixMetadataMember= rulePrefixMetadataMember EOF ;
    public final EObject entryRulePrefixMetadataMember() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixMetadataMember = null;


        try {
            // InternalKerML.g:10729:61: (iv_rulePrefixMetadataMember= rulePrefixMetadataMember EOF )
            // InternalKerML.g:10730:2: iv_rulePrefixMetadataMember= rulePrefixMetadataMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixMetadataMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrefixMetadataMember=rulePrefixMetadataMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixMetadataMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixMetadataMember"


    // $ANTLR start "rulePrefixMetadataMember"
    // InternalKerML.g:10736:1: rulePrefixMetadataMember returns [EObject current=null] : (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) ) ;
    public final EObject rulePrefixMetadataMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10742:2: ( (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) ) )
            // InternalKerML.g:10743:2: (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) )
            {
            // InternalKerML.g:10743:2: (otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) ) )
            // InternalKerML.g:10744:3: otherlv_0= '#' ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) )
            {
            otherlv_0=(Token)match(input,115,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPrefixMetadataMemberAccess().getNumberSignKeyword_0());
              		
            }
            // InternalKerML.g:10748:3: ( (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature ) )
            // InternalKerML.g:10749:4: (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature )
            {
            // InternalKerML.g:10749:4: (lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature )
            // InternalKerML.g:10750:5: lv_ownedRelatedElement_1_0= rulePrefixMetadataFeature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPrefixMetadataMemberAccess().getOwnedRelatedElementPrefixMetadataFeatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=rulePrefixMetadataFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPrefixMetadataMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.PrefixMetadataFeature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixMetadataMember"


    // $ANTLR start "entryRulePrefixMetadataFeature"
    // InternalKerML.g:10771:1: entryRulePrefixMetadataFeature returns [EObject current=null] : iv_rulePrefixMetadataFeature= rulePrefixMetadataFeature EOF ;
    public final EObject entryRulePrefixMetadataFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixMetadataFeature = null;


        try {
            // InternalKerML.g:10771:62: (iv_rulePrefixMetadataFeature= rulePrefixMetadataFeature EOF )
            // InternalKerML.g:10772:2: iv_rulePrefixMetadataFeature= rulePrefixMetadataFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixMetadataFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrefixMetadataFeature=rulePrefixMetadataFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixMetadataFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixMetadataFeature"


    // $ANTLR start "rulePrefixMetadataFeature"
    // InternalKerML.g:10778:1: rulePrefixMetadataFeature returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleMetadataTyping ) ) ;
    public final EObject rulePrefixMetadataFeature() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10784:2: ( ( (lv_ownedRelationship_0_0= ruleMetadataTyping ) ) )
            // InternalKerML.g:10785:2: ( (lv_ownedRelationship_0_0= ruleMetadataTyping ) )
            {
            // InternalKerML.g:10785:2: ( (lv_ownedRelationship_0_0= ruleMetadataTyping ) )
            // InternalKerML.g:10786:3: (lv_ownedRelationship_0_0= ruleMetadataTyping )
            {
            // InternalKerML.g:10786:3: (lv_ownedRelationship_0_0= ruleMetadataTyping )
            // InternalKerML.g:10787:4: lv_ownedRelationship_0_0= ruleMetadataTyping
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPrefixMetadataFeatureAccess().getOwnedRelationshipMetadataTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPrefixMetadataFeatureRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.MetadataTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixMetadataFeature"


    // $ANTLR start "entryRuleMetadataFeature"
    // InternalKerML.g:10807:1: entryRuleMetadataFeature returns [EObject current=null] : iv_ruleMetadataFeature= ruleMetadataFeature EOF ;
    public final EObject entryRuleMetadataFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataFeature = null;


        try {
            // InternalKerML.g:10807:56: (iv_ruleMetadataFeature= ruleMetadataFeature EOF )
            // InternalKerML.g:10808:2: iv_ruleMetadataFeature= ruleMetadataFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataFeature=ruleMetadataFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataFeature"


    // $ANTLR start "ruleMetadataFeature"
    // InternalKerML.g:10814:1: ruleMetadataFeature returns [EObject current=null] : ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] ) ;
    public final EObject ruleMetadataFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_MetadataFeatureDeclaration_2 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;

        EObject this_MetadataBody_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:10820:2: ( ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] ) )
            // InternalKerML.g:10821:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] )
            {
            // InternalKerML.g:10821:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] )
            // InternalKerML.g:10822:3: (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current]
            {
            // InternalKerML.g:10822:3: (otherlv_0= '@' | otherlv_1= 'metadata' )
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==116) ) {
                alt217=1;
            }
            else if ( (LA217_0==117) ) {
                alt217=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }
            switch (alt217) {
                case 1 :
                    // InternalKerML.g:10823:4: otherlv_0= '@'
                    {
                    otherlv_0=(Token)match(input,116,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMetadataFeatureAccess().getCommercialAtKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10828:4: otherlv_1= 'metadata'
                    {
                    otherlv_1=(Token)match(input,117,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataFeatureAccess().getMetadataKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataFeatureAccess().getMetadataFeatureDeclarationParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_151);
            this_MetadataFeatureDeclaration_2=ruleMetadataFeatureDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataFeatureDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:10844:3: (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==24) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // InternalKerML.g:10845:4: otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )*
                    {
                    otherlv_3=(Token)match(input,24,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMetadataFeatureAccess().getAboutKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:10849:4: ( (lv_ownedRelationship_4_0= ruleAnnotation ) )
                    // InternalKerML.g:10850:5: (lv_ownedRelationship_4_0= ruleAnnotation )
                    {
                    // InternalKerML.g:10850:5: (lv_ownedRelationship_4_0= ruleAnnotation )
                    // InternalKerML.g:10851:6: lv_ownedRelationship_4_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_152);
                    lv_ownedRelationship_4_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_4_0,
                      							"org.omg.kerml.xtext.KerML.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:10868:4: (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )*
                    loop218:
                    do {
                        int alt218=2;
                        int LA218_0 = input.LA(1);

                        if ( (LA218_0==22) ) {
                            alt218=1;
                        }


                        switch (alt218) {
                    	case 1 :
                    	    // InternalKerML.g:10869:5: otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) )
                    	    {
                    	    otherlv_5=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getMetadataFeatureAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKerML.g:10873:5: ( (lv_ownedRelationship_6_0= ruleAnnotation ) )
                    	    // InternalKerML.g:10874:6: (lv_ownedRelationship_6_0= ruleAnnotation )
                    	    {
                    	    // InternalKerML.g:10874:6: (lv_ownedRelationship_6_0= ruleAnnotation )
                    	    // InternalKerML.g:10875:7: lv_ownedRelationship_6_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_152);
                    	    lv_ownedRelationship_6_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_6_0,
                    	      								"org.omg.kerml.xtext.KerML.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop218;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataFeatureAccess().getMetadataBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_MetadataBody_7=ruleMetadataBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataBody_7;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataFeature"


    // $ANTLR start "ruleMetadataFeatureDeclaration"
    // InternalKerML.g:10910:1: ruleMetadataFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) ) ;
    public final EObject ruleMetadataFeatureDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject this_Identification_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10916:2: ( ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) ) )
            // InternalKerML.g:10917:2: ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) )
            {
            // InternalKerML.g:10917:2: ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) )
            // InternalKerML.g:10918:3: (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) )
            {
            // InternalKerML.g:10918:3: (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )?
            int alt221=2;
            switch ( input.LA(1) ) {
                case 13:
                    {
                    alt221=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA221_2 = input.LA(2);

                    if ( ((LA221_2>=72 && LA221_2<=73)) ) {
                        alt221=1;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA221_3 = input.LA(2);

                    if ( ((LA221_3>=72 && LA221_3<=73)) ) {
                        alt221=1;
                    }
                    }
                    break;
            }

            switch (alt221) {
                case 1 :
                    // InternalKerML.g:10919:4: this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataFeatureDeclarationAccess().getIdentificationParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_90);
                    this_Identification_0=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:10930:4: (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) )
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==72) ) {
                        alt220=1;
                    }
                    else if ( (LA220_0==73) ) {
                        alt220=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 220, 0, input);

                        throw nvae;
                    }
                    switch (alt220) {
                        case 1 :
                            // InternalKerML.g:10931:5: otherlv_1= ':'
                            {
                            otherlv_1=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getMetadataFeatureDeclarationAccess().getColonKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:10936:5: (otherlv_2= 'typed' otherlv_3= 'by' )
                            {
                            // InternalKerML.g:10936:5: (otherlv_2= 'typed' otherlv_3= 'by' )
                            // InternalKerML.g:10937:6: otherlv_2= 'typed' otherlv_3= 'by'
                            {
                            otherlv_2=(Token)match(input,73,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getMetadataFeatureDeclarationAccess().getTypedKeyword_0_1_1_0());
                              					
                            }
                            otherlv_3=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getMetadataFeatureDeclarationAccess().getByKeyword_0_1_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:10948:3: ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) )
            // InternalKerML.g:10949:4: (lv_ownedRelationship_4_0= ruleMetadataTyping )
            {
            // InternalKerML.g:10949:4: (lv_ownedRelationship_4_0= ruleMetadataTyping )
            // InternalKerML.g:10950:5: lv_ownedRelationship_4_0= ruleMetadataTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataFeatureDeclarationAccess().getOwnedRelationshipMetadataTypingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_4_0=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMetadataFeatureDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.MetadataTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataFeatureDeclaration"


    // $ANTLR start "entryRuleMetadataTyping"
    // InternalKerML.g:10971:1: entryRuleMetadataTyping returns [EObject current=null] : iv_ruleMetadataTyping= ruleMetadataTyping EOF ;
    public final EObject entryRuleMetadataTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataTyping = null;


        try {
            // InternalKerML.g:10971:55: (iv_ruleMetadataTyping= ruleMetadataTyping EOF )
            // InternalKerML.g:10972:2: iv_ruleMetadataTyping= ruleMetadataTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataTyping=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataTyping"


    // $ANTLR start "ruleMetadataTyping"
    // InternalKerML.g:10978:1: ruleMetadataTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleMetadataTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:10984:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:10985:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:10985:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:10986:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:10986:3: ( ruleQualifiedName )
            // InternalKerML.g:10987:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getMetadataTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMetadataTypingAccess().getTypeMetaclassCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataTyping"


    // $ANTLR start "ruleMetadataBody"
    // InternalKerML.g:11005:1: ruleMetadataBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject ruleMetadataBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11011:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:11012:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:11012:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==16) ) {
                alt223=1;
            }
            else if ( (LA223_0==17) ) {
                alt223=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 223, 0, input);

                throw nvae;
            }
            switch (alt223) {
                case 1 :
                    // InternalKerML.g:11013:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getMetadataBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:11018:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:11018:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:11019:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:11023:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop222:
                    do {
                        int alt222=5;
                        switch ( input.LA(1) ) {
                        case 148:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt222=3;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 66:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 101:
                            case 103:
                            case 106:
                            case 111:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                                {
                                alt222=1;
                                }
                                break;
                            case 31:
                                {
                                alt222=4;
                                }
                                break;

                            }

                            }
                            break;
                        case 149:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt222=3;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 66:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 101:
                            case 103:
                            case 106:
                            case 111:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                                {
                                alt222=1;
                                }
                                break;
                            case 31:
                                {
                                alt222=4;
                                }
                                break;

                            }

                            }
                            break;
                        case 150:
                            {
                            switch ( input.LA(2) ) {
                            case RULE_REGULAR_COMMENT:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 66:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 101:
                            case 103:
                            case 106:
                            case 111:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                                {
                                alt222=1;
                                }
                                break;
                            case 31:
                                {
                                alt222=4;
                                }
                                break;
                            case 29:
                                {
                                alt222=3;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case 15:
                        case 19:
                        case 23:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 37:
                        case 38:
                        case 39:
                        case 41:
                        case 42:
                        case 47:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 66:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 87:
                        case 90:
                        case 91:
                        case 92:
                        case 93:
                        case 101:
                        case 103:
                        case 106:
                        case 111:
                        case 114:
                        case 115:
                        case 116:
                        case 117:
                            {
                            alt222=1;
                            }
                            break;
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 64:
                        case 77:
                        case 78:
                            {
                            alt222=2;
                            }
                            break;
                        case 29:
                            {
                            alt222=3;
                            }
                            break;
                        case 31:
                            {
                            alt222=4;
                            }
                            break;

                        }

                        switch (alt222) {
                    	case 1 :
                    	    // InternalKerML.g:11024:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:11024:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    // InternalKerML.g:11025:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    {
                    	    // InternalKerML.g:11025:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    // InternalKerML.g:11026:7: lv_ownedRelationship_2_0= ruleNonFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_ownedRelationship_2_0=ruleNonFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NonFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:11044:5: ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:11044:5: ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) )
                    	    // InternalKerML.g:11045:6: (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember )
                    	    {
                    	    // InternalKerML.g:11045:6: (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember )
                    	    // InternalKerML.g:11046:7: lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipMetadataBodyFeatureMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_ownedRelationship_3_0=ruleMetadataBodyFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.MetadataBodyFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:11064:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:11064:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:11065:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:11065:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:11066:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:11084:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:11084:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:11085:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:11085:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:11086:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop222;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getMetadataBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBody"


    // $ANTLR start "entryRuleMetadataBodyFeatureMember"
    // InternalKerML.g:11113:1: entryRuleMetadataBodyFeatureMember returns [EObject current=null] : iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF ;
    public final EObject entryRuleMetadataBodyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataBodyFeatureMember = null;


        try {
            // InternalKerML.g:11113:66: (iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF )
            // InternalKerML.g:11114:2: iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataBodyFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataBodyFeatureMember=ruleMetadataBodyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataBodyFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataBodyFeatureMember"


    // $ANTLR start "ruleMetadataBodyFeatureMember"
    // InternalKerML.g:11120:1: ruleMetadataBodyFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) ) ;
    public final EObject ruleMetadataBodyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11126:2: ( ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) ) )
            // InternalKerML.g:11127:2: ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) )
            {
            // InternalKerML.g:11127:2: ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) )
            // InternalKerML.g:11128:3: (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature )
            {
            // InternalKerML.g:11128:3: (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature )
            // InternalKerML.g:11129:4: lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMetadataBodyFeatureMemberAccess().getOwnedRelatedElementMetadataBodyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleMetadataBodyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getMetadataBodyFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.MetadataBodyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBodyFeatureMember"


    // $ANTLR start "entryRuleMetadataBodyFeature"
    // InternalKerML.g:11149:1: entryRuleMetadataBodyFeature returns [EObject current=null] : iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF ;
    public final EObject entryRuleMetadataBodyFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataBodyFeature = null;


        try {
            // InternalKerML.g:11149:60: (iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF )
            // InternalKerML.g:11150:2: iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataBodyFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataBodyFeature=ruleMetadataBodyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataBodyFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataBodyFeature"


    // $ANTLR start "ruleMetadataBodyFeature"
    // InternalKerML.g:11156:1: ruleMetadataBodyFeature returns [EObject current=null] : ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] ) ;
    public final EObject ruleMetadataBodyFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_3_0 = null;

        EObject this_FeatureSpecializationPart_4 = null;

        EObject this_ValuePart_5 = null;

        EObject this_MetadataBody_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:11162:2: ( ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] ) )
            // InternalKerML.g:11163:2: ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] )
            {
            // InternalKerML.g:11163:2: ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] )
            // InternalKerML.g:11164:3: (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current]
            {
            // InternalKerML.g:11164:3: (otherlv_0= 'feature' )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==64) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalKerML.g:11165:4: otherlv_0= 'feature'
                    {
                    otherlv_0=(Token)match(input,64,FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMetadataBodyFeatureAccess().getFeatureKeyword_0());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:11170:3: (otherlv_1= ':>>' | otherlv_2= 'redefines' )?
            int alt225=3;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==77) ) {
                alt225=1;
            }
            else if ( (LA225_0==78) ) {
                alt225=2;
            }
            switch (alt225) {
                case 1 :
                    // InternalKerML.g:11171:4: otherlv_1= ':>>'
                    {
                    otherlv_1=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataBodyFeatureAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:11176:4: otherlv_2= 'redefines'
                    {
                    otherlv_2=(Token)match(input,78,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMetadataBodyFeatureAccess().getRedefinesKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:11181:3: ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) )
            // InternalKerML.g:11182:4: (lv_ownedRelationship_3_0= ruleOwnedRedefinition )
            {
            // InternalKerML.g:11182:4: (lv_ownedRelationship_3_0= ruleOwnedRedefinition )
            // InternalKerML.g:11183:5: lv_ownedRelationship_3_0= ruleOwnedRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_154);
            lv_ownedRelationship_3_0=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMetadataBodyFeatureRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_3_0,
              						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:11200:3: (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==43||(LA226_0>=70 && LA226_0<=78)||LA226_0==88) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // InternalKerML.g:11201:4: this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getFeatureSpecializationPartParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_155);
                    this_FeatureSpecializationPart_4=ruleFeatureSpecializationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureSpecializationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:11213:3: (this_ValuePart_5= ruleValuePart[$current] )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( ((LA227_0>=84 && LA227_0<=86)) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalKerML.g:11214:4: this_ValuePart_5= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getValuePartParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_151);
                    this_ValuePart_5=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getMetadataBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_MetadataBody_6=ruleMetadataBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataBody_6;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBodyFeature"


    // $ANTLR start "entryRuleExpressionBody"
    // InternalKerML.g:11241:1: entryRuleExpressionBody returns [EObject current=null] : iv_ruleExpressionBody= ruleExpressionBody EOF ;
    public final EObject entryRuleExpressionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionBody = null;


        try {
            // InternalKerML.g:11241:55: (iv_ruleExpressionBody= ruleExpressionBody EOF )
            // InternalKerML.g:11242:2: iv_ruleExpressionBody= ruleExpressionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionBody=ruleExpressionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionBody"


    // $ANTLR start "ruleExpressionBody"
    // InternalKerML.g:11248:1: ruleExpressionBody returns [EObject current=null] : (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' ) ;
    public final EObject ruleExpressionBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_FunctionBodyPart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:11254:2: ( (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' ) )
            // InternalKerML.g:11255:2: (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' )
            {
            // InternalKerML.g:11255:2: (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' )
            // InternalKerML.g:11256:3: otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExpressionBodyAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionBodyRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionBodyAccess().getFunctionBodyPartParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_130);
            this_FunctionBodyPart_1=ruleFunctionBodyPart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBodyPart_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExpressionBodyAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionBody"


    // $ANTLR start "entryRuleOwnedExpressionMember"
    // InternalKerML.g:11279:1: entryRuleOwnedExpressionMember returns [EObject current=null] : iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF ;
    public final EObject entryRuleOwnedExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpressionMember = null;


        try {
            // InternalKerML.g:11279:62: (iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF )
            // InternalKerML.g:11280:2: iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpressionMember=ruleOwnedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpressionMember"


    // $ANTLR start "ruleOwnedExpressionMember"
    // InternalKerML.g:11286:1: ruleOwnedExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) ;
    public final EObject ruleOwnedExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11292:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:11293:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:11293:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            // InternalKerML.g:11294:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            {
            // InternalKerML.g:11294:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            // InternalKerML.g:11295:4: lv_ownedRelatedElement_0_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpressionMember"


    // $ANTLR start "entryRuleOwnedExpression"
    // InternalKerML.g:11315:1: entryRuleOwnedExpression returns [EObject current=null] : iv_ruleOwnedExpression= ruleOwnedExpression EOF ;
    public final EObject entryRuleOwnedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpression = null;


        try {
            // InternalKerML.g:11315:56: (iv_ruleOwnedExpression= ruleOwnedExpression EOF )
            // InternalKerML.g:11316:2: iv_ruleOwnedExpression= ruleOwnedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpression=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpression"


    // $ANTLR start "ruleOwnedExpression"
    // InternalKerML.g:11322:1: ruleOwnedExpression returns [EObject current=null] : this_ConditionalExpression_0= ruleConditionalExpression ;
    public final EObject ruleOwnedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalExpression_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11328:2: (this_ConditionalExpression_0= ruleConditionalExpression )
            // InternalKerML.g:11329:2: this_ConditionalExpression_0= ruleConditionalExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getOwnedExpressionAccess().getConditionalExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ConditionalExpression_0=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ConditionalExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpression"


    // $ANTLR start "entryRuleOwnedExpressionReference"
    // InternalKerML.g:11340:1: entryRuleOwnedExpressionReference returns [EObject current=null] : iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF ;
    public final EObject entryRuleOwnedExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpressionReference = null;


        try {
            // InternalKerML.g:11340:65: (iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF )
            // InternalKerML.g:11341:2: iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpressionReference=ruleOwnedExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpressionReference"


    // $ANTLR start "ruleOwnedExpressionReference"
    // InternalKerML.g:11347:1: ruleOwnedExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) ) ;
    public final EObject ruleOwnedExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11353:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) ) )
            // InternalKerML.g:11354:2: ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) )
            {
            // InternalKerML.g:11354:2: ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) )
            // InternalKerML.g:11355:3: (lv_ownedRelationship_0_0= ruleOwnedExpressionMember )
            {
            // InternalKerML.g:11355:3: (lv_ownedRelationship_0_0= ruleOwnedExpressionMember )
            // InternalKerML.g:11356:4: lv_ownedRelationship_0_0= ruleOwnedExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedExpressionReferenceAccess().getOwnedRelationshipOwnedExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleOwnedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpressionReference"


    // $ANTLR start "entryRuleConditionalExpression"
    // InternalKerML.g:11376:1: entryRuleConditionalExpression returns [EObject current=null] : iv_ruleConditionalExpression= ruleConditionalExpression EOF ;
    public final EObject entryRuleConditionalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpression = null;


        try {
            // InternalKerML.g:11376:62: (iv_ruleConditionalExpression= ruleConditionalExpression EOF )
            // InternalKerML.g:11377:2: iv_ruleConditionalExpression= ruleConditionalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalExpression=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalExpression"


    // $ANTLR start "ruleConditionalExpression"
    // InternalKerML.g:11383:1: ruleConditionalExpression returns [EObject current=null] : (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) ) ;
    public final EObject ruleConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_NullCoalescingExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        EObject lv_operand_5_0 = null;

        EObject lv_operand_7_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11389:2: ( (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) ) )
            // InternalKerML.g:11390:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) )
            {
            // InternalKerML.g:11390:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) )
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==EOF||(LA228_0>=RULE_STRING_VALUE && LA228_0<=RULE_UNRESTRICTED_NAME)||(LA228_0>=16 && LA228_0<=17)||LA228_0==21||(LA228_0>=32 && LA228_0<=33)||LA228_0==45||LA228_0==67||LA228_0==95||(LA228_0>=109 && LA228_0<=110)||LA228_0==113||LA228_0==116||(LA228_0>=132 && LA228_0<=134)||(LA228_0>=139 && LA228_0<=140)||LA228_0==144||LA228_0==147) ) {
                alt228=1;
            }
            else if ( (LA228_0==120) ) {
                alt228=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }
            switch (alt228) {
                case 1 :
                    // InternalKerML.g:11391:3: this_NullCoalescingExpression_0= ruleNullCoalescingExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NullCoalescingExpression_0=ruleNullCoalescingExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullCoalescingExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:11400:3: ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) )
                    {
                    // InternalKerML.g:11400:3: ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) )
                    // InternalKerML.g:11401:4: () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) )
                    {
                    // InternalKerML.g:11401:4: ()
                    // InternalKerML.g:11402:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConditionalExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:11408:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalKerML.g:11409:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalKerML.g:11409:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalKerML.g:11410:6: lv_operator_2_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalOperatorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_156);
                    lv_operator_2_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:11427:4: ( (lv_operand_3_0= ruleNullCoalescingExpression ) )
                    // InternalKerML.g:11428:5: (lv_operand_3_0= ruleNullCoalescingExpression )
                    {
                    // InternalKerML.g:11428:5: (lv_operand_3_0= ruleNullCoalescingExpression )
                    // InternalKerML.g:11429:6: lv_operand_3_0= ruleNullCoalescingExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandNullCoalescingExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_operand_3_0=ruleNullCoalescingExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NullCoalescingExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,118,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_3());
                      			
                    }
                    // InternalKerML.g:11450:4: ( (lv_operand_5_0= ruleOwnedExpressionReference ) )
                    // InternalKerML.g:11451:5: (lv_operand_5_0= ruleOwnedExpressionReference )
                    {
                    // InternalKerML.g:11451:5: (lv_operand_5_0= ruleOwnedExpressionReference )
                    // InternalKerML.g:11452:6: lv_operand_5_0= ruleOwnedExpressionReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionReferenceParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_operand_5_0=ruleOwnedExpressionReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_5_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,119,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getConditionalExpressionAccess().getElseKeyword_1_5());
                      			
                    }
                    // InternalKerML.g:11473:4: ( (lv_operand_7_0= ruleOwnedExpressionReference ) )
                    // InternalKerML.g:11474:5: (lv_operand_7_0= ruleOwnedExpressionReference )
                    {
                    // InternalKerML.g:11474:5: (lv_operand_7_0= ruleOwnedExpressionReference )
                    // InternalKerML.g:11475:6: lv_operand_7_0= ruleOwnedExpressionReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionReferenceParserRuleCall_1_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_7_0=ruleOwnedExpressionReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalExpression"


    // $ANTLR start "entryRuleConditionalOperator"
    // InternalKerML.g:11497:1: entryRuleConditionalOperator returns [String current=null] : iv_ruleConditionalOperator= ruleConditionalOperator EOF ;
    public final String entryRuleConditionalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalOperator = null;


        try {
            // InternalKerML.g:11497:59: (iv_ruleConditionalOperator= ruleConditionalOperator EOF )
            // InternalKerML.g:11498:2: iv_ruleConditionalOperator= ruleConditionalOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOperator=ruleConditionalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalKerML.g:11504:1: ruleConditionalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'if' ;
    public final AntlrDatatypeRuleToken ruleConditionalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11510:2: (kw= 'if' )
            // InternalKerML.g:11511:2: kw= 'if'
            {
            kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalOperatorAccess().getIfKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "entryRuleNullCoalescingExpression"
    // InternalKerML.g:11519:1: entryRuleNullCoalescingExpression returns [EObject current=null] : iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF ;
    public final EObject entryRuleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullCoalescingExpression = null;


        try {
            // InternalKerML.g:11519:65: (iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF )
            // InternalKerML.g:11520:2: iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingExpression=ruleNullCoalescingExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingExpression"


    // $ANTLR start "ruleNullCoalescingExpression"
    // InternalKerML.g:11526:1: ruleNullCoalescingExpression returns [EObject current=null] : (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* ) ;
    public final EObject ruleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ImpliesExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11532:2: ( (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* ) )
            // InternalKerML.g:11533:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* )
            {
            // InternalKerML.g:11533:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* )
            // InternalKerML.g:11534:3: this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getImpliesExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_159);
            this_ImpliesExpression_0=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ImpliesExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11542:3: ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )*
            loop229:
            do {
                int alt229=2;
                int LA229_0 = input.LA(1);

                if ( (LA229_0==121) ) {
                    alt229=1;
                }


                switch (alt229) {
            	case 1 :
            	    // InternalKerML.g:11543:4: () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) )
            	    {
            	    // InternalKerML.g:11543:4: ()
            	    // InternalKerML.g:11544:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11550:4: ( (lv_operator_2_0= ruleNullCoalescingOperator ) )
            	    // InternalKerML.g:11551:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    {
            	    // InternalKerML.g:11551:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    // InternalKerML.g:11552:6: lv_operator_2_0= ruleNullCoalescingOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleNullCoalescingOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NullCoalescingOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:11569:4: ( (lv_operand_3_0= ruleImpliesExpressionReference ) )
            	    // InternalKerML.g:11570:5: (lv_operand_3_0= ruleImpliesExpressionReference )
            	    {
            	    // InternalKerML.g:11570:5: (lv_operand_3_0= ruleImpliesExpressionReference )
            	    // InternalKerML.g:11571:6: lv_operand_3_0= ruleImpliesExpressionReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperandImpliesExpressionReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_159);
            	    lv_operand_3_0=ruleImpliesExpressionReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpressionReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop229;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingExpression"


    // $ANTLR start "entryRuleNullCoalescingOperator"
    // InternalKerML.g:11593:1: entryRuleNullCoalescingOperator returns [String current=null] : iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF ;
    public final String entryRuleNullCoalescingOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNullCoalescingOperator = null;


        try {
            // InternalKerML.g:11593:62: (iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF )
            // InternalKerML.g:11594:2: iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingOperator=ruleNullCoalescingOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingOperator"


    // $ANTLR start "ruleNullCoalescingOperator"
    // InternalKerML.g:11600:1: ruleNullCoalescingOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '??' ;
    public final AntlrDatatypeRuleToken ruleNullCoalescingOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11606:2: (kw= '??' )
            // InternalKerML.g:11607:2: kw= '??'
            {
            kw=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingOperator"


    // $ANTLR start "entryRuleImpliesExpressionReference"
    // InternalKerML.g:11615:1: entryRuleImpliesExpressionReference returns [EObject current=null] : iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF ;
    public final EObject entryRuleImpliesExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpressionReference = null;


        try {
            // InternalKerML.g:11615:67: (iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF )
            // InternalKerML.g:11616:2: iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpressionReference=ruleImpliesExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpressionReference"


    // $ANTLR start "ruleImpliesExpressionReference"
    // InternalKerML.g:11622:1: ruleImpliesExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) ) ;
    public final EObject ruleImpliesExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11628:2: ( ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) ) )
            // InternalKerML.g:11629:2: ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) )
            {
            // InternalKerML.g:11629:2: ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) )
            // InternalKerML.g:11630:3: (lv_ownedRelationship_0_0= ruleImpliesExpressionMember )
            {
            // InternalKerML.g:11630:3: (lv_ownedRelationship_0_0= ruleImpliesExpressionMember )
            // InternalKerML.g:11631:4: lv_ownedRelationship_0_0= ruleImpliesExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImpliesExpressionReferenceAccess().getOwnedRelationshipImpliesExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleImpliesExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImpliesExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpressionReference"


    // $ANTLR start "entryRuleImpliesExpressionMember"
    // InternalKerML.g:11651:1: entryRuleImpliesExpressionMember returns [EObject current=null] : iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF ;
    public final EObject entryRuleImpliesExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpressionMember = null;


        try {
            // InternalKerML.g:11651:64: (iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF )
            // InternalKerML.g:11652:2: iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpressionMember=ruleImpliesExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpressionMember"


    // $ANTLR start "ruleImpliesExpressionMember"
    // InternalKerML.g:11658:1: ruleImpliesExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) ) ;
    public final EObject ruleImpliesExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11664:2: ( ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) ) )
            // InternalKerML.g:11665:2: ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) )
            {
            // InternalKerML.g:11665:2: ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) )
            // InternalKerML.g:11666:3: (lv_ownedRelatedElement_0_0= ruleImpliesExpression )
            {
            // InternalKerML.g:11666:3: (lv_ownedRelatedElement_0_0= ruleImpliesExpression )
            // InternalKerML.g:11667:4: lv_ownedRelatedElement_0_0= ruleImpliesExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImpliesExpressionMemberAccess().getOwnedRelatedElementImpliesExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImpliesExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpressionMember"


    // $ANTLR start "entryRuleImpliesExpression"
    // InternalKerML.g:11687:1: entryRuleImpliesExpression returns [EObject current=null] : iv_ruleImpliesExpression= ruleImpliesExpression EOF ;
    public final EObject entryRuleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpression = null;


        try {
            // InternalKerML.g:11687:58: (iv_ruleImpliesExpression= ruleImpliesExpression EOF )
            // InternalKerML.g:11688:2: iv_ruleImpliesExpression= ruleImpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpression=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpression"


    // $ANTLR start "ruleImpliesExpression"
    // InternalKerML.g:11694:1: ruleImpliesExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* ) ;
    public final EObject ruleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11700:2: ( (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* ) )
            // InternalKerML.g:11701:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* )
            {
            // InternalKerML.g:11701:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* )
            // InternalKerML.g:11702:3: this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_160);
            this_OrExpression_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11710:3: ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )*
            loop230:
            do {
                int alt230=2;
                int LA230_0 = input.LA(1);

                if ( (LA230_0==122) ) {
                    alt230=1;
                }


                switch (alt230) {
            	case 1 :
            	    // InternalKerML.g:11711:4: () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) )
            	    {
            	    // InternalKerML.g:11711:4: ()
            	    // InternalKerML.g:11712:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getImpliesExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11718:4: ( (lv_operator_2_0= ruleImpliesOperator ) )
            	    // InternalKerML.g:11719:5: (lv_operator_2_0= ruleImpliesOperator )
            	    {
            	    // InternalKerML.g:11719:5: (lv_operator_2_0= ruleImpliesOperator )
            	    // InternalKerML.g:11720:6: lv_operator_2_0= ruleImpliesOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleImpliesOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:11737:4: ( (lv_operand_3_0= ruleOrExpressionReference ) )
            	    // InternalKerML.g:11738:5: (lv_operand_3_0= ruleOrExpressionReference )
            	    {
            	    // InternalKerML.g:11738:5: (lv_operand_3_0= ruleOrExpressionReference )
            	    // InternalKerML.g:11739:6: lv_operand_3_0= ruleOrExpressionReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperandOrExpressionReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_160);
            	    lv_operand_3_0=ruleOrExpressionReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpressionReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop230;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpression"


    // $ANTLR start "entryRuleImpliesOperator"
    // InternalKerML.g:11761:1: entryRuleImpliesOperator returns [String current=null] : iv_ruleImpliesOperator= ruleImpliesOperator EOF ;
    public final String entryRuleImpliesOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImpliesOperator = null;


        try {
            // InternalKerML.g:11761:55: (iv_ruleImpliesOperator= ruleImpliesOperator EOF )
            // InternalKerML.g:11762:2: iv_ruleImpliesOperator= ruleImpliesOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesOperator=ruleImpliesOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesOperator"


    // $ANTLR start "ruleImpliesOperator"
    // InternalKerML.g:11768:1: ruleImpliesOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'implies' ;
    public final AntlrDatatypeRuleToken ruleImpliesOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11774:2: (kw= 'implies' )
            // InternalKerML.g:11775:2: kw= 'implies'
            {
            kw=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getImpliesOperatorAccess().getImpliesKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesOperator"


    // $ANTLR start "entryRuleOrExpressionReference"
    // InternalKerML.g:11783:1: entryRuleOrExpressionReference returns [EObject current=null] : iv_ruleOrExpressionReference= ruleOrExpressionReference EOF ;
    public final EObject entryRuleOrExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpressionReference = null;


        try {
            // InternalKerML.g:11783:62: (iv_ruleOrExpressionReference= ruleOrExpressionReference EOF )
            // InternalKerML.g:11784:2: iv_ruleOrExpressionReference= ruleOrExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpressionReference=ruleOrExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpressionReference"


    // $ANTLR start "ruleOrExpressionReference"
    // InternalKerML.g:11790:1: ruleOrExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) ) ;
    public final EObject ruleOrExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11796:2: ( ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) ) )
            // InternalKerML.g:11797:2: ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) )
            {
            // InternalKerML.g:11797:2: ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) )
            // InternalKerML.g:11798:3: (lv_ownedRelationship_0_0= ruleOrExpressionMember )
            {
            // InternalKerML.g:11798:3: (lv_ownedRelationship_0_0= ruleOrExpressionMember )
            // InternalKerML.g:11799:4: lv_ownedRelationship_0_0= ruleOrExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOrExpressionReferenceAccess().getOwnedRelationshipOrExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleOrExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOrExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpressionReference"


    // $ANTLR start "entryRuleOrExpressionMember"
    // InternalKerML.g:11819:1: entryRuleOrExpressionMember returns [EObject current=null] : iv_ruleOrExpressionMember= ruleOrExpressionMember EOF ;
    public final EObject entryRuleOrExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpressionMember = null;


        try {
            // InternalKerML.g:11819:59: (iv_ruleOrExpressionMember= ruleOrExpressionMember EOF )
            // InternalKerML.g:11820:2: iv_ruleOrExpressionMember= ruleOrExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpressionMember=ruleOrExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpressionMember"


    // $ANTLR start "ruleOrExpressionMember"
    // InternalKerML.g:11826:1: ruleOrExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) ) ;
    public final EObject ruleOrExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11832:2: ( ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) ) )
            // InternalKerML.g:11833:2: ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) )
            {
            // InternalKerML.g:11833:2: ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) )
            // InternalKerML.g:11834:3: (lv_ownedRelatedElement_0_0= ruleOrExpression )
            {
            // InternalKerML.g:11834:3: (lv_ownedRelatedElement_0_0= ruleOrExpression )
            // InternalKerML.g:11835:4: lv_ownedRelatedElement_0_0= ruleOrExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOrExpressionMemberAccess().getOwnedRelatedElementOrExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOrExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpressionMember"


    // $ANTLR start "entryRuleOrExpression"
    // InternalKerML.g:11855:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalKerML.g:11855:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalKerML.g:11856:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalKerML.g:11862:1: ruleOrExpression returns [EObject current=null] : (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XorExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        AntlrDatatypeRuleToken lv_operator_4_0 = null;

        EObject lv_operand_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11868:2: ( (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* ) )
            // InternalKerML.g:11869:2: (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* )
            {
            // InternalKerML.g:11869:2: (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* )
            // InternalKerML.g:11870:3: this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_161);
            this_XorExpression_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11878:3: ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( ((LA232_0>=123 && LA232_0<=124)) ) {
                    alt232=1;
                }


                switch (alt232) {
            	case 1 :
            	    // InternalKerML.g:11879:4: () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) )
            	    {
            	    // InternalKerML.g:11879:4: ()
            	    // InternalKerML.g:11880:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getOrExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11886:4: ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) )
            	    int alt231=2;
            	    int LA231_0 = input.LA(1);

            	    if ( (LA231_0==123) ) {
            	        alt231=1;
            	    }
            	    else if ( (LA231_0==124) ) {
            	        alt231=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 231, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt231) {
            	        case 1 :
            	            // InternalKerML.g:11887:5: ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )
            	            {
            	            // InternalKerML.g:11887:5: ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )
            	            // InternalKerML.g:11888:6: ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) )
            	            {
            	            // InternalKerML.g:11888:6: ( (lv_operator_2_0= ruleOrOperator ) )
            	            // InternalKerML.g:11889:7: (lv_operator_2_0= ruleOrOperator )
            	            {
            	            // InternalKerML.g:11889:7: (lv_operator_2_0= ruleOrOperator )
            	            // InternalKerML.g:11890:8: lv_operator_2_0= ruleOrOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_156);
            	            lv_operator_2_0=ruleOrOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_2_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.OrOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11907:6: ( (lv_operand_3_0= ruleXorExpression ) )
            	            // InternalKerML.g:11908:7: (lv_operand_3_0= ruleXorExpression )
            	            {
            	            // InternalKerML.g:11908:7: (lv_operand_3_0= ruleXorExpression )
            	            // InternalKerML.g:11909:8: lv_operand_3_0= ruleXorExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperandXorExpressionParserRuleCall_1_1_0_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_161);
            	            lv_operand_3_0=ruleXorExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_3_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:11928:5: ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) )
            	            {
            	            // InternalKerML.g:11928:5: ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) )
            	            // InternalKerML.g:11929:6: ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) )
            	            {
            	            // InternalKerML.g:11929:6: ( (lv_operator_4_0= ruleConditionalOrOperator ) )
            	            // InternalKerML.g:11930:7: (lv_operator_4_0= ruleConditionalOrOperator )
            	            {
            	            // InternalKerML.g:11930:7: (lv_operator_4_0= ruleConditionalOrOperator )
            	            // InternalKerML.g:11931:8: lv_operator_4_0= ruleConditionalOrOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_156);
            	            lv_operator_4_0=ruleConditionalOrOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_4_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalOrOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11948:6: ( (lv_operand_5_0= ruleXorExpressionReference ) )
            	            // InternalKerML.g:11949:7: (lv_operand_5_0= ruleXorExpressionReference )
            	            {
            	            // InternalKerML.g:11949:7: (lv_operand_5_0= ruleXorExpressionReference )
            	            // InternalKerML.g:11950:8: lv_operand_5_0= ruleXorExpressionReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperandXorExpressionReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_161);
            	            lv_operand_5_0=ruleXorExpressionReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_5_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpressionReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleOrOperator"
    // InternalKerML.g:11974:1: entryRuleOrOperator returns [String current=null] : iv_ruleOrOperator= ruleOrOperator EOF ;
    public final String entryRuleOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrOperator = null;


        try {
            // InternalKerML.g:11974:50: (iv_ruleOrOperator= ruleOrOperator EOF )
            // InternalKerML.g:11975:2: iv_ruleOrOperator= ruleOrOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrOperator=ruleOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalKerML.g:11981:1: ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
    public final AntlrDatatypeRuleToken ruleOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11987:2: (kw= '|' )
            // InternalKerML.g:11988:2: kw= '|'
            {
            kw=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOrOperatorAccess().getVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "entryRuleConditionalOrOperator"
    // InternalKerML.g:11996:1: entryRuleConditionalOrOperator returns [String current=null] : iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF ;
    public final String entryRuleConditionalOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalOrOperator = null;


        try {
            // InternalKerML.g:11996:61: (iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF )
            // InternalKerML.g:11997:2: iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOrOperator=ruleConditionalOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOrOperator"


    // $ANTLR start "ruleConditionalOrOperator"
    // InternalKerML.g:12003:1: ruleConditionalOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'or' ;
    public final AntlrDatatypeRuleToken ruleConditionalOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12009:2: (kw= 'or' )
            // InternalKerML.g:12010:2: kw= 'or'
            {
            kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalOrOperatorAccess().getOrKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOrOperator"


    // $ANTLR start "entryRuleXorExpressionReference"
    // InternalKerML.g:12018:1: entryRuleXorExpressionReference returns [EObject current=null] : iv_ruleXorExpressionReference= ruleXorExpressionReference EOF ;
    public final EObject entryRuleXorExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpressionReference = null;


        try {
            // InternalKerML.g:12018:63: (iv_ruleXorExpressionReference= ruleXorExpressionReference EOF )
            // InternalKerML.g:12019:2: iv_ruleXorExpressionReference= ruleXorExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpressionReference=ruleXorExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpressionReference"


    // $ANTLR start "ruleXorExpressionReference"
    // InternalKerML.g:12025:1: ruleXorExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) ) ;
    public final EObject ruleXorExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12031:2: ( ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) ) )
            // InternalKerML.g:12032:2: ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) )
            {
            // InternalKerML.g:12032:2: ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) )
            // InternalKerML.g:12033:3: (lv_ownedRelationship_0_0= ruleXorExpressionMember )
            {
            // InternalKerML.g:12033:3: (lv_ownedRelationship_0_0= ruleXorExpressionMember )
            // InternalKerML.g:12034:4: lv_ownedRelationship_0_0= ruleXorExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getXorExpressionReferenceAccess().getOwnedRelationshipXorExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleXorExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getXorExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpressionReference"


    // $ANTLR start "entryRuleXorExpressionMember"
    // InternalKerML.g:12054:1: entryRuleXorExpressionMember returns [EObject current=null] : iv_ruleXorExpressionMember= ruleXorExpressionMember EOF ;
    public final EObject entryRuleXorExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpressionMember = null;


        try {
            // InternalKerML.g:12054:60: (iv_ruleXorExpressionMember= ruleXorExpressionMember EOF )
            // InternalKerML.g:12055:2: iv_ruleXorExpressionMember= ruleXorExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpressionMember=ruleXorExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpressionMember"


    // $ANTLR start "ruleXorExpressionMember"
    // InternalKerML.g:12061:1: ruleXorExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) ) ;
    public final EObject ruleXorExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12067:2: ( ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) ) )
            // InternalKerML.g:12068:2: ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) )
            {
            // InternalKerML.g:12068:2: ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) )
            // InternalKerML.g:12069:3: (lv_ownedRelatedElement_0_0= ruleXorExpression )
            {
            // InternalKerML.g:12069:3: (lv_ownedRelatedElement_0_0= ruleXorExpression )
            // InternalKerML.g:12070:4: lv_ownedRelatedElement_0_0= ruleXorExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getXorExpressionMemberAccess().getOwnedRelatedElementXorExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getXorExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpressionMember"


    // $ANTLR start "entryRuleXorExpression"
    // InternalKerML.g:12090:1: entryRuleXorExpression returns [EObject current=null] : iv_ruleXorExpression= ruleXorExpression EOF ;
    public final EObject entryRuleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpression = null;


        try {
            // InternalKerML.g:12090:54: (iv_ruleXorExpression= ruleXorExpression EOF )
            // InternalKerML.g:12091:2: iv_ruleXorExpression= ruleXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpression=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpression"


    // $ANTLR start "ruleXorExpression"
    // InternalKerML.g:12097:1: ruleXorExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12103:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) )
            // InternalKerML.g:12104:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            {
            // InternalKerML.g:12104:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            // InternalKerML.g:12105:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_162);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12113:3: ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==125) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    // InternalKerML.g:12114:4: () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) )
            	    {
            	    // InternalKerML.g:12114:4: ()
            	    // InternalKerML.g:12115:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getXorExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12121:4: ( (lv_operator_2_0= ruleXorOperator ) )
            	    // InternalKerML.g:12122:5: (lv_operator_2_0= ruleXorOperator )
            	    {
            	    // InternalKerML.g:12122:5: (lv_operator_2_0= ruleXorOperator )
            	    // InternalKerML.g:12123:6: lv_operator_2_0= ruleXorOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleXorOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.XorOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12140:4: ( (lv_operand_3_0= ruleAndExpression ) )
            	    // InternalKerML.g:12141:5: (lv_operand_3_0= ruleAndExpression )
            	    {
            	    // InternalKerML.g:12141:5: (lv_operand_3_0= ruleAndExpression )
            	    // InternalKerML.g:12142:6: lv_operand_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperandAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_162);
            	    lv_operand_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop233;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpression"


    // $ANTLR start "entryRuleXorOperator"
    // InternalKerML.g:12164:1: entryRuleXorOperator returns [String current=null] : iv_ruleXorOperator= ruleXorOperator EOF ;
    public final String entryRuleXorOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXorOperator = null;


        try {
            // InternalKerML.g:12164:51: (iv_ruleXorOperator= ruleXorOperator EOF )
            // InternalKerML.g:12165:2: iv_ruleXorOperator= ruleXorOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorOperator=ruleXorOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalKerML.g:12171:1: ruleXorOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'xor' ;
    public final AntlrDatatypeRuleToken ruleXorOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12177:2: (kw= 'xor' )
            // InternalKerML.g:12178:2: kw= 'xor'
            {
            kw=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getXorOperatorAccess().getXorKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "entryRuleAndExpression"
    // InternalKerML.g:12186:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalKerML.g:12186:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalKerML.g:12187:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalKerML.g:12193:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        AntlrDatatypeRuleToken lv_operator_4_0 = null;

        EObject lv_operand_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12199:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* ) )
            // InternalKerML.g:12200:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* )
            {
            // InternalKerML.g:12200:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* )
            // InternalKerML.g:12201:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_163);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12209:3: ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )*
            loop235:
            do {
                int alt235=2;
                int LA235_0 = input.LA(1);

                if ( ((LA235_0>=126 && LA235_0<=127)) ) {
                    alt235=1;
                }


                switch (alt235) {
            	case 1 :
            	    // InternalKerML.g:12210:4: () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) )
            	    {
            	    // InternalKerML.g:12210:4: ()
            	    // InternalKerML.g:12211:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAndExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12217:4: ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) )
            	    int alt234=2;
            	    int LA234_0 = input.LA(1);

            	    if ( (LA234_0==126) ) {
            	        alt234=1;
            	    }
            	    else if ( (LA234_0==127) ) {
            	        alt234=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 234, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt234) {
            	        case 1 :
            	            // InternalKerML.g:12218:5: ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )
            	            {
            	            // InternalKerML.g:12218:5: ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )
            	            // InternalKerML.g:12219:6: ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) )
            	            {
            	            // InternalKerML.g:12219:6: ( (lv_operator_2_0= ruleAndOperator ) )
            	            // InternalKerML.g:12220:7: (lv_operator_2_0= ruleAndOperator )
            	            {
            	            // InternalKerML.g:12220:7: (lv_operator_2_0= ruleAndOperator )
            	            // InternalKerML.g:12221:8: lv_operator_2_0= ruleAndOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_156);
            	            lv_operator_2_0=ruleAndOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_2_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.AndOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:12238:6: ( (lv_operand_3_0= ruleEqualityExpression ) )
            	            // InternalKerML.g:12239:7: (lv_operand_3_0= ruleEqualityExpression )
            	            {
            	            // InternalKerML.g:12239:7: (lv_operand_3_0= ruleEqualityExpression )
            	            // InternalKerML.g:12240:8: lv_operand_3_0= ruleEqualityExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionParserRuleCall_1_1_0_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_163);
            	            lv_operand_3_0=ruleEqualityExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_3_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:12259:5: ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) )
            	            {
            	            // InternalKerML.g:12259:5: ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) )
            	            // InternalKerML.g:12260:6: ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) )
            	            {
            	            // InternalKerML.g:12260:6: ( (lv_operator_4_0= ruleConditionalAndOperator ) )
            	            // InternalKerML.g:12261:7: (lv_operator_4_0= ruleConditionalAndOperator )
            	            {
            	            // InternalKerML.g:12261:7: (lv_operator_4_0= ruleConditionalAndOperator )
            	            // InternalKerML.g:12262:8: lv_operator_4_0= ruleConditionalAndOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_156);
            	            lv_operator_4_0=ruleConditionalAndOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_4_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalAndOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:12279:6: ( (lv_operand_5_0= ruleEqualityExpressionReference ) )
            	            // InternalKerML.g:12280:7: (lv_operand_5_0= ruleEqualityExpressionReference )
            	            {
            	            // InternalKerML.g:12280:7: (lv_operand_5_0= ruleEqualityExpressionReference )
            	            // InternalKerML.g:12281:8: lv_operand_5_0= ruleEqualityExpressionReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_163);
            	            lv_operand_5_0=ruleEqualityExpressionReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_5_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpressionReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop235;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleAndOperator"
    // InternalKerML.g:12305:1: entryRuleAndOperator returns [String current=null] : iv_ruleAndOperator= ruleAndOperator EOF ;
    public final String entryRuleAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAndOperator = null;


        try {
            // InternalKerML.g:12305:51: (iv_ruleAndOperator= ruleAndOperator EOF )
            // InternalKerML.g:12306:2: iv_ruleAndOperator= ruleAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndOperator=ruleAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalKerML.g:12312:1: ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12318:2: (kw= '&' )
            // InternalKerML.g:12319:2: kw= '&'
            {
            kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "entryRuleConditionalAndOperator"
    // InternalKerML.g:12327:1: entryRuleConditionalAndOperator returns [String current=null] : iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF ;
    public final String entryRuleConditionalAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalAndOperator = null;


        try {
            // InternalKerML.g:12327:62: (iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF )
            // InternalKerML.g:12328:2: iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalAndOperator=ruleConditionalAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalAndOperator"


    // $ANTLR start "ruleConditionalAndOperator"
    // InternalKerML.g:12334:1: ruleConditionalAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'and' ;
    public final AntlrDatatypeRuleToken ruleConditionalAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12340:2: (kw= 'and' )
            // InternalKerML.g:12341:2: kw= 'and'
            {
            kw=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalAndOperatorAccess().getAndKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalAndOperator"


    // $ANTLR start "entryRuleEqualityExpressionReference"
    // InternalKerML.g:12349:1: entryRuleEqualityExpressionReference returns [EObject current=null] : iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF ;
    public final EObject entryRuleEqualityExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpressionReference = null;


        try {
            // InternalKerML.g:12349:68: (iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF )
            // InternalKerML.g:12350:2: iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpressionReference=ruleEqualityExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpressionReference"


    // $ANTLR start "ruleEqualityExpressionReference"
    // InternalKerML.g:12356:1: ruleEqualityExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) ) ;
    public final EObject ruleEqualityExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12362:2: ( ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) ) )
            // InternalKerML.g:12363:2: ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) )
            {
            // InternalKerML.g:12363:2: ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) )
            // InternalKerML.g:12364:3: (lv_ownedRelationship_0_0= ruleEqualityExpressionMember )
            {
            // InternalKerML.g:12364:3: (lv_ownedRelationship_0_0= ruleEqualityExpressionMember )
            // InternalKerML.g:12365:4: lv_ownedRelationship_0_0= ruleEqualityExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEqualityExpressionReferenceAccess().getOwnedRelationshipEqualityExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleEqualityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEqualityExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpressionReference"


    // $ANTLR start "entryRuleEqualityExpressionMember"
    // InternalKerML.g:12385:1: entryRuleEqualityExpressionMember returns [EObject current=null] : iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF ;
    public final EObject entryRuleEqualityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpressionMember = null;


        try {
            // InternalKerML.g:12385:65: (iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF )
            // InternalKerML.g:12386:2: iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpressionMember=ruleEqualityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpressionMember"


    // $ANTLR start "ruleEqualityExpressionMember"
    // InternalKerML.g:12392:1: ruleEqualityExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) ) ;
    public final EObject ruleEqualityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12398:2: ( ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) ) )
            // InternalKerML.g:12399:2: ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) )
            {
            // InternalKerML.g:12399:2: ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) )
            // InternalKerML.g:12400:3: (lv_ownedRelatedElement_0_0= ruleEqualityExpression )
            {
            // InternalKerML.g:12400:3: (lv_ownedRelatedElement_0_0= ruleEqualityExpression )
            // InternalKerML.g:12401:4: lv_ownedRelatedElement_0_0= ruleEqualityExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEqualityExpressionMemberAccess().getOwnedRelatedElementEqualityExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEqualityExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpressionMember"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalKerML.g:12421:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalKerML.g:12421:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalKerML.g:12422:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalKerML.g:12428:1: ruleEqualityExpression returns [EObject current=null] : (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ClassificationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12434:2: ( (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) )
            // InternalKerML.g:12435:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            {
            // InternalKerML.g:12435:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            // InternalKerML.g:12436:3: this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_164);
            this_ClassificationExpression_0=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassificationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12444:3: ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( ((LA236_0>=128 && LA236_0<=131)) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // InternalKerML.g:12445:4: () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    {
            	    // InternalKerML.g:12445:4: ()
            	    // InternalKerML.g:12446:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12452:4: ( (lv_operator_2_0= ruleEqualityOperator ) )
            	    // InternalKerML.g:12453:5: (lv_operator_2_0= ruleEqualityOperator )
            	    {
            	    // InternalKerML.g:12453:5: (lv_operator_2_0= ruleEqualityOperator )
            	    // InternalKerML.g:12454:6: lv_operator_2_0= ruleEqualityOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12471:4: ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    // InternalKerML.g:12472:5: (lv_operand_3_0= ruleClassificationExpression )
            	    {
            	    // InternalKerML.g:12472:5: (lv_operand_3_0= ruleClassificationExpression )
            	    // InternalKerML.g:12473:6: lv_operand_3_0= ruleClassificationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperandClassificationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_164);
            	    lv_operand_3_0=ruleClassificationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "entryRuleEqualityOperator"
    // InternalKerML.g:12495:1: entryRuleEqualityOperator returns [String current=null] : iv_ruleEqualityOperator= ruleEqualityOperator EOF ;
    public final String entryRuleEqualityOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEqualityOperator = null;


        try {
            // InternalKerML.g:12495:56: (iv_ruleEqualityOperator= ruleEqualityOperator EOF )
            // InternalKerML.g:12496:2: iv_ruleEqualityOperator= ruleEqualityOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityOperator=ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalKerML.g:12502:1: ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleEqualityOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12508:2: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalKerML.g:12509:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalKerML.g:12509:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt237=4;
            switch ( input.LA(1) ) {
            case 128:
                {
                alt237=1;
                }
                break;
            case 129:
                {
                alt237=2;
                }
                break;
            case 130:
                {
                alt237=3;
                }
                break;
            case 131:
                {
                alt237=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;
            }

            switch (alt237) {
                case 1 :
                    // InternalKerML.g:12510:3: kw= '=='
                    {
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12516:3: kw= '!='
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12522:3: kw= '==='
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:12528:3: kw= '!=='
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "entryRuleClassificationExpression"
    // InternalKerML.g:12537:1: entryRuleClassificationExpression returns [EObject current=null] : iv_ruleClassificationExpression= ruleClassificationExpression EOF ;
    public final EObject entryRuleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassificationExpression = null;


        try {
            // InternalKerML.g:12537:65: (iv_ruleClassificationExpression= ruleClassificationExpression EOF )
            // InternalKerML.g:12538:2: iv_ruleClassificationExpression= ruleClassificationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationExpression=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationExpression"


    // $ANTLR start "ruleClassificationExpression"
    // InternalKerML.g:12544:1: ruleClassificationExpression returns [EObject current=null] : ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) | ( () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) ) ) ) ;
    public final EObject ruleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_operand_5_0 = null;

        AntlrDatatypeRuleToken lv_operator_6_0 = null;

        EObject lv_ownedRelationship_7_0 = null;

        EObject lv_operand_9_0 = null;

        AntlrDatatypeRuleToken lv_operator_10_0 = null;

        EObject lv_ownedRelationship_11_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12550:2: ( ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) | ( () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) ) ) ) )
            // InternalKerML.g:12551:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) | ( () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) ) ) )
            {
            // InternalKerML.g:12551:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) | ( () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) ) ) )
            int alt239=3;
            alt239 = dfa239.predict(input);
            switch (alt239) {
                case 1 :
                    // InternalKerML.g:12552:3: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
                    {
                    // InternalKerML.g:12552:3: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
                    // InternalKerML.g:12553:4: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_165);
                    this_RelationalExpression_0=ruleRelationalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationalExpression_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:12561:4: ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
                    int alt238=2;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==116||(LA238_0>=132 && LA238_0<=134)) ) {
                        alt238=1;
                    }
                    switch (alt238) {
                        case 1 :
                            // InternalKerML.g:12562:5: () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                            {
                            // InternalKerML.g:12562:5: ()
                            // InternalKerML.g:12563:6: 
                            {
                            if ( state.backtracking==0 ) {

                              						current = forceCreateModelElementAndAdd(
                              							grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperandAction_0_1_0(),
                              							current);
                              					
                            }

                            }

                            // InternalKerML.g:12569:5: ( (lv_operator_2_0= ruleClassificationOperator ) )
                            // InternalKerML.g:12570:6: (lv_operator_2_0= ruleClassificationOperator )
                            {
                            // InternalKerML.g:12570:6: (lv_operator_2_0= ruleClassificationOperator )
                            // InternalKerML.g:12571:7: lv_operator_2_0= ruleClassificationOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_4);
                            lv_operator_2_0=ruleClassificationOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_2_0,
                              								"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKerML.g:12588:5: ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                            // InternalKerML.g:12589:6: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                            {
                            // InternalKerML.g:12589:6: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                            // InternalKerML.g:12590:7: lv_ownedRelationship_3_0= ruleTypeReferenceMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_3_0=ruleTypeReferenceMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:12610:3: ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) )
                    {
                    // InternalKerML.g:12610:3: ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) )
                    // InternalKerML.g:12611:4: () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) )
                    {
                    // InternalKerML.g:12611:4: ()
                    // InternalKerML.g:12612:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getClassificationExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:12618:4: ( (lv_operand_5_0= ruleSelfReferenceExpression ) )
                    // InternalKerML.g:12619:5: (lv_operand_5_0= ruleSelfReferenceExpression )
                    {
                    // InternalKerML.g:12619:5: (lv_operand_5_0= ruleSelfReferenceExpression )
                    // InternalKerML.g:12620:6: lv_operand_5_0= ruleSelfReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperandSelfReferenceExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_166);
                    lv_operand_5_0=ruleSelfReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_5_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.SelfReferenceExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12637:4: ( (lv_operator_6_0= ruleClassificationOperator ) )
                    // InternalKerML.g:12638:5: (lv_operator_6_0= ruleClassificationOperator )
                    {
                    // InternalKerML.g:12638:5: (lv_operator_6_0= ruleClassificationOperator )
                    // InternalKerML.g:12639:6: lv_operator_6_0= ruleClassificationOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_operator_6_0=ruleClassificationOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_6_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12656:4: ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) )
                    // InternalKerML.g:12657:5: (lv_ownedRelationship_7_0= ruleTypeReferenceMember )
                    {
                    // InternalKerML.g:12657:5: (lv_ownedRelationship_7_0= ruleTypeReferenceMember )
                    // InternalKerML.g:12658:6: lv_ownedRelationship_7_0= ruleTypeReferenceMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_7_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:12677:3: ( () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) ) )
                    {
                    // InternalKerML.g:12677:3: ( () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) ) )
                    // InternalKerML.g:12678:4: () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) )
                    {
                    // InternalKerML.g:12678:4: ()
                    // InternalKerML.g:12679:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getClassificationExpressionAccess().getOperatorExpressionAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:12685:4: ( (lv_operand_9_0= ruleMetadataReference ) )
                    // InternalKerML.g:12686:5: (lv_operand_9_0= ruleMetadataReference )
                    {
                    // InternalKerML.g:12686:5: (lv_operand_9_0= ruleMetadataReference )
                    // InternalKerML.g:12687:6: lv_operand_9_0= ruleMetadataReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperandMetadataReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_167);
                    lv_operand_9_0=ruleMetadataReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_9_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MetadataReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12704:4: ( (lv_operator_10_0= ruleMetaClassificationOperator ) )
                    // InternalKerML.g:12705:5: (lv_operator_10_0= ruleMetaClassificationOperator )
                    {
                    // InternalKerML.g:12705:5: (lv_operator_10_0= ruleMetaClassificationOperator )
                    // InternalKerML.g:12706:6: lv_operator_10_0= ruleMetaClassificationOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorMetaClassificationOperatorParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_operator_10_0=ruleMetaClassificationOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_10_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MetaClassificationOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12723:4: ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) )
                    // InternalKerML.g:12724:5: (lv_ownedRelationship_11_0= ruleTypeReferenceMember )
                    {
                    // InternalKerML.g:12724:5: (lv_ownedRelationship_11_0= ruleTypeReferenceMember )
                    // InternalKerML.g:12725:6: lv_ownedRelationship_11_0= ruleTypeReferenceMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_11_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_11_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationExpression"


    // $ANTLR start "entryRuleClassificationOperator"
    // InternalKerML.g:12747:1: entryRuleClassificationOperator returns [String current=null] : iv_ruleClassificationOperator= ruleClassificationOperator EOF ;
    public final String entryRuleClassificationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleClassificationOperator = null;


        try {
            // InternalKerML.g:12747:62: (iv_ruleClassificationOperator= ruleClassificationOperator EOF )
            // InternalKerML.g:12748:2: iv_ruleClassificationOperator= ruleClassificationOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationOperator=ruleClassificationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationOperator"


    // $ANTLR start "ruleClassificationOperator"
    // InternalKerML.g:12754:1: ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' ) ;
    public final AntlrDatatypeRuleToken ruleClassificationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12760:2: ( (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' ) )
            // InternalKerML.g:12761:2: (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' )
            {
            // InternalKerML.g:12761:2: (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' )
            int alt240=4;
            switch ( input.LA(1) ) {
            case 132:
                {
                alt240=1;
                }
                break;
            case 133:
                {
                alt240=2;
                }
                break;
            case 116:
                {
                alt240=3;
                }
                break;
            case 134:
                {
                alt240=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;
            }

            switch (alt240) {
                case 1 :
                    // InternalKerML.g:12762:3: kw= 'hastype'
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12768:3: kw= 'istype'
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getIstypeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12774:3: kw= '@'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getCommercialAtKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:12780:3: kw= 'as'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getAsKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationOperator"


    // $ANTLR start "entryRuleMetaClassificationOperator"
    // InternalKerML.g:12789:1: entryRuleMetaClassificationOperator returns [String current=null] : iv_ruleMetaClassificationOperator= ruleMetaClassificationOperator EOF ;
    public final String entryRuleMetaClassificationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMetaClassificationOperator = null;


        try {
            // InternalKerML.g:12789:66: (iv_ruleMetaClassificationOperator= ruleMetaClassificationOperator EOF )
            // InternalKerML.g:12790:2: iv_ruleMetaClassificationOperator= ruleMetaClassificationOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaClassificationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetaClassificationOperator=ruleMetaClassificationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaClassificationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaClassificationOperator"


    // $ANTLR start "ruleMetaClassificationOperator"
    // InternalKerML.g:12796:1: ruleMetaClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '@@' | kw= 'meta' ) ;
    public final AntlrDatatypeRuleToken ruleMetaClassificationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12802:2: ( (kw= '@@' | kw= 'meta' ) )
            // InternalKerML.g:12803:2: (kw= '@@' | kw= 'meta' )
            {
            // InternalKerML.g:12803:2: (kw= '@@' | kw= 'meta' )
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==135) ) {
                alt241=1;
            }
            else if ( (LA241_0==136) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    // InternalKerML.g:12804:3: kw= '@@'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMetaClassificationOperatorAccess().getCommercialAtCommercialAtKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12810:3: kw= 'meta'
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMetaClassificationOperatorAccess().getMetaKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaClassificationOperator"


    // $ANTLR start "entryRuleMetadataReference"
    // InternalKerML.g:12819:1: entryRuleMetadataReference returns [EObject current=null] : iv_ruleMetadataReference= ruleMetadataReference EOF ;
    public final EObject entryRuleMetadataReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataReference = null;


        try {
            // InternalKerML.g:12819:58: (iv_ruleMetadataReference= ruleMetadataReference EOF )
            // InternalKerML.g:12820:2: iv_ruleMetadataReference= ruleMetadataReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataReference=ruleMetadataReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataReference"


    // $ANTLR start "ruleMetadataReference"
    // InternalKerML.g:12826:1: ruleMetadataReference returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleMetadataReference() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:12832:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:12833:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:12833:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:12834:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:12834:3: ( ruleQualifiedName )
            // InternalKerML.g:12835:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getMetadataReferenceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMetadataReferenceAccess().getReferencedElementElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataReference"


    // $ANTLR start "entryRuleTypeReferenceMember"
    // InternalKerML.g:12852:1: entryRuleTypeReferenceMember returns [EObject current=null] : iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF ;
    public final EObject entryRuleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReferenceMember = null;


        try {
            // InternalKerML.g:12852:60: (iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF )
            // InternalKerML.g:12853:2: iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceMember=ruleTypeReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReferenceMember"


    // $ANTLR start "ruleTypeReferenceMember"
    // InternalKerML.g:12859:1: ruleTypeReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) ;
    public final EObject ruleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12865:2: ( ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) )
            // InternalKerML.g:12866:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            {
            // InternalKerML.g:12866:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            // InternalKerML.g:12867:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            {
            // InternalKerML.g:12867:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            // InternalKerML.g:12868:4: lv_ownedRelatedElement_0_0= ruleTypeReference
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementTypeReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReferenceMember"


    // $ANTLR start "entryRuleTypeReference"
    // InternalKerML.g:12888:1: entryRuleTypeReference returns [EObject current=null] : iv_ruleTypeReference= ruleTypeReference EOF ;
    public final EObject entryRuleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReference = null;


        try {
            // InternalKerML.g:12888:54: (iv_ruleTypeReference= ruleTypeReference EOF )
            // InternalKerML.g:12889:2: iv_ruleTypeReference= ruleTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReference=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReference"


    // $ANTLR start "ruleTypeReference"
    // InternalKerML.g:12895:1: ruleTypeReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) ;
    public final EObject ruleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12901:2: ( ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) )
            // InternalKerML.g:12902:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            {
            // InternalKerML.g:12902:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            // InternalKerML.g:12903:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            {
            // InternalKerML.g:12903:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            // InternalKerML.g:12904:4: lv_ownedRelationship_0_0= ruleReferenceTyping
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipReferenceTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReference"


    // $ANTLR start "entryRuleReferenceTyping"
    // InternalKerML.g:12924:1: entryRuleReferenceTyping returns [EObject current=null] : iv_ruleReferenceTyping= ruleReferenceTyping EOF ;
    public final EObject entryRuleReferenceTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceTyping = null;


        try {
            // InternalKerML.g:12924:56: (iv_ruleReferenceTyping= ruleReferenceTyping EOF )
            // InternalKerML.g:12925:2: iv_ruleReferenceTyping= ruleReferenceTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReferenceTyping=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceTyping"


    // $ANTLR start "ruleReferenceTyping"
    // InternalKerML.g:12931:1: ruleReferenceTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleReferenceTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:12937:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:12938:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:12938:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:12939:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:12939:3: ( ruleQualifiedName )
            // InternalKerML.g:12940:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getReferenceTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReferenceTypingAccess().getTypeTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceTyping"


    // $ANTLR start "entryRuleSelfReferenceExpression"
    // InternalKerML.g:12957:1: entryRuleSelfReferenceExpression returns [EObject current=null] : iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF ;
    public final EObject entryRuleSelfReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfReferenceExpression = null;


        try {
            // InternalKerML.g:12957:64: (iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF )
            // InternalKerML.g:12958:2: iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelfReferenceExpression=ruleSelfReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfReferenceExpression"


    // $ANTLR start "ruleSelfReferenceExpression"
    // InternalKerML.g:12964:1: ruleSelfReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) ) ;
    public final EObject ruleSelfReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12970:2: ( ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) ) )
            // InternalKerML.g:12971:2: ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) )
            {
            // InternalKerML.g:12971:2: ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) )
            // InternalKerML.g:12972:3: (lv_ownedRelationship_0_0= ruleSelfReferenceMember )
            {
            // InternalKerML.g:12972:3: (lv_ownedRelationship_0_0= ruleSelfReferenceMember )
            // InternalKerML.g:12973:4: lv_ownedRelationship_0_0= ruleSelfReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSelfReferenceExpressionAccess().getOwnedRelationshipSelfReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleSelfReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getSelfReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.SelfReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfReferenceExpression"


    // $ANTLR start "entryRuleSelfReferenceMember"
    // InternalKerML.g:12993:1: entryRuleSelfReferenceMember returns [EObject current=null] : iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF ;
    public final EObject entryRuleSelfReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfReferenceMember = null;


        try {
            // InternalKerML.g:12993:60: (iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF )
            // InternalKerML.g:12994:2: iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelfReferenceMember=ruleSelfReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfReferenceMember"


    // $ANTLR start "ruleSelfReferenceMember"
    // InternalKerML.g:13000:1: ruleSelfReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleSelfReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13006:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:13007:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:13007:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:13008:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:13008:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:13009:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSelfReferenceMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getSelfReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfReferenceMember"


    // $ANTLR start "entryRuleEmptyFeature"
    // InternalKerML.g:13029:1: entryRuleEmptyFeature returns [EObject current=null] : iv_ruleEmptyFeature= ruleEmptyFeature EOF ;
    public final EObject entryRuleEmptyFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeature = null;


        try {
            // InternalKerML.g:13029:53: (iv_ruleEmptyFeature= ruleEmptyFeature EOF )
            // InternalKerML.g:13030:2: iv_ruleEmptyFeature= ruleEmptyFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeature=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeature"


    // $ANTLR start "ruleEmptyFeature"
    // InternalKerML.g:13036:1: ruleEmptyFeature returns [EObject current=null] : () ;
    public final EObject ruleEmptyFeature() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:13042:2: ( () )
            // InternalKerML.g:13043:2: ()
            {
            // InternalKerML.g:13043:2: ()
            // InternalKerML.g:13044:3: 
            {
            if ( state.backtracking==0 ) {

              			current = forceCreateModelElement(
              				grammarAccess.getEmptyFeatureAccess().getFeatureAction(),
              				current);
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeature"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalKerML.g:13053:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // InternalKerML.g:13053:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalKerML.g:13054:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalKerML.g:13060:1: ruleRelationalExpression returns [EObject current=null] : (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RangeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13066:2: ( (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* ) )
            // InternalKerML.g:13067:2: (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* )
            {
            // InternalKerML.g:13067:2: (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* )
            // InternalKerML.g:13068:3: this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRangeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_168);
            this_RangeExpression_0=ruleRangeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RangeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13076:3: ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )*
            loop242:
            do {
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( ((LA242_0>=13 && LA242_0<=14)||(LA242_0>=137 && LA242_0<=138)) ) {
                    alt242=1;
                }


                switch (alt242) {
            	case 1 :
            	    // InternalKerML.g:13077:4: () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) )
            	    {
            	    // InternalKerML.g:13077:4: ()
            	    // InternalKerML.g:13078:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:13084:4: ( (lv_operator_2_0= ruleRelationalOperator ) )
            	    // InternalKerML.g:13085:5: (lv_operator_2_0= ruleRelationalOperator )
            	    {
            	    // InternalKerML.g:13085:5: (lv_operator_2_0= ruleRelationalOperator )
            	    // InternalKerML.g:13086:6: lv_operator_2_0= ruleRelationalOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.RelationalOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:13103:4: ( (lv_operand_3_0= ruleRangeExpression ) )
            	    // InternalKerML.g:13104:5: (lv_operand_3_0= ruleRangeExpression )
            	    {
            	    // InternalKerML.g:13104:5: (lv_operand_3_0= ruleRangeExpression )
            	    // InternalKerML.g:13105:6: lv_operand_3_0= ruleRangeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperandRangeExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_168);
            	    lv_operand_3_0=ruleRangeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.RangeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop242;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleRelationalOperator"
    // InternalKerML.g:13127:1: entryRuleRelationalOperator returns [String current=null] : iv_ruleRelationalOperator= ruleRelationalOperator EOF ;
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            // InternalKerML.g:13127:58: (iv_ruleRelationalOperator= ruleRelationalOperator EOF )
            // InternalKerML.g:13128:2: iv_ruleRelationalOperator= ruleRelationalOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalOperator=ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
    // InternalKerML.g:13134:1: ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) ;
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:13140:2: ( (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) )
            // InternalKerML.g:13141:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
            {
            // InternalKerML.g:13141:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
            int alt243=4;
            switch ( input.LA(1) ) {
            case 13:
                {
                alt243=1;
                }
                break;
            case 14:
                {
                alt243=2;
                }
                break;
            case 137:
                {
                alt243=3;
                }
                break;
            case 138:
                {
                alt243=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }

            switch (alt243) {
                case 1 :
                    // InternalKerML.g:13142:3: kw= '<'
                    {
                    kw=(Token)match(input,13,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13148:3: kw= '>'
                    {
                    kw=(Token)match(input,14,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:13154:3: kw= '<='
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:13160:3: kw= '>='
                    {
                    kw=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleRangeExpression"
    // InternalKerML.g:13169:1: entryRuleRangeExpression returns [EObject current=null] : iv_ruleRangeExpression= ruleRangeExpression EOF ;
    public final EObject entryRuleRangeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeExpression = null;


        try {
            // InternalKerML.g:13169:56: (iv_ruleRangeExpression= ruleRangeExpression EOF )
            // InternalKerML.g:13170:2: iv_ruleRangeExpression= ruleRangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeExpression=ruleRangeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeExpression"


    // $ANTLR start "ruleRangeExpression"
    // InternalKerML.g:13176:1: ruleRangeExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? ) ;
    public final EObject ruleRangeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13182:2: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? ) )
            // InternalKerML.g:13183:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? )
            {
            // InternalKerML.g:13183:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? )
            // InternalKerML.g:13184:3: this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRangeExpressionAccess().getAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_169);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13192:3: ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==89) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // InternalKerML.g:13193:4: () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) )
                    {
                    // InternalKerML.g:13193:4: ()
                    // InternalKerML.g:13194:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getRangeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:13200:4: ( (lv_operator_2_0= '..' ) )
                    // InternalKerML.g:13201:5: (lv_operator_2_0= '..' )
                    {
                    // InternalKerML.g:13201:5: (lv_operator_2_0= '..' )
                    // InternalKerML.g:13202:6: lv_operator_2_0= '..'
                    {
                    lv_operator_2_0=(Token)match(input,89,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_2_0, grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRangeExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_2_0, "..");
                      					
                    }

                    }


                    }

                    // InternalKerML.g:13214:4: ( (lv_operand_3_0= ruleAdditiveExpression ) )
                    // InternalKerML.g:13215:5: (lv_operand_3_0= ruleAdditiveExpression )
                    {
                    // InternalKerML.g:13215:5: (lv_operand_3_0= ruleAdditiveExpression )
                    // InternalKerML.g:13216:6: lv_operand_3_0= ruleAdditiveExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRangeExpressionAccess().getOperandAdditiveExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_3_0=ruleAdditiveExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRangeExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AdditiveExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalKerML.g:13238:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // InternalKerML.g:13238:59: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // InternalKerML.g:13239:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalKerML.g:13245:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13251:2: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // InternalKerML.g:13252:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            {
            // InternalKerML.g:13252:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            // InternalKerML.g:13253:3: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_170);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13261:3: ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( ((LA245_0>=139 && LA245_0<=140)) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // InternalKerML.g:13262:4: () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    {
            	    // InternalKerML.g:13262:4: ()
            	    // InternalKerML.g:13263:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:13269:4: ( (lv_operator_2_0= ruleAdditiveOperator ) )
            	    // InternalKerML.g:13270:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    {
            	    // InternalKerML.g:13270:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    // InternalKerML.g:13271:6: lv_operator_2_0= ruleAdditiveOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AdditiveOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:13288:4: ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    // InternalKerML.g:13289:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    {
            	    // InternalKerML.g:13289:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    // InternalKerML.g:13290:6: lv_operand_3_0= ruleMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperandMultiplicativeExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_170);
            	    lv_operand_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleAdditiveOperator"
    // InternalKerML.g:13312:1: entryRuleAdditiveOperator returns [String current=null] : iv_ruleAdditiveOperator= ruleAdditiveOperator EOF ;
    public final String entryRuleAdditiveOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAdditiveOperator = null;


        try {
            // InternalKerML.g:13312:56: (iv_ruleAdditiveOperator= ruleAdditiveOperator EOF )
            // InternalKerML.g:13313:2: iv_ruleAdditiveOperator= ruleAdditiveOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveOperator=ruleAdditiveOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveOperator"


    // $ANTLR start "ruleAdditiveOperator"
    // InternalKerML.g:13319:1: ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleAdditiveOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:13325:2: ( (kw= '+' | kw= '-' ) )
            // InternalKerML.g:13326:2: (kw= '+' | kw= '-' )
            {
            // InternalKerML.g:13326:2: (kw= '+' | kw= '-' )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==139) ) {
                alt246=1;
            }
            else if ( (LA246_0==140) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }
            switch (alt246) {
                case 1 :
                    // InternalKerML.g:13327:3: kw= '+'
                    {
                    kw=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13333:3: kw= '-'
                    {
                    kw=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveOperator"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalKerML.g:13342:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // InternalKerML.g:13342:65: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // InternalKerML.g:13343:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalKerML.g:13349:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ExponentiationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13355:2: ( (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* ) )
            // InternalKerML.g:13356:2: (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* )
            {
            // InternalKerML.g:13356:2: (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* )
            // InternalKerML.g:13357:3: this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_171);
            this_ExponentiationExpression_0=ruleExponentiationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExponentiationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13365:3: ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )*
            loop247:
            do {
                int alt247=2;
                int LA247_0 = input.LA(1);

                if ( (LA247_0==33||(LA247_0>=141 && LA247_0<=142)) ) {
                    alt247=1;
                }


                switch (alt247) {
            	case 1 :
            	    // InternalKerML.g:13366:4: () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) )
            	    {
            	    // InternalKerML.g:13366:4: ()
            	    // InternalKerML.g:13367:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:13373:4: ( (lv_operator_2_0= ruleMultiplicativeOperator ) )
            	    // InternalKerML.g:13374:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    {
            	    // InternalKerML.g:13374:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    // InternalKerML.g:13375:6: lv_operator_2_0= ruleMultiplicativeOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MultiplicativeOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:13392:4: ( (lv_operand_3_0= ruleExponentiationExpression ) )
            	    // InternalKerML.g:13393:5: (lv_operand_3_0= ruleExponentiationExpression )
            	    {
            	    // InternalKerML.g:13393:5: (lv_operand_3_0= ruleExponentiationExpression )
            	    // InternalKerML.g:13394:6: lv_operand_3_0= ruleExponentiationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperandExponentiationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_171);
            	    lv_operand_3_0=ruleExponentiationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExponentiationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleMultiplicativeOperator"
    // InternalKerML.g:13416:1: entryRuleMultiplicativeOperator returns [String current=null] : iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF ;
    public final String entryRuleMultiplicativeOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiplicativeOperator = null;


        try {
            // InternalKerML.g:13416:62: (iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF )
            // InternalKerML.g:13417:2: iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeOperator=ruleMultiplicativeOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeOperator"


    // $ANTLR start "ruleMultiplicativeOperator"
    // InternalKerML.g:13423:1: ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleMultiplicativeOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:13429:2: ( (kw= '*' | kw= '/' | kw= '%' ) )
            // InternalKerML.g:13430:2: (kw= '*' | kw= '/' | kw= '%' )
            {
            // InternalKerML.g:13430:2: (kw= '*' | kw= '/' | kw= '%' )
            int alt248=3;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt248=1;
                }
                break;
            case 141:
                {
                alt248=2;
                }
                break;
            case 142:
                {
                alt248=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;
            }

            switch (alt248) {
                case 1 :
                    // InternalKerML.g:13431:3: kw= '*'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13437:3: kw= '/'
                    {
                    kw=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:13443:3: kw= '%'
                    {
                    kw=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeOperator"


    // $ANTLR start "entryRuleExponentiationExpression"
    // InternalKerML.g:13452:1: entryRuleExponentiationExpression returns [EObject current=null] : iv_ruleExponentiationExpression= ruleExponentiationExpression EOF ;
    public final EObject entryRuleExponentiationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExponentiationExpression = null;


        try {
            // InternalKerML.g:13452:65: (iv_ruleExponentiationExpression= ruleExponentiationExpression EOF )
            // InternalKerML.g:13453:2: iv_ruleExponentiationExpression= ruleExponentiationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentiationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExponentiationExpression=ruleExponentiationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExponentiationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExponentiationExpression"


    // $ANTLR start "ruleExponentiationExpression"
    // InternalKerML.g:13459:1: ruleExponentiationExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* ) ;
    public final EObject ruleExponentiationExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13465:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* ) )
            // InternalKerML.g:13466:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* )
            {
            // InternalKerML.g:13466:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* )
            // InternalKerML.g:13467:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_172);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13475:3: ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==35||LA249_0==143) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // InternalKerML.g:13476:4: () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) )
            	    {
            	    // InternalKerML.g:13476:4: ()
            	    // InternalKerML.g:13477:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:13483:4: ( (lv_operator_2_0= ruleExponentiationOperator ) )
            	    // InternalKerML.g:13484:5: (lv_operator_2_0= ruleExponentiationOperator )
            	    {
            	    // InternalKerML.g:13484:5: (lv_operator_2_0= ruleExponentiationOperator )
            	    // InternalKerML.g:13485:6: lv_operator_2_0= ruleExponentiationOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operator_2_0=ruleExponentiationOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExponentiationOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:13502:4: ( (lv_operand_3_0= ruleUnaryExpression ) )
            	    // InternalKerML.g:13503:5: (lv_operand_3_0= ruleUnaryExpression )
            	    {
            	    // InternalKerML.g:13503:5: (lv_operand_3_0= ruleUnaryExpression )
            	    // InternalKerML.g:13504:6: lv_operand_3_0= ruleUnaryExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_172);
            	    lv_operand_3_0=ruleUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.UnaryExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExponentiationExpression"


    // $ANTLR start "entryRuleExponentiationOperator"
    // InternalKerML.g:13526:1: entryRuleExponentiationOperator returns [String current=null] : iv_ruleExponentiationOperator= ruleExponentiationOperator EOF ;
    public final String entryRuleExponentiationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExponentiationOperator = null;


        try {
            // InternalKerML.g:13526:62: (iv_ruleExponentiationOperator= ruleExponentiationOperator EOF )
            // InternalKerML.g:13527:2: iv_ruleExponentiationOperator= ruleExponentiationOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentiationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExponentiationOperator=ruleExponentiationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExponentiationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExponentiationOperator"


    // $ANTLR start "ruleExponentiationOperator"
    // InternalKerML.g:13533:1: ruleExponentiationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '**' | kw= '^' ) ;
    public final AntlrDatatypeRuleToken ruleExponentiationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:13539:2: ( (kw= '**' | kw= '^' ) )
            // InternalKerML.g:13540:2: (kw= '**' | kw= '^' )
            {
            // InternalKerML.g:13540:2: (kw= '**' | kw= '^' )
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==35) ) {
                alt250=1;
            }
            else if ( (LA250_0==143) ) {
                alt250=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 250, 0, input);

                throw nvae;
            }
            switch (alt250) {
                case 1 :
                    // InternalKerML.g:13541:3: kw= '**'
                    {
                    kw=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13547:3: kw= '^'
                    {
                    kw=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExponentiationOperatorAccess().getCircumflexAccentKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExponentiationOperator"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalKerML.g:13556:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalKerML.g:13556:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalKerML.g:13557:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalKerML.g:13563:1: ruleUnaryExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_operator_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_ExtentExpression_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:13569:2: ( ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression ) )
            // InternalKerML.g:13570:2: ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression )
            {
            // InternalKerML.g:13570:2: ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression )
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==45||(LA251_0>=139 && LA251_0<=140)||LA251_0==144) ) {
                alt251=1;
            }
            else if ( ((LA251_0>=RULE_STRING_VALUE && LA251_0<=RULE_UNRESTRICTED_NAME)||LA251_0==17||(LA251_0>=32 && LA251_0<=33)||LA251_0==95||(LA251_0>=109 && LA251_0<=110)||LA251_0==113||LA251_0==147) ) {
                alt251=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;
            }
            switch (alt251) {
                case 1 :
                    // InternalKerML.g:13571:3: ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) )
                    {
                    // InternalKerML.g:13571:3: ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) )
                    // InternalKerML.g:13572:4: () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) )
                    {
                    // InternalKerML.g:13572:4: ()
                    // InternalKerML.g:13573:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:13579:4: ( (lv_operator_1_0= ruleUnaryOperator ) )
                    // InternalKerML.g:13580:5: (lv_operator_1_0= ruleUnaryOperator )
                    {
                    // InternalKerML.g:13580:5: (lv_operator_1_0= ruleUnaryOperator )
                    // InternalKerML.g:13581:6: lv_operator_1_0= ruleUnaryOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_156);
                    lv_operator_1_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.UnaryOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:13598:4: ( (lv_operand_2_0= ruleExtentExpression ) )
                    // InternalKerML.g:13599:5: (lv_operand_2_0= ruleExtentExpression )
                    {
                    // InternalKerML.g:13599:5: (lv_operand_2_0= ruleExtentExpression )
                    // InternalKerML.g:13600:6: lv_operand_2_0= ruleExtentExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperandExtentExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleExtentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExtentExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:13619:3: this_ExtentExpression_3= ruleExtentExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExtentExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExtentExpression_3=ruleExtentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExtentExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRuleUnaryOperator"
    // InternalKerML.g:13631:1: entryRuleUnaryOperator returns [String current=null] : iv_ruleUnaryOperator= ruleUnaryOperator EOF ;
    public final String entryRuleUnaryOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperator = null;


        try {
            // InternalKerML.g:13631:53: (iv_ruleUnaryOperator= ruleUnaryOperator EOF )
            // InternalKerML.g:13632:2: iv_ruleUnaryOperator= ruleUnaryOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryOperator=ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalKerML.g:13638:1: ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '~' | kw= 'not' ) ;
    public final AntlrDatatypeRuleToken ruleUnaryOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:13644:2: ( (kw= '+' | kw= '-' | kw= '~' | kw= 'not' ) )
            // InternalKerML.g:13645:2: (kw= '+' | kw= '-' | kw= '~' | kw= 'not' )
            {
            // InternalKerML.g:13645:2: (kw= '+' | kw= '-' | kw= '~' | kw= 'not' )
            int alt252=4;
            switch ( input.LA(1) ) {
            case 139:
                {
                alt252=1;
                }
                break;
            case 140:
                {
                alt252=2;
                }
                break;
            case 45:
                {
                alt252=3;
                }
                break;
            case 144:
                {
                alt252=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 252, 0, input);

                throw nvae;
            }

            switch (alt252) {
                case 1 :
                    // InternalKerML.g:13646:3: kw= '+'
                    {
                    kw=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13652:3: kw= '-'
                    {
                    kw=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:13658:3: kw= '~'
                    {
                    kw=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getTildeKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:13664:3: kw= 'not'
                    {
                    kw=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getNotKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "entryRuleExtentExpression"
    // InternalKerML.g:13673:1: entryRuleExtentExpression returns [EObject current=null] : iv_ruleExtentExpression= ruleExtentExpression EOF ;
    public final EObject entryRuleExtentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtentExpression = null;


        try {
            // InternalKerML.g:13673:57: (iv_ruleExtentExpression= ruleExtentExpression EOF )
            // InternalKerML.g:13674:2: iv_ruleExtentExpression= ruleExtentExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExtentExpression=ruleExtentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtentExpression"


    // $ANTLR start "ruleExtentExpression"
    // InternalKerML.g:13680:1: ruleExtentExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression ) ;
    public final EObject ruleExtentExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_0=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject this_PrimaryExpression_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:13686:2: ( ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression ) )
            // InternalKerML.g:13687:2: ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression )
            {
            // InternalKerML.g:13687:2: ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==32) ) {
                alt253=1;
            }
            else if ( ((LA253_0>=RULE_STRING_VALUE && LA253_0<=RULE_UNRESTRICTED_NAME)||LA253_0==17||LA253_0==33||LA253_0==95||(LA253_0>=109 && LA253_0<=110)||LA253_0==113||LA253_0==147) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }
            switch (alt253) {
                case 1 :
                    // InternalKerML.g:13688:3: ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) )
                    {
                    // InternalKerML.g:13688:3: ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) )
                    // InternalKerML.g:13689:4: () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) )
                    {
                    // InternalKerML.g:13689:4: ()
                    // InternalKerML.g:13690:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExtentExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:13696:4: ( (lv_operator_1_0= 'all' ) )
                    // InternalKerML.g:13697:5: (lv_operator_1_0= 'all' )
                    {
                    // InternalKerML.g:13697:5: (lv_operator_1_0= 'all' )
                    // InternalKerML.g:13698:6: lv_operator_1_0= 'all'
                    {
                    lv_operator_1_0=(Token)match(input,32,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_1_0, grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExtentExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_1_0, "all");
                      					
                    }

                    }


                    }

                    // InternalKerML.g:13710:4: ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) )
                    // InternalKerML.g:13711:5: (lv_ownedRelationship_2_0= ruleTypeReferenceMember )
                    {
                    // InternalKerML.g:13711:5: (lv_ownedRelationship_2_0= ruleTypeReferenceMember )
                    // InternalKerML.g:13712:6: lv_ownedRelationship_2_0= ruleTypeReferenceMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExtentExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExtentExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:13731:3: this_PrimaryExpression_3= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtentExpressionAccess().getPrimaryExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_3=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtentExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalKerML.g:13743:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalKerML.g:13743:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalKerML.g:13744:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalKerML.g:13750:1: rulePrimaryExpression returns [EObject current=null] : (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_operator_5_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_21=null;
        EObject this_BaseExpression_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_operand_6_0 = null;

        EObject lv_ownedRelationship_10_0 = null;

        EObject lv_operand_11_0 = null;

        EObject lv_operand_12_0 = null;

        EObject this_ArgumentList_13 = null;

        EObject lv_operand_16_0 = null;

        EObject lv_operand_19_0 = null;

        EObject lv_ownedRelationship_22_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13756:2: ( (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* ) )
            // InternalKerML.g:13757:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* )
            {
            // InternalKerML.g:13757:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* )
            // InternalKerML.g:13758:3: this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_173);
            this_BaseExpression_0=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BaseExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13766:3: ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )?
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==113) ) {
                int LA254_1 = input.LA(2);

                if ( ((LA254_1>=RULE_ID && LA254_1<=RULE_UNRESTRICTED_NAME)) ) {
                    alt254=1;
                }
            }
            switch (alt254) {
                case 1 :
                    // InternalKerML.g:13767:4: () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) )
                    {
                    // InternalKerML.g:13767:4: ()
                    // InternalKerML.g:13768:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getPrimaryExpressionAccess().getFeatureChainExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_1());
                      			
                    }
                    // InternalKerML.g:13778:4: ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) )
                    // InternalKerML.g:13779:5: (lv_ownedRelationship_3_0= ruleFeatureChainMember )
                    {
                    // InternalKerML.g:13779:5: (lv_ownedRelationship_3_0= ruleFeatureChainMember )
                    // InternalKerML.g:13780:6: lv_ownedRelationship_3_0= ruleFeatureChainMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFeatureChainMemberParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_173);
                    lv_ownedRelationship_3_0=ruleFeatureChainMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureChainMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:13798:3: ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==88||LA258_0==113||(LA258_0>=145 && LA258_0<=146)) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // InternalKerML.g:13799:4: ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )?
            	    {
            	    // InternalKerML.g:13799:4: ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) )
            	    int alt256=4;
            	    switch ( input.LA(1) ) {
            	    case 88:
            	        {
            	        alt256=1;
            	        }
            	        break;
            	    case 145:
            	        {
            	        alt256=2;
            	        }
            	        break;
            	    case 113:
            	        {
            	        alt256=3;
            	        }
            	        break;
            	    case 146:
            	        {
            	        alt256=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 256, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt256) {
            	        case 1 :
            	            // InternalKerML.g:13800:5: ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' )
            	            {
            	            // InternalKerML.g:13800:5: ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' )
            	            // InternalKerML.g:13801:6: () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']'
            	            {
            	            // InternalKerML.g:13801:6: ()
            	            // InternalKerML.g:13802:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_2_0_0_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            // InternalKerML.g:13808:6: ( (lv_operator_5_0= '[' ) )
            	            // InternalKerML.g:13809:7: (lv_operator_5_0= '[' )
            	            {
            	            // InternalKerML.g:13809:7: (lv_operator_5_0= '[' )
            	            // InternalKerML.g:13810:8: lv_operator_5_0= '['
            	            {
            	            lv_operator_5_0=(Token)match(input,88,FOLLOW_38); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_operator_5_0, grammarAccess.getPrimaryExpressionAccess().getOperatorLeftSquareBracketKeyword_2_0_0_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								setWithLastConsumed(current, "operator", lv_operator_5_0, "[");
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:13822:6: ( (lv_operand_6_0= ruleSequenceExpression ) )
            	            // InternalKerML.g:13823:7: (lv_operand_6_0= ruleSequenceExpression )
            	            {
            	            // InternalKerML.g:13823:7: (lv_operand_6_0= ruleSequenceExpression )
            	            // InternalKerML.g:13824:8: lv_operand_6_0= ruleSequenceExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandSequenceExpressionParserRuleCall_2_0_0_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_39);
            	            lv_operand_6_0=ruleSequenceExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_6_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.SequenceExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            otherlv_7=(Token)match(input,36,FOLLOW_173); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_7, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_0_0_3());
            	              					
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:13847:5: ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) )
            	            {
            	            // InternalKerML.g:13847:5: ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) )
            	            // InternalKerML.g:13848:6: () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] )
            	            {
            	            // InternalKerML.g:13848:6: ()
            	            // InternalKerML.g:13849:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_2_0_1_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_9=(Token)match(input,145,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_9, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_0_1_1());
            	              					
            	            }
            	            // InternalKerML.g:13859:6: ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) )
            	            // InternalKerML.g:13860:7: (lv_ownedRelationship_10_0= ruleReferenceTyping )
            	            {
            	            // InternalKerML.g:13860:7: (lv_ownedRelationship_10_0= ruleReferenceTyping )
            	            // InternalKerML.g:13861:8: lv_ownedRelationship_10_0= ruleReferenceTyping
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipReferenceTypingParserRuleCall_2_0_1_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_174);
            	            lv_ownedRelationship_10_0=ruleReferenceTyping();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"ownedRelationship",
            	              									lv_ownedRelationship_10_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:13878:6: ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] )
            	            int alt255=3;
            	            switch ( input.LA(1) ) {
            	            case 17:
            	                {
            	                alt255=1;
            	                }
            	                break;
            	            case RULE_ID:
            	            case RULE_UNRESTRICTED_NAME:
            	                {
            	                alt255=2;
            	                }
            	                break;
            	            case 95:
            	                {
            	                alt255=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 255, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt255) {
            	                case 1 :
            	                    // InternalKerML.g:13879:7: ( (lv_operand_11_0= ruleBodyExpression ) )
            	                    {
            	                    // InternalKerML.g:13879:7: ( (lv_operand_11_0= ruleBodyExpression ) )
            	                    // InternalKerML.g:13880:8: (lv_operand_11_0= ruleBodyExpression )
            	                    {
            	                    // InternalKerML.g:13880:8: (lv_operand_11_0= ruleBodyExpression )
            	                    // InternalKerML.g:13881:9: lv_operand_11_0= ruleBodyExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_1_3_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_173);
            	                    lv_operand_11_0=ruleBodyExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"operand",
            	                      										lv_operand_11_0,
            	                      										"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKerML.g:13899:7: ( (lv_operand_12_0= ruleFunctionReferenceExpression ) )
            	                    {
            	                    // InternalKerML.g:13899:7: ( (lv_operand_12_0= ruleFunctionReferenceExpression ) )
            	                    // InternalKerML.g:13900:8: (lv_operand_12_0= ruleFunctionReferenceExpression )
            	                    {
            	                    // InternalKerML.g:13900:8: (lv_operand_12_0= ruleFunctionReferenceExpression )
            	                    // InternalKerML.g:13901:9: lv_operand_12_0= ruleFunctionReferenceExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandFunctionReferenceExpressionParserRuleCall_2_0_1_3_1_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_173);
            	                    lv_operand_12_0=ruleFunctionReferenceExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"operand",
            	                      										lv_operand_12_0,
            	                      										"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReferenceExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKerML.g:13919:7: this_ArgumentList_13= ruleArgumentList[$current]
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      							if (current==null) {
            	                      								current = createModelElement(grammarAccess.getPrimaryExpressionRule());
            	                      							}
            	                      							newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgumentListParserRuleCall_2_0_1_3_2());
            	                      						
            	                    }
            	                    pushFollow(FOLLOW_173);
            	                    this_ArgumentList_13=ruleArgumentList(current);

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      							current = this_ArgumentList_13;
            	                      							afterParserOrEnumRuleCall();
            	                      						
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKerML.g:13933:5: ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) )
            	            {
            	            // InternalKerML.g:13933:5: ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) )
            	            // InternalKerML.g:13934:6: () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) )
            	            {
            	            // InternalKerML.g:13934:6: ()
            	            // InternalKerML.g:13935:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getCollectExpressionOperandAction_2_0_2_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_15=(Token)match(input,113,FOLLOW_175); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_2_0_2_1());
            	              					
            	            }
            	            // InternalKerML.g:13945:6: ( (lv_operand_16_0= ruleBodyExpression ) )
            	            // InternalKerML.g:13946:7: (lv_operand_16_0= ruleBodyExpression )
            	            {
            	            // InternalKerML.g:13946:7: (lv_operand_16_0= ruleBodyExpression )
            	            // InternalKerML.g:13947:8: lv_operand_16_0= ruleBodyExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_2_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_173);
            	            lv_operand_16_0=ruleBodyExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_16_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 4 :
            	            // InternalKerML.g:13966:5: ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) )
            	            {
            	            // InternalKerML.g:13966:5: ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) )
            	            // InternalKerML.g:13967:6: () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) )
            	            {
            	            // InternalKerML.g:13967:6: ()
            	            // InternalKerML.g:13968:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getSelectExpressionOperandAction_2_0_3_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_18=(Token)match(input,146,FOLLOW_175); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_18, grammarAccess.getPrimaryExpressionAccess().getFullStopQuestionMarkKeyword_2_0_3_1());
            	              					
            	            }
            	            // InternalKerML.g:13978:6: ( (lv_operand_19_0= ruleBodyExpression ) )
            	            // InternalKerML.g:13979:7: (lv_operand_19_0= ruleBodyExpression )
            	            {
            	            // InternalKerML.g:13979:7: (lv_operand_19_0= ruleBodyExpression )
            	            // InternalKerML.g:13980:8: lv_operand_19_0= ruleBodyExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_3_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_173);
            	            lv_operand_19_0=ruleBodyExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_19_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKerML.g:13999:4: ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )?
            	    int alt257=2;
            	    int LA257_0 = input.LA(1);

            	    if ( (LA257_0==113) ) {
            	        int LA257_1 = input.LA(2);

            	        if ( ((LA257_1>=RULE_ID && LA257_1<=RULE_UNRESTRICTED_NAME)) ) {
            	            alt257=1;
            	        }
            	    }
            	    switch (alt257) {
            	        case 1 :
            	            // InternalKerML.g:14000:5: () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) )
            	            {
            	            // InternalKerML.g:14000:5: ()
            	            // InternalKerML.g:14001:6: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              						current = forceCreateModelElementAndAdd(
            	              							grammarAccess.getPrimaryExpressionAccess().getFeatureChainExpressionOperandAction_2_1_0(),
            	              							current);
            	              					
            	            }

            	            }

            	            otherlv_21=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_21, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_2_1_1());
            	              				
            	            }
            	            // InternalKerML.g:14011:5: ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) )
            	            // InternalKerML.g:14012:6: (lv_ownedRelationship_22_0= ruleFeatureChainMember )
            	            {
            	            // InternalKerML.g:14012:6: (lv_ownedRelationship_22_0= ruleFeatureChainMember )
            	            // InternalKerML.g:14013:7: lv_ownedRelationship_22_0= ruleFeatureChainMember
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFeatureChainMemberParserRuleCall_2_1_2_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_173);
            	            lv_ownedRelationship_22_0=ruleFeatureChainMember();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ownedRelationship",
            	              								lv_ownedRelationship_22_0,
            	              								"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureChainMember");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleFunctionReferenceExpression"
    // InternalKerML.g:14036:1: entryRuleFunctionReferenceExpression returns [EObject current=null] : iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF ;
    public final EObject entryRuleFunctionReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReferenceExpression = null;


        try {
            // InternalKerML.g:14036:68: (iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF )
            // InternalKerML.g:14037:2: iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReferenceExpression=ruleFunctionReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReferenceExpression"


    // $ANTLR start "ruleFunctionReferenceExpression"
    // InternalKerML.g:14043:1: ruleFunctionReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) ) ;
    public final EObject ruleFunctionReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14049:2: ( ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) ) )
            // InternalKerML.g:14050:2: ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) )
            {
            // InternalKerML.g:14050:2: ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) )
            // InternalKerML.g:14051:3: (lv_ownedRelationship_0_0= ruleFunctionReferenceMember )
            {
            // InternalKerML.g:14051:3: (lv_ownedRelationship_0_0= ruleFunctionReferenceMember )
            // InternalKerML.g:14052:4: lv_ownedRelationship_0_0= ruleFunctionReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceExpressionAccess().getOwnedRelationshipFunctionReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFunctionReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReferenceExpression"


    // $ANTLR start "entryRuleFunctionReferenceMember"
    // InternalKerML.g:14072:1: entryRuleFunctionReferenceMember returns [EObject current=null] : iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF ;
    public final EObject entryRuleFunctionReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReferenceMember = null;


        try {
            // InternalKerML.g:14072:64: (iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF )
            // InternalKerML.g:14073:2: iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReferenceMember=ruleFunctionReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReferenceMember"


    // $ANTLR start "ruleFunctionReferenceMember"
    // InternalKerML.g:14079:1: ruleFunctionReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) ) ;
    public final EObject ruleFunctionReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14085:2: ( ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) ) )
            // InternalKerML.g:14086:2: ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) )
            {
            // InternalKerML.g:14086:2: ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) )
            // InternalKerML.g:14087:3: (lv_ownedRelatedElement_0_0= ruleFunctionReference )
            {
            // InternalKerML.g:14087:3: (lv_ownedRelatedElement_0_0= ruleFunctionReference )
            // InternalKerML.g:14088:4: lv_ownedRelatedElement_0_0= ruleFunctionReference
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceMemberAccess().getOwnedRelatedElementFunctionReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleFunctionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReferenceMember"


    // $ANTLR start "entryRuleFunctionReference"
    // InternalKerML.g:14108:1: entryRuleFunctionReference returns [EObject current=null] : iv_ruleFunctionReference= ruleFunctionReference EOF ;
    public final EObject entryRuleFunctionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReference = null;


        try {
            // InternalKerML.g:14108:58: (iv_ruleFunctionReference= ruleFunctionReference EOF )
            // InternalKerML.g:14109:2: iv_ruleFunctionReference= ruleFunctionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReference=ruleFunctionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReference"


    // $ANTLR start "ruleFunctionReference"
    // InternalKerML.g:14115:1: ruleFunctionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) ;
    public final EObject ruleFunctionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14121:2: ( ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) )
            // InternalKerML.g:14122:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            {
            // InternalKerML.g:14122:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            // InternalKerML.g:14123:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            {
            // InternalKerML.g:14123:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            // InternalKerML.g:14124:4: lv_ownedRelationship_0_0= ruleReferenceTyping
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceAccess().getOwnedRelationshipReferenceTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReference"


    // $ANTLR start "entryRuleFeatureChainMember"
    // InternalKerML.g:14144:1: entryRuleFeatureChainMember returns [EObject current=null] : iv_ruleFeatureChainMember= ruleFeatureChainMember EOF ;
    public final EObject entryRuleFeatureChainMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureChainMember = null;


        try {
            // InternalKerML.g:14144:59: (iv_ruleFeatureChainMember= ruleFeatureChainMember EOF )
            // InternalKerML.g:14145:2: iv_ruleFeatureChainMember= ruleFeatureChainMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureChainMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureChainMember=ruleFeatureChainMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureChainMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureChainMember"


    // $ANTLR start "ruleFeatureChainMember"
    // InternalKerML.g:14151:1: ruleFeatureChainMember returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) ) ;
    public final EObject ruleFeatureChainMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14157:2: ( ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) ) )
            // InternalKerML.g:14158:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )
            {
            // InternalKerML.g:14158:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )
            int alt259=2;
            alt259 = dfa259.predict(input);
            switch (alt259) {
                case 1 :
                    // InternalKerML.g:14159:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:14159:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:14160:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:14160:4: ( ruleQualifiedName )
                    // InternalKerML.g:14161:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureChainMemberRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureChainMemberAccess().getMemberElementFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:14176:3: ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) )
                    {
                    // InternalKerML.g:14176:3: ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) )
                    // InternalKerML.g:14177:4: () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:14177:4: ()
                    // InternalKerML.g:14178:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFeatureChainMemberAccess().getOwningMembershipAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:14184:4: ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:14185:5: (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:14185:5: (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:14186:6: lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureChainMemberAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_2_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureChainMemberRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChainMember"


    // $ANTLR start "entryRuleBaseExpression"
    // InternalKerML.g:14208:1: entryRuleBaseExpression returns [EObject current=null] : iv_ruleBaseExpression= ruleBaseExpression EOF ;
    public final EObject entryRuleBaseExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseExpression = null;


        try {
            // InternalKerML.g:14208:55: (iv_ruleBaseExpression= ruleBaseExpression EOF )
            // InternalKerML.g:14209:2: iv_ruleBaseExpression= ruleBaseExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseExpression=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseExpression"


    // $ANTLR start "ruleBaseExpression"
    // InternalKerML.g:14215:1: ruleBaseExpression returns [EObject current=null] : (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) ) ;
    public final EObject ruleBaseExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject this_NullExpression_0 = null;

        EObject this_LiteralExpression_1 = null;

        EObject this_FeatureReferenceExpression_2 = null;

        EObject this_MetadataAccessExpression_3 = null;

        EObject this_InvocationExpression_4 = null;

        EObject this_BodyExpression_5 = null;

        EObject this_SequenceExpression_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:14221:2: ( (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) ) )
            // InternalKerML.g:14222:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) )
            {
            // InternalKerML.g:14222:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) )
            int alt260=7;
            alt260 = dfa260.predict(input);
            switch (alt260) {
                case 1 :
                    // InternalKerML.g:14223:3: this_NullExpression_0= ruleNullExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NullExpression_0=ruleNullExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14232:3: this_LiteralExpression_1= ruleLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralExpression_1=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:14241:3: this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureReferenceExpression_2=ruleFeatureReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureReferenceExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:14250:3: this_MetadataAccessExpression_3= ruleMetadataAccessExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getMetadataAccessExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MetadataAccessExpression_3=ruleMetadataAccessExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MetadataAccessExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:14259:3: this_InvocationExpression_4= ruleInvocationExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InvocationExpression_4=ruleInvocationExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvocationExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:14268:3: this_BodyExpression_5= ruleBodyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getBodyExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BodyExpression_5=ruleBodyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BodyExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:14277:3: (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' )
                    {
                    // InternalKerML.g:14277:3: (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' )
                    // InternalKerML.g:14278:4: otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')'
                    {
                    otherlv_6=(Token)match(input,95,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBaseExpressionAccess().getSequenceExpressionParserRuleCall_6_1());
                      			
                    }
                    pushFollow(FOLLOW_176);
                    this_SequenceExpression_7=ruleSequenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SequenceExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_8=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseExpression"


    // $ANTLR start "entryRuleBodyExpression"
    // InternalKerML.g:14299:1: entryRuleBodyExpression returns [EObject current=null] : iv_ruleBodyExpression= ruleBodyExpression EOF ;
    public final EObject entryRuleBodyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyExpression = null;


        try {
            // InternalKerML.g:14299:55: (iv_ruleBodyExpression= ruleBodyExpression EOF )
            // InternalKerML.g:14300:2: iv_ruleBodyExpression= ruleBodyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyExpression=ruleBodyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyExpression"


    // $ANTLR start "ruleBodyExpression"
    // InternalKerML.g:14306:1: ruleBodyExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) ) ;
    public final EObject ruleBodyExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14312:2: ( ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) ) )
            // InternalKerML.g:14313:2: ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) )
            {
            // InternalKerML.g:14313:2: ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) )
            // InternalKerML.g:14314:3: (lv_ownedRelationship_0_0= ruleExpressionBodyMember )
            {
            // InternalKerML.g:14314:3: (lv_ownedRelationship_0_0= ruleExpressionBodyMember )
            // InternalKerML.g:14315:4: lv_ownedRelationship_0_0= ruleExpressionBodyMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipExpressionBodyMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleExpressionBodyMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ExpressionBodyMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyExpression"


    // $ANTLR start "entryRuleExpressionBodyMember"
    // InternalKerML.g:14335:1: entryRuleExpressionBodyMember returns [EObject current=null] : iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF ;
    public final EObject entryRuleExpressionBodyMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionBodyMember = null;


        try {
            // InternalKerML.g:14335:61: (iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF )
            // InternalKerML.g:14336:2: iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionBodyMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionBodyMember=ruleExpressionBodyMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionBodyMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionBodyMember"


    // $ANTLR start "ruleExpressionBodyMember"
    // InternalKerML.g:14342:1: ruleExpressionBodyMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) ) ;
    public final EObject ruleExpressionBodyMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14348:2: ( ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) ) )
            // InternalKerML.g:14349:2: ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) )
            {
            // InternalKerML.g:14349:2: ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) )
            // InternalKerML.g:14350:3: (lv_ownedRelatedElement_0_0= ruleExpressionBody )
            {
            // InternalKerML.g:14350:3: (lv_ownedRelatedElement_0_0= ruleExpressionBody )
            // InternalKerML.g:14351:4: lv_ownedRelatedElement_0_0= ruleExpressionBody
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionBodyMemberAccess().getOwnedRelatedElementExpressionBodyParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleExpressionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionBodyMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ExpressionBody");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionBodyMember"


    // $ANTLR start "entryRuleBodyParameter"
    // InternalKerML.g:14371:1: entryRuleBodyParameter returns [EObject current=null] : iv_ruleBodyParameter= ruleBodyParameter EOF ;
    public final EObject entryRuleBodyParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyParameter = null;


        try {
            // InternalKerML.g:14371:54: (iv_ruleBodyParameter= ruleBodyParameter EOF )
            // InternalKerML.g:14372:2: iv_ruleBodyParameter= ruleBodyParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyParameter=ruleBodyParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyParameter"


    // $ANTLR start "ruleBodyParameter"
    // InternalKerML.g:14378:1: ruleBodyParameter returns [EObject current=null] : ( (lv_name_0_0= ruleName ) ) ;
    public final EObject ruleBodyParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14384:2: ( ( (lv_name_0_0= ruleName ) ) )
            // InternalKerML.g:14385:2: ( (lv_name_0_0= ruleName ) )
            {
            // InternalKerML.g:14385:2: ( (lv_name_0_0= ruleName ) )
            // InternalKerML.g:14386:3: (lv_name_0_0= ruleName )
            {
            // InternalKerML.g:14386:3: (lv_name_0_0= ruleName )
            // InternalKerML.g:14387:4: lv_name_0_0= ruleName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyParameterAccess().getNameNameParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyParameterRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyParameter"


    // $ANTLR start "entryRuleSequenceExpression"
    // InternalKerML.g:14407:1: entryRuleSequenceExpression returns [EObject current=null] : iv_ruleSequenceExpression= ruleSequenceExpression EOF ;
    public final EObject entryRuleSequenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceExpression = null;


        try {
            // InternalKerML.g:14407:59: (iv_ruleSequenceExpression= ruleSequenceExpression EOF )
            // InternalKerML.g:14408:2: iv_ruleSequenceExpression= ruleSequenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceExpression=ruleSequenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceExpression"


    // $ANTLR start "ruleSequenceExpression"
    // InternalKerML.g:14414:1: ruleSequenceExpression returns [EObject current=null] : (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? ) ;
    public final EObject ruleSequenceExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_operator_3_0=null;
        EObject this_OwnedExpression_0 = null;

        EObject lv_operand_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14420:2: ( (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? ) )
            // InternalKerML.g:14421:2: (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? )
            {
            // InternalKerML.g:14421:2: (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? )
            // InternalKerML.g:14422:3: this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOwnedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_13);
            this_OwnedExpression_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OwnedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:14430:3: (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )?
            int alt261=3;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==22) ) {
                int LA261_1 = input.LA(2);

                if ( (LA261_1==EOF||LA261_1==36||LA261_1==96) ) {
                    alt261=1;
                }
                else if ( ((LA261_1>=RULE_STRING_VALUE && LA261_1<=RULE_UNRESTRICTED_NAME)||LA261_1==17||(LA261_1>=32 && LA261_1<=33)||LA261_1==45||LA261_1==95||(LA261_1>=109 && LA261_1<=110)||LA261_1==113||LA261_1==116||LA261_1==120||(LA261_1>=132 && LA261_1<=134)||(LA261_1>=139 && LA261_1<=140)||LA261_1==144||LA261_1==147) ) {
                    alt261=2;
                }
            }
            switch (alt261) {
                case 1 :
                    // InternalKerML.g:14431:4: otherlv_1= ','
                    {
                    otherlv_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSequenceExpressionAccess().getCommaKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14436:4: ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) )
                    {
                    // InternalKerML.g:14436:4: ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) )
                    // InternalKerML.g:14437:5: () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) )
                    {
                    // InternalKerML.g:14437:5: ()
                    // InternalKerML.g:14438:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getSequenceExpressionAccess().getOperatorExpressionOperandAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalKerML.g:14444:5: ( (lv_operator_3_0= ',' ) )
                    // InternalKerML.g:14445:6: (lv_operator_3_0= ',' )
                    {
                    // InternalKerML.g:14445:6: (lv_operator_3_0= ',' )
                    // InternalKerML.g:14446:7: lv_operator_3_0= ','
                    {
                    lv_operator_3_0=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_operator_3_0, grammarAccess.getSequenceExpressionAccess().getOperatorCommaKeyword_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getSequenceExpressionRule());
                      							}
                      							setWithLastConsumed(current, "operator", lv_operator_3_0, ",");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:14458:5: ( (lv_operand_4_0= ruleSequenceExpression ) )
                    // InternalKerML.g:14459:6: (lv_operand_4_0= ruleSequenceExpression )
                    {
                    // InternalKerML.g:14459:6: (lv_operand_4_0= ruleSequenceExpression )
                    // InternalKerML.g:14460:7: lv_operand_4_0= ruleSequenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOperandSequenceExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_4_0=ruleSequenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSequenceExpressionRule());
                      							}
                      							add(
                      								current,
                      								"operand",
                      								lv_operand_4_0,
                      								"org.omg.kerml.expressions.xtext.KerMLExpressions.SequenceExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceExpression"


    // $ANTLR start "entryRuleFeatureReferenceExpression"
    // InternalKerML.g:14483:1: entryRuleFeatureReferenceExpression returns [EObject current=null] : iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF ;
    public final EObject entryRuleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReferenceExpression = null;


        try {
            // InternalKerML.g:14483:67: (iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF )
            // InternalKerML.g:14484:2: iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReferenceExpression=ruleFeatureReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReferenceExpression"


    // $ANTLR start "ruleFeatureReferenceExpression"
    // InternalKerML.g:14490:1: ruleFeatureReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) ) ;
    public final EObject ruleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14496:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) ) )
            // InternalKerML.g:14497:2: ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) )
            {
            // InternalKerML.g:14497:2: ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) )
            // InternalKerML.g:14498:3: (lv_ownedRelationship_0_0= ruleFeatureReferenceMember )
            {
            // InternalKerML.g:14498:3: (lv_ownedRelationship_0_0= ruleFeatureReferenceMember )
            // InternalKerML.g:14499:4: lv_ownedRelationship_0_0= ruleFeatureReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipFeatureReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFeatureReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFeatureReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReferenceExpression"


    // $ANTLR start "entryRuleFeatureReferenceMember"
    // InternalKerML.g:14519:1: entryRuleFeatureReferenceMember returns [EObject current=null] : iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF ;
    public final EObject entryRuleFeatureReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReferenceMember = null;


        try {
            // InternalKerML.g:14519:63: (iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF )
            // InternalKerML.g:14520:2: iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReferenceMember=ruleFeatureReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReferenceMember"


    // $ANTLR start "ruleFeatureReferenceMember"
    // InternalKerML.g:14526:1: ruleFeatureReferenceMember returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleFeatureReferenceMember() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:14532:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:14533:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:14533:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:14534:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:14534:3: ( ruleQualifiedName )
            // InternalKerML.g:14535:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureReferenceMemberRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReferenceMember"


    // $ANTLR start "entryRuleMetadataAccessExpression"
    // InternalKerML.g:14552:1: entryRuleMetadataAccessExpression returns [EObject current=null] : iv_ruleMetadataAccessExpression= ruleMetadataAccessExpression EOF ;
    public final EObject entryRuleMetadataAccessExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataAccessExpression = null;


        try {
            // InternalKerML.g:14552:65: (iv_ruleMetadataAccessExpression= ruleMetadataAccessExpression EOF )
            // InternalKerML.g:14553:2: iv_ruleMetadataAccessExpression= ruleMetadataAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataAccessExpression=ruleMetadataAccessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataAccessExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataAccessExpression"


    // $ANTLR start "ruleMetadataAccessExpression"
    // InternalKerML.g:14559:1: ruleMetadataAccessExpression returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' ) ;
    public final EObject ruleMetadataAccessExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalKerML.g:14565:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' ) )
            // InternalKerML.g:14566:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' )
            {
            // InternalKerML.g:14566:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' )
            // InternalKerML.g:14567:3: ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata'
            {
            // InternalKerML.g:14567:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:14568:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:14568:4: ( ruleQualifiedName )
            // InternalKerML.g:14569:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMetadataAccessExpressionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataAccessExpressionAccess().getReferencedElementElementCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_149);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,113,FOLLOW_177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccessExpressionAccess().getFullStopKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMetadataAccessExpressionAccess().getMetadataKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataAccessExpression"


    // $ANTLR start "entryRuleInvocationExpression"
    // InternalKerML.g:14595:1: entryRuleInvocationExpression returns [EObject current=null] : iv_ruleInvocationExpression= ruleInvocationExpression EOF ;
    public final EObject entryRuleInvocationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvocationExpression = null;


        try {
            // InternalKerML.g:14595:61: (iv_ruleInvocationExpression= ruleInvocationExpression EOF )
            // InternalKerML.g:14596:2: iv_ruleInvocationExpression= ruleInvocationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvocationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvocationExpression=ruleInvocationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvocationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvocationExpression"


    // $ANTLR start "ruleInvocationExpression"
    // InternalKerML.g:14602:1: ruleInvocationExpression returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] ) ;
    public final EObject ruleInvocationExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject this_ArgumentList_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:14608:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] ) )
            // InternalKerML.g:14609:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] )
            {
            // InternalKerML.g:14609:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] )
            // InternalKerML.g:14610:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current]
            {
            // InternalKerML.g:14610:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) )
            // InternalKerML.g:14611:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping )
            {
            // InternalKerML.g:14611:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping )
            // InternalKerML.g:14612:5: lv_ownedRelationship_0_0= ruleOwnedFeatureTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_174);
            lv_ownedRelationship_0_0=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvocationExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvocationExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getInvocationExpressionAccess().getArgumentListParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ArgumentList_1=ruleArgumentList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArgumentList_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvocationExpression"


    // $ANTLR start "entryRuleOwnedFeatureChain"
    // InternalKerML.g:14644:1: entryRuleOwnedFeatureChain returns [EObject current=null] : iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF ;
    public final EObject entryRuleOwnedFeatureChain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureChain = null;


        try {
            // InternalKerML.g:14644:58: (iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF )
            // InternalKerML.g:14645:2: iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureChainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureChain=ruleOwnedFeatureChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureChain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureChain"


    // $ANTLR start "ruleOwnedFeatureChain"
    // InternalKerML.g:14651:1: ruleOwnedFeatureChain returns [EObject current=null] : this_FeatureChain_0= ruleFeatureChain[$current] ;
    public final EObject ruleOwnedFeatureChain() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureChain_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14657:2: (this_FeatureChain_0= ruleFeatureChain[$current] )
            // InternalKerML.g:14658:2: this_FeatureChain_0= ruleFeatureChain[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedFeatureChainRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedFeatureChainAccess().getFeatureChainParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_FeatureChain_0=ruleFeatureChain(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_FeatureChain_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureChain"


    // $ANTLR start "ruleFeatureChain"
    // InternalKerML.g:14673:1: ruleFeatureChain[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ ) ;
    public final EObject ruleFeatureChain(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14679:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ ) )
            // InternalKerML.g:14680:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ )
            {
            // InternalKerML.g:14680:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ )
            // InternalKerML.g:14681:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+
            {
            // InternalKerML.g:14681:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) )
            // InternalKerML.g:14682:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            {
            // InternalKerML.g:14682:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            // InternalKerML.g:14683:5: lv_ownedRelationship_0_0= ruleOwnedFeatureChaining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureChainAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_149);
            lv_ownedRelationship_0_0=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureChainRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:14700:3: (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+
            int cnt262=0;
            loop262:
            do {
                int alt262=2;
                int LA262_0 = input.LA(1);

                if ( (LA262_0==113) ) {
                    int LA262_2 = input.LA(2);

                    if ( ((LA262_2>=RULE_ID && LA262_2<=RULE_UNRESTRICTED_NAME)) ) {
                        alt262=1;
                    }


                }


                switch (alt262) {
            	case 1 :
            	    // InternalKerML.g:14701:4: otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            	    {
            	    otherlv_1=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getFeatureChainAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:14705:4: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            	    // InternalKerML.g:14706:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            	    {
            	    // InternalKerML.g:14706:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            	    // InternalKerML.g:14707:6: lv_ownedRelationship_2_0= ruleOwnedFeatureChaining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFeatureChainAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_178);
            	    lv_ownedRelationship_2_0=ruleOwnedFeatureChaining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFeatureChainRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt262 >= 1 ) break loop262;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(262, input);
                        throw eee;
                }
                cnt262++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChain"


    // $ANTLR start "entryRuleOwnedFeatureChaining"
    // InternalKerML.g:14729:1: entryRuleOwnedFeatureChaining returns [EObject current=null] : iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF ;
    public final EObject entryRuleOwnedFeatureChaining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureChaining = null;


        try {
            // InternalKerML.g:14729:61: (iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF )
            // InternalKerML.g:14730:2: iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureChainingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureChaining=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureChaining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureChaining"


    // $ANTLR start "ruleOwnedFeatureChaining"
    // InternalKerML.g:14736:1: ruleOwnedFeatureChaining returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedFeatureChaining() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:14742:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:14743:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:14743:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:14744:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:14744:3: ( ruleQualifiedName )
            // InternalKerML.g:14745:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedFeatureChainingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedFeatureChainingAccess().getChainingFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureChaining"


    // $ANTLR start "ruleArgumentList"
    // InternalKerML.g:14763:1: ruleArgumentList[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' ) ;
    public final EObject ruleArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject this_PositionalArgumentList_1 = null;

        EObject this_NamedArgumentList_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:14769:2: ( (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' ) )
            // InternalKerML.g:14770:2: (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' )
            {
            // InternalKerML.g:14770:2: (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' )
            // InternalKerML.g:14771:3: otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,95,FOLLOW_179); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalKerML.g:14775:3: (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )?
            int alt263=3;
            alt263 = dfa263.predict(input);
            switch (alt263) {
                case 1 :
                    // InternalKerML.g:14776:4: this_PositionalArgumentList_1= rulePositionalArgumentList[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getArgumentListRule());
                      				}
                      				newCompositeNode(grammarAccess.getArgumentListAccess().getPositionalArgumentListParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_176);
                    this_PositionalArgumentList_1=rulePositionalArgumentList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PositionalArgumentList_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14788:4: this_NamedArgumentList_2= ruleNamedArgumentList[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getArgumentListRule());
                      				}
                      				newCompositeNode(grammarAccess.getArgumentListAccess().getNamedArgumentListParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_176);
                    this_NamedArgumentList_2=ruleNamedArgumentList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_NamedArgumentList_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentList"


    // $ANTLR start "rulePositionalArgumentList"
    // InternalKerML.g:14809:1: rulePositionalArgumentList[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* ) ;
    public final EObject rulePositionalArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14815:2: ( ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* ) )
            // InternalKerML.g:14816:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* )
            {
            // InternalKerML.g:14816:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* )
            // InternalKerML.g:14817:3: ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )*
            {
            // InternalKerML.g:14817:3: ( (lv_ownedRelationship_0_0= ruleArgumentMember ) )
            // InternalKerML.g:14818:4: (lv_ownedRelationship_0_0= ruleArgumentMember )
            {
            // InternalKerML.g:14818:4: (lv_ownedRelationship_0_0= ruleArgumentMember )
            // InternalKerML.g:14819:5: lv_ownedRelationship_0_0= ruleArgumentMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipArgumentMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_0_0=ruleArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:14836:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )*
            loop264:
            do {
                int alt264=2;
                int LA264_0 = input.LA(1);

                if ( (LA264_0==22) ) {
                    alt264=1;
                }


                switch (alt264) {
            	case 1 :
            	    // InternalKerML.g:14837:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getPositionalArgumentListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:14841:4: ( (lv_ownedRelationship_2_0= ruleArgumentMember ) )
            	    // InternalKerML.g:14842:5: (lv_ownedRelationship_2_0= ruleArgumentMember )
            	    {
            	    // InternalKerML.g:14842:5: (lv_ownedRelationship_2_0= ruleArgumentMember )
            	    // InternalKerML.g:14843:6: lv_ownedRelationship_2_0= ruleArgumentMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipArgumentMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_2_0=ruleArgumentMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop264;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePositionalArgumentList"


    // $ANTLR start "entryRuleArgumentMember"
    // InternalKerML.g:14865:1: entryRuleArgumentMember returns [EObject current=null] : iv_ruleArgumentMember= ruleArgumentMember EOF ;
    public final EObject entryRuleArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentMember = null;


        try {
            // InternalKerML.g:14865:55: (iv_ruleArgumentMember= ruleArgumentMember EOF )
            // InternalKerML.g:14866:2: iv_ruleArgumentMember= ruleArgumentMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentMember=ruleArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentMember"


    // $ANTLR start "ruleArgumentMember"
    // InternalKerML.g:14872:1: ruleArgumentMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleArgument ) ) ;
    public final EObject ruleArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14878:2: ( ( (lv_ownedRelatedElement_0_0= ruleArgument ) ) )
            // InternalKerML.g:14879:2: ( (lv_ownedRelatedElement_0_0= ruleArgument ) )
            {
            // InternalKerML.g:14879:2: ( (lv_ownedRelatedElement_0_0= ruleArgument ) )
            // InternalKerML.g:14880:3: (lv_ownedRelatedElement_0_0= ruleArgument )
            {
            // InternalKerML.g:14880:3: (lv_ownedRelatedElement_0_0= ruleArgument )
            // InternalKerML.g:14881:4: lv_ownedRelatedElement_0_0= ruleArgument
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentMemberAccess().getOwnedRelatedElementArgumentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.Argument");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentMember"


    // $ANTLR start "entryRuleArgument"
    // InternalKerML.g:14901:1: entryRuleArgument returns [EObject current=null] : iv_ruleArgument= ruleArgument EOF ;
    public final EObject entryRuleArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgument = null;


        try {
            // InternalKerML.g:14901:49: (iv_ruleArgument= ruleArgument EOF )
            // InternalKerML.g:14902:2: iv_ruleArgument= ruleArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgument=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgument"


    // $ANTLR start "ruleArgument"
    // InternalKerML.g:14908:1: ruleArgument returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleArgumentValue ) ) ;
    public final EObject ruleArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14914:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentValue ) ) )
            // InternalKerML.g:14915:2: ( (lv_ownedRelationship_0_0= ruleArgumentValue ) )
            {
            // InternalKerML.g:14915:2: ( (lv_ownedRelationship_0_0= ruleArgumentValue ) )
            // InternalKerML.g:14916:3: (lv_ownedRelationship_0_0= ruleArgumentValue )
            {
            // InternalKerML.g:14916:3: (lv_ownedRelationship_0_0= ruleArgumentValue )
            // InternalKerML.g:14917:4: lv_ownedRelationship_0_0= ruleArgumentValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentAccess().getOwnedRelationshipArgumentValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgument"


    // $ANTLR start "ruleNamedArgumentList"
    // InternalKerML.g:14938:1: ruleNamedArgumentList[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* ) ;
    public final EObject ruleNamedArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14944:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* ) )
            // InternalKerML.g:14945:2: ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* )
            {
            // InternalKerML.g:14945:2: ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* )
            // InternalKerML.g:14946:3: ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )*
            {
            // InternalKerML.g:14946:3: ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) )
            // InternalKerML.g:14947:4: (lv_ownedRelationship_0_0= ruleNamedArgumentMember )
            {
            // InternalKerML.g:14947:4: (lv_ownedRelationship_0_0= ruleNamedArgumentMember )
            // InternalKerML.g:14948:5: lv_ownedRelationship_0_0= ruleNamedArgumentMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedArgumentMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_ownedRelationship_0_0=ruleNamedArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgumentMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:14965:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )*
            loop265:
            do {
                int alt265=2;
                int LA265_0 = input.LA(1);

                if ( (LA265_0==22) ) {
                    alt265=1;
                }


                switch (alt265) {
            	case 1 :
            	    // InternalKerML.g:14966:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getNamedArgumentListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:14970:4: ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) )
            	    // InternalKerML.g:14971:5: (lv_ownedRelationship_2_0= ruleNamedArgumentMember )
            	    {
            	    // InternalKerML.g:14971:5: (lv_ownedRelationship_2_0= ruleNamedArgumentMember )
            	    // InternalKerML.g:14972:6: lv_ownedRelationship_2_0= ruleNamedArgumentMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedArgumentMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_ownedRelationship_2_0=ruleNamedArgumentMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgumentMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop265;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgumentList"


    // $ANTLR start "entryRuleNamedArgumentMember"
    // InternalKerML.g:14994:1: entryRuleNamedArgumentMember returns [EObject current=null] : iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF ;
    public final EObject entryRuleNamedArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedArgumentMember = null;


        try {
            // InternalKerML.g:14994:60: (iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF )
            // InternalKerML.g:14995:2: iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedArgumentMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedArgumentMember=ruleNamedArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedArgumentMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedArgumentMember"


    // $ANTLR start "ruleNamedArgumentMember"
    // InternalKerML.g:15001:1: ruleNamedArgumentMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) ) ;
    public final EObject ruleNamedArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:15007:2: ( ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) ) )
            // InternalKerML.g:15008:2: ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) )
            {
            // InternalKerML.g:15008:2: ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) )
            // InternalKerML.g:15009:3: (lv_ownedRelatedElement_0_0= ruleNamedArgument )
            {
            // InternalKerML.g:15009:3: (lv_ownedRelatedElement_0_0= ruleNamedArgument )
            // InternalKerML.g:15010:4: lv_ownedRelatedElement_0_0= ruleNamedArgument
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getNamedArgumentMemberAccess().getOwnedRelatedElementNamedArgumentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleNamedArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getNamedArgumentMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgument");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgumentMember"


    // $ANTLR start "entryRuleNamedArgument"
    // InternalKerML.g:15030:1: entryRuleNamedArgument returns [EObject current=null] : iv_ruleNamedArgument= ruleNamedArgument EOF ;
    public final EObject entryRuleNamedArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedArgument = null;


        try {
            // InternalKerML.g:15030:54: (iv_ruleNamedArgument= ruleNamedArgument EOF )
            // InternalKerML.g:15031:2: iv_ruleNamedArgument= ruleNamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedArgument=ruleNamedArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedArgument"


    // $ANTLR start "ruleNamedArgument"
    // InternalKerML.g:15037:1: ruleNamedArgument returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) ) ;
    public final EObject ruleNamedArgument() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:15043:2: ( ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) ) )
            // InternalKerML.g:15044:2: ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) )
            {
            // InternalKerML.g:15044:2: ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) )
            // InternalKerML.g:15045:3: ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) )
            {
            // InternalKerML.g:15045:3: ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) )
            // InternalKerML.g:15046:4: (lv_ownedRelationship_0_0= ruleParameterRedefinition )
            {
            // InternalKerML.g:15046:4: (lv_ownedRelationship_0_0= ruleParameterRedefinition )
            // InternalKerML.g:15047:5: lv_ownedRelationship_0_0= ruleParameterRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentAccess().getOwnedRelationshipParameterRedefinitionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_117);
            lv_ownedRelationship_0_0=ruleParameterRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ParameterRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,84,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKerML.g:15068:3: ( (lv_ownedRelationship_2_0= ruleArgumentValue ) )
            // InternalKerML.g:15069:4: (lv_ownedRelationship_2_0= ruleArgumentValue )
            {
            // InternalKerML.g:15069:4: (lv_ownedRelationship_2_0= ruleArgumentValue )
            // InternalKerML.g:15070:5: lv_ownedRelationship_2_0= ruleArgumentValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentAccess().getOwnedRelationshipArgumentValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgument"


    // $ANTLR start "entryRuleParameterRedefinition"
    // InternalKerML.g:15091:1: entryRuleParameterRedefinition returns [EObject current=null] : iv_ruleParameterRedefinition= ruleParameterRedefinition EOF ;
    public final EObject entryRuleParameterRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterRedefinition = null;


        try {
            // InternalKerML.g:15091:62: (iv_ruleParameterRedefinition= ruleParameterRedefinition EOF )
            // InternalKerML.g:15092:2: iv_ruleParameterRedefinition= ruleParameterRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterRedefinition=ruleParameterRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterRedefinition"


    // $ANTLR start "ruleParameterRedefinition"
    // InternalKerML.g:15098:1: ruleParameterRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleParameterRedefinition() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:15104:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:15105:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:15105:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:15106:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:15106:3: ( ruleQualifiedName )
            // InternalKerML.g:15107:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getParameterRedefinitionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getParameterRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterRedefinition"


    // $ANTLR start "entryRuleArgumentValue"
    // InternalKerML.g:15124:1: entryRuleArgumentValue returns [EObject current=null] : iv_ruleArgumentValue= ruleArgumentValue EOF ;
    public final EObject entryRuleArgumentValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentValue = null;


        try {
            // InternalKerML.g:15124:54: (iv_ruleArgumentValue= ruleArgumentValue EOF )
            // InternalKerML.g:15125:2: iv_ruleArgumentValue= ruleArgumentValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentValue=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentValue"


    // $ANTLR start "ruleArgumentValue"
    // InternalKerML.g:15131:1: ruleArgumentValue returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) ;
    public final EObject ruleArgumentValue() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:15137:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:15138:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:15138:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            // InternalKerML.g:15139:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            {
            // InternalKerML.g:15139:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            // InternalKerML.g:15140:4: lv_ownedRelatedElement_0_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentValueRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentValue"


    // $ANTLR start "entryRuleNullExpression"
    // InternalKerML.g:15160:1: entryRuleNullExpression returns [EObject current=null] : iv_ruleNullExpression= ruleNullExpression EOF ;
    public final EObject entryRuleNullExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullExpression = null;


        try {
            // InternalKerML.g:15160:55: (iv_ruleNullExpression= ruleNullExpression EOF )
            // InternalKerML.g:15161:2: iv_ruleNullExpression= ruleNullExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullExpression=ruleNullExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullExpression"


    // $ANTLR start "ruleNullExpression"
    // InternalKerML.g:15167:1: ruleNullExpression returns [EObject current=null] : ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) ) ;
    public final EObject ruleNullExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalKerML.g:15173:2: ( ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) ) )
            // InternalKerML.g:15174:2: ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) )
            {
            // InternalKerML.g:15174:2: ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) )
            // InternalKerML.g:15175:3: () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) )
            {
            // InternalKerML.g:15175:3: ()
            // InternalKerML.g:15176:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullExpressionAccess().getNullExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalKerML.g:15182:3: (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) )
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==147) ) {
                alt266=1;
            }
            else if ( (LA266_0==95) ) {
                alt266=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;
            }
            switch (alt266) {
                case 1 :
                    // InternalKerML.g:15183:4: otherlv_1= 'null'
                    {
                    otherlv_1=(Token)match(input,147,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getNullKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:15188:4: (otherlv_2= '(' otherlv_3= ')' )
                    {
                    // InternalKerML.g:15188:4: (otherlv_2= '(' otherlv_3= ')' )
                    // InternalKerML.g:15189:5: otherlv_2= '(' otherlv_3= ')'
                    {
                    otherlv_2=(Token)match(input,95,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getNullExpressionAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    otherlv_3=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getNullExpressionAccess().getRightParenthesisKeyword_1_1_1());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullExpression"


    // $ANTLR start "entryRuleLiteralExpression"
    // InternalKerML.g:15203:1: entryRuleLiteralExpression returns [EObject current=null] : iv_ruleLiteralExpression= ruleLiteralExpression EOF ;
    public final EObject entryRuleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralExpression = null;


        try {
            // InternalKerML.g:15203:58: (iv_ruleLiteralExpression= ruleLiteralExpression EOF )
            // InternalKerML.g:15204:2: iv_ruleLiteralExpression= ruleLiteralExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralExpression=ruleLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralExpression"


    // $ANTLR start "ruleLiteralExpression"
    // InternalKerML.g:15210:1: ruleLiteralExpression returns [EObject current=null] : (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity ) ;
    public final EObject ruleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralBoolean_0 = null;

        EObject this_LiteralString_1 = null;

        EObject this_LiteralInteger_2 = null;

        EObject this_LiteralReal_3 = null;

        EObject this_LiteralInfinity_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:15216:2: ( (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity ) )
            // InternalKerML.g:15217:2: (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity )
            {
            // InternalKerML.g:15217:2: (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity )
            int alt267=5;
            switch ( input.LA(1) ) {
            case 109:
            case 110:
                {
                alt267=1;
                }
                break;
            case RULE_STRING_VALUE:
                {
                alt267=2;
                }
                break;
            case RULE_DECIMAL_VALUE:
                {
                int LA267_3 = input.LA(2);

                if ( (LA267_3==EOF||(LA267_3>=13 && LA267_3<=14)||(LA267_3>=16 && LA267_3<=18)||(LA267_3>=21 && LA267_3<=22)||LA267_3==33||(LA267_3>=35 && LA267_3<=36)||LA267_3==67||(LA267_3>=88 && LA267_3<=89)||LA267_3==96||LA267_3==116||(LA267_3>=118 && LA267_3<=119)||(LA267_3>=121 && LA267_3<=134)||(LA267_3>=137 && LA267_3<=143)||(LA267_3>=145 && LA267_3<=146)) ) {
                    alt267=3;
                }
                else if ( (LA267_3==113) ) {
                    int LA267_7 = input.LA(3);

                    if ( ((LA267_7>=RULE_ID && LA267_7<=RULE_UNRESTRICTED_NAME)||LA267_7==17) ) {
                        alt267=3;
                    }
                    else if ( ((LA267_7>=RULE_DECIMAL_VALUE && LA267_7<=RULE_EXP_VALUE)) ) {
                        alt267=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 267, 7, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 267, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_EXP_VALUE:
            case 113:
                {
                alt267=4;
                }
                break;
            case 33:
                {
                alt267=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }

            switch (alt267) {
                case 1 :
                    // InternalKerML.g:15218:3: this_LiteralBoolean_0= ruleLiteralBoolean
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralBooleanParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralBoolean_0=ruleLiteralBoolean();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralBoolean_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:15227:3: this_LiteralString_1= ruleLiteralString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralString_1=ruleLiteralString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralString_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:15236:3: this_LiteralInteger_2= ruleLiteralInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralIntegerParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralInteger_2=ruleLiteralInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralInteger_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:15245:3: this_LiteralReal_3= ruleLiteralReal
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralRealParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralReal_3=ruleLiteralReal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralReal_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:15254:3: this_LiteralInfinity_4= ruleLiteralInfinity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralInfinityParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralInfinity_4=ruleLiteralInfinity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralInfinity_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralExpression"


    // $ANTLR start "entryRuleLiteralBoolean"
    // InternalKerML.g:15266:1: entryRuleLiteralBoolean returns [EObject current=null] : iv_ruleLiteralBoolean= ruleLiteralBoolean EOF ;
    public final EObject entryRuleLiteralBoolean() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralBoolean = null;


        try {
            // InternalKerML.g:15266:55: (iv_ruleLiteralBoolean= ruleLiteralBoolean EOF )
            // InternalKerML.g:15267:2: iv_ruleLiteralBoolean= ruleLiteralBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralBoolean=ruleLiteralBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralBoolean; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralBoolean"


    // $ANTLR start "ruleLiteralBoolean"
    // InternalKerML.g:15273:1: ruleLiteralBoolean returns [EObject current=null] : ( (lv_value_0_0= ruleBooleanValue ) ) ;
    public final EObject ruleLiteralBoolean() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:15279:2: ( ( (lv_value_0_0= ruleBooleanValue ) ) )
            // InternalKerML.g:15280:2: ( (lv_value_0_0= ruleBooleanValue ) )
            {
            // InternalKerML.g:15280:2: ( (lv_value_0_0= ruleBooleanValue ) )
            // InternalKerML.g:15281:3: (lv_value_0_0= ruleBooleanValue )
            {
            // InternalKerML.g:15281:3: (lv_value_0_0= ruleBooleanValue )
            // InternalKerML.g:15282:4: lv_value_0_0= ruleBooleanValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLiteralBooleanAccess().getValueBooleanValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLiteralBooleanRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.BooleanValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralBoolean"


    // $ANTLR start "entryRuleBooleanValue"
    // InternalKerML.g:15302:1: entryRuleBooleanValue returns [String current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final String entryRuleBooleanValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBooleanValue = null;


        try {
            // InternalKerML.g:15302:52: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // InternalKerML.g:15303:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // InternalKerML.g:15309:1: ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'true' | kw= 'false' ) ;
    public final AntlrDatatypeRuleToken ruleBooleanValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:15315:2: ( (kw= 'true' | kw= 'false' ) )
            // InternalKerML.g:15316:2: (kw= 'true' | kw= 'false' )
            {
            // InternalKerML.g:15316:2: (kw= 'true' | kw= 'false' )
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==109) ) {
                alt268=1;
            }
            else if ( (LA268_0==110) ) {
                alt268=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 268, 0, input);

                throw nvae;
            }
            switch (alt268) {
                case 1 :
                    // InternalKerML.g:15317:3: kw= 'true'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:15323:3: kw= 'false'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleLiteralString"
    // InternalKerML.g:15332:1: entryRuleLiteralString returns [EObject current=null] : iv_ruleLiteralString= ruleLiteralString EOF ;
    public final EObject entryRuleLiteralString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralString = null;


        try {
            // InternalKerML.g:15332:54: (iv_ruleLiteralString= ruleLiteralString EOF )
            // InternalKerML.g:15333:2: iv_ruleLiteralString= ruleLiteralString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralString=ruleLiteralString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralString"


    // $ANTLR start "ruleLiteralString"
    // InternalKerML.g:15339:1: ruleLiteralString returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING_VALUE ) ) ;
    public final EObject ruleLiteralString() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalKerML.g:15345:2: ( ( (lv_value_0_0= RULE_STRING_VALUE ) ) )
            // InternalKerML.g:15346:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            {
            // InternalKerML.g:15346:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            // InternalKerML.g:15347:3: (lv_value_0_0= RULE_STRING_VALUE )
            {
            // InternalKerML.g:15347:3: (lv_value_0_0= RULE_STRING_VALUE )
            // InternalKerML.g:15348:4: lv_value_0_0= RULE_STRING_VALUE
            {
            lv_value_0_0=(Token)match(input,RULE_STRING_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getLiteralStringAccess().getValueSTRING_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLiteralStringRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.STRING_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralString"


    // $ANTLR start "entryRuleLiteralInteger"
    // InternalKerML.g:15367:1: entryRuleLiteralInteger returns [EObject current=null] : iv_ruleLiteralInteger= ruleLiteralInteger EOF ;
    public final EObject entryRuleLiteralInteger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralInteger = null;


        try {
            // InternalKerML.g:15367:55: (iv_ruleLiteralInteger= ruleLiteralInteger EOF )
            // InternalKerML.g:15368:2: iv_ruleLiteralInteger= ruleLiteralInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralInteger=ruleLiteralInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralInteger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralInteger"


    // $ANTLR start "ruleLiteralInteger"
    // InternalKerML.g:15374:1: ruleLiteralInteger returns [EObject current=null] : ( (lv_value_0_0= RULE_DECIMAL_VALUE ) ) ;
    public final EObject ruleLiteralInteger() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalKerML.g:15380:2: ( ( (lv_value_0_0= RULE_DECIMAL_VALUE ) ) )
            // InternalKerML.g:15381:2: ( (lv_value_0_0= RULE_DECIMAL_VALUE ) )
            {
            // InternalKerML.g:15381:2: ( (lv_value_0_0= RULE_DECIMAL_VALUE ) )
            // InternalKerML.g:15382:3: (lv_value_0_0= RULE_DECIMAL_VALUE )
            {
            // InternalKerML.g:15382:3: (lv_value_0_0= RULE_DECIMAL_VALUE )
            // InternalKerML.g:15383:4: lv_value_0_0= RULE_DECIMAL_VALUE
            {
            lv_value_0_0=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getLiteralIntegerAccess().getValueDECIMAL_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLiteralIntegerRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.DECIMAL_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralInteger"


    // $ANTLR start "entryRuleLiteralReal"
    // InternalKerML.g:15402:1: entryRuleLiteralReal returns [EObject current=null] : iv_ruleLiteralReal= ruleLiteralReal EOF ;
    public final EObject entryRuleLiteralReal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralReal = null;


        try {
            // InternalKerML.g:15402:52: (iv_ruleLiteralReal= ruleLiteralReal EOF )
            // InternalKerML.g:15403:2: iv_ruleLiteralReal= ruleLiteralReal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRealRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralReal=ruleLiteralReal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralReal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralReal"


    // $ANTLR start "ruleLiteralReal"
    // InternalKerML.g:15409:1: ruleLiteralReal returns [EObject current=null] : ( (lv_value_0_0= ruleRealValue ) ) ;
    public final EObject ruleLiteralReal() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:15415:2: ( ( (lv_value_0_0= ruleRealValue ) ) )
            // InternalKerML.g:15416:2: ( (lv_value_0_0= ruleRealValue ) )
            {
            // InternalKerML.g:15416:2: ( (lv_value_0_0= ruleRealValue ) )
            // InternalKerML.g:15417:3: (lv_value_0_0= ruleRealValue )
            {
            // InternalKerML.g:15417:3: (lv_value_0_0= ruleRealValue )
            // InternalKerML.g:15418:4: lv_value_0_0= ruleRealValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLiteralRealAccess().getValueRealValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLiteralRealRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.RealValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralReal"


    // $ANTLR start "entryRuleRealValue"
    // InternalKerML.g:15438:1: entryRuleRealValue returns [String current=null] : iv_ruleRealValue= ruleRealValue EOF ;
    public final String entryRuleRealValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealValue = null;


        try {
            // InternalKerML.g:15438:49: (iv_ruleRealValue= ruleRealValue EOF )
            // InternalKerML.g:15439:2: iv_ruleRealValue= ruleRealValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealValue=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealValue"


    // $ANTLR start "ruleRealValue"
    // InternalKerML.g:15445:1: ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) ;
    public final AntlrDatatypeRuleToken ruleRealValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMAL_VALUE_0=null;
        Token kw=null;
        Token this_DECIMAL_VALUE_2=null;
        Token this_EXP_VALUE_3=null;
        Token this_EXP_VALUE_4=null;


        	enterRule();

        try {
            // InternalKerML.g:15451:2: ( ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) )
            // InternalKerML.g:15452:2: ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
            {
            // InternalKerML.g:15452:2: ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==RULE_DECIMAL_VALUE||LA271_0==113) ) {
                alt271=1;
            }
            else if ( (LA271_0==RULE_EXP_VALUE) ) {
                alt271=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 271, 0, input);

                throw nvae;
            }
            switch (alt271) {
                case 1 :
                    // InternalKerML.g:15453:3: ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    {
                    // InternalKerML.g:15453:3: ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    // InternalKerML.g:15454:4: (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
                    {
                    // InternalKerML.g:15454:4: (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )?
                    int alt269=2;
                    int LA269_0 = input.LA(1);

                    if ( (LA269_0==RULE_DECIMAL_VALUE) ) {
                        alt269=1;
                    }
                    switch (alt269) {
                        case 1 :
                            // InternalKerML.g:15455:5: this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE
                            {
                            this_DECIMAL_VALUE_0=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_149); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_VALUE_0);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_VALUE_0, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,113,FOLLOW_180); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealValueAccess().getFullStopKeyword_0_1());
                      			
                    }
                    // InternalKerML.g:15468:4: (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
                    int alt270=2;
                    int LA270_0 = input.LA(1);

                    if ( (LA270_0==RULE_DECIMAL_VALUE) ) {
                        alt270=1;
                    }
                    else if ( (LA270_0==RULE_EXP_VALUE) ) {
                        alt270=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 270, 0, input);

                        throw nvae;
                    }
                    switch (alt270) {
                        case 1 :
                            // InternalKerML.g:15469:5: this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE
                            {
                            this_DECIMAL_VALUE_2=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_VALUE_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_VALUE_2, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:15477:5: this_EXP_VALUE_3= RULE_EXP_VALUE
                            {
                            this_EXP_VALUE_3=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXP_VALUE_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXP_VALUE_3, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:15487:3: this_EXP_VALUE_4= RULE_EXP_VALUE
                    {
                    this_EXP_VALUE_4=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXP_VALUE_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_EXP_VALUE_4, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealValue"


    // $ANTLR start "entryRuleLiteralInfinity"
    // InternalKerML.g:15498:1: entryRuleLiteralInfinity returns [EObject current=null] : iv_ruleLiteralInfinity= ruleLiteralInfinity EOF ;
    public final EObject entryRuleLiteralInfinity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralInfinity = null;


        try {
            // InternalKerML.g:15498:56: (iv_ruleLiteralInfinity= ruleLiteralInfinity EOF )
            // InternalKerML.g:15499:2: iv_ruleLiteralInfinity= ruleLiteralInfinity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralInfinityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralInfinity=ruleLiteralInfinity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralInfinity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralInfinity"


    // $ANTLR start "ruleLiteralInfinity"
    // InternalKerML.g:15505:1: ruleLiteralInfinity returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleLiteralInfinity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalKerML.g:15511:2: ( ( () otherlv_1= '*' ) )
            // InternalKerML.g:15512:2: ( () otherlv_1= '*' )
            {
            // InternalKerML.g:15512:2: ( () otherlv_1= '*' )
            // InternalKerML.g:15513:3: () otherlv_1= '*'
            {
            // InternalKerML.g:15513:3: ()
            // InternalKerML.g:15514:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralInfinityAccess().getLiteralInfinityAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralInfinityAccess().getAsteriskKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralInfinity"


    // $ANTLR start "entryRuleName"
    // InternalKerML.g:15528:1: entryRuleName returns [String current=null] : iv_ruleName= ruleName EOF ;
    public final String entryRuleName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleName = null;


        try {
            // InternalKerML.g:15528:44: (iv_ruleName= ruleName EOF )
            // InternalKerML.g:15529:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalKerML.g:15535:1: ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) ;
    public final AntlrDatatypeRuleToken ruleName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_UNRESTRICTED_NAME_1=null;


        	enterRule();

        try {
            // InternalKerML.g:15541:2: ( (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) )
            // InternalKerML.g:15542:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
            {
            // InternalKerML.g:15542:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==RULE_ID) ) {
                alt272=1;
            }
            else if ( (LA272_0==RULE_UNRESTRICTED_NAME) ) {
                alt272=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;
            }
            switch (alt272) {
                case 1 :
                    // InternalKerML.g:15543:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:15551:3: this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME
                    {
                    this_UNRESTRICTED_NAME_1=(Token)match(input,RULE_UNRESTRICTED_NAME,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UNRESTRICTED_NAME_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_UNRESTRICTED_NAME_1, grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleQualification"
    // InternalKerML.g:15562:1: entryRuleQualification returns [String current=null] : iv_ruleQualification= ruleQualification EOF ;
    public final String entryRuleQualification() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualification = null;


        try {
            // InternalKerML.g:15562:53: (iv_ruleQualification= ruleQualification EOF )
            // InternalKerML.g:15563:2: iv_ruleQualification= ruleQualification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualification=ruleQualification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualification.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualification"


    // $ANTLR start "ruleQualification"
    // InternalKerML.g:15569:1: ruleQualification returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName kw= '::' )+ ;
    public final AntlrDatatypeRuleToken ruleQualification() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Name_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:15575:2: ( (this_Name_0= ruleName kw= '::' )+ )
            // InternalKerML.g:15576:2: (this_Name_0= ruleName kw= '::' )+
            {
            // InternalKerML.g:15576:2: (this_Name_0= ruleName kw= '::' )+
            int cnt273=0;
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( (LA273_0==RULE_ID) ) {
                    int LA273_1 = input.LA(2);

                    if ( (LA273_1==34) ) {
                        int LA273_4 = input.LA(3);

                        if ( (LA273_4==EOF||(LA273_4>=RULE_ID && LA273_4<=RULE_UNRESTRICTED_NAME)||LA273_4==33) ) {
                            alt273=1;
                        }


                    }


                }
                else if ( (LA273_0==RULE_UNRESTRICTED_NAME) ) {
                    int LA273_2 = input.LA(2);

                    if ( (LA273_2==34) ) {
                        int LA273_4 = input.LA(3);

                        if ( (LA273_4==EOF||(LA273_4>=RULE_ID && LA273_4<=RULE_UNRESTRICTED_NAME)||LA273_4==33) ) {
                            alt273=1;
                        }


                    }


                }


                switch (alt273) {
            	case 1 :
            	    // InternalKerML.g:15577:3: this_Name_0= ruleName kw= '::'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualificationAccess().getNameParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_181);
            	    this_Name_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_Name_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualificationAccess().getColonColonKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt273 >= 1 ) break loop273;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(273, input);
                        throw eee;
                }
                cnt273++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualification"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalKerML.g:15596:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalKerML.g:15596:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalKerML.g:15597:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalKerML.g:15603:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Qualification_0 = null;

        AntlrDatatypeRuleToken this_Name_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:15609:2: ( ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName ) )
            // InternalKerML.g:15610:2: ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName )
            {
            // InternalKerML.g:15610:2: ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName )
            // InternalKerML.g:15611:3: (this_Qualification_0= ruleQualification )? this_Name_1= ruleName
            {
            // InternalKerML.g:15611:3: (this_Qualification_0= ruleQualification )?
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==RULE_ID) ) {
                int LA274_1 = input.LA(2);

                if ( (LA274_1==34) ) {
                    alt274=1;
                }
            }
            else if ( (LA274_0==RULE_UNRESTRICTED_NAME) ) {
                int LA274_2 = input.LA(2);

                if ( (LA274_2==34) ) {
                    alt274=1;
                }
            }
            switch (alt274) {
                case 1 :
                    // InternalKerML.g:15612:4: this_Qualification_0= ruleQualification
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getQualificationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_Qualification_0=ruleQualification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Qualification_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Name_1=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Name_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "ruleFilterPackageMemberVisibility"
    // InternalKerML.g:15637:1: ruleFilterPackageMemberVisibility returns [Enumerator current=null] : (enumLiteral_0= '[' ) ;
    public final Enumerator ruleFilterPackageMemberVisibility() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalKerML.g:15643:2: ( (enumLiteral_0= '[' ) )
            // InternalKerML.g:15644:2: (enumLiteral_0= '[' )
            {
            // InternalKerML.g:15644:2: (enumLiteral_0= '[' )
            // InternalKerML.g:15645:3: enumLiteral_0= '['
            {
            enumLiteral_0=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageMemberVisibility"


    // $ANTLR start "ruleVisibilityIndicator"
    // InternalKerML.g:15654:1: ruleVisibilityIndicator returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) ) ;
    public final Enumerator ruleVisibilityIndicator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKerML.g:15660:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) ) )
            // InternalKerML.g:15661:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) )
            {
            // InternalKerML.g:15661:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) )
            int alt275=3;
            switch ( input.LA(1) ) {
            case 148:
                {
                alt275=1;
                }
                break;
            case 149:
                {
                alt275=2;
                }
                break;
            case 150:
                {
                alt275=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;
            }

            switch (alt275) {
                case 1 :
                    // InternalKerML.g:15662:3: (enumLiteral_0= 'public' )
                    {
                    // InternalKerML.g:15662:3: (enumLiteral_0= 'public' )
                    // InternalKerML.g:15663:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,148,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:15670:3: (enumLiteral_1= 'private' )
                    {
                    // InternalKerML.g:15670:3: (enumLiteral_1= 'private' )
                    // InternalKerML.g:15671:4: enumLiteral_1= 'private'
                    {
                    enumLiteral_1=(Token)match(input,149,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:15678:3: (enumLiteral_2= 'protected' )
                    {
                    // InternalKerML.g:15678:3: (enumLiteral_2= 'protected' )
                    // InternalKerML.g:15679:4: enumLiteral_2= 'protected'
                    {
                    enumLiteral_2=(Token)match(input,150,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilityIndicator"


    // $ANTLR start "ruleFeatureDirection"
    // InternalKerML.g:15689:1: ruleFeatureDirection returns [Enumerator current=null] : ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) ;
    public final Enumerator ruleFeatureDirection() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKerML.g:15695:2: ( ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) )
            // InternalKerML.g:15696:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
            {
            // InternalKerML.g:15696:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
            int alt276=3;
            switch ( input.LA(1) ) {
            case 151:
                {
                alt276=1;
                }
                break;
            case 152:
                {
                alt276=2;
                }
                break;
            case 153:
                {
                alt276=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 276, 0, input);

                throw nvae;
            }

            switch (alt276) {
                case 1 :
                    // InternalKerML.g:15697:3: (enumLiteral_0= 'in' )
                    {
                    // InternalKerML.g:15697:3: (enumLiteral_0= 'in' )
                    // InternalKerML.g:15698:4: enumLiteral_0= 'in'
                    {
                    enumLiteral_0=(Token)match(input,151,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:15705:3: (enumLiteral_1= 'out' )
                    {
                    // InternalKerML.g:15705:3: (enumLiteral_1= 'out' )
                    // InternalKerML.g:15706:4: enumLiteral_1= 'out'
                    {
                    enumLiteral_1=(Token)match(input,152,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:15713:3: (enumLiteral_2= 'inout' )
                    {
                    // InternalKerML.g:15713:3: (enumLiteral_2= 'inout' )
                    // InternalKerML.g:15714:4: enumLiteral_2= 'inout'
                    {
                    enumLiteral_2=(Token)match(input,153,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDirection"

    // $ANTLR start synpred1_InternalKerML
    public final void synpred1_InternalKerML_fragment() throws RecognitionException {   
        // InternalKerML.g:5389:5: ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )
        // InternalKerML.g:
        {
        if ( input.LA(1)==43||(input.LA(1)>=72 && input.LA(1)<=78) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred1_InternalKerML

    // $ANTLR start synpred2_InternalKerML
    public final void synpred2_InternalKerML_fragment() throws RecognitionException {   
        // InternalKerML.g:10234:5: ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )
        // InternalKerML.g:
        {
        if ( input.LA(1)==43||(input.LA(1)>=72 && input.LA(1)<=78) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred2_InternalKerML

    // Delegated rules

    public final boolean synpred1_InternalKerML() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalKerML_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKerML() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKerML_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA21 dfa21 = new DFA21(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA143 dfa143 = new DFA143(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA159 dfa159 = new DFA159(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA209 dfa209 = new DFA209(this);
    protected DFA214 dfa214 = new DFA214(this);
    protected DFA215 dfa215 = new DFA215(this);
    protected DFA216 dfa216 = new DFA216(this);
    protected DFA239 dfa239 = new DFA239(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA263 dfa263 = new DFA263(this);
    static final String dfa_1s = "\14\uffff";
    static final String dfa_2s = "\2\10\1\uffff\1\10\1\uffff\7\10";
    static final String dfa_3s = "\1\u0099\1\11\1\uffff\1\163\1\uffff\2\163\2\11\2\163\1\11";
    static final String dfa_4s = "\2\uffff\1\1\1\uffff\1\2\7\uffff";
    static final String dfa_5s = "\14\uffff}>";
    static final String[] dfa_6s = {
            "\2\4\3\uffff\1\4\1\uffff\1\2\3\uffff\1\2\10\uffff\1\2\3\uffff\1\4\4\uffff\3\2\1\uffff\1\3\1\2\1\4\1\uffff\2\4\1\2\4\uffff\7\2\6\4\1\uffff\1\2\3\uffff\11\4\5\2\3\uffff\1\2\1\4\1\uffff\4\2\1\4\2\uffff\2\4\2\uffff\1\2\1\4\1\2\1\uffff\1\4\1\2\2\4\2\uffff\1\2\1\4\1\uffff\1\2\1\1\43\uffff\3\4",
            "\1\5\1\6",
            "",
            "\2\4\3\uffff\1\4\22\uffff\1\4\11\uffff\1\2\1\4\1\uffff\2\4\12\uffff\1\2\1\uffff\6\4\5\uffff\11\4\11\uffff\1\4\1\uffff\4\2\1\4\2\uffff\2\4\2\uffff\1\2\1\4\1\2\1\uffff\1\4\1\2\2\4\2\uffff\1\2\1\4\1\uffff\1\2\1\7",
            "",
            "\2\4\3\uffff\1\4\1\uffff\1\2\2\4\1\uffff\1\2\10\uffff\1\2\3\uffff\1\4\1\uffff\1\10\4\uffff\1\2\2\uffff\1\2\1\4\1\uffff\2\4\12\uffff\1\2\6\uffff\1\4\5\uffff\11\4\5\uffff\3\4\1\uffff\1\4\1\uffff\4\2\1\4\2\uffff\2\4\2\uffff\1\2\1\4\1\2\1\uffff\1\4\1\2\2\4\2\uffff\1\2\1\4\1\uffff\1\2\1\1",
            "\2\4\3\uffff\1\4\1\uffff\1\2\2\4\1\uffff\1\2\10\uffff\1\2\3\uffff\1\4\1\uffff\1\10\4\uffff\1\2\2\uffff\1\2\1\4\1\uffff\2\4\12\uffff\1\2\6\uffff\1\4\5\uffff\11\4\5\uffff\3\4\1\uffff\1\4\1\uffff\4\2\1\4\2\uffff\2\4\2\uffff\1\2\1\4\1\2\1\uffff\1\4\1\2\2\4\2\uffff\1\2\1\4\1\uffff\1\2\1\1",
            "\1\11\1\12",
            "\1\5\1\6",
            "\2\4\3\uffff\1\4\2\uffff\2\4\16\uffff\1\4\1\uffff\1\13\7\uffff\1\2\1\4\1\uffff\2\4\12\uffff\1\2\6\uffff\1\4\5\uffff\11\4\5\uffff\3\4\1\uffff\1\4\1\uffff\4\2\1\4\2\uffff\2\4\2\uffff\1\2\1\4\1\2\1\uffff\1\4\1\2\2\4\2\uffff\1\2\1\4\1\uffff\1\2\1\7",
            "\2\4\3\uffff\1\4\2\uffff\2\4\16\uffff\1\4\1\uffff\1\13\7\uffff\1\2\1\4\1\uffff\2\4\12\uffff\1\2\6\uffff\1\4\5\uffff\11\4\5\uffff\3\4\1\uffff\1\4\1\uffff\4\2\1\4\2\uffff\2\4\2\uffff\1\2\1\4\1\2\1\uffff\1\4\1\2\2\4\2\uffff\1\2\1\4\1\uffff\1\2\1\7",
            "\1\11\1\12"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "794:2: (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement )";
        }
    }
    static final String dfa_7s = "\17\uffff";
    static final String dfa_8s = "\4\4\1\uffff\2\10\1\uffff\7\10";
    static final String dfa_9s = "\4\u0099\1\uffff\1\11\1\163\1\uffff\2\163\2\11\2\163\1\11";
    static final String dfa_10s = "\4\uffff\1\1\2\uffff\1\2\7\uffff";
    static final String dfa_11s = "\17\uffff}>";
    static final String[] dfa_12s = {
            "\1\4\3\uffff\2\7\3\uffff\1\7\1\uffff\1\4\3\uffff\1\4\3\uffff\1\4\1\uffff\4\4\3\uffff\1\7\4\uffff\3\4\1\uffff\1\6\1\4\1\7\1\uffff\2\7\1\4\4\uffff\7\4\6\7\1\uffff\1\4\3\uffff\11\7\5\4\3\uffff\1\4\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\5\2\4\36\uffff\1\1\1\2\1\3\3\7",
            "\1\4\3\uffff\2\7\3\uffff\1\7\1\uffff\1\4\3\uffff\1\4\3\uffff\1\4\1\uffff\4\4\3\uffff\1\7\4\uffff\3\4\1\uffff\1\6\1\4\1\7\1\uffff\2\7\1\4\4\uffff\7\4\6\7\1\uffff\1\4\3\uffff\11\7\5\4\3\uffff\1\4\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\5\2\4\41\uffff\3\7",
            "\1\4\3\uffff\2\7\3\uffff\1\7\1\uffff\1\4\3\uffff\1\4\3\uffff\1\4\1\uffff\4\4\3\uffff\1\7\4\uffff\3\4\1\uffff\1\6\1\4\1\7\1\uffff\2\7\1\4\4\uffff\7\4\6\7\1\uffff\1\4\3\uffff\11\7\5\4\3\uffff\1\4\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\5\2\4\41\uffff\3\7",
            "\1\4\3\uffff\2\7\3\uffff\1\7\1\uffff\1\4\3\uffff\1\4\3\uffff\1\4\1\uffff\4\4\3\uffff\1\7\4\uffff\3\4\1\uffff\1\6\1\4\1\7\1\uffff\2\7\1\4\4\uffff\7\4\6\7\1\uffff\1\4\3\uffff\11\7\5\4\3\uffff\1\4\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\5\2\4\41\uffff\3\7",
            "",
            "\1\10\1\11",
            "\2\7\3\uffff\1\7\22\uffff\1\7\11\uffff\1\4\1\7\1\uffff\2\7\12\uffff\1\4\1\uffff\6\7\5\uffff\11\7\11\uffff\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\12",
            "",
            "\2\7\3\uffff\1\7\1\uffff\1\4\2\7\1\uffff\1\4\10\uffff\1\4\3\uffff\1\7\1\uffff\1\13\4\uffff\1\4\2\uffff\1\4\1\7\1\uffff\2\7\12\uffff\1\4\6\uffff\1\7\5\uffff\11\7\5\uffff\3\7\1\uffff\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\5",
            "\2\7\3\uffff\1\7\1\uffff\1\4\2\7\1\uffff\1\4\10\uffff\1\4\3\uffff\1\7\1\uffff\1\13\4\uffff\1\4\2\uffff\1\4\1\7\1\uffff\2\7\12\uffff\1\4\6\uffff\1\7\5\uffff\11\7\5\uffff\3\7\1\uffff\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\5",
            "\1\14\1\15",
            "\1\10\1\11",
            "\2\7\3\uffff\1\7\2\uffff\2\7\16\uffff\1\7\1\uffff\1\16\7\uffff\1\4\1\7\1\uffff\2\7\12\uffff\1\4\6\uffff\1\7\5\uffff\11\7\5\uffff\3\7\1\uffff\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\12",
            "\2\7\3\uffff\1\7\2\uffff\2\7\16\uffff\1\7\1\uffff\1\16\7\uffff\1\4\1\7\1\uffff\2\7\12\uffff\1\4\6\uffff\1\7\5\uffff\11\7\5\uffff\3\7\1\uffff\1\7\1\uffff\4\4\1\7\2\uffff\2\7\2\uffff\1\4\1\7\1\4\1\uffff\1\7\1\4\2\7\2\uffff\1\4\1\7\1\uffff\1\4\1\12",
            "\1\14\1\15"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1472:2: (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember )";
        }
    }
    static final String dfa_13s = "\11\uffff";
    static final String dfa_14s = "\1\10\3\20\1\10\2\uffff\1\43\1\20";
    static final String dfa_15s = "\1\41\3\130\1\43\2\uffff\1\43\1\130";
    static final String dfa_16s = "\5\uffff\1\1\1\2\2\uffff";
    static final String dfa_17s = "\11\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\1\2\27\uffff\1\3",
            "\2\5\20\uffff\1\4\65\uffff\1\6",
            "\2\5\20\uffff\1\4\65\uffff\1\6",
            "\2\5\20\uffff\1\7\65\uffff\1\6",
            "\1\1\1\2\27\uffff\1\3\1\uffff\1\10",
            "",
            "",
            "\1\10",
            "\2\5\106\uffff\1\6"
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1757:3: (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] )";
        }
    }
    static final String dfa_19s = "\57\uffff";
    static final String dfa_20s = "\1\17\1\10\6\uffff\1\52\6\uffff\1\10\4\uffff\1\10\11\uffff\2\17\1\10\2\uffff\1\10\2\65\1\10\2\42\2\16\2\10\2\65";
    static final String dfa_21s = "\1\163\1\11\6\uffff\1\163\6\uffff\1\134\4\uffff\1\123\11\uffff\2\163\1\11\2\uffff\1\11\2\123\1\11\2\163\2\16\1\11\3\123";
    static final String dfa_22s = "\2\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\17\1\20\1\21\1\22\1\uffff\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\3\uffff\1\16\1\15\14\uffff";
    static final String dfa_23s = "\57\uffff}>";
    static final String[] dfa_24s = {
            "\1\2\3\uffff\1\3\10\uffff\1\4\10\uffff\2\6\1\5\1\uffff\1\10\1\11\4\uffff\1\31\4\uffff\1\24\1\25\2\26\1\31\1\12\1\30\7\uffff\1\32\14\uffff\1\32\1\35\1\27\1\33\1\34\3\uffff\1\7\2\uffff\1\16\1\13\1\14\1\17\7\uffff\1\21\1\uffff\1\22\2\uffff\1\23\4\uffff\1\20\2\uffff\1\15\1\1",
            "\1\36\1\37",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\11\16\uffff\1\12\40\uffff\1\16\1\13\1\14\1\17\7\uffff\1\21\1\uffff\1\22\2\uffff\1\23\4\uffff\1\20\2\uffff\1\15\1\40",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\42\3\uffff\1\42\2\uffff\2\42\16\uffff\1\42\12\uffff\10\42\45\uffff\1\42\3\uffff\1\41",
            "",
            "",
            "",
            "",
            "\1\44\1\45\3\uffff\1\43\47\uffff\1\25\4\uffff\1\30\26\uffff\1\27\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\2\3\uffff\1\3\10\uffff\1\4\5\uffff\1\46\4\uffff\1\5\2\uffff\1\11\16\uffff\1\12\40\uffff\1\16\1\13\1\14\1\17\7\uffff\1\21\1\uffff\1\22\2\uffff\1\23\4\uffff\1\20\2\uffff\1\15\1\1",
            "\1\2\3\uffff\1\3\10\uffff\1\4\5\uffff\1\46\4\uffff\1\5\2\uffff\1\11\16\uffff\1\12\40\uffff\1\16\1\13\1\14\1\17\7\uffff\1\21\1\uffff\1\22\2\uffff\1\23\4\uffff\1\20\2\uffff\1\15\1\1",
            "\1\47\1\50",
            "",
            "",
            "\1\51\1\52",
            "\1\25\4\uffff\1\30\26\uffff\1\27\1\33\1\34",
            "\1\25\4\uffff\1\30\26\uffff\1\27\1\33\1\34",
            "\1\36\1\37",
            "\1\53\7\uffff\1\11\16\uffff\1\12\40\uffff\1\16\1\13\1\14\1\17\7\uffff\1\21\1\uffff\1\22\2\uffff\1\23\4\uffff\1\20\2\uffff\1\15\1\40",
            "\1\53\7\uffff\1\11\16\uffff\1\12\40\uffff\1\16\1\13\1\14\1\17\7\uffff\1\21\1\uffff\1\22\2\uffff\1\23\4\uffff\1\20\2\uffff\1\15\1\40",
            "\1\54",
            "\1\54",
            "\1\47\1\50",
            "\1\55\1\56\53\uffff\1\25\4\uffff\1\30\26\uffff\1\27\1\33\1\34",
            "\1\25\4\uffff\1\30\26\uffff\1\27\1\33\1\34",
            "\1\25\4\uffff\1\30\26\uffff\1\27\1\33\1\34"
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "2098:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing )";
        }
    }
    static final String dfa_25s = "\31\uffff";
    static final String dfa_26s = "\13\10\7\uffff\1\10\1\uffff\2\10\2\uffff\1\10";
    static final String dfa_27s = "\1\u0099\11\163\1\11\7\uffff\1\160\1\uffff\2\163\2\uffff\1\11";
    static final String dfa_28s = "\13\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\11\2\uffff\1\12\1\10\1\uffff";
    static final String dfa_29s = "\31\uffff}>";
    static final String[] dfa_30s = {
            "\2\13\3\uffff\1\13\22\uffff\1\13\10\uffff\1\4\1\uffff\1\13\1\uffff\2\13\14\uffff\1\5\1\6\1\7\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12\43\uffff\1\1\1\2\1\3",
            "\2\13\3\uffff\1\13\22\uffff\1\13\10\uffff\1\4\1\uffff\1\13\1\uffff\2\13\14\uffff\1\5\1\6\1\7\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\10\uffff\1\4\1\uffff\1\13\1\uffff\2\13\14\uffff\1\5\1\6\1\7\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\10\uffff\1\4\1\uffff\1\13\1\uffff\2\13\14\uffff\1\5\1\6\1\7\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\12\uffff\1\13\1\uffff\2\13\14\uffff\1\5\1\6\1\7\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\12\uffff\1\13\1\uffff\2\13\16\uffff\1\7\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\12\uffff\1\13\1\uffff\2\13\16\uffff\1\7\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\12\uffff\1\13\1\uffff\2\13\17\uffff\1\10\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\12\uffff\1\13\1\uffff\2\13\20\uffff\1\11\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\22\uffff\1\13\12\uffff\1\13\1\uffff\2\13\21\uffff\1\13\5\uffff\11\13\11\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\1\24\1\25",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\27\3\uffff\1\27\2\uffff\2\27\16\uffff\1\27\12\uffff\1\27\1\uffff\2\27\27\uffff\11\27\11\uffff\1\27\12\uffff\1\27\14\uffff\1\26",
            "",
            "\2\13\3\uffff\1\13\2\uffff\2\13\16\uffff\1\13\1\uffff\1\30\10\uffff\1\13\1\uffff\2\13\21\uffff\1\13\5\uffff\11\13\5\uffff\3\13\1\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "\2\13\3\uffff\1\13\2\uffff\2\13\16\uffff\1\13\1\uffff\1\30\10\uffff\1\13\1\uffff\2\13\21\uffff\1\13\5\uffff\11\13\5\uffff\3\13\1\uffff\1\13\5\uffff\1\20\2\uffff\1\21\1\22\3\uffff\1\14\2\uffff\1\15\1\uffff\1\16\1\17\3\uffff\1\23\2\uffff\1\12",
            "",
            "",
            "\1\24\1\25"
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "2359:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )";
        }
    }
    static final String dfa_31s = "\22\uffff";
    static final String dfa_32s = "\1\4\1\uffff\3\4\1\uffff\2\10\3\uffff\7\10";
    static final String dfa_33s = "\1\u0099\1\uffff\3\u0099\1\uffff\1\11\1\163\3\uffff\2\163\2\11\2\163\1\11";
    static final String dfa_34s = "\1\uffff\1\5\3\uffff\1\1\2\uffff\1\2\1\3\1\4\7\uffff";
    static final String dfa_35s = "\22\uffff}>";
    static final String[] dfa_36s = {
            "\1\5\3\uffff\2\10\3\uffff\1\10\1\uffff\1\5\2\uffff\1\1\1\5\3\uffff\1\5\1\uffff\4\5\1\11\1\uffff\1\12\1\10\4\uffff\3\5\1\uffff\1\7\1\5\1\10\1\uffff\2\10\1\5\3\uffff\1\10\7\5\6\10\1\uffff\1\5\3\uffff\11\10\5\5\3\uffff\1\5\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\6\2\5\36\uffff\1\2\1\3\1\4\3\10",
            "",
            "\1\5\3\uffff\2\10\3\uffff\1\10\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\11\1\uffff\1\12\1\10\4\uffff\3\5\1\uffff\1\7\1\5\1\10\1\uffff\2\10\1\5\3\uffff\1\10\7\5\6\10\1\uffff\1\5\3\uffff\11\10\5\5\3\uffff\1\5\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\6\2\5\41\uffff\3\10",
            "\1\5\3\uffff\2\10\3\uffff\1\10\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\11\1\uffff\1\12\1\10\4\uffff\3\5\1\uffff\1\7\1\5\1\10\1\uffff\2\10\1\5\3\uffff\1\10\7\5\6\10\1\uffff\1\5\3\uffff\11\10\5\5\3\uffff\1\5\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\6\2\5\41\uffff\3\10",
            "\1\5\3\uffff\2\10\3\uffff\1\10\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\11\1\uffff\1\12\1\10\4\uffff\3\5\1\uffff\1\7\1\5\1\10\1\uffff\2\10\1\5\3\uffff\1\10\7\5\6\10\1\uffff\1\5\3\uffff\11\10\5\5\3\uffff\1\5\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\6\2\5\41\uffff\3\10",
            "",
            "\1\13\1\14",
            "\2\10\3\uffff\1\10\22\uffff\1\10\11\uffff\1\5\1\10\1\uffff\2\10\12\uffff\1\5\1\uffff\6\10\5\uffff\11\10\11\uffff\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\15",
            "",
            "",
            "",
            "\2\10\3\uffff\1\10\1\uffff\1\5\2\10\1\uffff\1\5\10\uffff\1\5\3\uffff\1\10\1\uffff\1\16\4\uffff\1\5\2\uffff\1\5\1\10\1\uffff\2\10\12\uffff\1\5\6\uffff\1\10\5\uffff\11\10\5\uffff\3\10\1\uffff\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\6",
            "\2\10\3\uffff\1\10\1\uffff\1\5\2\10\1\uffff\1\5\10\uffff\1\5\3\uffff\1\10\1\uffff\1\16\4\uffff\1\5\2\uffff\1\5\1\10\1\uffff\2\10\12\uffff\1\5\6\uffff\1\10\5\uffff\11\10\5\uffff\3\10\1\uffff\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\6",
            "\1\17\1\20",
            "\1\13\1\14",
            "\2\10\3\uffff\1\10\2\uffff\2\10\16\uffff\1\10\1\uffff\1\21\7\uffff\1\5\1\10\1\uffff\2\10\12\uffff\1\5\6\uffff\1\10\5\uffff\11\10\5\uffff\3\10\1\uffff\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\15",
            "\2\10\3\uffff\1\10\2\uffff\2\10\16\uffff\1\10\1\uffff\1\21\7\uffff\1\5\1\10\1\uffff\2\10\12\uffff\1\5\6\uffff\1\10\5\uffff\11\10\5\uffff\3\10\1\uffff\1\10\1\uffff\4\5\1\10\2\uffff\2\10\2\uffff\1\5\1\10\1\5\1\uffff\1\10\1\5\2\10\2\uffff\1\5\1\10\1\uffff\1\5\1\15",
            "\1\17\1\20"
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "()* loopback of 3424:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*";
        }
    }
    static final String dfa_37s = "\6\uffff";
    static final String dfa_38s = "\1\10\2\42\1\10\2\uffff";
    static final String dfa_39s = "\1\11\2\161\1\11\2\uffff";
    static final String dfa_40s = "\4\uffff\1\2\1\1";
    static final String dfa_41s = "\6\uffff}>";
    static final String[] dfa_42s = {
            "\1\1\1\2",
            "\1\3\10\uffff\2\5\104\uffff\1\4",
            "\1\3\10\uffff\2\5\104\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "3690:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_43s = "\1\10\2\20\1\10\2\uffff";
    static final String[] dfa_44s = {
            "\1\1\1\2",
            "\2\5\20\uffff\1\3\116\uffff\1\4",
            "\2\5\20\uffff\1\3\116\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3739:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_45s = "\1\uffff\2\4\3\uffff";
    static final String dfa_46s = "\4\uffff\1\1\1\2";
    static final String[] dfa_47s = {
            "\1\1\1\2",
            "\2\4\4\uffff\1\4\13\uffff\1\3\10\uffff\10\4\76\uffff\1\5",
            "\2\4\4\uffff\1\4\13\uffff\1\3\10\uffff\10\4\76\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_37;
            this.eof = dfa_45;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "3806:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_48s = {
            "\1\1\1\2",
            "\1\3\12\uffff\2\5\102\uffff\1\4",
            "\1\3\12\uffff\2\5\102\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "3885:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3934:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_49s = "\1\uffff\2\5\3\uffff";
    static final String dfa_50s = "\1\10\2\20\1\uffff\1\10\1\uffff";
    static final String dfa_51s = "\1\11\2\161\1\uffff\1\11\1\uffff";
    static final String dfa_52s = "\3\uffff\1\2\1\uffff\1\1";
    static final String[] dfa_53s = {
            "\1\1\1\2",
            "\2\5\20\uffff\1\4\10\uffff\10\5\76\uffff\1\3",
            "\2\5\20\uffff\1\4\10\uffff\10\5\76\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_37;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_41;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "4001:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_54s = "\1\10\2\25\1\uffff\1\10\1\uffff";
    static final String dfa_55s = "\3\uffff\1\1\1\uffff\1\2";
    static final String[] dfa_56s = {
            "\1\1\1\2",
            "\1\3\14\uffff\1\4\116\uffff\1\5",
            "\1\3\14\uffff\1\4\116\uffff\1\5",
            "",
            "\1\1\1\2",
            ""
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_54;
            this.max = dfa_51;
            this.accept = dfa_55;
            this.special = dfa_41;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "4080:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "4122:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_57s = {
            "\1\1\1\2",
            "\2\4\3\uffff\2\4\13\uffff\1\3\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\2\4\3\uffff\2\4\13\uffff\1\3\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_37;
            this.eof = dfa_45;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "4189:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_37;
            this.eof = dfa_45;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "4244:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_58s = {
            "\1\1\1\2",
            "\2\5\3\uffff\2\5\13\uffff\1\4\14\uffff\4\5\16\uffff\4\5\17\uffff\3\5\10\uffff\1\5\3\uffff\1\5\15\uffff\1\3",
            "\2\5\3\uffff\2\5\13\uffff\1\4\14\uffff\4\5\16\uffff\4\5\17\uffff\3\5\10\uffff\1\5\3\uffff\1\5\15\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_37;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_41;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "4299:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_59s = {
            "\1\1\1\2",
            "\2\5\3\uffff\2\5\13\uffff\1\3\14\uffff\4\5\16\uffff\4\5\17\uffff\3\5\10\uffff\1\5\3\uffff\1\5\15\uffff\1\4",
            "\2\5\3\uffff\2\5\13\uffff\1\3\14\uffff\4\5\16\uffff\4\5\17\uffff\3\5\10\uffff\1\5\3\uffff\1\5\15\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = dfa_37;
            this.eof = dfa_49;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "4354:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_60s = "\7\uffff";
    static final String dfa_61s = "\1\10\1\uffff\3\10\1\uffff\1\10";
    static final String dfa_62s = "\1\163\1\uffff\1\11\2\163\1\uffff\1\11";
    static final String dfa_63s = "\1\uffff\1\2\3\uffff\1\1\1\uffff";
    static final String dfa_64s = "\7\uffff}>";
    static final String[] dfa_65s = {
            "\2\1\3\uffff\1\1\22\uffff\1\1\12\uffff\1\1\1\uffff\2\1\21\uffff\1\1\5\uffff\11\1\11\uffff\1\1\5\uffff\1\1\2\uffff\2\1\3\uffff\1\1\2\uffff\1\1\1\uffff\2\1\3\uffff\1\1\2\uffff\1\2",
            "",
            "\1\3\1\4",
            "\2\5\3\uffff\1\5\2\uffff\2\1\16\uffff\1\5\1\uffff\1\6\10\uffff\1\5\1\uffff\2\5\21\uffff\1\5\5\uffff\11\5\5\uffff\3\1\1\uffff\1\5\5\uffff\1\5\2\uffff\2\5\3\uffff\1\5\2\uffff\1\5\1\uffff\2\5\3\uffff\1\5\2\uffff\1\5",
            "\2\5\3\uffff\1\5\2\uffff\2\1\16\uffff\1\5\1\uffff\1\6\10\uffff\1\5\1\uffff\2\5\21\uffff\1\5\5\uffff\11\5\5\uffff\3\1\1\uffff\1\5\5\uffff\1\5\2\uffff\2\5\3\uffff\1\5\2\uffff\1\5\1\uffff\2\5\3\uffff\1\5\2\uffff\1\5",
            "",
            "\1\3\1\4"
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_60;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "()* loopback of 4936:3: ( (lv_ownedRelationship_7_0= rulePrefixMetadataMember ) )*";
        }
    }
    static final String dfa_66s = "\1\10\2\20\2\uffff\1\10";
    static final String dfa_67s = "\1\11\2\161\2\uffff\1\11";
    static final String dfa_68s = "\3\uffff\1\2\1\1\1\uffff";
    static final String[] dfa_69s = {
            "\1\1\1\2",
            "\2\4\3\uffff\1\4\14\uffff\1\5\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\3",
            "\2\4\3\uffff\1\4\14\uffff\1\5\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\3",
            "",
            "",
            "\1\1\1\2"
    };
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_41;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "5236:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] )";
        }
    }
    static final String dfa_70s = "\24\uffff";
    static final String dfa_71s = "\1\20\1\uffff\1\10\1\105\6\10\2\0\1\10\6\0\1\uffff";
    static final String dfa_72s = "\1\143\1\uffff\1\11\1\105\6\11\2\0\1\11\6\0\1\uffff";
    static final String dfa_73s = "\1\uffff\1\2\21\uffff\1\1";
    static final String dfa_74s = "\12\uffff\1\0\1\4\1\uffff\1\3\1\7\1\1\1\5\1\6\1\2\1\uffff}>";
    static final String[] dfa_75s = {
            "\2\1\3\uffff\1\1\25\uffff\1\4\3\uffff\4\1\16\uffff\4\1\1\uffff\2\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\5\uffff\3\1\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1",
            "",
            "\1\12\1\13",
            "\1\14",
            "\1\15\1\16",
            "\1\15\1\16",
            "\1\17\1\20",
            "\1\17\1\20",
            "\1\21\1\22",
            "\1\21\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\12\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "()+ loopback of 5388:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA121_10 = input.LA(1);

                         
                        int index121_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA121_15 = input.LA(1);

                         
                        int index121_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA121_18 = input.LA(1);

                         
                        int index121_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_18);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA121_13 = input.LA(1);

                         
                        int index121_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA121_11 = input.LA(1);

                         
                        int index121_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA121_16 = input.LA(1);

                         
                        int index121_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA121_17 = input.LA(1);

                         
                        int index121_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA121_14 = input.LA(1);

                         
                        int index121_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index121_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 121, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_76s = "\36\uffff";
    static final String dfa_77s = "\15\uffff\1\32\20\uffff";
    static final String dfa_78s = "\1\106\1\5\1\uffff\4\44\1\6\2\44\2\42\1\5\1\20\2\44\1\10\4\44\1\6\2\44\2\42\1\uffff\2\44\1\10";
    static final String dfa_79s = "\1\130\1\161\1\uffff\3\131\1\161\1\7\4\131\1\161\1\143\2\131\1\11\3\44\1\161\1\7\4\44\1\uffff\2\44\1\11";
    static final String dfa_80s = "\2\uffff\1\2\27\uffff\1\1\3\uffff";
    static final String dfa_81s = "\36\uffff}>";
    static final String[] dfa_82s = {
            "\2\2\20\uffff\1\1",
            "\1\5\1\6\1\10\1\12\1\13\27\uffff\1\11\113\uffff\1\3\1\4\2\uffff\1\7",
            "",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14\27\uffff\1\7",
            "\1\16\1\17",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\20\1\uffff\1\15\64\uffff\1\14",
            "\1\20\1\uffff\1\15\64\uffff\1\14",
            "\1\23\1\24\1\26\1\30\1\31\27\uffff\1\27\113\uffff\1\21\1\22\2\uffff\1\25",
            "\2\32\3\uffff\1\32\25\uffff\1\32\3\uffff\4\32\16\uffff\4\32\1\uffff\2\2\7\32\5\uffff\3\32\10\uffff\1\32\3\uffff\1\32",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\12\1\13",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15\114\uffff\1\25",
            "\1\33\1\34",
            "\1\15",
            "\1\15",
            "\1\35\1\uffff\1\15",
            "\1\35\1\uffff\1\15",
            "",
            "\1\15",
            "\1\15",
            "\1\30\1\31"
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "5468:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )";
        }
    }
    static final String[] dfa_83s = {
            "\1\1\1\2",
            "\1\3\40\uffff\1\5\55\uffff\1\4",
            "\1\3\40\uffff\1\5\55\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "6026:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_84s = {
            "\1\1\1\2",
            "\2\5\20\uffff\1\4\116\uffff\1\3",
            "\2\5\20\uffff\1\4\116\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_41;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "6068:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_85s = {
            "\1\1\1\2",
            "\2\4\3\uffff\1\4\14\uffff\1\3\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\2\4\3\uffff\1\4\14\uffff\1\3\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA143 extends DFA {

        public DFA143(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 143;
            this.eot = dfa_37;
            this.eof = dfa_45;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "6135:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_86s = {
            "\1\1\1\2",
            "\2\5\3\uffff\2\5\13\uffff\1\3\10\uffff\1\5\3\uffff\4\5\16\uffff\4\5\1\uffff\11\5\5\uffff\3\5\1\uffff\1\5\6\uffff\1\5\3\uffff\1\5\15\uffff\1\4",
            "\2\5\3\uffff\2\5\13\uffff\1\3\10\uffff\1\5\3\uffff\4\5\16\uffff\4\5\1\uffff\11\5\5\uffff\3\5\1\uffff\1\5\6\uffff\1\5\3\uffff\1\5\15\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_37;
            this.eof = dfa_49;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "6431:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_87s = {
            "\1\1\1\2",
            "\1\3\10\uffff\1\4\36\uffff\1\4\46\uffff\1\5",
            "\1\3\10\uffff\1\4\36\uffff\1\4\46\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "6510:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_88s = {
            "\1\1\1\2",
            "\2\4\20\uffff\1\3\116\uffff\1\5",
            "\2\4\20\uffff\1\3\116\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "6559:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_89s = "\1\uffff\2\3\3\uffff";
    static final String[] dfa_90s = {
            "\1\1\1\2",
            "\2\3\3\uffff\2\3\13\uffff\1\4\10\uffff\1\3\3\uffff\4\3\16\uffff\4\3\1\uffff\11\3\5\uffff\3\3\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\15\uffff\1\5",
            "\2\3\3\uffff\2\3\13\uffff\1\4\10\uffff\1\3\3\uffff\4\3\16\uffff\4\3\1\uffff\11\3\5\uffff\3\3\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\15\uffff\1\5",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_37;
            this.eof = dfa_89;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_55;
            this.special = dfa_41;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "6626:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_91s = {
            "\1\1\1\2",
            "\2\4\2\uffff\3\4\13\uffff\1\3\10\uffff\1\4\3\uffff\4\4\16\uffff\4\4\1\uffff\11\4\5\uffff\3\4\1\uffff\1\4\6\uffff\2\4\2\uffff\2\4\14\uffff\1\5",
            "\2\4\2\uffff\3\4\13\uffff\1\3\10\uffff\1\4\3\uffff\4\4\16\uffff\4\4\1\uffff\11\4\5\uffff\3\4\1\uffff\1\4\6\uffff\2\4\2\uffff\2\4\14\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_37;
            this.eof = dfa_45;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "6681:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_92s = {
            "\1\1\1\2",
            "\1\3\52\uffff\2\5\42\uffff\1\4",
            "\1\3\52\uffff\2\5\42\uffff\1\4",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA159 extends DFA {

        public DFA159(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 159;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "6760:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "6809:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_93s = {
            "\1\1\1\2",
            "\2\4\3\uffff\2\4\13\uffff\1\3\10\uffff\1\4\3\uffff\4\4\16\uffff\4\4\1\uffff\11\4\5\uffff\3\4\1\uffff\1\4\6\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\2\4\3\uffff\2\4\13\uffff\1\3\10\uffff\1\4\3\uffff\4\4\16\uffff\4\4\1\uffff\11\4\5\uffff\3\4\1\uffff\1\4\6\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_93 = unpackEncodedStringArray(dfa_93s);

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_37;
            this.eof = dfa_45;
            this.min = dfa_43;
            this.max = dfa_39;
            this.accept = dfa_46;
            this.special = dfa_41;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "6876:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_94s = "\1\127\2\10\2\53\2\uffff\2\16\1\10\2\53";
    static final String dfa_95s = "\1\127\1\130\1\11\2\130\2\uffff\2\16\3\130";
    static final String dfa_96s = "\5\uffff\1\2\1\1\5\uffff";
    static final String[] dfa_97s = {
            "\1\1",
            "\1\3\1\4\3\uffff\1\2\35\uffff\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\7\1\10",
            "\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\6\36\uffff\1\6\15\uffff\1\5",
            "",
            "",
            "\1\11",
            "\1\11",
            "\1\12\1\13\41\uffff\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\6\36\uffff\1\6\15\uffff\1\5"
    };
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_5;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "7523:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )";
        }
    }
    static final String dfa_98s = "\u0314\uffff";
    static final String dfa_99s = "\3\10\2\20\1\10\1\105\6\10\1\5\2\20\2\10\2\uffff\2\16\1\10\1\105\6\10\1\5\2\20\2\10\1\25\4\10\1\103\1\105\2\20\1\10\6\20\4\44\1\6\2\44\2\42\1\20\1\10\1\105\6\10\3\20\1\10\2\20\1\10\6\20\4\44\1\6\2\44\2\42\1\20\1\10\1\105\6\10\3\20\1\10\10\20\5\10\1\5\2\20\1\10\1\105\16\10\1\5\1\20\2\44\1\10\2\20\1\10\6\20\1\10\2\20\2\10\1\5\3\10\1\5\2\20\1\10\1\105\11\10\1\5\5\10\1\5\1\20\2\44\1\10\2\20\1\10\6\20\1\10\2\20\13\10\10\20\4\44\1\6\2\44\2\42\1\20\1\10\1\105\6\10\3\20\1\10\20\20\4\44\1\6\2\44\2\42\13\10\2\20\4\44\1\6\2\44\2\42\4\20\4\44\1\6\2\44\2\42\1\20\1\10\1\105\6\10\3\20\1\10\12\20\4\44\1\6\2\44\2\42\6\20\4\44\1\6\2\44\2\42\16\10\16\20\7\10\1\5\1\20\2\44\1\10\2\20\1\10\6\20\22\10\2\44\1\10\16\20\2\10\1\5\1\20\2\44\4\10\1\5\1\20\2\44\1\10\2\20\1\10\6\20\16\10\1\5\1\20\2\44\5\10\2\44\1\10\22\20\12\10\6\20\4\44\1\6\2\44\2\42\13\10\22\20\12\10\2\20\4\44\1\6\2\44\2\42\2\20\4\44\1\6\2\44\2\42\13\10\20\20\4\44\1\6\2\44\2\42\2\20\15\10\6\20\3\10\2\44\1\10\16\20\14\10\6\20\1\10\2\44\2\10\2\44\1\10\16\20\13\10\2\44\2\10\10\20\15\10\6\20\15\10\6\20\4\10\6\20\3\10\6\20\11\10";
    static final String dfa_100s = "\1\137\1\130\1\11\2\161\1\11\1\105\6\11\1\161\2\137\2\11\2\uffff\2\16\1\11\1\105\6\11\1\161\2\137\2\11\1\25\4\11\1\103\1\105\2\161\1\11\6\161\3\131\1\161\1\7\4\131\1\137\1\11\1\105\6\11\4\137\2\161\1\11\6\161\3\131\1\161\1\7\4\131\1\137\1\11\1\105\6\11\3\137\1\11\10\161\5\11\1\161\2\137\1\11\1\105\16\11\1\161\1\137\2\131\1\11\2\161\1\11\6\161\1\11\2\137\2\11\1\161\3\11\1\161\2\137\1\11\1\105\11\11\1\161\5\11\1\161\1\137\2\131\1\11\2\161\1\11\6\161\1\11\2\161\13\11\2\161\2\137\4\161\3\131\1\161\1\7\4\131\1\137\1\11\1\105\6\11\1\137\2\161\1\11\20\161\3\44\1\161\1\7\4\44\13\11\2\161\3\131\1\161\1\7\4\131\4\161\3\131\1\161\1\7\4\131\1\137\1\11\1\105\6\11\1\137\2\161\1\11\12\161\3\131\1\161\1\7\4\131\6\161\3\44\1\161\1\7\4\44\16\11\16\161\7\11\1\161\1\137\2\131\1\11\2\161\1\11\6\161\22\11\2\44\1\11\16\161\2\11\1\161\1\137\2\131\4\11\1\161\1\137\2\131\1\11\2\161\1\11\6\161\16\11\1\161\1\137\2\131\5\11\2\44\1\11\22\161\12\11\2\161\2\137\2\161\3\44\1\161\1\7\4\44\13\11\22\161\12\11\2\161\3\44\1\161\1\7\4\44\2\161\3\44\1\161\1\7\4\44\13\11\20\161\3\44\1\161\1\7\4\44\2\161\15\11\6\161\3\11\2\44\1\11\16\161\14\11\6\161\1\11\2\44\2\11\2\44\1\11\16\161\13\11\2\44\2\11\10\161\15\11\6\161\15\11\6\161\4\11\6\161\3\11\6\161\11\11";
    static final String dfa_101s = "\22\uffff\1\1\1\2\u0300\uffff";
    static final String dfa_102s = "\u0314\uffff}>";
    static final String[] dfa_103s = {
            "\1\3\1\4\3\uffff\1\2\2\uffff\2\23\3\uffff\1\22\12\uffff\1\1\12\uffff\1\7\1\uffff\1\20\1\21\27\uffff\1\16\1\17\1\5\1\6\1\10\1\11\1\12\1\13\1\14\11\uffff\1\15\6\uffff\1\23",
            "\1\3\1\4\3\uffff\1\2\7\uffff\1\22\25\uffff\1\7\1\uffff\1\20\1\21\27\uffff\1\16\1\17\1\5\1\6\1\10\1\11\1\12\1\13\1\14\11\uffff\1\15",
            "\1\24\1\25",
            "\2\23\2\uffff\2\22\14\uffff\1\22\10\uffff\1\30\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\26\1\27\1\31\1\32\1\33\1\34\1\35\11\uffff\1\36\6\uffff\1\23\21\uffff\1\22",
            "\2\23\2\uffff\2\22\14\uffff\1\22\10\uffff\1\30\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\26\1\27\1\31\1\32\1\33\1\34\1\35\11\uffff\1\36\6\uffff\1\23\21\uffff\1\22",
            "\1\52\1\53",
            "\1\54",
            "\1\55\1\56",
            "\1\55\1\56",
            "\1\57\1\60",
            "\1\57\1\60",
            "\1\61\1\62",
            "\1\61\1\62",
            "\1\65\1\66\1\70\1\72\1\73\27\uffff\1\71\113\uffff\1\63\1\64\2\uffff\1\67",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\74\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\105\1\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\1\106\1\107",
            "\1\106\1\107",
            "",
            "",
            "\1\110",
            "\1\110",
            "\1\111\1\112",
            "\1\113",
            "\1\114\1\115",
            "\1\114\1\115",
            "\1\116\1\117",
            "\1\116\1\117",
            "\1\120\1\121",
            "\1\120\1\121",
            "\1\124\1\125\1\127\1\131\1\132\27\uffff\1\130\113\uffff\1\122\1\123\2\uffff\1\126",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\133\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\144\1\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\145\1\146",
            "\1\145\1\146",
            "\1\147",
            "\1\150\1\151",
            "\1\152\1\153",
            "\1\154\1\155",
            "\1\156\1\157",
            "\1\160",
            "\1\161",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\163\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\162",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\163\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\162",
            "\1\52\1\53",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0081\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0082",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0081\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0082",
            "\2\23\3\uffff\1\22\14\uffff\1\u0083\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0084",
            "\2\23\3\uffff\1\22\14\uffff\1\u0083\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0084",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u0086\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0085",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u0086\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0085",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088\27\uffff\1\67",
            "\1\u008a\1\u008b",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u008c\1\uffff\1\u0089\64\uffff\1\u0088",
            "\1\u008c\1\uffff\1\u0089\64\uffff\1\u0088",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\1\u008d\1\u008e",
            "\1\u008f",
            "\1\u0090\1\u0091",
            "\1\u0090\1\u0091",
            "\1\u0092\1\u0093",
            "\1\u0092\1\u0093",
            "\1\u0094\1\u0095",
            "\1\u0094\1\u0095",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u0096\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u0096\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\1\u0097\1\u0098\6\uffff\2\23\3\uffff\1\22\25\uffff\1\30\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\26\1\27\1\31\1\u0099\1\u009a\1\34\1\35\11\uffff\1\u009b\6\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u009d\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u009c",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u009d\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u009c",
            "\1\111\1\112",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u00ac\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00ab",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u00ac\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00ab",
            "\2\23\2\uffff\2\22\14\uffff\1\u00ae\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u00ad\6\uffff\1\23\21\uffff\1\u00af",
            "\2\23\2\uffff\2\22\14\uffff\1\u00ae\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u00ad\6\uffff\1\23\21\uffff\1\u00af",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u00b1\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00b0",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u00b1\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00b0",
            "\1\u00b4\64\uffff\1\u00b3",
            "\1\u00b4\64\uffff\1\u00b3",
            "\1\u00b4\64\uffff\1\u00b3",
            "\1\u00b4\64\uffff\1\u00b3\27\uffff\1\126",
            "\1\u00b5\1\u00b6",
            "\1\u00b4\64\uffff\1\u00b3",
            "\1\u00b4\64\uffff\1\u00b3",
            "\1\u00b7\1\uffff\1\u00b4\64\uffff\1\u00b3",
            "\1\u00b7\1\uffff\1\u00b4\64\uffff\1\u00b3",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\u00b8\1\u00b9",
            "\1\u00ba",
            "\1\u00bb\1\u00bc",
            "\1\u00bb\1\u00bc",
            "\1\u00bd\1\u00be",
            "\1\u00bd\1\u00be",
            "\1\u00bf\1\u00c0",
            "\1\u00bf\1\u00c0",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u00c1\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u00c1\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\1\u00c2\1\u00c3",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u00c4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u00c4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u00c7\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u00c7\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u00ca\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u00ca\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\14\uffff\1\u00cd\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\2\23\3\uffff\1\22\14\uffff\1\u00cd\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\1\u00cf\1\u00d0",
            "\1\u00d1\1\u00d2",
            "\1\u00d3\1\u00d4",
            "\1\52\1\53",
            "\1\u00d5\1\u00d6",
            "\1\u00d9\1\u00da\1\u00dc\1\u00de\1\u00df\27\uffff\1\u00dd\113\uffff\1\u00d7\1\u00d8\2\uffff\1\u00db",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\u00e0\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00e9\1\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23",
            "\1\u00ea\1\u00eb",
            "\1\u00ec",
            "\1\u00ed\1\u00ee",
            "\1\u00ed\1\u00ee",
            "\1\u00ef\1\u00f0",
            "\1\u00ef\1\u00f0",
            "\1\u00f1\1\u00f2",
            "\1\u00f1\1\u00f2",
            "\1\u00f3\1\u00f4",
            "\1\55\1\56",
            "\1\u00f5\1\u00f6",
            "\1\57\1\60",
            "\1\u00f7\1\u00f8",
            "\1\u00f9\1\u00fa",
            "\1\61\1\62",
            "\1\u00fb\1\u00fc",
            "\1\u00ff\1\u0100\1\u0102\1\u0104\1\u0105\27\uffff\1\u0103\113\uffff\1\u00fd\1\u00fe\2\uffff\1\u0101",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\16\1\17\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\72\1\73",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0106\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0107",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0106\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0107",
            "\1\u008d\1\u008e",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u0109\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u0109\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\14\uffff\1\u010c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\14\uffff\1\u010c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u010f\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0110",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u010f\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0110",
            "\1\106\1\107",
            "\2\23\3\uffff\1\22\25\uffff\1\30\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\26\1\27\1\31\1\u0099\1\u009a\1\34\1\35\11\uffff\1\u009b\6\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\30\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\26\1\27\1\31\1\u0099\1\u009a\1\34\1\35\11\uffff\1\u009b\6\uffff\1\23",
            "\1\u0111\1\u0112",
            "\1\u0111\1\u0112",
            "\1\u0115\1\u0116\1\u0118\1\u011a\1\u011b\27\uffff\1\u0119\113\uffff\1\u0113\1\u0114\2\uffff\1\u0117",
            "\1\u011c\1\u011d",
            "\1\111\1\112",
            "\1\u011e\1\u011f",
            "\1\u0122\1\u0123\1\u0125\1\u0127\1\u0128\27\uffff\1\u0126\113\uffff\1\u0120\1\u0121\2\uffff\1\u0124",
            "\2\23\3\uffff\1\22\25\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\u0129\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u0132\1\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23",
            "\1\u0133\1\u0134",
            "\1\u0135",
            "\1\u0136\1\u0137",
            "\1\u0136\1\u0137",
            "\1\u0138\1\u0139",
            "\1\u0138\1\u0139",
            "\1\u013a\1\u013b",
            "\1\u013a\1\u013b",
            "\1\u013c\1\u013d",
            "\1\u013e\1\u013f",
            "\1\114\1\115",
            "\1\u0142\1\u0143\1\u0145\1\u0147\1\u0148\27\uffff\1\u0146\113\uffff\1\u0140\1\u0141\2\uffff\1\u0144",
            "\1\116\1\117",
            "\1\u0149\1\u014a",
            "\1\u014b\1\u014c",
            "\1\120\1\121",
            "\1\u014d\1\u014e",
            "\1\u0151\1\u0152\1\u0154\1\u0156\1\u0157\27\uffff\1\u0155\113\uffff\1\u014f\1\u0150\2\uffff\1\u0153",
            "\2\23\2\uffff\2\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\u00b4\64\uffff\1\u00b3",
            "\1\u00b4\64\uffff\1\u00b3",
            "\1\131\1\132",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u0158\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0159",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u0158\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0159",
            "\1\u00b8\1\u00b9",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u015b\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u015b\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\14\uffff\1\u015e\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\14\uffff\1\u015e\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0161\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0161\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\1\145\1\146",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u0163\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0164",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u0163\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0164",
            "\1\150\1\151",
            "\1\u0166\1\u0167",
            "\1\u0168\1\u0169",
            "\1\152\1\153",
            "\1\u016a\1\u016b",
            "\1\u016c\1\u016d",
            "\1\154\1\155",
            "\1\u016e\1\u016f",
            "\1\u0170\1\u0171",
            "\1\156\1\157",
            "\1\u0172\1\u0173",
            "\2\23\3\uffff\1\22\14\uffff\1\u0174\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0175",
            "\2\23\3\uffff\1\22\14\uffff\1\u0174\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0175",
            "\2\23\3\uffff\1\22\1\u0176\13\uffff\1\u0177\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u0176\13\uffff\1\u0177\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\u0178\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\162",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\u0178\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\162",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\u0179\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u017a",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\u0179\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u017a",
            "\1\u017c\64\uffff\1\u017b",
            "\1\u017c\64\uffff\1\u017b",
            "\1\u017c\64\uffff\1\u017b",
            "\1\u017c\64\uffff\1\u017b\27\uffff\1\u00db",
            "\1\u017d\1\u017e",
            "\1\u017c\64\uffff\1\u017b",
            "\1\u017c\64\uffff\1\u017b",
            "\1\u017f\1\uffff\1\u017c\64\uffff\1\u017b",
            "\1\u017f\1\uffff\1\u017c\64\uffff\1\u017b",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23",
            "\1\u0180\1\u0181",
            "\1\u0182",
            "\1\u0183\1\u0184",
            "\1\u0183\1\u0184",
            "\1\u0185\1\u0186",
            "\1\u0185\1\u0186",
            "\1\u0187\1\u0188",
            "\1\u0187\1\u0188",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0189\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018a",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0189\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018a",
            "\1\u00ea\1\u00eb",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u018d\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u018d\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\14\uffff\1\u018f\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0190",
            "\2\23\3\uffff\1\22\14\uffff\1\u018f\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0190",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u0192\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0191",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u0192\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0191",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0194\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0195",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0194\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0195",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0196\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0082",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0196\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0082",
            "\2\23\3\uffff\1\22\14\uffff\1\u0197\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0084",
            "\2\23\3\uffff\1\22\14\uffff\1\u0197\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0084",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u0198\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0085",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u0198\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0085",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u0199\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u019a",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u0199\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u019a",
            "\1\u0089",
            "\1\u0089",
            "\1\u0089",
            "\1\u0089\114\uffff\1\u0101",
            "\1\u019b\1\u019c",
            "\1\u0089",
            "\1\u0089",
            "\1\u019d\1\uffff\1\u0089",
            "\1\u019d\1\uffff\1\u0089",
            "\1\u008d\1\u008e",
            "\1\u019e\1\u019f",
            "\1\u01a0\1\u01a1",
            "\1\u0090\1\u0091",
            "\1\u01a2\1\u01a3",
            "\1\u01a4\1\u01a5",
            "\1\u0092\1\u0093",
            "\1\u01a6\1\u01a7",
            "\1\u01a8\1\u01a9",
            "\1\u0094\1\u0095",
            "\1\u01aa\1\u01ab",
            "\2\23\3\uffff\1\22\14\uffff\1\u01ac\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01ad",
            "\2\23\3\uffff\1\22\14\uffff\1\u01ac\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01ad",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae\27\uffff\1\u0117",
            "\1\u01b0\1\u01b1",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01b2\1\uffff\1\u01af\64\uffff\1\u01ae",
            "\1\u01b2\1\uffff\1\u01af\64\uffff\1\u01ae",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u01b3\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u009c",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u01b3\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u009c",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u01b4\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01b5",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u01b4\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01b5",
            "\1\u01b7\64\uffff\1\u01b6",
            "\1\u01b7\64\uffff\1\u01b6",
            "\1\u01b7\64\uffff\1\u01b6",
            "\1\u01b7\64\uffff\1\u01b6\27\uffff\1\u0124",
            "\1\u01b8\1\u01b9",
            "\1\u01b7\64\uffff\1\u01b6",
            "\1\u01b7\64\uffff\1\u01b6",
            "\1\u01ba\1\uffff\1\u01b7\64\uffff\1\u01b6",
            "\1\u01ba\1\uffff\1\u01b7\64\uffff\1\u01b6",
            "\2\23\3\uffff\1\22\25\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23",
            "\1\u01bb\1\u01bc",
            "\1\u01bd",
            "\1\u01be\1\u01bf",
            "\1\u01be\1\u01bf",
            "\1\u01c0\1\u01c1",
            "\1\u01c0\1\u01c1",
            "\1\u01c2\1\u01c3",
            "\1\u01c2\1\u01c3",
            "\2\23\3\uffff\1\22\25\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u01c5\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c4",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u01c5\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c4",
            "\1\u0133\1\u0134",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u01c8\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c9",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u01c8\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c9",
            "\2\23\3\uffff\1\22\14\uffff\1\u01ca\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cb",
            "\2\23\3\uffff\1\22\14\uffff\1\u01ca\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cb",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u01cc\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cd",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u01cc\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cd",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u01cf\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01d0",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u01cf\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01d0",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u01d1\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00ab",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u01d1\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00ab",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2\27\uffff\1\u0144",
            "\1\u01d4\1\u01d5",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d6\1\uffff\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d6\1\uffff\1\u01d3\64\uffff\1\u01d2",
            "\2\23\2\uffff\2\22\14\uffff\1\u01d7\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u00ad\6\uffff\1\23\21\uffff\1\u00af",
            "\2\23\2\uffff\2\22\14\uffff\1\u01d7\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u00ad\6\uffff\1\23\21\uffff\1\u00af",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u01d8\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00b0",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u01d8\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u00b0",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u01d9\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01da",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u01d9\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01da",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b4\114\uffff\1\u0153",
            "\1\u01db\1\u01dc",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u01dd\1\uffff\1\u00b4",
            "\1\u01dd\1\uffff\1\u00b4",
            "\1\u00b8\1\u00b9",
            "\1\u01de\1\u01df",
            "\1\u01e0\1\u01e1",
            "\1\u00bb\1\u00bc",
            "\1\u01e2\1\u01e3",
            "\1\u01e4\1\u01e5",
            "\1\u00bd\1\u00be",
            "\1\u01e6\1\u01e7",
            "\1\u01e8\1\u01e9",
            "\1\u00bf\1\u00c0",
            "\1\u01ea\1\u01eb",
            "\1\u00c2\1\u00c3",
            "\1\u01ec\1\u01ed",
            "\1\u01ee\1\u01ef",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f0\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f0\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u01f3\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u01f3\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u01f4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f5",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u01f4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f5",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f6\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f6\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f8\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f8\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\14\uffff\1\u01f9\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\2\23\3\uffff\1\22\14\uffff\1\u01f9\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\1\u00cf\1\u00d0",
            "\1\u01fa\1\u01fb",
            "\1\u01fc\1\u01fd",
            "\1\u00d1\1\u00d2",
            "\1\u00d3\1\u00d4",
            "\1\u00d5\1\u00d6",
            "\1\u01fe\1\u01ff",
            "\1\u0202\1\u0203\1\u0205\1\u0207\1\u0208\27\uffff\1\u0206\113\uffff\1\u0200\1\u0201\2\uffff\1\u0204",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23",
            "\1\u017c\64\uffff\1\u017b",
            "\1\u017c\64\uffff\1\u017b",
            "\1\u00de\1\u00df",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u0209\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020a",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u0209\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020a",
            "\1\u0180\1\u0181",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u020c\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020e",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u020c\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020e",
            "\2\23\3\uffff\1\22\14\uffff\1\u020f\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0210",
            "\2\23\3\uffff\1\22\14\uffff\1\u020f\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0210",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u0212\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0211",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u0212\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0211",
            "\1\u00ea\1\u00eb",
            "\1\u0214\1\u0215",
            "\1\u0216\1\u0217",
            "\1\u0218\1\u0219",
            "\1\u00ed\1\u00ee",
            "\1\u021a\1\u021b",
            "\1\u00ef\1\u00f0",
            "\1\u021c\1\u021d",
            "\1\u021e\1\u021f",
            "\1\u00f1\1\u00f2",
            "\1\u0220\1\u0221",
            "\1\u00f3\1\u00f4",
            "\1\u0222\1\u0223",
            "\1\u00f5\1\u00f6",
            "\1\u00f7\1\u00f8",
            "\1\u00f9\1\u00fa",
            "\1\u00fb\1\u00fc",
            "\1\u0224\1\u0225",
            "\1\u0089",
            "\1\u0089",
            "\1\u0104\1\u0105",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0226\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0107",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0226\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0107",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0228\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0227",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0228\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0227",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u0229\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022a",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u0229\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022a",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u022b\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u022b\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\14\uffff\1\u022c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\14\uffff\1\u022c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u022d\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022e",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u022d\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022e",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u022f\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0110",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u022f\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0110",
            "\1\u0111\1\u0112",
            "\1\u0230\1\u0231",
            "\1\u0234\1\u0235\1\u0237\1\u0239\1\u023a\27\uffff\1\u0238\113\uffff\1\u0232\1\u0233\2\uffff\1\u0236",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u011a\1\u011b",
            "\1\u011c\1\u011d",
            "\1\u011e\1\u011f",
            "\1\u023b\1\u023c",
            "\1\u023f\1\u0240\1\u0242\1\u0244\1\u0245\27\uffff\1\u0243\113\uffff\1\u023d\1\u023e\2\uffff\1\u0241",
            "\2\23\3\uffff\1\22\25\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23",
            "\1\u01b7\64\uffff\1\u01b6",
            "\1\u01b7\64\uffff\1\u01b6",
            "\1\u0127\1\u0128",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u0247\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u0246",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u0247\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u0246",
            "\1\u01bb\1\u01bc",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u0249\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024b",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u0249\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024b",
            "\2\23\3\uffff\1\22\14\uffff\1\u024c\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024d",
            "\2\23\3\uffff\1\22\14\uffff\1\u024c\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024d",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u024e\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024f",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u024e\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024f",
            "\1\u0251\1\u0252",
            "\1\u0133\1\u0134",
            "\1\u0253\1\u0254",
            "\1\u0255\1\u0256",
            "\1\u0136\1\u0137",
            "\1\u0257\1\u0258",
            "\1\u0138\1\u0139",
            "\1\u0259\1\u025a",
            "\1\u013a\1\u013b",
            "\1\u025b\1\u025c",
            "\1\u025d\1\u025e",
            "\1\u013c\1\u013d",
            "\1\u025f\1\u0260",
            "\1\u013e\1\u013f",
            "\1\u0263\1\u0264\1\u0266\1\u0268\1\u0269\27\uffff\1\u0267\113\uffff\1\u0261\1\u0262\2\uffff\1\u0265",
            "\2\23\2\uffff\2\22\25\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u0147\1\u0148",
            "\1\u0149\1\u014a",
            "\1\u014b\1\u014c",
            "\1\u014d\1\u014e",
            "\1\u026a\1\u026b",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u0156\1\u0157",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026c\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0159",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026c\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0159",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026e\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026d",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026e\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026d",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u026f\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0270",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u026f\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0270",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u0271\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u0271\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\14\uffff\1\u0272\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\14\uffff\1\u0272\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0273\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0273\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0275\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0274",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0275\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0274",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u0276\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0164",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u0276\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0164",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u0277\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0278",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u0277\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0278",
            "\1\u0166\1\u0167",
            "\1\u0279\1\u027a",
            "\1\u0168\1\u0169",
            "\1\u016a\1\u016b",
            "\1\u016c\1\u016d",
            "\1\u027b\1\u027c",
            "\1\u016e\1\u016f",
            "\1\u027d\1\u027e",
            "\1\u0170\1\u0171",
            "\1\u0172\1\u0173",
            "\2\23\3\uffff\1\22\14\uffff\1\u027f\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0175",
            "\2\23\3\uffff\1\22\14\uffff\1\u027f\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0175",
            "\2\23\3\uffff\1\22\1\u0176\13\uffff\1\u0280\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u0176\13\uffff\1\u0280\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\u0281\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u017a",
            "\2\23\3\uffff\1\22\1\164\13\uffff\1\u0281\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u017a",
            "\1\u017c",
            "\1\u017c",
            "\1\u017c",
            "\1\u017c\114\uffff\1\u0204",
            "\1\u0282\1\u0283",
            "\1\u017c",
            "\1\u017c",
            "\1\u0284\1\uffff\1\u017c",
            "\1\u0284\1\uffff\1\u017c",
            "\1\u0180\1\u0181",
            "\1\u0285\1\u0286",
            "\1\u0287\1\u0288",
            "\1\u0183\1\u0184",
            "\1\u0289\1\u028a",
            "\1\u028b\1\u028c",
            "\1\u0185\1\u0186",
            "\1\u028d\1\u028e",
            "\1\u028f\1\u0290",
            "\1\u0187\1\u0188",
            "\1\u0291\1\u0292",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0293\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018a",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0293\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018a",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0294\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0295",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0294\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0295",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u0296\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0297",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u0296\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0297",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u0298\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u0298\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\14\uffff\1\u0299\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0190",
            "\2\23\3\uffff\1\22\14\uffff\1\u0299\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0190",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u029a\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0191",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u029a\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0191",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u029b\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u029c",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u029b\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u029c",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u029d\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0195",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u029d\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0195",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u029e\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u019a",
            "\2\23\3\uffff\1\22\1\u0087\13\uffff\1\u029e\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u019a",
            "\1\u019e\1\u019f",
            "\1\u029f\1\u02a0",
            "\1\u01a0\1\u01a1",
            "\1\u01a2\1\u01a3",
            "\1\u02a1\1\u02a2",
            "\1\u01a4\1\u01a5",
            "\1\u01a6\1\u01a7",
            "\1\u01a8\1\u01a9",
            "\1\u02a3\1\u02a4",
            "\1\u01aa\1\u01ab",
            "\2\23\3\uffff\1\22\14\uffff\1\u02a5\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01ad",
            "\2\23\3\uffff\1\22\14\uffff\1\u02a5\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01ad",
            "\1\u01af",
            "\1\u01af",
            "\1\u01af",
            "\1\u01af\114\uffff\1\u0236",
            "\1\u02a6\1\u02a7",
            "\1\u01af",
            "\1\u01af",
            "\1\u02a8\1\uffff\1\u01af",
            "\1\u02a8\1\uffff\1\u01af",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u02a9\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01b5",
            "\2\23\3\uffff\1\22\1\u009e\13\uffff\1\u02a9\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01b5",
            "\1\u01b7",
            "\1\u01b7",
            "\1\u01b7",
            "\1\u01b7\114\uffff\1\u0241",
            "\1\u02aa\1\u02ab",
            "\1\u01b7",
            "\1\u01b7",
            "\1\u02ac\1\uffff\1\u01b7",
            "\1\u02ac\1\uffff\1\u01b7",
            "\1\u02ad\1\u02ae",
            "\1\u01bb\1\u01bc",
            "\1\u02af\1\u02b0",
            "\1\u01be\1\u01bf",
            "\1\u02b1\1\u02b2",
            "\1\u02b3\1\u02b4",
            "\1\u01c0\1\u01c1",
            "\1\u02b5\1\u02b6",
            "\1\u01c2\1\u01c3",
            "\1\u02b7\1\u02b8",
            "\1\u02b9\1\u02ba",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u02bb\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c4",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u02bb\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c4",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u02bc\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u02bc\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u02be\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bf",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u02be\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bf",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u02c0\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c9",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u02c0\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01c9",
            "\2\23\3\uffff\1\22\14\uffff\1\u02c1\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cb",
            "\2\23\3\uffff\1\22\14\uffff\1\u02c1\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cb",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u02c2\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cd",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u02c2\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01cd",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u02c3\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02c4",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u02c3\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02c4",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u02c5\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01d0",
            "\2\23\3\uffff\1\22\1\u00aa\13\uffff\1\u02c5\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01d0",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u01d3\114\uffff\1\u0265",
            "\1\u02c6\1\u02c7",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u02c8\1\uffff\1\u01d3",
            "\1\u02c8\1\uffff\1\u01d3",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u02c9\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01da",
            "\2\23\3\uffff\1\22\1\u00b2\13\uffff\1\u02c9\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u01da",
            "\1\u01de\1\u01df",
            "\1\u02ca\1\u02cb",
            "\1\u01e0\1\u01e1",
            "\1\u01e2\1\u01e3",
            "\1\u02cc\1\u02cd",
            "\1\u01e4\1\u01e5",
            "\1\u01e6\1\u01e7",
            "\1\u01e8\1\u01e9",
            "\1\u02ce\1\u02cf",
            "\1\u01ea\1\u01eb",
            "\1\u01ec\1\u01ed",
            "\1\u01ee\1\u01ef",
            "\1\u02d0\1\u02d1",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u02d2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u02d2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u02d3\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f5",
            "\2\23\3\uffff\1\22\1\u00c9\13\uffff\1\u02d3\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f5",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u02d4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u02d4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\1\u01fa\1\u01fb",
            "\1\u01fc\1\u01fd",
            "\1\u01fe\1\u01ff",
            "\1\u017c",
            "\1\u017c",
            "\1\u0207\1\u0208",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u02d5\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020a",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u02d5\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020a",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u02d6\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d7",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u02d6\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d7",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u02d8\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d9",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u02d8\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d9",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u02da\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020e",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u02da\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u020e",
            "\2\23\3\uffff\1\22\14\uffff\1\u02db\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0210",
            "\2\23\3\uffff\1\22\14\uffff\1\u02db\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0210",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u02dc\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0211",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u02dc\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u0211",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u02dd\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02de",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u02dd\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02de",
            "\1\u0214\1\u0215",
            "\1\u0216\1\u0217",
            "\1\u02df\1\u02e0",
            "\1\u0218\1\u0219",
            "\1\u02e1\1\u02e2",
            "\1\u021a\1\u021b",
            "\1\u021c\1\u021d",
            "\1\u021e\1\u021f",
            "\1\u0220\1\u0221",
            "\1\u02e3\1\u02e4",
            "\1\u0222\1\u0223",
            "\1\u0224\1\u0225",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u02e5\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0227",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u02e5\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0227",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u02e6\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022a",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u02e6\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022a",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u02e7\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022e",
            "\2\23\3\uffff\1\22\1\u010e\13\uffff\1\u02e7\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022e",
            "\1\u0230\1\u0231",
            "\1\u01af",
            "\1\u01af",
            "\1\u0239\1\u023a",
            "\1\u023b\1\u023c",
            "\1\u01b7",
            "\1\u01b7",
            "\1\u0244\1\u0245",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u02e8\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u0246",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u02e8\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u0246",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u02e9\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ea",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u02e9\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ea",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u02eb\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ec",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u02eb\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ec",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u02ed\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024b",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u02ed\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024b",
            "\2\23\3\uffff\1\22\14\uffff\1\u02ee\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024d",
            "\2\23\3\uffff\1\22\14\uffff\1\u02ee\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024d",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u02ef\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024f",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u02ef\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u024f",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u02f0\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02f1",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u02f0\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02f1",
            "\1\u0251\1\u0252",
            "\1\u0253\1\u0254",
            "\1\u02f2\1\u02f3",
            "\1\u0255\1\u0256",
            "\1\u02f4\1\u02f5",
            "\1\u0257\1\u0258",
            "\1\u0259\1\u025a",
            "\1\u025b\1\u025c",
            "\1\u025d\1\u025e",
            "\1\u02f6\1\u02f7",
            "\1\u025f\1\u0260",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u0268\1\u0269",
            "\1\u026a\1\u026b",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u02f8\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026d",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u02f8\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026d",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u02f9\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0270",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u02f9\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0270",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u02fa\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0274",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u02fa\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0274",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u02fb\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0278",
            "\2\23\3\uffff\1\22\1\u0165\13\uffff\1\u02fb\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0278",
            "\1\u0279\1\u027a",
            "\1\u027b\1\u027c",
            "\1\u027d\1\u027e",
            "\1\u0285\1\u0286",
            "\1\u0287\1\u0288",
            "\1\u02fc\1\u02fd",
            "\1\u0289\1\u028a",
            "\1\u02fe\1\u02ff",
            "\1\u028b\1\u028c",
            "\1\u028d\1\u028e",
            "\1\u028f\1\u0290",
            "\1\u0291\1\u0292",
            "\1\u0300\1\u0301",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0302\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0295",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0302\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0295",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u0303\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0297",
            "\2\23\3\uffff\1\22\1\u018c\13\uffff\1\u0303\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u0297",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u0304\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u029c",
            "\2\23\3\uffff\1\22\1\u0193\13\uffff\1\u0304\10\uffff\1\172\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\166\1\167\1\170\1\171\1\173\1\174\1\175\1\176\1\177\11\uffff\1\165\6\uffff\1\23\21\uffff\1\u029c",
            "\1\u029f\1\u02a0",
            "\1\u02a1\1\u02a2",
            "\1\u02a3\1\u02a4",
            "\1\u02ad\1\u02ae",
            "\1\u02af\1\u02b0",
            "\1\u0305\1\u0306",
            "\1\u02b1\1\u02b2",
            "\1\u0307\1\u0308",
            "\1\u02b3\1\u02b4",
            "\1\u02b5\1\u02b6",
            "\1\u02b7\1\u02b8",
            "\1\u02b9\1\u02ba",
            "\1\u0309\1\u030a",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u030b\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01c6\13\uffff\1\u030b\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u030c\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bf",
            "\2\23\3\uffff\1\22\1\u01c7\13\uffff\1\u030c\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02bf",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u030d\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02c4",
            "\2\23\3\uffff\1\22\1\u01ce\13\uffff\1\u030d\10\uffff\1\u00a4\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\u00a9\11\uffff\1\u009f\6\uffff\1\23\21\uffff\1\u02c4",
            "\1\u02ca\1\u02cb",
            "\1\u02cc\1\u02cd",
            "\1\u02ce\1\u02cf",
            "\1\u02d0\1\u02d1",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u030e\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d7",
            "\2\23\3\uffff\1\22\1\u020b\13\uffff\1\u030e\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d7",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u030f\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d9",
            "\2\23\3\uffff\1\22\1\u020d\13\uffff\1\u030f\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02d9",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u0310\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02de",
            "\2\23\3\uffff\1\22\1\u0213\13\uffff\1\u0310\10\uffff\1\u00e3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00e1\1\u00e2\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\20\uffff\1\23\21\uffff\1\u02de",
            "\1\u02df\1\u02e0",
            "\1\u02e1\1\u02e2",
            "\1\u02e3\1\u02e4",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u0311\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ea",
            "\2\23\3\uffff\1\22\1\u0248\13\uffff\1\u0311\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ea",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u0312\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ec",
            "\2\23\3\uffff\1\22\1\u024a\13\uffff\1\u0312\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02ec",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u0313\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02f1",
            "\2\23\3\uffff\1\22\1\u0250\13\uffff\1\u0313\10\uffff\1\u012c\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u012a\1\u012b\1\u012d\1\u012e\1\u012f\1\u0130\1\u0131\20\uffff\1\23\21\uffff\1\u02f1",
            "\1\u02f2\1\u02f3",
            "\1\u02f4\1\u02f5",
            "\1\u02f6\1\u02f7",
            "\1\u02fc\1\u02fd",
            "\1\u02fe\1\u02ff",
            "\1\u0300\1\u0301",
            "\1\u0305\1\u0306",
            "\1\u0307\1\u0308",
            "\1\u0309\1\u030a"
    };

    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "8192:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )";
        }
    }
    static final String dfa_104s = "\u0087\uffff";
    static final String dfa_105s = "\2\10\1\uffff\2\24\1\uffff\2\24\2\10\1\5\1\uffff\2\10\1\5\2\24\4\44\1\6\2\44\2\42\2\24\4\44\1\6\2\44\2\42\2\10\2\5\1\24\2\44\3\10\2\5\1\24\2\44\1\10\2\24\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\2\24\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\1\10\1\5\1\24\2\44\1\10\2\44\2\10\1\5\1\24\2\44\1\10\2\44\1\10\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\2\44\1\10\2\44\1\10";
    static final String dfa_106s = "\2\130\1\uffff\2\161\1\uffff\2\161\2\11\1\161\1\uffff\2\11\3\161\3\131\1\161\1\7\4\131\2\161\3\131\1\161\1\7\4\131\2\11\2\161\1\116\2\131\3\11\2\161\1\116\2\131\1\11\2\161\3\131\1\161\1\7\4\131\3\44\1\161\1\7\4\44\2\161\3\131\1\161\1\7\4\131\3\44\1\161\1\7\4\44\1\11\1\161\1\116\2\131\1\11\2\44\2\11\1\161\1\116\2\131\1\11\2\44\1\11\3\44\1\161\1\7\7\44\1\161\1\7\6\44\1\11\2\44\1\11";
    static final String dfa_107s = "\2\uffff\1\1\2\uffff\1\2\5\uffff\1\3\173\uffff";
    static final String dfa_108s = "\u0087\uffff}>";
    static final String[] dfa_109s = {
            "\1\3\1\4\3\uffff\1\2\7\uffff\1\2\12\uffff\1\1\12\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2",
            "\1\6\1\7\3\uffff\1\2\7\uffff\1\5\25\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2",
            "",
            "\1\13\1\2\14\uffff\1\13\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\10\1\11\2\2\11\uffff\1\12\30\uffff\1\13",
            "\1\13\1\2\14\uffff\1\13\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\10\1\11\2\2\11\uffff\1\12\30\uffff\1\13",
            "",
            "\1\5\1\2\14\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\14\1\15\2\2\11\uffff\1\16\30\uffff\1\5",
            "\1\5\1\2\14\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\14\1\15\2\2\11\uffff\1\16\30\uffff\1\5",
            "\1\17\1\20",
            "\1\17\1\20",
            "\1\23\1\24\1\26\1\30\1\31\27\uffff\1\27\113\uffff\1\21\1\22\2\uffff\1\25",
            "",
            "\1\32\1\33",
            "\1\32\1\33",
            "\1\36\1\37\1\41\1\43\1\44\27\uffff\1\42\113\uffff\1\34\1\35\2\uffff\1\40",
            "\1\13\1\2\14\uffff\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\47\30\uffff\1\46",
            "\1\13\1\2\14\uffff\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\47\30\uffff\1\46",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50\27\uffff\1\25",
            "\1\52\1\53",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\5\1\2\14\uffff\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\57\30\uffff\1\56",
            "\1\5\1\2\14\uffff\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\57\30\uffff\1\56",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60\27\uffff\1\40",
            "\1\62\1\63",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\17\1\20",
            "\1\65\1\66",
            "\1\71\1\72\1\74\1\76\1\77\27\uffff\1\75\113\uffff\1\67\1\70\2\uffff\1\73",
            "\1\102\1\103\1\105\1\107\1\110\27\uffff\1\106\113\uffff\1\100\1\101\2\uffff\1\104",
            "\1\13\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\30\1\31",
            "\1\32\1\33",
            "\1\111\1\112",
            "\1\115\1\116\1\120\1\122\1\123\27\uffff\1\121\113\uffff\1\113\1\114\2\uffff\1\117",
            "\1\126\1\127\1\131\1\133\1\134\27\uffff\1\132\113\uffff\1\124\1\125\2\uffff\1\130",
            "\1\5\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\43\1\44",
            "\1\13\1\2\14\uffff\1\135\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\47\30\uffff\1\46",
            "\1\13\1\2\14\uffff\1\135\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\47\30\uffff\1\46",
            "\1\137\64\uffff\1\136",
            "\1\137\64\uffff\1\136",
            "\1\137\64\uffff\1\136",
            "\1\137\64\uffff\1\136\27\uffff\1\73",
            "\1\140\1\141",
            "\1\137\64\uffff\1\136",
            "\1\137\64\uffff\1\136",
            "\1\142\1\uffff\1\137\64\uffff\1\136",
            "\1\142\1\uffff\1\137\64\uffff\1\136",
            "\1\51",
            "\1\51",
            "\1\51",
            "\1\51\114\uffff\1\104",
            "\1\143\1\144",
            "\1\51",
            "\1\51",
            "\1\145\1\uffff\1\51",
            "\1\145\1\uffff\1\51",
            "\1\5\1\2\14\uffff\1\146\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\57\30\uffff\1\56",
            "\1\5\1\2\14\uffff\1\146\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\57\30\uffff\1\56",
            "\1\150\64\uffff\1\147",
            "\1\150\64\uffff\1\147",
            "\1\150\64\uffff\1\147",
            "\1\150\64\uffff\1\147\27\uffff\1\117",
            "\1\151\1\152",
            "\1\150\64\uffff\1\147",
            "\1\150\64\uffff\1\147",
            "\1\153\1\uffff\1\150\64\uffff\1\147",
            "\1\153\1\uffff\1\150\64\uffff\1\147",
            "\1\61",
            "\1\61",
            "\1\61",
            "\1\61\114\uffff\1\130",
            "\1\154\1\155",
            "\1\61",
            "\1\61",
            "\1\156\1\uffff\1\61",
            "\1\156\1\uffff\1\61",
            "\1\65\1\66",
            "\1\161\1\162\1\164\1\166\1\167\27\uffff\1\165\113\uffff\1\157\1\160\2\uffff\1\163",
            "\1\13\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\137\64\uffff\1\136",
            "\1\137\64\uffff\1\136",
            "\1\76\1\77",
            "\1\51",
            "\1\51",
            "\1\107\1\110",
            "\1\111\1\112",
            "\1\172\1\173\1\175\1\177\1\u0080\27\uffff\1\176\113\uffff\1\170\1\171\2\uffff\1\174",
            "\1\5\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\150\64\uffff\1\147",
            "\1\150\64\uffff\1\147",
            "\1\122\1\123",
            "\1\61",
            "\1\61",
            "\1\133\1\134",
            "\1\137",
            "\1\137",
            "\1\137",
            "\1\137\114\uffff\1\163",
            "\1\u0081\1\u0082",
            "\1\137",
            "\1\137",
            "\1\u0083\1\uffff\1\137",
            "\1\u0083\1\uffff\1\137",
            "\1\150",
            "\1\150",
            "\1\150",
            "\1\150\114\uffff\1\174",
            "\1\u0084\1\u0085",
            "\1\150",
            "\1\150",
            "\1\u0086\1\uffff\1\150",
            "\1\u0086\1\uffff\1\150",
            "\1\137",
            "\1\137",
            "\1\166\1\167",
            "\1\150",
            "\1\150",
            "\1\177\1\u0080"
    };

    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[][] dfa_109 = unpackEncodedStringArray(dfa_109s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_104;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "8229:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )?";
        }
    }
    static final String dfa_110s = "\105\uffff";
    static final String dfa_111s = "\2\10\1\uffff\2\20\1\uffff\2\10\1\5\2\20\4\44\1\6\2\44\2\42\2\10\2\5\1\20\2\44\1\10\2\20\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\1\10\1\5\1\20\2\44\1\10\2\44\1\10\4\44\1\6\2\44\2\42\2\44\1\10";
    static final String dfa_112s = "\2\130\1\uffff\2\161\1\uffff\2\11\3\161\3\131\1\161\1\7\4\131\2\11\2\161\1\124\2\131\1\11\2\161\3\131\1\161\1\7\4\131\3\44\1\161\1\7\4\44\1\11\1\161\1\124\2\131\1\11\2\44\1\11\3\44\1\161\1\7\6\44\1\11";
    static final String dfa_113s = "\2\uffff\1\1\2\uffff\1\2\77\uffff";
    static final String dfa_114s = "\105\uffff}>";
    static final String[] dfa_115s = {
            "\1\3\1\4\3\uffff\1\2\2\uffff\2\5\16\uffff\1\1\12\uffff\1\2\1\uffff\2\2\24\uffff\1\5\2\uffff\11\2\11\uffff\1\2",
            "\1\3\1\4\3\uffff\1\2\2\uffff\2\5\31\uffff\1\2\1\uffff\2\2\24\uffff\1\5\2\uffff\11\2\11\uffff\1\2",
            "",
            "\2\2\20\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\4\2\1\uffff\5\2\1\6\1\7\2\2\5\uffff\1\5\3\uffff\1\10\30\uffff\1\5",
            "\2\2\20\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\4\2\1\uffff\5\2\1\6\1\7\2\2\5\uffff\1\5\3\uffff\1\10\30\uffff\1\5",
            "",
            "\1\11\1\12",
            "\1\11\1\12",
            "\1\15\1\16\1\20\1\22\1\23\27\uffff\1\21\113\uffff\1\13\1\14\2\uffff\1\17",
            "\2\2\20\uffff\1\24\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\26\30\uffff\1\25",
            "\2\2\20\uffff\1\24\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\26\30\uffff\1\25",
            "\1\30\64\uffff\1\27",
            "\1\30\64\uffff\1\27",
            "\1\30\64\uffff\1\27",
            "\1\30\64\uffff\1\27\27\uffff\1\17",
            "\1\31\1\32",
            "\1\30\64\uffff\1\27",
            "\1\30\64\uffff\1\27",
            "\1\33\1\uffff\1\30\64\uffff\1\27",
            "\1\33\1\uffff\1\30\64\uffff\1\27",
            "\1\11\1\12",
            "\1\34\1\35",
            "\1\40\1\41\1\43\1\45\1\46\27\uffff\1\44\113\uffff\1\36\1\37\2\uffff\1\42",
            "\1\51\1\52\1\54\1\56\1\57\27\uffff\1\55\113\uffff\1\47\1\50\2\uffff\1\53",
            "\2\2\31\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5",
            "\1\30\64\uffff\1\27",
            "\1\30\64\uffff\1\27",
            "\1\22\1\23",
            "\2\2\20\uffff\1\60\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\26\30\uffff\1\25",
            "\2\2\20\uffff\1\60\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\26\30\uffff\1\25",
            "\1\62\64\uffff\1\61",
            "\1\62\64\uffff\1\61",
            "\1\62\64\uffff\1\61",
            "\1\62\64\uffff\1\61\27\uffff\1\42",
            "\1\63\1\64",
            "\1\62\64\uffff\1\61",
            "\1\62\64\uffff\1\61",
            "\1\65\1\uffff\1\62\64\uffff\1\61",
            "\1\65\1\uffff\1\62\64\uffff\1\61",
            "\1\30",
            "\1\30",
            "\1\30",
            "\1\30\114\uffff\1\53",
            "\1\66\1\67",
            "\1\30",
            "\1\30",
            "\1\70\1\uffff\1\30",
            "\1\70\1\uffff\1\30",
            "\1\34\1\35",
            "\1\73\1\74\1\76\1\100\1\101\27\uffff\1\77\113\uffff\1\71\1\72\2\uffff\1\75",
            "\2\2\31\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5",
            "\1\62\64\uffff\1\61",
            "\1\62\64\uffff\1\61",
            "\1\45\1\46",
            "\1\30",
            "\1\30",
            "\1\56\1\57",
            "\1\62",
            "\1\62",
            "\1\62",
            "\1\62\114\uffff\1\75",
            "\1\102\1\103",
            "\1\62",
            "\1\62",
            "\1\104\1\uffff\1\62",
            "\1\104\1\uffff\1\62",
            "\1\62",
            "\1\62",
            "\1\100\1\101"
    };

    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "8607:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= '=' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'of' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= '=' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) )";
        }
    }
    static final String dfa_116s = "\2\10\1\uffff\2\20\1\uffff\1\5\2\10\4\44\1\6\2\44\2\42\2\20\1\5\1\20\2\44\2\10\1\5\1\10\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\2\20\2\44\1\10\1\5\1\20\2\44\2\10\4\44\1\6\2\44\2\42\2\44\1\10";
    static final String dfa_117s = "\2\143\1\uffff\2\161\1\uffff\1\161\2\11\3\131\1\161\1\7\4\131\3\161\1\144\2\131\2\11\1\161\1\11\3\44\1\161\1\7\4\44\3\131\1\161\1\7\4\131\2\161\2\44\1\11\1\161\1\144\2\131\2\11\3\44\1\161\1\7\6\44\1\11";
    static final String[] dfa_118s = {
            "\1\3\1\4\3\uffff\1\2\2\uffff\2\5\16\uffff\1\1\12\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2\12\uffff\1\5",
            "\1\3\1\4\3\uffff\1\2\2\uffff\2\5\31\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2\12\uffff\1\5",
            "",
            "\2\2\20\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\7\1\10\2\2\11\uffff\1\6\12\uffff\1\2\1\5\14\uffff\1\5",
            "\2\2\20\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\7\1\10\2\2\11\uffff\1\6\12\uffff\1\2\1\5\14\uffff\1\5",
            "",
            "\1\13\1\14\1\16\1\20\1\21\27\uffff\1\17\113\uffff\1\11\1\12\2\uffff\1\15",
            "\1\22\1\23",
            "\1\22\1\23",
            "\1\25\64\uffff\1\24",
            "\1\25\64\uffff\1\24",
            "\1\25\64\uffff\1\24",
            "\1\25\64\uffff\1\24\27\uffff\1\15",
            "\1\26\1\27",
            "\1\25\64\uffff\1\24",
            "\1\25\64\uffff\1\24",
            "\1\30\1\uffff\1\25\64\uffff\1\24",
            "\1\30\1\uffff\1\25\64\uffff\1\24",
            "\2\2\20\uffff\1\31\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\32\12\uffff\1\2\1\5\14\uffff\1\33",
            "\2\2\20\uffff\1\31\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\32\12\uffff\1\2\1\5\14\uffff\1\33",
            "\1\36\1\37\1\41\1\43\1\44\27\uffff\1\42\113\uffff\1\34\1\35\2\uffff\1\40",
            "\2\2\31\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\24\uffff\1\2\1\5",
            "\1\25\64\uffff\1\24",
            "\1\25\64\uffff\1\24",
            "\1\20\1\21",
            "\1\22\1\23",
            "\1\47\1\50\1\52\1\54\1\55\27\uffff\1\53\113\uffff\1\45\1\46\2\uffff\1\51",
            "\1\56\1\57",
            "\1\25",
            "\1\25",
            "\1\25",
            "\1\25\114\uffff\1\40",
            "\1\60\1\61",
            "\1\25",
            "\1\25",
            "\1\62\1\uffff\1\25",
            "\1\62\1\uffff\1\25",
            "\1\64\64\uffff\1\63",
            "\1\64\64\uffff\1\63",
            "\1\64\64\uffff\1\63",
            "\1\64\64\uffff\1\63\27\uffff\1\51",
            "\1\65\1\66",
            "\1\64\64\uffff\1\63",
            "\1\64\64\uffff\1\63",
            "\1\67\1\uffff\1\64\64\uffff\1\63",
            "\1\67\1\uffff\1\64\64\uffff\1\63",
            "\2\2\20\uffff\1\70\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\32\12\uffff\1\2\1\5\14\uffff\1\33",
            "\2\2\20\uffff\1\70\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\32\12\uffff\1\2\1\5\14\uffff\1\33",
            "\1\25",
            "\1\25",
            "\1\43\1\44",
            "\1\73\1\74\1\76\1\100\1\101\27\uffff\1\77\113\uffff\1\71\1\72\2\uffff\1\75",
            "\2\2\31\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\24\uffff\1\2\1\5",
            "\1\64\64\uffff\1\63",
            "\1\64\64\uffff\1\63",
            "\1\54\1\55",
            "\1\56\1\57",
            "\1\64",
            "\1\64",
            "\1\64",
            "\1\64\114\uffff\1\75",
            "\1\102\1\103",
            "\1\64",
            "\1\64",
            "\1\104\1\uffff\1\64",
            "\1\104\1\uffff\1\64",
            "\1\64",
            "\1\64",
            "\1\100\1\101"
    };
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "8804:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] (otherlv_1= 'first' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= 'then' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) )? ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (otherlv_6= 'first' )? ( (lv_ownedRelationship_7_0= ruleConnectorEndMember ) ) otherlv_8= 'then' ( (lv_ownedRelationship_9_0= ruleConnectorEndMember ) ) )? ) )";
        }
    }
    static final String dfa_119s = "\77\uffff";
    static final String dfa_120s = "\4\4\1\uffff\1\5\1\10\2\15\1\10\1\uffff\2\10\4\uffff\4\15\1\5\2\20\4\10\4\15\1\6\4\15\4\10\1\5\1\15\1\6\2\15\1\10\2\20\1\10\4\15\1\6\4\15\1\6\2\15\1\10";
    static final String dfa_121s = "\4\u0099\1\uffff\1\u0093\1\130\2\u0092\1\15\1\uffff\1\11\1\163\4\uffff\2\u0092\2\u008f\1\u0093\2\u0083\2\163\2\11\4\u0092\1\7\4\u0092\2\11\2\163\1\u0093\1\u0092\1\21\2\u0092\1\11\2\u0083\1\11\4\u0092\1\7\4\u0092\1\21\2\u0092\1\11";
    static final String dfa_122s = "\4\uffff\1\6\5\uffff\1\1\2\uffff\1\2\1\3\1\4\1\5\56\uffff";
    static final String dfa_123s = "\77\uffff}>";
    static final String[] dfa_124s = {
            "\1\12\3\4\1\7\1\10\3\uffff\1\15\1\uffff\1\12\1\uffff\2\4\1\12\3\uffff\1\12\1\uffff\4\12\1\16\1\uffff\1\17\1\6\1\4\3\uffff\3\12\1\uffff\1\14\1\12\1\15\1\uffff\1\5\1\15\1\12\3\uffff\1\15\7\12\6\15\1\uffff\1\12\3\uffff\11\15\5\12\3\uffff\1\12\1\15\1\uffff\4\12\1\15\1\4\1\uffff\2\15\2\uffff\1\12\1\15\1\12\1\20\1\15\1\12\2\15\2\4\1\12\1\15\1\4\1\12\1\13\1\11\1\12\2\uffff\1\4\13\uffff\3\4\4\uffff\2\4\3\uffff\1\4\2\uffff\1\4\1\1\1\2\1\3\3\15",
            "\1\12\3\4\1\7\1\10\3\uffff\1\15\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\16\1\uffff\1\17\1\6\1\4\3\uffff\3\12\1\uffff\1\14\1\12\1\15\1\uffff\1\5\1\15\1\12\3\uffff\1\15\7\12\6\15\1\uffff\1\12\3\uffff\11\15\5\12\3\uffff\1\12\1\15\1\uffff\4\12\1\15\1\4\1\uffff\2\15\2\uffff\1\12\1\15\1\12\1\20\1\15\1\12\2\15\2\4\1\12\1\15\1\4\1\12\1\13\1\11\1\12\2\uffff\1\4\13\uffff\3\4\4\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\15",
            "\1\12\3\4\1\7\1\10\3\uffff\1\15\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\16\1\uffff\1\17\1\6\1\4\3\uffff\3\12\1\uffff\1\14\1\12\1\15\1\uffff\1\5\1\15\1\12\3\uffff\1\15\7\12\6\15\1\uffff\1\12\3\uffff\11\15\5\12\3\uffff\1\12\1\15\1\uffff\4\12\1\15\1\4\1\uffff\2\15\2\uffff\1\12\1\15\1\12\1\20\1\15\1\12\2\15\2\4\1\12\1\15\1\4\1\12\1\13\1\11\1\12\2\uffff\1\4\13\uffff\3\4\4\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\15",
            "\1\12\3\4\1\7\1\10\3\uffff\1\15\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\16\1\uffff\1\17\1\6\1\4\3\uffff\3\12\1\uffff\1\14\1\12\1\15\1\uffff\1\5\1\15\1\12\3\uffff\1\15\7\12\6\15\1\uffff\1\12\3\uffff\11\15\5\12\3\uffff\1\12\1\15\1\uffff\4\12\1\15\1\4\1\uffff\2\15\2\uffff\1\12\1\15\1\12\1\20\1\15\1\12\2\15\2\4\1\12\1\15\1\4\1\12\1\13\1\11\1\12\2\uffff\1\4\13\uffff\3\4\4\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\15",
            "",
            "\3\4\1\21\1\22\7\uffff\1\4\16\uffff\2\4\75\uffff\1\4\15\uffff\2\4\2\uffff\1\4\41\uffff\1\4",
            "\1\23\1\24\3\uffff\1\15\35\uffff\1\15\1\uffff\2\15\27\uffff\11\15\11\uffff\1\15",
            "\2\4\1\uffff\2\15\1\4\16\uffff\3\4\7\uffff\1\15\1\uffff\6\15\16\uffff\2\15\1\uffff\1\15\1\uffff\11\15\5\uffff\3\15\1\uffff\1\25\1\4\5\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\27\4\1\uffff\2\4",
            "\2\4\1\uffff\2\15\1\4\16\uffff\3\4\7\uffff\1\15\1\uffff\6\15\16\uffff\2\15\1\uffff\1\15\1\uffff\11\15\5\uffff\3\15\1\uffff\1\25\1\4\5\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\27\4\1\uffff\2\4",
            "\1\26\1\27\3\uffff\1\12",
            "",
            "\1\30\1\31",
            "\2\15\3\uffff\1\15\22\uffff\1\15\11\uffff\1\12\1\15\1\uffff\2\15\12\uffff\1\12\1\uffff\6\15\5\uffff\11\15\11\uffff\1\15\1\uffff\4\12\1\15\2\uffff\2\15\2\uffff\1\12\1\15\1\12\1\uffff\1\15\1\12\2\15\2\uffff\1\12\1\15\1\uffff\1\12\1\32",
            "",
            "",
            "",
            "",
            "\2\4\1\uffff\2\15\1\4\16\uffff\1\4\1\33\1\4\13\uffff\4\15\16\uffff\2\15\1\uffff\1\15\17\uffff\3\15\1\uffff\2\4\5\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\1\uffff\2\15\1\4\16\uffff\1\4\1\33\1\4\13\uffff\4\15\16\uffff\2\15\1\uffff\1\15\17\uffff\3\15\1\uffff\2\4\5\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\1\uffff\2\15\1\4\16\uffff\3\4\7\uffff\1\15\1\uffff\6\15\16\uffff\2\15\1\uffff\1\15\1\uffff\11\15\5\uffff\3\15\1\uffff\1\15\1\4\32\uffff\1\4\4\uffff\16\4\2\uffff\7\4",
            "\2\4\1\uffff\2\15\1\4\16\uffff\3\4\7\uffff\1\15\1\uffff\6\15\16\uffff\2\15\1\uffff\1\15\1\uffff\11\15\5\uffff\3\15\1\uffff\1\15\1\4\32\uffff\1\4\4\uffff\16\4\2\uffff\7\4",
            "\1\36\1\37\1\41\1\43\1\44\7\uffff\1\4\16\uffff\1\4\1\42\13\uffff\1\4\61\uffff\1\4\15\uffff\1\34\1\35\2\uffff\1\40\2\uffff\1\4\3\uffff\1\4\13\uffff\3\4\4\uffff\2\4\3\uffff\1\4\2\uffff\1\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\45\45\uffff\2\12\57\uffff\13\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\45\45\uffff\2\12\57\uffff\13\4",
            "\2\15\3\uffff\1\15\1\uffff\1\12\2\15\1\uffff\1\12\10\uffff\1\12\3\uffff\1\15\1\uffff\1\46\4\uffff\1\12\2\uffff\1\12\1\15\1\uffff\2\15\12\uffff\1\12\6\uffff\1\15\5\uffff\11\15\5\uffff\3\15\1\uffff\1\15\1\uffff\4\12\1\15\2\uffff\2\15\2\uffff\1\12\1\15\1\12\1\uffff\1\15\1\12\2\15\2\uffff\1\12\1\15\1\uffff\1\12\1\13",
            "\2\15\3\uffff\1\15\1\uffff\1\12\2\15\1\uffff\1\12\10\uffff\1\12\3\uffff\1\15\1\uffff\1\46\4\uffff\1\12\2\uffff\1\12\1\15\1\uffff\2\15\12\uffff\1\12\6\uffff\1\15\5\uffff\11\15\5\uffff\3\15\1\uffff\1\15\1\uffff\4\12\1\15\2\uffff\2\15\2\uffff\1\12\1\15\1\12\1\uffff\1\15\1\12\2\15\2\uffff\1\12\1\15\1\uffff\1\12\1\13",
            "\1\47\1\50",
            "\1\21\1\22",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\53\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\1\54\1\55",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\56\1\4\1\52\63\uffff\1\4\1\51\5\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\27\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\56\1\4\1\52\63\uffff\1\4\1\51\5\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\27\4\1\uffff\2\4",
            "\1\57\1\60",
            "\1\30\1\31",
            "\2\15\3\uffff\1\15\2\uffff\2\15\16\uffff\1\15\1\uffff\1\61\7\uffff\1\12\1\15\1\uffff\2\15\12\uffff\1\12\6\uffff\1\15\5\uffff\11\15\5\uffff\3\15\1\uffff\1\15\1\uffff\4\12\1\15\2\uffff\2\15\2\uffff\1\12\1\15\1\12\1\uffff\1\15\1\12\2\15\2\uffff\1\12\1\15\1\uffff\1\12\1\32",
            "\2\15\3\uffff\1\15\2\uffff\2\15\16\uffff\1\15\1\uffff\1\61\7\uffff\1\12\1\15\1\uffff\2\15\12\uffff\1\12\6\uffff\1\15\5\uffff\11\15\5\uffff\3\15\1\uffff\1\15\1\uffff\4\12\1\15\2\uffff\2\15\2\uffff\1\12\1\15\1\12\1\uffff\1\15\1\12\2\15\2\uffff\1\12\1\15\1\uffff\1\12\1\32",
            "\1\64\1\65\1\67\1\71\1\72\7\uffff\1\4\16\uffff\1\4\1\70\13\uffff\1\4\61\uffff\1\4\15\uffff\1\62\1\63\2\uffff\1\66\31\uffff\2\4\3\uffff\1\4\2\uffff\1\4",
            "\2\4\1\uffff\2\15\1\4\16\uffff\1\4\1\uffff\1\4\7\uffff\1\15\3\uffff\4\15\16\uffff\2\15\1\uffff\1\15\1\uffff\11\15\5\uffff\3\15\1\uffff\2\4\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\1\54\1\55\2\4\7\uffff\1\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\1\51\27\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\1\43\1\44",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\45\126\uffff\13\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\45\126\uffff\13\4",
            "\1\47\1\50",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\73\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\1\74\1\75",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\76\1\4\1\52\63\uffff\1\4\6\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\76\1\4\1\52\63\uffff\1\4\6\uffff\1\4\21\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\1\74\1\75\2\4\7\uffff\1\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\52\63\uffff\1\4\30\uffff\1\4\2\uffff\1\4\4\uffff\16\4\2\uffff\7\4\1\uffff\2\4",
            "\1\71\1\72"
    };

    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()* loopback of 9192:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )*";
        }
    }
    static final String dfa_125s = "\74\uffff";
    static final String dfa_126s = "\2\uffff\2\6\33\uffff\1\6\34\uffff";
    static final String dfa_127s = "\1\10\1\uffff\2\20\2\5\1\uffff\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\1\5\1\10\2\44\1\10\1\5\1\20\2\44\1\10\4\44\1\6\2\44\2\42\1\uffff\4\44\1\6\2\44\2\42\2\44\1\10\2\44\1\10";
    static final String dfa_128s = "\1\130\1\uffff\4\161\1\uffff\3\131\1\161\1\7\7\131\1\161\1\7\4\131\1\161\1\116\2\131\1\11\1\161\1\116\2\131\1\11\3\44\1\161\1\7\4\44\1\uffff\3\44\1\161\1\7\6\44\1\11\2\44\1\11";
    static final String dfa_129s = "\1\uffff\1\1\4\uffff\1\2\45\uffff\1\3\17\uffff";
    static final String dfa_130s = "\74\uffff}>";
    static final String[] dfa_131s = {
            "\1\2\1\3\3\uffff\1\1\35\uffff\1\1\32\uffff\11\1\11\uffff\1\4",
            "",
            "\2\6\3\uffff\1\6\14\uffff\1\6\10\uffff\1\1\32\uffff\11\1\11\uffff\1\5\30\uffff\1\6",
            "\2\6\3\uffff\1\6\14\uffff\1\6\10\uffff\1\1\32\uffff\11\1\11\uffff\1\5\30\uffff\1\6",
            "\1\11\1\12\1\14\1\16\1\17\27\uffff\1\15\113\uffff\1\7\1\10\2\uffff\1\13",
            "\1\22\1\23\1\25\1\27\1\30\27\uffff\1\26\113\uffff\1\20\1\21\2\uffff\1\24",
            "",
            "\1\32\64\uffff\1\31",
            "\1\32\64\uffff\1\31",
            "\1\32\64\uffff\1\31",
            "\1\32\64\uffff\1\31\27\uffff\1\13",
            "\1\33\1\34",
            "\1\32\64\uffff\1\31",
            "\1\32\64\uffff\1\31",
            "\1\35\1\uffff\1\32\64\uffff\1\31",
            "\1\35\1\uffff\1\32\64\uffff\1\31",
            "\1\37\64\uffff\1\36",
            "\1\37\64\uffff\1\36",
            "\1\37\64\uffff\1\36",
            "\1\37\64\uffff\1\36\27\uffff\1\24",
            "\1\40\1\41",
            "\1\37\64\uffff\1\36",
            "\1\37\64\uffff\1\36",
            "\1\42\1\uffff\1\37\64\uffff\1\36",
            "\1\42\1\uffff\1\37\64\uffff\1\36",
            "\1\45\1\46\1\50\1\52\1\53\27\uffff\1\51\113\uffff\1\43\1\44\2\uffff\1\47",
            "\2\54\41\uffff\1\1\32\uffff\11\1",
            "\1\32\64\uffff\1\31",
            "\1\32\64\uffff\1\31",
            "\1\16\1\17",
            "\1\57\1\60\1\62\1\64\1\65\27\uffff\1\63\113\uffff\1\55\1\56\2\uffff\1\61",
            "\2\6\3\uffff\1\6\25\uffff\1\1\32\uffff\11\1",
            "\1\37\64\uffff\1\36",
            "\1\37\64\uffff\1\36",
            "\1\27\1\30",
            "\1\32",
            "\1\32",
            "\1\32",
            "\1\32\114\uffff\1\47",
            "\1\66\1\67",
            "\1\32",
            "\1\32",
            "\1\70\1\uffff\1\32",
            "\1\70\1\uffff\1\32",
            "",
            "\1\37",
            "\1\37",
            "\1\37",
            "\1\37\114\uffff\1\61",
            "\1\71\1\72",
            "\1\37",
            "\1\37",
            "\1\73\1\uffff\1\37",
            "\1\73\1\uffff\1\37",
            "\1\32",
            "\1\32",
            "\1\52\1\53",
            "\1\37",
            "\1\37",
            "\1\64\1\65"
    };

    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[][] dfa_131 = unpackEncodedStringArray(dfa_131s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_125;
            this.eof = dfa_126;
            this.min = dfa_127;
            this.max = dfa_128;
            this.accept = dfa_129;
            this.special = dfa_130;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "10097:2: ( ( (this_Identification_0= ruleIdentification[$current] )? this_ItemFeatureSpecializationPart_1= ruleItemFeatureSpecializationPart[$current] (this_ValuePart_2= ruleValuePart[$current] )? ) | ( ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_5_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_6_0= ruleOwnedFeatureTyping ) ) ) )";
        }
    }
    static final String dfa_132s = "\1\1\23\uffff";
    static final String dfa_133s = "\1\130\1\uffff\1\11\1\105\6\11\2\0\1\11\6\0\1\uffff";
    static final String dfa_134s = "\12\uffff\1\2\1\6\1\uffff\1\7\1\3\1\1\1\5\1\4\1\0\1\uffff}>";
    static final String[] dfa_135s = {
            "\2\1\3\uffff\1\1\25\uffff\1\4\32\uffff\2\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\5\uffff\3\1\1\uffff\1\1",
            "",
            "\1\12\1\13",
            "\1\14",
            "\1\15\1\16",
            "\1\15\1\16",
            "\1\17\1\20",
            "\1\17\1\20",
            "\1\21\1\22",
            "\1\21\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\12\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[][] dfa_135 = unpackEncodedStringArray(dfa_135s);

    class DFA209 extends DFA {

        public DFA209(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 209;
            this.eot = dfa_70;
            this.eof = dfa_132;
            this.min = dfa_71;
            this.max = dfa_133;
            this.accept = dfa_73;
            this.special = dfa_134;
            this.transition = dfa_135;
        }
        public String getDescription() {
            return "()+ loopback of 10233:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA209_18 = input.LA(1);

                         
                        int index209_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_18);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA209_15 = input.LA(1);

                         
                        int index209_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA209_10 = input.LA(1);

                         
                        int index209_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA209_14 = input.LA(1);

                         
                        int index209_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA209_17 = input.LA(1);

                         
                        int index209_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_17);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA209_16 = input.LA(1);

                         
                        int index209_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA209_11 = input.LA(1);

                         
                        int index209_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA209_13 = input.LA(1);

                         
                        int index209_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 209, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_136s = "\3\uffff\1\1\1\2\1\uffff";
    static final String[] dfa_137s = {
            "\1\1\1\2",
            "\2\4\2\uffff\1\4\15\uffff\1\5\116\uffff\1\3",
            "\2\4\2\uffff\1\4\15\uffff\1\5\116\uffff\1\3",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA214 extends DFA {

        public DFA214(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 214;
            this.eot = dfa_37;
            this.eof = dfa_45;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_136;
            this.special = dfa_41;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "10356:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )?";
        }
    }
    static final String dfa_138s = "\12\uffff";
    static final String dfa_139s = "\3\uffff\1\7\1\uffff\2\7\3\uffff";
    static final String dfa_140s = "\1\10\2\42\2\10\2\20\2\uffff\1\10";
    static final String dfa_141s = "\1\11\2\161\2\11\2\161\2\uffff\1\11";
    static final String dfa_142s = "\7\uffff\1\1\1\2\1\uffff";
    static final String dfa_143s = "\12\uffff}>";
    static final String[] dfa_144s = {
            "\1\1\1\2",
            "\1\4\116\uffff\1\3",
            "\1\4\116\uffff\1\3",
            "\1\5\1\6",
            "\1\1\1\2",
            "\2\7\2\uffff\1\7\15\uffff\1\11\116\uffff\1\10",
            "\2\7\2\uffff\1\7\15\uffff\1\11\116\uffff\1\10",
            "",
            "",
            "\1\5\1\6"
    };

    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[][] dfa_144 = unpackEncodedStringArray(dfa_144s);

    class DFA215 extends DFA {

        public DFA215(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 215;
            this.eot = dfa_138;
            this.eof = dfa_139;
            this.min = dfa_140;
            this.max = dfa_141;
            this.accept = dfa_142;
            this.special = dfa_143;
            this.transition = dfa_144;
        }
        public String getDescription() {
            return "10412:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )";
        }
    }
    static final String dfa_145s = "\7\uffff\1\2\1\1\1\uffff";
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);

    class DFA216 extends DFA {

        public DFA216(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 216;
            this.eot = dfa_138;
            this.eof = dfa_139;
            this.min = dfa_140;
            this.max = dfa_141;
            this.accept = dfa_145;
            this.special = dfa_143;
            this.transition = dfa_144;
        }
        public String getDescription() {
            return "()+ loopback of 10474:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+";
        }
    }
    static final String dfa_146s = "\2\uffff\2\1\3\uffff";
    static final String dfa_147s = "\1\5\1\uffff\2\15\1\uffff\1\10\1\uffff";
    static final String dfa_148s = "\1\u0093\1\uffff\2\u0092\1\uffff\1\11\1\uffff";
    static final String dfa_149s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String[] dfa_150s = {
            "\3\1\1\2\1\3\7\uffff\1\1\16\uffff\2\1\13\uffff\1\1\61\uffff\1\1\15\uffff\2\1\2\uffff\1\1\2\uffff\1\4\17\uffff\3\4\4\uffff\2\1\3\uffff\1\1\2\uffff\1\1",
            "",
            "\2\1\1\uffff\3\1\2\uffff\2\1\12\uffff\1\1\1\5\2\1\36\uffff\1\1\24\uffff\2\1\5\uffff\2\1\20\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\16\1\2\6\7\1\1\uffff\2\1",
            "\2\1\1\uffff\3\1\2\uffff\2\1\12\uffff\1\1\1\5\2\1\36\uffff\1\1\24\uffff\2\1\5\uffff\2\1\20\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\16\1\2\6\7\1\1\uffff\2\1",
            "",
            "\1\2\1\3",
            ""
    };
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final char[] dfa_148 = DFA.unpackEncodedStringToUnsignedChars(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[][] dfa_150 = unpackEncodedStringArray(dfa_150s);

    class DFA239 extends DFA {

        public DFA239(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 239;
            this.eot = dfa_60;
            this.eof = dfa_146;
            this.min = dfa_147;
            this.max = dfa_148;
            this.accept = dfa_149;
            this.special = dfa_64;
            this.transition = dfa_150;
        }
        public String getDescription() {
            return "12551:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) | ( () ( (lv_operand_9_0= ruleMetadataReference ) ) ( (lv_operator_10_0= ruleMetaClassificationOperator ) ) ( (lv_ownedRelationship_11_0= ruleTypeReferenceMember ) ) ) )";
        }
    }
    static final String dfa_151s = "\1\uffff\2\3\4\uffff";
    static final String dfa_152s = "\1\10\2\15\1\uffff\2\10\1\uffff";
    static final String dfa_153s = "\1\11\2\u0092\1\uffff\1\21\1\11\1\uffff";
    static final String dfa_154s = "\3\uffff\1\1\2\uffff\1\2";
    static final String[] dfa_155s = {
            "\1\1\1\2",
            "\2\3\1\uffff\3\3\2\uffff\2\3\12\uffff\1\3\1\5\2\3\36\uffff\1\3\24\uffff\2\3\6\uffff\1\3\20\uffff\1\4\2\uffff\1\3\1\uffff\2\3\1\uffff\16\3\2\uffff\7\3\1\uffff\2\3",
            "\2\3\1\uffff\3\3\2\uffff\2\3\12\uffff\1\3\1\5\2\3\36\uffff\1\3\24\uffff\2\3\6\uffff\1\3\20\uffff\1\4\2\uffff\1\3\1\uffff\2\3\1\uffff\16\3\2\uffff\7\3\1\uffff\2\3",
            "",
            "\2\6\7\uffff\1\3",
            "\1\1\1\2",
            ""
    };
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_60;
            this.eof = dfa_151;
            this.min = dfa_152;
            this.max = dfa_153;
            this.accept = dfa_154;
            this.special = dfa_64;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "14158:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )";
        }
    }
    static final String dfa_156s = "\4\uffff\2\13\6\uffff\2\13\3\uffff\2\13\1\uffff";
    static final String dfa_157s = "\1\5\1\uffff\1\5\1\uffff\2\15\2\uffff\2\10\2\uffff\2\15\1\uffff\2\10\2\15\1\10";
    static final String dfa_158s = "\1\u0093\1\uffff\1\u0093\1\uffff\2\u0092\2\uffff\1\11\1\165\2\uffff\2\u0092\1\uffff\1\11\1\21\2\u0092\1\11";
    static final String dfa_159s = "\1\uffff\1\1\1\uffff\1\2\2\uffff\1\6\1\7\2\uffff\1\5\1\3\2\uffff\1\4\5\uffff";
    static final String dfa_160s = "\24\uffff}>";
    static final String[] dfa_161s = {
            "\3\3\1\4\1\5\7\uffff\1\6\17\uffff\1\3\75\uffff\1\2\15\uffff\2\3\2\uffff\1\3\41\uffff\1\1",
            "",
            "\5\7\7\uffff\1\7\16\uffff\2\7\13\uffff\1\7\61\uffff\1\7\1\1\14\uffff\2\7\2\uffff\1\7\2\uffff\1\7\3\uffff\1\7\13\uffff\3\7\4\uffff\2\7\3\uffff\1\7\2\uffff\1\7",
            "",
            "\2\13\1\uffff\3\13\2\uffff\2\13\12\uffff\1\13\1\10\2\13\36\uffff\1\13\24\uffff\2\13\5\uffff\1\12\1\13\20\uffff\1\11\2\uffff\1\13\1\uffff\2\13\1\uffff\16\13\2\uffff\7\13\1\uffff\2\13",
            "\2\13\1\uffff\3\13\2\uffff\2\13\12\uffff\1\13\1\10\2\13\36\uffff\1\13\24\uffff\2\13\5\uffff\1\12\1\13\20\uffff\1\11\2\uffff\1\13\1\uffff\2\13\1\uffff\16\13\2\uffff\7\13\1\uffff\2\13",
            "",
            "",
            "\1\4\1\5",
            "\1\14\1\15\7\uffff\1\13\143\uffff\1\16",
            "",
            "",
            "\2\13\1\uffff\3\13\2\uffff\2\13\12\uffff\1\13\1\17\2\13\36\uffff\1\13\24\uffff\2\13\5\uffff\1\12\1\13\20\uffff\1\20\2\uffff\1\13\1\uffff\2\13\1\uffff\16\13\2\uffff\7\13\1\uffff\2\13",
            "\2\13\1\uffff\3\13\2\uffff\2\13\12\uffff\1\13\1\17\2\13\36\uffff\1\13\24\uffff\2\13\5\uffff\1\12\1\13\20\uffff\1\20\2\uffff\1\13\1\uffff\2\13\1\uffff\16\13\2\uffff\7\13\1\uffff\2\13",
            "",
            "\1\14\1\15",
            "\1\21\1\22\7\uffff\1\13",
            "\2\13\1\uffff\3\13\2\uffff\2\13\12\uffff\1\13\1\23\2\13\36\uffff\1\13\24\uffff\2\13\5\uffff\1\12\1\13\20\uffff\1\20\2\uffff\1\13\1\uffff\2\13\1\uffff\16\13\2\uffff\7\13\1\uffff\2\13",
            "\2\13\1\uffff\3\13\2\uffff\2\13\12\uffff\1\13\1\23\2\13\36\uffff\1\13\24\uffff\2\13\5\uffff\1\12\1\13\20\uffff\1\20\2\uffff\1\13\1\uffff\2\13\1\uffff\16\13\2\uffff\7\13\1\uffff\2\13",
            "\1\21\1\22"
    };
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[][] dfa_161 = unpackEncodedStringArray(dfa_161s);

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_70;
            this.eof = dfa_156;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_159;
            this.special = dfa_160;
            this.transition = dfa_161;
        }
        public String getDescription() {
            return "14222:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) )";
        }
    }
    static final String dfa_162s = "\1\uffff\1\1\2\uffff\1\3\1\uffff\1\2";
    static final String[] dfa_163s = {
            "\3\1\1\2\1\3\7\uffff\1\1\16\uffff\2\1\13\uffff\1\1\61\uffff\1\1\1\4\14\uffff\2\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\13\uffff\3\1\4\uffff\2\1\3\uffff\1\1\2\uffff\1\1",
            "",
            "\2\1\7\uffff\1\1\12\uffff\1\1\1\5\1\1\60\uffff\1\6\3\uffff\2\1\5\uffff\2\1\20\uffff\1\1\2\uffff\1\1\4\uffff\27\1\1\uffff\2\1",
            "\2\1\7\uffff\1\1\12\uffff\1\1\1\5\1\1\60\uffff\1\6\3\uffff\2\1\5\uffff\2\1\20\uffff\1\1\2\uffff\1\1\4\uffff\27\1\1\uffff\2\1",
            "",
            "\1\2\1\3",
            ""
    };
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[][] dfa_163 = unpackEncodedStringArray(dfa_163s);

    class DFA263 extends DFA {

        public DFA263(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 263;
            this.eot = dfa_60;
            this.eof = dfa_60;
            this.min = dfa_147;
            this.max = dfa_148;
            this.accept = dfa_162;
            this.special = dfa_64;
            this.transition = dfa_163;
        }
        public String getDescription() {
            return "14775:3: (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xFFF0EEE1BE88A312L,0x003D9EE67D8FFFC5L,0x0000000003F00000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000002300L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000002302L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000008000L,0x0008000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000032300L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x000000000E8C0010L,0x0038000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000080000L,0x0008000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000332300L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0xFFF0EEE11E8CA310L,0x003D9EE67D8FFFC5L,0x0000000003F00000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000001002310L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000400010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000002310L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000008002300L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000030000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0xFFF0EEE1BE8CA310L,0x003D9EE67D8FFFC5L,0x0000000003F00000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x07F086E01E888010L,0x003C84A03C8F8004L,0x0000000000700000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xFFF0EEE11E88A310L,0x003D9EE67D8FFFC5L,0x0000000003F00000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000040002300L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000300002300L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000200002300L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x00002003000223E0L,0x0102600080000000L,0x0000000000091800L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000008000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0xFFF0EFE1BE8CA310L,0x003D9EE67D8FFFC5L,0x0000000003F00000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000780100002300L,0x0000000001000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0007F80100002302L,0x0000000001000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0007800000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0xFFF8EEE1BE8CA310L,0x003D9EE67D8FFFC5L,0x0000000003F00000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0020000000002300L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000180000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0080000000002300L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000600000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000800000002300L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0007F80100032300L,0x0000000001000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0007F80000002302L,0x0000000001000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0007F80000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0007F80000000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0400000000002300L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0xF800020000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0xF800000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0xE000000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0xC000000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x8000000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000680100002300L,0x0008000001007FC1L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000680100002300L,0x0000000001007FC1L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000030000L,0x0000000000700000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0007E80100002302L,0x0000000001007FD7L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0007800000000002L,0x0000000000000016L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000080000000002L,0x0000000001007FC0L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000080000000002L,0x0000000000007F00L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000002300L,0x0000000000000004L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000002300L,0x0000000000000008L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000002300L,0x0000000000020000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000002300L,0x0000000000040000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000002300L,0x0000000000080000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0000000000006000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x00002003000223E0L,0x0102600080500000L,0x0000000000091800L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000080000002300L,0x0000000000000400L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000002300L,0x0000000001000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x00000002000023E0L,0x0002600000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000001000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000680100202300L,0x0000000081007FC1L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000680100202300L,0x0000000001007FC1L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000400000L,0x0000000100000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000680100232300L,0x0000000001007FC9L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000680100202302L,0x0000000001007FC9L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000680100232300L,0x0000000801007FC1L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000680100202302L,0x0000000801007FC1L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000680100032300L,0x0000000001707FC1L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000700000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0xFFF8EEE3BE8AA3F0L,0x013FFFE6FD8FFFC5L,0x0000000003F91800L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0xFFF8EEE3BE8AA3F2L,0x013FFFE6FD8FFFC5L,0x0000000003F91800L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0007F80100032300L,0x0000000001707FC1L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0007F80100032300L,0x0000600001707FC1L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000680100232300L,0x0000000001707FC9L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000200002L,0x0000000000700008L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000200002L,0x0000000000000008L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000080000002300L,0x0000000001007FC0L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000200002L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000680100302300L,0x0000000001707FC9L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000680100202300L,0x0000000001707FC9L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000080000000000L,0x0000000000007F00L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000001030000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000001430000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000002300L,0x0000000000006000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000080001030000L,0x0000000001707FC0L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000001030000L,0x0000000000700000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x00002003000223E0L,0x0002600080000000L,0x0000000000091800L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000002L,0x0400000000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000002L,0x1800000000000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000002L,0xC000000000000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000002L,0x0010000000000000L,0x0000000000000070L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L,0x0000000000000070L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000006002L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000200000002L,0x0000000000000000L,0x0000000000006000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000800000002L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000002L,0x0002000001000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000022300L,0x0000000080000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x00002003000223E0L,0x0102600180000000L,0x0000000000091800L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000400000000L});

}